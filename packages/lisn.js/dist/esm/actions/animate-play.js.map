{"version":3,"file":"animate-play.js","names":["MC","iterateAnimations","resetCssAnimationsNow","hasClass","addClassesNow","removeClassesNow","registerAction","AnimatePlay","element","_classCallCheck","_defineProperty","_getMethods","getMethods","_play","_pause","_toggle","animate","PAUSE","undo","S_TOGGLE","_createClass","key","value","register","AnimatePause","_getMethods2","PLAY","TOGGLE","action","isInitial","arguments","length","undefined","animation","isPaused","playState","play","pause","PREFIX_ANIMATE_PAUSE"],"sources":["../../../src/ts/actions/animate-play.ts"],"sourcesContent":["/**\n * @module Actions\n *\n * @categoryDescription Animation\n * {@link AnimatePlay} and {@link AnimatePause} resume or pause all animations\n * on the given element. They work with CSS or Web Animations.\n *\n * {@link Actions.Animate | Animate} plays or reverses all animations on the\n * given element. It works with CSS or Web Animations.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  iterateAnimations,\n  resetCssAnimationsNow,\n} from \"@lisn/utils/animations\";\nimport {\n  hasClass,\n  addClassesNow,\n  removeClassesNow,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Resumes or pauses all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it resets and pauses the animations as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate-play\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Play/pause</button>\n * <div data-lisn-on-click=\"@animate-play +target=#btn\"></div>\n * ```\n *\n * @category Animation\n */\nexport class AnimatePlay implements Action {\n  /**\n   * Resumes the animations without resetting them.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Pauses the animations without resetting them.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Resumes the animations if paused, otherwise pauses them.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate-play\", (element) => new AnimatePlay(element));\n  }\n\n  constructor(element: Element) {\n    const { _play, _pause, _toggle } = getMethods(element);\n\n    // initial state is 0% and paused\n    animate(element, PAUSE, true);\n\n    this.do = _play;\n    this.undo = _pause;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Pauses or resumes all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it plays the animations as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate-pause\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Play/pause</button>\n * <div data-lisn-on-click=\"@animate-pause +target=#btn\"></div>\n * ```\n *\n * @category Animation\n */\nexport class AnimatePause implements Action {\n  /**\n   * Pauses the animations without resetting them.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Resumes the animations without resetting them.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Resumes the animations if paused, otherwise pauses them.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate-pause\", (element) => new AnimatePause(element));\n  }\n\n  constructor(element: Element) {\n    const { _play, _pause, _toggle } = getMethods(element);\n\n    // Initial state is playing\n    _play();\n\n    this.do = _pause;\n    this.undo = _play;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\ntype AnimateAction = typeof PLAY | typeof PAUSE | typeof TOGGLE;\n\nconst PLAY = 0;\nconst PAUSE = 1;\nconst TOGGLE = 2;\n\nconst getMethods = (element: Element) => {\n  return {\n    _play: () => animate(element, PLAY),\n    _pause: () => animate(element, PAUSE),\n    _toggle: () => animate(element, TOGGLE),\n  };\n};\n\nconst animate = (\n  element: Element,\n  action: AnimateAction,\n  isInitial = false,\n) => {\n  return iterateAnimations(\n    element,\n    /* istanbul ignore next */ // jsdom doesn't support Web Animations\n    (animation) => {\n      const isPaused = animation.playState === \"paused\";\n      if (action === PLAY || (isPaused && action === TOGGLE)) {\n        animation.play();\n      } else {\n        animation.pause();\n      }\n    },\n    (element) => {\n      if (isInitial) {\n        resetCssAnimationsNow(element);\n      }\n\n      const isPaused = hasClass(element, MC.PREFIX_ANIMATE_PAUSE);\n      if (action === PLAY || (isPaused && action === TOGGLE)) {\n        removeClassesNow(element, MC.PREFIX_ANIMATE_PAUSE);\n      } else {\n        addClassesNow(element, MC.PREFIX_ANIMATE_PAUSE);\n      }\n    },\n    isInitial,\n  );\n};\n"],"mappings":"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","ignoreList":[]}