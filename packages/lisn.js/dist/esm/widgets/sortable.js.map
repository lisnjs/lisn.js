{"version":3,"file":"sortable.js","names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","from","test","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","Boolean","valueOf","_inherits","_setPrototypeOf","bind","_superPropGet","_get","get","_superPropBase","getOwnPropertyDescriptor","_defineProperty","_toPrimitive","toPrimitive","String","Number","MC","MH","addClasses","removeClasses","getBoolData","setBoolData","unsetBoolData","delData","copyStyle","setNumericStyleProps","moveElement","swapElements","cloneElement","waitForMeasureTime","getVisibleContentChildren","addEventListenerTo","removeEventListenerFrom","preventSelect","undoPreventSelect","toInt","validateString","wrapCallback","Widget","registerWidget","getDefaultWidgetSelector","Sortable","_Widget","element","config","_Sortable$get","_this","destroyPromise","destroy","id","DUMMY_ID","items","lengthOf","querySelectorAll","PREFIX_ITEM__FOR_SELECT","concat","S_DRAGGABLE","usageError","methods","getMethods","promiseResolve","isDestroyed","init","disableItem","_disableItem","enableItem","_enableItem","toggleItem","_toggleItem","isItemDisabled","_isItemDisabled","onMove","_onMove","getItems","currentOrder","undefined","_getSortedItems","instance","isInstanceOf","register","WIDGET_NAME","configValidator","PREFIXED_NAME","prefixName","PREFIX_IS_DRAGGABLE","PREFIX_ITEM","PREFIX_FLOATING_CLONE","mode","touchMoveOptions","passive","capture","isItemDraggable","item","widget","currentDraggedItem","floatingClone","ignoreCancel","grabOffset","setIgnoreCancel","onDragStart","event","currTarget","currentTargetOf","isElement","isMouseEvent","setAttr","isTouchPointerEvent","target","targetOf","releasePointerCapture","pointerId","getDoc","S_TOUCHMOVE","onTouchMove","rect","getBoundingClientRect","clientX","left","clientY","top","onDragEnd","S_POINTERCANCEL","unsetAttr","isTouchEvent","touches","parentEl","parentOf","preventDefault","touch","to","_units","onDragEnter","dragged","S_DRAGENTER","_dragItemOnto","setupEvents","_iterator","_step","S_POINTERDOWN","S_DRAGSTART","S_POINTERENTER","S_DRAGOVER","S_DRAGEND","S_DROP","S_POINTERUP","err","_iterator2","_step2","onEnable","onDisable","_iterator3","_step3","onDestroy","_callee","_iterator4","_step4","_callee$","_context","t0","doSwap","disabledItems","callbacks","newSet","getSortedItems","sort","b","isNodeBAfterA","getOrigItemNumber","itemNum","indexOf","_ref2","_callee2","_args2","_callee2$","_context2","isDisabled","_x","_ref3","_callee3","_args3","_callee3$","_context3","_x2","handler","add","dragItemOnto","_ref4","_callee4","draggedOver","_iterator5","_step5","callback","_callee4$","_context4","ignoreMove","position","_x3","_x4"],"sources":["../../../src/ts/widgets/sortable.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  addClasses,\n  removeClasses,\n  getBoolData,\n  setBoolData,\n  unsetBoolData,\n  delData,\n  copyStyle,\n  setNumericStyleProps,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, swapElements, cloneElement } from \"@lisn/utils/dom-alter\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { toInt } from \"@lisn/utils/math\";\nimport { validateString } from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  WidgetCallback,\n  WidgetHandler,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as a {@link Sortable} widget.\n *\n * The Sortable widget allows the user to reorder elements by dragging and\n * dropping. It works on touch devices as well. However, it does not yet\n * support automatic scrolling when dragging beyond edge of screen on mobile\n * devices. For this, you may want to use\n * {@link https://github.com/SortableJS/Sortable | SortableJS} instead.\n *\n * The widget should have more than one draggable item.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Sortable}\n * widget on a given element. Use {@link Sortable.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on each item element:\n * - `data-lisn-is-draggable`: `\"true\"` or `\"false\"` (false if the item is disabled)\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-sortable` class or `data-lisn-sortable` attribute set on the\n *   container element that constitutes the sortable container\n * - `lisn-sortable-item` class or `data-lisn-sortable-item` attribute set on\n *   elements that should act as the items.\n *\n * When using auto-widgets, the elements that will be used as items are\n * discovered in the following way:\n * 1. The top-level element that constitutes the widget is searched for any\n *    elements that contain the `lisn-sortable-item` class or\n *    `data-lisn-sortable-item` attribute. They do not have to be immediate\n *    children of the root element.\n * 2. If there are no such elements, all of the immediate children of the\n *    widget element (other than `script` and `style` elements) are taken as\n *    the items.\n *\n * @example\n * ```html\n * <div class=\"lisn-sortable\">\n *   <div class=\"box\">Item 1</div>\n *   <div class=\"box\">Item 2</div>\n *   <div class=\"box\">Item 3</div>\n *   <div class=\"box\">Item 4</div>\n * </div>\n * ```\n */\nexport class Sortable extends Widget {\n  /**\n   * Disables the given item number. Note that item numbers start at 1.\n   *\n   * @param {} currentOrder If false (default), the item numbers refer to the\n   *                        original order. If true, they refer to the current\n   *                        document order.\n   */\n  readonly disableItem: (\n    itemNum: number,\n    currentOrder?: boolean,\n  ) => Promise<void>;\n\n  /**\n   * Re-enables the given item number. Note that item numbers start at 1.\n   *\n   * @param {} currentOrder If false (default), the item numbers refer to the\n   *                        original order. If true, they refer to the current\n   *                        document order.\n   */\n  readonly enableItem: (\n    itemNum: number,\n    currentOrder?: boolean,\n  ) => Promise<void>;\n\n  /**\n   * Re-enables the given item number if it is disabled, otherwise disables it.\n   * Note that item numbers start at 1.\n   *\n   * @param {} currentOrder If false (default), the item numbers refer to the\n   *                        original order. If true, they refer to the current\n   *                        document order.\n   */\n  readonly toggleItem: (\n    itemNum: number,\n    currentOrder?: boolean,\n  ) => Promise<void>;\n\n  /**\n   * Returns true if the given item number is disabled. Note that item numbers\n   * start at 1.\n   *\n   * @param {} currentOrder If false (default), the item numbers refer to the\n   *                        original order. If true, they refer to the current\n   *                        document order.\n   */\n  readonly isItemDisabled: (itemNum: number, currentOrder?: boolean) => boolean;\n\n  /**\n   * The given handler will be called whenever the user moves an item to\n   * another position. It will be called after the item is moved so\n   * {@link getItems} called with `currentOrder = true` will return the updated\n   * order.\n   *\n   * If the handler returns a promise, it will be awaited upon.\n   */\n  readonly onMove: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns the item elements.\n   *\n   * @param {} currentOrder If false (default), returns the items in the\n   *                        original order. If true, they are returned in the\n   *                        current document order.\n   */\n  readonly getItems: (currentOrder?: boolean) => Element[];\n\n  static get(element: Element): Sortable | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Sortable)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!Sortable.get(element)) {\n          return new Sortable(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If there are less than 2 items given or found.\n   */\n  constructor(element: Element, config?: SortableConfig) {\n    const destroyPromise = Sortable.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const items = config?.items || [];\n    if (!MH.lengthOf(items)) {\n      items.push(\n        ...MH.querySelectorAll(\n          element,\n          getDefaultWidgetSelector(PREFIX_ITEM__FOR_SELECT),\n        ),\n      );\n\n      if (!MH.lengthOf(items)) {\n        items.push(...MH.querySelectorAll(element, `[${MC.S_DRAGGABLE}]`));\n\n        if (!MH.lengthOf(items)) {\n          items.push(...getVisibleContentChildren(element));\n        }\n      }\n    }\n\n    if (MH.lengthOf(items) < 2) {\n      throw MH.usageError(\"Sortable must have more than 1 item\");\n    }\n\n    const methods = getMethods(this, items, config);\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, element, items, methods);\n    });\n\n    this.disableItem = methods._disableItem;\n    this.enableItem = methods._enableItem;\n    this.toggleItem = methods._toggleItem;\n    this.isItemDisabled = methods._isItemDisabled;\n    this.onMove = methods._onMove;\n\n    this.getItems = (currentOrder = false) =>\n      currentOrder ? methods._getSortedItems() : [...items];\n  }\n}\n\n/**\n * @interface\n */\nexport type SortableConfig = {\n  /**\n   * The elements that will be used as the draggable items.\n   *\n   * The widget should have more than one draggable item.\n   *\n   * If this is not specified, then\n   * 1. The top-level element that constitutes the widget is searched for any\n   *    elements that contain the class `lisn-sortable-item`. They do not\n   *    have to be immediate children of the root element.\n   * 2. If there are no such elements, all of the immediate children of the\n   *    widget element (other than `script` and `style` elements) are taken as\n   *    the items.\n   */\n  items?: Element[];\n\n  /**\n   * Whether to move the dragged item to before/after the drop target, or swap\n   * it with the drop target.\n   *\n   * Note that the moving/swapping action is being done as the user is dragging\n   * as soon as they drag over another item, so in order to achieve a swap\n   * effect, the user needs to be able to drag an item from one location to\n   * another without the path of the mouse crossing over all in-between items.\n   *\n   * @defaultValue \"move\";\n   */\n  mode?: \"move\" | \"swap\";\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"sortable\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_IS_DRAGGABLE = MH.prefixName(\"is-draggable\");\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_ITEM = `${PREFIXED_NAME}__item`;\nconst PREFIX_ITEM__FOR_SELECT = `${PREFIXED_NAME}-item`;\n\nconst PREFIX_FLOATING_CLONE = `${PREFIXED_NAME}__ghost`;\n\n// Only one Sortable widget per element is allowed, but Widget requires a\n// non-blank ID.\n// In fact, it doesn't make much sense to have more than 1 scroll-to-top button\n// on the whole page, but we support it, hence use a class rather than a DOM ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<SortableConfig> = {\n  mode: (key, value) =>\n    validateString(key, value, (v) => v === \"swap\" || v === \"move\"),\n};\n\nconst touchMoveOptions = { passive: false, capture: true };\n\nconst isItemDraggable = (item: Element) =>\n  getBoolData(item, PREFIX_IS_DRAGGABLE);\n\nconst init = (\n  widget: Sortable,\n  element: Element,\n  items: Element[],\n  methods: ReturnType<typeof getMethods>,\n) => {\n  let currentDraggedItem: Element | null = null;\n  let floatingClone: Element | null = null;\n  let ignoreCancel = false;\n  let grabOffset = [0, 0];\n\n  const setIgnoreCancel = () => (ignoreCancel = true);\n\n  const onDragStart = (event: Event) => {\n    const currTarget = MH.currentTargetOf(event);\n\n    if (\n      MH.isElement(currTarget) &&\n      isItemDraggable(currTarget) &&\n      MH.isMouseEvent(event)\n    ) {\n      currentDraggedItem = currTarget;\n      MH.setAttr(currTarget, MC.S_DRAGGABLE);\n\n      if (MH.isTouchPointerEvent(event)) {\n        const target = MH.targetOf(event);\n        if (MH.isElement(target)) {\n          target.releasePointerCapture(event.pointerId);\n        }\n      }\n\n      addEventListenerTo(\n        MH.getDoc(),\n        MC.S_TOUCHMOVE,\n        onTouchMove,\n        touchMoveOptions,\n      );\n\n      waitForMeasureTime().then(() => {\n        // Get pointer offset relative to the current item being dragged\n        // regardless of what the event target is and what transforms is has\n        // applied.\n        const rect = MH.getBoundingClientRect(currTarget);\n        grabOffset = [event.clientX - rect.left, event.clientY - rect.top];\n      });\n    }\n  };\n\n  const onDragEnd = (event: Event) => {\n    if (ignoreCancel && event.type === MC.S_POINTERCANCEL) {\n      ignoreCancel = false;\n      return;\n    }\n\n    if (currentDraggedItem) {\n      MH.unsetAttr(currentDraggedItem, MC.S_DRAGGABLE);\n      currentDraggedItem = null;\n\n      removeEventListenerFrom(\n        MH.getDoc(),\n        MC.S_TOUCHMOVE,\n        onTouchMove,\n        touchMoveOptions,\n      );\n\n      if (floatingClone) {\n        moveElement(floatingClone);\n        floatingClone = null;\n      }\n    }\n  };\n\n  const onTouchMove = (event: Event) => {\n    if (MH.isTouchEvent(event) && MH.lengthOf(event.touches) === 1) {\n      const parentEl = MH.parentOf(currentDraggedItem);\n      if (parentEl && currentDraggedItem) {\n        MH.preventDefault(event);\n\n        const touch = event.touches[0];\n        const clientX = touch.clientX;\n        const clientY = touch.clientY;\n\n        if (!floatingClone) {\n          floatingClone = cloneElement(currentDraggedItem);\n          addClasses(floatingClone, PREFIX_FLOATING_CLONE);\n          copyStyle(currentDraggedItem, floatingClone, [\n            \"width\",\n            \"height\",\n          ]).then(() => {\n            if (floatingClone) {\n              moveElement(floatingClone, { to: parentEl });\n            }\n          });\n        }\n\n        if (floatingClone) {\n          setNumericStyleProps(\n            floatingClone,\n            {\n              clientX: clientX - grabOffset[0],\n              clientY: clientY - grabOffset[1],\n            },\n            { _units: \"px\" },\n          );\n        }\n      }\n    }\n  };\n\n  const onDragEnter = (event: Event) => {\n    const currTarget = MH.currentTargetOf(event);\n    const dragged = currentDraggedItem;\n\n    if (\n      (MH.isTouchPointerEvent(event) || event.type === MC.S_DRAGENTER) &&\n      dragged &&\n      MH.isElement(currTarget) &&\n      currTarget !== dragged\n    ) {\n      methods._dragItemOnto(dragged, currTarget); // no need to await\n    }\n  };\n\n  const setupEvents = () => {\n    for (const item of items) {\n      preventSelect(item);\n\n      addEventListenerTo(item, MC.S_POINTERDOWN, onDragStart);\n\n      addEventListenerTo(item, MC.S_DRAGSTART, setIgnoreCancel); // non-touch\n\n      addEventListenerTo(item, MC.S_POINTERENTER, onDragEnter); // touch\n      addEventListenerTo(item, MC.S_DRAGENTER, onDragEnter); // non-touch\n\n      addEventListenerTo(item, MC.S_DRAGOVER, MH.preventDefault); // non-touch\n\n      addEventListenerTo(item, MC.S_DRAGEND, onDragEnd); // non-touch\n      addEventListenerTo(item, MC.S_DROP, onDragEnd); // non-touch\n\n      addEventListenerTo(MH.getDoc(), MC.S_POINTERUP, onDragEnd);\n      addEventListenerTo(MH.getDoc(), MC.S_POINTERCANCEL, onDragEnd);\n    }\n  };\n\n  // SETUP ------------------------------\n\n  for (const item of items) {\n    addClasses(item, PREFIX_ITEM);\n    setBoolData(item, PREFIX_IS_DRAGGABLE);\n  }\n\n  widget.onEnable(setupEvents);\n\n  widget.onDisable(() => {\n    for (const item of items) {\n      undoPreventSelect(item);\n\n      removeEventListenerFrom(item, MC.S_POINTERDOWN, onDragStart);\n\n      removeEventListenerFrom(item, MC.S_DRAGSTART, setIgnoreCancel);\n\n      removeEventListenerFrom(item, MC.S_POINTERENTER, onDragEnter);\n      removeEventListenerFrom(item, MC.S_DRAGENTER, onDragEnter);\n\n      removeEventListenerFrom(item, MC.S_DRAGOVER, MH.preventDefault);\n\n      removeEventListenerFrom(item, MC.S_POINTERUP, onDragEnd);\n      removeEventListenerFrom(item, MC.S_POINTERCANCEL, onDragEnd);\n      removeEventListenerFrom(item, MC.S_DRAGEND, onDragEnd);\n      removeEventListenerFrom(item, MC.S_DROP, onDragEnd);\n    }\n  });\n\n  widget.onDestroy(async () => {\n    for (const item of items) {\n      await removeClasses(item, PREFIX_ITEM);\n      await delData(item, PREFIX_IS_DRAGGABLE);\n    }\n  });\n\n  setupEvents();\n};\n\nconst getMethods = (\n  widget: Sortable,\n  items: Element[],\n  config: SortableConfig | undefined,\n) => {\n  const doSwap = config?.mode === \"swap\";\n\n  const disabledItems: Record<number, boolean> = {};\n  const callbacks = MH.newSet<WidgetCallback>();\n\n  const getSortedItems = () =>\n    [...items].sort((a, b) => (MH.isNodeBAfterA(a, b) ? -1 : 1));\n\n  const getOrigItemNumber = (itemNum: number, currentOrder = false) =>\n    currentOrder ? items.indexOf(getSortedItems()[itemNum - 1]) + 1 : itemNum;\n\n  const isItemDisabled = (itemNum: number, currentOrder = false) =>\n    disabledItems[getOrigItemNumber(itemNum, currentOrder)] === true;\n\n  const disableItem = async (itemNum: number, currentOrder = false) => {\n    itemNum = getOrigItemNumber(toInt(itemNum), currentOrder);\n    if (widget.isDisabled() || itemNum < 1 || itemNum > MH.lengthOf(items)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledItems[itemNum] = true;\n    await unsetBoolData(items[itemNum - 1], PREFIX_IS_DRAGGABLE);\n  };\n\n  const enableItem = async (itemNum: number, currentOrder = false) => {\n    itemNum = getOrigItemNumber(toInt(itemNum), currentOrder);\n    if (widget.isDisabled() || !isItemDisabled(itemNum)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledItems[itemNum] = false;\n    await setBoolData(items[itemNum - 1], PREFIX_IS_DRAGGABLE);\n  };\n\n  const toggleItem = (itemNum: number, currentOrder = false) =>\n    isItemDisabled(itemNum, currentOrder)\n      ? enableItem(itemNum, currentOrder)\n      : disableItem(itemNum, currentOrder);\n\n  const onMove = (handler: WidgetHandler) =>\n    callbacks.add(wrapCallback(handler));\n\n  // This is internal only for now...\n  const dragItemOnto = async (dragged: Element, draggedOver: Element) => {\n    if (doSwap) {\n      await swapElements(dragged, draggedOver, { ignoreMove: true });\n    } else {\n      await moveElement(dragged, {\n        to: draggedOver,\n        position: MH.isNodeBAfterA(dragged, draggedOver) ? \"after\" : \"before\",\n        ignoreMove: true,\n      });\n    }\n\n    for (const callback of callbacks) {\n      await callback.invoke(widget);\n    }\n  };\n\n  return {\n    _getSortedItems: getSortedItems,\n    _disableItem: disableItem,\n    _enableItem: enableItem,\n    _toggleItem: toggleItem,\n    _isItemDisabled: isItemDisabled,\n    _onMove: onMove,\n    _dragItemOnto: dragItemOnto,\n  };\n};\n"],"mappings":"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BAAwB;;AAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAaC,QAAQ,0BAAAC,OAAA;EAwFnB;AACF;AACA;AACA;EACE,SAAAD,SAAYE,OAAgB,EAAEC,MAAuB,EAAE;IAAA,IAAAC,aAAA;IAAA,IAAAC,KAAA;IAAA1D,eAAA,OAAAqD,QAAA;IACrD,IAAMM,cAAc,IAAAF,aAAA,GAAGJ,QAAQ,CAACjC,GAAG,CAACmC,OAAO,CAAC,cAAAE,aAAA,uBAArBA,aAAA,CAAuBG,OAAO,CAAC,CAAC;IACvDF,KAAA,GAAArD,UAAA,OAAAgD,QAAA,GAAME,OAAO,EAAE;MAAEM,EAAE,EAAEC;IAAS,CAAC;IA7FjC;AACF;AACA;AACA;AACA;AACA;AACA;IANEvC,eAAA,CAAAmC,KAAA;IAYA;AACF;AACA;AACA;AACA;AACA;AACA;IANEnC,eAAA,CAAAmC,KAAA;IAYA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IAPEnC,eAAA,CAAAmC,KAAA;IAaA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IAPEnC,eAAA,CAAAmC,KAAA;IAUA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IAPEnC,eAAA,CAAAmC,KAAA;IAUA;AACF;AACA;AACA;AACA;AACA;AACA;IANEnC,eAAA,CAAAmC,KAAA;IAsCE,IAAMK,KAAK,GAAG,CAAAP,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEO,KAAK,KAAI,EAAE;IACjC,IAAI,CAAClC,EAAE,CAACmC,QAAQ,CAACD,KAAK,CAAC,EAAE;MACvBA,KAAK,CAAChH,IAAI,CAAAgC,KAAA,CAAVgF,KAAK,EAAAvE,kBAAA,CACAqC,EAAE,CAACoC,gBAA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","ignoreList":[]}