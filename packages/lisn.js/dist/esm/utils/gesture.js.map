{"version":3,"file":"gesture.js","names":["MC","MH","isValidStrList","isValidInputDevice","device","includes","DEVICES","isValidIntent","intent","INTENTS","isValidInputDeviceList","devices","isValidIntentList","intents","addDeltaZ","current","increment","max","MIN_DELTA_Z","S_KEY","S_POINTER","S_TOUCH","S_WHEEL","S_SCROLL","S_ZOOM","S_DRAG","S_UNKNOWN"],"sources":["../../../src/ts/utils/gesture.ts"],"sourcesContent":["/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureDevice, GestureIntent } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * `deltaX` and `deltaY` together specify the precise direction in the XY plane\n * of the move if relevant (i.e. other than zoom intent). The direction\n * specifies the effective X (\"left\"/\"right\"), Y (\"up\"/\"down\") or Z (\"in\"/\"out\")\n * direction, or \"none\"/\"ambiguous\".\n *\n * `deltaZ` specifies relative zoom in or out for zoom intents.\n * For zoom in, deltaZ is always > 1, and for zoom out it is < 1.\n * For non-zoom events it is 1.\n *\n * For zoom intents, `direction` would be either in, out or none.\n * For other intents, it would be up, down, left, right, none or ambiguous.\n *\n * For important notes on the delta values see\n * - {@link Utils.getKeyGestureFragment | getKeyGestureFragment}\n * - {@link Utils.getTouchGestureFragment | getTouchGestureFragment}\n * - {@link Utils.getWheelGestureFragment | getWheelGestureFragment}\n *\n * @category Gestures\n */\nexport type GestureFragment = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n  deltaX: number;\n  deltaY: number;\n  deltaZ: number;\n};\n\n/**\n * Returns true if the given string is a valid gesture device.\n *\n * @category Validation\n */\nexport const isValidInputDevice = (device: string): device is GestureDevice =>\n  MH.includes(DEVICES, device);\n\n/**\n * Returns true if the given string is a valid gesture intent.\n *\n * @category Validation\n */\nexport const isValidIntent = (intent: string): intent is GestureIntent =>\n  MH.includes(INTENTS, intent);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * devices.\n *\n * @category Validation\n */\nexport const isValidInputDeviceList = (devices: string | string[]) =>\n  isValidStrList(devices, isValidInputDevice, false);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * intents.\n *\n * @category Validation\n */\nexport const isValidIntentList = (intents: string | string[]) =>\n  isValidStrList(intents, isValidIntent, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const addDeltaZ = (current: number, increment: number) =>\n  MH.max(MIN_DELTA_Z, current * increment);\n\n/**\n * @ignore\n * @internal\n */\nexport const DEVICES: GestureDevice[] = [\n  MC.S_KEY,\n  MC.S_POINTER,\n  MC.S_TOUCH,\n  MC.S_WHEEL,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const INTENTS: GestureIntent[] = [\n  MC.S_SCROLL,\n  MC.S_ZOOM,\n  MC.S_DRAG,\n  MC.S_UNKNOWN,\n] as const;\n\n// Do not allow zooming out more than this value\nconst MIN_DELTA_Z = 0.1;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,KAAKA,EAAE;AACd,OAAO,KAAKC,EAAE;AAId,SAASC,cAAc;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,kBAAkB,GAAIC,MAAc,IAC/CH,EAAE,CAACI,QAAQ,CAACC,OAAO,EAAEF,MAAM,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,aAAa,GAAIC,MAAc,IAC1CP,EAAE,CAACI,QAAQ,CAACI,OAAO,EAAED,MAAM,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,sBAAsB,GAAIC,OAA0B,IAC/DT,cAAc,CAACS,OAAO,EAAER,kBAAkB,EAAE,KAAK,CAAC;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMS,iBAAiB,GAAIC,OAA0B,IAC1DX,cAAc,CAACW,OAAO,EAAEN,aAAa,EAAE,KAAK,CAAC;;AAE/C;AACA;AACA;AACA;AACA,OAAO,MAAMO,SAAS,GAAGA,CAACC,OAAe,EAAEC,SAAiB,KAC1Df,EAAE,CAACgB,GAAG,CAACC,WAAW,EAAEH,OAAO,GAAGC,SAAS,CAAC;;AAE1C;AACA;AACA;AACA;AACA,OAAO,MAAMV,OAAwB,GAAG,CACtCN,EAAE,CAACmB,KAAK,EACRnB,EAAE,CAACoB,SAAS,EACZpB,EAAE,CAACqB,OAAO,EACVrB,EAAE,CAACsB,OAAO,CACF;;AAEV;AACA;AACA;AACA;AACA,OAAO,MAAMb,OAAwB,GAAG,CACtCT,EAAE,CAACuB,QAAQ,EACXvB,EAAE,CAACwB,MAAM,EACTxB,EAAE,CAACyB,MAAM,EACTzB,EAAE,CAAC0B,SAAS,CACJ;;AAEV;AACA,MAAMR,WAAW,GAAG,GAAG","ignoreList":[]}