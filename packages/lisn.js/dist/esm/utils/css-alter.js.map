{"version":3,"file":"css-alter.js","names":["MC","MH","waitForMeasureTime","waitForMutateTime","waitForSubsequentMutateTime","isDOMElement","isValidNum","roundNumTo","waitForDelay","camelToKebabCase","splitOn","transitionElementNow","element","fromCls","toCls","cancelCSSTransitions","didChange","hasClass","removeClassesNow","addClassesNow","transitionElement","delay","thisTransition","scheduleCSSTransition","_isCancelled","_finish","transitionDuration","getMaxTransitionDuration","displayElementNow","PREFIX_UNDISPLAY","PREFIX_DISPLAY","displayElement","undisplayElementNow","undisplayElement","showElementNow","PREFIX_HIDE","PREFIX_SHOW","showElement","hideElementNow","hideElement","toggleDisplayElementNow","isElementUndisplayed","toggleDisplayElement","toggleShowElementNow","isElementHidden","toggleShowElement","className","classList","contains","hasAllClasses","classNames","some","hasAnyClass","add","addClasses","then","remove","removeClasses","toggleClassNow","force","toggle","toggleClass","getData","name","getAttr","prefixData","getBooleanData","value","getBoolData","setDataNow","setAttr","setData","setBooleanDataNow","setBoolDataNow","setBooleanData","setBoolData","unsetBooleanDataNow","unsetAttr","unsetBoolDataNow","unsetBooleanData","unsetBoolData","delDataNow","delAttr","delData","getComputedStylePropNow","prop","getComputedStyle","getPropertyValue","getComputedStyleProp","getStylePropNow","_style","style","getStyleProp","setStylePropNow","_style2","setProperty","setStyleProp","delStylePropNow","_style3","removeProperty","delStyleProp","getFlexDirection","displayStyle","includes","getParentFlexDirection","parent","parentOf","isFlex","direction","flexDirection","isFlexChild","propVal","max","map","strValue","duration","parseFloat","disableInitialTransition","PREFIX_TRANSITION_DISABLE","setHasModal","getBody","PREFIX_HAS_MODAL","delHasModal","copyStyle","fromElement","toElement","includeComputedProps","props","setNumericStyleJsVars","options","transformFn","_transformFn","varPrefix","prefixCssJsVar","_prefix","cssPropSuffix","varName","_options$_numDecimal","thisNumDecimal","_numDecimal","currValue","_units","prefixName","scheduledCSSTransitions","newWeakMap","toClasses","scheduledTransitions","get","scheduledTransition","_cancel","set","isCancelled","deleteObjKey"],"sources":["../../../src/ts/utils/css-alter.ts"],"sourcesContent":["/**\n * @module Utils\n *\n * @categoryDescription CSS: Altering\n * These functions transition an element from one CSS class to another, but\n * could lead to forced layout if not scheduled using {@link waitForMutateTime}.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n *\n * @categoryDescription CSS: Altering (optimized)\n * These functions transition an element from one CSS class to another in an\n * optimized way using {@link waitForMutateTime} and so are asynchronous.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement, FlexDirection } from \"@lisn/globals/types\";\n\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n  waitForSubsequentMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isDOMElement } from \"@lisn/utils/dom-query\";\nimport { isValidNum, roundNumTo } from \"@lisn/utils/math\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { camelToKebabCase, splitOn } from \"@lisn/utils/text\";\n\n/**\n * Removes the given `fromCls` class and adds the given `toCls` class to the\n * element.\n *\n * Unlike {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace | DOMTokenList:replace},\n * this will always add `toCls` even if `fromCls` isn't in the element's class list.\n *\n * @returns True if there was a change made (class removed or added), false\n * otherwise.\n *\n * @category CSS: Altering\n */\nexport const transitionElementNow = (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n) => {\n  cancelCSSTransitions(element, fromCls, toCls);\n\n  // Avoid triggering MutationObserver unnecessarily.\n  let didChange = false;\n  if (hasClass(element, fromCls)) {\n    didChange = true;\n    removeClassesNow(element, fromCls);\n  }\n\n  if (!hasClass(element, toCls)) {\n    addClassesNow(element, toCls);\n    didChange = true;\n  }\n\n  return didChange;\n};\n\n/**\n * Like {@link transitionElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay, and it finally awaits for the effective style's\n * transition-duration.\n *\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, this one is\n * cancelled.\n *\n * @example\n *\n * - {@link showElement} with delay of 100 schedules `lisn-hide` -> `lisn-show`\n *   in 100ms\n * - then if {@link hideElementNow} is called, or a scheduled\n *   {@link hideElement} completes  before that timer runs out, this call to\n *   {@link showElement} aborts\n *\n * ```javascript\n * hideElement(someElement, 10);\n * // this will be aborted in 10ms when the scheduled hideElement above\n * // completes\n * showElement(someElement, 100);\n * ```\n *\n * ```javascript\n * // this will be aborted in 10ms when the hideElement that will be scheduled\n * // below completes\n * showElement(someElement, 100);\n * hideElement(someElement, 10);\n * ```\n *\n * ```javascript\n * // this will be aborted immediately by hideElementNow that runs straight\n * // afterwards\n * showElement(someElement, 100);\n * hideElementNow(someElement);\n * ```\n *\n * ```javascript\n * hideElementNow(someElement);\n * // this will NOT be aborted because hideElementNow has completed already\n * showElement(someElement, 100);\n * ```\n *\n * @category CSS: Altering (optimized)\n */\nexport const transitionElement = async (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n  delay = 0,\n) => {\n  const thisTransition = scheduleCSSTransition(element, toCls);\n\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForMutateTime();\n  if (thisTransition._isCancelled()) {\n    // it has been overridden by a later transition\n    return false;\n  }\n\n  const didChange = transitionElementNow(element, fromCls, toCls);\n  thisTransition._finish();\n\n  if (!didChange) {\n    return false;\n  }\n\n  // Await for the transition duration so that caller awaiting on us knows when\n  // it's complete.\n  const transitionDuration = await getMaxTransitionDuration(element);\n  if (transitionDuration) {\n    await waitForDelay(transitionDuration);\n  }\n\n  return true;\n};\n\n/**\n * Transitions an element from class `lisn-undisplay` (which applies `display:\n * none`) to `lisn-display` (no style associated with this).\n *\n * The difference between this and simply removing the `lisn-undisplay` class\n * is that previously scheduled transitions to `lisn-undisplay` will be\n * cancelled.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const displayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY);\n\n/**\n * Like {@link displayElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const displayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY, delay);\n\n/**\n * The opposite of {@link displayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const undisplayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY);\n\n/**\n * Like {@link undisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const undisplayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY, delay);\n\n/**\n * Transitions an element from class `lisn-hide` (which makes the element\n * hidden) to `lisn-show` (which shows it). These classes have CSS\n * transitions applied so the element is faded into and out of view.\n *\n * @see {@link transitionElementNow}.\n *\n * @category CSS: Altering\n */\nexport const showElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW);\n\n/**\n * Like {@link showElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const showElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW, delay);\n\n/**\n * The opposite of {@link showElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const hideElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE);\n\n/**\n * Like {@link hideElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const hideElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE, delay);\n\n/**\n * If {@link isElementUndisplayed}, it will {@link displayElementNow},\n * otherwise it will {@link undisplayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleDisplayElementNow = (element: Element) =>\n  isElementUndisplayed(element)\n    ? displayElementNow(element)\n    : undisplayElementNow(element);\n\n/**\n * Like {@link toggleDisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleDisplayElement = (element: Element, delay = 0) =>\n  isElementUndisplayed(element)\n    ? displayElement(element, delay)\n    : undisplayElement(element, delay);\n\n/**\n * If {@link isElementHidden}, it will {@link showElementNow}, otherwise\n * {@link hideElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleShowElementNow = (element: Element) =>\n  isElementHidden(element) ? showElementNow(element) : hideElementNow(element);\n\n/**\n * Like {@link toggleShowElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleShowElement = (element: Element, delay = 0) =>\n  isElementHidden(element)\n    ? showElement(element, delay)\n    : hideElement(element, delay);\n\n/**\n * Returns true if the element's class list contains `lisn-hide`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementHidden = (element: Element) =>\n  hasClass(element, MC.PREFIX_HIDE);\n\n/**\n * Returns true if the element's class list contains `lisn-undisplay`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementUndisplayed = (element: Element) =>\n  hasClass(element, MC.PREFIX_UNDISPLAY);\n\n/**\n * Returns true if the element's class list contains the given class.\n *\n * @category CSS: Altering (optimized)\n */\nexport const hasClass = (element: Element, className: string) =>\n  MH.classList(element).contains(className);\n\n/**\n * Returns true if the element's class list contains all of the given classes.\n *\n * @category CSS: Altering (optimized)\n */\nexport const hasAllClasses = (element: Element, classNames: string[]) =>\n  !MH.some(classNames, (className) => !hasClass(element, className));\n\n/**\n * Returns true if the element's class list contains any of the given classes.\n *\n * @category CSS: Altering (optimized)\n */\nexport const hasAnyClass = (element: Element, classNames: string[]) =>\n  MH.some(classNames, (className) => hasClass(element, className));\n\n/**\n * Adds the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const addClassesNow = (element: Element, ...classNames: string[]) =>\n  MH.classList(element).add(...classNames);\n\n/**\n * Like {@link addClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const addClasses = (element: Element, ...classNames: string[]) =>\n  waitForMutateTime().then(() => addClassesNow(element, ...classNames));\n\n/**\n * Removes the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const removeClassesNow = (element: Element, ...classNames: string[]) =>\n  MH.classList(element).remove(...classNames);\n\n/**\n * Like {@link removeClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const removeClasses = (element: Element, ...classNames: string[]) =>\n  waitForMutateTime().then(() => removeClassesNow(element, ...classNames));\n\n/**\n * Toggles the given class on the element.\n *\n * @param force See {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle | DOMTokenList:toggle}\n *\n * @category CSS: Altering\n */\nexport const toggleClassNow = (\n  element: Element,\n  className: string,\n  force?: boolean,\n) => MH.classList(element).toggle(className, force);\n\n/**\n * Like {@link toggleClassNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleClass = (\n  element: Element,\n  className: string,\n  force?: boolean,\n) => waitForMutateTime().then(() => toggleClassNow(element, className, force));\n\n// For *Data: to avoid unnecessary type checking that ensures element is\n// HTMLElement or SVGElement, use getAttribute instead of dataset.\n\n/**\n * Returns the value of the given data attribute. The name of the attribute\n * must _not_ start with `data`. It can be in either camelCase or kebab-case,\n * it is converted as needed.\n *\n * @category CSS: Altering (optimized)\n */\nexport const getData = (element: Element, name: string) =>\n  MH.getAttr(element, MH.prefixData(name));\n\n/**\n * Returns the value of the given data attribute as a boolean. Its value is\n * expected to be either blank or \"true\" (which result in `true`), or \"false\"\n * (which results in `false`).\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering (optimized)\n */\nexport const getBooleanData = (element: Element, name: string) => {\n  const value = getData(element, name);\n  return value !== null && value !== \"false\";\n};\n\n/**\n * @ignore\n * @deprecated\n */\nexport const getBoolData = getBooleanData;\n\n/**\n * Sets the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const setDataNow = (element: Element, name: string, value: string) =>\n  MH.setAttr(element, MH.prefixData(name), value);\n\n/**\n * Like {@link setDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const setData = (element: Element, name: string, value: string) =>\n  waitForMutateTime().then(() => setDataNow(element, name, value));\n\n/**\n * Sets the given data attribute with value \"true\" (default) or \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const setBooleanDataNow = (\n  element: Element,\n  name: string,\n  value = true,\n) => MH.setAttr(element, MH.prefixData(name), value + \"\");\n\n/**\n * @ignore\n * @deprecated\n */\nexport const setBoolDataNow = setBooleanDataNow;\n\n/**\n * Like {@link setBooleanDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const setBooleanData = (element: Element, name: string, value = true) =>\n  waitForMutateTime().then(() => setBooleanDataNow(element, name, value));\n\n/**\n * @ignore\n * @deprecated\n */\nexport const setBoolData = setBooleanData;\n\n/**\n * Sets the given data attribute with value \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const unsetBooleanDataNow = (element: Element, name: string) =>\n  MH.unsetAttr(element, MH.prefixData(name));\n\n/**\n * @ignore\n * @deprecated\n */\nexport const unsetBoolDataNow = unsetBooleanDataNow;\n\n/**\n * Like {@link unsetBooleanDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const unsetBooleanData = (element: Element, name: string) =>\n  waitForMutateTime().then(() => unsetBooleanDataNow(element, name));\n\n/**\n * @ignore\n * @deprecated\n */\nexport const unsetBoolData = unsetBooleanData;\n\n/**\n * Deletes the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const delDataNow = (element: Element, name: string) =>\n  MH.delAttr(element, MH.prefixData(name));\n\n/**\n * Like {@link delDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const delData = (element: Element, name: string) =>\n  waitForMutateTime().then(() => delDataNow(element, name));\n\n/**\n * Returns the value of the given property from the computed style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getComputedStylePropNow = (element: Element, prop: string) =>\n  getComputedStyle(element).getPropertyValue(prop);\n\n/**\n * Like {@link getComputedStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getComputedStyleProp = (element: Element, prop: string) =>\n  waitForMeasureTime().then(() => getComputedStylePropNow(element, prop));\n\n/**\n * Returns the value of the given property from the inline style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.getPropertyValue(prop);\n\n/**\n * Like {@link getStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getStyleProp = (element: Element, prop: string) =>\n  waitForMeasureTime().then(() => getStylePropNow(element, prop));\n\n/**\n * Sets the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const setStylePropNow = (\n  element: Element,\n  prop: string,\n  value: string,\n) => (element as DOMElement).style?.setProperty(prop, value);\n\n/**\n * Like {@link setStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const setStyleProp = (element: Element, prop: string, value: string) =>\n  waitForMutateTime().then(() => setStylePropNow(element, prop, value));\n\n/**\n * Deletes the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const delStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.removeProperty(prop);\n\n/**\n * Like {@link delStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const delStyleProp = (element: Element, prop: string) =>\n  waitForMutateTime().then(() => delStylePropNow(element, prop));\n\n/**\n * Returns the flex direction of the given element **if it has a flex layout**.\n *\n * @returns `null` if the element does not have a flex layout.\n */\nexport const getFlexDirection = async (\n  element: Element,\n): Promise<FlexDirection | null> => {\n  const displayStyle = await getComputedStyleProp(element, \"display\");\n  if (!displayStyle.includes(\"flex\")) {\n    return null;\n  }\n\n  return (await getComputedStyleProp(\n    element,\n    \"flex-direction\",\n  )) as FlexDirection;\n};\n\n/**\n * Returns the flex direction of the given element's parent **if it has a flex\n * layout**.\n *\n * @returns `null` if the element's parent does not have a flex layout.\n */\nexport const getParentFlexDirection = async (\n  element: Element,\n): Promise<FlexDirection | null> => {\n  const parent = MH.parentOf(element);\n  return parent ? getFlexDirection(parent) : null;\n};\n\n/**\n * Returns true if the given element has a flex layout. If direction is given,\n * then it also needs to match.\n */\nexport const isFlex = async (element: Element, direction?: FlexDirection) => {\n  const flexDirection = await getFlexDirection(element);\n\n  if (direction) {\n    return direction === flexDirection;\n  }\n\n  return flexDirection !== null;\n};\n\n/**\n * Returns true if the given element's parent has a flex layout. If direction is\n * given, then it also needs to match.\n */\nexport const isFlexChild = async (\n  element: Element,\n  direction?: FlexDirection,\n) => {\n  const parent = MH.parentOf(element);\n  return parent ? isFlex(parent, direction) : false;\n};\n\n/**\n * In milliseconds.\n *\n * @ignore\n * @internal\n */\nexport const getMaxTransitionDuration = async (element: Element) => {\n  const propVal = await getComputedStyleProp(element, \"transition-duration\");\n\n  return MH.max(\n    ...splitOn(propVal, \",\", true).map((strValue) => {\n      let duration = MH.parseFloat(strValue) || 0;\n\n      if (strValue === duration + \"s\") {\n        duration *= 1000;\n      }\n\n      return duration;\n    }),\n  );\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const disableInitialTransition = async (element: Element, delay = 0) => {\n  await addClasses(element, MC.PREFIX_TRANSITION_DISABLE);\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForSubsequentMutateTime();\n  removeClassesNow(element, MC.PREFIX_TRANSITION_DISABLE);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const setHasModal = () => setBooleanData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const delHasModal = () => delData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const copyStyle = async (\n  fromElement: Element,\n  toElement: Element,\n  includeComputedProps?: string[],\n) => {\n  if (!isDOMElement(fromElement) || !isDOMElement(toElement)) {\n    return;\n  }\n\n  await waitForMeasureTime();\n  const props: Record<string, string> = {};\n\n  if (includeComputedProps) {\n    for (const prop of includeComputedProps) {\n      props[prop] = getComputedStylePropNow(fromElement, prop);\n    }\n  }\n\n  const style = fromElement.style; // only inline styles\n  for (const prop in style) {\n    const value = style.getPropertyValue(prop);\n    if (value) {\n      props[prop] = value;\n    }\n  }\n\n  for (const prop in props) {\n    setStyleProp(toElement, prop, props[prop]);\n  }\n\n  addClasses(toElement, ...MH.classList(fromElement));\n};\n\n/**\n * If the props keys are in camelCase they are converted to kebab-case\n *\n * If a value is null or undefined, the property is deleted.\n *\n * @ignore\n * @internal\n */\nexport const setNumericStyleJsVars = async (\n  element: Element,\n  props: CssNumericProps,\n  options: {\n    _prefix?: string;\n    _units?: string;\n    _numDecimal?: number;\n    _transformFn?: (prop: string, currVal: number, newVal: number) => number;\n  } = {},\n) => {\n  if (!isDOMElement(element)) {\n    return;\n  }\n\n  const transformFn = options._transformFn;\n\n  const varPrefix = MH.prefixCssJsVar(options?._prefix || \"\");\n  for (const prop in props) {\n    const cssPropSuffix = camelToKebabCase(prop);\n    const varName = `${varPrefix}${cssPropSuffix}`;\n\n    let value: number | null;\n\n    if (!isValidNum(props[prop])) {\n      value = null;\n    } else {\n      value = props[prop];\n      const thisNumDecimal =\n        options?._numDecimal ?? (value > 0 && value < 1 ? 2 : 0);\n\n      if (transformFn) {\n        const currValue = MH.parseFloat(await getStyleProp(element, varName));\n\n        value = transformFn(prop, currValue || 0, value);\n      }\n\n      value = roundNumTo(value, thisNumDecimal);\n    }\n\n    if (value === null) {\n      delStyleProp(element, varName);\n    } else {\n      setStyleProp(element, varName, value + (options?._units || \"\"));\n    }\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\ntype CssNumericProps = Record<string, number | undefined | null>;\n\n// ----------------------------------------\n\ntype CSSTransition = {\n  _cancel: () => undefined;\n  _finish: () => undefined;\n  _isCancelled: () => boolean;\n};\n\nconst PREFIX_HAS_MODAL = MH.prefixName(\"has-modal\");\n\nconst scheduledCSSTransitions = MH.newWeakMap<\n  Element,\n  Record<string, CSSTransition>\n>();\n\nconst cancelCSSTransitions = (element: Element, ...toClasses: string[]) => {\n  const scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    return;\n  }\n\n  for (const toCls of toClasses) {\n    const scheduledTransition = scheduledTransitions[toCls];\n    if (scheduledTransition) {\n      scheduledTransition._cancel();\n    }\n  }\n};\n\nconst scheduleCSSTransition = (element: Element, toCls: string) => {\n  let scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    scheduledTransitions = {};\n    scheduledCSSTransitions.set(element, scheduledTransitions);\n  }\n\n  let isCancelled = false;\n  scheduledTransitions[toCls] = {\n    _cancel: () => {\n      isCancelled = true;\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _finish: () => {\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _isCancelled: () => {\n      return isCancelled;\n    },\n  };\n\n  return scheduledTransitions[toCls];\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,EAAE;AACd,OAAO,KAAKC,EAAE;AAId,SACEC,kBAAkB,EAClBC,iBAAiB,EACjBC,2BAA2B;AAE7B,SAASC,YAAY;AACrB,SAASC,UAAU,EAAEC,UAAU;AAC/B,SAASC,YAAY;AACrB,SAASC,gBAAgB,EAAEC,OAAO;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,GAAGA,CAClCC,OAAgB,EAChBC,OAAe,EACfC,KAAa,KACV;EACHC,oBAAoB,CAACH,OAAO,EAAEC,OAAO,EAAEC,KAAK,CAAC;;EAE7C;EACA,IAAIE,SAAS,GAAG,KAAK;EACrB,IAAIC,QAAQ,CAACL,OAAO,EAAEC,OAAO,CAAC,EAAE;IAC9BG,SAAS,GAAG,IAAI;IAChBE,gBAAgB,CAACN,OAAO,EAAEC,OAAO,CAAC;EACpC;EAEA,IAAI,CAACI,QAAQ,CAACL,OAAO,EAAEE,KAAK,CAAC,EAAE;IAC7BK,aAAa,CAACP,OAAO,EAAEE,KAAK,CAAC;IAC7BE,SAAS,GAAG,IAAI;EAClB;EAEA,OAAOA,SAAS;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMI,iBAAiB,GAAG,MAAAA,CAC/BR,OAAgB,EAChBC,OAAe,EACfC,KAAa,EACbO,KAAK,GAAG,CAAC,KACN;EACH,MAAMC,cAAc,GAAGC,qBAAqB,CAACX,OAAO,EAAEE,KAAK,CAAC;EAE5D,IAAIO,KAAK,EAAE;IACT,MAAMb,YAAY,CAACa,KAAK,CAAC;EAC3B;EAEA,MAAMl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","ignoreList":[]}