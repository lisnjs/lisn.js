{"version":3,"file":"overlays.js","names":["MC","MH","addClasses","addClassesNow","setDataNow","setStylePropNow","moveElement","tryWrapContent","waitForElement","waitForMutateTime","camelToKebabCase","objToStrKey","isScrollable","tryGetMainContentElement","fetchMainContentElement","newXWeakMap","getOverlay","userOptions","_overlays$get$get","_overlays$get","options","tryGetOverlayOptions","overlays","get","_parent","_overlayKey","createOverlay","fetchOverlayOptions","canReuse","_id","_overlays$get2","existingOverlay","parentOf","overlay","createOnlyOverlay","sGet","set","id","isPercentageHOffset","includes","_style","left","right","isPercentageVOffset","top","bottom","needsContentWrapping","parentEl","axis","_classNames","PREFIX_WRAPPER","_required","_requiredBy","position","S_ABSOLUTE","prefixName","to","newMap","_userOptions$data","_userOptions$id","style","getCssProperties","data","tryGetParent","parent","_data","getOverlayKey","_userOptions$data2","_userOptions$id2","fetchParent","finalCssProperties","merge","S_FIXED","isEmpty","userSuppliedParent","getBody","createElement","attr","keysOf","prop"],"sources":["../../../src/ts/utils/overlays.ts"],"sourcesContent":["/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  addClasses,\n  addClassesNow,\n  setDataNow,\n  setStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, tryWrapContent } from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { camelToKebabCase, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  isScrollable,\n  tryGetMainContentElement,\n  fetchMainContentElement,\n} from \"@lisn/utils/scroll\";\n\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Overlays\n * @interface\n */\nexport type OverlayOptions = {\n  /**\n   * The parent element to insert the overlay into.\n   *\n   * If not given, then:\n   * - if the overlay is to have a `position: fixed`, then `document.body` is used\n   * - otherwise,\n   *   {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}\n   *   is used\n   */\n  parent?: HTMLElement;\n\n  /**\n   * If set, then it will be assigned as the DOM element ID for the new\n   * overlay.\n   *\n   * Furthermore, the new overlay will be created and will not be saved for\n   * future reuse.\n   *\n   * By default, if `id` is not given, the overlay will be saved, and if\n   * {@link createOverlay} is called again with the same `style`, `data` and\n   * parent, the previous overlay is returned.\n   */\n  id?: string;\n\n  /**\n   * Every entry in this object will be set on the `style` of the new overlay.\n   *\n   * **IMPORTANT:** By default overlays are positioned absolutely, so if you need\n   * another positioning, override this here by setting a `position` key in\n   * `style`. If position is either \"absolute\" (by default or explicitly set) or\n   * \"fixed\", and none of `top` or `bottom` is given, `top: 0` is set; and\n   * similarly, if none of `left` or `right` is given, `left: 0` is set.\n   */\n  style?: Record<string, string>;\n\n  /**\n   * Every entry in this object will be set as a data attribute on the new\n   * overlay.\n   *\n   * Keys can be either kebab-case or camelCase (they will be converted if\n   * needed). Do _not_ include the \"data-\" prefix which will be added\n   * automatically. E.g. both \"foo-bar\" and \"fooBar\" will result in\n   * \"data-foo-bar\" being set.\n   */\n  data?: Record<string, string>;\n};\n\n/**\n * Returns an existing overlay for this specification. If the overlay was just\n * created it may not yet be attached to the DOM.\n *\n * @category Overlays\n */\nexport const getOverlay = (userOptions?: OverlayOptions) => {\n  const options = tryGetOverlayOptions(userOptions);\n  if (!options) {\n    return null;\n  }\n\n  return overlays.get(options._parent)?.get(options._overlayKey) ?? null;\n};\n\n/**\n * Creates a new overlay, and inserts it into the DOM as soon as\n * {@link waitForMutateTime} resolves, or returns an already existing matching\n * overlay.\n *\n * **Note** that if {@link OverlayOptions.id} is set, a new overlay will\n * _always_ be created.\n *\n * @category Overlays\n */\nexport const createOverlay = async (userOptions?: OverlayOptions) => {\n  const options = await fetchOverlayOptions(userOptions);\n  const canReuse = !options._id;\n\n  if (canReuse) {\n    const existingOverlay = overlays\n      .get(options._parent)\n      ?.get(options._overlayKey);\n\n    if (existingOverlay) {\n      if (!MH.parentOf(existingOverlay)) {\n        // not yet inserted into the DOM, so wait until it is\n        await waitForMutateTime();\n      }\n      return existingOverlay;\n    }\n  }\n\n  // Create a new one\n  const overlay = createOnlyOverlay(options);\n  if (canReuse) {\n    // Save it now before awating, so that concurrent requests to create the\n    // same one use it\n    overlays.sGet(options._parent).set(options._overlayKey, overlay);\n  } else {\n    overlay.id = options._id;\n  }\n\n  const isPercentageHOffset = MH.includes(\n    (options._style.left || \"\") + (options._style.right || \"\"),\n    \"%\",\n  );\n\n  const isPercentageVOffset = MH.includes(\n    (options._style.top || \"\") + (options._style.bottom || \"\"),\n    \"%\",\n  );\n\n  let needsContentWrapping = false;\n  let parentEl = options._parent;\n  if (isPercentageHOffset || isPercentageVOffset) {\n    needsContentWrapping =\n      (isPercentageHOffset && isScrollable(parentEl, { axis: \"x\" })) ||\n      (isPercentageVOffset && isScrollable(parentEl, { axis: \"y\" }));\n  }\n\n  if (needsContentWrapping) {\n    // TODO Is it possible to unwrap the children when no longer needing this\n    // overlay? Probably not worth the effort. ViewWatcher doesn't remove old\n    // olverlays anyway.\n    parentEl = await tryWrapContent(parentEl, {\n      _classNames: [MC.PREFIX_WRAPPER, PREFIX_WRAPPER],\n      _required: true,\n      _requiredBy: \"percentage offset view trigger with scrolling root\",\n    });\n  }\n\n  if (options._style.position === MC.S_ABSOLUTE) {\n    // Ensure parent has non-static positioning\n    addClasses(parentEl, MH.prefixName(\"overlay-container\"));\n  }\n\n  await moveElement(overlay, { to: parentEl });\n\n  return overlay;\n};\n\n// ----------------------------------------\n\ntype OverlayOptionsInternal = {\n  _parent: HTMLElement;\n  _id: string;\n  _style: Record<string, string>;\n  _data: Record<string, string>;\n  _overlayKey: string;\n};\n\nconst PREFIX_WRAPPER = MH.prefixName(\"overlay-wrapper\");\n\nconst overlays = newXWeakMap<HTMLElement, Map<string, HTMLElement>>(() =>\n  MH.newMap(),\n);\n\nconst tryGetOverlayOptions = (\n  userOptions: OverlayOptions | undefined,\n): OverlayOptionsInternal | null => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = tryGetParent(userOptions?.parent, style.position);\n  if (!parentEl) {\n    return null;\n  }\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst fetchOverlayOptions = async (\n  userOptions: OverlayOptions | undefined,\n): Promise<OverlayOptionsInternal> => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = await fetchParent(userOptions?.parent, style.position);\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst getOverlayKey = (\n  style: Record<string, string>,\n  data: Record<string, string>,\n) => objToStrKey(style) + \"|\" + objToStrKey(data);\n\nconst getCssProperties = (style: Record<string, string> | undefined) => {\n  const finalCssProperties: Record<string, string> = MH.merge(\n    style,\n    { position: style?.position || MC.S_ABSOLUTE }, // default\n  );\n\n  if (\n    finalCssProperties.position === MC.S_ABSOLUTE ||\n    finalCssProperties.position === MC.S_FIXED\n  ) {\n    if (\n      MH.isEmpty(finalCssProperties.top) &&\n      MH.isEmpty(finalCssProperties.bottom)\n    ) {\n      finalCssProperties.top = \"0px\";\n    }\n\n    if (\n      MH.isEmpty(finalCssProperties.left) &&\n      MH.isEmpty(finalCssProperties.right)\n    ) {\n      finalCssProperties.left = \"0px\";\n    }\n  }\n\n  return finalCssProperties;\n};\n\nconst tryGetParent = (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED ? MH.getBody() : tryGetMainContentElement());\n\nconst fetchParent = async (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED\n    ? await waitForElement(MH.getBody)\n    : await fetchMainContentElement());\n\nconst createOnlyOverlay = (options: OverlayOptionsInternal) => {\n  const overlay = MH.createElement(\"div\");\n\n  addClassesNow(overlay, MH.prefixName(\"overlay\"));\n\n  const data = options._data;\n  for (const attr of MH.keysOf(data)) {\n    setDataNow(overlay, camelToKebabCase(attr), data[attr]);\n  }\n\n  const style = options._style;\n  for (const prop of MH.keysOf(style)) {\n    setStylePropNow(overlay, prop, style[prop]);\n  }\n\n  return overlay;\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,KAAKA,EAAE;AACd,OAAO,KAAKC,EAAE;AAEd,SACEC,UAAU,EACVC,aAAa,EACbC,UAAU,EACVC,eAAe;AAEjB,SAASC,WAAW,EAAEC,cAAc;AACpC,SAASC,cAAc;AACvB,SAASC,iBAAiB;AAC1B,SAASC,gBAAgB,EAAEC,WAAW;AACtC,SACEC,YAAY,EACZC,wBAAwB,EACxBC,uBAAuB;AAGzB,SAASC,WAAW;;AAEpB;AACA;AACA;AACA;;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAIC,WAA4B,IAAK;EAAA,IAAAC,iBAAA,EAAAC,aAAA;EAC1D,MAAMC,OAAO,GAAGC,oBAAoB,CAACJ,WAAW,CAAC;EACjD,IAAI,CAACG,OAAO,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,QAAAF,iBAAA,IAAAC,aAAA,GAAOG,QAAQ,CAACC,GAAG,CAACH,OAAO,CAACI,OAAO,CAAC,cAAAL,aAAA,uBAA7BA,aAAA,CAA+BI,GAAG,CAACH,OAAO,CAACK,WAAW,CAAC,cAAAP,iBAAA,cAAAA,iBAAA,GAAI,IAAI;AACxE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAOT,WAA4B,IAAK;EACnE,MAAMG,OAAO,GAAG,MAAMO,mBAAmB,CAACV,WAAW,CAAC;EACtD,MAAMW,QAAQ,GAAG,CAACR,OAAO,CAACS,GAAG;EAE7B,IAAID,QAAQ,EAAE;IAAA,IAAAE,cAAA;IACZ,MAAMC,eAAe,IAAAD,cAAA,GAAGR,QAAQ,CAC7BC,GAAG,CAACH,OAAO,CAACI,OAAO,CAAC,cAAAM,cAAA,uBADCA,cAAA,CAEpBP,GAAG,CAACH,OAAO,CAACK,WAAW,CAAC;IAE5B,IAAIM,eAAe,EAAE;MACnB,IAAI,CAAC9B,EAAE,CAAC+B,QAAQ,CAACD,eAAe,CAAC,EAAE;QACjC;QACA,MAAMtB,iBAAiB,CAAC,CAAC;MAC3B;MACA,OAAOsB,eAAe;IACxB;EACF;;EAEA;EACA,MAAME,OAAO,GAAGC,iBAAiB,CAACd,OAAO,CAAC;EAC1C,IAAIQ,QAAQ,EAAE;IACZ;IACA;IACAN,QAAQ,CAACa,IAAI,CAACf,OAAO,CAACI,OAAO,CAAC,CAACY,GAAG,CAAChB,OAAO,CAACK,WAAW,EAAEQ,OAAO,CAAC;EAClE,CAAC,MAAM;IACLA,OAAO,CAACI,EAAE,GAAGjB,OAAO,CAACS,GAAG;EAC1B;EAEA,MAAMS,mBAAmB,GAAGrC,EAAE,CAACsC,QAAQ,CACrC,CAACnB,OAAO,CAACoB,MAAM,CAACC,IAAI,IAAI,EAAE,KAAKrB,OAAO,CAACoB,MAAM,CAACE,KAAK,IAAI,EAAE,CAAC,EAC1D,GACF,CAAC;EAED,MAAMC,mBAAmB,GAAG1C,EAAE,CAACsC,QAAQ,CACrC,CAACnB,OAAO,CAACoB,MAAM,CAACI,GAAG,IAAI,EAAE,KAAKxB,OAAO,CAACoB,MAAM,CAACK,MAAM,IAAI,EAAE,CAAC,EAC1D,GACF,CAAC;EAED,IAAIC,oBAAoB,GAAG,KAAK;EAChC,IAAIC,QAAQ,GAAG3B,OAAO,CAACI,OAAO;EAC9B,IAAIc,mBAAmB,IAAIK,mBAAmB,EAAE;IAC9CG,oBAAoB,GACjBR,mBAAmB,IAAI1B,YAAY,CAACmC,QAAQ,EAAE;MAAEC,IAAI,EAAE;IAAI,CAAC,CAAC,IAC5DL,mBAAmB,IAAI/B,YAAY,CAACmC,QAAQ,EAAE;MAAEC,IAAI,EAAE;IAAI,CAAC,CAAE;EAClE;EAEA,IAAIF,oBAAoB,EAAE;IACxB;IACA;IACA;IACAC,QAAQ,GAAG,MAAMxC,cAAc,CAACwC,QAAQ,EAAE;MACxCE,WAAW,EAAE,CAACjD,EAAE,CAACkD,cAAc,EAAEA,cAAc,CAAC;MAChDC,SAAS,EAAE,IAAI;MACfC,WAAW,EAAE;IACf,CAAC,CAAC;EACJ;EAEA,IAAIhC,OAAO,CAACoB,MAAM,CAACa,QAAQ,KAAKrD,EAAE,CAACsD,UAAU,EAAE;IAC7C;IACApD,UAAU,CAAC6C,QAAQ,EAAE9C,EAAE,CAACsD,UAAU,CAAC,mBAAmB,CAAC,CAAC;EAC1D;EAEA,MAAMjD,WAAW,CAAC2B,OAAO,EAAE;IAAEuB,EAAE,EAAET;EAAS,CAAC,CAAC;EAE5C,OAAOd,OAAO;AAChB,CAAC;;AAED;;AAUA,MAAMiB,cAAc,GAAGjD,EAAE,CAACsD,UAAU,CAAC,iBAAiB,CAAC;AAEvD,MAAMjC,QAAQ,GAAGP,WAAW,CAAwC,MAClEd,EAAE,CAACwD,MAAM,CAAC,CACZ,CAAC;AAED,MAAMpC,oBAAoB,GACxBJ,WAAuC,IACL;EAAA,IAAAyC,iBAAA,EAAAC,eAAA;EAClC,MAAMC,KAAK,GAAGC,gBAAgB,CAAC5C,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE2C,KAAK,CAAC;EAClD,MAAME,IAAI,IAAAJ,iBAAA,GAAGzC,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE6C,IAAI,cAAAJ,iBAAA,cAAAA,iBAAA,GAAI,CAAC,CAAC;EACpC,MAAMX,QAAQ,GAAGgB,YAAY,CAAC9C,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE+C,MAAM,EAAEJ,KAAK,CAACP,QAAQ,CAAC;EAClE,IAAI,CAACN,QAAQ,EAAE;IACb,OAAO,IAAI;EACb;EAEA,OAAO;IACLvB,OAAO,EAAEuB,QAAQ;IACjBlB,GAAG,GAAA8B,eAAA,GAAE1C,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEoB,EAAE,cAAAsB,eAAA,cAAAA,eAAA,GAAI,EAAE;IAC1BnB,MAAM,EAAEoB,KAAK;IACbK,KAAK,EAAEH,IAAI;IACXrC,WAAW,EAAEyC,aAAa,CAACN,KAAK,EAAEE,IAAI;EACxC,CAAC;AACH,CAAC;AAED,MAAMnC,mBAAmB,GAAG,MAC1BV,WAAuC,IACH;EAAA,IAAAkD,kBAAA,EAAAC,gBAAA;EACpC,MAAMR,KAAK,GAAGC,gBAAgB,CAAC5C,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE2C,KAAK,CAAC;EAClD,MAAME,IAAI,IAAAK,kBAAA,GAAGlD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE6C,IAAI,cAAAK,kBAAA,cAAAA,kBAAA,GAAI,CAAC,CAAC;EACpC,MAAMpB,QAAQ,GAAG,MAAMsB,WAAW,CAACpD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE+C,MAAM,EAAEJ,KAAK,CAACP,QAAQ,CAAC;EAEvE,OAAO;IACL7B,OAAO,EAAEuB,QAAQ;IACjBlB,GAAG,GAAAuC,gBAAA,GAAEnD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEoB,EAAE,cAAA+B,gBAAA,cAAAA,gBAAA,GAAI,EAAE;IAC1B5B,MAAM,EAAEoB,KAAK;IACbK,KAAK,EAAEH,IAAI;IACXrC,WAAW,EAAEyC,aAAa,CAACN,KAAK,EAAEE,IAAI;EACxC,CAAC;AACH,CAAC;AAED,MAAMI,aAAa,GAAGA,CACpBN,KAA6B,EAC7BE,IAA4B,KACzBnD,WAAW,CAACiD,KAAK,CAAC,GAAG,GAAG,GAAGjD,WAAW,CAACmD,IAAI,CAAC;AAEjD,MAAMD,gBAAgB,GAAID,KAAyC,IAAK;EACtE,MAAMU,kBAA0C,GAAGrE,EAAE,CAACsE,KAAK,CACzDX,KAAK,EACL;IAAEP,QAAQ,EAAE,CAAAO,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEP,QAAQ,KAAIrD,EAAE,CAACsD;EAAW,CAAC,CAAE;EAClD,CAAC;EAED,IACEgB,kBAAkB,CAACjB,QAAQ,KAAKrD,EAAE,CAACsD,UAAU,IAC7CgB,kBAAkB,CAACjB,QAAQ,KAAKrD,EAAE,CAACwE,OAAO,EAC1C;IACA,IACEvE,EAAE,CAACwE,OAAO,CAACH,kBAAkB,CAAC1B,GAAG,CAAC,IAClC3C,EAAE,CAACwE,OAAO,CAACH,kBAAkB,CAACzB,MAAM,CAAC,EACrC;MACAyB,kBAAkB,CAAC1B,GAAG,GAAG,KAAK;IAChC;IAEA,IACE3C,EAAE,CAACwE,OAAO,CAACH,kBAAkB,CAAC7B,IAAI,CAAC,IACnCxC,EAAE,CAACwE,OAAO,CAACH,kBAAkB,CAAC5B,KAAK,CAAC,EACpC;MACA4B,kBAAkB,CAAC7B,IAAI,GAAG,KAAK;IACjC;EACF;EAEA,OAAO6B,kBAAkB;AAC3B,CAAC;AAED,MAAMP,YAAY,GAAGA,CACnBW,kBAAkD,EAClDrB,QAAgB,KAEhBqB,kBAAkB,aAAlBA,kBAAkB,cAAlBA,kBAAkB,GACjBrB,QAAQ,KAAKrD,EAAE,CAACwE,OAAO,GAAGvE,EAAE,CAAC0E,OAAO,CAAC,CAAC,GAAG9D,wBAAwB,CAAC,CAAE;AAEvE,MAAMwD,WAAW,GAAG,MAAAA,CAClBK,kBAAkD,EAClDrB,QAAgB,KAEhBqB,kBAAkB,aAAlBA,kBAAkB,cAAlBA,kBAAkB,GACjBrB,QAAQ,KAAKrD,EAAE,CAACwE,OAAO,GACpB,MAAMhE,cAAc,CAACP,EAAE,CAAC0E,OAAO,CAAC,GAChC,MAAM7D,uBAAuB,CAAC,CAAE;AAEtC,MAAMoB,iBAAiB,GAAId,OAA+B,IAAK;EAC7D,MAAMa,OAAO,GAAGhC,EAAE,CAAC2E,aAAa,CAAC,KAAK,CAAC;EAEvCzE,aAAa,CAAC8B,OAAO,EAAEhC,EAAE,CAACsD,UAAU,CAAC,SAAS,CAAC,CAAC;EAEhD,MAAMO,IAAI,GAAG1C,OAAO,CAAC6C,KAAK;EAC1B,KAAK,MAAMY,IAAI,IAAI5E,EAAE,CAAC6E,MAAM,CAAChB,IAAI,CAAC,EAAE;IAClC1D,UAAU,CAAC6B,OAAO,EAAEvB,gBAAgB,CAACmE,IAAI,CAAC,EAAEf,IAAI,CAACe,IAAI,CAAC,CAAC;EACzD;EAEA,MAAMjB,KAAK,GAAGxC,OAAO,CAACoB,MAAM;EAC5B,KAAK,MAAMuC,IAAI,IAAI9E,EAAE,CAAC6E,MAAM,CAAClB,KAAK,CAAC,EAAE;IACnCvD,eAAe,CAAC4B,OAAO,EAAE8C,IAAI,EAAEnB,KAAK,CAACmB,IAAI,CAAC,CAAC;EAC7C;EAEA,OAAO9C,OAAO;AAChB,CAAC","ignoreList":[]}