{"version":3,"file":"track-view.js","names":["MH","waitForReferenceElement","validateNumber","validateString","validateNumList","ViewWatcher","Widget","registerWidget","TrackView","_Widget","element","config","_config$rootMargin","_this","_classCallCheck","_callSuper","id","DUMMY_ID","watcher","reuse","root","rootMargin","replace","threshold","trackView","onDestroy","noTrackView","_inherits","_createClass","key","value","get","instance","_superPropGet","isInstanceOf","register","WIDGET_NAME","newConfigValidator","_ref","isLiteralString","undefined","debounceWindow","resizeThreshold","scrollThreshold"],"sources":["../../../src/ts/widgets/track-view.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport {\n  validateNumber,\n  validateString,\n  validateNumList,\n} from \"@lisn/utils/validation\";\n\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorFunc,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * This is a simple wrapper around the {@link ViewWatcher}. If you are using\n * the JavaScript API, you should use the {@link ViewWatcher} directly. The\n * purpose of this widget is to expose the watcher's ability to track an\n * element's position across the viewport (or a given root element) and set\n * relevant CSS properties via the HTML API. See {@link ViewWatcher.trackView}.\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-track-view` class or `data-lisn-track-view` attribute set on\n *   the element that constitutes the widget.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * Note that the root margin value can either be comma-separated or\n * space-separated.\n *\n * @example\n * This will track the element across the viewport and set the relevant CSS\n * properties.\n *\n * ```html\n * <div class=\"lisn-track-view\"></div>\n * ```\n *\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <div id=\"myRoot\"></div>\n * <div data-lisn-track-view=\"root=#myRoot\n *                            | root-margin=100px,50px\n *                            | threshold=0,0.5\"\n * ></div>\n * ```\n */\nexport class TrackView extends Widget {\n  static get(element: Element): TrackView | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, TrackView)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!TrackView.get(element)) {\n          return new TrackView(element, config);\n        }\n        return null;\n      },\n      newConfigValidator,\n    );\n  }\n\n  constructor(element: Element, config?: TrackViewConfig) {\n    super(element, { id: DUMMY_ID });\n\n    const watcher = ViewWatcher.reuse({\n      root: config?.root,\n      rootMargin: config?.rootMargin?.replace(/,/g, \" \"),\n      threshold: config?.threshold,\n    });\n\n    watcher.trackView(element, null, config);\n\n    this.onDestroy(() => watcher.noTrackView(element));\n  }\n}\n\n/**\n * @interface\n */\nexport type TrackViewConfig = {\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.ViewWatcherConfig.root | ViewWatcherConfig.root}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  root?: Element | null;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.ViewWatcherConfig.rootMargin | ViewWatcherConfig.rootMargin}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  rootMargin?: string;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.ViewWatcherConfig.threshold | ViewWatcherConfig.threshold}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  threshold?: number | number[];\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.TrackViewOptions.debounceWindow | TrackViewOptions.debounceWindow}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  debounceWindow?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.TrackViewOptions.resizeThreshold | TrackViewOptions.resizeThreshold}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  resizeThreshold?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.TrackViewOptions.scrollThreshold | TrackViewOptions.scrollThreshold}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  scrollThreshold?: number;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"track-view\";\n// Only one TrackView widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = WIDGET_NAME;\n\nconst newConfigValidator: WidgetConfigValidatorFunc<TrackViewConfig> = (\n  element: Element,\n) => {\n  return {\n    root: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    rootMargin: validateString,\n    threshold: (key, value) => validateNumList(key, value),\n    debounceWindow: validateNumber,\n    resizeThreshold: validateNumber,\n    scrollThreshold: validateNumber,\n  };\n};\n"],"mappings":"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","ignoreList":[]}