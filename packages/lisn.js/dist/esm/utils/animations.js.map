{"version":3,"file":"animations.js","names":["MC","MH","addClassesNow","removeClassesNow","getData","waitForMeasureTime","waitForMutateTime","waitForAnimationFrame","newPromise","resolve","onAnimationFrame","onEveryAnimationFrame","callback","startTime","previousTimeStamp","step","timeStamp","totalElapsed","elapsedSinceLast","shouldRepeat","iterateAnimations","element","webAnimationCallback","legacyCallback","realtime","prefixName","animation","getAnimations","resetCssAnimationsNow","PREFIX_ANIMATE_DISABLE","S_CLIENT_WIDTH"],"sources":["../../../src/ts/utils/animations.ts"],"sourcesContent":["/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  addClassesNow,\n  removeClassesNow,\n  getData,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\n\n/**\n * The callback is passed two arguments:\n * 1. The total elapsed time in milliseconds since the start\n * 2. The elapsed time in milliseconds since the previous frame\n *\n * The first time this callback is called both of these will be 0.\n *\n * The callback must return `true` if it wants to animate again on the next\n * frame and `false` if done.\n */\nexport type AnimationCallback = (\n  totalElapsed: number,\n  elapsedSinceLast: number,\n) => boolean;\n\n/**\n * Returns a promise that resolves at the next animation frame. Async/await\n * version of requestAnimationFrame.\n *\n * @returns The timestamp gotten from requestAnimationFrame\n *\n * @category Animations\n */\nexport const waitForAnimationFrame = async () =>\n  MH.newPromise<number>((resolve) => {\n    MH.onAnimationFrame(resolve);\n  });\n\n/**\n * Calls the given callback on every animation frame.\n *\n * @see {@link AnimationCallback}\n *\n * @category Animations\n */\nexport const onEveryAnimationFrame = (callback: AnimationCallback) => {\n  let startTime: number, previousTimeStamp: number;\n  const step = (timeStamp: number) => {\n    if (!startTime) {\n      startTime = timeStamp;\n      previousTimeStamp = timeStamp;\n    }\n\n    const totalElapsed = timeStamp - startTime;\n    const elapsedSinceLast = timeStamp - previousTimeStamp;\n    previousTimeStamp = timeStamp;\n\n    const shouldRepeat = callback(totalElapsed, elapsedSinceLast);\n\n    if (shouldRepeat) {\n      MH.onAnimationFrame(step);\n    }\n  };\n\n  MH.onAnimationFrame(step);\n};\n\n/**\n * @param webAnimationCallback This function is called for each\n *                             {@link https://developer.mozilla.org/en-US/docs/Web/API/Animation | Animation}\n *                             on the element. It {@link waitForMeasureTime}\n *                             before reading the animations.\n * @param legacyCallback       This function is called if the browser does not\n *                             support the Web Animations API. It is called\n *                             after {@link waitForMutateTime} so it can safely\n *                             modify styles.\n * @param realtime             If true, then it does not\n *                             {@link waitForMeasureTime} or\n *                             {@link waitForMutateTime} and runs\n *                             synchronously.\n *\n * @category Animations\n */\nexport const iterateAnimations = async (\n  element: Element,\n  webAnimationCallback: (animation: Animation) => void,\n  legacyCallback: (element: Element) => void,\n  realtime = false,\n) => {\n  /* istanbul ignore next */ // jsdom doesn't support Web Animations\n  if (\n    \"getAnimations\" in element &&\n    getData(element, MH.prefixName(\"test-legacy\")) === null\n  ) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    for (const animation of element.getAnimations()) {\n      webAnimationCallback(animation);\n    }\n\n    // Old browsers, no Animation API\n  } else {\n    if (!realtime) {\n      await waitForMutateTime();\n    }\n\n    legacyCallback(element);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const resetCssAnimationsNow = (element: Element) => {\n  addClassesNow(element, MC.PREFIX_ANIMATE_DISABLE); // cause it to reset\n  // If we remove the disable class immediately, then it will not have the\n  // effect to reset the animation, since the browser won't see any change in\n  // the classList at the start of the frame. So we ideally need to remove the\n  // disable class after the next paint. However, depending on the animation,\n  // and its state, disabling animation and waiting for the next animation\n  // frame may cause a visible glitch, so we need to force layout now.\n  /* eslint-disable-next-line @typescript-eslint/no-unused-expressions */\n  element[MC.S_CLIENT_WIDTH]; // forces layout\n\n  removeClassesNow(element, MC.PREFIX_ANIMATE_DISABLE);\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,KAAKA,EAAE;AACd,OAAO,KAAKC,EAAE;AAEd,SACEC,aAAa,EACbC,gBAAgB,EAChBC,OAAO;AAET,SACEC,kBAAkB,EAClBC,iBAAiB;;AAGnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KACnCN,EAAE,CAACO,UAAU,CAAUC,OAAO,IAAK;EACjCR,EAAE,CAACS,gBAAgB,CAACD,OAAO,CAAC;AAC9B,CAAC,CAAC;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,qBAAqB,GAAIC,QAA2B,IAAK;EACpE,IAAIC,SAAiB,EAAEC,iBAAyB;EAChD,MAAMC,IAAI,GAAIC,SAAiB,IAAK;IAClC,IAAI,CAACH,SAAS,EAAE;MACdA,SAAS,GAAGG,SAAS;MACrBF,iBAAiB,GAAGE,SAAS;IAC/B;IAEA,MAAMC,YAAY,GAAGD,SAAS,GAAGH,SAAS;IAC1C,MAAMK,gBAAgB,GAAGF,SAAS,GAAGF,iBAAiB;IACtDA,iBAAiB,GAAGE,SAAS;IAE7B,MAAMG,YAAY,GAAGP,QAAQ,CAACK,YAAY,EAAEC,gBAAgB,CAAC;IAE7D,IAAIC,YAAY,EAAE;MAChBlB,EAAE,CAACS,gBAAgB,CAACK,IAAI,CAAC;IAC3B;EACF,CAAC;EAEDd,EAAE,CAACS,gBAAgB,CAACK,IAAI,CAAC;AAC3B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,iBAAiB,GAAG,MAAAA,CAC/BC,OAAgB,EAChBC,oBAAoD,EACpDC,cAA0C,EAC1CC,QAAQ,GAAG,KAAK,KACb;EACH,2BAA2B;EAC3B,IACE,eAAe,IAAIH,OAAO,IAC1BjB,OAAO,CAACiB,OAAO,EAAEpB,EAAE,CAACwB,UAAU,CAAC,aAAa,CAAC,CAAC,KAAK,IAAI,EACvD;IACA,IAAI,CAACD,QAAQ,EAAE;MACb,MAAMnB,kBAAkB,CAAC,CAAC;IAC5B;IAEA,KAAK,MAAMqB,SAAS,IAAIL,OAAO,CAACM,aAAa,CAAC,CAAC,EAAE;MAC/CL,oBAAoB,CAACI,SAAS,CAAC;IACjC;;IAEA;EACF,CAAC,MAAM;IACL,IAAI,CAACF,QAAQ,EAAE;MACb,MAAMlB,iBAAiB,CAAC,CAAC;IAC3B;IAEAiB,cAAc,CAACF,OAAO,CAAC;EACzB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMO,qBAAqB,GAAIP,OAAgB,IAAK;EACzDnB,aAAa,CAACmB,OAAO,EAAErB,EAAE,CAAC6B,sBAAsB,CAAC,CAAC,CAAC;EACnD;EACA;EACA;EACA;EACA;EACA;EACA;EACAR,OAAO,CAACrB,EAAE,CAAC8B,cAAc,CAAC,CAAC,CAAC;;EAE5B3B,gBAAgB,CAACkB,OAAO,EAAErB,EAAE,CAAC6B,sBAAsB,CAAC;AACtD,CAAC","ignoreList":[]}