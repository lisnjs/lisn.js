{"version":3,"file":"view-trigger.cjs","names":["MC","_interopRequireWildcard","require","MH","_cssAlter","_domAlter","_domSearch","_text","_validation","_views","_animate","_animatePlay","_viewWatcher","_trigger","_debug","_interopRequireDefault","e","__esModule","default","t","WeakMap","r","n","o","i","f","__proto__","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","ViewTrigger","Trigger","register","registerTrigger","element","args","actions","config","assign","views","validateStrList","isValidView","newConfigValidator","constructor","_config$rootMargin","_config$target","logger","debug","Logger","name","formatAsString","getConfig","copyObject","lengthOf","watcher","ViewWatcher","reuse","root","rootMargin","replace","threshold","target","S_AT","oppositeViews","getOppositeViews","setupWatcher","debug6","run","onView","reverse","willAnimate","action","isInstanceOf","Animate","AnimatePlay","setupRepresentative","then","exports","key","_ref","isLiteralString","isValidScrollOffset","waitForReferenceElement","undefined","_ref2","validateString","validateNumList","tryWrap","prev","previousElementSibling","prevChild","childrenOf","hasClass","PREFIX_WRAPPER","PREFIX_GHOST","insertGhostClone","_clone"],"sources":["../../../src/ts/triggers/view-trigger.ts"],"sourcesContent":["/**\n * @module Triggers\n *\n * @categoryDescription View\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { ViewTarget, View, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { hasClass } from \"@lisn/utils/css-alter\";\nimport { insertGhostClone, tryWrap } from \"@lisn/utils/dom-alter\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateString,\n  validateNumList,\n} from \"@lisn/utils/validation\";\nimport {\n  getOppositeViews,\n  isValidView,\n  isValidScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport { Action } from \"@lisn/actions/action\";\nimport { Animate } from \"@lisn/actions/animate\";\nimport { AnimatePlay } from \"@lisn/actions/animate-play\";\n\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (optional): One or more (comma-separated) {@link View}s.\n *   Default is \"at\".\n * - Additional trigger options:\n *   - `target`: A string element specification for an element (see\n *     {@link Utils.getReferenceElement | getReferenceElement}) or a\n *     {@link Types.ScrollOffset | ScrollOffset}.\n *   - `root`: A string element specification. See\n *     {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `rootMargin`: A string.\n *   - `threshold`: A number or list (comma-separated) of numbers.\n *\n * @example\n * Show the element when it's in the viewport, hide otherwise.\n *\n * ```html\n * <div data-lisn-on-view=\"at @show\"></div>\n * ```\n *\n * @example\n * Same as above. \"views\" is optional and defaults to \"at\".\n *\n * ```html\n * <div data-lisn-on-view=\"@show\"></div>\n * ```\n *\n * @example\n * As above but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-view--@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the first time it enters the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@show +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `seen` the first time the element enters the viewport, and play\n * the animations defined on it 1000ms after each time it enters the viewport,\n * reverse the animations as soon as it goes out of view.\n *\n * ```html\n * <div data-lisn-on-view=\"@add-class=seen +once ;\n *                         @animate +do-delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * Add class `seen` when the viewport is at or below the element (element\n * above viewport), remove it when the viewport is above the element.\n * Element going to the left or right of the viewport will not trigger the\n * action. See {@link getOppositeViews}:\n *\n * ```html\n * <div data-lisn-on-view=\"at,below @add-class=seen\"></div>\n * ```\n *\n * @example\n * Add class `cls` when the viewport is above or to the left the element\n * (element below or to the right of the viewport), remove it when the\n * viewport is either at, below or to the right of the element.\n *\n * ```html\n * <div data-lisn-on-view=\"above,left @add-class=cls\"></div>\n * ```\n *\n * @example\n * Hide the element when the viewport is above the next element with class\n * `section`, show it when the viewport is below or at the target element.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next.section\"></div>\n * <div class=\"section\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next-section\"></div>\n * <div data-lisn-ref=\"section\"></div>\n * ```\n *\n * @example\n * Open the {@link Widgets.Openable | Openable} widget configured for this\n * element when the viewport is 75% down from the top of the page.\n *\n * ```html\n * <div data-lisn-on-view=\"@open +target=top:75%\"></div>\n * ```\n *\n * @category View\n */\nexport class ViewTrigger extends Trigger {\n  readonly getConfig: () => ViewTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"view\",\n      (element, args, actions, config) => {\n        return new ViewTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            views: validateStrList(\"views\", args, isValidView),\n          } as const),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config?: ViewTriggerConfig) {\n    super(element, actions, config);\n\n    const logger = debug\n      ? new debug.Logger({\n          name: `ViewTrigger-${formatAsString(element)}`,\n        })\n      : null;\n\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const watcher = ViewWatcher.reuse({\n      root: config?.root,\n      rootMargin: config?.rootMargin?.replace(/,/g, \" \"),\n      threshold: config?.threshold,\n    });\n\n    const target = config?.target ?? element;\n    const views = config?.views || MC.S_AT;\n    const oppositeViews = getOppositeViews(views);\n\n    const setupWatcher = (target: ViewTarget) => {\n      if (!MH.lengthOf(oppositeViews)) {\n        debug: logger?.debug6(\"Trigger can never be reversed, running now\");\n        // The action is never undone\n        this.run();\n      } else {\n        debug: logger?.debug6(\"Setting up trigger\", views, oppositeViews);\n        watcher.onView(target, this.run, { views });\n        watcher.onView(target, this.reverse, { views: oppositeViews });\n      }\n    };\n\n    // See comment in globals/settings under contentWrappingAllowed\n    let willAnimate = false;\n    for (const action of actions) {\n      if (\n        MH.isInstanceOf(action, Animate) ||\n        MH.isInstanceOf(action, AnimatePlay)\n      ) {\n        willAnimate = true;\n        break;\n      }\n    }\n\n    if (willAnimate) {\n      setupRepresentative(element).then(setupWatcher);\n    } else {\n      setupWatcher(target);\n    }\n  }\n}\n\n/**\n * @category View\n * @interface\n */\nexport type ViewTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link View} to use as the trigger.\n   * See also {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * Actions will be \"done\" when the view matches the given spec and \"undone\"\n   * otherwise. What the opposite views are depends on the given view. E.g. for\n   * \"at\", opposites are all the other ones;  for \"above\", the opposite ones\n   * are \"at\" and \"below\"; for \"at,above\" opposite is \"below\", etc.\n   *\n   * @defaultValue \"at\"\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * The target to use for the ViewWatcher. It can be a string offset\n   * specification.\n   * See {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * @defaultValue The element on which the {@link ViewTrigger} is defined\n   */\n  target?: ViewTarget;\n\n  /**\n   * The root to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  root?: Element | null;\n\n  /**\n   * The root margin to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * It can be either space-separated or comma-separated.\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  threshold?: number | number[];\n};\n\n// ----------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<ViewTriggerConfig, \"views\">\n> = (element) => {\n  return {\n    target: (key, value) =>\n      MH.isLiteralString(value) && isValidScrollOffset(value)\n        ? value\n        : ((MH.isLiteralString(value)\n            ? waitForReferenceElement(value, element)\n            : null) ?? undefined),\n    root: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    rootMargin: validateString,\n    threshold: (key, value) => validateNumList(key, value),\n  };\n};\n\nconst setupRepresentative = async (element: Element): Promise<Element> => {\n  let target: Element | null = await tryWrap(element);\n  if (!target) {\n    // Not allowed to wrap. Create a dummy hidden clone that's not animated and\n    // position it absolutely in a wrapper of size 0 that's inserted just\n    // before the actual element, so that the hidden clone overlaps the actual\n    // element's regular (pre-transformed) position.\n\n    const prev = element.previousElementSibling;\n    const prevChild = MH.childrenOf(prev)[0];\n    if (\n      prev &&\n      hasClass(prev, MC.PREFIX_WRAPPER) &&\n      prevChild &&\n      hasClass(prevChild, MC.PREFIX_GHOST)\n    ) {\n      // Already cloned by a previous animate action?\n      target = prevChild;\n    } else {\n      target = (await insertGhostClone(element))._clone;\n    }\n  }\n\n  return target;\n};\n"],"mappings":"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","ignoreList":[]}