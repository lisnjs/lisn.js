{"version":3,"file":"overlays.cjs","names":["MC","_interopRequireWildcard","require","MH","_settings","_cssAlter","_domAlter","_domEvents","_domOptimize","_log","_text","_scroll","_xMap","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_createForOfIteratorHelper","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","_n","F","s","done","value","f","TypeError","o","next","_arrayLikeToArray","toString","slice","constructor","name","from","test","_regeneratorRuntime","prototype","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","getOverlay","exports","userOptions","_overlays$get","options","tryGetOverlayOptions","overlays","_parent","_overlayKey","createOverlay","_ref","_callee","canReuse","_overlays$get2","existingOverlay","overlay","isPercentageHOffset","isPercentageVOffset","needsContentWrapping","parentEl","_callee$","_context","fetchOverlayOptions","_id","parentOf","waitForMutateTime","createOnlyOverlay","sGet","id","includes","_style","left","right","top","bottom","isScrollable","axis","settings","contentWrappingAllowed","wrapScrollingContent","logWarn","position","S_ABSOLUTE","addClasses","prefixName","moveElement","to","_x","newXWeakMap","newMap","_userOptions$data","_userOptions$id","style","getCssProperties","data","tryGetParent","parent","_data","getOverlayKey","_ref2","_callee2","_userOptions$data2","_userOptions$id2","_callee2$","_context2","fetchParent","_x2","objToStrKey","finalCssProperties","merge","S_FIXED","isEmpty","userSuppliedParent","getBody","tryGetMainContentElement","_ref3","_callee3","_callee3$","_context3","t0","waitForElement","t1","fetchMainContentElement","_x3","_x4","createElement","addClassesNow","_iterator","keysOf","_step","attr","setDataNow","camelToKebabCase","err","_iterator2","_step2","prop","setStylePropNow"],"sources":["../../../src/ts/utils/overlays.ts"],"sourcesContent":["/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  addClasses,\n  addClassesNow,\n  setDataNow,\n  setStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, wrapScrollingContent } from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { camelToKebabCase, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  isScrollable,\n  tryGetMainContentElement,\n  fetchMainContentElement,\n} from \"@lisn/utils/scroll\";\n\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Overlays\n * @interface\n */\nexport type OverlayOptions = {\n  /**\n   * The parent element to insert the overlay into.\n   *\n   * If not given, then:\n   * - if the overlay is to have a `position: fixed`, then `document.body` is used\n   * - otherwise,\n   *   {@link Watchers/ScrollWatcher.ScrollWatcher.fetchMainContentElement | ScrollWatcher.fetchMainContentElement} is\n   *   used\n   */\n  parent?: HTMLElement;\n\n  /**\n   * If set, then it will be assigned as the DOM element ID for the new\n   * overlay.\n   *\n   * Furthermore, the new overlay will be created and will not be saved for\n   * future reuse.\n   *\n   * By default, if `id` is not given, the overlay will be saved, and if\n   * {@link createOverlay} is called again with the same `style`, `data` and\n   * parent, the previous overlay is returned.\n   */\n  id?: string;\n\n  /**\n   * Every entry in this object will be set on the `style` of the new overlay.\n   *\n   * **IMPORTANT:** By default overlays are positioned absolutely, so if you need\n   * another positioning, override this here by setting a `position` key in\n   * `style`. If position is either \"absolute\" (by default or explicitly set) or\n   * \"fixed\", and none of `top` or `bottom` is given, `top: 0` is set; and\n   * similarly, if none of `left` or `right` is given, `left: 0` is set.\n   */\n  style?: Record<string, string>;\n\n  /**\n   * Every entry in this object will be set as a data attribute on the new\n   * overlay.\n   *\n   * Keys can be either kebab-case or camelCase (they will be converted if\n   * needed). Do _not_ include the \"data-\" prefix which will be added\n   * automatically. E.g. both \"foo-bar\" and \"fooBar\" will result in\n   * \"data-foo-bar\" being set.\n   */\n  data?: Record<string, string>;\n};\n\n/**\n * Returns an existing overlay for this specification. If the overlay was just\n * created it may not yet be attached to the DOM.\n *\n * @category Overlays\n */\nexport const getOverlay = (userOptions?: OverlayOptions) => {\n  const options = tryGetOverlayOptions(userOptions);\n  if (!options) {\n    return null;\n  }\n\n  return overlays.get(options._parent)?.get(options._overlayKey) || null;\n};\n\n/**\n * Creates a new overlay, and inserts it into the DOM as soon as\n * {@link waitForMutateTime} resolves, or returns an already existing matching\n * overlay.\n *\n * **Note** that if {@link OverlayOptions.id} is set, a new overlay will\n * _always_ be created.\n *\n * @category Overlays\n */\nexport const createOverlay = async (userOptions?: OverlayOptions) => {\n  const options = await fetchOverlayOptions(userOptions);\n  const canReuse = !options._id;\n\n  if (canReuse) {\n    const existingOverlay = overlays\n      .get(options._parent)\n      ?.get(options._overlayKey);\n\n    if (existingOverlay) {\n      if (!MH.parentOf(existingOverlay)) {\n        // not yet inserted into the DOM, so wait until it is\n        await waitForMutateTime();\n      }\n      return existingOverlay;\n    }\n  }\n\n  // Create a new one\n  const overlay = createOnlyOverlay(options);\n  if (canReuse) {\n    // Save it now before awating, so that concurrent requests to create the\n    // same one use it\n    overlays.sGet(options._parent).set(options._overlayKey, overlay);\n  } else {\n    overlay.id = options._id;\n  }\n\n  const isPercentageHOffset = MH.includes(\n    (options._style.left || \"\") + (options._style.right || \"\"),\n    \"%\",\n  );\n\n  const isPercentageVOffset = MH.includes(\n    (options._style.top || \"\") + (options._style.bottom || \"\"),\n    \"%\",\n  );\n\n  let needsContentWrapping = false;\n  let parentEl = options._parent;\n  if (isPercentageHOffset || isPercentageVOffset) {\n    needsContentWrapping =\n      (isPercentageHOffset && isScrollable(parentEl, { axis: \"x\" })) ||\n      (isPercentageVOffset && isScrollable(parentEl, { axis: \"y\" }));\n  }\n\n  if (needsContentWrapping) {\n    if (settings.contentWrappingAllowed) {\n      parentEl = await wrapScrollingContent(parentEl);\n    } else {\n      logWarn(\n        \"Percentage offset view trigger with scrolling root requires contentWrappingAllowed\",\n      );\n    }\n  }\n\n  if (options._style.position === MC.S_ABSOLUTE) {\n    // Ensure parent has non-static positioning\n    addClasses(parentEl, MH.prefixName(\"overlay-container\"));\n  }\n\n  await moveElement(overlay, { to: parentEl });\n\n  return overlay;\n};\n\n// ----------------------------------------\n\ntype OverlayOptionsInternal = {\n  _parent: HTMLElement;\n  _id: string;\n  _style: Record<string, string>;\n  _data: Record<string, string>;\n  _overlayKey: string;\n};\n\nconst overlays = newXWeakMap<HTMLElement, Map<string, HTMLElement>>(() =>\n  MH.newMap(),\n);\n\nconst tryGetOverlayOptions = (\n  userOptions: OverlayOptions | undefined,\n): OverlayOptionsInternal | null => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = tryGetParent(userOptions?.parent, style.position);\n  if (!parentEl) {\n    return null;\n  }\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst fetchOverlayOptions = async (\n  userOptions: OverlayOptions | undefined,\n): Promise<OverlayOptionsInternal> => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = await fetchParent(userOptions?.parent, style.position);\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst getOverlayKey = (\n  style: Record<string, string>,\n  data: Record<string, string>,\n) => objToStrKey(style) + \"|\" + objToStrKey(data);\n\nconst getCssProperties = (style: Record<string, string> | undefined) => {\n  const finalCssProperties: Record<string, string> = MH.merge(\n    { position: MC.S_ABSOLUTE }, // default\n    style,\n  );\n\n  if (\n    finalCssProperties.position === MC.S_ABSOLUTE ||\n    finalCssProperties.position === MC.S_FIXED\n  ) {\n    if (\n      MH.isEmpty(finalCssProperties.top) &&\n      MH.isEmpty(finalCssProperties.bottom)\n    ) {\n      finalCssProperties.top = \"0px\";\n    }\n\n    if (\n      MH.isEmpty(finalCssProperties.left) &&\n      MH.isEmpty(finalCssProperties.right)\n    ) {\n      finalCssProperties.left = \"0px\";\n    }\n  }\n\n  return finalCssProperties;\n};\n\nconst tryGetParent = (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED ? MH.getBody() : tryGetMainContentElement());\n\nconst fetchParent = async (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED\n    ? await waitForElement(MH.getBody)\n    : await fetchMainContentElement());\n\nconst createOnlyOverlay = (options: OverlayOptionsInternal) => {\n  const overlay = MH.createElement(\"div\");\n\n  addClassesNow(overlay, MH.prefixName(\"overlay\"));\n\n  const data = options._data;\n  for (const attr of MH.keysOf(data)) {\n    setDataNow(overlay, camelToKebabCase(attr), data[attr]);\n  }\n\n  const style = options._style;\n  for (const prop of MH.keysOf(style)) {\n    setStylePropNow(overlay, prop, style[prop]);\n  }\n\n  return overlay;\n};\n"],"mappings":"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","ignoreList":[]}