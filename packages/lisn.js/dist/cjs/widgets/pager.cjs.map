{"version":3,"file":"pager.cjs","names":["MC","_interopRequireWildcard","require","MH","_cssAlter","_domOptimize","_domQuery","_event","_gesture","_math","_misc","_scroll","_validation","_callback","_gestureWatcher3","_scrollWatcher","_viewWatcher3","_widget","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","Pager","Widget","element","instance","DUMMY_ID","isInstanceOf","register","registerWidget","WIDGET_NAME","config","configValidator","constructor","_Pager$get","destroyPromise","destroy","id","pages","toggles","switches","nextPrevSwitch","_next","nextSwitch","_prev","prevSwitch","pageSelector","getDefaultWidgetSelector","PREFIX_PAGE__FOR_SELECT","toggleSelector","PREFIX_TOGGLE__FOR_SELECT","switchSelector","PREFIX_SWITCH__FOR_SELECT","nextSwitchSelector","PREFIX_NEXT_SWITCH__FOR_SELECT","prevSwitchSelector","PREFIX_PREV_SWITCH__FOR_SELECT","lengthOf","push","querySelectorAll","getVisibleContentChildren","filter","matches","querySelector","numPages","usageError","page","contains","components","_pages","_toggles","_switches","_nextPrevSwitch","methods","getMethods","promiseResolve","then","isDestroyed","init","nextPage","_nextPage","prevPage","_prevPage","goToPage","pageNum","_goToPage","disablePage","_disablePage","enablePage","_enablePage","togglePage","_togglePage","isPageDisabled","_isPageDisabled","getCurrentPage","_getCurrentPage","getPreviousPage","_getPreviousPage","getCurrentPageNum","_getCurrentPageNum","getPreviousPageNum","_getPreviousPageNum","onTransition","_onTransition","getPages","getSwitches","getToggles","exports","MIN_TIME_BETWEEN_WHEEL","S_CURRENT","S_ARIA_CURRENT","ARIA_PREFIX","S_COVERED","S_NEXT","S_TOTAL_PAGES","S_CURRENT_PAGE","S_PAGE_NUMBER","PREFIXED_NAME","prefixName","PREFIX_ROOT","PREFIX_PAGE_CONTAINER","PREFIX_PAGE","PREFIX_IS_FULLSCREEN","PREFIX_USE_PARALLAX","PREFIX_TOTAL_PAGES","PREFIX_CURRENT_PAGE","PREFIX_CURRENT_PAGE_IS_LAST","PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED","PREFIX_CURRENT_PAGE_IS_LAST_ENABLED","PREFIX_PAGE_STATE","PREFIX_PAGE_NUMBER","VAR_TOTAL_PAGES","prefixCssJsVar","VAR_CURRENT_PAGE","VAR_PAGE_NUMBER","initialPage","validateNumber","fullscreen","validateBoolean","parallax","horizontal","useGestures","key","isNullish","undefined","bool","toBool","validateStrList","validateString","isValidInputDevice","alignGestureDirection","preventDefault","fetchClosestScrollable","waitForMeasureTime","_getClosestScrollable","getClosestScrollable","active","setPageNumber","lastPromise","el","setData","setStyleProp","setCurrentPage","pagerEl","currPageNum","isFirstEnabled","isLastEnabled","setBoolData","setPageState","state","widget","_pages$","_config$initialPage","_config$fullscreen","_config$parallax","_config$horizontal","_config$useGestures","_config$alignGestureD","_config$preventDefaul","pageContainer","parentElement","toInt","isFullscreen","isParallax","isHorizontal","orientation","S_HORIZONTAL","S_VERTICAL","scrollWatcher","ScrollWatcher","reuse","gestureWatcher","viewWatcher","ViewWatcher","rootMargin","threshold","GestureWatcher","getGestureOptions","directions","devices","isBoolean","intents","S_DRAG","S_SCROLL","deltaThreshold","scrollToPager","scrollTo","scrollable","transitionOnGesture","target","data","swapDirection","intent","includes","S_LEFT","S_UP","direction","addWatcher","_gestureWatcher","_viewWatcher","onGesture","S_RIGHT","S_DOWN","onView","views","getPageNumForEvent","event","currentTargetOf","isElement","getData","toggleClickListener","switchClickListener","nextSwitchClickListener","prevSwitchClickListener","removeWatcher","_gestureWatcher2","_viewWatcher2","offGesture","offView","onDisable","onEnable","onDestroy","waitForMutateTime","delDataNow","PREFIX_ORIENTATION","delStylePropNow","idx","removeClassesNow","listener","removeEventListenerFrom","S_CLICK","delAttr","addClasses","disableInitialTransition","addEventListenerTo","disabledPages","callbacks","newSet","fetchScrollOptions","asFractionOf","weCanInterrupt","lastPageNum","lastTransition","canTransition","gestureData","isDisabled","device","S_WHEEL","timeNow","scroll","callback","invoke","setAttr","targetPage","S_DISABLED","handler","add","wrapCallback"],"sources":["../../../src/ts/widgets/pager.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  addClasses,\n  removeClassesNow,\n  getData,\n  setData,\n  setBoolData,\n  delDataNow,\n  setStyleProp,\n  delStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { isValidInputDevice } from \"@lisn/utils/gesture\";\nimport { toInt } from \"@lisn/utils/math\";\nimport { toBool } from \"@lisn/utils/misc\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport {\n  validateStrList,\n  validateNumber,\n  validateString,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport {\n  GestureWatcher,\n  OnGestureOptions,\n  GestureData,\n} from \"@lisn/watchers/gesture-watcher\";\nimport { ScrollWatcher, ScrollOptions } from \"@lisn/watchers/scroll-watcher\";\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  WidgetCallback,\n  WidgetHandler,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as a {@link Pager} widget.\n *\n * The Pager widget sets up the elements that make up its pages to be overlayed\n * on top of each other with only one of them visible at a time. When a user\n * performs a scroll-like gesture (see {@link GestureWatcher}), the pages are\n * flicked through: gestures, whose direction is down (or left) result in the\n * next page being shown, otherwise the previous.\n *\n * The widget should have more than one page.\n *\n * Optionally, the widget can have a set of \"switch\" elements and a set of\n * \"toggle\" elements which correspond one-to-one to each page. Switches go to\n * the given page and toggles toggle the enabled/disabled state of the page.\n *\n * **IMPORTANT:** The page elements will be positioned absolutely, and\n * therefore the pager likely needs to have an explicit height. If you enable\n * {@link PagerConfig.fullscreen}, then the element will get `height: 100vh`\n * set. Otherwise, you need to set its height in your CSS.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Pager}\n * widget on a given element. Use {@link Pager.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the pager element:\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n * - `data-lisn-use-parallax`: `\"true\"` or `\"false\"`\n * - `data-lisn-total-pages`: the number of pages\n * - `data-lisn-current-page`: the current page number\n * - `data-lisn-current-page-is-last`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-first-enabled`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-last-enabled`: `\"true\"` or `\"false\"`\n *\n * The following dynamic CSS properties are also set on the pager element's style:\n * - `--lisn-js--total-pages`: the number of pages\n * - `--lisn-js--current-page`: the current page number\n *\n * The following dynamic attributes are set on each page, toggle or switch element:\n * - `data-lisn-page-state`: `\"current\"`, `\"next\"`, `\"covered\"` or `\"disabled\"`\n * - `data-lisn-page-number`: the corresponding page's number\n *\n * The following analogous dynamic CSS properties are also set on each page,\n * toggle or switch element's style:\n * - `--lisn-js--page-number`: the corresponding page's number\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-pager` class or `data-lisn-pager` attribute set on the container\n *   element that constitutes the pager\n * - `lisn-pager-page` class or `data-lisn-pager-page` attribute set on\n *   elements that should act as the pages.\n * - `lisn-pager-toggle` class or `data-lisn-pager-toggle` attribute set on\n *   elements that should act as the toggles.\n * - `lisn-pager-switch` class or `data-lisn-pager-switch` attribute set on\n *   elements that should act as the switches.\n *\n * When using auto-widgets, the elements that will be used as pages are\n * discovered in the following way:\n * 1. The top-level element that constitutes the widget is searched for any\n *    elements that contain the `lisn-pager-page` class or\n *    `data-lisn-pager-page` attribute. They do not have to be immediate\n *    children of the root element, but they **should** all be siblings.\n * 2. If there are no such elements, all of the immediate children of the\n *    widget element except any `script` or `style` elements are taken as the\n *    pages.\n *\n * The toggles and switches are descendants of the top-level element that\n * constitutes the widget, that contain the\n * `lisn-pager-toggle`/`lisn-pager-switch` class or `data-lisn-pager-toggle`/\n * `data-lisn-pager-switch` attribute. They do not have to be immediate\n * children of the root element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple pager with default settings.\n *\n * ```html\n * <div class=\"lisn-pager\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * As above but with all settings explicitly set to their default (`false`).\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen=false | parallax=false | horizontal=false\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>Horizontal: Page 1</div>\n *   <div>Horizontal: Page 2</div>\n *   <div>Horizontal: Page 3</div>\n *   <div>Horizontal: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings, as well as toggle and switch buttons.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>\n *     <div data-lisn-pager-page>Horizontal: Page 1</div>\n *     <div data-lisn-pager-page>Horizontal: Page 2</div>\n *     <div data-lisn-pager-page>Horizontal: Page 3</div>\n *     <div data-lisn-pager-page>Horizontal: Page 4</div>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-toggle>Toggle page 1</button>\n *     <button data-lisn-pager-toggle>Toggle page 2</button>\n *     <button data-lisn-pager-toggle>Toggle page 3</button>\n *     <button data-lisn-pager-toggle>Toggle page 4</button>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-switch>Go to page 1</button>\n *     <button data-lisn-pager-switch>Go to page 2</button>\n *     <button data-lisn-pager-switch>Go to page 3</button>\n *     <button data-lisn-pager-switch>Go to page 4</button>\n *   </div>\n * </div>\n * ```\n */\nexport class Pager extends Widget {\n  /**\n   * Advances the widget's page by 1. If the current page is the last one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled down/right\n   * (depending on the gesture direction).\n   */\n  readonly nextPage: () => Promise<void>;\n\n  /**\n   * Reverses the widget's page by 1. If the current page is the first one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled up/left\n   * (depending on the gesture direction).\n   */\n  readonly prevPage: () => Promise<void>;\n\n  /**\n   * Advances the widget to the given page. Note that page numbers start at 1.\n   *\n   * If this page is disabled, nothing is done.\n   */\n  readonly goToPage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Disables the given page number. Note that page numbers start at 1.\n   *\n   * The page will be skipped during transitioning to previous/next.\n   *\n   * If the page is the current one, then the current page will be switched to\n   * the previous one (that's not disabled), or if this is the first enabled\n   * page, then it will switch to the next one that's not disabled.\n   *\n   * If this is the last enabled page, nothing is done.\n   */\n  readonly disablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page number. Note that page numbers start at 1.\n   */\n  readonly enablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page if it is disabled, otherwise disables it. Note\n   * that page numbers start at 1.\n   */\n  readonly togglePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Returns true if the given page number is disabled. Note that page\n   * numbers start at 1.\n   */\n  readonly isPageDisabled: (pageNum: number) => boolean;\n\n  /**\n   * Returns the current page.\n   */\n  readonly getCurrentPage: () => Element;\n\n  /**\n   * Returns the previous page, before the last transition.\n   *\n   * If there has been no change of page, returns the first page, same as\n   * {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPage: () => Element;\n\n  /**\n   * Returns the number of the current page. Note that numbers start at 1.\n   */\n  readonly getCurrentPageNum: () => number;\n\n  /**\n   * Returns the number of the previous page, before the last transition. Note\n   * that numbers start at 1.\n   *\n   * If there has been no change of page, returns the number of the first page,\n   * same as {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPageNum: () => number;\n\n  /**\n   * The given handler will be called whenever there is a change of page. It\n   * will be called after the current page number is updated internally (so\n   * {@link getPreviousPageNum} and {@link getCurrentPageNum} will return the\n   * updated numbers), but before the page transition styles are updated.\n   *\n   * If the handler returns a promise, it will be awaited upon.\n   */\n  readonly onTransition: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns the page elements.\n   */\n  readonly getPages: () => Element[];\n\n  /**\n   * Returns the toggle elements if any.\n   */\n  readonly getToggles: () => Element[];\n\n  /**\n   * Returns the switch elements if any.\n   */\n  readonly getSwitches: () => Element[];\n\n  static get(element: Element): Pager | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Pager)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!Pager.get(element)) {\n          return new Pager(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If there are less than 2 pages given or found, or if any\n   *                page is not a descendant of the main pager element.\n   */\n  constructor(element: Element, config?: PagerConfig) {\n    const destroyPromise = Pager.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const pages = config?.pages || [];\n    const toggles = config?.toggles || [];\n    const switches = config?.switches || [];\n    const nextPrevSwitch = {\n      _next: config?.nextSwitch || null,\n      _prev: config?.prevSwitch || null,\n    };\n\n    const pageSelector = getDefaultWidgetSelector(PREFIX_PAGE__FOR_SELECT);\n    const toggleSelector = getDefaultWidgetSelector(PREFIX_TOGGLE__FOR_SELECT);\n    const switchSelector = getDefaultWidgetSelector(PREFIX_SWITCH__FOR_SELECT);\n    const nextSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_NEXT_SWITCH__FOR_SELECT,\n    );\n    const prevSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_PREV_SWITCH__FOR_SELECT,\n    );\n\n    if (!MH.lengthOf(pages)) {\n      pages.push(...MH.querySelectorAll(element, pageSelector));\n\n      if (!MH.lengthOf(pages)) {\n        pages.push(\n          ...getVisibleContentChildren(element).filter(\n            (e) => !e.matches(switchSelector),\n          ),\n        );\n      }\n    }\n\n    if (!MH.lengthOf(toggles)) {\n      toggles.push(...MH.querySelectorAll(element, toggleSelector));\n    }\n\n    if (!MH.lengthOf(switches)) {\n      switches.push(...MH.querySelectorAll(element, switchSelector));\n    }\n\n    if (!nextPrevSwitch._next) {\n      nextPrevSwitch._next = MH.querySelector(element, nextSwitchSelector);\n    }\n\n    if (!nextPrevSwitch._prev) {\n      nextPrevSwitch._prev = MH.querySelector(element, prevSwitchSelector);\n    }\n\n    const numPages = MH.lengthOf(pages);\n    if (numPages < 2) {\n      throw MH.usageError(\"Pager must have more than 1 page\");\n    }\n\n    for (const page of pages) {\n      if (!element.contains(page) || page === element) {\n        throw MH.usageError(\"Pager's pages must be its descendants\");\n      }\n    }\n\n    const components = {\n      _pages: pages,\n      _toggles: toggles,\n      _switches: switches,\n      _nextPrevSwitch: nextPrevSwitch,\n    };\n\n    const methods = getMethods(this, components, element, config);\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, element, components, config, methods);\n    });\n\n    this.nextPage = () => methods._nextPage();\n    this.prevPage = () => methods._prevPage();\n    this.goToPage = (pageNum) => methods._goToPage(pageNum);\n    this.disablePage = methods._disablePage;\n    this.enablePage = methods._enablePage;\n    this.togglePage = methods._togglePage;\n    this.isPageDisabled = methods._isPageDisabled;\n    this.getCurrentPage = methods._getCurrentPage;\n    this.getPreviousPage = methods._getPreviousPage;\n    this.getCurrentPageNum = methods._getCurrentPageNum;\n    this.getPreviousPageNum = methods._getPreviousPageNum;\n    this.onTransition = methods._onTransition;\n\n    this.getPages = () => [...pages];\n    this.getSwitches = () => [...switches];\n    this.getToggles = () => [...toggles];\n  }\n}\n\n/**\n * @interface\n */\nexport type PagerConfig = {\n  /**\n   * The elements that will make up the pages.\n   *\n   * They do not have to be immediate children of the root element, but they\n   * should all be siblings.\n   *\n   * The widget should have more than one page.\n   *\n   * If this is not specified, then\n   * 1. The top-level element that constitutes the widget is searched for any\n   *    elements that contain the `lisn-pager-page` class or the\n   *    `data-lisn-pager-page` attribute, and these are used as pages.\n   * 2. If there are no such elements, all of the immediate children of the\n   *    widget element (other than `script` and `style` elements) are taken as\n   *    the pages.\n   *\n   * **IMPORTANT:** The page elements will be positioned absolutely relative to\n   * their immediate parent, but their parent likely needs to have an explicit\n   * height. If you enable {@link PagerConfig.fullscreen}, then the page parent\n   * will get `height: 100vh` set. Otherwise, you need to set its height in\n   * your CSS.\n   *\n   * @defaultValue undefined\n   */\n  pages?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that toggles the\n   * enabled/disabled state of the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-toggle`\n   * class or the `data-lisn-pager-toggle` attribute, and these are used as\n   * toggles.\n   *\n   * @defaultValue undefined\n   */\n  toggles?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that switches the\n   * pager to the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-switch`\n   * class or the `data-lisn-pager-switch` attribute, and these are used as\n   * switches.\n   *\n   * @defaultValue undefined\n   */\n  switches?: Element[];\n\n  /**\n   * This element will be assigned a click listener that goes to the next page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-next-switch` class or the `data-lisn-pager-next-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  nextSwitch?: Element;\n\n  /**\n   * This element will be assigned a click listener that goes to the previous\n   * page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-prev-switch` class or the `data-lisn-pager-prev-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  prevSwitch?: Element;\n\n  /**\n   * Set the initial page number.\n   *\n   * @defaultValue 1\n   */\n  initialPage?: number;\n\n  /**\n   * If true, then:\n   * - the pager's height will be set to the viewport height (100vh)\n   * - the pager's scrolling ancestor will be scrolled to the top of the pager\n   *   when 30% of it is in view\n   * - scrolling beyond the first or last page will initiate scroll up/left or\n   *   down/right the pager's scrolling ancestor in order to allow \"leaving\"\n   *   the pager\n   *\n   * Note that since the pager's pages will be positioned absolutely, if you do\n   * _not_ enable this option, you will need to manually set the height of the\n   * page parent element via CSS.\n   *\n   * @defaultValue false\n   */\n  fullscreen?: boolean;\n\n  /**\n   * Use a parallax effect for switching pages.\n   *\n   * @defaultValue false\n   */\n  parallax?: boolean;\n\n  /**\n   * Transition pages sideways instead of vertically.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Transition pages upon user scroll-like and drag-like gestures via the\n   * given {@link GestureDevice}s. If set to true, then gestures using all\n   * device types are supported.\n   *\n   * Note that drag gesture is only supported by the \"pointer\" device and also\n   * the \"pointer\" device only supports drag gestures, so if you want to\n   * disable drag gestures, simply pass \"wheel,key,touch\" as this option.\n   *\n   * @defaultValue true\n   */\n  useGestures?: boolean | CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If true, then pages will be advanced backwards/forwards regardless if the\n   * gesture direction is horizontal or vertical.\n   *\n   * If false then, a gesture will go to the next page only if its direction is\n   * down (or right if {@link horizontal}), and to the previous page only if\n   * the gesture direction is up (or left if {@link horizontal}).\n   *\n   * **IMPORTANT:**\n   * If {@link fullscreen}, {@link preventDefault} and\n   * {@link alignGestureDirection} are all true, then the pager's scrollable\n   * parent must be scrollable in the same direction as the pager orientation,\n   * otherwise automatic scroll beyond the last/first page won't work.\n   *\n   * @defaultValue false\n   */\n  alignGestureDirection?: boolean;\n\n  /**\n   * Whether to prevent the default action for events that would result in\n   * gestures.\n   *\n   * **NOTE:**\n   * If true (default), then all events that originate from a device given in\n   * {@link useGestures} and that could result in a gesture will be prevented\n   * regardless of their direction and whether {@link alignGestureDirection} is\n   * true.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n};\n\n// --------------------\n\ntype Components = {\n  _pages: Element[];\n  _toggles: Element[];\n  _switches: Element[];\n  _nextPrevSwitch: { _next: Element | null; _prev: Element | null };\n};\n\n// Swiping on some trackpads results in \"trailing\" wheel events sent for some\n// while which results in multiple pages being advanced in a short while. So we\n// limit how often pages can be advanced.\nconst MIN_TIME_BETWEEN_WHEEL = 1000;\n\nconst S_CURRENT = \"current\";\nconst S_ARIA_CURRENT = MC.ARIA_PREFIX + S_CURRENT;\nconst S_COVERED = \"covered\";\nconst S_NEXT = \"next\";\nconst S_TOTAL_PAGES = \"total-pages\";\nconst S_CURRENT_PAGE = \"current-page\";\nconst S_PAGE_NUMBER = \"page-number\";\nconst WIDGET_NAME = \"pager\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_PAGE_CONTAINER = `${PREFIXED_NAME}__page-container`;\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_PAGE = `${PREFIXED_NAME}__page`;\nconst PREFIX_PAGE__FOR_SELECT = `${PREFIXED_NAME}-page`;\nconst PREFIX_TOGGLE__FOR_SELECT = `${PREFIXED_NAME}-toggle`;\nconst PREFIX_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-switch`;\nconst PREFIX_NEXT_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-next-switch`;\nconst PREFIX_PREV_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-prev-switch`;\n\nconst PREFIX_IS_FULLSCREEN = MH.prefixName(\"is-fullscreen\");\nconst PREFIX_USE_PARALLAX = MH.prefixName(\"use-parallax\");\nconst PREFIX_TOTAL_PAGES = MH.prefixName(S_TOTAL_PAGES);\nconst PREFIX_CURRENT_PAGE = MH.prefixName(S_CURRENT_PAGE);\nconst PREFIX_CURRENT_PAGE_IS_LAST = `${PREFIX_CURRENT_PAGE}-is-last`;\nconst PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED = `${PREFIX_CURRENT_PAGE}-is-first-enabled`;\nconst PREFIX_CURRENT_PAGE_IS_LAST_ENABLED = `${PREFIX_CURRENT_PAGE_IS_LAST}-enabled`;\nconst PREFIX_PAGE_STATE = MH.prefixName(\"page-state\");\nconst PREFIX_PAGE_NUMBER = MH.prefixName(S_PAGE_NUMBER);\nconst VAR_TOTAL_PAGES = MH.prefixCssJsVar(S_TOTAL_PAGES);\nconst VAR_CURRENT_PAGE = MH.prefixCssJsVar(S_CURRENT_PAGE);\nconst VAR_PAGE_NUMBER = MH.prefixCssJsVar(S_PAGE_NUMBER);\n\n// Only one Pager widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<PagerConfig> = {\n  initialPage: validateNumber,\n  fullscreen: validateBoolean,\n  parallax: validateBoolean,\n  horizontal: validateBoolean,\n  useGestures: (key, value) => {\n    if (MH.isNullish(value)) {\n      return undefined;\n    }\n\n    const bool = toBool(value);\n    if (bool !== null) {\n      return bool;\n    }\n\n    return (\n      validateStrList(\n        \"useGestures\",\n        validateString(key, value),\n        isValidInputDevice,\n      ) || true\n    );\n  },\n  alignGestureDirection: validateBoolean,\n  preventDefault: validateBoolean,\n};\n\nconst fetchClosestScrollable = (element: Element) =>\n  waitForMeasureTime().then(\n    () => getClosestScrollable(element, { active: true }) ?? undefined,\n  );\n\nconst setPageNumber = (components: Components, pageNum: number) => {\n  let lastPromise: Promise<void> = MH.promiseResolve();\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      setData(el, PREFIX_PAGE_NUMBER, pageNum + \"\");\n      lastPromise = setStyleProp(el, VAR_PAGE_NUMBER, pageNum + \"\");\n    }\n  }\n\n  return lastPromise;\n};\n\nconst setCurrentPage = (\n  pagerEl: Element,\n  currPageNum: number,\n  numPages: number,\n  isPageDisabled: (pageNum: number) => boolean,\n) => {\n  let isFirstEnabled = true;\n  let isLastEnabled = true;\n  for (let n = 1; n <= numPages; n++) {\n    if (!isPageDisabled(n)) {\n      if (n < currPageNum) {\n        isFirstEnabled = false;\n      } else if (n > currPageNum) {\n        isLastEnabled = false;\n      }\n    }\n  }\n\n  setStyleProp(pagerEl, VAR_CURRENT_PAGE, currPageNum + \"\");\n  setData(pagerEl, PREFIX_CURRENT_PAGE, currPageNum + \"\");\n  setBoolData(pagerEl, PREFIX_CURRENT_PAGE_IS_LAST, numPages === numPages);\n  setBoolData(pagerEl, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED, isFirstEnabled);\n  return setBoolData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST_ENABLED,\n    isLastEnabled,\n  );\n};\n\nconst setPageState = async (\n  components: Components,\n  pageNum: number,\n  state: string,\n) => {\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      await setData(el, PREFIX_PAGE_STATE, state);\n    }\n  }\n};\n\nconst init = (\n  widget: Pager,\n  element: Element,\n  components: Components,\n  config: PagerConfig | undefined,\n  methods: ReturnType<typeof getMethods>,\n) => {\n  const pages = components._pages;\n  const toggles = components._toggles;\n  const switches = components._switches;\n  const nextSwitch = components._nextPrevSwitch._next;\n  const prevSwitch = components._nextPrevSwitch._prev;\n  const pageContainer = pages[0]?.parentElement;\n\n  let initialPage = toInt(config?.initialPage ?? 1);\n  const isFullscreen = config?.fullscreen ?? false;\n  const isParallax = config?.parallax ?? false;\n  const isHorizontal = config?.horizontal ?? false;\n  const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n  const useGestures = config?.useGestures ?? true;\n  const alignGestureDirection = config?.alignGestureDirection ?? false;\n  const preventDefault = config?.preventDefault ?? true;\n\n  const scrollWatcher = ScrollWatcher.reuse();\n  let gestureWatcher: GestureWatcher | null = null;\n  let viewWatcher: ViewWatcher | null = null;\n  if (isFullscreen) {\n    viewWatcher = ViewWatcher.reuse({ rootMargin: \"0px\", threshold: 0.3 });\n  }\n\n  if (useGestures) {\n    gestureWatcher = GestureWatcher.reuse();\n  }\n\n  const getGestureOptions = (\n    directions: Direction | Direction[] | undefined,\n  ): OnGestureOptions => {\n    return {\n      devices: MH.isBoolean(useGestures) // i.e. true; if it's false, then gestureWatcher is null\n        ? undefined // all devices\n        : useGestures,\n      intents: [MC.S_DRAG, MC.S_SCROLL],\n      directions,\n      deltaThreshold: 25,\n      preventDefault,\n    };\n  };\n\n  const scrollToPager = async () => {\n    scrollWatcher.scrollTo(element, {\n      scrollable: await fetchClosestScrollable(element),\n    });\n  };\n\n  const transitionOnGesture = (target: EventTarget, data: GestureData) => {\n    const swapDirection = data.intent === MC.S_DRAG;\n\n    if (MH.includes([MC.S_LEFT, MC.S_UP], data.direction)) {\n      (swapDirection ? methods._nextPage : methods._prevPage)(data);\n    } else {\n      (swapDirection ? methods._prevPage : methods._nextPage)(data);\n    }\n  };\n\n  const addWatcher = () => {\n    gestureWatcher?.onGesture(\n      element,\n      transitionOnGesture,\n      getGestureOptions(\n        alignGestureDirection\n          ? isHorizontal\n            ? [MC.S_LEFT, MC.S_RIGHT]\n            : [MC.S_UP, MC.S_DOWN]\n          : undefined, // all directions\n      ),\n    );\n\n    viewWatcher?.onView(element, scrollToPager, { views: \"at\" });\n  };\n\n  const getPageNumForEvent = (event: Event) => {\n    const target = MH.currentTargetOf(event);\n    return MH.isElement(target)\n      ? toInt(getData(target, PREFIX_PAGE_NUMBER))\n      : 0;\n  };\n\n  const toggleClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._togglePage(pageNum);\n  };\n\n  const switchClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._goToPage(pageNum);\n  };\n\n  const nextSwitchClickListener = () => methods._nextPage();\n  const prevSwitchClickListener = () => methods._prevPage();\n\n  const removeWatcher = () => {\n    gestureWatcher?.offGesture(element, transitionOnGesture);\n\n    viewWatcher?.offView(element, scrollToPager);\n  };\n\n  // SETUP ------------------------------\n\n  widget.onDisable(removeWatcher);\n  widget.onEnable(addWatcher);\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n    delDataNow(element, MC.PREFIX_ORIENTATION);\n    delDataNow(element, PREFIX_IS_FULLSCREEN);\n    delDataNow(element, PREFIX_USE_PARALLAX);\n    delDataNow(element, PREFIX_CURRENT_PAGE);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST_ENABLED);\n    delDataNow(element, PREFIX_TOTAL_PAGES);\n    delStylePropNow(element, VAR_CURRENT_PAGE);\n    delStylePropNow(element, VAR_TOTAL_PAGES);\n\n    for (let idx = 0; idx < MH.lengthOf(pages); idx++) {\n      removeClassesNow(pages[idx], PREFIX_PAGE);\n\n      for (const [el, listener] of [\n        [pages[idx], null],\n        [toggles[idx], toggleClickListener],\n        [switches[idx], switchClickListener],\n      ] as const) {\n        if (el) {\n          delDataNow(el, PREFIX_PAGE_STATE);\n          delDataNow(el, PREFIX_PAGE_NUMBER);\n          delStylePropNow(el, VAR_PAGE_NUMBER);\n          if (listener) {\n            removeEventListenerFrom(el, MC.S_CLICK, listener);\n          }\n        }\n      }\n\n      MH.delAttr(pages[idx], S_ARIA_CURRENT);\n    }\n\n    if (nextSwitch) {\n      removeEventListenerFrom(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n    }\n\n    if (prevSwitch) {\n      removeEventListenerFrom(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n    }\n\n    removeClassesNow(element, PREFIX_ROOT);\n    if (pageContainer) {\n      removeClassesNow(pageContainer, PREFIX_PAGE_CONTAINER);\n    }\n  });\n\n  addWatcher();\n  addClasses(element, PREFIX_ROOT);\n  if (pageContainer) {\n    addClasses(pageContainer, PREFIX_PAGE_CONTAINER);\n  }\n\n  const numPages = MH.lengthOf(pages);\n  setData(element, MC.PREFIX_ORIENTATION, orientation);\n  setBoolData(element, PREFIX_IS_FULLSCREEN, isFullscreen);\n  setBoolData(element, PREFIX_USE_PARALLAX, isParallax);\n  setData(element, PREFIX_TOTAL_PAGES, numPages + \"\");\n  setStyleProp(element, VAR_TOTAL_PAGES, (numPages || 1) + \"\");\n\n  for (const page of pages) {\n    disableInitialTransition(page);\n    addClasses(page, PREFIX_PAGE);\n  }\n\n  for (let idx = 0; idx < numPages; idx++) {\n    setPageNumber(components, idx + 1);\n    setPageState(components, idx + 1, S_NEXT);\n\n    for (const [el, listener] of [\n      [toggles[idx], toggleClickListener],\n      [switches[idx], switchClickListener],\n    ] as const) {\n      if (el) {\n        addEventListenerTo(el, MC.S_CLICK, listener);\n      }\n    }\n  }\n\n  if (nextSwitch) {\n    addEventListenerTo(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n  }\n\n  if (prevSwitch) {\n    addEventListenerTo(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n  }\n\n  if (initialPage < 1 || initialPage > numPages) {\n    initialPage = 1;\n  }\n  methods._goToPage(initialPage);\n};\n\nconst getMethods = (\n  widget: Pager,\n  components: Components,\n  element: Element,\n  config: PagerConfig | undefined,\n) => {\n  const pages = components._pages;\n  const scrollWatcher = ScrollWatcher.reuse();\n  const isFullscreen = config?.fullscreen;\n  const disabledPages: Record<number, boolean> = {};\n  const callbacks = MH.newSet<WidgetCallback>();\n\n  const fetchScrollOptions = async (): Promise<ScrollOptions> => ({\n    scrollable: await fetchClosestScrollable(element),\n    // default amount is already 100%\n    asFractionOf: \"visible\",\n    weCanInterrupt: true,\n  });\n\n  let currPageNum = -1;\n  let lastPageNum = -1;\n  let lastTransition = 0;\n\n  const canTransition = (gestureData?: GestureData) => {\n    if (widget.isDisabled()) {\n      return false;\n    }\n\n    if (gestureData?.device !== MC.S_WHEEL) {\n      return true;\n    }\n\n    const timeNow = MH.timeNow();\n    if (timeNow - lastTransition > MIN_TIME_BETWEEN_WHEEL) {\n      lastTransition = timeNow;\n      return true;\n    }\n\n    return false;\n  };\n\n  const goToPage = async (pageNum: number, gestureData?: GestureData) => {\n    pageNum = toInt(pageNum, -1);\n    if (pageNum === currPageNum || !canTransition(gestureData)) {\n      return;\n    }\n\n    const numPages = MH.lengthOf(pages);\n\n    if (\n      (currPageNum === 1 && pageNum === 0) ||\n      (currPageNum === numPages && pageNum === numPages + 1)\n    ) {\n      // next/prev page beyond last/first\n      if (isFullscreen) {\n        scrollWatcher.scroll(\n          pageNum\n            ? gestureData?.direction === MC.S_RIGHT\n              ? MC.S_RIGHT\n              : MC.S_DOWN\n            : gestureData?.direction === MC.S_LEFT\n              ? MC.S_LEFT\n              : MC.S_UP,\n          await fetchScrollOptions(),\n        ); // no need to await\n      }\n\n      return;\n    }\n\n    if (isPageDisabled(pageNum) || pageNum < 1 || pageNum > numPages) {\n      // invalid or disabled\n      return;\n    }\n\n    lastPageNum = currPageNum > 0 ? currPageNum : pageNum;\n    currPageNum = pageNum;\n\n    for (const callback of callbacks) {\n      await callback.invoke(widget);\n    }\n\n    MH.delAttr(pages[lastPageNum - 1], S_ARIA_CURRENT);\n    for (\n      let n = lastPageNum;\n      n !== currPageNum;\n      currPageNum < lastPageNum ? n-- : n++\n    ) {\n      if (!isPageDisabled(n)) {\n        setPageState(\n          components,\n          n,\n          currPageNum < lastPageNum ? S_NEXT : S_COVERED,\n        );\n      }\n    }\n\n    setCurrentPage(element, currPageNum, numPages, isPageDisabled);\n    MH.setAttr(pages[currPageNum - 1], S_ARIA_CURRENT);\n    await setPageState(components, currPageNum, S_CURRENT);\n  };\n\n  const nextPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum + 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage++;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const prevPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum - 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage--;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const isPageDisabled = (pageNum: number) => disabledPages[pageNum] === true;\n\n  const disablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || pageNum < 1 || pageNum > MH.lengthOf(pages)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = true;\n\n    if (pageNum === currPageNum) {\n      await prevPage();\n\n      if (pageNum === currPageNum) {\n        await nextPage();\n\n        if (pageNum === currPageNum) {\n          disabledPages[pageNum] = false;\n          return; // only enabled one\n        }\n      }\n    }\n\n    setCurrentPage(element, currPageNum, MH.lengthOf(pages), isPageDisabled);\n    await setPageState(components, pageNum, MC.S_DISABLED);\n  };\n\n  const enablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || !isPageDisabled(pageNum)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = false;\n\n    setCurrentPage(element, currPageNum, MH.lengthOf(pages), isPageDisabled);\n    await setPageState(\n      components,\n      pageNum,\n      pageNum < currPageNum ? S_COVERED : S_NEXT,\n    );\n  };\n\n  const togglePage = (pageNum: number) =>\n    isPageDisabled(pageNum) ? enablePage(pageNum) : disablePage(pageNum);\n\n  const onTransition = (handler: WidgetHandler) =>\n    callbacks.add(wrapCallback(handler));\n\n  return {\n    _nextPage: nextPage,\n    _prevPage: prevPage,\n    _goToPage: goToPage,\n    _disablePage: disablePage,\n    _enablePage: enablePage,\n    _togglePage: togglePage,\n    _isPageDisabled: isPageDisabled,\n    _getCurrentPage: () => pages[currPageNum - 1],\n    _getPreviousPage: () => pages[lastPageNum - 1],\n    _getCurrentPageNum: () => (MH.lengthOf(pages) > 0 ? currPageNum : 0),\n    _getPreviousPageNum: () => (MH.lengthOf(pages) > 0 ? lastPageNum : 0),\n    _onTransition: onTransition,\n  };\n};\n"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM4B,KAAK,SAASC,cAAM,CAAC;EA0GhC,OAAOzB,GAAGA,CAAC0B,OAAgB,EAAgB;IACzC,MAAMC,QAAQ,GAAG,KAAK,CAAC3B,GAAG,CAAC0B,OAAO,EAAEE,QAAQ,CAAC;IAC7C,IAAInD,EAAE,CAACoD,YAAY,CAACF,QAAQ,EAAEH,KAAK,CAAC,EAAE;MACpC,OAAOG,QAAQ;IACjB;IACA,OAAO,IAAI;EACb;EAEA,OAAOG,QAAQA,CAAA,EAAG;IAChB,IAAAC,sBAAc,EACZC,WAAW,EACX,CAACN,OAAO,EAAEO,MAAM,KAAK;MACnB,IAAI,CAACT,KAAK,CAACxB,GAAG,CAAC0B,OAAO,CAAC,EAAE;QACvB,OAAO,IAAIF,KAAK,CAACE,OAAO,EAAEO,MAAM,CAAC;MACnC;MACA,OAAO,IAAI;IACb,CAAC,EACDC,eACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,WAAWA,CAACT,OAAgB,EAAEO,MAAoB,EAAE;IAAA,IAAAG,UAAA;IAClD,MAAMC,cAAc,IAAAD,UAAA,GAAGZ,KAAK,CAACxB,GAAG,CAAC0B,OAAO,CAAC,cAAAU,UAAA,uBAAlBA,UAAA,CAAoBE,OAAO,CAAC,CAAC;IACpD,KAAK,CAACZ,OAAO,EAAE;MAAEa,EAAE,EAAEX;IAAS,CAAC,CAAC;IArIlC;AACF;AACA;AACA;AACA;AACA;IALEhB,eAAA;IAQA;AACF;AACA;AACA;AACA;AACA;IALEA,eAAA;IAQA;AACF;AACA;AACA;AACA;IAJEA,eAAA;IAOA;AACF;AACA;AACA;AACA;AACA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","ignoreList":[]}