{"version":3,"file":"track-view.js","names":["MH","waitForReferenceElement","validateNumber","validateString","validateNumList","ViewWatcher","Widget","registerWidget","TrackView","get","element","instance","DUMMY_ID","isInstanceOf","register","WIDGET_NAME","config","newConfigValidator","constructor","_config$rootMargin","id","watcher","reuse","root","rootMargin","replace","threshold","trackView","onDestroy","noTrackView","key","value","_ref","isLiteralString","undefined","debounceWindow","resizeThreshold","scrollThreshold"],"sources":["../../../src/ts/widgets/track-view.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport {\n  validateNumber,\n  validateString,\n  validateNumList,\n} from \"@lisn/utils/validation\";\n\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorFunc,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * This is a simple wrapper around the {@link ViewWatcher}. If you are using\n * the JavaScript API, you should use the {@link ViewWatcher} directly. The\n * purpose of this widget is to expose the watcher's ability to track an\n * element's position across the viewport (or a given root element) and set\n * relevant CSS properties via the HTML API. See {@link ViewWatcher.trackView}.\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-track-view` class or `data-lisn-track-view` attribute set on\n *   the element that constitutes the widget.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * Note that the root margin value can either be comma-separated or\n * space-separated.\n *\n * @example\n * This will track the element across the viewport and set the relevant CSS\n * properties.\n *\n * ```html\n * <div class=\"lisn-track-view\"></div>\n * ```\n *\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <div id=\"myRoot\"></div>\n * <div data-lisn-track-view=\"root=#myRoot\n *                            | root-margin=100px,50px\n *                            | threshold=0,0.5\"\n * ></div>\n * ```\n */\nexport class TrackView extends Widget {\n  static get(element: Element): TrackView | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, TrackView)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!TrackView.get(element)) {\n          return new TrackView(element, config);\n        }\n        return null;\n      },\n      newConfigValidator,\n    );\n  }\n\n  constructor(element: Element, config?: TrackViewConfig) {\n    super(element, { id: DUMMY_ID });\n\n    const watcher = ViewWatcher.reuse({\n      root: config?.root,\n      rootMargin: config?.rootMargin?.replace(/,/g, \" \"),\n      threshold: config?.threshold,\n    });\n\n    watcher.trackView(element, null, config);\n\n    this.onDestroy(() => watcher.noTrackView(element));\n  }\n}\n\n/**\n * @interface\n */\nexport type TrackViewConfig = {\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.ViewWatcherConfig.root | ViewWatcherConfig.root}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  root?: Element | null;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.ViewWatcherConfig.rootMargin | ViewWatcherConfig.rootMargin}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  rootMargin?: string;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.ViewWatcherConfig.threshold | ViewWatcherConfig.threshold}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  threshold?: number | number[];\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.TrackViewOptions.debounceWindow | TrackViewOptions.debounceWindow}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  debounceWindow?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.TrackViewOptions.resizeThreshold | TrackViewOptions.resizeThreshold}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  resizeThreshold?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.TrackViewOptions.scrollThreshold | TrackViewOptions.scrollThreshold}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  scrollThreshold?: number;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"track-view\";\n// Only one TrackView widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = WIDGET_NAME;\n\nconst newConfigValidator: WidgetConfigValidatorFunc<TrackViewConfig> = (\n  element: Element,\n) => {\n  return {\n    root: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    rootMargin: validateString,\n    threshold: (key, value) => validateNumList(key, value),\n    debounceWindow: validateNumber,\n    resizeThreshold: validateNumber,\n    scrollThreshold: validateNumber,\n  };\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,KAAKA,EAAE;AAEd,SAASC,uBAAuB;AAChC,SACEC,cAAc,EACdC,cAAc,EACdC,eAAe;AAGjB,SAASC,WAAW;AAEpB,SACEC,MAAM,EAENC,cAAc;;AAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,SAASF,MAAM,CAAC;EACpC,OAAOG,GAAGA,CAACC,OAAgB,EAAoB;IAC7C,MAAMC,QAAQ,GAAG,KAAK,CAACF,GAAG,CAACC,OAAO,EAAEE,QAAQ,CAAC;IAC7C,IAAIZ,EAAE,CAACa,YAAY,CAACF,QAAQ,EAAEH,SAAS,CAAC,EAAE;MACxC,OAAOG,QAAQ;IACjB;IACA,OAAO,IAAI;EACb;EAEA,OAAOG,QAAQA,CAAA,EAAG;IAChBP,cAAc,CACZQ,WAAW,EACX,CAACL,OAAO,EAAEM,MAAM,KAAK;MACnB,IAAI,CAACR,SAAS,CAACC,GAAG,CAACC,OAAO,CAAC,EAAE;QAC3B,OAAO,IAAIF,SAAS,CAACE,OAAO,EAAEM,MAAM,CAAC;MACvC;MACA,OAAO,IAAI;IACb,CAAC,EACDC,kBACF,CAAC;EACH;EAEAC,WAAWA,CAACR,OAAgB,EAAEM,MAAwB,EAAE;IAAA,IAAAG,kBAAA;IACtD,KAAK,CAACT,OAAO,EAAE;MAAEU,EAAE,EAAER;IAAS,CAAC,CAAC;IAEhC,MAAMS,OAAO,GAAGhB,WAAW,CAACiB,KAAK,CAAC;MAChCC,IAAI,EAAEP,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEO,IAAI;MAClBC,UAAU,EAAER,MAAM,aAANA,MAAM,gBAAAG,kBAAA,GAANH,MAAM,CAAEQ,UAAU,cAAAL,kBAAA,uBAAlBA,kBAAA,CAAoBM,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;MAClDC,SAAS,EAAEV,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEU;IACrB,CAAC,CAAC;IAEFL,OAAO,CAACM,SAAS,CAACjB,OAAO,EAAE,IAAI,EAAEM,MAAM,CAAC;IAExC,IAAI,CAACY,SAAS,CAAC,MAAMP,OAAO,CAACQ,WAAW,CAACnB,OAAO,CAAC,CAAC;EACpD;AACF;;AAEA;AACA;AACA;;AAmDA;;AAEA,MAAMK,WAAW,GAAG,YAAY;AAChC;AACA;AACA,MAAMH,QAAQ,GAAGG,WAAW;AAE5B,MAAME,kBAA8D,GAClEP,OAAgB,IACb;EACH,OAAO;IACLa,IAAI,EAAEA,CAACO,GAAG,EAAEC,KAAK;MAAA,IAAAC,IAAA;MAAA,QAAAA,IAAA,GACdhC,EAAE,CAACiC,eAAe,CAACF,KAAK,CAAC,GACtB9B,uBAAuB,CAAC8B,KAAK,EAAErB,OAAO,CAAC,GACvC,IAAI,cAAAsB,IAAA,cAAAA,IAAA,GAAKE,SAAS;IAAA;IACxBV,UAAU,EAAErB,cAAc;IAC1BuB,SAAS,EAAEA,CAACI,GAAG,EAAEC,KAAK,KAAK3B,eAAe,CAAC0B,GAAG,EAAEC,KAAK,CAAC;IACtDI,cAAc,EAAEjC,cAAc;IAC9BkC,eAAe,EAAElC,cAAc;IAC/BmC,eAAe,EAAEnC;EACnB,CAAC;AACH,CAAC","ignoreList":[]}