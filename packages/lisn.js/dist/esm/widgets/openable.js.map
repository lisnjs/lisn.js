{"version":3,"file":"openable.js","names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","toString","from","test","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","Boolean","valueOf","bind","_inherits","_setPrototypeOf","_defineProperty","_toPrimitive","toPrimitive","String","Number","MC","MH","settings","disableInitialTransition","hasClass","addClasses","addClassesNow","removeClasses","removeClassesNow","getData","getBoolData","setData","setDataNow","setBoolData","setBoolDataNow","unsetBoolData","unsetBoolDataNow","delData","delDataNow","setHasModal","delHasModal","getStyleProp","setStyleProp","delStyleProp","getComputedStyleProp","getMaxTransitionDuration","wrapElement","wrapElementNow","moveElement","moveElementNow","replaceElementNow","getOrAssignID","waitForInteractive","waitForMeasureTime","waitForMutateTime","isInlineTag","addEventListenerTo","removeEventListenerFrom","logError","keyWithMaxVal","toBool","toArrayIfSingle","waitForDelay","isValidPosition","isValidTwoFoldPosition","fetchViewportSize","validateStrList","validateBoolean","validateBooleanOrString","validateString","wrapCallback","SizeWatcher","ViewWatcher","Widget","registerWidget","getWidgetConfig","getDefaultWidgetSelector","registerOpenable","newOpenable","configValidator","element","config","isHTMLElement","Openable","get","usageError","_Widget","properties","_this","isModal","isOffcanvas","openCallbacks","newSet","closeCallbacks","isOpen","open","_ref","_callee","_iterator","_step","callback","_callee$","_context","isDisabled","t0","root","PREFIX_IS_OPEN","close","_ref2","_callee2","_iterator2","_step2","_callee2$","_context2","scrollWrapperToTop","_ref3","_callee3","_callee3$","_context3","elScrollTo","outerWrapper","top","left","S_TOGGLE","onOpen","handler","add","onClose","getRoot","getContainer","container","getTriggers","_toConsumableArray","triggers","getTriggerConfigs","newMap","entries","onDestroy","clear","_setupElements","setupElements","instances","Collapsible","_Openable2","_config$autoClose","_config$reverse","_this2","isHorizontal","horizontal","orientation","S_HORIZONTAL","S_VERTICAL","onSetup","_iterator3","_step3","_step3$value","_slicedToArray","trigger","triggerConfig","insertCollapsibleIcon","PREFIX_ORIENTATION","err","WIDGET_NAME_COLLAPSIBLE","id","className","autoClose","closeButton","wrapTriggers","wrapper","childrenOf","PREFIX_REVERSE","disableTransitionTimer","tempEnableTransition","_ref4","_callee4","transitionDuration","_callee4$","_context4","PREFIX_TRANSITION_DISABLE","clearTimer","setTimer","peek","_callee5","peekSize","_callee5$","_context5","isString","VAR_PEEK_SIZE","PREFIX_PEEK","updateWidth","_ref6","_callee6","width","_callee6$","_context6","S_WIDTH","VAR_JS_COLLAPSIBLE_WIDTH","_callee7","_callee7$","_context7","register","el","collapsibleConfigValidator","Popup","_Openable3","_config$autoClose2","_config$closeButton","_config$position","_this3","WIDGET_NAME_POPUP","position","S_AUTO","PREFIX_PLACE","_callee8","_yield$MH$promiseAll","_yield$MH$promiseAll2","contentSize","containerView","placement","_callee8$","_context8","promiseAll","reuse","fetchCurrentSize","fetchCurrentView","fetchPopupPlacement","popupConfigValidator","Modal","_Openable4","_config$autoClose3","_config$closeButton2","WIDGET_NAME_MODAL","modalConfigValidator","Offcanvas","_Openable5","_config$autoClose4","_config$closeButton3","_this4","WIDGET_NAME_OFFCANVAS","S_RIGHT","offcanvasConfigValidator","newWeakMap","PREFIX_CLOSE_BTN","prefixName","S_REVERSE","PREFIX_OPENS_ON_HOVER","PREFIX_LINE","PREFIX_ICON_POSITION","PREFIX_TRIGGER_ICON","PREFIX_ICON_WRAPPER","S_ARIA_EXPANDED","ARIA_PREFIX","S_ARIA_MODAL","prefixCssVar","prefixCssJsVar","MIN_CLICK_TIME_AFTER_HOVER_OPEN","S_ARROW_UP","concat","S_ARROW","S_UP","S_ARROW_DOWN","S_DOWN","S_ARROW_LEFT","S_LEFT","S_ARROW_RIGHT","ARROW_TYPES","ICON_CLOSED_TYPES","ICON_OPEN_TYPES","isValidIconClosed","includes","isValidIconOpen","triggerConfigValidator","icon","iconClosed","iconOpen","hover","getPrefixedNames","pref","_root","_overlay","_innerWrapper","_outerWrapper","_content","_container","_trigger","_containerForSelect","_triggerForSelect","_contentId","findContainer","content","cls","currWidget","childRef","parentOf","closest","findTriggers","prefixedNames","getTriggerSelector","suffix","contentId","docQuerySelectorAll","arrayFrom","querySelectorAll","filter","contains","getTriggersFrom","inputTriggers","triggerMap","addTrigger","createElement","tagName","ignoreMove","set","_iterator4","_step4","isInstanceOf","Map","_iterator5","_step5","_step5$value","widget","_properties$wrapTrigg","innerWrapper","placeholder","overlay","to","domID","setAttr","S_ROLE","closeBtn","createButton","S_CLICK","_i","_arr","lightThemeClassName","darkThemeClassName","elements","_callee9","_iterator6","_step6","_callee9$","_context9","unsetAttr","_callee10","_iterator7","_step7","_step7$value","_i2","_arr2","_callee10$","_context10","delAttr","S_ARIA_CONTROLS","deleteKey","_i3","_arr3","destroy","isDestroyed","getBody","_iterator8","_step8","_step8$value","S_HOVER","setupListeners","doc","getDoc","hoverTimeOpened","isPointerOver","activeTrigger","isTrigger","shouldPreventDefault","_triggers$get$prevent","_triggers$get","preventDefault","usesHover","_triggers$get2","usesAutoClose","_ref11","_triggers$get3","toggleTrigger","event","openIt","currentTargetOf","isElement","timeSince","S_POINTERENTER","setIsPointerOver","S_POINTERLEAVE","pointerLeft","unsetIsPointerOver","isTouchPointerEvent","pointerEntered","timeNow","closeIfEscape","closeIfClickOutside","target","targetOf","maybeSetupAutoCloseListeners","remove","addOrRemove","setupOrCleanup","_iterator9","_step9","_step9$value","widgetConfig","_triggerConfig$icon","_ref12","_triggerConfig$iconCl","_ref13","_triggerConfig$iconOp","iconPosition","line","_ref14","_callee11","containerPosition","containerTop","containerBottom","containerLeft","containerRight","containerHMiddle","containerVMiddle","vpSize","popupWidth","popupHeight","placementVars","finalPlacement","alignmentVars","alignment","_callee11$","_context11","relative","S_TOP","S_BOTTOM","hMiddle","vMiddle","border","S_HEIGHT","bottom","right","undefined","middle","min","_x","_x2"],"sources":["../../../src/ts/widgets/openable.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { XYDirection, Position } from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  hasClass,\n  addClasses,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n  getData,\n  getBoolData,\n  setData,\n  setDataNow,\n  setBoolData,\n  setBoolDataNow,\n  unsetBoolData,\n  unsetBoolDataNow,\n  delData,\n  delDataNow,\n  setHasModal,\n  delHasModal,\n  getStyleProp,\n  setStyleProp,\n  delStyleProp,\n  getComputedStyleProp,\n  getMaxTransitionDuration,\n} from \"@lisn/utils/css-alter\";\nimport {\n  wrapElement,\n  wrapElementNow,\n  moveElement,\n  moveElementNow,\n  replaceElementNow,\n  getOrAssignID,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { keyWithMaxVal } from \"@lisn/utils/math\";\nimport { toBool, toArrayIfSingle } from \"@lisn/utils/misc\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { isValidPosition, isValidTwoFoldPosition } from \"@lisn/utils/position\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport {\n  validateStrList,\n  validateBoolean,\n  validateBooleanOrString,\n  validateString,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\nimport { ViewWatcher, ViewData } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetHandler,\n  WidgetCallback,\n  WidgetConfigValidator,\n  WidgetConfigValidatorObject,\n  registerWidget,\n  getWidgetConfig,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/* ********************\n * Base Openable\n * ********************/\n\nexport type OpenableCreateFn<Config extends Record<string, unknown>> = (\n  element: HTMLElement,\n  config?: Config,\n) => Openable;\n\n/**\n * Enables automatic setting up of an {@link Openable} widget from an\n * elements matching its content element selector (`[data-lisn-<name>]` or\n * `.lisn-<name>`).\n *\n * The name you specify here should generally be the same name you pass in\n * {@link OpenableProperties.name | options.name} to the\n * {@link Openable.constructor} but it does not need to be the same.\n *\n * @param {} name        The name of the openable. Should be in kebab-case.\n * @param {} newOpenable Called for every element matching the selector.\n * @param {} configValidator\n *                        A validator object, or a function that returns such\n *                        an object, for all options supported by the widget.\n *\n * @see {@link registerWidget}\n */\nexport const registerOpenable = <Config extends Record<string, unknown>>(\n  name: string,\n  newOpenable: OpenableCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  registerWidget(\n    name,\n    (element, config) => {\n      if (MH.isHTMLElement(element)) {\n        if (!Openable.get(element)) {\n          return newOpenable(element, config);\n        }\n      } else {\n        logError(MH.usageError(\"Openable widget supports only HTMLElement\"));\n      }\n\n      return null;\n    },\n    configValidator,\n  );\n};\n\n/**\n * {@link Openable} is an abstract base class. You should not directly\n * instantiate it but can inherit it to create your own custom openable widget.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * @see {@link registerOpenable}\n */\nexport abstract class Openable extends Widget {\n  /**\n   * Opens the widget unless it is disabled.\n   */\n  readonly open: () => Promise<void>;\n\n  /**\n   * Closes the widget.\n   */\n  readonly close: () => Promise<void>;\n\n  /**\n   * Closes the widget if it is open, or opens it if it is closed (unless\n   * it is disabled).\n   */\n  readonly toggle: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is open.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onOpen: (handler: WidgetHandler) => void;\n\n  /**\n   * The given handler will be called when the widget is closed.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onClose: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is currently open.\n   */\n  readonly isOpen: () => boolean;\n\n  /**\n   * Returns the root element created by us that wraps the original content\n   * element passed to the constructor. It is located in the content element's\n   * original place.\n   */\n  readonly getRoot: () => HTMLElement;\n\n  /**\n   * Returns the element that was found to be the container. It is the closest\n   * ancestor that has a `lisn-collapsible-container` class, or if no such\n   * ancestor then the immediate parent of the content element.\n   */\n  readonly getContainer: () => HTMLElement | null;\n\n  /**\n   * Returns the trigger elements, if any. Note that these may be wrappers\n   * around the original triggers passed.\n   */\n  readonly getTriggers: () => Element[];\n\n  /**\n   * Returns the trigger elements along with their configuration.\n   */\n  readonly getTriggerConfigs: () => Map<Element, OpenableTriggerConfig>;\n\n  /**\n   * Retrieve an existing widget by its content element or any of its triggers.\n   *\n   * If the element is already part of a configured {@link Openable} widget,\n   * the widget instance is returned. Otherwise `null`.\n   *\n   * Note that trigger elements are not guaranteed to be unique among openable\n   * widgets as the same element can be a trigger for multiple such widgets. If\n   * the element you pass is a trigger, then the last openable widget that was\n   * created for it will be returned.\n   */\n  static get(element: Element): Openable | null {\n    // We manage the instances here since we also map associated elements and\n    // not just the main content element that created the widget.\n    return instances.get(element) || null;\n  }\n\n  constructor(element: HTMLElement, properties: OpenableProperties) {\n    super(element);\n\n    const { isModal, isOffcanvas } = properties;\n\n    const openCallbacks = MH.newSet<WidgetCallback>();\n    const closeCallbacks = MH.newSet<WidgetCallback>();\n\n    let isOpen = false;\n\n    // ----------\n\n    const open = async () => {\n      if (this.isDisabled() || isOpen) {\n        return;\n      }\n\n      isOpen = true;\n\n      for (const callback of openCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        setHasModal();\n      }\n\n      await setBoolData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const close = async () => {\n      if (this.isDisabled() || !isOpen) {\n        return;\n      }\n\n      isOpen = false;\n\n      for (const callback of closeCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        delHasModal();\n      }\n\n      if (isOffcanvas) {\n        scrollWrapperToTop(); // no need to await\n      }\n\n      await unsetBoolData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const scrollWrapperToTop = async () => {\n      // Wait a bit before scrolling since the hiding of the element is animated.\n      // Assume no more than 1s animation time.\n      await waitForDelay(1000);\n      await waitForMeasureTime();\n      MH.elScrollTo(outerWrapper, {\n        top: 0,\n        left: 0,\n      });\n    };\n\n    // --------------------\n\n    this.open = open;\n    this.close = close;\n    this[MC.S_TOGGLE] = () => (isOpen ? close() : open());\n    this.onOpen = (handler) => openCallbacks.add(wrapCallback(handler));\n    this.onClose = (handler) => closeCallbacks.add(wrapCallback(handler));\n    this.isOpen = () => isOpen;\n    this.getRoot = () => root;\n    this.getContainer = () => container;\n    this.getTriggers = () => [...triggers.keys()];\n    this.getTriggerConfigs = () => MH.newMap([...triggers.entries()]);\n\n    this.onDestroy(() => {\n      openCallbacks.clear();\n      closeCallbacks.clear();\n    });\n\n    const { root, container, triggers, outerWrapper } = setupElements(\n      this,\n      element,\n      properties,\n    );\n  }\n}\n\n/**\n * Per-trigger based configuration. Can either be given as an object as the\n * value of the {@link OpenableProperties.triggers} map, or it can be set as a\n * string configuration in the `data-lisn-<name>-trigger` data attribute. See\n * {@link getWidgetConfig} for the syntax.\n *\n * @example\n * ```html\n * <div data-lisn-collapsible-trigger=\"auto-close\n *                                     | icon=right\n *                                     | icon-closed=arrow-down\n *                                     | icon-open=x\"\n * ></div>\n * ```\n *\n * @interface\n */\nexport type OpenableTriggerConfig = {\n  /**\n   * The DOM ID of the trigger. Will result in the trigger element, which could\n   * be a wrapper around the original element (as in the case of\n   * {@link Collapsible} you passed, getting this ID.\n   *\n   * **IMPORTANT:** If the trigger element already has an ID and is not being\n   * wrapped, then this will override the ID and it _won't_ be restored on destroy.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) for the trigger. Will result in the trigger element, which\n   * could be a wrapper around the original element you passed, getting these\n   * classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Override the widget's {@link OpenableProperties.autoClose} for this trigger.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  autoClose?: boolean;\n\n  /**\n   * Open the openable when this trigger is hovered.\n   *\n   * If the device is touch and {@link OpenableProperties.autoClose} is enabled,\n   * the widget will be closed shortly after the pointer leaves both the\n   * trigger and the root element.\n   *\n   * @defaultValue false\n   */\n  hover?: boolean;\n\n  /**\n   * Whether to prevent default click action.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.icon} for this trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  icon?: false | Position;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconClosed} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconOpen} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/**\n * @interface\n */\nexport type OpenableProperties = {\n  /**\n   * The name of the _type_ of the openable. Will set the class prefix to\n   * `lisn-<name>`.\n   */\n  name: string;\n\n  /**\n   * The DOM ID of the openable. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the openable. Will result in the\n   * top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Whether to auto-close the widget on clicking outside the content element\n   * or on pressing Escape key. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * This is true by default for {@link Popup}, {@link Modal} and {@link Offcanvas}.\n   */\n  autoClose: boolean;\n\n  /**\n   * If true, then while the widget is open, the `document.body` will be set to\n   * `overflow: hidden`.\n   *\n   * This is true for {@link Modal}.\n   */\n  isModal: boolean;\n\n  /**\n   * If true, then the content element is assumed to be possibly scrollable and\n   * will be scrolled back to its top after the widget is closed.\n   *\n   * This is true for {@link Modal} and {@link Offcanvas}.\n   */\n  isOffcanvas: boolean;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * This is true by default for {@link Modal} and {@link Offcanvas}.\n   */\n  closeButton: boolean;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way (`<name>` is what is given as\n   * {@link name}):\n   * 1. If the content element has a `data-lisn-<name>-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-<name>-trigger` class or `data-lisn-<name>-trigger` attribute\n   *    and the same `data-lisn-<name>-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-<name>-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-<name>-trigger`\n   *    class or `data-lisn-<name>-trigger` attribute and that do _not_ have a\n   *    `data-lisn-<name>-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Whether to wrap each trigger in a new element.\n   *\n   * @defaultValue false\n   */\n  wrapTriggers?: boolean;\n\n  /**\n   * Hook to run once the widget is fully setup (which happens asynchronously).\n   *\n   * It is called during \"mutate time\". See {@link waitForMutateTime}.\n   *\n   * @defaultValue undefined\n   */\n  onSetup?: () => void;\n};\n\n/* ********************\n * Collapsible\n * ********************/\n\n/**\n * Configures the given element as a {@link Collapsible} widget.\n *\n * The Collapsible widget sets up the given element to be collapsed and\n * expanded upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link CollapsibleConfig.triggers | triggers}.\n *\n * **NOTE:** The Collapsible widget always wraps each trigger element in\n * another element in order to allow positioning the icon, if any.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-collapsible__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-reverse`: `\"true\"` or `\"false\"`\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-collapsible` class or `data-lisn-collapsible` attribute set on the\n *   element that holds the content of the collapsible\n * - `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     collapsible on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close\"` in order to have this trigger\n *     open the collapsible on hover but and override\n *     {@link CollapsibleConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-collapsible-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and the same `data-lisn-collapsible-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple collapsible with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-collapsible-trigger\">Expand</div>\n *   <div class=\"lisn-collapsible\">\n *     Some long content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a collapsible that is partially visible when collapsed, and\n * where the trigger is in a different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all other possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek=50px\n *                               | horizontal=false\n *                               | reverse=false\n *                               | auto-close\n *                               | icon=right\n *                               | icon-closed=arrow-up\"\n *                               | icon-open=arrow-down\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n */\nexport class Collapsible extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_COLLAPSIBLE,\n      (el, config) => new Collapsible(el, config),\n      collapsibleConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: CollapsibleConfig) {\n    const isHorizontal = config?.horizontal;\n    const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n\n    const onSetup = () => {\n      // The triggers here are wrappers around the original which will be\n      // replaced by the original on destroy, so no need to clean up this.\n      for (const [\n        trigger,\n        triggerConfig,\n      ] of this.getTriggerConfigs().entries()) {\n        insertCollapsibleIcon(trigger, triggerConfig, this, config);\n        setDataNow(trigger, MC.PREFIX_ORIENTATION, orientation);\n      }\n    };\n\n    super(element, {\n      name: WIDGET_NAME_COLLAPSIBLE,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? false,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: false,\n      triggers: config?.triggers,\n      wrapTriggers: true,\n      onSetup,\n    });\n\n    const root = this.getRoot();\n    const wrapper = MH.childrenOf(root)[0];\n\n    setData(root, MC.PREFIX_ORIENTATION, orientation);\n    setBoolData(root, PREFIX_REVERSE, config?.reverse ?? false);\n\n    // -------------------- Transitions\n    disableInitialTransition(element, 100);\n    disableInitialTransition(root, 100);\n    disableInitialTransition(wrapper, 100);\n\n    let disableTransitionTimer: ReturnType<typeof setTimeout> | null = null;\n    const tempEnableTransition = async () => {\n      await removeClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n      await removeClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n\n      if (disableTransitionTimer) {\n        MH.clearTimer(disableTransitionTimer);\n      }\n\n      const transitionDuration = await getMaxTransitionDuration(root);\n      disableTransitionTimer = MH.setTimer(() => {\n        if (this.isOpen()) {\n          addClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n          addClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n          disableTransitionTimer = null;\n        }\n      }, transitionDuration);\n    };\n\n    // Disable transitions except during open/close, so that resizing the\n    // window for example doesn't result in lagging width/height transition.\n    this.onOpen(tempEnableTransition);\n    this.onClose(tempEnableTransition);\n\n    // -------------------- Peek\n    const peek = config?.peek;\n    if (peek) {\n      (async () => {\n        let peekSize: string | null = null;\n        if (MH.isString(peek)) {\n          peekSize = peek;\n        } else {\n          peekSize = await getStyleProp(element, VAR_PEEK_SIZE);\n        }\n\n        addClasses(root, PREFIX_PEEK);\n        if (peekSize) {\n          setStyleProp(root, VAR_PEEK_SIZE, peekSize);\n        }\n      })();\n    }\n\n    // -------------------- Width in horizontal mode\n    if (isHorizontal) {\n      const updateWidth = async () => {\n        const width = await getComputedStyleProp(root, MC.S_WIDTH);\n        await setStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH, width);\n      };\n\n      MH.setTimer(updateWidth);\n\n      // Save its current width so that if it contains text, it does not\n      // \"collapse\" and end up super tall.\n      this.onClose(updateWidth);\n\n      this.onOpen(async () => {\n        // Update the content width before opening.\n        await updateWidth();\n\n        // Delete the fixed width property soon after opening to allow it to\n        // resize again while it's open.\n        waitForDelay(2000).then(() => {\n          if (this.isOpen()) {\n            delStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH);\n          }\n        });\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type CollapsibleConfig = {\n  /**\n   * The DOM ID of the collapsible. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the\n   * `data-lisn-collapsible-content-id` attribute used to link triggers to the\n   * collapsible.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the collapsible. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-collapsible-content-id`\n   *    attribute, then it must be a unique (for the current page) ID. In this\n   *    case, the trigger elements will be any element in the document that\n   *    has a `lisn-collapsible-trigger` class or\n   *    `data-lisn-collapsible-trigger` attribute and the same\n   *    `data-lisn-collapsible-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n   *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Open sideways (to the right) instead of downwards (default).\n   *\n   * **IMPORTANT:** In horizontal mode the width of the content element should\n   * not be set (or be `auto`), but you can use `min-width` or `max-width` in\n   * your CSS if needed.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Open to the left if horizontal or upwards if vertical.\n   *\n   * @defaultValue false\n   */\n  reverse?: boolean;\n\n  /**\n   * If not false, part of the content will be visible when the collapsible is\n   * closed. The value can be any valid CSS width specification.\n   *\n   * If you set this to `true`, then the size of the peek window will be\n   * dictated by CSS. By default the size is 100px, but you can change this by\n   * setting `--lisn-peek-size` CSS property on the content element or any of\n   * its ancestors.\n   *\n   * Otherwise, if the value is a string, it must be a CSS length including units.\n   *\n   * @defaultValue false\n   */\n  peek?: boolean | string;\n\n  /**\n   * Automatically close the collapsible when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue false\n   */\n  autoClose?: boolean;\n\n  /**\n   * Add an icon to each trigger.\n   *\n   * If set to something other than `false`, then by default the icon in the\n   * closed state is a plus (+) and in the open state it's a minus (-), but\n   * this can be configured with {@link iconClosed} and {@link iconOpen}.\n   *\n   * @defaultValue false\n   */\n  icon?: false | Position;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the closed state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"plus\"\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the open state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"minus\";\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/* ********************\n * Popup\n * ********************/\n\n/**\n * Configures the given element as a {@link Popup} widget.\n *\n * The Popup widget sets up the given element to be hidden and open in a\n * floating popup upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link PopupConfig.triggers | triggers}.\n *\n * **IMPORTANT:** The popup is positioned absolutely in its container and the\n * position is relative to the container. The container gets `width:\n * fit-content` by default but you can override this in your CSS. The popup\n * also gets a configurable `min-width` set.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-popup__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position (top, bottom, left, top-left, etc)\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-popup` class or `data-lisn-popup` attribute set on the element that\n *   holds the content of the popup\n * - `lisn-popup-trigger` class or `data-lisn-popup-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     popup on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the popup on hover but and override\n *     {@link PopupConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-popup-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and the\n *    same `data-lisn-popup-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-popup-trigger` class or\n *    `data-lisn-popup-trigger` attribute and that do _not_ have a\n *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple popup with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-popup-trigger\">Open</div>\n *   <div class=\"lisn-popup\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a popup that has a close button, and where the trigger is in a\n * different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button | position=bottom | auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n * ```\n */\nexport class Popup extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_POPUP,\n      (el, config) => new Popup(el, config),\n      popupConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: PopupConfig) {\n    super(element, {\n      name: WIDGET_NAME_POPUP,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: config?.closeButton ?? false,\n      triggers: config?.triggers,\n    });\n\n    const root = this.getRoot();\n    const container = this.getContainer();\n\n    const position = config?.position ?? S_AUTO;\n    if (position !== S_AUTO) {\n      setData(root, MC.PREFIX_PLACE, position);\n    }\n\n    if (container && position === S_AUTO) {\n      // Automatic position\n      this.onOpen(async () => {\n        const [contentSize, containerView] = await MH.promiseAll([\n          SizeWatcher.reuse().fetchCurrentSize(element),\n          ViewWatcher.reuse().fetchCurrentView(container),\n        ]);\n\n        const placement = await fetchPopupPlacement(contentSize, containerView);\n        if (placement) {\n          await setData(root, MC.PREFIX_PLACE, placement);\n        }\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type PopupConfig = {\n  /**\n   * The DOM ID of the popup. Will result in the top-level root element that's\n   * created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-popup-content-id`\n   * attribute used to link triggers to the popup.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the popup. Will result in the\n   * top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-popup-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and\n   *    the same `data-lisn-popup-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-popup-trigger`\n   *    class or `data-lisn-popup-trigger` attribute and that do _not_ have a\n   *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue false\n   */\n  closeButton?: boolean;\n\n  /**\n   * Specify the popup position _relative to its container_. Supported\n   * positions include `\"top\"`, `\"bottom\"`, `\"left\"`, `\"right\" `(which result\n   * on the popup being placed on top, bottom, etc, but center-aligned), or\n   * `\"top-left\"`, `\"left-top\"`, etc, as well as `\"auto\"`. If set to `\"auto\"`,\n   * then popup position will be based on the container position within the\n   * viewport at the time it's open.\n   *\n   * @defaultValue \"auto\"\n   */\n  position?: Position | `${Position}-${Position}` | \"auto\";\n\n  /**\n   * Automatically close the popup when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Modal\n * ********************/\n\n/**\n * Configures the given element as a {@link Modal} widget.\n *\n * The Modal widget sets up the given element to be hidden and open in a fixed\n * full-screen modal popup upon activation. Activation can be done manually by\n * calling {@link open} or when clicking on any of the given\n * {@link ModalConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-modal__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-modal` class or `data-lisn-modal` attribute set on the element that\n *   holds the content of the modal\n * - `lisn-modal-trigger` class or `data-lisn-modal-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     modal on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the modal on hover but and override\n *     {@link ModalConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-modal-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and the\n *    same `data-lisn-modal-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-modal-trigger` class or\n *    `data-lisn-modal-trigger` attribute and that do _not_ have a\n *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple modal with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-modal-trigger\">Open</div>\n *   <div class=\"lisn-modal\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a modal that doesn't automatically close on click outside or\n * Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Modal extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_MODAL,\n      (el, config) => new Modal(el, config),\n      modalConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: ModalConfig) {\n    super(element, {\n      name: WIDGET_NAME_MODAL,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: true,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type ModalConfig = {\n  /**\n   * The DOM ID of the modal. Will result in the top-level root element that's\n   * created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-modal-content-id`\n   * attribute used to link triggers to the modal.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the modal. Will result in the\n   * top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-modal-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and\n   *    the same `data-lisn-modal-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-modal-trigger`\n   *    class or `data-lisn-modal-trigger` attribute and that do _not_ have a\n   *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the modal when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * If you set this to false, then you should ensure {@link closeButton} is\n   * enabled.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Offcanvas\n * ********************/\n\n/**\n * Configures the given element as a {@link Offcanvas} widget.\n *\n * The Offcanvas widget sets up the given element to be hidden and open in a\n * fixed overlay (non full-screen) upon activation. Activation can be done\n * manually by calling {@link open} or when clicking on any of the given\n * {@link OffcanvasConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-offcanvas__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position `\"top\"`, `\"bottom\"`, `\"left\"` or\n *   `\"right\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-offcanvas` class or `data-lisn-offcanvas` attribute set on the\n *   element that holds the content of the offcanvas\n * - `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     offcanvas on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the offcanvas on hover but and override\n *     {@link OffcanvasConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and the same `data-lisn-offcanvas-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and that do _not_ have a `data-lisn-offcanvas-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple offcanvas with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-offcanvas-trigger\">Open</div>\n *   <div class=\"lisn-offcanvas\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a offcanvas that doesn't automatically close on click outside\n * or Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"position=top | auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Offcanvas extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_OFFCANVAS,\n      (el, config) => new Offcanvas(el, config),\n      offcanvasConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: OffcanvasConfig) {\n    super(element, {\n      name: WIDGET_NAME_OFFCANVAS,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n\n    const position = config?.position || MC.S_RIGHT;\n    setData(this.getRoot(), MC.PREFIX_PLACE, position);\n  }\n}\n\n/**\n * @interface\n */\nexport type OffcanvasConfig = {\n  /**\n   * The DOM ID of the offcanvas. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-offcanvas-content-id`\n   * attribute used to link triggers to the offcanvas.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the offcanvas. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and the same `data-lisn-offcanvas-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and that do _not_ have a `data-lisn-offcanvas-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Specify the offcanvas position. Supported positions are top, bottom, left,\n   * right.\n   *\n   * @defaultValue \"right\"\n   */\n  position?: Position;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the offcanvas when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n// ------------------------------\n\ntype ElementsCollection = {\n  content: HTMLElement;\n  root: HTMLElement;\n  container: HTMLElement | null;\n  outerWrapper: HTMLElement;\n  triggers: Map<Element, OpenableTriggerConfig>;\n};\n\nconst instances = MH.newWeakMap<Element, Openable>();\n\nconst WIDGET_NAME_COLLAPSIBLE = \"collapsible\";\nconst WIDGET_NAME_POPUP = \"popup\";\nconst WIDGET_NAME_MODAL = \"modal\";\nconst WIDGET_NAME_OFFCANVAS = \"offcanvas\";\n\nconst PREFIX_CLOSE_BTN = MH.prefixName(\"close-button\");\nconst PREFIX_IS_OPEN = MH.prefixName(\"is-open\");\nconst PREFIX_REVERSE = MH.prefixName(MC.S_REVERSE);\nconst PREFIX_PEEK = MH.prefixName(\"peek\");\nconst PREFIX_OPENS_ON_HOVER = MH.prefixName(\"opens-on-hover\");\nconst PREFIX_LINE = MH.prefixName(\"line\");\nconst PREFIX_ICON_POSITION = MH.prefixName(\"icon-position\");\nconst PREFIX_TRIGGER_ICON = MH.prefixName(\"trigger-icon\");\nconst PREFIX_ICON_WRAPPER = MH.prefixName(\"icon-wrapper\");\nconst S_AUTO = \"auto\";\nconst S_ARIA_EXPANDED = MC.ARIA_PREFIX + \"expanded\";\nconst S_ARIA_MODAL = MC.ARIA_PREFIX + \"modal\";\nconst VAR_PEEK_SIZE = MH.prefixCssVar(\"peek-size\");\nconst VAR_JS_COLLAPSIBLE_WIDTH = MH.prefixCssJsVar(\"collapsible-width\");\nconst MIN_CLICK_TIME_AFTER_HOVER_OPEN = 1000;\nconst S_ARROW_UP =\n  `${MC.S_ARROW}-${MC.S_UP}` as `${typeof MC.S_ARROW}-${typeof MC.S_UP}`;\nconst S_ARROW_DOWN =\n  `${MC.S_ARROW}-${MC.S_DOWN}` as `${typeof MC.S_ARROW}-${typeof MC.S_DOWN}`;\nconst S_ARROW_LEFT =\n  `${MC.S_ARROW}-${MC.S_LEFT}` as `${typeof MC.S_ARROW}-${typeof MC.S_LEFT}`;\nconst S_ARROW_RIGHT =\n  `${MC.S_ARROW}-${MC.S_RIGHT}` as `${typeof MC.S_ARROW}-${typeof MC.S_RIGHT}`;\n\nconst ARROW_TYPES = [\n  S_ARROW_UP,\n  S_ARROW_DOWN,\n  S_ARROW_LEFT,\n  S_ARROW_RIGHT,\n] as const;\n\nconst ICON_CLOSED_TYPES = [\"plus\", ...ARROW_TYPES] as const;\nconst ICON_OPEN_TYPES = [\"minus\", \"x\", ...ARROW_TYPES] as const;\ntype IconCloseType = (typeof ICON_CLOSED_TYPES)[number];\ntype IconOpenType = (typeof ICON_OPEN_TYPES)[number];\n\nconst isValidIconClosed = (value: string): value is IconCloseType =>\n  MH.includes(ICON_CLOSED_TYPES, value);\n\nconst isValidIconOpen = (value: string): value is IconOpenType =>\n  MH.includes(ICON_OPEN_TYPES, value);\n\nconst triggerConfigValidator: WidgetConfigValidatorObject<OpenableTriggerConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      value && toBool(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n    hover: validateBoolean,\n  };\n\nconst collapsibleConfigValidator: WidgetConfigValidatorObject<CollapsibleConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    horizontal: validateBoolean,\n    reverse: validateBoolean,\n    peek: validateBooleanOrString,\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      toBool(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n  };\n\nconst popupConfigValidator: WidgetConfigValidatorObject<PopupConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) =>\n    validateString(\n      key,\n      value,\n      (v) => v === S_AUTO || isValidPosition(v) || isValidTwoFoldPosition(v),\n    ),\n  autoClose: validateBoolean,\n};\n\nconst modalConfigValidator: WidgetConfigValidatorObject<ModalConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  autoClose: validateBoolean,\n};\n\nconst offcanvasConfigValidator: WidgetConfigValidatorObject<OffcanvasConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) => validateString(key, value, isValidPosition),\n  autoClose: validateBoolean,\n};\n\nconst getPrefixedNames = (name: string) => {\n  const pref = MH.prefixName(name);\n  return {\n    _root: `${pref}__root`,\n    _overlay: `${pref}__overlay`, // only used for modal/offcanvas\n    _innerWrapper: `${pref}__inner-wrapper`,\n    _outerWrapper: `${pref}__outer-wrapper`,\n    _content: `${pref}__content`,\n    _container: `${pref}__container`,\n    _trigger: `${pref}__trigger`,\n    // Use different classes for styling to the ones used for auto-discovering\n    // elements, so that re-creating existing widgets can correctly find the\n    // elements to be used by the new widget synchronously before the current\n    // one is destroyed.\n    _containerForSelect: `${pref}-container`,\n    _triggerForSelect: `${pref}-trigger`,\n    _contentId: `${pref}-content-id`,\n  };\n};\n\nconst findContainer = (content: Element, cls: string) => {\n  const currWidget = instances.get(content);\n  // If there's an existing widget that we're about to destroy, the content\n  // element will be wrapped in several elements and won't be restored until\n  // the next mutate time. In that case, to correctly determine the container\n  // element, use the current widget's root element, which is located in the\n  // content element's original place.\n  let childRef = currWidget?.getRoot() || content;\n  if (!MH.parentOf(childRef)) {\n    // The current widget is not yet initialized (i.e. we are re-creating it\n    // immediately after it was constructed)\n    childRef = content;\n  }\n\n  // Find the content container\n  let container: HTMLElement | null = childRef.closest(`.${cls}`);\n  if (!container) {\n    container = MH.parentOf(childRef);\n  }\n\n  return container;\n};\n\nconst findTriggers = (\n  content: Element,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const container = findContainer(content, prefixedNames._containerForSelect);\n  // jsdom does not like the below selector when suffixed by [data-*] or :not()...\n  // const triggerSelector = `:is(.${prefixedNames._triggerForSelect},[data-${prefixedNames._triggerForSelect}])`;\n  // So use this:\n  const getTriggerSelector = (suffix: string) =>\n    `.${prefixedNames._triggerForSelect}${suffix},` +\n    `[data-${prefixedNames._triggerForSelect}]${suffix}`;\n\n  const contentId = getData(content, prefixedNames._contentId);\n  let triggers: Element[] = [];\n\n  if (contentId) {\n    triggers = [\n      ...MH.docQuerySelectorAll(\n        getTriggerSelector(`[data-${prefixedNames._contentId}=\"${contentId}\"]`),\n      ),\n    ];\n  } else if (container) {\n    triggers = [\n      ...MH.arrayFrom(\n        MH.querySelectorAll(\n          container,\n          getTriggerSelector(`:not([data-${prefixedNames._contentId}])`),\n        ),\n      ).filter((t) => !content.contains(t)),\n    ];\n  }\n\n  return triggers;\n};\n\nconst getTriggersFrom = (\n  content: Element,\n  inputTriggers:\n    | Element[]\n    | Map<Element, OpenableTriggerConfig | null>\n    | undefined,\n  wrapTriggers: boolean,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const triggerMap = MH.newMap<Element, OpenableTriggerConfig>();\n\n  inputTriggers = inputTriggers || findTriggers(content, prefixedNames);\n\n  const addTrigger = (\n    trigger: Element,\n    triggerConfig: OpenableTriggerConfig,\n  ) => {\n    if (wrapTriggers) {\n      const wrapper = MH.createElement(\n        isInlineTag(MH.tagName(trigger)) ? \"span\" : \"div\",\n      );\n      wrapElement(trigger, { wrapper, ignoreMove: true }); // no need to await\n      trigger = wrapper;\n    }\n\n    triggerMap.set(trigger, triggerConfig);\n  };\n\n  if (MH.isArray(inputTriggers)) {\n    for (const trigger of inputTriggers) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(\n          getData(trigger, prefixedNames._triggerForSelect),\n          triggerConfigValidator,\n        ),\n      );\n    }\n  } else if (MH.isInstanceOf(inputTriggers, Map)) {\n    for (const [trigger, triggerConfig] of inputTriggers.entries()) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(triggerConfig, triggerConfigValidator),\n      );\n    }\n  }\n\n  return triggerMap;\n};\n\nconst setupElements = (\n  widget: Openable,\n  content: HTMLElement,\n  properties: OpenableProperties,\n): ElementsCollection => {\n  const prefixedNames = getPrefixedNames(properties.name);\n  const container = findContainer(content, prefixedNames._containerForSelect);\n\n  const wrapTriggers = properties.wrapTriggers ?? false;\n  const triggers = getTriggersFrom(\n    content,\n    properties.triggers,\n    wrapTriggers,\n    prefixedNames,\n  );\n\n  // Create two wrappers\n  const innerWrapper = MH.createElement(\"div\");\n  addClasses(innerWrapper, prefixedNames._innerWrapper);\n\n  const outerWrapper = wrapElementNow(innerWrapper);\n\n  // Setup the root element.\n  // For off-canvas types we need another wrapper to serve as the root and we\n  // need a placeholder element to save the content's original position so it\n  // can be restored on destroy.\n  // Otherwise use outerWrapper for root and insert the root where the content\n  // was.\n  let root: HTMLElement;\n  let placeholder: HTMLElement;\n  if (properties.isOffcanvas) {\n    addClasses(outerWrapper, prefixedNames._outerWrapper);\n    root = wrapElementNow(outerWrapper);\n    placeholder = MH.createElement(\"div\");\n\n    const overlay = MH.createElement(\"div\");\n    addClasses(overlay, prefixedNames._overlay);\n    moveElement(overlay, { to: root });\n  } else {\n    // Otherwise use the outer wrapper as the root\n    root = placeholder = outerWrapper;\n  }\n\n  if (properties.id) {\n    root.id = properties.id;\n  }\n\n  if (properties.className) {\n    addClassesNow(root, ...toArrayIfSingle(properties.className));\n  }\n\n  unsetBoolData(root, PREFIX_IS_OPEN);\n  const domID = getOrAssignID(root, properties.name);\n\n  if (properties.isModal) {\n    MH.setAttr(root, MC.S_ROLE, \"dialog\");\n    MH.setAttr(root, S_ARIA_MODAL);\n  }\n\n  addClasses(root, prefixedNames._root);\n  disableInitialTransition(root);\n\n  // Add a close button?\n  if (properties.closeButton) {\n    const closeBtn = MH.createButton(\"Close\");\n    addClasses(closeBtn, PREFIX_CLOSE_BTN);\n\n    // If autoClose is true, it will be closed on click anyway, because the\n    // close button is outside the content.\n    addEventListenerTo(closeBtn, MC.S_CLICK, () => {\n      widget.close();\n    });\n\n    moveElement(closeBtn, { to: properties.isOffcanvas ? root : innerWrapper });\n  }\n\n  // Transfer the relevant classes/data attrs from content to root element, so\n  // that our CSS can work without :has.\n  // This won't cause forced layout since the root is not yet attached to the\n  // DOM.\n  for (const cls of [\n    settings.lightThemeClassName,\n    settings.darkThemeClassName,\n  ]) {\n    if (hasClass(content, cls)) {\n      addClasses(root, cls);\n    }\n  }\n\n  const elements = {\n    content,\n    root,\n    container,\n    outerWrapper,\n    triggers,\n  };\n\n  // -------------------- Close / destroy hooks\n  widget.onClose(async () => {\n    for (const trigger of triggers.keys()) {\n      delData(trigger, PREFIX_OPENS_ON_HOVER);\n      MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n      await unsetBoolData(trigger, PREFIX_IS_OPEN);\n    }\n  });\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n\n    replaceElementNow(placeholder, content, { ignoreMove: true });\n    moveElementNow(root); // remove\n    removeClassesNow(content, prefixedNames._content);\n\n    if (container) {\n      removeClassesNow(container, prefixedNames._container);\n    }\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      MH.delAttr(trigger, MC.S_ARIA_CONTROLS);\n      MH.delAttr(trigger, S_ARIA_EXPANDED);\n\n      delDataNow(trigger, PREFIX_OPENS_ON_HOVER);\n      delDataNow(trigger, PREFIX_IS_OPEN);\n\n      removeClassesNow(\n        trigger,\n        prefixedNames._trigger,\n        ...(triggerConfig?.className || []),\n      );\n\n      if (trigger.id === triggerConfig?.id) {\n        trigger.id = \"\";\n      }\n\n      if (wrapTriggers) {\n        replaceElementNow(trigger, MH.childrenOf(trigger)[0], {\n          ignoreMove: true,\n        });\n      }\n    }\n\n    triggers.clear();\n\n    for (const el of [content, ...triggers.keys()]) {\n      if (instances.get(el) === widget) {\n        MH.deleteKey(instances, el);\n      }\n    }\n  });\n\n  // -------------------- SETUP\n  // Save the elements so we can lookup the instance\n  const currWidget = instances.get(content);\n  for (const el of [content, ...triggers.keys()]) {\n    instances.set(el, widget);\n  }\n\n  // Wait for the DOMWatcher to be active, which may not be before interactive.\n  waitForInteractive()\n    .then(currWidget?.destroy)\n    .then(waitForMutateTime)\n    .then(() => {\n      if (widget.isDestroyed()) {\n        return;\n      }\n\n      addClassesNow(content, prefixedNames._content);\n\n      if (container) {\n        addClassesNow(container, prefixedNames._container);\n      }\n\n      if (properties.isOffcanvas) {\n        moveElementNow(root, {\n          to: MH.getBody(),\n          ignoreMove: true,\n        });\n      }\n\n      // Move the placeholder element to before the content and then move\n      // content into inner wrapper.\n      moveElementNow(placeholder, {\n        // for not-offcanvas it's also the root\n        to: content,\n        position: \"before\",\n        ignoreMove: true,\n      });\n\n      moveElementNow(content, { to: innerWrapper, ignoreMove: true });\n\n      // Setup the triggers\n      for (const [trigger, triggerConfig] of triggers.entries()) {\n        MH.setAttr(trigger, MC.S_ARIA_CONTROLS, domID);\n        MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n\n        setBoolDataNow(\n          trigger,\n          PREFIX_OPENS_ON_HOVER,\n          triggerConfig[MC.S_HOVER],\n        );\n        unsetBoolDataNow(trigger, PREFIX_IS_OPEN);\n\n        addClassesNow(\n          trigger,\n          prefixedNames._trigger,\n          ...(triggerConfig?.className || []),\n        );\n\n        if (triggerConfig?.id) {\n          trigger.id = triggerConfig.id;\n        }\n      }\n\n      setupListeners(widget, elements, properties, prefixedNames);\n\n      if (properties.onSetup) {\n        properties.onSetup();\n      }\n    });\n\n  return elements;\n};\n\nconst setupListeners = (\n  widget: Openable,\n  elements: ElementsCollection,\n  properties: OpenableProperties,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const { content, root, triggers } = elements;\n  const doc = MH.getDoc();\n\n  let hoverTimeOpened = 0;\n  let isPointerOver = false;\n  let activeTrigger: Element | null = null;\n\n  // ----------\n\n  const isTrigger = (element: Element) =>\n    MH.includes(\n      MH.arrayFrom(triggers.keys()),\n      element.closest(getDefaultWidgetSelector(prefixedNames._trigger)),\n    );\n\n  const shouldPreventDefault = (trigger: Element) =>\n    triggers.get(trigger)?.preventDefault ?? true;\n\n  const usesHover = (trigger: Element) => triggers.get(trigger)?.hover;\n\n  const usesAutoClose = (trigger: Element | null) =>\n    (trigger ? triggers.get(trigger)?.autoClose : null) ?? properties.autoClose;\n\n  // ----------\n\n  const toggleTrigger = (event: Event, openIt?: boolean) => {\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger)) {\n      if (shouldPreventDefault(trigger)) {\n        MH.preventDefault(event);\n      }\n\n      // If a click was fired shortly after opening on hover, ignore\n      if (\n        openIt !== false && // not explicitly asked to close\n        widget.isOpen() &&\n        MH.timeSince(hoverTimeOpened) < MIN_CLICK_TIME_AFTER_HOVER_OPEN\n      ) {\n        return;\n      }\n\n      if (openIt ?? !widget.isOpen()) {\n        // open it\n        activeTrigger = trigger;\n        MH.setAttr(trigger, S_ARIA_EXPANDED); // will be unset on close\n        setBoolData(trigger, PREFIX_IS_OPEN); // will be unset on close\n\n        widget.open(); // no need to await\n\n        if (usesAutoClose(trigger)) {\n          if (usesHover(trigger)) {\n            addEventListenerTo(root, MC.S_POINTERENTER, setIsPointerOver);\n            addEventListenerTo(root, MC.S_POINTERLEAVE, pointerLeft);\n          }\n\n          // auto-close listeners setup by the onOpen handler below\n        }\n      } else {\n        widget.close(); // out onClose handler below will remove listeners\n      }\n    }\n  };\n\n  // ----------\n\n  const setIsPointerOver = () => {\n    isPointerOver = true;\n  };\n\n  // ----------\n\n  const unsetIsPointerOver = (event: Event) => {\n    // Keep it set to true if this is a touch pointer type; otherwise unset\n    isPointerOver = isPointerOver && MH.isTouchPointerEvent(event);\n  };\n\n  // ----------\n\n  const pointerEntered = (event: Event) => {\n    setIsPointerOver();\n    if (!widget.isOpen()) {\n      hoverTimeOpened = MH.timeNow();\n      toggleTrigger(event, true);\n    }\n  };\n\n  // ----------\n\n  const pointerLeft = (event: Event) => {\n    unsetIsPointerOver(event);\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger) && usesAutoClose(trigger)) {\n      MH.setTimer(\n        () => {\n          if (!isPointerOver) {\n            widget.close();\n          }\n        },\n        // use a delay that allows the mouse to move from trigger to content\n        // without closing it\n        // TODO make this user-configurable\n        properties.isOffcanvas ? 300 : 50,\n      );\n    }\n  };\n\n  // ----------\n\n  const closeIfEscape = (event: Event) => {\n    if ((event as KeyboardEvent).key === \"Escape\") {\n      widget.close(); // no need to await\n    }\n  };\n\n  // ----------\n\n  const closeIfClickOutside = (event: Event) => {\n    const target = MH.targetOf(event);\n    if (\n      target === doc ||\n      (MH.isElement(target) &&\n        !content.contains(target) && // outside content\n        !isTrigger(target)) // handled by pointer watcher\n    ) {\n      widget.close();\n    }\n  };\n\n  // ----------\n\n  const maybeSetupAutoCloseListeners = (\n    trigger: Element | null,\n    remove: boolean,\n  ) => {\n    if (usesAutoClose(trigger)) {\n      const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n      addOrRemove(doc, \"keyup\", closeIfEscape);\n\n      // Add a short delay so that we don't catch the bubbling of the click event\n      // that opened the widget.\n      MH.setTimer(() => addOrRemove(doc, MC.S_CLICK, closeIfClickOutside), 100);\n\n      if (trigger && usesHover(trigger)) {\n        addOrRemove(trigger, MC.S_POINTERLEAVE, pointerLeft);\n      }\n    }\n  };\n\n  // ----------\n\n  const setupOrCleanup = (remove: boolean) => {\n    const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      // Always setup click listeners\n      addOrRemove(trigger, MC.S_CLICK, toggleTrigger);\n\n      if (triggerConfig[MC.S_HOVER]) {\n        addOrRemove(trigger, MC.S_POINTERENTER, pointerEntered);\n      }\n    }\n  };\n\n  // ----------\n\n  setupOrCleanup(false);\n\n  widget.onOpen(() => {\n    maybeSetupAutoCloseListeners(activeTrigger, false); // setup listeners if relevant\n  });\n\n  widget.onClose(() => {\n    hoverTimeOpened = 0;\n    isPointerOver = false;\n\n    removeEventListenerFrom(root, MC.S_POINTERENTER, setIsPointerOver);\n    removeEventListenerFrom(root, MC.S_POINTERLEAVE, pointerLeft);\n\n    maybeSetupAutoCloseListeners(activeTrigger, true); // remove listeners if any\n    activeTrigger = null;\n  });\n\n  widget.onDestroy(() => {\n    setupOrCleanup(true); // remove\n  });\n};\n\n// COLLAPSIBLE ------------------------------\n\nconst insertCollapsibleIcon = (\n  trigger: Element,\n  triggerConfig: OpenableTriggerConfig,\n  widget: Collapsible,\n  widgetConfig: CollapsibleConfig | undefined,\n) => {\n  const iconPosition = triggerConfig.icon ?? widgetConfig?.icon;\n  const iconClosed =\n    triggerConfig.iconClosed ?? widgetConfig?.iconClosed ?? \"plus\";\n  const iconOpen = triggerConfig.iconOpen ?? widgetConfig?.iconOpen ?? \"minus\";\n\n  if (iconPosition) {\n    addClasses(trigger, PREFIX_ICON_WRAPPER);\n    setData(trigger, PREFIX_ICON_POSITION, iconPosition);\n\n    const icon = MH.createElement(\"span\");\n    setDataNow(icon, PREFIX_TRIGGER_ICON, iconClosed);\n\n    for (let l = 0; l < 2; l++) {\n      const line = MH.createElement(\"span\");\n      addClassesNow(line, PREFIX_LINE);\n      moveElementNow(line, { to: icon });\n    }\n\n    moveElement(icon, { to: trigger, ignoreMove: true });\n\n    widget.onOpen(() => {\n      if (getBoolData(trigger, PREFIX_IS_OPEN)) {\n        setData(icon, PREFIX_TRIGGER_ICON, iconOpen);\n      }\n    });\n\n    widget.onClose(() => {\n      setData(icon, PREFIX_TRIGGER_ICON, iconClosed);\n    });\n  }\n};\n\n// POPUP ------------------------------\n\nconst fetchPopupPlacement = async (\n  contentSize: SizeData,\n  containerView: ViewData,\n) => {\n  const containerPosition = containerView.relative;\n  const containerTop = containerPosition[MC.S_TOP];\n  const containerBottom = containerPosition[MC.S_BOTTOM];\n  const containerLeft = containerPosition[MC.S_LEFT];\n  const containerRight = containerPosition[MC.S_RIGHT];\n  const containerHMiddle = containerPosition.hMiddle;\n  const containerVMiddle = containerPosition.vMiddle;\n  const vpSize = await fetchViewportSize();\n  const popupWidth = contentSize.border[MC.S_WIDTH] / vpSize[MC.S_WIDTH];\n  const popupHeight = contentSize.border[MC.S_HEIGHT] / vpSize[MC.S_HEIGHT];\n\n  // - Find the maximum of these quantities:\n  //   - containerTop - popupHeight:\n  //     the space on top if placed on top-(left|right|)\n  //   - 1 - (containerBottom + popupHeight):\n  //     the space on bottom be if placed on bottom-(left|right|)\n  //   - containerLeft - popupWidth:\n  //     the space on left if placed on left-(top|bottom|)\n  //   - 1 - (containerRight + popupWidth):\n  //     the space on right if placed on right-(top|bottom|)\n  //\n  // This determines the main placement: top|bottom|left|right\n\n  // Then to determine secondary alignment:\n  // - For top/bottom placement, determine horizontal alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerLeft + popupWidth):\n  //       the space on right if left-aligned\n  //     - containerRight - popupWidth:\n  //       the space on left if right-aligned\n  //     - min(\n  //           containerHMiddle - popupWidth / 2,\n  //           1 - (containerHMiddle + popupWidth / 2),\n  //       ):\n  //       the minimum of the space on either left or right if center-aligned\n  //\n  // - For left/right placement, determine vertical alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerTop + popupHeight):\n  //       the space on bottom if top-aligned\n  //     - containerBottom - popupHeight:\n  //       the space on top if bottom-aligned\n  //     - min(\n  //           containerVMiddle - popupHeight / 2,\n  //           1 - (containerVMiddle + popupHeight / 2),\n  //       ):\n  //       the minimum of the space on either top or bottom if center-aligned\n\n  const placementVars = {\n    top: containerTop - popupHeight,\n    bottom: 1 - (containerBottom + popupHeight),\n    left: containerLeft - popupWidth,\n    right: 1 - (containerRight + popupWidth),\n  };\n\n  const placement = keyWithMaxVal(placementVars);\n  if (placement === undefined) {\n    // container must be out-view and so left/right are NaN\n    return;\n  }\n  let finalPlacement = placement;\n\n  let alignmentVars;\n  switch (placement) {\n    case MC.S_TOP:\n    case MC.S_BOTTOM:\n      alignmentVars = {\n        left: 1 - (containerLeft + popupWidth),\n        right: containerRight - popupWidth,\n        middle: MH.min(\n          containerHMiddle - popupWidth / 2,\n          1 - (containerHMiddle + popupWidth / 2),\n        ),\n      };\n      break;\n\n    case MC.S_LEFT:\n    case MC.S_RIGHT:\n      alignmentVars = {\n        top: 1 - (containerTop + popupHeight),\n        bottom: containerBottom - popupHeight,\n        middle: MH.min(\n          containerVMiddle - popupHeight / 2,\n          1 - (containerVMiddle + popupHeight / 2),\n        ),\n      };\n      break;\n\n    default:\n      return;\n  }\n\n  const alignment = keyWithMaxVal(alignmentVars);\n  if (alignment !== \"middle\") {\n    finalPlacement += \"-\" + alignment;\n  }\n\n  return finalPlacement;\n};\n"],"mappings":"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","ignoreList":[]}