{"version":3,"file":"x-map.js","names":["MC","MH","newXMap","getDefaultV","XMap","newXMapGetter","newXWeakMap","XWeakMap","newXWeakMapGetter","XMapBase","constructor","root","_defineProperty","get","key","set","value","delete","deleteKey","has","sGet","result","undefined","prune","sk","rest","lengthOf","slice","isIterableObject","size","length","newMap","Symbol","iterator","defineProperty","clear","entries","keys","values","SYMBOL","newWeakMap"],"sources":["../../../src/ts/modules/x-map.ts"],"sourcesContent":["/**\n * @module Modules/XMap\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { MapBase } from \"@lisn/globals/types\";\n\nexport type DefaultValueGetter<K, V> = (key: K) => V;\nexport type IteratorCallback<K, V> = (\n  value: V,\n  key: K,\n  map: XMap<K, V>,\n) => void;\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXMap = <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  new XMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXMapGetter =\n  <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXMap(getDefaultV);\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMap = <K extends WeakKey, V>(\n  getDefaultV: DefaultValueGetter<K, V>,\n) => new XWeakMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXWeakMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMapGetter =\n  <K extends WeakKey, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXWeakMap(getDefaultV);\n\nexport abstract class XMapBase<K, V> {\n  /**\n   * Returns the value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly get: (key: K) => V | undefined;\n\n  /**\n   * Like {@link get} except that if the key is not found in the map, then it\n   * will set and return a default value by calling `getDefaultV` passed to the\n   * constructor.\n   */\n  readonly sGet: (key: K) => V;\n\n  /**\n   * Sets a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly set: (key: K, value: V) => void;\n\n  /**\n   * Deletes a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly delete: (key: K) => void;\n\n  /**\n   * Deletes empty keys in the {@link XMap} or {@link XWeakMap} starting at the\n   * final nested path and checking the level above after deletion.\n   *\n   * A key is considered empty if it's value is undefined or it's an empty Map,\n   * Set, Array, etc (anything with size or length property equal to 0).\n   */\n  readonly prune: (sk: K, ...rest: unknown[]) => void;\n\n  /**\n   * Returns true if the {@link XMap} or {@link XWeakMap} contains the given key.\n   */\n  readonly has: (key: K) => boolean;\n\n  protected constructor(\n    root: MapBase<K, V>,\n    getDefaultV: DefaultValueGetter<K, V>,\n  ) {\n    this.get = (key) => root.get(key);\n    this.set = (key, value) => root.set(key, value);\n    this.delete = (key) => MH.deleteKey(root, key);\n    this.has = (key) => root.has(key);\n\n    this.sGet = (key) => {\n      let result = root.get(key);\n      if (result === undefined) {\n        result = getDefaultV(key);\n        root.set(key, result);\n      }\n      return result;\n    };\n\n    this.prune = (sk, ...rest) => {\n      const value = root.get(sk);\n      if (value instanceof XMapBase && MH.lengthOf(rest)) {\n        value.prune(rest[0], ...rest.slice(1));\n      }\n\n      if (\n        value === undefined ||\n        (MH.isIterableObject(value) &&\n          !(\n            (\"size\" in value && value.size) ||\n            (\"length\" in value && value.length)\n          ))\n      ) {\n        MH.deleteKey(root, sk);\n      }\n    };\n  }\n}\n\n/**\n * {@link XMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map | Map},\n * except that it supports automatically creating missing entries with\n * {@link sGet} according to a default value getter function.\n *\n * @typeParam K  The type of the keys the map holds.\n * @typeParam V  The type of the values the map holds.\n */\nexport class XMap<K, V> extends XMapBase<K, V> implements Iterable<[K, V]> {\n  /**\n   * Returns the number of entries in the {@link XMap}.\n   */\n  readonly size!: number;\n\n  /**\n   * Deletes all entries in the {@link XMap}.\n   */\n  readonly clear: () => void;\n\n  /**\n   * Returns an iterator over the {@link XMap} entries.\n   */\n  readonly entries: () => MapIterator<[K, V]>;\n\n  /**\n   * Returns an iterator over the {@link XMap} keys.\n   */\n  readonly keys: () => MapIterator<K>;\n\n  /**\n   * Returns an iterator over the {@link XMap} values.\n   */\n  readonly values: () => MapIterator<V>;\n\n  readonly [Symbol.iterator]!: () => IterableIterator<[K, V]>;\n\n  /**\n   * Returns a function that when called returns a new {@link XMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XMap}s.\n   */\n  static readonly newXMapGetter = newXMapGetter;\n\n  /**\n   * @param {} getDefaultV  This function is called each time\n   *                        {@link sGet} is called with a non-existent\n   *                        key and must return a value that is then set for\n   *                        that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newMap<K, V>();\n    super(root, getDefaultV);\n\n    MH.defineProperty(this, \"size\", { get: () => root.size });\n    this.clear = () => root.clear();\n    this.entries = () => root.entries();\n    this.keys = () => root.keys();\n    this.values = () => root.values();\n    this[MC.SYMBOL.iterator] = () => root[MC.SYMBOL.iterator]();\n  }\n}\n\n/**\n * {@link XWeakMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap | WeakMap},\n * except that it supports automatically creating missing entries with\n * with {@link sGet} according to a default value getter function.\n *\n * @typeParam K  The type of the keys the map holds.\n * @typeParam V  The type of the values the map holds.\n */\nexport class XWeakMap<K extends WeakKey, V> extends XMapBase<K, V> {\n  /**\n   * Returns a function that when called returns a new {@link XWeakMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XWeakMap}s.\n   */\n  static readonly newXWeakMapGetter = newXWeakMapGetter;\n\n  /**\n   * @param {} getDefaultV  This function is called each time\n   *                        {@link sGet} is called with a non-existent\n   *                        key and must return a value that is then set for\n   *                        that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newWeakMap<K, V>();\n    super(root, getDefaultV);\n  }\n}\n"],"mappings":"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","ignoreList":[]}