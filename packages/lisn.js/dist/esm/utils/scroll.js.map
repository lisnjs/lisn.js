{"version":3,"file":"scroll.js","names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","toString","from","test","_defineProperty","_toPropertyKey","_toPrimitive","toPrimitive","String","Number","MC","MH","settings","getComputedStylePropNow","SCROLL_DIRECTIONS","waitForInteractive","waitForElementOrInteractive","waitForMeasureTime","waitForMutateTime","addEventListenerTo","removeEventListenerFrom","logError","logWarn","maxAbs","easeInOutQuad","isValidStrList","newXMap","isScrollable","element","options","_ref","axis","active","noCache","_isScrollableCache$ge","cachedResult","isScrollableCache","get","isNullish","offset","result","doCache","concat","elScrollTo","toLowerCase","canScroll","dimension","sGet","set","setTimer","deleteKey","prune","IS_SCROLLABLE_CACHE_TIMEOUT","_isScrollable","getClosestScrollable","ancestor","parentOf","getCurrentScrollAction","scrollable","toScrollableOrDefault","action","currentScrollAction","copyObject","scrollTo","to","userOptions","getOptions","_scrollable","currentScroll","cancel","isCancelled","cancelFn","_weCanInterrupt","scrollEvents","preventScrollHandler","_userCanInterrupt","_iterator","_step","eventType","once","err","preventDefault","_iterator2","_step2","passive","promise","initiateScroll","thisScrollAction","waitFor","cleanup","_i","_scrollEvents","isValidScrollDirection","direction","includes","isValidScrollDirectionList","directions","mapScrollable","original","actualScrollable","mappedScrollables","unmapScrollable","getClientWidthNow","isScrollableBodyInQuirks","offsetWidth","getBorderWidth","S_LEFT","S_RIGHT","S_CLIENT_WIDTH","getClientHeightNow","offsetHeight","S_TOP","S_BOTTOM","S_CLIENT_HEIGHT","tryGetMainContentElement","mainContentElement","fetchMainContentElement","_ref2","_callee","_callee$","_context","init","tryGetMainScrollableElement","mainScrollableElement","fetchMainScrollableElement","_ref3","_callee2","_callee2$","_context2","getDefaultScrollingElement","body","getBody","getDocScrollingElement","tryGetScrollableElement","target","toScrollableOrMain","fetchScrollableElement","_ref4","_callee3","_callee3$","_context3","_x","newMap","DIFF_THRESHOLD","arePositionsDifferent","start","end","top","left","getMain","isElement","getWindow","getDoc","usageError","_options$weCanInterru","_options$userCanInter","getTargetCoordinates","altTarget","_target","_offset","_altTarget","_altOffset","altOffset","_duration","duration","weCanInterrupt","userCanInterrupt","docScrollingElement","contains","S_SCROLL_TOP","getBoundingClientRect","S_SCROLL_LEFT","isString","targetEl","docQuerySelector","isObject","getStartEndPosition","_ref5","_callee4","applyOffset","_callee4$","_context4","position","getEndPosition","_x2","startPosition","targetCoordinates","endPosition","isFunction","scrollH","S_SCROLL_HEIGHT","scrollW","S_SCROLL_WIDTH","clientH","clientW","min","max","_ref6","_callee6","startTime","previousTimeStamp","currentPosition","_step3","_callee6$","_context6","step","_ref7","_callee5","timeStamp","elapsed","progress","_callee5$","_context5","timeNow","_x3","_x4","side","ceil","parseFloat","initPromise","_callee7","mainScrollableElementSelector","contentElement","_callee7$","_context7","isHTMLElement","hasDOM"],"sources":["../../../src/ts/utils/scroll.ts"],"sourcesContent":["/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  ScrollDirection,\n  ScrollTarget,\n  TargetCoordinates,\n  CoordinateOffset,\n  ScrollPosition,\n  Offset,\n} from \"@lisn/globals/types\";\n\nimport { getComputedStylePropNow } from \"@lisn/utils/css-alter\";\nimport { SCROLL_DIRECTIONS } from \"@lisn/utils/directions\";\nimport {\n  waitForInteractive,\n  waitForElementOrInteractive,\n} from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { maxAbs, easeInOutQuad } from \"@lisn/utils/math\";\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Scrolling\n */\nexport type ScrollAction = {\n  cancel: () => boolean;\n\n  /**\n   * Will reject if the scroll is cancelled.\n   */\n  waitFor: () => Promise<ScrollPosition>;\n};\n\n/**\n * @category Scrolling\n * @interface\n */\nexport type ScrollToOptions = {\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue If `document.body` is scrollable, will use that; otherwise `document.scrollingElement`\n   */\n  scrollable?: Element;\n\n  /**\n   * Offset the target coordinates by the given amount(s).\n   *\n   * E.g. if the final target coordinates are computed to be\n   * `{top: 100, left: 0}` and you specify offset as `{top: 10, left: 20}`, it\n   * will scroll to  `{top: 110, left: 20}`.\n   *\n   * @defaultValue undefined\n   */\n  offset?: CoordinateOffset;\n\n  // TODO maybe support fixed velocity as an alternative to fixed duration?\n  /**\n   * The duration of the scroll animation. If not given, it is instant.\n   *\n   * @defaultValue 0\n   */\n  duration?: number;\n\n  /**\n   * Whether another request to us to scroll the same target can interrupt this\n   * scroll before it finishes.\n   *\n   * @defaultValue false\n   */\n  weCanInterrupt?: boolean;\n\n  /**\n   * Whether a user attempt to scroll the target can interrupt this before it\n   * finishes.\n   *\n   * @defaultValue false\n   */\n  userCanInterrupt?: boolean;\n\n  /**\n   * If the scrolling element is already at the given coordinates (or strictly\n   * speaking we allow for 5 pixels difference), then if `altTarget` is given,\n   * this will become the target to scroll to.\n   *\n   * @defaultValue undefined\n   */\n  altTarget?: TargetCoordinates | Element | string;\n\n  /**\n   * Offset the target coordinates by the given amount(s) when `altTarget` is used.\n   *\n   * See {@link ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined\n   */\n  altOffset?: CoordinateOffset;\n};\n\n// ----------\n\n/**\n * Returns true if the given element is scrollable in the given direction, or\n * in either direction (if `axis` is not given).\n *\n * **IMPORTANT:** If you enable `active` then be aware that:\n * 1. It may attempt to scroll the target in order to determine whether it's\n *    scrollable in a more reliable way than the default method of comparing\n *    clientWidth/Height to scrollWidth/Height. If there is currently any\n *    ongoing scroll on the target, this will stop it, so never use that inside\n *    scroll-triggered handlers.\n * 2. If the layout has been invalidated and not yet recalculated,\n *    this will cause a forced layout, so always {@link waitForMeasureTime}\n *    before calling this function when possible.\n *\n * @param {} [options.axis]    One of \"x\" or \"y\" for horizontal or vertical\n *                             scroll respectively. If not given, it checks\n *                             both.\n * @param {} [options.active]  If true, then if the target's current scroll\n *                             offset is 0, it will attempt to scroll it rather\n *                             than looking at the clientWidth/Height to\n *                             scrollWidth/Height. This is more reliable but can\n *                             cause issues, see note above.\n * @param {} [options.noCache] By default the result of a check is cached for\n *                             1s and if there's already a cached result for\n *                             this element, it is returns. Set this to true to\n *                             disable checking the cache and also saving the\n *                             result into the cache.\n *\n * @category Scrolling\n */\nexport const isScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n): boolean => {\n  const { axis, active, noCache } = options || {};\n  if (!axis) {\n    return (\n      isScrollable(element, { axis: \"y\", active, noCache }) ||\n      isScrollable(element, { axis: \"x\", active, noCache })\n    );\n  }\n\n  if (!noCache) {\n    const cachedResult = isScrollableCache.get(element)?.get(axis);\n    if (!MH.isNullish(cachedResult)) {\n      return cachedResult;\n    }\n  }\n\n  const offset = axis === \"x\" ? \"Left\" : \"Top\";\n  let result = false;\n  let doCache = !noCache;\n\n  if (element[`scroll${offset}`]) {\n    result = true;\n  } else if (active) {\n    // Use scrollTo with explicit behavior set to instant instead of setting\n    // the scrollTop/Left properties since the latter doesn't work with\n    // scroll-behavior smooth.\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 1 });\n    const canScroll = element[`scroll${offset}`] > 0;\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 0 });\n    result = canScroll;\n  } else {\n    const dimension = axis === \"x\" ? \"Width\" : \"Height\";\n    result = element[`scroll${dimension}`] > element[`client${dimension}`];\n    // No need to cache a passive check.\n    doCache = false;\n  }\n\n  if (doCache) {\n    isScrollableCache.sGet(element).set(axis, result);\n    MH.setTimer(() => {\n      MH.deleteKey(isScrollableCache.get(element), axis);\n      isScrollableCache.prune(element);\n    }, IS_SCROLLABLE_CACHE_TIMEOUT);\n  }\n\n  return result;\n};\n\n/**\n * Returns the closest scrollable ancestor of the given element, _not including\n * it_.\n *\n * @param {} options See {@link isScrollable}\n *\n * @return {} `null` if no scrollable ancestors are found.\n *\n * @category Scrolling\n */\nexport const getClosestScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n) => {\n  // Walk up the tree, starting at the element in question but excluding it.\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = MH.parentOf(ancestor))) {\n    if (isScrollable(ancestor, options)) {\n      return ancestor;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Returns the current {@link ScrollAction} if any.\n *\n * @category Scrolling\n */\nexport const getCurrentScrollAction = (\n  scrollable?: Element,\n): ScrollAction | null => {\n  scrollable = toScrollableOrDefault(scrollable);\n  const action = currentScrollAction.get(scrollable);\n  if (action) {\n    return MH.copyObject(action);\n  }\n  return null;\n};\n\n/**\n * Scrolls the given scrollable element to the given `to` target.\n *\n * Returns `null` if there's an ongoing scroll that is not cancellable.\n *\n * Note that if `to` is an element or a selector, then it _must_ be a\n * descendant of the scrollable element.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *               If the target coordinates are invalid.\n *\n * @param {} to  If this is an element, then its top-left position is used as\n *               the target coordinates. If it is a string, then it is treated\n *               as a selector for an element using `querySelector`.\n *\n * @return {} `null` if there's an ongoing scroll that is not cancellable,\n * otherwise a {@link ScrollAction}.\n *\n * @category Scrolling\n */\nexport const scrollTo = (\n  to: TargetCoordinates | Element | string,\n  userOptions?: ScrollToOptions,\n): ScrollAction | null => {\n  const options = getOptions(to, userOptions);\n  const scrollable = options._scrollable;\n\n  // cancel current scroll action if any\n  const currentScroll = currentScrollAction.get(scrollable);\n  if (currentScroll) {\n    if (!currentScroll.cancel()) {\n      // current scroll action is not cancellable by us\n      return null;\n    }\n  }\n\n  let isCancelled = false;\n\n  const cancelFn = options._weCanInterrupt\n    ? () => (isCancelled = true)\n    : () => false;\n\n  const scrollEvents = [\"touchmove\", \"wheel\"]; // don't bother with keyboard\n  let preventScrollHandler: EventListener | null = null;\n\n  if (options._userCanInterrupt) {\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(\n        scrollable,\n        eventType,\n        () => {\n          isCancelled = true;\n        },\n        { once: true },\n      );\n    }\n  } else {\n    preventScrollHandler = MH.preventDefault;\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(scrollable, eventType, preventScrollHandler, {\n        passive: false,\n      });\n    }\n  }\n\n  const promise = initiateScroll(options, () => isCancelled);\n\n  const thisScrollAction: ScrollAction = {\n    waitFor: () => promise,\n    cancel: cancelFn,\n  };\n\n  const cleanup = () => {\n    if (currentScrollAction.get(scrollable) === thisScrollAction) {\n      MH.deleteKey(currentScrollAction, scrollable);\n    }\n\n    if (preventScrollHandler) {\n      for (const eventType of scrollEvents) {\n        removeEventListenerFrom(scrollable, eventType, preventScrollHandler, {\n          passive: false,\n        });\n      }\n    }\n  };\n\n  thisScrollAction.waitFor().then(cleanup).catch(cleanup);\n\n  currentScrollAction.set(scrollable, thisScrollAction);\n  return thisScrollAction;\n};\n\n/**\n * Returns true if the given string is a valid scroll direction.\n *\n * @category Validation\n */\nexport const isValidScrollDirection = (\n  direction: string,\n): direction is ScrollDirection => MH.includes(SCROLL_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid scroll\n * directions.\n *\n * @category Validation\n */\nexport const isValidScrollDirectionList = (directions: string | string[]) =>\n  isValidStrList(directions, isValidScrollDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const mapScrollable = (original: Element, actualScrollable: Element) =>\n  mappedScrollables.set(original, actualScrollable);\n\n/**\n * @ignore\n * @internal\n */\nexport const unmapScrollable = (original: Element) =>\n  MH.deleteKey(mappedScrollables, original);\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientWidthNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetWidth -\n      getBorderWidth(element, MC.S_LEFT) -\n      getBorderWidth(element, MC.S_RIGHT)\n    : element[MC.S_CLIENT_WIDTH];\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientHeightNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetHeight -\n      getBorderWidth(element, MC.S_TOP) -\n      getBorderWidth(element, MC.S_BOTTOM)\n    : element[MC.S_CLIENT_HEIGHT];\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainContentElement = (): HTMLElement | null =>\n  mainContentElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainContentElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainContentElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainScrollableElement = (): HTMLElement | null =>\n  mainScrollableElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainScrollableElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainScrollableElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultScrollingElement = () => {\n  const body = MH.getBody();\n  return isScrollable(body) ? body : MH.getDocScrollingElement() || body;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetScrollableElement = (\n  target: ScrollTarget | null | undefined,\n): Element | null => toScrollableOrMain(target, tryGetMainScrollableElement);\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchScrollableElement = async (\n  target: ScrollTarget | null | undefined,\n): Promise<Element> => toScrollableOrMain(target, fetchMainScrollableElement);\n\n// ----------------------------------------\n\ntype ScrollToOptionsInternal = {\n  _target: TargetCoordinates;\n  _offset: CoordinateOffset | null;\n  _altTarget: TargetCoordinates | null;\n  _altOffset: CoordinateOffset | null;\n  _scrollable: Element;\n  _duration: number;\n  _weCanInterrupt: boolean;\n  _userCanInterrupt: boolean;\n};\n\nconst IS_SCROLLABLE_CACHE_TIMEOUT = 1000;\n\nconst isScrollableCache = newXMap<Element, Map<\"x\" | \"y\", boolean>>(() =>\n  MH.newMap(),\n);\n\nconst mappedScrollables = MH.newMap<Element, Element>();\n\nconst currentScrollAction = MH.newMap<Element, ScrollAction>();\n\nconst DIFF_THRESHOLD = 5;\nconst arePositionsDifferent = (start: ScrollPosition, end: ScrollPosition) =>\n  maxAbs(start.top - end.top, start.left - end.left) >= DIFF_THRESHOLD;\n\nconst toScrollableOrMain = <R>(\n  target: ScrollTarget | null | undefined,\n  getMain: () => R,\n): Element | R => {\n  if (MH.isElement(target)) {\n    return mappedScrollables.get(target) || target;\n  }\n\n  if (!target || target === MH.getWindow() || target === MH.getDoc()) {\n    return getMain();\n  }\n\n  throw MH.usageError(\"Unsupported scroll target\");\n};\n\nconst toScrollableOrDefault = (scrollable: Element | undefined): Element =>\n  scrollable ?? getDefaultScrollingElement();\n\nconst getOptions = (\n  to: TargetCoordinates | Element | string,\n  options: ScrollToOptions | undefined,\n): ScrollToOptionsInternal => {\n  const scrollable = toScrollableOrDefault(options?.scrollable);\n  const target = getTargetCoordinates(scrollable, to);\n  const altTarget = options?.altTarget\n    ? getTargetCoordinates(scrollable, options?.altTarget)\n    : null;\n\n  return {\n    _target: target,\n    _offset: options?.offset || null,\n    _altTarget: altTarget,\n    _altOffset: options?.altOffset || null,\n    _scrollable: scrollable,\n    _duration: options?.duration || 0,\n    _weCanInterrupt: options?.weCanInterrupt ?? false,\n    _userCanInterrupt: options?.userCanInterrupt ?? false,\n  };\n};\n\nconst getTargetCoordinates = (\n  scrollable: Element,\n  target: TargetCoordinates | Element | string,\n): TargetCoordinates => {\n  const docScrollingElement = MH.getDocScrollingElement();\n\n  if (MH.isElement(target)) {\n    if (scrollable === target || !scrollable.contains(target)) {\n      throw MH.usageError(\"Target must be a descendant of the scrollable one\");\n    }\n\n    return {\n      top: () =>\n        scrollable[MC.S_SCROLL_TOP] +\n        MH.getBoundingClientRect(target).top -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).top),\n      left: () =>\n        scrollable[MC.S_SCROLL_LEFT] +\n        MH.getBoundingClientRect(target).left -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).left),\n    };\n  }\n\n  if (MH.isString(target)) {\n    const targetEl = MH.docQuerySelector(target);\n    if (!targetEl) {\n      throw MH.usageError(`No match for '${target}'`);\n    }\n\n    return getTargetCoordinates(scrollable, targetEl);\n  }\n\n  if (!MH.isObject(target) || !(\"top\" in target || \"left\" in target)) {\n    throw MH.usageError(\"Invalid coordinates\");\n  }\n\n  return target;\n};\n\nconst getStartEndPosition = async (\n  options: ScrollToOptionsInternal,\n): Promise<{ start: ScrollPosition; end: ScrollPosition }> => {\n  await waitForMeasureTime();\n\n  const applyOffset = (\n    position: ScrollPosition,\n    offset: CoordinateOffset | null,\n  ) => {\n    position.top += offset?.top || 0;\n    position.left += offset?.left || 0;\n  };\n\n  const scrollable = options._scrollable;\n  const start = {\n    top: scrollable[MC.S_SCROLL_TOP],\n    left: scrollable[MC.S_SCROLL_LEFT],\n  };\n\n  let end = getEndPosition(scrollable, start, options._target);\n  applyOffset(end, options._offset);\n\n  if (!arePositionsDifferent(start, end) && options._altTarget) {\n    end = getEndPosition(scrollable, start, options._altTarget);\n    applyOffset(end, options._altOffset);\n  }\n\n  return { start, end };\n};\n\n// must be called in \"measure time\"\nconst getEndPosition = (\n  scrollable: Element,\n  startPosition: ScrollPosition,\n  targetCoordinates: TargetCoordinates,\n): ScrollPosition => {\n  // by default no change in scroll top or left\n  const endPosition = MH.copyObject(startPosition);\n\n  if (!MH.isNullish(targetCoordinates?.top)) {\n    if (MH.isFunction(targetCoordinates.top)) {\n      endPosition.top = targetCoordinates.top(scrollable);\n    } else {\n      endPosition.top = targetCoordinates.top;\n    }\n  }\n\n  if (!MH.isNullish(targetCoordinates?.left)) {\n    if (MH.isFunction(targetCoordinates.left)) {\n      endPosition.left = targetCoordinates.left(scrollable);\n    } else {\n      endPosition.left = targetCoordinates.left;\n    }\n  }\n\n  // Set boundaries\n  const scrollH = scrollable[MC.S_SCROLL_HEIGHT];\n  const scrollW = scrollable[MC.S_SCROLL_WIDTH];\n  const clientH = getClientHeightNow(scrollable);\n  const clientW = getClientWidthNow(scrollable);\n  endPosition.top = MH.min(scrollH - clientH, endPosition.top);\n  endPosition.top = MH.max(0, endPosition.top);\n\n  endPosition.left = MH.min(scrollW - clientW, endPosition.left);\n  endPosition.left = MH.max(0, endPosition.left);\n\n  return endPosition;\n};\n\nconst initiateScroll = async (\n  options: ScrollToOptionsInternal,\n  isCancelled: () => boolean,\n) => {\n  const position = await getStartEndPosition(options);\n  const duration = options._duration;\n  const scrollable = options._scrollable;\n\n  let startTime: number, previousTimeStamp: number;\n  let currentPosition: ScrollPosition = position.start;\n\n  const step = async () => {\n    await waitForMutateTime(); // effectively next animation frame\n    // Element.scrollTo equates to a measurement and needs to run after\n    // painting to avoid forced layout.\n    await waitForMeasureTime();\n    const timeStamp = MH.timeNow();\n\n    if (isCancelled()) {\n      // Reject the promise\n      throw currentPosition;\n    }\n\n    if (!startTime) {\n      // If it's very close to the target, no need to scroll smoothly\n      if (\n        duration === 0 ||\n        !arePositionsDifferent(currentPosition, position.end)\n      ) {\n        MH.elScrollTo(scrollable, position.end);\n        return position.end;\n      }\n\n      startTime = timeStamp;\n    }\n\n    if (startTime !== timeStamp && previousTimeStamp !== timeStamp) {\n      const elapsed = timeStamp - startTime;\n      const progress = easeInOutQuad(MH.min(1, elapsed / duration));\n\n      currentPosition = {\n        top:\n          position.start.top +\n          (position.end.top - position.start.top) * progress,\n        left:\n          position.start.left +\n          (position.end.left - position.start.left) * progress,\n      };\n\n      MH.elScrollTo(scrollable, currentPosition);\n\n      if (progress === 1) {\n        return currentPosition;\n      }\n    }\n\n    previousTimeStamp = timeStamp;\n    return step();\n  };\n\n  return step();\n};\n\nconst isScrollableBodyInQuirks = (element: Element): element is HTMLElement =>\n  element === MH.getBody() && MH.getDocScrollingElement() === null;\n\n// must be called in \"measure time\"\nconst getBorderWidth = (element: Element, side: Offset) =>\n  MH.ceil(MH.parseFloat(getComputedStylePropNow(element, `border-${side}`)));\n\n// ------------------------------\n\nlet mainContentElement: HTMLElement;\nlet mainScrollableElement: HTMLElement;\n\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      const mainScrollableElementSelector =\n        settings.mainScrollableElementSelector;\n\n      const contentElement = await waitForElementOrInteractive(() => {\n        return mainScrollableElementSelector\n          ? MH.docQuerySelector(mainScrollableElementSelector)\n          : MH.getBody(); // default if no selector\n      });\n\n      // defaults\n      mainScrollableElement = getDefaultScrollingElement();\n      mainContentElement = MH.getBody();\n\n      if (!contentElement) {\n        logError(\n          MH.usageError(\n            `No match for '${mainScrollableElementSelector}'. ` +\n              \"Scroll tracking/capturing may not work as intended.\",\n          ),\n        );\n      } else if (!MH.isHTMLElement(contentElement)) {\n        logWarn(\"mainScrollableElementSelector should point to an HTMLElement\");\n      } else if (contentElement !== mainContentElement) {\n        mainScrollableElement = mainContentElement = contentElement;\n      }\n    })();\n  }\n\n  return initPromise;\n};\n\n// Try to find the main scrollable/content elements asap so that tryGetMain*\n// can return them if called before fetchMain*\nif (MH.hasDOM()) {\n  waitForInteractive().then(init);\n}\n"],"mappings":"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","ignoreList":[]}