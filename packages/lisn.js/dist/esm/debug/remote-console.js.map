{"version":3,"file":"remote-console.js","names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","Array","from","test","isArray","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_defineProperty","_toPrimitive","toPrimitive","String","Number","MH","joinAsString","newXMap","RemoteConsole","url","_this","connectTimeout","undefined","DEFAULT_TIMEOUT","hasFailed","isClosed","tmpQueue","sendLog","level","args","destroy","debug","_len","_key","log","_len2","_key2","info","_len3","_key3","warn","_len4","_key4","error","_len5","_key5","cleanup","_instances$get","level__ignored","args__ignored","instance","instances","get","deleteKey","prune","_callee","socket","ioClient","disconnectTimer","entry","_callee$","_context","t0","io","setTimer","on","clearTimer","emit","concat","disconnect","shift","reuse","_instances$get2","rConsole","sGet","set","newMap"],"sources":["../../../src/ts/debug/remote-console.ts"],"sourcesContent":["/**\n * @module Debugging\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LogFunction } from \"@lisn/globals/types\";\n\nimport { joinAsString } from \"@lisn/utils/text\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport { ConsoleInterface } from \"@lisn/debug/types\";\n\n/* ******************************\n * Remote console\n * *******************************/\n\n/**\n * Connects to a remote {@link https://socket.io/ | socket.io} server and logs\n * messages to it.\n *\n * In the root of the Git repository, there is a simple example server that\n * listens for these messages and logs them to the local console.\n *\n * @category Logging\n */\nexport class RemoteConsole implements ConsoleInterface {\n  /**\n   * Emits a message with ID `console.debug`.\n   */\n  readonly debug: LogFunction;\n\n  /**\n   * Emits a message with ID `console.log`.\n   */\n  readonly log: LogFunction;\n\n  /**\n   * Emits a message with ID `console.info`.\n   */\n  readonly info: LogFunction;\n\n  /**\n   * Emits a message with ID `console.warn`.\n   */\n  readonly warn: LogFunction;\n\n  /**\n   * Emits a message with ID `console.error`.\n   */\n  readonly error: LogFunction;\n\n  /**\n   * Disconnects and destroys the {@link RemoteConsole}. Cannot be undone.\n   */\n  readonly destroy: () => void;\n\n  /**\n   * Returns true if the client has been disconnected for more than\n   * the connect timeout.\n   */\n  readonly hasFailed: () => boolean;\n\n  /**\n   * Creates a new {@link RemoteConsole} and attempts to connect to the logger\n   * at the given URL.\n   *\n   * @param {} url                      The URL of the remote logger.\n   * @param {} [connectTimeout = 1500]  The timeout in ms for a connection\n   *                                    to be considered failed.\n   */\n  constructor(url: string, connectTimeout = DEFAULT_TIMEOUT) {\n    let hasFailed = false; // initially\n    let isClosed = false;\n\n    // Because socket.io module is optional we need to import it dynamically,\n    // which is always async. So to avoid Console and Logger also needing to be\n    // async, we queue messages sent to a RemoteConsole here and try to import\n    // socket.io here.\n    let tmpQueue: Array<[string, unknown[]]> = [];\n    let sendLog = (level: string, args: unknown[]) => {\n      tmpQueue.push([level, args]);\n    };\n    let destroy = () => {};\n\n    this.hasFailed = () => hasFailed;\n    this.debug = (...args) => sendLog(\"debug\", args);\n    this.log = (...args) => sendLog(\"log\", args);\n    this.info = (...args) => sendLog(\"info\", args);\n    this.warn = (...args) => sendLog(\"warn\", args);\n    this.error = (...args) => sendLog(\"error\", args);\n    this.destroy = () => destroy();\n\n    const cleanup = () => {\n      hasFailed = true;\n      sendLog = (level__ignored: string, args__ignored: unknown[]) => {};\n      tmpQueue = [];\n\n      const instance = instances.get(url)?.get(connectTimeout);\n      if (instance === this) {\n        MH.deleteKey(instances.get(url), connectTimeout);\n        instances.prune(url);\n      }\n    };\n\n    (async () => {\n      let socket;\n      try {\n        socket = await import(\"socket.io-client\");\n      } catch (e__ignored) {\n        // module doesn't exist\n        cleanup();\n        return;\n      }\n\n      const ioClient = socket.io(url);\n\n      // if not connected within connectTimeout initially, set as failed\n      let disconnectTimer = MH.setTimer(() => {\n        hasFailed = true;\n      }, connectTimeout);\n\n      ioClient.on(\"disconnect\", () => {\n        // if not re-connected within connectTimeout, set as failed\n        MH.clearTimer(disconnectTimer);\n        if (!isClosed) {\n          disconnectTimer = MH.setTimer(() => {\n            hasFailed = true;\n          }, connectTimeout);\n        }\n      });\n\n      ioClient.on(\"connect\", () => {\n        MH.clearTimer(disconnectTimer);\n        hasFailed = false;\n      });\n\n      // Now we can send directly to the client\n      sendLog = (level: string, args: unknown[]) => {\n        if (!hasFailed) {\n          ioClient.emit(`console.${level}`, joinAsString(\" \", ...args));\n        }\n      };\n\n      destroy = () => {\n        isClosed = true; // do not wait for re-connect\n        ioClient.disconnect();\n        cleanup();\n      };\n\n      // Flush the queue\n      let entry: [string, unknown[]] | undefined;\n      while ((entry = tmpQueue.shift())) {\n        sendLog(entry[0], entry[1]);\n      }\n    })();\n  }\n\n  /**\n   * Returns an existing {@link RemoteConsole} for the given URL and timeout or\n   * creates a new one.\n   *\n   * If a new one is created, it will be saved for later reuse.\n   *\n   * @param {} url               The URL of the remote logger.\n   * @param {} [connectTimeout]  The timeout in ms for a remote connection to\n   *                             be considered failed. Default is 1500.\n   */\n  static reuse(url: string, connectTimeout = DEFAULT_TIMEOUT) {\n    let rConsole = instances.get(url)?.get(connectTimeout);\n    if (!rConsole) {\n      rConsole = new RemoteConsole(url, connectTimeout);\n      instances.sGet(url).set(connectTimeout, rConsole);\n    }\n\n    return rConsole;\n  }\n}\n\nconst instances = newXMap<string, Map<number, RemoteConsole>>(() =>\n  MH.newMap(),\n);\n\nconst DEFAULT_TIMEOUT = 1500;\n"],"mappings":"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","ignoreList":[]}