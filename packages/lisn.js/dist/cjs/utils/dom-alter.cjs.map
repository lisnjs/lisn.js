{"version":3,"file":"dom-alter.cjs","names":["MC","_interopRequireWildcard","require","MH","_settings","_cssAlter","_domOptimize","_domQuery","_log","_text","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","wrapElementNow","element","options","wrapper","createWrapperFor","ignoreMove","from","parentOf","to","replaceWith","append","exports","wrapElement","asyncMutatorFor","wrapChildrenNow","moveChildrenNow","moveElementNow","wrapChildren","replaceElementNow","newElement","replaceElement","swapElementsNow","elementA","elementB","temp","createElement","swapElements","oldParent","newParent","child","childrenOf","moveChildren","parentEl","position","remove","moveElement","hideAndRemoveElement","delay","hideElement","getOrAssignID","prefix","domID","id","randId","isAllowedToWrap","settings","contentWrappingAllowed","getData","PREFIX_NO_WRAP","getWrapper","tagName","classNames","PREFIX_WRAPPER","parent","lengthOf","isHTMLElement","hasTagName","hasAnyClass","getContentWrapper","firstChild","tryWrapNow","_tryWrapNow","tryWrap","tryWrapContentNow","tryWrapContent","unwrapContentNow","parentElement","removeClassesNow","unwrapContent","cloneElement","clone","cloneNode","setBooleanData","prefixName","insertGhostCloneNow","insertBefore","addClassesNow","PREFIX_GHOST","PREFIX_TRANSITION_DISABLE","PREFIX_ANIMATE_DISABLE","required","_wrapper","_clone","insertGhostClone","target","recordsToSkipOnce","getIgnoreMove","clearIgnoreMove","setTimer","deleteKey","insertArrow","direction","tag","arrow","S_ARROW","setDataNow","newMap","isElement","isInlineTag","wrapContent","requiredBy","getWrapperFn","wrapFn","allowedToWrap","PREFIX_INLINE_WRAPPER","logWarn"],"sources":["../../../src/ts/utils/dom-alter.ts"],"sourcesContent":["/**\n * @module Utils\n *\n * @categoryDescription DOM: Altering\n * These functions alter the DOM tree, but could lead to forced layout if not\n * scheduled using {@link Utils.waitForMutateTime}.\n *\n * @categoryDescription DOM: Altering (optimized)\n * These functions alter the DOM tree in an optimized way using\n * {@link Utils.waitForMutateTime} and so are asynchronous.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  hideElement,\n  hasAnyClass,\n  addClassesNow,\n  removeClassesNow,\n  getData,\n  setDataNow,\n  setBooleanData,\n} from \"@lisn/utils/css-alter\";\nimport { asyncMutatorFor } from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { randId } from \"@lisn/utils/text\";\n\n/**\n * Wraps the element in the given wrapper, or a newly created element if not given.\n *\n * @param [options.wrapper]\n *              If it's an element, it is used as the wrapper. If it's a string\n *              tag name, then a new element with this tag is created as the\n *              wrapper. If not given, then `div` is used if the element to be\n *              wrapped has an block-display tag, or otherwise `span` (if the\n *              element to be wrapped has an inline tag name).\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n * @returns The wrapper element that was either passed in options or created.\n *\n * @category DOM: Altering\n */\nexport const wrapElementNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: wrapper,\n    });\n\n    ignoreMove(wrapper, {\n      to: MH.parentOf(element),\n    });\n  }\n\n  element.replaceWith(wrapper);\n  wrapper.append(element);\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapElementNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapElement = asyncMutatorFor(wrapElementNow);\n\n/**\n * Wraps the element's children in the given wrapper, or a newly created element\n * if not given.\n *\n * @see {@link wrapElementNow}.\n *\n * @category DOM: Altering\n */\nexport const wrapChildrenNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n\n  moveChildrenNow(element, wrapper, { ignoreMove: true });\n  moveElementNow(wrapper, {\n    to: element,\n    ignoreMove: true,\n  });\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapChildrenNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapChildren = asyncMutatorFor(wrapChildrenNow);\n\n/**\n * Replace an element with another one.\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const replaceElementNow = (\n  element: Element,\n  newElement: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    ignoreMove(\n      // remove element\n      element,\n      { from: MH.parentOf(element) },\n    );\n\n    ignoreMove(\n      // move newElement to element's current parent\n      newElement,\n      { from: MH.parentOf(newElement), to: MH.parentOf(element) },\n    );\n  }\n\n  element.replaceWith(newElement);\n};\n\n/**\n * Like {@link replaceElementNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const replaceElement = asyncMutatorFor(replaceElementNow);\n\n/**\n * Replace an element with another one.\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const swapElementsNow = (\n  elementA: Element,\n  elementB: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  const temp = MH.createElement(\"div\");\n  replaceElementNow(elementA, temp, options);\n  replaceElementNow(elementB, elementA, options);\n  replaceElementNow(temp, elementB, options);\n};\n\n/**\n * Like {@link swapElementsNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const swapElements = asyncMutatorFor(swapElementsNow);\n\n// [TODO v2]: moveChildren to accept newParent as options.to\n\n/**\n * Move an element's children to a new element\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the children (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveChildrenNow = (\n  oldParent: Element,\n  newParent: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    for (const child of MH.childrenOf(oldParent)) {\n      ignoreMove(child, {\n        from: oldParent,\n        to: newParent,\n      });\n    }\n  }\n\n  newParent.append(...MH.childrenOf(oldParent));\n};\n\n/**\n * Like {@link moveChildrenNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveChildren = asyncMutatorFor(moveChildrenNow);\n\n/**\n * Moves an element to a new position.\n *\n * @param [options.to]         The new parent or sibling (depending on\n *                             `options.position`). If not given, the\n *                             element is removed from the DOM.\n * @param [options.position]   - append (default): append to `options.to`\n *                             - prepend: prepend to `options.to`\n *                             - before: insert before `options.to`\n *                             - after: insert after `options.to`\n * @param [options.ignoreMove] If true, the DOM watcher instances will\n *                             ignore the operation of moving the element\n *                             (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveElementNow = (\n  element: Element,\n  options?: {\n    to?: Element;\n    position?: \"append\" | \"prepend\" | \"before\" | \"after\";\n    ignoreMove?: boolean;\n  },\n) => {\n  let parentEl = options?.to || null;\n  const position = options?.position || \"append\";\n  if (position === \"before\" || position === \"after\") {\n    parentEl = MH.parentOf(options?.to);\n  }\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: parentEl,\n    });\n  }\n\n  if (options?.to) {\n    options.to[position](element);\n  } else {\n    MH.remove(element);\n  }\n};\n\n/**\n * Like {@link moveElementNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveElement = asyncMutatorFor(moveElementNow);\n\n/**\n * It will {@link hideElement} and then remove it from the DOM.\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering (optimized)\n */\nexport const hideAndRemoveElement = async (\n  element: Element,\n  delay = 0,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  await hideElement(element, delay);\n  moveElementNow(element, options);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getOrAssignID = (element: Element, prefix = \"\") => {\n  let domID = element.id;\n  if (!domID) {\n    domID = `${prefix}-${randId()}`;\n    element.id = domID;\n  }\n\n  return domID;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const isAllowedToWrap = (element: Element) =>\n  settings.contentWrappingAllowed === true &&\n  getData(element, MC.PREFIX_NO_WRAP) === null;\n\n/**\n * @ignore\n * @internal\n *\n * @param classNames Default is [MC.PREFIX_WRAPPER]. Pass `null` to disable check.\n */\nexport const getWrapper = (\n  element: Element,\n  options?: {\n    tagName?: keyof HTMLElementTagNameMap;\n    classNames?: string[] | null;\n  },\n) => {\n  const { tagName, classNames = [MC.PREFIX_WRAPPER] } = options ?? {};\n  const parent = MH.parentOf(element);\n  if (\n    MH.lengthOf(MH.childrenOf(parent)) === 1 &&\n    MH.isHTMLElement(parent) &&\n    (!tagName || MH.hasTagName(parent, tagName)) &&\n    (!classNames || hasAnyClass(parent, classNames))\n  ) {\n    // Already wrapped\n    return parent;\n  }\n\n  return null; // don't check the element itself, only its parent\n};\n\n/**\n * @ignore\n * @internal\n *\n * @param classNames Default is [MC.PREFIX_WRAPPER]. Pass `null` to disable check.\n */\nexport const getContentWrapper = (\n  element: Element,\n  options?: {\n    tagName?: keyof HTMLElementTagNameMap;\n    classNames?: string[] | null;\n  },\n) => {\n  const { tagName, classNames = [MC.PREFIX_WRAPPER] } = options ?? {};\n  const firstChild = MH.childrenOf(element)[0];\n  if (\n    MH.lengthOf(MH.childrenOf(element)) === 1 &&\n    MH.isHTMLElement(firstChild) &&\n    (!tagName || MH.hasTagName(firstChild, tagName)) &&\n    (!classNames || hasAnyClass(firstChild, classNames))\n  ) {\n    // Already wrapped\n    return firstChild;\n  }\n\n  return null;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrapNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options?: O,\n) => _tryWrapNow(element, options);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrap = asyncMutatorFor(tryWrapNow);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrapContentNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options?: O,\n) => _tryWrapNow(element, options, true);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrapContent = asyncMutatorFor(tryWrapContentNow);\n\n/**\n * @ignore\n * @internal\n */\nexport const unwrapContentNow = (wrapper: Element, classNames?: string[]) => {\n  const parent = wrapper.parentElement;\n  if (parent) {\n    moveChildrenNow(wrapper, parent, { ignoreMove: true });\n    moveElementNow(wrapper, { ignoreMove: true });\n    if (classNames) {\n      removeClassesNow(wrapper, ...classNames);\n    }\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const unwrapContent = asyncMutatorFor(unwrapContentNow);\n\n/**\n * @ignore\n * @internal\n */\nexport const cloneElement = <E extends Element>(element: E) => {\n  const clone = element.cloneNode(true) as E;\n  setBooleanData(clone, MH.prefixName(\"clone\"));\n  return clone;\n};\n\n/**\n * Creates a dummy hidden clone that's got animation and transitions disabled\n * and absolute position, wrapped in a wrapper (of size 0) and inserts it just\n * before the `insertBefore` element (or if not given, the original element),\n * so that the hidden clone overlaps the actual element's regular\n * (pre-transformed) position.\n *\n * It clears the ID of the clone.\n *\n * Returns the clone.\n *\n * @ignore\n * @internal\n */\nexport const insertGhostCloneNow = <E extends Element>(\n  element: E,\n  insertBefore: Element | null = null,\n) => {\n  const clone = cloneElement(element);\n  clone.id = \"\";\n\n  addClassesNow(\n    clone,\n    MC.PREFIX_GHOST,\n    MC.PREFIX_TRANSITION_DISABLE,\n    MC.PREFIX_ANIMATE_DISABLE,\n  );\n\n  const wrapper = _tryWrapNow(clone, { required: true });\n\n  moveElementNow(wrapper, {\n    to: insertBefore || element,\n    position: \"before\",\n    ignoreMove: true,\n  });\n\n  return { _wrapper: wrapper, _clone: clone };\n};\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const insertGhostClone = asyncMutatorFor(insertGhostCloneNow);\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const ignoreMove = (\n  target: Element,\n  options: { from?: Element | null; to?: Element | null },\n) =>\n  recordsToSkipOnce.set(target, {\n    from: options.from || null,\n    to: options.to || null,\n  });\n\n/**\n * @ignore\n * @internal\n */\nexport const getIgnoreMove = (\n  target: Element,\n): { from: Element | null; to: Element | null } | null =>\n  recordsToSkipOnce.get(target) || null;\n\n/**\n * @ignore\n * @internal\n */\nexport const clearIgnoreMove = (target: Element) => {\n  // We should not clear the entry the first time the operation is observed\n  // (when we return true here), because there may be multiple DOMWatcher\n  // instances that will observe it and need to query it. Instead do it shortly.\n  MH.setTimer(() => {\n    MH.deleteKey(recordsToSkipOnce, target);\n  }, 100);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const insertArrow = (\n  target: Element,\n  direction: \"up\" | \"down\" | \"left\" | \"right\",\n  position: \"prepend\" | \"append\" | \"before\" | \"after\" = \"append\",\n  tag = \"span\",\n) => {\n  const arrow = MH.createElement(tag);\n  addClassesNow(arrow, MH.prefixName(MC.S_ARROW));\n  setDataNow(arrow, MH.prefixName(\"direction\"), direction);\n  moveElement(arrow, { to: target, position, ignoreMove: true });\n  return arrow;\n};\n\n// ----------------------------------------\n\ntype ContentWrappingOptions = {\n  tagName?: keyof HTMLElementTagNameMap;\n  classNames?: string[]; // if the wrapper has any one of these, it will be re-used\n  ignoreMove?: boolean; // default is true here\n  required?: boolean; // if true, will ignore contentWrappingAllowed and data-lisn-no-wrap\n  requiredBy?: string; // for logging purposes\n};\n\nconst recordsToSkipOnce = MH.newMap<\n  /* target being moved */ Element,\n  { from: Element | null; to: Element | null }\n>();\n\nconst createWrapperFor = (\n  element: Element,\n  wrapper: HTMLElement | keyof HTMLElementTagNameMap | undefined,\n) => {\n  if (MH.isElement(wrapper)) {\n    return wrapper;\n  }\n\n  let tag = wrapper;\n  if (!tag) {\n    if (isInlineTag(MH.tagName(element))) {\n      tag = \"span\";\n    } else {\n      tag = \"div\";\n    }\n  }\n\n  return MH.createElement(tag);\n};\n\nconst _tryWrapNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options: O | undefined,\n  wrapContent = false, // if true, wrap its children, otherwise given element\n) => {\n  const {\n    tagName,\n    classNames = [MC.PREFIX_WRAPPER],\n    ignoreMove = true,\n    required = false,\n    requiredBy = \"\",\n  } = options ?? {};\n\n  const getWrapperFn = wrapContent ? getContentWrapper : getWrapper;\n  const wrapFn = wrapContent ? wrapChildrenNow : wrapElementNow;\n  const allowedToWrap = isAllowedToWrap(element);\n\n  let wrapper = getWrapperFn(element, options);\n  if (!wrapper && (required || allowedToWrap)) {\n    wrapper = wrapFn(element, { wrapper: tagName, ignoreMove });\n    if (classNames) {\n      addClassesNow(wrapper, ...classNames);\n    }\n    if (isInlineTag(MH.tagName(wrapper))) {\n      addClassesNow(wrapper, MC.PREFIX_INLINE_WRAPPER);\n    }\n\n    if (!allowedToWrap && requiredBy) {\n      logWarn(\n        `content wrapping is disabled for element but wrapping is required by ${requiredBy}`,\n      );\n    }\n  }\n\n  return wrapper as O extends { required: true }\n    ? HTMLElement\n    : HTMLElement | null;\n};\n"],"mappings":"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","ignoreList":[]}