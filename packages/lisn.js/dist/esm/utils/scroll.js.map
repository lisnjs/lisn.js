{"version":3,"file":"scroll.js","names":["MC","MH","settings","newAnimationFrameIterator","getComputedStylePropNow","SCROLL_DIRECTIONS","waitForInteractive","waitForElementOrInteractive","waitForMeasureTime","addEventListenerTo","removeEventListenerFrom","logError","logWarn","maxAbs","criticallyDamped","randId","formatAsString","isValidStrList","newXMap","debug","isScrollable","element","options","axis","active","noCache","_isScrollableCache$ge","cachedResult","isScrollableCache","get","isNullish","offset","result","elScrollTo","toLowerCase","canScroll","dimension","isDocScrollable","getDocScrollingElement","hasOverflow","overflowProp","scrollingOverflows","S_SCROLL","S_AUTO","S_VISIBLE","includes","sGet","set","setTimer","deleteKey","prune","IS_SCROLLABLE_CACHE_TIMEOUT","getClosestScrollable","ancestor","parentOf","getCurrentScrollAction","scrollable","toScrollableOrDefault","info","currentScrollInfos","copyObject","_action","scrollTo","to","userOptions","getOptions","_scrollable","cancel","isCancelled","cancelFn","_weCanInterrupt","scrollEvents","preventScrollHandler","_userCanInterrupt","eventType","once","preventDefault","passive","thisInfo","waitFor","scrollActionPromise","cleanup","_currentScrollInfos$g","initiateScroll","then","catch","updateCurrentScrollInfo","isValidScrollDirection","direction","isValidScrollDirectionList","directions","mapScrollable","original","actualScrollable","mappedScrollables","unmapScrollable","getClientWidthNow","isScrollableBodyInQuirks","offsetWidth","getBorderWidth","S_LEFT","S_RIGHT","S_CLIENT_WIDTH","getClientHeightNow","offsetHeight","S_TOP","S_BOTTOM","S_CLIENT_HEIGHT","tryGetMainContentElement","mainContentElement","fetchMainContentElement","init","tryGetMainScrollableElement","mainScrollableElement","fetchMainScrollableElement","getDefaultScrollingElement","_MH$getDocScrollingEl","body","getBody","tryGetScrollableElement","target","toScrollableOrMain","fetchScrollableElement","newMap","DIFF_THRESHOLD","arePositionsDifferent","start","end","threshold","top","left","side","ceil","parseFloat","getMain","isElement","_mappedScrollables$ge","getWindow","getDoc","usageError","_options$offset","_options$altOffset","_options$duration","_options$weCanInterru","_options$userCanInter","getTargetCoordinates","altTarget","_target","_offset","_altTarget","_altOffset","altOffset","_duration","duration","weCanInterrupt","userCanInterrupt","newInfo","_newInfo$_action","existingScrollInfo","merge","isDocScrollingElement","contains","getBoundingClientRect","S_SCROLL_TOP","S_SCROLL_LEFT","isString","targetEl","docQuerySelector","isObject","getStartEndPosition","applyOffset","position","_offset$top","_offset$left","getEndPosition","_start","_end","startPosition","targetCoordinates","endPosition","isFunction","scrollH","S_SCROLL_HEIGHT","scrollW","S_SCROLL_WIDTH","clientH","clientW","min","max","_existingScrollInfo$_","_existingScrollInfo$_2","currentPosition","_position","currentVelocity","_velocity","elapsed","_elapsed","logger","Logger","name","logAtCreation","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_asyncIterator","_step","next","done","value","deltaTime","sinceLast","debug8","s","l","v","lTarget","dt","lag","isDone","assign","err","return","initPromise","mainScrollableElementSelector","contentElement","isHTMLElement","hasDOM"],"sources":["../../../src/ts/utils/scroll.ts"],"sourcesContent":["/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  ScrollDirection,\n  ScrollTarget,\n  TargetCoordinates,\n  CoordinateOffset,\n  ScrollPosition,\n  Offset,\n} from \"@lisn/globals/types\";\n\nimport {\n  newAnimationFrameIterator,\n  ElapsedTimes,\n} from \"@lisn/utils/animations\";\nimport { getComputedStylePropNow } from \"@lisn/utils/css-alter\";\nimport { SCROLL_DIRECTIONS } from \"@lisn/utils/directions\";\nimport {\n  waitForInteractive,\n  waitForElementOrInteractive,\n} from \"@lisn/utils/dom-events\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { maxAbs, criticallyDamped } from \"@lisn/utils/math\";\nimport { randId, formatAsString } from \"@lisn/utils/text\";\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * @category Scrolling\n */\nexport type ScrollAction = {\n  cancel: () => boolean;\n\n  /**\n   * Will reject if the scroll is cancelled.\n   */\n  waitFor: () => Promise<ScrollPosition>;\n};\n\n/**\n * @category Scrolling\n * @interface\n */\nexport type ScrollToOptions = {\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue If `document.body` is scrollable, will use that; otherwise `document.scrollingElement`\n   */\n  scrollable?: Element;\n\n  /**\n   * Offset the target coordinates by the given amount(s).\n   *\n   * E.g. if the final target coordinates are computed to be\n   * `{top: 100, left: 0}` and you specify offset as `{top: 10, left: 20}`, it\n   * will scroll to  `{top: 110, left: 20}`.\n   *\n   * @defaultValue undefined\n   */\n  offset?: CoordinateOffset;\n\n  // TODO maybe support fixed average velocity as an alternative to fixed duration?\n  /**\n   * The duration of the scroll animation in milliseconds. If not given, it is\n   * instant.\n   *\n   * @defaultValue 0\n   */\n  duration?: number;\n\n  /**\n   * Whether another request to us to scroll the same target can interrupt this\n   * scroll before it finishes.\n   *\n   * @defaultValue false\n   */\n  weCanInterrupt?: boolean;\n\n  /**\n   * Whether a user attempt to scroll the target can interrupt this before it\n   * finishes.\n   *\n   * @defaultValue false\n   */\n  userCanInterrupt?: boolean;\n\n  /**\n   * If the scrolling element is already at the given coordinates (or strictly\n   * speaking we allow for 5 pixels difference), then if `altTarget` is given,\n   * this will become the target to scroll to.\n   *\n   * @defaultValue undefined\n   */\n  altTarget?: TargetCoordinates | Element | string;\n\n  /**\n   * Offset the target coordinates by the given amount(s) when `altTarget` is used.\n   *\n   * See {@link ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined\n   */\n  altOffset?: CoordinateOffset;\n};\n\n// ----------\n\n/**\n * Returns true if the given element is scrollable in the given direction, or\n * in either direction (if `axis` is not given).\n *\n * It first checks whether the current scroll offset on the target along the\n * given axis is non-0, and if so returns true immediately. Otherwise it will\n * attempt to determine if it's scrollable using one of these methods\n * (controlled by `options.active`):\n * - passive check (default): Will examine `clientWidth/Height`,\n *   `scrollWidth/Height` as well as the computed `overflow` CSS property to try\n *   to determine if the target is scrollable. This is not 100% reliable but is\n *   safer than the active check\n * - active check: Will attempt to scroll the target by 1px and examine if the\n *   scroll offset had changed, then revert it back to 0. This is a more\n *   reliable check, however it can cause issues in certain contexts. In\n *   particular, if a scroll on the target had just been initiated (but it's\n *   scroll offset was still 0), the scroll may be cancelled. Never use that\n *   inside scroll-based handlers.\n *\n * **NOTE:** If the layout has been invalidated and not yet recalculated, this\n * will cause a forced layout, so always {@link waitForMeasureTime} before\n * calling this function when possible.\n *\n * @param [options.axis]    One of \"x\" or \"y\" for horizontal or vertical scroll\n *                          respectively. If not given, it checks both.\n * @param [options.active]  If true, then if the target's current scroll offset\n *                          is 0, it will attempt to scroll it rather than\n *                          looking at its overflow.\n * @param [options.noCache] By default the result of a check is cached for 1s\n *                          and if there's already a cached result for this\n *                          element, it is returned. Set this to true to disable\n *                          checking the cache and also saving the result into\n *                          the cache.\n *\n * @category Scrolling\n */\nexport const isScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n): boolean => {\n  const { axis, active, noCache } = options ?? {};\n  if (!axis) {\n    return (\n      isScrollable(element, { axis: \"y\", active, noCache }) ||\n      isScrollable(element, { axis: \"x\", active, noCache })\n    );\n  }\n\n  if (!noCache) {\n    const cachedResult = isScrollableCache.get(element)?.get(axis);\n    if (!MH.isNullish(cachedResult)) {\n      return cachedResult;\n    }\n  }\n\n  const offset = axis === \"x\" ? \"Left\" : \"Top\";\n  let result = false;\n\n  if (element[`scroll${offset}`]) {\n    result = true;\n  } else if (active) {\n    // Use scrollTo with explicit behavior set to instant instead of setting\n    // the scrollTop/Left properties since the latter doesn't work with\n    // scroll-behavior smooth.\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 1 });\n    const canScroll = element[`scroll${offset}`] > 0;\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 0 });\n    result = canScroll;\n  } else {\n    const dimension = axis === \"x\" ? \"Width\" : \"Height\";\n    const isDocScrollable = element === MH.getDocScrollingElement();\n\n    const hasOverflow =\n      element[`scroll${dimension}`] > element[`client${dimension}`];\n    const overflowProp = getComputedStylePropNow(element, \"overflow\");\n    const scrollingOverflows = [\n      MC.S_SCROLL,\n      MC.S_AUTO,\n      ...(isDocScrollable ? [MC.S_VISIBLE] : []),\n    ];\n\n    result = hasOverflow && MH.includes(scrollingOverflows, overflowProp);\n  }\n\n  if (!noCache) {\n    isScrollableCache.sGet(element).set(axis, result);\n    MH.setTimer(() => {\n      MH.deleteKey(isScrollableCache.get(element), axis);\n      isScrollableCache.prune(element);\n    }, IS_SCROLLABLE_CACHE_TIMEOUT);\n  }\n\n  return result;\n};\n\n/**\n * Returns the closest scrollable ancestor of the given element, _not including\n * it_.\n *\n * @param options See {@link isScrollable}\n *\n * @returns `null` if no scrollable ancestors are found.\n *\n * @category Scrolling\n */\nexport const getClosestScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n) => {\n  // Walk up the tree, starting at the element in question but excluding it.\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = MH.parentOf(ancestor))) {\n    if (isScrollable(ancestor, options)) {\n      return ancestor;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Returns the current {@link ScrollAction} if any.\n *\n * @category Scrolling\n */\nexport const getCurrentScrollAction = (\n  scrollable?: Element,\n): ScrollAction | null => {\n  scrollable = toScrollableOrDefault(scrollable);\n  const info = currentScrollInfos.get(scrollable);\n  if (info) {\n    return MH.copyObject(info._action);\n  }\n  return null;\n};\n\n/**\n * Scrolls the given scrollable element to the given `to` target.\n *\n * Returns `null` if there's an ongoing scroll that is not cancellable.\n *\n * Note that if `to` is an element or a selector, then it _must_ be a\n * descendant of the scrollable element.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *               If the target coordinates are invalid.\n *\n * @param to If this is an element, then its top-left position is used as\n *           the target coordinates. If it is a string, then it is treated\n *           as a selector for an element using `querySelector`.\n *\n * @returns `null` if there's an ongoing scroll that is not cancellable,\n * otherwise a {@link ScrollAction}.\n *\n * @category Scrolling\n */\nexport const scrollTo = (\n  to: TargetCoordinates | Element | string,\n  userOptions?: ScrollToOptions,\n): ScrollAction | null => {\n  const options = getOptions(to, userOptions);\n  const scrollable = options._scrollable;\n\n  // cancel current scroll action if any\n  const info = currentScrollInfos.get(scrollable);\n  if (info) {\n    if (!info._action.cancel()) {\n      // current scroll action is not cancellable by us\n      return null;\n    }\n  }\n\n  let isCancelled = false;\n\n  const cancelFn = options._weCanInterrupt\n    ? () => (isCancelled = true)\n    : () => false;\n\n  const scrollEvents = [\"touchmove\", \"wheel\"]; // don't bother with keyboard\n  let preventScrollHandler: EventListener | null = null;\n\n  if (options._userCanInterrupt) {\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(\n        scrollable,\n        eventType,\n        () => {\n          isCancelled = true;\n        },\n        { once: true },\n      );\n    }\n  } else {\n    preventScrollHandler = MH.preventDefault;\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(scrollable, eventType, preventScrollHandler, {\n        passive: false,\n      });\n    }\n  }\n\n  const thisInfo: ScrollInfo = {\n    _action: {\n      waitFor: () => scrollActionPromise,\n      cancel: cancelFn,\n    },\n  };\n\n  const cleanup = () => {\n    if (currentScrollInfos.get(scrollable)?._action === thisInfo._action) {\n      MH.deleteKey(currentScrollInfos, scrollable);\n    }\n\n    if (preventScrollHandler) {\n      for (const eventType of scrollEvents) {\n        removeEventListenerFrom(scrollable, eventType, preventScrollHandler, {\n          passive: false,\n        });\n      }\n    }\n  };\n\n  const scrollActionPromise = initiateScroll(options, () => isCancelled);\n  thisInfo._action.waitFor().then(cleanup).catch(cleanup);\n\n  updateCurrentScrollInfo(scrollable, thisInfo);\n  return thisInfo._action;\n};\n\n/**\n * Returns true if the given string is a valid scroll direction.\n *\n * @category Validation\n */\nexport const isValidScrollDirection = (\n  direction: string,\n): direction is ScrollDirection => MH.includes(SCROLL_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid scroll\n * directions.\n *\n * @category Validation\n */\nexport const isValidScrollDirectionList = (directions: string | string[]) =>\n  isValidStrList(directions, isValidScrollDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const mapScrollable = (original: Element, actualScrollable: Element) =>\n  mappedScrollables.set(original, actualScrollable);\n\n/**\n * @ignore\n * @internal\n */\nexport const unmapScrollable = (original: Element) =>\n  MH.deleteKey(mappedScrollables, original);\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientWidthNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetWidth -\n      getBorderWidth(element, MC.S_LEFT) -\n      getBorderWidth(element, MC.S_RIGHT)\n    : element[MC.S_CLIENT_WIDTH];\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientHeightNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetHeight -\n      getBorderWidth(element, MC.S_TOP) -\n      getBorderWidth(element, MC.S_BOTTOM)\n    : element[MC.S_CLIENT_HEIGHT];\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainContentElement = (): HTMLElement | null =>\n  mainContentElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainContentElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainContentElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainScrollableElement = (): HTMLElement | null =>\n  mainScrollableElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainScrollableElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainScrollableElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultScrollingElement = () => {\n  const body = MH.getBody();\n  return isScrollable(body) ? body : (MH.getDocScrollingElement() ?? body);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetScrollableElement = (\n  target: ScrollTarget | null | undefined,\n): Element | null => toScrollableOrMain(target, tryGetMainScrollableElement);\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchScrollableElement = async (\n  target: ScrollTarget | null | undefined,\n): Promise<Element> => toScrollableOrMain(target, fetchMainScrollableElement);\n\n// ----------------------------------------\n\ntype ScrollToOptionsInternal = {\n  _target: TargetCoordinates;\n  _offset: CoordinateOffset | null;\n  _altTarget: TargetCoordinates | null;\n  _altOffset: CoordinateOffset | null;\n  _scrollable: Element;\n  _duration: number;\n  _weCanInterrupt: boolean;\n  _userCanInterrupt: boolean;\n};\n\ntype Velocity = { top: number; left: number };\n\ntype ScrollInfo = {\n  _action: ScrollAction;\n  _position?: ScrollPosition;\n  _velocity?: Velocity;\n  _elapsed?: ElapsedTimes;\n};\n\nconst IS_SCROLLABLE_CACHE_TIMEOUT = 1000;\n\nconst isScrollableCache = newXMap<Element, Map<\"x\" | \"y\", boolean>>(() =>\n  MH.newMap(),\n);\n\nconst mappedScrollables = MH.newMap<Element, Element>();\n\nconst currentScrollInfos = MH.newMap<Element, ScrollInfo>();\n\nconst DIFF_THRESHOLD = 5;\nconst arePositionsDifferent = (\n  start: ScrollPosition,\n  end: ScrollPosition,\n  threshold = DIFF_THRESHOLD,\n) => maxAbs(start.top - end.top, start.left - end.left) > threshold;\n\n// must be called in \"measure time\"\nconst getBorderWidth = (element: Element, side: Offset) =>\n  MH.ceil(MH.parseFloat(getComputedStylePropNow(element, `border-${side}`)));\n\nconst isScrollableBodyInQuirks = (element: Element): element is HTMLElement =>\n  element === MH.getBody() && MH.getDocScrollingElement() === null;\n\nconst toScrollableOrMain = <R>(\n  target: ScrollTarget | null | undefined,\n  getMain: () => R,\n): Element | R => {\n  if (MH.isElement(target)) {\n    return mappedScrollables.get(target) ?? target;\n  }\n\n  if (!target || target === MH.getWindow() || target === MH.getDoc()) {\n    return getMain();\n  }\n\n  throw MH.usageError(\"Unsupported scroll target\");\n};\n\nconst toScrollableOrDefault = (scrollable: Element | undefined): Element =>\n  scrollable ?? getDefaultScrollingElement();\n\nconst getOptions = (\n  to: TargetCoordinates | Element | string,\n  options: ScrollToOptions | undefined,\n): ScrollToOptionsInternal => {\n  const scrollable = toScrollableOrDefault(options?.scrollable);\n  const target = getTargetCoordinates(scrollable, to);\n  const altTarget = options?.altTarget\n    ? getTargetCoordinates(scrollable, options?.altTarget)\n    : null;\n\n  return {\n    _target: target,\n    _offset: options?.offset ?? null,\n    _altTarget: altTarget,\n    _altOffset: options?.altOffset ?? null,\n    _scrollable: scrollable,\n    _duration: options?.duration ?? 0,\n    _weCanInterrupt: options?.weCanInterrupt ?? false,\n    _userCanInterrupt: options?.userCanInterrupt ?? false,\n  };\n};\n\nconst updateCurrentScrollInfo = (\n  scrollable: Element,\n  newInfo: Partial<ScrollInfo>,\n) => {\n  const existingScrollInfo = currentScrollInfos.get(scrollable);\n  const _action = newInfo._action ?? existingScrollInfo?._action;\n  if (_action) {\n    currentScrollInfos.set(\n      scrollable,\n      MH.merge(existingScrollInfo, newInfo, { _action }),\n    );\n  }\n};\n\nconst getTargetCoordinates = (\n  scrollable: Element,\n  target: TargetCoordinates | Element | string,\n): TargetCoordinates => {\n  const isDocScrollingElement = scrollable === MH.getDocScrollingElement();\n\n  if (MH.isElement(target)) {\n    if (scrollable === target || !scrollable.contains(target)) {\n      throw MH.usageError(\"Target must be a descendant of the scrollable one\");\n    }\n\n    return {\n      top: () =>\n        MH.getBoundingClientRect(target).top -\n        MH.getBoundingClientRect(scrollable).top +\n        (isDocScrollingElement ? 0 : scrollable[MC.S_SCROLL_TOP]),\n      left: () =>\n        MH.getBoundingClientRect(target).left -\n        MH.getBoundingClientRect(scrollable).left +\n        (isDocScrollingElement ? 0 : scrollable[MC.S_SCROLL_LEFT]),\n    };\n  }\n\n  if (MH.isString(target)) {\n    const targetEl = MH.docQuerySelector(target);\n    if (!targetEl) {\n      throw MH.usageError(`No match for '${target}'`);\n    }\n\n    return getTargetCoordinates(scrollable, targetEl);\n  }\n\n  if (!MH.isObject(target) || !(\"top\" in target || \"left\" in target)) {\n    throw MH.usageError(\"Invalid coordinates\");\n  }\n\n  return target;\n};\n\nconst getStartEndPosition = async (\n  options: ScrollToOptionsInternal,\n): Promise<{ _start: ScrollPosition; _end: ScrollPosition }> => {\n  await waitForMeasureTime();\n\n  const applyOffset = (\n    position: ScrollPosition,\n    offset: CoordinateOffset | null,\n  ) => {\n    position.top += offset?.top ?? 0;\n    position.left += offset?.left ?? 0;\n  };\n\n  const scrollable = options._scrollable;\n  const start = {\n    top: scrollable[MC.S_SCROLL_TOP],\n    left: scrollable[MC.S_SCROLL_LEFT],\n  };\n\n  let end = getEndPosition(scrollable, start, options._target);\n  applyOffset(end, options._offset);\n\n  if (!arePositionsDifferent(start, end) && options._altTarget) {\n    end = getEndPosition(scrollable, start, options._altTarget);\n    applyOffset(end, options._altOffset);\n  }\n\n  return { _start: start, _end: end };\n};\n\n// must be called in \"measure time\"\nconst getEndPosition = (\n  scrollable: Element,\n  startPosition: ScrollPosition,\n  targetCoordinates: TargetCoordinates,\n): ScrollPosition => {\n  // by default no change in scroll top or left\n  const endPosition = MH.copyObject(startPosition);\n\n  if (!MH.isNullish(targetCoordinates?.top)) {\n    if (MH.isFunction(targetCoordinates.top)) {\n      endPosition.top = targetCoordinates.top(scrollable);\n    } else {\n      endPosition.top = targetCoordinates.top;\n    }\n  }\n\n  if (!MH.isNullish(targetCoordinates?.left)) {\n    if (MH.isFunction(targetCoordinates.left)) {\n      endPosition.left = targetCoordinates.left(scrollable);\n    } else {\n      endPosition.left = targetCoordinates.left;\n    }\n  }\n\n  // Set boundaries\n  const scrollH = scrollable[MC.S_SCROLL_HEIGHT];\n  const scrollW = scrollable[MC.S_SCROLL_WIDTH];\n  const clientH = getClientHeightNow(scrollable);\n  const clientW = getClientWidthNow(scrollable);\n  endPosition.top = MH.min(scrollH - clientH, endPosition.top);\n  endPosition.top = MH.max(0, endPosition.top);\n\n  endPosition.left = MH.min(scrollW - clientW, endPosition.left);\n  endPosition.left = MH.max(0, endPosition.left);\n\n  return endPosition;\n};\n\nconst initiateScroll = async (\n  options: ScrollToOptionsInternal,\n  isCancelled: () => boolean,\n) => {\n  const position = await getStartEndPosition(options);\n  const duration = options._duration;\n  const scrollable = options._scrollable;\n  const existingScrollInfo = currentScrollInfos.get(scrollable);\n\n  const currentPosition = existingScrollInfo?._position ?? position._start;\n  const currentVelocity = existingScrollInfo?._velocity ?? {\n    [MC.S_TOP]: 0,\n    [MC.S_LEFT]: 0,\n  };\n  let elapsed = existingScrollInfo?._elapsed;\n\n  const logger = debug\n    ? new debug.Logger({\n        name: `scroll-${formatAsString(scrollable)}-${randId()}`,\n        logAtCreation: {\n          options,\n          position,\n          elapsed,\n          currentPosition: MH.copyObject(currentPosition),\n          currentVelocity: MH.copyObject(currentVelocity),\n        },\n      })\n    : null;\n\n  for await (elapsed of newAnimationFrameIterator(elapsed)) {\n    const deltaTime = elapsed.sinceLast;\n    if (deltaTime === 0) {\n      // First time\n      continue;\n    }\n\n    // Element.scrollTo equates to a measurement and needs to run after\n    // painting to avoid forced layout.\n    await waitForMeasureTime();\n\n    if (isCancelled()) {\n      // Reject the promise\n      logger?.debug8(\"Cancelled\");\n      throw currentPosition;\n    }\n\n    for (const s of [MC.S_LEFT, MC.S_TOP] as const) {\n      const { l, v } = criticallyDamped({\n        l: currentPosition[s],\n        v: currentVelocity[s],\n        lTarget: position._end[s],\n        dt: deltaTime,\n        lag: duration,\n      });\n\n      currentPosition[s] = l;\n      currentVelocity[s] = v;\n    }\n\n    updateCurrentScrollInfo(scrollable, {\n      _position: currentPosition,\n      _velocity: currentVelocity,\n      _elapsed: elapsed,\n    });\n\n    const isDone = !arePositionsDifferent(currentPosition, position._end, 0.5);\n    if (isDone) {\n      MH.assign(currentPosition, position._end); // use exact final coordinates\n    }\n\n    MH.elScrollTo(scrollable, currentPosition);\n\n    if (isDone) {\n      logger?.debug8(\"Done\");\n      break;\n    }\n  }\n\n  return currentPosition;\n};\n\n// ------------------------------\n\nlet mainContentElement: HTMLElement;\nlet mainScrollableElement: HTMLElement;\n\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      const mainScrollableElementSelector =\n        settings.mainScrollableElementSelector;\n\n      const contentElement = await waitForElementOrInteractive(() => {\n        return mainScrollableElementSelector\n          ? MH.docQuerySelector(mainScrollableElementSelector)\n          : MH.getBody(); // default if no selector\n      });\n\n      // defaults\n      mainScrollableElement = getDefaultScrollingElement();\n      mainContentElement = MH.getBody();\n\n      if (!contentElement) {\n        logError(\n          MH.usageError(\n            `No match for '${mainScrollableElementSelector}'. ` +\n              \"Scroll tracking/capturing may not work as intended.\",\n          ),\n        );\n      } else if (!MH.isHTMLElement(contentElement)) {\n        logWarn(\"mainScrollableElementSelector should point to an HTMLElement\");\n      } else if (contentElement !== mainContentElement) {\n        mainScrollableElement = mainContentElement = contentElement;\n      }\n    })();\n  }\n\n  return initPromise;\n};\n\n// Try to find the main scrollable/content elements asap so that tryGetMain*\n// can return them if called before fetchMain*\nif (MH.hasDOM()) {\n  waitForInteractive().then(init);\n}\n"],"mappings":"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","ignoreList":[]}