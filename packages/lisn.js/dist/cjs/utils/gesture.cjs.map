{"version":3,"file":"gesture.cjs","names":["MC","_interopRequireWildcard","require","MH","_validation","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","isValidInputDevice","device","includes","DEVICES","exports","isValidIntent","intent","INTENTS","isValidInputDeviceList","devices","isValidStrList","isValidIntentList","intents","addDeltaZ","current","increment","max","MIN_DELTA_Z","S_KEY","S_POINTER","S_TOUCH","S_WHEEL","S_SCROLL","S_ZOOM","S_DRAG","S_UNKNOWN"],"sources":["../../../src/ts/utils/gesture.ts"],"sourcesContent":["/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureDevice, GestureIntent } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * `deltaX` and `deltaY` together specify the precise direction in the XY plane\n * of the move if relevant (i.e. other than zoom intent). The direction\n * specifies the effective X (\"left\"/\"right\"), Y (\"up\"/\"down\") or Z (\"in\"/\"out\")\n * direction, or \"none\"/\"ambiguous\".\n *\n * `deltaZ` specifies relative zoom in or out for zoom intents.\n * For zoom in, deltaZ is always > 1, and for zoom out it is < 1.\n * For non-zoom events it is 1.\n *\n * For zoom intents, `direction` would be either in, out or none.\n * For other intents, it would be up, down, left, right, none or ambiguous.\n *\n * For important notes on the delta values see\n * - {@link Utils.getKeyGestureFragment | getKeyGestureFragment}\n * - {@link Utils.getTouchGestureFragment | getTouchGestureFragment}\n * - {@link Utils.getWheelGestureFragment | getWheelGestureFragment}\n *\n * @category Gestures\n */\nexport type GestureFragment = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n  deltaX: number;\n  deltaY: number;\n  deltaZ: number;\n};\n\n/**\n * Returns true if the given string is a valid gesture device.\n *\n * @category Validation\n */\nexport const isValidInputDevice = (device: string): device is GestureDevice =>\n  MH.includes(DEVICES, device);\n\n/**\n * Returns true if the given string is a valid gesture intent.\n *\n * @category Validation\n */\nexport const isValidIntent = (intent: string): intent is GestureIntent =>\n  MH.includes(INTENTS, intent);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * devices.\n *\n * @category Validation\n */\nexport const isValidInputDeviceList = (devices: string | string[]) =>\n  isValidStrList(devices, isValidInputDevice, false);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * intents.\n *\n * @category Validation\n */\nexport const isValidIntentList = (intents: string | string[]) =>\n  isValidStrList(intents, isValidIntent, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const addDeltaZ = (current: number, increment: number) =>\n  MH.max(MIN_DELTA_Z, current * increment);\n\n/**\n * @ignore\n * @internal\n */\nexport const DEVICES: GestureDevice[] = [\n  MC.S_KEY,\n  MC.S_POINTER,\n  MC.S_TOUCH,\n  MC.S_WHEEL,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const INTENTS: GestureIntent[] = [\n  MC.S_SCROLL,\n  MC.S_ZOOM,\n  MC.S_DRAG,\n  MC.S_UNKNOWN,\n] as const;\n\n// Do not allow zooming out more than this value\nconst MIN_DELTA_Z = 0.1;\n"],"mappings":"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","ignoreList":[]}