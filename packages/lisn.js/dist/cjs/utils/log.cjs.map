{"version":3,"file":"log.cjs","names":["MC","_interopRequireWildcard","require","MH","_text","_callback","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","logInfo","args","isMessageSeen","consoleInfo","LOG_PREFIX","exports","logWarn","consoleWarn","logError","lengthOf","Callback","REMOVE","consoleError","discardMessages","newSet","msg","joinAsString","isSeen","add"],"sources":["../../../src/ts/utils/log.ts"],"sourcesContent":["/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LogFunction } from \"@lisn/globals/types\";\n\nimport { joinAsString } from \"@lisn/utils/text\";\n\nimport { Callback } from \"@lisn/modules/callback\";\n\n/**\n * Like `console.info` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logInfo: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleInfo(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.warn` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logWarn: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleWarn(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.error` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logError: LogFunction = (...args) => {\n  if (\n    (MH.lengthOf(args) > 1 || args[0] !== Callback.REMOVE) &&\n    !isMessageSeen(args)\n  ) {\n    MH.consoleError(MC.LOG_PREFIX, ...args);\n  }\n};\n\nconst discardMessages = MH.newSet<string>();\nconst isMessageSeen = (args: unknown[]) => {\n  const msg = joinAsString(\" \", ...args);\n  const isSeen = discardMessages.has(msg);\n  discardMessages.add(msg);\n  return isSeen;\n};\n"],"mappings":"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","ignoreList":[]}