{"version":3,"file":"track-scroll.cjs","names":["MH","_interopRequireWildcard","require","_validation","_scrollWatcher","_widget","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","TrackScroll","Widget","element","instance","DUMMY_ID","isInstanceOf","register","registerWidget","WIDGET_NAME","config","configValidator","constructor","id","ScrollWatcher","reuse","trackScroll","assign","scrollable","onDestroy","noTrackScroll","exports","threshold","validateNumber","debounceWindow"],"sources":["../../../src/ts/widgets/track-scroll.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { validateNumber } from \"@lisn/utils/validation\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * This is a simple wrapper around the {@link ScrollWatcher}. If you are using\n * the JavaScript API, you should use the {@link ScrollWatcher} directly. The\n * purpose of this widget is to expose the watcher's ability to track scroll\n * and set relevant CSS properties via the HTML API. See\n * {@link ScrollWatcher.trackScroll}.\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-track-scroll` class or `data-lisn-track-scroll` attribute set on\n *   the element that constitutes the widget.\n *\n * @example\n * This will track scroll on this element and set the relevant CSS properties.\n *\n * ```html\n * <div class=\"lisn-track-scroll\"></div>\n * ```\n */\nexport class TrackScroll extends Widget {\n  static get(element: Element): TrackScroll | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, TrackScroll)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!TrackScroll.get(element)) {\n          return new TrackScroll(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  constructor(element: Element, config?: TrackScrollConfig) {\n    super(element, { id: DUMMY_ID });\n\n    ScrollWatcher.reuse().trackScroll(\n      null,\n      MH.assign(\n        {\n          scrollable: element,\n        },\n        config,\n      ),\n    );\n\n    this.onDestroy(() => ScrollWatcher.reuse().noTrackScroll(null, element));\n  }\n}\n\n/**\n * @interface\n */\nexport type TrackScrollConfig = {\n  /**\n   * Corresponds to\n   * {@link Watchers/ScrollWatcher.OnScrollOptions.threshold | OnScrollOptions.threshold}.\n   *\n   * @defaultValue undefined // ScrollWatcher default\n   */\n  threshold?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ScrollWatcher.OnScrollOptions.debounceWindow | OnScrollOptions.debounceWindow}.\n   *\n   * @defaultValue undefined // ScrollWatcher default\n   */\n  debounceWindow?: number;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"track-scroll\";\n// Only one TrackScroll widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = WIDGET_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<TrackScrollConfig> = {\n  threshold: validateNumber,\n  debounceWindow: validateNumber,\n};\n"],"mappings":"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","ignoreList":[]}