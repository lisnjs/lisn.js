{"version":3,"file":"size-watcher.js","names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","toString","from","test","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_defineProperty","_toPrimitive","toPrimitive","String","Number","MC","MH","setNumericStyleProps","logError","toNonNegNum","isValidBox","isValidDimension","getEntryBorderBox","getEntryContentBox","tryGetViewportOverlay","fetchViewportOverlay","objToStrKey","wrapCallback","newXWeakMap","XResizeObserver","debug","SizeWatcher","config","CONSTRUCTOR_KEY","illegalConstructorError","logger","Logger","logAtCreation","allSizeData","newWeakMap","allCallbacks","newMap","resizeHandler","entries","_iterator","_step","entry","processEntry","err","xObserver","fetchCurrentSize","_ref","_callee","target","element","sizeData","_callee$","_context","fetchElement","get","copyObject","newPromise","observer","newResizeObserver","getSizeData","disconnect","observe","border","S_WIDTH","S_HEIGHT","content","_x","fetchOptions","_ref2","_callee2","options","_options$box","_options$dimension","_options$MC$S_DEBOUNC","box","dimension","_callee2$","_context2","usageError","concat","targetOf","t0","t1","t2","t3","threshold","_resizeThreshold","t4","S_DEBOUNCE_WINDOW","_debounceWindow","_element","_box","_dimension","_threshold","_x2","createCallback","handler","_allCallbacks$get","remove","_callback","debug5","callback","onRemove","deleteHandler","_options","sGet","set","setupOnResize","_ref3","_callee3","userOptions","_callee3$","_context3","isRemoved","_data","observeLater","skipInitial","invokeCallback","_x3","_x4","removeOnResize","_ref4","_callee4","_allCallbacks$get2","currEntry","_callee4$","_context4","setSizeCssProps","_x5","_x6","deleteKey","prune","has","debug4","unobserve","_allCallbacks$get3","latestData","debug9","_iterator2","_step2","thresholdsExceeded","hasExceededThreshold","trackSize","_ref5","_callee5","_callee5$","_context5","_x7","_x8","noTrackSize","onResize","offResize","undefined","getConfig","reuse","myConfig","configStrKey","instance","instances","SYMBOL","resizeThreshold","lastThresholdData","dim","diff","abs","borderBox","contentBox","prefix","getDocElement","props","borderWidth","borderHeight","contentWidth","contentHeight","_prefix","_ref6","_callee6","_callee6$","_context6","isElement","getWindow","getDoc","_x9"],"sources":["../../../src/ts/watchers/size-watcher.ts"],"sourcesContent":["/**\n * @module Watchers/SizeWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size, SizeTarget } from \"@lisn/globals/types\";\n\nimport { setNumericStyleProps } from \"@lisn/utils/css-alter\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum } from \"@lisn/utils/math\";\nimport {\n  isValidBox,\n  isValidDimension,\n  getEntryBorderBox,\n  getEntryContentBox,\n  tryGetViewportOverlay,\n  fetchViewportOverlay,\n} from \"@lisn/utils/size\";\nimport { objToStrKey } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XResizeObserver } from \"@lisn/modules/x-resize-observer\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link SizeWatcher} monitors the size of a given target. It's built on top\n * of {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}.\n *\n * It manages registered callbacks globally and reuses ResizeObservers.\n *\n * Each instance of SizeWatcher manages up to two ResizeObservers: one\n * for content-box size changes and one for border-box size changes.\n */\nexport class SizeWatcher {\n  /**\n   * Call the given handler whenever the target's size changes.\n   *\n   * Unless {@link OnResizeOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest size data.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly onResize: (\n    handler: OnResizeHandler,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offResize: (handler: OnResizeHandler, target?: SizeTarget) => void;\n\n  /**\n   * This is the same as {@link onResize} except that if `handler` is not given,\n   * then it defaults to an  handler that updates a set of CSS variables on the\n   * target's style:\n   *\n   * - If {@link OnResizeOptions.target | options.target} is not given, or is\n   *   `window`, the following CSS variables are set on the root (`html`)\n   *   element and represent the viewport size:\n   *   - `--lisn-js--window-border-width`\n   *   - `--lisn-js--window-border-height`\n   *   - `--lisn-js--window-content-width`\n   *   - `--lisn-js--window-content-height`\n   *\n   * - Otherwise, the following variables are set on the target itself and\n   *   represent its visible size:\n   *   - `--lisn-js--border-width`\n   *   - `--lisn-js--border-height`\n   *   - `--lisn-js--content-width`\n   *   - `--lisn-js--content-height`\n   *\n   * If `target` is `document`, then it will use `document.documentElement`.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly trackSize: (\n    handler?: OnResizeHandler | null,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackSize}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackSize: (\n    handler?: OnResizeHandler | null,\n    target?: SizeTarget,\n  ) => void;\n\n  /**\n   * Get the size of the given target. It will get the size from a\n   * ResizeObserverEntry and so it's always delayed by one frame at least.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly fetchCurrentSize: (target?: SizeTarget) => Promise<SizeData>;\n\n  /**\n   * Creates a new instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: SizeWatcherConfig = {}) {\n    return new SizeWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: SizeWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new SizeWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: SizeWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"SizeWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"SizeWatcher\", logAtCreation: config })\n      : null;\n\n    const allSizeData = MH.newWeakMap<Element, SizeData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnResizeHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    // Don't debounce the observer, only callbacks.\n    const xObserver = new XResizeObserver(resizeHandler);\n\n    // ----------\n\n    const fetchCurrentSize = async (\n      target: SizeTarget | undefined,\n    ): Promise<SizeData> => {\n      const element = await fetchElement(target);\n      const sizeData = allSizeData.get(element);\n      if (sizeData) {\n        return MH.copyObject(sizeData);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp ResizeObserver\n        const observer = MH.newResizeObserver((entries) => {\n          const sizeData = getSizeData(entries[0]);\n          observer?.disconnect();\n          resolve(sizeData); // no need to copy or save it\n        });\n\n        if (observer) {\n          observer.observe(element);\n        } else {\n          // Warning would have already been logged by XResizeObserver\n          resolve({\n            border: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n            content: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n          });\n        }\n      });\n    };\n\n    // ----------\n\n    const fetchOptions = async (\n      options: OnResizeOptions,\n    ): Promise<OnResizeOptionsInternal> => {\n      const box = options.box ?? null;\n      if (box && !isValidBox(box)) {\n        throw MH.usageError(`Unknown box type: '${box}'`);\n      }\n\n      const dimension = options.dimension ?? null;\n      if (dimension && !isValidDimension(dimension)) {\n        throw MH.usageError(`Unknown dimension: '${dimension}'`);\n      }\n\n      return {\n        _element: await fetchElement(MH.targetOf(options)),\n        _box: box,\n        _dimension: dimension,\n        // If threshold is 0, internally treat as 1 (pixel)\n        _threshold:\n          toNonNegNum(options.threshold, config._resizeThreshold) || 1,\n        _debounceWindow:\n          options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n      };\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = { _callback: callback, _options: options };\n      allCallbacks.sGet(element).set(handler, entry);\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnResize = async (\n      handler: OnResizeHandler,\n      userOptions: OnResizeOptions | undefined,\n    ) => {\n      const options = await fetchOptions(userOptions || {});\n      const element = options._element;\n\n      // Don't await for the size data before creating the callback so that\n      // setupOnResize and removeOnResize have the same \"timing\" and therefore\n      // calling onResize and offResize immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options);\n      const callback = entry._callback;\n      const sizeData = await fetchCurrentSize(element);\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = sizeData;\n      allSizeData.set(element, sizeData);\n\n      // Always use observeLater. This is because the initial call to callback\n      // shouldn't be debounced, and so we call it manually here, regardless if\n      // it's a new target or not. Therefore we don't want the observer to also\n      // call it in case it _is_ a new target.\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, sizeData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, sizeData);\n      }\n    };\n\n    // ----------\n\n    const removeOnResize = async (\n      handler: OnResizeHandler,\n      target: SizeTarget | undefined,\n    ) => {\n      const options = await fetchOptions({ target });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setSizeCssProps) {\n          // delete the properties\n          setSizeCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ) => {\n      const element = options._element;\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n        xObserver.unobserve(element);\n        MH.deleteKey(allSizeData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = (entry: ResizeObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      const latestData = getSizeData(entry);\n      allSizeData.set(element, latestData);\n\n      debug: logger?.debug9(\"New size data\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        const thresholdsExceeded = hasExceededThreshold(\n          entry._options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\"Threshold not exceeded\");\n          continue;\n        }\n\n        entry._data = latestData;\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentSize = fetchCurrentSize;\n\n    // ----------\n\n    this.trackSize = async (handler?, options?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      return setupOnResize(handler, options);\n    };\n\n    // ----------\n\n    this.noTrackSize = (handler?, target?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      removeOnResize(handler, target); // no need to await\n    };\n\n    // ----------\n\n    this.onResize = setupOnResize;\n\n    // ----------\n\n    this.offResize = (handler, target?) => {\n      removeOnResize(handler, target); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type SizeWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnResizeOptions.debounceWindow | debounceWindow} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnResizeOptions.threshold | threshold} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 50\n   */\n  resizeThreshold?: number;\n};\n\n/**\n * @interface\n */\nexport type OnResizeOptions = {\n  /**\n   * If it is not given, or is `null` or `window`, then it will track the size\n   * of the viewport (akin to `clientHeight` on `documentElement`).\n   *\n   * If it is `document`, then it will use `document.documentElement`.\n   *\n   * Other values of target must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  target?: SizeTarget;\n\n  /**\n   * Specifies whether to listen for changes in content box size or border box\n   * size.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  box?: Box;\n\n  /**\n   * Specifies whether to listen for changes in width or height.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  dimension?: Dimension;\n\n  /**\n   * If non-0, the handler will only be called when the target's size in the\n   * observed {@link OnResizeOptions.dimension} and {@link OnResizeOptions.box}\n   * type has changed at least `threshold` pixels since the last time the\n   * handler was called.\n   *\n   * Special case when `threshold` is 0 and at least one of\n   * {@link OnResizeOptions.dimension} or {@link OnResizeOptions.box} is given:\n   * if there's a resize event but the size in the observed dimensions/box\n   * types has not changed, the callback is _not_ called.\n   *\n   * @defaultValue {@link SizeWatcherConfig.resizeThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * @defaultValue {@link SizeWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * The handler is invoked with three arguments:\n *\n * - the element that has been resized: if the target you requested was the\n *   viewport, then this will be a fixed positioned overlay that tracks the\n *   size of the viewport\n * - the {@link SizeData} for the element\n */\nexport type OnResizeHandlerArgs = [Element, SizeData];\nexport type OnResizeCallback = Callback<OnResizeHandlerArgs>;\nexport type OnResizeHandler =\n  | CallbackHandler<OnResizeHandlerArgs>\n  | OnResizeCallback;\n\nexport type SizeData = Record<Box, Size>;\n\n// ----------------------------------------\n\ntype SizeWatcherConfigInternal = {\n  _debounceWindow: number;\n  _resizeThreshold: number;\n};\n\ntype OnResizeOptionsInternal = {\n  _element: Element;\n  _box: Box | null;\n  _dimension: Dimension | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnResizeCallback;\n  _options: OnResizeOptionsInternal;\n  _data?: SizeData;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, SizeWatcher>();\n\nconst getConfig = (config: SizeWatcherConfig): SizeWatcherConfigInternal => {\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _resizeThreshold: toNonNegNum(config.resizeThreshold, 50) || 1,\n  };\n};\n\n// --------------------\n\nconst hasExceededThreshold = (\n  options: OnResizeOptionsInternal,\n  latestData: SizeData,\n  lastThresholdData: SizeData | undefined,\n): boolean => {\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  let box: Box, dim: Dimension;\n  for (box in latestData) {\n    if (options._box && options._box !== box) {\n      continue;\n    }\n\n    for (dim in latestData[box]) {\n      if (options._dimension && options._dimension !== dim) {\n        continue;\n      }\n\n      const diff = MH.abs(latestData[box][dim] - lastThresholdData[box][dim]);\n      if (diff >= options._threshold) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nconst getSizeData = (entry: ResizeObserverEntry): SizeData => {\n  const borderBox = getEntryBorderBox(entry, true);\n  const contentBox = getEntryContentBox(entry);\n\n  return {\n    border: borderBox,\n    content: contentBox,\n  };\n};\n\nconst setSizeCssProps = (\n  element: Element,\n  sizeData: SizeData | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetViewportOverlay()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"window-\";\n  }\n\n  const props = {\n    borderWidth: sizeData?.border[MC.S_WIDTH],\n    borderHeight: sizeData?.border[MC.S_HEIGHT],\n    contentWidth: sizeData?.content[MC.S_WIDTH],\n    contentHeight: sizeData?.content[MC.S_HEIGHT],\n  };\n  setNumericStyleProps(element, props, { _prefix: prefix }); // don't await here\n};\n\nconst fetchElement = async (\n  target: SizeTarget | undefined,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  }\n\n  if (!target || target === MH.getWindow()) {\n    return fetchViewportOverlay();\n  }\n\n  if (target === MH.getDoc()) {\n    return MH.getDocElement();\n  }\n\n  throw MH.usageError(\"Unsupported resize target\");\n};\n\nconst invokeCallback = (\n  callback: OnResizeCallback,\n  element: Element,\n  sizeData: SizeData,\n) => callback.invoke(element, MH.copyObject(sizeData)).catch(logError);\n"],"mappings":"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","ignoreList":[]}