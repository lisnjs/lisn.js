{"version":3,"file":"track-gesture.js","names":["MH","validateBoolean","validateNumber","GestureWatcher","Widget","registerWidget","TrackGesture","_Widget","element","config","_this","_classCallCheck","_callSuper","id","DUMMY_ID","reuse","trackGesture","preventDefault","minTotalDeltaX","minDeltaX","maxTotalDeltaX","maxDeltaX","minTotalDeltaY","minDeltaY","maxTotalDeltaY","maxDeltaY","minTotalDeltaZ","minDeltaZ","maxTotalDeltaZ","maxDeltaZ","onDestroy","noTrackGesture","_inherits","_createClass","key","value","get","instance","_superPropGet","isInstanceOf","register","WIDGET_NAME","configValidator"],"sources":["../../../src/ts/widgets/track-gesture.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { validateBoolean, validateNumber } from \"@lisn/utils/validation\";\n\nimport { GestureWatcher } from \"@lisn/watchers/gesture-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * This is a simple wrapper around the {@link GestureWatcher}. If you are using\n * the JavaScript API, you should use the {@link GestureWatcher} directly. The\n * purpose of this widget is to expose the watcher's ability to track gestures\n * and set relevant CSS properties via the HTML API. See\n * {@link GestureWatcher.trackGesture}.\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-track-gesture` class or `data-lisn-track-gesture` attribute set on\n *   the element that constitutes the widget.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This will track user gestures over this element and set the relevant CSS\n * properties. It will use the default {@link GestureWatcher} options.\n *\n * ```html\n * <div class=\"lisn-track-gesture\"></div>\n * ```\n *\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <div data-lisn-track-gesture=\"prevent-default=false\n *                               | min-delta-x=-100\n *                               | max-delta-x=100\n *                               | min-delta-y=-100\n *                               | max-delta-y=100\n *                               | min-delta-z=0.5\n *                               | max-delta-z=2\"\n * ></div>\n * ```\n */\nexport class TrackGesture extends Widget {\n  static get(element: Element): TrackGesture | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, TrackGesture)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!TrackGesture.get(element)) {\n          return new TrackGesture(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  constructor(element: Element, config?: TrackGestureConfig) {\n    super(element, { id: DUMMY_ID });\n\n    GestureWatcher.reuse().trackGesture(element, null, {\n      preventDefault: config?.preventDefault,\n      minTotalDeltaX: config?.minDeltaX,\n      maxTotalDeltaX: config?.maxDeltaX,\n      minTotalDeltaY: config?.minDeltaY,\n      maxTotalDeltaY: config?.maxDeltaY,\n      minTotalDeltaZ: config?.minDeltaZ,\n      maxTotalDeltaZ: config?.maxDeltaZ,\n    });\n\n    this.onDestroy(() => GestureWatcher.reuse().noTrackGesture(element));\n  }\n}\n\n/**\n * @interface\n */\nexport type TrackGestureConfig = {\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.preventDefault | OnGestureOptions.preventDefault}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  preventDefault?: boolean;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.minTotalDeltaX | OnGestureOptions.minTotalDeltaX}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  minDeltaX?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.maxTotalDeltaX | OnGestureOptions.maxTotalDeltaX}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  maxDeltaX?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.minTotalDeltaY | OnGestureOptions.minTotalDeltaY}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  minDeltaY?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.maxTotalDeltaY | OnGestureOptions.maxTotalDeltaY}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  maxDeltaY?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.minTotalDeltaZ | OnGestureOptions.minTotalDeltaZ}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  minDeltaZ?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.maxTotalDeltaZ | OnGestureOptions.maxTotalDeltaZ}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  maxDeltaZ?: number;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"track-gesture\";\n// Only one TrackGesture widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = WIDGET_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<TrackGestureConfig> = {\n  preventDefault: validateBoolean,\n  minDeltaX: validateNumber,\n  maxDeltaX: validateNumber,\n  minDeltaY: validateNumber,\n  maxDeltaY: validateNumber,\n  minDeltaZ: validateNumber,\n  maxDeltaZ: validateNumber,\n};\n"],"mappings":"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","ignoreList":[]}