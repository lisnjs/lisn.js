{"version":3,"file":"pager.cjs","names":["MC","_interopRequireWildcard","require","MH","_cssAlter","_domOptimize","_domQuery","_event","_gesture","_math","_misc","_scroll","_validation","_callback","_gestureWatcher3","_scrollWatcher","_viewWatcher3","_widget","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","o","Symbol","iterator","constructor","prototype","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","l","f","next","done","push","value","length","Array","isArray","_regeneratorRuntime","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","name","mark","setPrototypeOf","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_createForOfIteratorHelper","_n","F","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","from","test","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","Boolean","valueOf","_inherits","_setPrototypeOf","bind","_superPropGet","_get","_superPropBase","_defineProperty","_toPrimitive","toPrimitive","String","Number","Pager","exports","_Widget","element","config","_Pager$get","_this","destroyPromise","destroy","id","DUMMY_ID","pages","toggles","switches","nextPrevSwitch","nextSwitch","_prev","prevSwitch","pageSelector","getDefaultWidgetSelector","PREFIX_PAGE__FOR_SELECT","toggleSelector","PREFIX_TOGGLE__FOR_SELECT","switchSelector","PREFIX_SWITCH__FOR_SELECT","nextSwitchSelector","PREFIX_NEXT_SWITCH__FOR_SELECT","prevSwitchSelector","PREFIX_PREV_SWITCH__FOR_SELECT","lengthOf","querySelectorAll","getVisibleContentChildren","filter","matches","querySelector","numPages","usageError","_iterator","_step","page","contains","err","components","_pages","_toggles","_switches","_nextPrevSwitch","methods","getMethods","promiseResolve","isDestroyed","init","nextPage","_nextPage","prevPage","_prevPage","goToPage","pageNum","_goToPage","disablePage","_disablePage","enablePage","_enablePage","togglePage","_togglePage","isPageDisabled","_isPageDisabled","getCurrentPage","_getCurrentPage","getPreviousPage","_getPreviousPage","getCurrentPageNum","_getCurrentPageNum","getPreviousPageNum","_getPreviousPageNum","onTransition","_onTransition","getPages","getSwitches","getToggles","instance","isInstanceOf","register","registerWidget","WIDGET_NAME","configValidator","Widget","MIN_TIME_BETWEEN_WHEEL","S_CURRENT","S_ARIA_CURRENT","ARIA_PREFIX","S_COVERED","S_NEXT","S_TOTAL_PAGES","S_CURRENT_PAGE","S_PAGE_NUMBER","PREFIXED_NAME","prefixName","PREFIX_ROOT","concat","PREFIX_PAGE_CONTAINER","PREFIX_PAGE","PREFIX_IS_FULLSCREEN","PREFIX_USE_PARALLAX","PREFIX_TOTAL_PAGES","PREFIX_CURRENT_PAGE","PREFIX_CURRENT_PAGE_IS_LAST","PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED","PREFIX_CURRENT_PAGE_IS_LAST_ENABLED","PREFIX_PAGE_STATE","PREFIX_PAGE_NUMBER","VAR_TOTAL_PAGES","prefixCssJsVar","VAR_CURRENT_PAGE","VAR_PAGE_NUMBER","initialPage","validateNumber","fullscreen","validateBoolean","parallax","horizontal","useGestures","isNullish","undefined","bool","toBool","validateStrList","validateString","isValidInputDevice","alignGestureDirection","preventDefault","fetchClosestScrollable","waitForMeasureTime","_getClosestScrollable","getClosestScrollable","active","setPageNumber","lastPromise","_iterator2","_step2","el","setData","setStyleProp","setCurrentPage","pagerEl","currPageNum","isFirstEnabled","isLastEnabled","setBoolData","setPageState","_ref","_callee","state","_iterator3","_step3","_callee$","_context","t0","_x","_x2","_x3","widget","_pages$","_config$initialPage","_config$fullscreen","_config$parallax","_config$horizontal","_config$useGestures","_config$alignGestureD","_config$preventDefaul","pageContainer","parentElement","toInt","isFullscreen","isParallax","isHorizontal","orientation","S_HORIZONTAL","S_VERTICAL","scrollWatcher","ScrollWatcher","reuse","gestureWatcher","viewWatcher","ViewWatcher","rootMargin","threshold","GestureWatcher","getGestureOptions","directions","devices","isBoolean","intents","S_DRAG","S_SCROLL","deltaThreshold","scrollToPager","_ref2","_callee2","_callee2$","_context2","t1","t2","t3","scrollable","scrollTo","transitionOnGesture","target","data","swapDirection","intent","includes","S_LEFT","S_UP","direction","addWatcher","_gestureWatcher","_viewWatcher","onGesture","S_RIGHT","S_DOWN","onView","views","getPageNumForEvent","event","currentTargetOf","isElement","getData","toggleClickListener","switchClickListener","nextSwitchClickListener","prevSwitchClickListener","removeWatcher","_gestureWatcher2","_viewWatcher2","offGesture","offView","onDisable","onEnable","onDestroy","_callee3","idx","_iterator4","_step4","_step4$value","listener","_callee3$","_context3","waitForMutateTime","delDataNow","PREFIX_ORIENTATION","delStylePropNow","removeClassesNow","removeEventListenerFrom","S_CLICK","delAttr","addClasses","_iterator5","_step5","disableInitialTransition","_iterator6","_step6","_step6$value","addEventListenerTo","disabledPages","callbacks","newSet","fetchScrollOptions","_ref4","_callee4","_callee4$","_context4","asFractionOf","weCanInterrupt","lastPageNum","lastTransition","canTransition","gestureData","isDisabled","device","S_WHEEL","timeNow","_ref5","_callee5","_iterator7","_step7","callback","_callee5$","_context5","scroll","setAttr","_x4","_x5","_ref6","_callee6","targetPage","_callee6$","_context6","_x6","_ref7","_callee7","_callee7$","_context7","_x7","_ref8","_callee8","_callee8$","_context8","S_DISABLED","_x8","_ref9","_callee9","_callee9$","_context9","_x9","handler","add","wrapCallback"],"sources":["../../../src/ts/widgets/pager.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  addClasses,\n  removeClassesNow,\n  getData,\n  setData,\n  setBoolData,\n  delDataNow,\n  setStyleProp,\n  delStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { isValidInputDevice } from \"@lisn/utils/gesture\";\nimport { toInt } from \"@lisn/utils/math\";\nimport { toBool } from \"@lisn/utils/misc\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport {\n  validateStrList,\n  validateNumber,\n  validateString,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport {\n  GestureWatcher,\n  OnGestureOptions,\n  GestureData,\n} from \"@lisn/watchers/gesture-watcher\";\nimport { ScrollWatcher, ScrollOptions } from \"@lisn/watchers/scroll-watcher\";\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  WidgetCallback,\n  WidgetHandler,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as a {@link Pager} widget.\n *\n * The Pager widget sets up the elements that make up its pages to be overlayed\n * on top of each other with only one of them visible at a time. When a user\n * performs a scroll-like gesture (see {@link GestureWatcher}), the pages are\n * flicked through: gestures, whose direction is down (or left) result in the\n * next page being shown, otherwise the previous.\n *\n * The widget should have more than one page.\n *\n * Optionally, the widget can have a set of \"switch\" elements and a set of\n * \"toggle\" elements which correspond one-to-one to each page. Switches go to\n * the given page and toggles toggle the enabled/disabled state of the page.\n *\n * **IMPORTANT:** The page elements will be positioned absolutely, and\n * therefore the pager likely needs to have an explicit height. If you enable\n * {@link PagerConfig.fullscreen}, then the element will get `height: 100vh`\n * set. Otherwise, you need to set its height in your CSS.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Pager}\n * widget on a given element. Use {@link Pager.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the pager element:\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n * - `data-lisn-use-parallax`: `\"true\"` or `\"false\"`\n * - `data-lisn-total-pages`: the number of pages\n * - `data-lisn-current-page`: the current page number\n * - `data-lisn-current-page-is-last`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-first-enabled`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-last-enabled`: `\"true\"` or `\"false\"`\n *\n * The following dynamic CSS properties are also set on the pager element's style:\n * - `--lisn-js--total-pages`: the number of pages\n * - `--lisn-js--current-page`: the current page number\n *\n * The following dynamic attributes are set on each page, toggle or switch element:\n * - `data-lisn-page-state`: `\"current\"`, `\"next\"`, `\"covered\"` or `\"disabled\"`\n * - `data-lisn-page-number`: the corresponding page's number\n *\n * The following analogous dynamic CSS properties are also set on each page,\n * toggle or switch element's style:\n * - `--lisn-js--page-number`: the corresponding page's number\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-pager` class or `data-lisn-pager` attribute set on the container\n *   element that constitutes the pager\n * - `lisn-pager-page` class or `data-lisn-pager-page` attribute set on\n *   elements that should act as the pages.\n * - `lisn-pager-toggle` class or `data-lisn-pager-toggle` attribute set on\n *   elements that should act as the toggles.\n * - `lisn-pager-switch` class or `data-lisn-pager-switch` attribute set on\n *   elements that should act as the switches.\n *\n * When using auto-widgets, the elements that will be used as pages are\n * discovered in the following way:\n * 1. The top-level element that constitutes the widget is searched for any\n *    elements that contain the `lisn-pager-page` class or\n *    `data-lisn-pager-page` attribute. They do not have to be immediate\n *    children of the root element, but they **should** all be siblings.\n * 2. If there are no such elements, all of the immediate children of the\n *    widget element except any `script` or `style` elements are taken as the\n *    pages.\n *\n * The toggles and switches are descendants of the top-level element that\n * constitutes the widget, that contain the\n * `lisn-pager-toggle`/`lisn-pager-switch` class or `data-lisn-pager-toggle`/\n * `data-lisn-pager-switch` attribute. They do not have to be immediate\n * children of the root element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple pager with default settings.\n *\n * ```html\n * <div class=\"lisn-pager\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * As above but with all settings explicitly set to their default (`false`).\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen=false | parallax=false | horizontal=false\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>Horizontal: Page 1</div>\n *   <div>Horizontal: Page 2</div>\n *   <div>Horizontal: Page 3</div>\n *   <div>Horizontal: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings, as well as toggle and switch buttons.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>\n *     <div data-lisn-pager-page>Horizontal: Page 1</div>\n *     <div data-lisn-pager-page>Horizontal: Page 2</div>\n *     <div data-lisn-pager-page>Horizontal: Page 3</div>\n *     <div data-lisn-pager-page>Horizontal: Page 4</div>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-toggle>Toggle page 1</button>\n *     <button data-lisn-pager-toggle>Toggle page 2</button>\n *     <button data-lisn-pager-toggle>Toggle page 3</button>\n *     <button data-lisn-pager-toggle>Toggle page 4</button>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-switch>Go to page 1</button>\n *     <button data-lisn-pager-switch>Go to page 2</button>\n *     <button data-lisn-pager-switch>Go to page 3</button>\n *     <button data-lisn-pager-switch>Go to page 4</button>\n *   </div>\n * </div>\n * ```\n */\nexport class Pager extends Widget {\n  /**\n   * Advances the widget's page by 1. If the current page is the last one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled down/right\n   * (depending on the gesture direction).\n   */\n  readonly nextPage: () => Promise<void>;\n\n  /**\n   * Reverses the widget's page by 1. If the current page is the first one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled up/left\n   * (depending on the gesture direction).\n   */\n  readonly prevPage: () => Promise<void>;\n\n  /**\n   * Advances the widget to the given page. Note that page numbers start at 1.\n   *\n   * If this page is disabled, nothing is done.\n   */\n  readonly goToPage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Disables the given page number. Note that page numbers start at 1.\n   *\n   * The page will be skipped during transitioning to previous/next.\n   *\n   * If the page is the current one, then the current page will be switched to\n   * the previous one (that's not disabled), or if this is the first enabled\n   * page, then it will switch to the next one that's not disabled.\n   *\n   * If this is the last enabled page, nothing is done.\n   */\n  readonly disablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page number. Note that page numbers start at 1.\n   */\n  readonly enablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page if it is disabled, otherwise disables it. Note\n   * that page numbers start at 1.\n   */\n  readonly togglePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Returns true if the given page number is disabled. Note that page\n   * numbers start at 1.\n   */\n  readonly isPageDisabled: (pageNum: number) => boolean;\n\n  /**\n   * Returns the current page.\n   */\n  readonly getCurrentPage: () => Element;\n\n  /**\n   * Returns the previous page, before the last transition.\n   *\n   * If there has been no change of page, returns the first page, same as\n   * {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPage: () => Element;\n\n  /**\n   * Returns the number of the current page. Note that numbers start at 1.\n   */\n  readonly getCurrentPageNum: () => number;\n\n  /**\n   * Returns the number of the previous page, before the last transition. Note\n   * that numbers start at 1.\n   *\n   * If there has been no change of page, returns the number of the first page,\n   * same as {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPageNum: () => number;\n\n  /**\n   * The given handler will be called whenever there is a change of page. It\n   * will be called after the current page number is updated internally (so\n   * {@link getPreviousPageNum} and {@link getCurrentPageNum} will return the\n   * updated numbers), but before the page transition styles are updated.\n   *\n   * If the handler returns a promise, it will be awaited upon.\n   */\n  readonly onTransition: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns the page elements.\n   */\n  readonly getPages: () => Element[];\n\n  /**\n   * Returns the toggle elements if any.\n   */\n  readonly getToggles: () => Element[];\n\n  /**\n   * Returns the switch elements if any.\n   */\n  readonly getSwitches: () => Element[];\n\n  static get(element: Element): Pager | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Pager)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!Pager.get(element)) {\n          return new Pager(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If there are less than 2 pages given or found, or if any\n   *                page is not a descendant of the main pager element.\n   */\n  constructor(element: Element, config?: PagerConfig) {\n    const destroyPromise = Pager.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const pages = config?.pages || [];\n    const toggles = config?.toggles || [];\n    const switches = config?.switches || [];\n    const nextPrevSwitch = {\n      _next: config?.nextSwitch || null,\n      _prev: config?.prevSwitch || null,\n    };\n\n    const pageSelector = getDefaultWidgetSelector(PREFIX_PAGE__FOR_SELECT);\n    const toggleSelector = getDefaultWidgetSelector(PREFIX_TOGGLE__FOR_SELECT);\n    const switchSelector = getDefaultWidgetSelector(PREFIX_SWITCH__FOR_SELECT);\n    const nextSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_NEXT_SWITCH__FOR_SELECT,\n    );\n    const prevSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_PREV_SWITCH__FOR_SELECT,\n    );\n\n    if (!MH.lengthOf(pages)) {\n      pages.push(...MH.querySelectorAll(element, pageSelector));\n\n      if (!MH.lengthOf(pages)) {\n        pages.push(\n          ...getVisibleContentChildren(element).filter(\n            (e) => !e.matches(switchSelector),\n          ),\n        );\n      }\n    }\n\n    if (!MH.lengthOf(toggles)) {\n      toggles.push(...MH.querySelectorAll(element, toggleSelector));\n    }\n\n    if (!MH.lengthOf(switches)) {\n      switches.push(...MH.querySelectorAll(element, switchSelector));\n    }\n\n    if (!nextPrevSwitch._next) {\n      nextPrevSwitch._next = MH.querySelector(element, nextSwitchSelector);\n    }\n\n    if (!nextPrevSwitch._prev) {\n      nextPrevSwitch._prev = MH.querySelector(element, prevSwitchSelector);\n    }\n\n    const numPages = MH.lengthOf(pages);\n    if (numPages < 2) {\n      throw MH.usageError(\"Pager must have more than 1 page\");\n    }\n\n    for (const page of pages) {\n      if (!element.contains(page) || page === element) {\n        throw MH.usageError(\"Pager's pages must be its descendants\");\n      }\n    }\n\n    const components = {\n      _pages: pages,\n      _toggles: toggles,\n      _switches: switches,\n      _nextPrevSwitch: nextPrevSwitch,\n    };\n\n    const methods = getMethods(this, components, element, config);\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, element, components, config, methods);\n    });\n\n    this.nextPage = () => methods._nextPage();\n    this.prevPage = () => methods._prevPage();\n    this.goToPage = (pageNum) => methods._goToPage(pageNum);\n    this.disablePage = methods._disablePage;\n    this.enablePage = methods._enablePage;\n    this.togglePage = methods._togglePage;\n    this.isPageDisabled = methods._isPageDisabled;\n    this.getCurrentPage = methods._getCurrentPage;\n    this.getPreviousPage = methods._getPreviousPage;\n    this.getCurrentPageNum = methods._getCurrentPageNum;\n    this.getPreviousPageNum = methods._getPreviousPageNum;\n    this.onTransition = methods._onTransition;\n\n    this.getPages = () => [...pages];\n    this.getSwitches = () => [...switches];\n    this.getToggles = () => [...toggles];\n  }\n}\n\n/**\n * @interface\n */\nexport type PagerConfig = {\n  /**\n   * The elements that will make up the pages.\n   *\n   * They do not have to be immediate children of the root element, but they\n   * should all be siblings.\n   *\n   * The widget should have more than one page.\n   *\n   * If this is not specified, then\n   * 1. The top-level element that constitutes the widget is searched for any\n   *    elements that contain the `lisn-pager-page` class or the\n   *    `data-lisn-pager-page` attribute, and these are used as pages.\n   * 2. If there are no such elements, all of the immediate children of the\n   *    widget element (other than `script` and `style` elements) are taken as\n   *    the pages.\n   *\n   * **IMPORTANT:** The page elements will be positioned absolutely relative to\n   * their immediate parent, but their parent likely needs to have an explicit\n   * height. If you enable {@link PagerConfig.fullscreen}, then the page parent\n   * will get `height: 100vh` set. Otherwise, you need to set its height in\n   * your CSS.\n   *\n   * @defaultValue undefined\n   */\n  pages?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that toggles the\n   * enabled/disabled state of the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-toggle`\n   * class or the `data-lisn-pager-toggle` attribute, and these are used as\n   * toggles.\n   *\n   * @defaultValue undefined\n   */\n  toggles?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that switches the\n   * pager to the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-switch`\n   * class or the `data-lisn-pager-switch` attribute, and these are used as\n   * switches.\n   *\n   * @defaultValue undefined\n   */\n  switches?: Element[];\n\n  /**\n   * This element will be assigned a click listener that goes to the next page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-next-switch` class or the `data-lisn-pager-next-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  nextSwitch?: Element;\n\n  /**\n   * This element will be assigned a click listener that goes to the previous\n   * page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-prev-switch` class or the `data-lisn-pager-prev-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  prevSwitch?: Element;\n\n  /**\n   * Set the initial page number.\n   *\n   * @defaultValue 1\n   */\n  initialPage?: number;\n\n  /**\n   * If true, then:\n   * - the pager's height will be set to the viewport height (100vh)\n   * - the pager's scrolling ancestor will be scrolled to the top of the pager\n   *   when 30% of it is in view\n   * - scrolling beyond the first or last page will initiate scroll up/left or\n   *   down/right the pager's scrolling ancestor in order to allow \"leaving\"\n   *   the pager\n   *\n   * Note that since the pager's pages will be positioned absolutely, if you do\n   * _not_ enable this option, you will need to manually set the height of the\n   * page parent element via CSS.\n   *\n   * @defaultValue false\n   */\n  fullscreen?: boolean;\n\n  /**\n   * Use a parallax effect for switching pages.\n   *\n   * @defaultValue false\n   */\n  parallax?: boolean;\n\n  /**\n   * Transition pages sideways instead of vertically.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Transition pages upon user scroll-like and drag-like gestures via the\n   * given {@link GestureDevice}s. If set to true, then gestures using all\n   * device types are supported.\n   *\n   * Note that drag gesture is only supported by the \"pointer\" device and also\n   * the \"pointer\" device only supports drag gestures, so if you want to\n   * disable drag gestures, simply pass \"wheel,key,touch\" as this option.\n   *\n   * @defaultValue true\n   */\n  useGestures?: boolean | CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If true, then pages will be advanced backwards/forwards regardless if the\n   * gesture direction is horizontal or vertical.\n   *\n   * If false then, a gesture will go to the next page only if its direction is\n   * down (or right if {@link horizontal}), and to the previous page only if\n   * the gesture direction is up (or left if {@link horizontal}).\n   *\n   * **IMPORTANT:**\n   * If {@link fullscreen}, {@link preventDefault} and\n   * {@link alignGestureDirection} are all true, then the pager's scrollable\n   * parent must be scrollable in the same direction as the pager orientation,\n   * otherwise automatic scroll beyond the last/first page won't work.\n   *\n   * @defaultValue false\n   */\n  alignGestureDirection?: boolean;\n\n  /**\n   * Whether to prevent the default action for events that would result in\n   * gestures.\n   *\n   * **NOTE:**\n   * If true (default), then all events that originate from a device given in\n   * {@link useGestures} and that could result in a gesture will be prevented\n   * regardless of their direction and whether {@link alignGestureDirection} is\n   * true.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n};\n\n// --------------------\n\ntype Components = {\n  _pages: Element[];\n  _toggles: Element[];\n  _switches: Element[];\n  _nextPrevSwitch: { _next: Element | null; _prev: Element | null };\n};\n\n// Swiping on some trackpads results in \"trailing\" wheel events sent for some\n// while which results in multiple pages being advanced in a short while. So we\n// limit how often pages can be advanced.\nconst MIN_TIME_BETWEEN_WHEEL = 1000;\n\nconst S_CURRENT = \"current\";\nconst S_ARIA_CURRENT = MC.ARIA_PREFIX + S_CURRENT;\nconst S_COVERED = \"covered\";\nconst S_NEXT = \"next\";\nconst S_TOTAL_PAGES = \"total-pages\";\nconst S_CURRENT_PAGE = \"current-page\";\nconst S_PAGE_NUMBER = \"page-number\";\nconst WIDGET_NAME = \"pager\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_PAGE_CONTAINER = `${PREFIXED_NAME}__page-container`;\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_PAGE = `${PREFIXED_NAME}__page`;\nconst PREFIX_PAGE__FOR_SELECT = `${PREFIXED_NAME}-page`;\nconst PREFIX_TOGGLE__FOR_SELECT = `${PREFIXED_NAME}-toggle`;\nconst PREFIX_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-switch`;\nconst PREFIX_NEXT_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-next-switch`;\nconst PREFIX_PREV_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-prev-switch`;\n\nconst PREFIX_IS_FULLSCREEN = MH.prefixName(\"is-fullscreen\");\nconst PREFIX_USE_PARALLAX = MH.prefixName(\"use-parallax\");\nconst PREFIX_TOTAL_PAGES = MH.prefixName(S_TOTAL_PAGES);\nconst PREFIX_CURRENT_PAGE = MH.prefixName(S_CURRENT_PAGE);\nconst PREFIX_CURRENT_PAGE_IS_LAST = `${PREFIX_CURRENT_PAGE}-is-last`;\nconst PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED = `${PREFIX_CURRENT_PAGE}-is-first-enabled`;\nconst PREFIX_CURRENT_PAGE_IS_LAST_ENABLED = `${PREFIX_CURRENT_PAGE_IS_LAST}-enabled`;\nconst PREFIX_PAGE_STATE = MH.prefixName(\"page-state\");\nconst PREFIX_PAGE_NUMBER = MH.prefixName(S_PAGE_NUMBER);\nconst VAR_TOTAL_PAGES = MH.prefixCssJsVar(S_TOTAL_PAGES);\nconst VAR_CURRENT_PAGE = MH.prefixCssJsVar(S_CURRENT_PAGE);\nconst VAR_PAGE_NUMBER = MH.prefixCssJsVar(S_PAGE_NUMBER);\n\n// Only one Pager widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<PagerConfig> = {\n  initialPage: validateNumber,\n  fullscreen: validateBoolean,\n  parallax: validateBoolean,\n  horizontal: validateBoolean,\n  useGestures: (key, value) => {\n    if (MH.isNullish(value)) {\n      return undefined;\n    }\n\n    const bool = toBool(value);\n    if (bool !== null) {\n      return bool;\n    }\n\n    return (\n      validateStrList(\n        \"useGestures\",\n        validateString(key, value),\n        isValidInputDevice,\n      ) || true\n    );\n  },\n  alignGestureDirection: validateBoolean,\n  preventDefault: validateBoolean,\n};\n\nconst fetchClosestScrollable = (element: Element) =>\n  waitForMeasureTime().then(\n    () => getClosestScrollable(element, { active: true }) ?? undefined,\n  );\n\nconst setPageNumber = (components: Components, pageNum: number) => {\n  let lastPromise: Promise<void> = MH.promiseResolve();\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      setData(el, PREFIX_PAGE_NUMBER, pageNum + \"\");\n      lastPromise = setStyleProp(el, VAR_PAGE_NUMBER, pageNum + \"\");\n    }\n  }\n\n  return lastPromise;\n};\n\nconst setCurrentPage = (\n  pagerEl: Element,\n  currPageNum: number,\n  numPages: number,\n  isPageDisabled: (pageNum: number) => boolean,\n) => {\n  let isFirstEnabled = true;\n  let isLastEnabled = true;\n  for (let n = 1; n <= numPages; n++) {\n    if (!isPageDisabled(n)) {\n      if (n < currPageNum) {\n        isFirstEnabled = false;\n      } else if (n > currPageNum) {\n        isLastEnabled = false;\n      }\n    }\n  }\n\n  setStyleProp(pagerEl, VAR_CURRENT_PAGE, currPageNum + \"\");\n  setData(pagerEl, PREFIX_CURRENT_PAGE, currPageNum + \"\");\n  setBoolData(pagerEl, PREFIX_CURRENT_PAGE_IS_LAST, numPages === numPages);\n  setBoolData(pagerEl, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED, isFirstEnabled);\n  return setBoolData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST_ENABLED,\n    isLastEnabled,\n  );\n};\n\nconst setPageState = async (\n  components: Components,\n  pageNum: number,\n  state: string,\n) => {\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      await setData(el, PREFIX_PAGE_STATE, state);\n    }\n  }\n};\n\nconst init = (\n  widget: Pager,\n  element: Element,\n  components: Components,\n  config: PagerConfig | undefined,\n  methods: ReturnType<typeof getMethods>,\n) => {\n  const pages = components._pages;\n  const toggles = components._toggles;\n  const switches = components._switches;\n  const nextSwitch = components._nextPrevSwitch._next;\n  const prevSwitch = components._nextPrevSwitch._prev;\n  const pageContainer = pages[0]?.parentElement;\n\n  let initialPage = toInt(config?.initialPage ?? 1);\n  const isFullscreen = config?.fullscreen ?? false;\n  const isParallax = config?.parallax ?? false;\n  const isHorizontal = config?.horizontal ?? false;\n  const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n  const useGestures = config?.useGestures ?? true;\n  const alignGestureDirection = config?.alignGestureDirection ?? false;\n  const preventDefault = config?.preventDefault ?? true;\n\n  const scrollWatcher = ScrollWatcher.reuse();\n  let gestureWatcher: GestureWatcher | null = null;\n  let viewWatcher: ViewWatcher | null = null;\n  if (isFullscreen) {\n    viewWatcher = ViewWatcher.reuse({ rootMargin: \"0px\", threshold: 0.3 });\n  }\n\n  if (useGestures) {\n    gestureWatcher = GestureWatcher.reuse();\n  }\n\n  const getGestureOptions = (\n    directions: Direction | Direction[] | undefined,\n  ): OnGestureOptions => {\n    return {\n      devices: MH.isBoolean(useGestures) // i.e. true; if it's false, then gestureWatcher is null\n        ? undefined // all devices\n        : useGestures,\n      intents: [MC.S_DRAG, MC.S_SCROLL],\n      directions,\n      deltaThreshold: 25,\n      preventDefault,\n    };\n  };\n\n  const scrollToPager = async () => {\n    scrollWatcher.scrollTo(element, {\n      scrollable: await fetchClosestScrollable(element),\n    });\n  };\n\n  const transitionOnGesture = (target: EventTarget, data: GestureData) => {\n    const swapDirection = data.intent === MC.S_DRAG;\n\n    if (MH.includes([MC.S_LEFT, MC.S_UP], data.direction)) {\n      (swapDirection ? methods._nextPage : methods._prevPage)(data);\n    } else {\n      (swapDirection ? methods._prevPage : methods._nextPage)(data);\n    }\n  };\n\n  const addWatcher = () => {\n    gestureWatcher?.onGesture(\n      element,\n      transitionOnGesture,\n      getGestureOptions(\n        alignGestureDirection\n          ? isHorizontal\n            ? [MC.S_LEFT, MC.S_RIGHT]\n            : [MC.S_UP, MC.S_DOWN]\n          : undefined, // all directions\n      ),\n    );\n\n    viewWatcher?.onView(element, scrollToPager, { views: \"at\" });\n  };\n\n  const getPageNumForEvent = (event: Event) => {\n    const target = MH.currentTargetOf(event);\n    return MH.isElement(target)\n      ? toInt(getData(target, PREFIX_PAGE_NUMBER))\n      : 0;\n  };\n\n  const toggleClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._togglePage(pageNum);\n  };\n\n  const switchClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._goToPage(pageNum);\n  };\n\n  const nextSwitchClickListener = () => methods._nextPage();\n  const prevSwitchClickListener = () => methods._prevPage();\n\n  const removeWatcher = () => {\n    gestureWatcher?.offGesture(element, transitionOnGesture);\n\n    viewWatcher?.offView(element, scrollToPager);\n  };\n\n  // SETUP ------------------------------\n\n  widget.onDisable(removeWatcher);\n  widget.onEnable(addWatcher);\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n    delDataNow(element, MC.PREFIX_ORIENTATION);\n    delDataNow(element, PREFIX_IS_FULLSCREEN);\n    delDataNow(element, PREFIX_USE_PARALLAX);\n    delDataNow(element, PREFIX_CURRENT_PAGE);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST_ENABLED);\n    delDataNow(element, PREFIX_TOTAL_PAGES);\n    delStylePropNow(element, VAR_CURRENT_PAGE);\n    delStylePropNow(element, VAR_TOTAL_PAGES);\n\n    for (let idx = 0; idx < MH.lengthOf(pages); idx++) {\n      removeClassesNow(pages[idx], PREFIX_PAGE);\n\n      for (const [el, listener] of [\n        [pages[idx], null],\n        [toggles[idx], toggleClickListener],\n        [switches[idx], switchClickListener],\n      ] as const) {\n        if (el) {\n          delDataNow(el, PREFIX_PAGE_STATE);\n          delDataNow(el, PREFIX_PAGE_NUMBER);\n          delStylePropNow(el, VAR_PAGE_NUMBER);\n          if (listener) {\n            removeEventListenerFrom(el, MC.S_CLICK, listener);\n          }\n        }\n      }\n\n      MH.delAttr(pages[idx], S_ARIA_CURRENT);\n    }\n\n    if (nextSwitch) {\n      removeEventListenerFrom(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n    }\n\n    if (prevSwitch) {\n      removeEventListenerFrom(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n    }\n\n    removeClassesNow(element, PREFIX_ROOT);\n    if (pageContainer) {\n      removeClassesNow(pageContainer, PREFIX_PAGE_CONTAINER);\n    }\n  });\n\n  addWatcher();\n  addClasses(element, PREFIX_ROOT);\n  if (pageContainer) {\n    addClasses(pageContainer, PREFIX_PAGE_CONTAINER);\n  }\n\n  const numPages = MH.lengthOf(pages);\n  setData(element, MC.PREFIX_ORIENTATION, orientation);\n  setBoolData(element, PREFIX_IS_FULLSCREEN, isFullscreen);\n  setBoolData(element, PREFIX_USE_PARALLAX, isParallax);\n  setData(element, PREFIX_TOTAL_PAGES, numPages + \"\");\n  setStyleProp(element, VAR_TOTAL_PAGES, (numPages || 1) + \"\");\n\n  for (const page of pages) {\n    disableInitialTransition(page);\n    addClasses(page, PREFIX_PAGE);\n  }\n\n  for (let idx = 0; idx < numPages; idx++) {\n    setPageNumber(components, idx + 1);\n    setPageState(components, idx + 1, S_NEXT);\n\n    for (const [el, listener] of [\n      [toggles[idx], toggleClickListener],\n      [switches[idx], switchClickListener],\n    ] as const) {\n      if (el) {\n        addEventListenerTo(el, MC.S_CLICK, listener);\n      }\n    }\n  }\n\n  if (nextSwitch) {\n    addEventListenerTo(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n  }\n\n  if (prevSwitch) {\n    addEventListenerTo(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n  }\n\n  if (initialPage < 1 || initialPage > numPages) {\n    initialPage = 1;\n  }\n  methods._goToPage(initialPage);\n};\n\nconst getMethods = (\n  widget: Pager,\n  components: Components,\n  element: Element,\n  config: PagerConfig | undefined,\n) => {\n  const pages = components._pages;\n  const scrollWatcher = ScrollWatcher.reuse();\n  const isFullscreen = config?.fullscreen;\n  const disabledPages: Record<number, boolean> = {};\n  const callbacks = MH.newSet<WidgetCallback>();\n\n  const fetchScrollOptions = async (): Promise<ScrollOptions> => ({\n    scrollable: await fetchClosestScrollable(element),\n    // default amount is already 100%\n    asFractionOf: \"visible\",\n    weCanInterrupt: true,\n  });\n\n  let currPageNum = -1;\n  let lastPageNum = -1;\n  let lastTransition = 0;\n\n  const canTransition = (gestureData?: GestureData) => {\n    if (widget.isDisabled()) {\n      return false;\n    }\n\n    if (gestureData?.device !== MC.S_WHEEL) {\n      return true;\n    }\n\n    const timeNow = MH.timeNow();\n    if (timeNow - lastTransition > MIN_TIME_BETWEEN_WHEEL) {\n      lastTransition = timeNow;\n      return true;\n    }\n\n    return false;\n  };\n\n  const goToPage = async (pageNum: number, gestureData?: GestureData) => {\n    pageNum = toInt(pageNum, -1);\n    if (pageNum === currPageNum || !canTransition(gestureData)) {\n      return;\n    }\n\n    const numPages = MH.lengthOf(pages);\n\n    if (\n      (currPageNum === 1 && pageNum === 0) ||\n      (currPageNum === numPages && pageNum === numPages + 1)\n    ) {\n      // next/prev page beyond last/first\n      if (isFullscreen) {\n        scrollWatcher.scroll(\n          pageNum\n            ? gestureData?.direction === MC.S_RIGHT\n              ? MC.S_RIGHT\n              : MC.S_DOWN\n            : gestureData?.direction === MC.S_LEFT\n              ? MC.S_LEFT\n              : MC.S_UP,\n          await fetchScrollOptions(),\n        ); // no need to await\n      }\n\n      return;\n    }\n\n    if (isPageDisabled(pageNum) || pageNum < 1 || pageNum > numPages) {\n      // invalid or disabled\n      return;\n    }\n\n    lastPageNum = currPageNum > 0 ? currPageNum : pageNum;\n    currPageNum = pageNum;\n\n    for (const callback of callbacks) {\n      await callback.invoke(widget);\n    }\n\n    MH.delAttr(pages[lastPageNum - 1], S_ARIA_CURRENT);\n    for (\n      let n = lastPageNum;\n      n !== currPageNum;\n      currPageNum < lastPageNum ? n-- : n++\n    ) {\n      if (!isPageDisabled(n)) {\n        setPageState(\n          components,\n          n,\n          currPageNum < lastPageNum ? S_NEXT : S_COVERED,\n        );\n      }\n    }\n\n    setCurrentPage(element, currPageNum, numPages, isPageDisabled);\n    MH.setAttr(pages[currPageNum - 1], S_ARIA_CURRENT);\n    await setPageState(components, currPageNum, S_CURRENT);\n  };\n\n  const nextPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum + 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage++;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const prevPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum - 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage--;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const isPageDisabled = (pageNum: number) => disabledPages[pageNum] === true;\n\n  const disablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || pageNum < 1 || pageNum > MH.lengthOf(pages)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = true;\n\n    if (pageNum === currPageNum) {\n      await prevPage();\n\n      if (pageNum === currPageNum) {\n        await nextPage();\n\n        if (pageNum === currPageNum) {\n          disabledPages[pageNum] = false;\n          return; // only enabled one\n        }\n      }\n    }\n\n    setCurrentPage(element, currPageNum, MH.lengthOf(pages), isPageDisabled);\n    await setPageState(components, pageNum, MC.S_DISABLED);\n  };\n\n  const enablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || !isPageDisabled(pageNum)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = false;\n\n    setCurrentPage(element, currPageNum, MH.lengthOf(pages), isPageDisabled);\n    await setPageState(\n      components,\n      pageNum,\n      pageNum < currPageNum ? S_COVERED : S_NEXT,\n    );\n  };\n\n  const togglePage = (pageNum: number) =>\n    isPageDisabled(pageNum) ? enablePage(pageNum) : disablePage(pageNum);\n\n  const onTransition = (handler: WidgetHandler) =>\n    callbacks.add(wrapCallback(handler));\n\n  return {\n    _nextPage: nextPage,\n    _prevPage: prevPage,\n    _goToPage: goToPage,\n    _disablePage: disablePage,\n    _enablePage: enablePage,\n    _togglePage: togglePage,\n    _isPageDisabled: isPageDisabled,\n    _getCurrentPage: () => pages[currPageNum - 1],\n    _getPreviousPage: () => pages[lastPageNum - 1],\n    _getCurrentPageNum: () => (MH.lengthOf(pages) > 0 ? currPageNum : 0),\n    _getPreviousPageNum: () => (MH.lengthOf(pages) > 0 ? lastPageNum : 0),\n    _onTransition: onTransition,\n  };\n};\n"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlJA,IAmJa4J,KAAK,GAAAC,OAAA,CAAAD,KAAA,0BAAAE,OAAA;EA+HhB;AACF;AACA;AACA;AACA;EACE,SAAAF,MAAYG,OAAgB,EAAEC,MAAoB,EAAE;IAAA,IAAAC,UAAA;IAAA,IAAAC,KAAA;IAAAhC,eAAA,OAAA0B,KAAA;IAClD,IAAMO,cAAc,IAAAF,UAAA,GAAGL,KAAK,CAACxJ,GAAG,CAAC2J,OAAO,CAAC,cAAAE,UAAA,uBAAlBA,UAAA,CAAoBG,OAAO,CAAC,CAAC;IACpDF,KAAA,GAAA3B,UAAA,OAAAqB,KAAA,GAAMG,OAAO,EAAE;MAAEM,EAAE,EAAEC;IAAS,CAAC;IArIjC;AACF;AACA;AACA;AACA;AACA;IALEf,eAAA,CAAAW,KAAA;IAQA;AACF;AACA;AACA;AACA;AACA;IALEX,eAAA,CAAAW,KAAA;IAQA;AACF;AACA;AACA;AACA;IAJEX,eAAA,CAAAW,KAAA;IAOA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAVEX,eAAA,CAAAW,KAAA;IAaA;AACF;AACA;IAFEX,eAAA,CAAAW,KAAA;IAKA;A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","ignoreList":[]}