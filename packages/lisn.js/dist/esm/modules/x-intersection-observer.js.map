{"version":3,"file":"x-intersection-observer.js","names":["MH","XIntersectionObserver","_createClass","callback","observeOptions","_this","_classCallCheck","_defineProperty","observedTargets","newWeakSet","targetsToSkip","intersectionHandler","entries","selectedEntries","_iterator","_createForOfIteratorHelper","_step","s","n","done","entry","value","has","targetOf","deleteKey","push","err","e","f","lengthOf","observer","newIntersectionObserver","defineProperty","get","root","rootMargin","thresholds","observe","_len","arguments","length","targets","Array","_key","_i","_targets","target","add","observeLater","_len2","_key2","_i2","_targets2","unobserve","_len3","_key3","_i3","_targets3","disconnect","takeRecords"],"sources":["../../../src/ts/modules/x-intersection-observer.ts"],"sourcesContent":["/**\n * @module Modules/XIntersectionObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nexport type XIntersectionObserverCallback = (\n  entries: IntersectionObserverEntry[],\n  observer: XIntersectionObserver,\n) => void;\n\n/**\n * {@link XIntersectionObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}\n * with added capabilities:\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n */\nexport class XIntersectionObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root | IntersectionObserver:root}.\n   */\n  readonly root!: Element | Document | null;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin | IntersectionObserver:rootMargin}.\n   */\n  readonly rootMargin!: string;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/thresholds | IntersectionObserver:thresholds}.\n   */\n  readonly thresholds!: number[];\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/observe | IntersectionObserver:observe} except it accepts multiple\n   * targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent intersection change.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/unobserve | IntersectionObserver:unobserve} except it accepts multiple\n   * targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/disconnect | IntersectionObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * Like `IntersectionObserver.takeRecords`.\n   */\n  readonly takeRecords: () => void;\n\n  constructor(\n    callback: XIntersectionObserverCallback,\n    observeOptions?: IntersectionObserverInit,\n  ) {\n    let observedTargets = MH.newWeakSet<Element>();\n    const targetsToSkip = MH.newWeakSet<Element>();\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      const selectedEntries = [];\n\n      for (const entry of entries) {\n        if (targetsToSkip.has(MH.targetOf(entry))) {\n          MH.deleteKey(targetsToSkip, MH.targetOf(entry));\n          continue;\n        }\n\n        selectedEntries.push(entry);\n      }\n\n      if (MH.lengthOf(selectedEntries)) {\n        callback(selectedEntries, this);\n      }\n    };\n\n    const observer = MH.newIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    MH.defineProperty(this, \"root\", { get: () => observer.root });\n    MH.defineProperty(this, \"rootMargin\", {\n      get: () => observer.rootMargin,\n    });\n    MH.defineProperty(this, \"thresholds\", {\n      get: () => observer.thresholds,\n    });\n\n    this.observe = (...targets) => {\n      for (const target of targets) {\n        observedTargets.add(target);\n        observer.observe(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.add(target);\n        this.observe(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        observer.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      observedTargets = MH.newWeakSet();\n      observer.disconnect();\n    };\n\n    this.takeRecords = () => observer.takeRecords();\n  }\n}\n"],"mappings":"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","ignoreList":[]}