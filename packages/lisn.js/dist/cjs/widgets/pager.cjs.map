{"version":3,"file":"pager.cjs","names":["MC","_interopRequireWildcard","require","MH","_cssAlter","_domOptimize","_domQuery","_event","_gesture","_math","_misc","_scroll","_text","_validation","_callback","_gestureWatcher","_scrollWatcher","_sizeWatcher","_viewWatcher","_widget","_debug","_interopRequireDefault","e","__esModule","default","t","WeakMap","r","n","o","i","f","__proto__","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","Pager","Widget","element","instance","DUMMY_ID","isInstanceOf","register","registerWidget","WIDGET_NAME","config","configValidator","constructor","_Pager$get","destroyPromise","destroy","id","pages","toggles","switches","nextPrevSwitch","_next","nextSwitch","_prev","prevSwitch","pageSelector","getDefaultWidgetSelector","PREFIX_PAGE__FOR_SELECT","toggleSelector","PREFIX_TOGGLE__FOR_SELECT","switchSelector","PREFIX_SWITCH__FOR_SELECT","nextSwitchSelector","PREFIX_NEXT_SWITCH__FOR_SELECT","prevSwitchSelector","PREFIX_PREV_SWITCH__FOR_SELECT","lengthOf","push","querySelectorAll","getVisibleContentChildren","filter","matches","querySelector","numPages","usageError","page","contains","components","_pages","_toggles","_switches","_nextPrevSwitch","methods","getMethods","promiseResolve","then","isDestroyed","init","nextPage","_nextPage","prevPage","_prevPage","goToPage","pageNum","_goToPage","disablePage","_disablePage","enablePage","_enablePage","togglePage","_togglePage","isPageDisabled","_isPageDisabled","getCurrentPage","_getCurrentPage","getPreviousPage","_getPreviousPage","getCurrentPageNum","_getCurrentPageNum","getPreviousPageNum","_getPreviousPageNum","onTransition","_onTransition","getPages","getSwitches","getToggles","exports","MIN_TIME_BETWEEN_WHEEL","S_CURRENT","S_ARIA_CURRENT","ARIA_PREFIX","S_COVERED","S_NEXT","S_TOTAL_PAGES","S_VISIBLE_PAGES","S_CURRENT_PAGE","S_PAGE_NUMBER","PREFIXED_NAME","prefixName","PREFIX_ROOT","PREFIX_PAGE_CONTAINER","PREFIX_PAGE","PREFIX_STYLE","PREFIX_IS_FULLSCREEN","PREFIX_USE_PARALLAX","PREFIX_TOTAL_PAGES","PREFIX_VISIBLE_PAGES","PREFIX_CURRENT_PAGE","PREFIX_CURRENT_PAGE_IS_LAST","PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED","PREFIX_CURRENT_PAGE_IS_LAST_ENABLED","PREFIX_PAGE_STATE","PREFIX_PAGE_NUMBER","VAR_CURRENT_PAGE","prefixCssJsVar","VAR_TOTAL_PAGES","VAR_VISIBLE_PAGES","VAR_VISIBLE_GAPS","VAR_TRANSLATED_PAGES","VAR_TRANSLATED_GAPS","VAR_PAGE_NUMBER","SUPPORTED_STYLES","isValidStyle","includes","initialPage","validateNumber","style","key","validateString","pageSize","peek","validateBoolean","fullscreen","parallax","horizontal","useGestures","isNullish","undefined","bool","toBoolean","validateStrList","isValidInputDevice","alignGestureDirection","preventDefault","fetchClosestScrollable","waitForMeasureTime","_getClosestScrollable","getClosestScrollable","active","setPageNumber","lastPromise","el","setData","setStyleProp","setPageState","state","setCurrentPage","pagerEl","pageNumbers","isFirstEnabled","isLastEnabled","_total","_current","setBooleanData","widget","_pages$","_config$initialPage","_config$style","_config$pageSize","_config$peek","_config$fullscreen","_config$parallax","_config$horizontal","_config$useGestures","_config$alignGestureD","_config$preventDefaul","logger","debug","Logger","name","formatAsString","logAtCreation","pageContainer","parentElement","toInt","pagerStyle","isCarousel","minPageSize","enablePeek","isFullscreen","isParallax","isHorizontal","orientation","S_HORIZONTAL","S_VERTICAL","scrollWatcher","ScrollWatcher","reuse","sizeWatcher","SizeWatcher","resizeThreshold","gestureWatcher","GestureWatcher","viewWatcher","ViewWatcher","rootMargin","threshold","recalculateCarouselProps","data","gap","parseFloat","getComputedStyleProp","containerSize","content","S_WIDTH","S_HEIGHT","getNumVisiblePages","addPeek","numVisiblePages","max","min","floor","debug8","currPageNum","prevPageNum","numHidden","hasPeek","visibleStart","isAtEdge","numTranslated","ceil","numVisibleGaps","fractionalNumVisiblePages","getGestureOptions","directions","devices","isBoolean","intents","S_DRAG","S_SCROLL","deltaThreshold","scrollToPager","scrollTo","scrollable","transitionOnGesture","target","swapDirection","intent","S_LEFT","S_UP","direction","addWatchers","onGesture","S_RIGHT","S_DOWN","onResize","onView","views","removeWatchers","offGesture","offResize","offView","getPageNumForEvent","event","currentTargetOf","isElement","getData","toggleClickListener","switchClickListener","nextSwitchClickListener","prevSwitchClickListener","onDisable","onEnable","onDestroy","waitForMutateTime","delDataNow","PREFIX_ORIENTATION","delStylePropNow","idx","removeClassesNow","listener","removeEventListenerFrom","S_CLICK","delAttr","addClasses","disableInitialTransition","addEventListenerTo","disabledPages","callbacks","newSet","fetchScrollOptions","asFractionOf","weCanInterrupt","lastPageNum","lastTransition","canTransition","gestureData","isDisabled","device","S_WHEEL","timeNow","scroll","callback","invoke","setAttr","targetPage","S_DISABLED","handler","add","wrapCallback"],"sources":["../../../src/ts/widgets/pager.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  addClasses,\n  removeClassesNow,\n  getData,\n  setData,\n  setBooleanData,\n  delDataNow,\n  getComputedStyleProp,\n  setStyleProp,\n  delStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { isValidInputDevice } from \"@lisn/utils/gesture\";\nimport { toInt } from \"@lisn/utils/math\";\nimport { toBoolean } from \"@lisn/utils/misc\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateNumber,\n  validateString,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport {\n  GestureWatcher,\n  OnGestureOptions,\n  GestureData,\n} from \"@lisn/watchers/gesture-watcher\";\nimport { ScrollWatcher, ScrollOptions } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  WidgetCallback,\n  WidgetHandler,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * Configures the given element as a {@link Pager} widget.\n *\n * The Pager widget sets up the elements that make up its pages to be overlayed\n * on top of each other with only one of them visible at a time. When a user\n * performs a scroll-like gesture (see {@link GestureWatcher}), the pages are\n * flicked through: gestures, whose direction is down (or left) result in the\n * next page being shown, otherwise the previous.\n *\n * The widget should have more than one page.\n *\n * Optionally, the widget can have a set of \"switch\" elements and a set of\n * \"toggle\" elements which correspond one-to-one to each page. Switches go to\n * the given page and toggles toggle the enabled/disabled state of the page.\n *\n * **IMPORTANT:** Unless the {@link PagerConfig.style} is set to \"carousel\", the\n * page elements will be positioned absolutely, and therefore the pager likely\n * needs to have an explicit height. If you enable\n * {@link PagerConfig.fullscreen}, then the element will get `height: 100vh`\n * set. Otherwise, you need to set its height in your CSS.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Pager}\n * widget on a given element. Use {@link Pager.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the pager element:\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n * - `data-lisn-use-parallax`: `\"true\"` or `\"false\"`\n * - `data-lisn-total-pages`: the number of pages\n * - `data-lisn-visible-pages`: **for carousel only** the number of visible pages;\n *   can be fractional if {@link PagerConfig.peek} is enabled\n * - `data-lisn-current-page`: the current page number\n * - `data-lisn-current-page-is-last`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-first-enabled`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-last-enabled`: `\"true\"` or `\"false\"`\n *\n * The following dynamic CSS properties are also set on the pager element's style:\n * - `--lisn-js--total-pages`: the number of pages\n * - `--lisn-js--visible-pages`: **for carousel only** the number of visible pages\n * - `--lisn-js--current-page`: the current page number\n *\n * The following dynamic attributes are set on each page, toggle or switch element:\n * - `data-lisn-page-state`: `\"current\"`, `\"next\"`, `\"covered\"` or `\"disabled\"`\n * - `data-lisn-page-number`: the corresponding page's number\n *\n * The following analogous dynamic CSS properties are also set on each page,\n * toggle or switch element's style:\n * - `--lisn-js--page-number`: the corresponding page's number\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-pager` class or `data-lisn-pager` attribute set on the container\n *   element that constitutes the pager\n * - `lisn-pager-page` class or `data-lisn-pager-page` attribute set on\n *   elements that should act as the pages.\n * - `lisn-pager-toggle` class or `data-lisn-pager-toggle` attribute set on\n *   elements that should act as the toggles.\n * - `lisn-pager-switch` class or `data-lisn-pager-switch` attribute set on\n *   elements that should act as the switches.\n *\n * When using auto-widgets, the elements that will be used as pages are\n * discovered in the following way:\n * 1. The top-level element that constitutes the widget is searched for any\n *    elements that contain the `lisn-pager-page` class or\n *    `data-lisn-pager-page` attribute. They do not have to be immediate\n *    children of the root element, but they **should** all be siblings.\n * 2. If there are no such elements, all of the immediate children of the\n *    widget element except any `script` or `style` elements are taken as the\n *    pages.\n *\n * The toggles and switches are descendants of the top-level element that\n * constitutes the widget, that contain the\n * `lisn-pager-toggle`/`lisn-pager-switch` class or `data-lisn-pager-toggle`/\n * `data-lisn-pager-switch` attribute. They do not have to be immediate\n * children of the root element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple pager with default settings.\n *\n * ```html\n * <div class=\"lisn-pager\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * As above but with all settings explicitly set to their default (`false`).\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen=false | parallax=false | horizontal=false\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>Horizontal: Page 1</div>\n *   <div>Horizontal: Page 2</div>\n *   <div>Horizontal: Page 3</div>\n *   <div>Horizontal: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings, as well as toggle and switch buttons.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>\n *     <div data-lisn-pager-page>Horizontal: Page 1</div>\n *     <div data-lisn-pager-page>Horizontal: Page 2</div>\n *     <div data-lisn-pager-page>Horizontal: Page 3</div>\n *     <div data-lisn-pager-page>Horizontal: Page 4</div>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-toggle>Toggle page 1</button>\n *     <button data-lisn-pager-toggle>Toggle page 2</button>\n *     <button data-lisn-pager-toggle>Toggle page 3</button>\n *     <button data-lisn-pager-toggle>Toggle page 4</button>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-switch>Go to page 1</button>\n *     <button data-lisn-pager-switch>Go to page 2</button>\n *     <button data-lisn-pager-switch>Go to page 3</button>\n *     <button data-lisn-pager-switch>Go to page 4</button>\n *   </div>\n * </div>\n * ```\n */\nexport class Pager extends Widget {\n  /**\n   * Advances the widget's page by 1. If the current page is the last one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled down/right\n   * (depending on the gesture direction).\n   */\n  readonly nextPage: () => Promise<void>;\n\n  /**\n   * Reverses the widget's page by 1. If the current page is the first one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled up/left\n   * (depending on the gesture direction).\n   */\n  readonly prevPage: () => Promise<void>;\n\n  /**\n   * Advances the widget to the given page. Note that page numbers start at 1.\n   *\n   * If this page is disabled, nothing is done.\n   */\n  readonly goToPage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Disables the given page number. Note that page numbers start at 1.\n   *\n   * The page will be skipped during transitioning to previous/next.\n   *\n   * If the page is the current one, then the current page will be switched to\n   * the previous one (that's not disabled), or if this is the first enabled\n   * page, then it will switch to the next one that's not disabled.\n   *\n   * If this is the last enabled page, nothing is done.\n   */\n  readonly disablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page number. Note that page numbers start at 1.\n   */\n  readonly enablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page if it is disabled, otherwise disables it. Note\n   * that page numbers start at 1.\n   */\n  readonly togglePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Returns true if the given page number is disabled. Note that page\n   * numbers start at 1.\n   */\n  readonly isPageDisabled: (pageNum: number) => boolean;\n\n  /**\n   * Returns the current page.\n   */\n  readonly getCurrentPage: () => Element;\n\n  /**\n   * Returns the previous page, before the last transition.\n   *\n   * If there has been no change of page, returns the first page, same as\n   * {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPage: () => Element;\n\n  /**\n   * Returns the number of the current page. Note that numbers start at 1.\n   */\n  readonly getCurrentPageNum: () => number;\n\n  /**\n   * Returns the number of the previous page, before the last transition. Note\n   * that numbers start at 1.\n   *\n   * If there has been no change of page, returns the number of the first page,\n   * same as {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPageNum: () => number;\n\n  /**\n   * The given handler will be called whenever there is a change of page. It\n   * will be called after the current page number is updated internally (so\n   * {@link getPreviousPageNum} and {@link getCurrentPageNum} will return the\n   * updated numbers), but before the page transition styles are updated.\n   *\n   * If the handler returns a promise, it will be awaited upon.\n   */\n  readonly onTransition: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns the page elements.\n   */\n  readonly getPages: () => Element[];\n\n  /**\n   * Returns the toggle elements if any.\n   */\n  readonly getToggles: () => Element[];\n\n  /**\n   * Returns the switch elements if any.\n   */\n  readonly getSwitches: () => Element[];\n\n  static get(element: Element): Pager | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Pager)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!Pager.get(element)) {\n          return new Pager(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If there are less than 2 pages given or found, or if any\n   *                page is not a descendant of the main pager element.\n   */\n  constructor(element: Element, config?: PagerConfig) {\n    const destroyPromise = Pager.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const pages = config?.pages || [];\n    const toggles = config?.toggles || [];\n    const switches = config?.switches || [];\n    const nextPrevSwitch = {\n      _next: config?.nextSwitch || null,\n      _prev: config?.prevSwitch || null,\n    };\n\n    const pageSelector = getDefaultWidgetSelector(PREFIX_PAGE__FOR_SELECT);\n    const toggleSelector = getDefaultWidgetSelector(PREFIX_TOGGLE__FOR_SELECT);\n    const switchSelector = getDefaultWidgetSelector(PREFIX_SWITCH__FOR_SELECT);\n    const nextSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_NEXT_SWITCH__FOR_SELECT,\n    );\n    const prevSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_PREV_SWITCH__FOR_SELECT,\n    );\n\n    if (!MH.lengthOf(pages)) {\n      pages.push(...MH.querySelectorAll(element, pageSelector));\n\n      if (!MH.lengthOf(pages)) {\n        pages.push(\n          ...getVisibleContentChildren(element).filter(\n            (e) => !e.matches(switchSelector),\n          ),\n        );\n      }\n    }\n\n    if (!MH.lengthOf(toggles)) {\n      toggles.push(...MH.querySelectorAll(element, toggleSelector));\n    }\n\n    if (!MH.lengthOf(switches)) {\n      switches.push(...MH.querySelectorAll(element, switchSelector));\n    }\n\n    if (!nextPrevSwitch._next) {\n      nextPrevSwitch._next = MH.querySelector(element, nextSwitchSelector);\n    }\n\n    if (!nextPrevSwitch._prev) {\n      nextPrevSwitch._prev = MH.querySelector(element, prevSwitchSelector);\n    }\n\n    const numPages = MH.lengthOf(pages);\n    if (numPages < 2) {\n      throw MH.usageError(\"Pager must have more than 1 page\");\n    }\n\n    for (const page of pages) {\n      if (!element.contains(page) || page === element) {\n        throw MH.usageError(\"Pager's pages must be its descendants\");\n      }\n    }\n\n    const components = {\n      _pages: pages,\n      _toggles: toggles,\n      _switches: switches,\n      _nextPrevSwitch: nextPrevSwitch,\n    };\n\n    const methods = getMethods(this, components, element, config);\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, element, components, config, methods);\n    });\n\n    this.nextPage = () => methods._nextPage();\n    this.prevPage = () => methods._prevPage();\n    this.goToPage = (pageNum) => methods._goToPage(pageNum);\n    this.disablePage = methods._disablePage;\n    this.enablePage = methods._enablePage;\n    this.togglePage = methods._togglePage;\n    this.isPageDisabled = methods._isPageDisabled;\n    this.getCurrentPage = methods._getCurrentPage;\n    this.getPreviousPage = methods._getPreviousPage;\n    this.getCurrentPageNum = methods._getCurrentPageNum;\n    this.getPreviousPageNum = methods._getPreviousPageNum;\n    this.onTransition = methods._onTransition;\n\n    this.getPages = () => [...pages];\n    this.getSwitches = () => [...switches];\n    this.getToggles = () => [...toggles];\n  }\n}\n\n/**\n * @interface\n */\nexport type PagerConfig = {\n  /**\n   * The elements that will make up the pages.\n   *\n   * They do not have to be immediate children of the root element, but they\n   * should all be siblings.\n   *\n   * The widget should have more than one page.\n   *\n   * If this is not specified, then\n   * 1. The top-level element that constitutes the widget is searched for any\n   *    elements that contain the `lisn-pager-page` class or the\n   *    `data-lisn-pager-page` attribute, and these are used as pages.\n   * 2. If there are no such elements, all of the immediate children of the\n   *    widget element (other than `script` and `style` elements) are taken as\n   *    the pages.\n   *\n   * **IMPORTANT:** Unless the {@link style} is set to \"carousel\", the page\n   * elements will be positioned absolutely, and therefore the pager likely\n   * needs to have an explicit height. If you enable {@link fullscreen}, then\n   * the element will get `height: 100vh` set. Otherwise, you need to set its\n   * height in your CSS.\n   *\n   * @defaultValue undefined\n   */\n  pages?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that toggles the\n   * enabled/disabled state of the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-toggle`\n   * class or the `data-lisn-pager-toggle` attribute, and these are used as\n   * toggles.\n   *\n   * @defaultValue undefined\n   */\n  toggles?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that switches the\n   * pager to the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-switch`\n   * class or the `data-lisn-pager-switch` attribute, and these are used as\n   * switches.\n   *\n   * @defaultValue undefined\n   */\n  switches?: Element[];\n\n  /**\n   * This element will be assigned a click listener that goes to the next page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-next-switch` class or the `data-lisn-pager-next-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  nextSwitch?: Element;\n\n  /**\n   * This element will be assigned a click listener that goes to the previous\n   * page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-prev-switch` class or the `data-lisn-pager-prev-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  prevSwitch?: Element;\n\n  /**\n   * Set the initial page number.\n   *\n   * @defaultValue 1\n   */\n  initialPage?: number;\n\n  /**\n   * Set the style of the widget. This determines the basic CSS applied.\n   *\n   * When importing the stylesheets in your project, if not using the full\n   * stylesheet (lisn.css) you can import either pager.css which contains all\n   * three pager styles, or only `pager-<style>.css`.\n   *\n   * **NOTE:** The base css only includes the minimum required for positioning\n   * and transitioning pages. The switches and toggles are intentionally not\n   * styled for flexibility. You should style those in your CSS.\n   *\n   * **IMPORTANT:** Unless the {@link style} is set to \"carousel\", the page\n   * elements will be positioned absolutely, and therefore the pager likely\n   * needs to have an explicit height. If you enable {@link fullscreen}, then\n   * the element will get `height: 100vh` set. Otherwise, you need to set its\n   * height in your CSS.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue \"slider\"\n   */\n  style?: \"slider\" | \"carousel\" | \"tabs\";\n\n  /**\n   * Only relevant is {@link style} is \"carousel\".\n   *\n   * The *minimum* page height (or width in {@link horizontal} mode) in pixels.\n   * This will determine the number of visible slides at any one width of the\n   * pager. Pages will still grow to fill the size of the carousel itself.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue 300\n   */\n  pageSize?: number;\n\n  /**\n   * Only relevant is {@link style} is \"carousel\".\n   *\n   * Whether to show a bit of the upcoming and/or previous pages that are\n   * hidden when not all fit.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue false\n   */\n  peek?: boolean;\n\n  /**\n   * If true, then:\n   * - if the pager {@link style} is \"slider\", the pager's height will be set\n   *   to the viewport height (100vh)\n   * - the pager's scrolling ancestor will be scrolled to the top of the pager\n   *   when 30% of it is in view\n   * - scrolling beyond the first or last page will initiate scroll up/left or\n   *   down/right the pager's scrolling ancestor in order to allow \"leaving\"\n   *   the pager\n   *\n   * Note that except in \"carousel\" {@link style} the pager's pages will be\n   * positioned absolutely, and so if you do _not_ enable this option, you will\n   * need to manually set the height of the page parent element via CSS.\n   *\n   * @defaultValue false\n   */\n  fullscreen?: boolean;\n\n  /**\n   * Only relevant is {@link style} is \"slider\" (default) or \"carousel\".\n   *\n   * Use a parallax effect for switching pages.\n   *\n   * @defaultValue false\n   */\n  parallax?: boolean;\n\n  /**\n   * Only relevant is {@link style} is \"slider\" (default) or \"carousel\".\n   *\n   * Transition pages sideways instead of vertically.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Transition pages upon user scroll-like and drag-like gestures via the\n   * given {@link GestureDevice}s. If set to true, then gestures using all\n   * device types are supported.\n   *\n   * Note that drag gesture is only supported by the \"pointer\" device and also\n   * the \"pointer\" device only supports drag gestures, so if you want to\n   * disable drag gestures, simply pass \"wheel,key,touch\" as this option.\n   *\n   * @defaultValue true\n   */\n  useGestures?: boolean | CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If true, then pages will be advanced backwards/forwards regardless if the\n   * gesture direction is horizontal or vertical.\n   *\n   * If false then, a gesture will go to the next page only if its direction is\n   * down if {@link horizontal} is false/right if {@link horizontal} is true,\n   * and to the previous page only if the gesture direction is up if\n   * {@link horizontal} is false/left if {@link horizontal} is true.\n   *\n   * **IMPORTANT:**\n   * If {@link fullscreen}, {@link preventDefault} and\n   * {@link alignGestureDirection} are all true, then the pager's scrollable\n   * parent must be scrollable in the same direction as the pager orientation,\n   * otherwise automatic scroll beyond the last/first page won't work.\n   *\n   * @defaultValue false\n   */\n  alignGestureDirection?: boolean;\n\n  /**\n   * Whether to prevent the default action for events that would result in\n   * gestures.\n   *\n   * **NOTE:**\n   * If true (default), then all events that originate from a device given in\n   * {@link useGestures} and that could result in a gesture will be prevented\n   * regardless of their direction and whether {@link alignGestureDirection} is\n   * true.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n};\n\n// --------------------\n\ntype Components = {\n  _pages: Element[];\n  _toggles: Element[];\n  _switches: Element[];\n  _nextPrevSwitch: { _next: Element | null; _prev: Element | null };\n};\n\n// Swiping on some trackpads results in \"trailing\" wheel events sent for some\n// while which results in multiple pages being advanced in a short while. So we\n// limit how often pages can be advanced.\nconst MIN_TIME_BETWEEN_WHEEL = 1000;\n\nconst S_CURRENT = \"current\";\nconst S_ARIA_CURRENT = MC.ARIA_PREFIX + S_CURRENT;\nconst S_COVERED = \"covered\";\nconst S_NEXT = \"next\";\nconst S_TOTAL_PAGES = \"total-pages\";\nconst S_VISIBLE_PAGES = \"visible-pages\";\nconst S_CURRENT_PAGE = \"current-page\";\nconst S_PAGE_NUMBER = \"page-number\";\nconst WIDGET_NAME = \"pager\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_PAGE_CONTAINER = `${PREFIXED_NAME}__page-container`;\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_PAGE = `${PREFIXED_NAME}__page`;\nconst PREFIX_PAGE__FOR_SELECT = `${PREFIXED_NAME}-page`;\nconst PREFIX_TOGGLE__FOR_SELECT = `${PREFIXED_NAME}-toggle`;\nconst PREFIX_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-switch`;\nconst PREFIX_NEXT_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-next-switch`;\nconst PREFIX_PREV_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-prev-switch`;\n\nconst PREFIX_STYLE = `${PREFIXED_NAME}-style`;\nconst PREFIX_IS_FULLSCREEN = MH.prefixName(\"is-fullscreen\");\nconst PREFIX_USE_PARALLAX = MH.prefixName(\"use-parallax\");\nconst PREFIX_TOTAL_PAGES = MH.prefixName(S_TOTAL_PAGES);\nconst PREFIX_VISIBLE_PAGES = MH.prefixName(S_VISIBLE_PAGES);\nconst PREFIX_CURRENT_PAGE = MH.prefixName(S_CURRENT_PAGE);\nconst PREFIX_CURRENT_PAGE_IS_LAST = `${PREFIX_CURRENT_PAGE}-is-last`;\nconst PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED = `${PREFIX_CURRENT_PAGE}-is-first-enabled`;\nconst PREFIX_CURRENT_PAGE_IS_LAST_ENABLED = `${PREFIX_CURRENT_PAGE_IS_LAST}-enabled`;\nconst PREFIX_PAGE_STATE = MH.prefixName(\"page-state\");\nconst PREFIX_PAGE_NUMBER = MH.prefixName(S_PAGE_NUMBER);\nconst VAR_CURRENT_PAGE = MH.prefixCssJsVar(S_CURRENT_PAGE);\nconst VAR_TOTAL_PAGES = MH.prefixCssJsVar(S_TOTAL_PAGES);\nconst VAR_VISIBLE_PAGES = MH.prefixCssJsVar(S_VISIBLE_PAGES);\nconst VAR_VISIBLE_GAPS = MH.prefixCssJsVar(\"visible-gaps\");\nconst VAR_TRANSLATED_PAGES = MH.prefixCssJsVar(\"translated-pages\");\nconst VAR_TRANSLATED_GAPS = MH.prefixCssJsVar(\"translated-gaps\");\nconst VAR_PAGE_NUMBER = MH.prefixCssJsVar(S_PAGE_NUMBER);\n\n// Only one Pager widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\nconst SUPPORTED_STYLES = [\"slider\", \"carousel\", \"tabs\"] as const;\ntype PagerStyle = (typeof SUPPORTED_STYLES)[number];\n\nconst isValidStyle = (value: string): value is PagerStyle =>\n  MH.includes(SUPPORTED_STYLES, value);\n\nconst configValidator: WidgetConfigValidatorObject<PagerConfig> = {\n  initialPage: validateNumber,\n  style: (key, value) => validateString(key, value, isValidStyle),\n  pageSize: validateNumber,\n  peek: validateBoolean,\n  fullscreen: validateBoolean,\n  parallax: validateBoolean,\n  horizontal: validateBoolean,\n  useGestures: (key, value) => {\n    if (MH.isNullish(value)) {\n      return undefined;\n    }\n\n    const bool = toBoolean(value);\n    if (bool !== null) {\n      return bool;\n    }\n\n    return (\n      validateStrList(\n        \"useGestures\",\n        validateString(key, value),\n        isValidInputDevice,\n      ) || true\n    );\n  },\n  alignGestureDirection: validateBoolean,\n  preventDefault: validateBoolean,\n};\n\nconst fetchClosestScrollable = (element: Element) =>\n  waitForMeasureTime().then(\n    () => getClosestScrollable(element, { active: true }) ?? undefined,\n  );\n\nconst setPageNumber = (components: Components, pageNum: number) => {\n  let lastPromise: Promise<void> = MH.promiseResolve();\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      setData(el, PREFIX_PAGE_NUMBER, pageNum + \"\");\n      lastPromise = setStyleProp(el, VAR_PAGE_NUMBER, pageNum + \"\");\n    }\n  }\n\n  return lastPromise;\n};\n\nconst setPageState = async (\n  components: Components,\n  pageNum: number,\n  state: string,\n) => {\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      await setData(el, PREFIX_PAGE_STATE, state);\n    }\n  }\n};\n\nconst setCurrentPage = (\n  pagerEl: Element,\n  pageNumbers: {\n    _current: number;\n    _total: number;\n  },\n  isPageDisabled: (pageNum: number) => boolean,\n) => {\n  let isFirstEnabled = true;\n  let isLastEnabled = true;\n  for (let n = 1; n <= pageNumbers._total; n++) {\n    if (!isPageDisabled(n)) {\n      if (n < pageNumbers._current) {\n        isFirstEnabled = false;\n      } else if (n > pageNumbers._current) {\n        isLastEnabled = false;\n      }\n    }\n  }\n\n  setStyleProp(pagerEl, VAR_CURRENT_PAGE, pageNumbers._current + \"\");\n  setData(pagerEl, PREFIX_CURRENT_PAGE, pageNumbers._current + \"\");\n  setBooleanData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST,\n    pageNumbers._current === pageNumbers._total,\n  );\n  setBooleanData(pagerEl, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED, isFirstEnabled);\n  return setBooleanData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST_ENABLED,\n    isLastEnabled,\n  );\n};\n\nconst init = (\n  widget: Pager,\n  element: Element,\n  components: Components,\n  config: PagerConfig | undefined,\n  methods: ReturnType<typeof getMethods>,\n) => {\n  const logger = debug\n    ? new debug.Logger({\n        name: `Pager-${formatAsString(element)}`,\n        logAtCreation: config,\n      })\n    : null;\n\n  const pages = components._pages;\n  const toggles = components._toggles;\n  const switches = components._switches;\n  const nextSwitch = components._nextPrevSwitch._next;\n  const prevSwitch = components._nextPrevSwitch._prev;\n  const pageContainer = pages[0]?.parentElement;\n\n  let initialPage = toInt(config?.initialPage ?? 1);\n  const pagerStyle = config?.style ?? \"slider\";\n  const isCarousel = pagerStyle === \"carousel\";\n  const minPageSize = config?.pageSize ?? 300;\n  const enablePeek = config?.peek ?? false;\n  const isFullscreen = config?.fullscreen ?? false;\n  const isParallax = config?.parallax ?? false;\n  const isHorizontal = config?.horizontal ?? false;\n  const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n  const useGestures = config?.useGestures ?? true;\n  const alignGestureDirection = config?.alignGestureDirection ?? false;\n  const preventDefault = config?.preventDefault ?? true;\n\n  const scrollWatcher = ScrollWatcher.reuse();\n  const sizeWatcher = isCarousel\n    ? SizeWatcher.reuse({ resizeThreshold: 10 })\n    : null;\n  const gestureWatcher = useGestures ? GestureWatcher.reuse() : null;\n  const viewWatcher = isFullscreen\n    ? ViewWatcher.reuse({ rootMargin: \"0px\", threshold: 0.3 })\n    : null;\n\n  const recalculateCarouselProps = async (t?: Element, data?: SizeData) => {\n    if (data) {\n      // there's been a resize\n      const gap =\n        MH.parseFloat(await getComputedStyleProp(element, \"gap\")) || 0;\n      const containerSize =\n        data.content[isHorizontal ? MC.S_WIDTH : MC.S_HEIGHT];\n\n      const getNumVisiblePages = (addPeek = false) =>\n        (numVisiblePages = MH.max(\n          1, // at least 1\n          MH.min(\n            MH.floor(\n              (containerSize + gap - (addPeek ? 0.5 * minPageSize : 0)) /\n                (minPageSize + gap),\n            ),\n            numPages, // and at most total number\n          ),\n        ));\n\n      numVisiblePages = getNumVisiblePages();\n      if (enablePeek && numVisiblePages < numPages) {\n        // Not all pages fit now and we will add a \"peek\" from the pages on the\n        // edge.\n        // Re-calculate with peek added in case the resultant page size when we\n        // add the \"peek\" will make it smaller than the min.\n        numVisiblePages = getNumVisiblePages(true);\n      }\n\n      logger?.debug8(\"Pager resized\", { gap, containerSize, numVisiblePages });\n    } // otherwise just a page transition\n\n    const currPageNum = widget.getCurrentPageNum();\n    const prevPageNum = widget.getPreviousPageNum();\n    const numHidden = numPages - numVisiblePages;\n    const hasPeek = enablePeek && numVisiblePages < numPages;\n\n    // centre the current page as much as possible\n    let visibleStart = currPageNum - (numVisiblePages - 1) / 2;\n    let isAtEdge = false;\n\n    if (visibleStart >= numHidden + 1) {\n      visibleStart = numHidden + 1;\n      isAtEdge = true;\n    } else if (visibleStart <= 1) {\n      visibleStart = 1;\n      isAtEdge = true;\n    }\n\n    let numTranslated = 0;\n    if (hasPeek) {\n      numTranslated = MH.max(0, visibleStart - 1 - (isAtEdge ? 0.5 : 0.25));\n    } else {\n      numTranslated =\n        (prevPageNum > currPageNum ? MH.floor : MH.ceil)(visibleStart) - 1;\n    }\n\n    const numVisibleGaps = !hasPeek\n      ? numVisiblePages - 1\n      : isAtEdge || numVisiblePages % 2 === 0\n        ? numVisiblePages\n        : numVisiblePages + 1;\n\n    const fractionalNumVisiblePages = hasPeek\n      ? numVisiblePages + 0.5\n      : numVisiblePages;\n\n    logger?.debug8(\"Carousel calculations\", {\n      currPageNum,\n      prevPageNum,\n      visibleStart,\n      isAtEdge,\n      numVisiblePages,\n      numVisibleGaps,\n      numTranslated,\n    });\n\n    setData(element, PREFIX_VISIBLE_PAGES, fractionalNumVisiblePages + \"\");\n    setStyleProp(element, VAR_VISIBLE_PAGES, fractionalNumVisiblePages + \"\");\n    setStyleProp(element, VAR_VISIBLE_GAPS, numVisibleGaps + \"\");\n    setStyleProp(element, VAR_TRANSLATED_PAGES, numTranslated + \"\");\n    setStyleProp(element, VAR_TRANSLATED_GAPS, MH.floor(numTranslated) + \"\");\n  };\n\n  const getGestureOptions = (\n    directions: Direction | Direction[] | undefined,\n  ): OnGestureOptions => {\n    return {\n      devices: MH.isBoolean(useGestures) // i.e. true; if it's false, then gestureWatcher is null\n        ? undefined // all devices\n        : useGestures,\n      intents: [MC.S_DRAG, MC.S_SCROLL],\n      directions,\n      deltaThreshold: 25,\n      preventDefault,\n    };\n  };\n\n  const scrollToPager = async () => {\n    scrollWatcher.scrollTo(element, {\n      scrollable: await fetchClosestScrollable(element),\n    });\n  };\n\n  const transitionOnGesture = (target: EventTarget, data: GestureData) => {\n    const swapDirection = data.intent === MC.S_DRAG;\n\n    if (MH.includes([MC.S_LEFT, MC.S_UP], data.direction)) {\n      (swapDirection ? methods._nextPage : methods._prevPage)(data);\n    } else {\n      (swapDirection ? methods._prevPage : methods._nextPage)(data);\n    }\n  };\n\n  const addWatchers = () => {\n    gestureWatcher?.onGesture(\n      element,\n      transitionOnGesture,\n      getGestureOptions(\n        alignGestureDirection\n          ? isHorizontal\n            ? [MC.S_LEFT, MC.S_RIGHT]\n            : [MC.S_UP, MC.S_DOWN]\n          : undefined, // all directions\n      ),\n    );\n\n    sizeWatcher?.onResize(recalculateCarouselProps, { target: element });\n    viewWatcher?.onView(element, scrollToPager, { views: \"at\" });\n  };\n\n  const removeWatchers = () => {\n    gestureWatcher?.offGesture(element, transitionOnGesture);\n    sizeWatcher?.offResize(recalculateCarouselProps, element);\n    viewWatcher?.offView(element, scrollToPager);\n  };\n\n  const getPageNumForEvent = (event: Event) => {\n    const target = MH.currentTargetOf(event);\n    return MH.isElement(target)\n      ? toInt(getData(target, PREFIX_PAGE_NUMBER))\n      : 0;\n  };\n\n  const toggleClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._togglePage(pageNum);\n  };\n\n  const switchClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._goToPage(pageNum);\n  };\n\n  const nextSwitchClickListener = () => methods._nextPage();\n  const prevSwitchClickListener = () => methods._prevPage();\n\n  // SETUP ------------------------------\n\n  widget.onDisable(removeWatchers);\n  widget.onEnable(addWatchers);\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n    delDataNow(element, MC.PREFIX_ORIENTATION);\n    delDataNow(element, PREFIX_STYLE);\n    delDataNow(element, PREFIX_IS_FULLSCREEN);\n    delDataNow(element, PREFIX_USE_PARALLAX);\n    delDataNow(element, PREFIX_CURRENT_PAGE);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST_ENABLED);\n    delDataNow(element, PREFIX_TOTAL_PAGES);\n    delDataNow(element, PREFIX_VISIBLE_PAGES);\n    delStylePropNow(element, VAR_CURRENT_PAGE);\n    delStylePropNow(element, VAR_TOTAL_PAGES);\n    delStylePropNow(element, VAR_VISIBLE_PAGES);\n    delStylePropNow(element, VAR_VISIBLE_GAPS);\n    delStylePropNow(element, VAR_TRANSLATED_PAGES);\n    delStylePropNow(element, VAR_TRANSLATED_GAPS);\n\n    for (let idx = 0; idx < MH.lengthOf(pages); idx++) {\n      removeClassesNow(pages[idx], PREFIX_PAGE);\n\n      for (const [el, listener] of [\n        [pages[idx], null],\n        [toggles[idx], toggleClickListener],\n        [switches[idx], switchClickListener],\n      ] as const) {\n        if (el) {\n          delDataNow(el, PREFIX_PAGE_STATE);\n          delDataNow(el, PREFIX_PAGE_NUMBER);\n          delStylePropNow(el, VAR_PAGE_NUMBER);\n          if (listener) {\n            removeEventListenerFrom(el, MC.S_CLICK, listener);\n          }\n        }\n      }\n\n      MH.delAttr(pages[idx], S_ARIA_CURRENT);\n    }\n\n    if (nextSwitch) {\n      removeEventListenerFrom(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n    }\n\n    if (prevSwitch) {\n      removeEventListenerFrom(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n    }\n\n    removeClassesNow(element, PREFIX_ROOT);\n    if (pageContainer) {\n      removeClassesNow(pageContainer, PREFIX_PAGE_CONTAINER);\n    }\n  });\n\n  if (isCarousel) {\n    widget.onTransition(() => recalculateCarouselProps());\n  }\n\n  addWatchers();\n  addClasses(element, PREFIX_ROOT);\n  if (pageContainer) {\n    addClasses(pageContainer, PREFIX_PAGE_CONTAINER);\n  }\n\n  const numPages = MH.lengthOf(pages);\n  let numVisiblePages = numPages;\n\n  setData(element, MC.PREFIX_ORIENTATION, orientation);\n  setData(element, PREFIX_STYLE, pagerStyle);\n  setBooleanData(element, PREFIX_IS_FULLSCREEN, isFullscreen);\n  setBooleanData(element, PREFIX_USE_PARALLAX, isParallax);\n  setData(element, PREFIX_TOTAL_PAGES, numPages + \"\");\n  setStyleProp(element, VAR_TOTAL_PAGES, (numPages || 1) + \"\");\n\n  for (const page of pages) {\n    disableInitialTransition(page);\n    addClasses(page, PREFIX_PAGE);\n  }\n\n  for (let idx = 0; idx < numPages; idx++) {\n    setPageNumber(components, idx + 1);\n    setPageState(components, idx + 1, S_NEXT);\n\n    for (const [el, listener] of [\n      [toggles[idx], toggleClickListener],\n      [switches[idx], switchClickListener],\n    ] as const) {\n      if (el) {\n        addEventListenerTo(el, MC.S_CLICK, listener);\n      }\n    }\n  }\n\n  if (nextSwitch) {\n    addEventListenerTo(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n  }\n\n  if (prevSwitch) {\n    addEventListenerTo(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n  }\n\n  if (initialPage < 1 || initialPage > numPages) {\n    initialPage = 1;\n  }\n  methods._goToPage(initialPage);\n};\n\nconst getMethods = (\n  widget: Pager,\n  components: Components,\n  element: Element,\n  config: PagerConfig | undefined,\n) => {\n  const pages = components._pages;\n  const scrollWatcher = ScrollWatcher.reuse();\n  const isFullscreen = config?.fullscreen;\n  const disabledPages: Record<number, boolean> = {};\n  const callbacks = MH.newSet<WidgetCallback>();\n\n  const fetchScrollOptions = async (): Promise<ScrollOptions> => ({\n    scrollable: await fetchClosestScrollable(element),\n    // default amount is already 100%\n    asFractionOf: \"visible\",\n    weCanInterrupt: true,\n  });\n\n  let currPageNum = -1;\n  let lastPageNum = -1;\n  let lastTransition = 0;\n\n  const canTransition = (gestureData?: GestureData) => {\n    if (widget.isDisabled()) {\n      return false;\n    }\n\n    if (gestureData?.device !== MC.S_WHEEL) {\n      return true;\n    }\n\n    const timeNow = MH.timeNow();\n    if (timeNow - lastTransition > MIN_TIME_BETWEEN_WHEEL) {\n      lastTransition = timeNow;\n      return true;\n    }\n\n    return false;\n  };\n\n  const goToPage = async (pageNum: number, gestureData?: GestureData) => {\n    pageNum = toInt(pageNum, -1);\n    if (pageNum === currPageNum || !canTransition(gestureData)) {\n      return;\n    }\n\n    const numPages = MH.lengthOf(pages);\n\n    if (\n      (currPageNum === 1 && pageNum === 0) ||\n      (currPageNum === numPages && pageNum === numPages + 1)\n    ) {\n      // next/prev page beyond last/first\n      if (isFullscreen) {\n        scrollWatcher.scroll(\n          pageNum\n            ? gestureData?.direction === MC.S_RIGHT\n              ? MC.S_RIGHT\n              : MC.S_DOWN\n            : gestureData?.direction === MC.S_LEFT\n              ? MC.S_LEFT\n              : MC.S_UP,\n          await fetchScrollOptions(),\n        ); // no need to await\n      }\n\n      return;\n    }\n\n    if (isPageDisabled(pageNum) || pageNum < 1 || pageNum > numPages) {\n      // invalid or disabled\n      return;\n    }\n\n    lastPageNum = currPageNum > 0 ? currPageNum : pageNum;\n    currPageNum = pageNum;\n\n    for (const callback of callbacks) {\n      await callback.invoke(widget);\n    }\n\n    MH.delAttr(pages[lastPageNum - 1], S_ARIA_CURRENT);\n    for (\n      let n = lastPageNum;\n      n !== currPageNum;\n      currPageNum < lastPageNum ? n-- : n++\n    ) {\n      if (!isPageDisabled(n)) {\n        setPageState(\n          components,\n          n,\n          currPageNum < lastPageNum ? S_NEXT : S_COVERED,\n        );\n      }\n    }\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: numPages },\n      isPageDisabled,\n    );\n    MH.setAttr(pages[currPageNum - 1], S_ARIA_CURRENT);\n    await setPageState(components, currPageNum, S_CURRENT);\n  };\n\n  const nextPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum + 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage++;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const prevPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum - 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage--;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const isPageDisabled = (pageNum: number) => disabledPages[pageNum] === true;\n\n  const disablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || pageNum < 1 || pageNum > MH.lengthOf(pages)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = true;\n\n    if (pageNum === currPageNum) {\n      await prevPage();\n\n      if (pageNum === currPageNum) {\n        // was the first enabled one\n        await nextPage();\n\n        if (pageNum === currPageNum) {\n          // was the only enabled one\n          disabledPages[pageNum] = false;\n          return;\n        }\n      }\n    }\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: MH.lengthOf(pages) },\n      isPageDisabled,\n    );\n    await setPageState(components, pageNum, MC.S_DISABLED);\n  };\n\n  const enablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || !isPageDisabled(pageNum)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = false;\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: MH.lengthOf(pages) },\n      isPageDisabled,\n    );\n    await setPageState(\n      components,\n      pageNum,\n      pageNum < currPageNum ? S_COVERED : S_NEXT,\n    );\n  };\n\n  const togglePage = (pageNum: number) =>\n    isPageDisabled(pageNum) ? enablePage(pageNum) : disablePage(pageNum);\n\n  const onTransition = (handler: WidgetHandler) =>\n    callbacks.add(wrapCallback(handler));\n\n  return {\n    _nextPage: nextPage,\n    _prevPage: prevPage,\n    _goToPage: goToPage,\n    _disablePage: disablePage,\n    _enablePage: enablePage,\n    _togglePage: togglePage,\n    _isPageDisabled: isPageDisabled,\n    _getCurrentPage: () => pages[currPageNum - 1],\n    _getPreviousPage: () => pages[lastPageNum - 1],\n    _getCurrentPageNum: () => (MH.lengthOf(pages) > 0 ? currPageNum : 0),\n    _getPreviousPageNum: () => (MH.lengthOf(pages) > 0 ? lastPageNum : 0),\n    _onTransition: onTransition,\n  };\n};\n"],"mappings":"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","ignoreList":[]}