{"version":3,"file":"lisn.es.js","sources":["../../lisn.js/src/ts/globals/minification-constants.ts","../../lisn.js/src/ts/globals/errors.ts","../../lisn.js/src/ts/globals/minification-helpers.ts","../../lisn.js/src/ts/globals/settings.ts","../../lisn.js/src/ts/utils/math.ts","../../lisn.js/src/ts/utils/misc.ts","../../lisn.js/src/ts/utils/text.ts","../../lisn.js/src/ts/utils/validation.ts","../../lisn.js/src/ts/modules/bit-spaces.ts","../../lisn.js/src/ts/utils/dom.ts","../../lisn.js/src/ts/utils/tasks.ts","../../lisn.js/src/ts/modules/callback.ts","../../lisn.js/src/ts/utils/log.ts","../../lisn.js/src/ts/utils/dom-optimize.ts","../../lisn.js/src/ts/utils/dom-query.ts","../../lisn.js/src/ts/utils/css-alter.ts","../../lisn.js/src/ts/utils/dom-alter.ts","../../lisn.js/src/ts/utils/dom-events.ts","../../lisn.js/src/ts/modules/x-map.ts","../../lisn.js/src/ts/watchers/dom-watcher.ts","../../lisn.js/src/ts/utils/directions.ts","../../lisn.js/src/ts/utils/event.ts","../../lisn.js/src/ts/utils/gesture.ts","../../lisn.js/src/ts/utils/gesture-key.ts","../../lisn.js/src/ts/utils/gesture-pointer.ts","../../lisn.js/src/ts/utils/gesture-touch.ts","../../lisn.js/src/ts/utils/normalize-wheel.ts","../../lisn.js/src/ts/utils/gesture-wheel.ts","../../lisn.js/src/ts/watchers/gesture-watcher.ts","../../lisn.js/src/ts/utils/layout.ts","../../lisn.js/src/ts/utils/animations.ts","../../lisn.js/src/ts/utils/scroll.ts","../../lisn.js/src/ts/utils/overlays.ts","../../lisn.js/src/ts/utils/size.ts","../../lisn.js/src/ts/modules/x-resize-observer.ts","../../lisn.js/src/ts/watchers/size-watcher.ts","../../lisn.js/src/ts/watchers/layout-watcher.ts","../../lisn.js/src/ts/utils/pointer.ts","../../lisn.js/src/ts/watchers/pointer-watcher.ts","../../lisn.js/src/ts/watchers/scroll-watcher.ts","../../lisn.js/src/ts/utils/views.ts","../../lisn.js/src/ts/modules/x-intersection-observer.ts","../../lisn.js/src/ts/watchers/view-watcher.ts","../../lisn.js/src/ts/watchers/index.ts","../../lisn.js/src/ts/bundle-essentials.ts","../../lisn.js/src/ts/widgets/widget.ts","../../lisn.js/src/ts/actions/action.ts","../../lisn.js/src/ts/actions/add-class.ts","../../lisn.js/src/ts/actions/animate.ts","../../lisn.js/src/ts/actions/animate-play.ts","../../lisn.js/src/ts/actions/display.ts","../../lisn.js/src/ts/utils/dom-search.ts","../../lisn.js/src/ts/triggers/trigger.ts","../../lisn.js/src/ts/actions/trigger.ts","../../lisn.js/src/ts/actions/scroll-to.ts","../../lisn.js/src/ts/actions/set-attribute.ts","../../lisn.js/src/ts/actions/show.ts","../../lisn.js/src/ts/utils/position.ts","../../lisn.js/src/ts/widgets/openable.ts","../../lisn.js/src/ts/actions/open.ts","../../lisn.js/src/ts/widgets/pager.ts","../../lisn.js/src/ts/actions/pager.ts","../../lisn.js/src/ts/actions/index.ts","../../lisn.js/src/ts/triggers/check-trigger.ts","../../lisn.js/src/ts/triggers/pointer-trigger.ts","../../lisn.js/src/ts/triggers/layout-trigger.ts","../../lisn.js/src/ts/triggers/load-trigger.ts","../../lisn.js/src/ts/triggers/scroll-trigger.ts","../../lisn.js/src/ts/triggers/view-trigger.ts","../../lisn.js/src/ts/triggers/index.ts","../../lisn.js/src/ts/bundle-slim.ts","../../lisn.js/src/ts/widgets/auto-hide.ts","../../lisn.js/src/ts/widgets/page-loader.ts","../../lisn.js/src/ts/widgets/same-height.ts","../../lisn.js/src/ts/utils/browser.ts","../../lisn.js/src/ts/widgets/scrollbar.ts","../../lisn.js/src/ts/widgets/scroll-to-top.ts","../../lisn.js/src/ts/widgets/sortable.ts","../../lisn.js/src/ts/widgets/track-gesture.ts","../../lisn.js/src/ts/widgets/track-scroll.ts","../../lisn.js/src/ts/widgets/track-size.ts","../../lisn.js/src/ts/widgets/track-view.ts","../../lisn.js/src/ts/widgets/index.ts","../../lisn.js/src/ts/bundle.ts"],"sourcesContent":["/**\n * For minification optimization.\n *\n * @module\n * @ignore\n * @internal\n */\n\nexport const PREFIX = \"lisn\";\nexport const LOG_PREFIX = \"[LISN.js]\";\n\nexport const OBJECT = Object;\nexport const SYMBOL = Symbol;\nexport const ARRAY = Array;\nexport const STRING = String;\nexport const FUNCTION = Function;\nexport const MATH = Math;\nexport const NUMBER = Number;\nexport const PROMISE = Promise;\n\nexport const PI = MATH.PI;\nexport const INFINITY = Infinity;\n\nexport const S_ABSOLUTE = \"absolute\";\nexport const S_FIXED = \"fixed\";\nexport const S_STICKY = \"sticky\";\n\nexport const S_WIDTH = \"width\";\nexport const S_HEIGHT = \"height\";\n\nexport const S_TOP = \"top\";\nexport const S_BOTTOM = \"bottom\";\n\nexport const S_UP = \"up\";\nexport const S_DOWN = \"down\";\n\nexport const S_LEFT = \"left\";\nexport const S_RIGHT = \"right\";\n\nexport const S_AT = \"at\";\nexport const S_ABOVE = \"above\";\nexport const S_BELOW = \"below\";\n\nexport const S_IN = \"in\";\nexport const S_OUT = \"out\";\n\nexport const S_NONE = \"none\";\nexport const S_AMBIGUOUS = \"ambiguous\";\n\nexport const S_ADDED = \"added\";\nexport const S_REMOVED = \"removed\";\nexport const S_ATTRIBUTE = \"attribute\";\n\nexport const S_KEY = \"key\";\nexport const S_MOUSE = \"mouse\";\nexport const S_POINTER = \"pointer\";\nexport const S_TOUCH = \"touch\";\nexport const S_WHEEL = \"wheel\";\nexport const S_CLICK = \"click\";\nexport const S_HOVER = \"hover\";\nexport const S_PRESS = \"press\";\n\nexport const S_SCROLL = \"scroll\";\nexport const S_ZOOM = \"zoom\";\nexport const S_DRAG = \"drag\";\nexport const S_UNKNOWN = \"unknown\";\n\nexport const S_SCROLL_TOP = `${S_SCROLL}Top`;\nexport const S_SCROLL_LEFT = `${S_SCROLL}Left`;\n\nexport const S_SCROLL_WIDTH = `${S_SCROLL}Width`;\nexport const S_SCROLL_HEIGHT = `${S_SCROLL}Height`;\n\nexport const S_CLIENT_WIDTH = \"clientWidth\";\nexport const S_CLIENT_HEIGHT = \"clientHeight\";\n\nexport const S_SCROLL_TOP_FRACTION = `${S_SCROLL}TopFraction`;\nexport const S_SCROLL_LEFT_FRACTION = `${S_SCROLL}LeftFraction`;\n\nexport const S_HORIZONTAL = \"horizontal\";\nexport const S_VERTICAL = \"vertical\";\nexport const S_SKIP_INITIAL = \"skipInitial\";\nexport const S_DEBOUNCE_WINDOW = \"debounceWindow\";\nexport const S_TOGGLE = \"toggle\";\n\nexport const S_CANCEL = \"cancel\";\n\nexport const S_KEYDOWN = `${S_KEY}${S_DOWN}`;\n\nexport const S_MOUSEUP = `${S_MOUSE}${S_UP}`;\nexport const S_MOUSEDOWN = `${S_MOUSE}${S_DOWN}`;\nexport const S_MOUSEMOVE = `${S_MOUSE}move`;\n\nexport const S_POINTERUP = `${S_POINTER}${S_UP}`;\nexport const S_POINTERDOWN = `${S_POINTER}${S_DOWN}`;\nexport const S_POINTERENTER = `${S_POINTER}enter`;\nexport const S_POINTERLEAVE = `${S_POINTER}leave`;\nexport const S_POINTERMOVE = `${S_POINTER}move`;\nexport const S_POINTERCANCEL = `${S_POINTER}${S_CANCEL}`;\n\nexport const S_TOUCHSTART = `${S_TOUCH}start`;\nexport const S_TOUCHEND = `${S_TOUCH}end`;\nexport const S_TOUCHMOVE = `${S_TOUCH}move`;\nexport const S_TOUCHCANCEL = `${S_TOUCH}${S_CANCEL}`;\n\nexport const S_DRAGSTART = `${S_DRAG}start`;\nexport const S_DRAGEND = `${S_DRAG}end`;\nexport const S_DRAGENTER = `${S_DRAG}enter`;\nexport const S_DRAGOVER = `${S_DRAG}over`;\nexport const S_DRAGLEAVE = `${S_DRAG}leave`;\nexport const S_DROP = \"drop\";\n\nexport const S_SELECTSTART = \"selectstart\";\n\nexport const S_ATTRIBUTES = \"attributes\";\nexport const S_CHILD_LIST = \"childList\";\n\nexport const S_REVERSE = \"reverse\";\nexport const S_DRAGGABLE = \"draggable\";\nexport const S_DISABLED = \"disabled\";\n\nexport const S_ARROW = \"arrow\";\n\nexport const S_ROLE = \"role\";\n\nexport const ARIA_PREFIX = \"aria-\";\nexport const S_ARIA_CONTROLS = ARIA_PREFIX + \"controls\";\n\nexport const PREFIX_WRAPPER = `${PREFIX}-wrapper`;\nexport const PREFIX_INLINE_WRAPPER = `${PREFIX_WRAPPER}-inline`;\nexport const PREFIX_TRANSITION = `${PREFIX}-transition`;\nexport const PREFIX_TRANSITION_DISABLE = `${PREFIX_TRANSITION}__disable`;\nexport const PREFIX_HIDE = `${PREFIX}-hide`;\nexport const PREFIX_SHOW = `${PREFIX}-show`;\nexport const PREFIX_DISPLAY = `${PREFIX}-display`;\nexport const PREFIX_UNDISPLAY = `${PREFIX}-undisplay`;\nexport const PREFIX_PLACE = `${PREFIX}-place`;\nexport const PREFIX_ORIENTATION = `${PREFIX}-orientation`;\nexport const PREFIX_POSITION = `${PREFIX}-position`;\nexport const PREFIX_GHOST = `${PREFIX}-ghost`;\nexport const PREFIX_BORDER_SIZE = `${PREFIX}-border-size`;\nexport const PREFIX_NO_SELECT = `${PREFIX}-no-select`;\nexport const PREFIX_NO_TOUCH_ACTION = `${PREFIX}-no-touch-action`;\nexport const PREFIX_NO_WRAP = `${PREFIX}-no-wrap`;\n\nexport const S_ANIMATE = \"animate\";\nexport const ANIMATE_PREFIX = `${PREFIX}-${S_ANIMATE}__`;\nexport const PREFIX_ANIMATE_DISABLE = `${ANIMATE_PREFIX}disable`;\nexport const PREFIX_ANIMATE_PAUSE = `${ANIMATE_PREFIX}pause`;\nexport const PREFIX_ANIMATE_REVERSE = `${ANIMATE_PREFIX}${S_REVERSE}`;\nexport const PREFIX_ANIMATE_INFINITE = `${ANIMATE_PREFIX}infinite`;\n","/**\n * @module Errors\n */\n\nimport { LOG_PREFIX } from \"@lisn/globals/minification-constants\";\n\n/**\n * Base error type emitted by LISN.\n */\nexport abstract class LisnError extends Error {}\n\n/**\n * Error type emitted for invalid input or incorrect usage of a function.\n */\nexport class LisnUsageError extends LisnError {\n  constructor(message = \"\") {\n    super(`${LOG_PREFIX} Incorrect usage: ${message}`);\n    this.name = \"LisnUsageError\";\n  }\n}\n\n/**\n * Error type emitted if an assertion is wrong => report bug.\n */\nexport class LisnBugError extends LisnError {\n  constructor(message = \"\") {\n    super(`${LOG_PREFIX} Please report a bug: ${message}`);\n    this.name = \"LisnBugError\";\n  }\n}\n","/**\n * For minification optimization\n *\n * @module\n * @ignore\n * @internal\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  BoundingRect,\n  IterableObject,\n  Constructor,\n  InstanceType,\n  MapBase,\n  SetBase,\n  Spread,\n} from \"@lisn/globals/types\";\n\nimport { LisnUsageError, LisnBugError } from \"@lisn/globals/errors\";\n\n// credit: underscore.js\nexport const root =\n  (typeof self === \"object\" && self.self === self && self) ||\n  (typeof global == \"object\" && global.global === global && global) ||\n  Function(\"return this\")() ||\n  {};\n\nexport const userAgent =\n  typeof navigator === \"undefined\" ? \"\" : navigator.userAgent;\n\nexport const kebabToCamelCase = (str: string) =>\n  str.replace(/-./g, (m) => toUpperCase(m.charAt(1)));\n\nexport const camelToKebabCase = (str: string) =>\n  str\n    .replace(/[A-Z][a-z]/g, (m) => \"-\" + toLowerCase(m))\n    .replace(/[A-Z]+/, (m) => \"-\" + toLowerCase(m));\n\nexport const prefixName = (name: string) => `${MC.PREFIX}-${name}`;\n\nexport const prefixCssVar = (name: string) => \"--\" + prefixName(name);\n\nexport const prefixCssJsVar = (name: string) => prefixCssVar(\"js--\" + name);\n\nexport const prefixData = (name: string) => `data-${camelToKebabCase(name)}`;\n\nexport const prefixLisnData = (name: string) => prefixData(prefixName(name));\n\nexport const toLowerCase = (s: string) => s.toLowerCase();\n\nexport const toUpperCase = (s: string) => s.toUpperCase();\n\nexport const timeNow = Date.now.bind(Date);\n\nexport const timeSince = (startTime: number) => timeNow() - startTime;\n\nexport const hasDOM = () => typeof document !== \"undefined\";\n\nexport const getWindow = () => window;\n\nexport const getDoc = () => document;\n\nexport const getDocElement = () => getDoc().documentElement;\n\nexport const getDocScrollingElement = () =>\n  getDoc().scrollingElement as HTMLElement | null;\n\nexport const getBody = () => getDoc().body;\n\nexport const getReadyState = () => getDoc().readyState;\n\nexport const getPointerType = (event: Event) =>\n  isPointerEvent(event)\n    ? event.pointerType\n    : isMouseEvent(event)\n      ? \"mouse\"\n      : null;\n\nexport const onAnimationFrame = (callback: FrameRequestCallback) =>\n  requestAnimationFrame(callback);\n\nexport const createElement = (\n  tagName: string,\n  options?: ElementCreationOptions,\n) => getDoc().createElement(tagName, options);\n\nexport const createButton = (label = \"\", tag = \"button\") => {\n  const btn = createElement(tag);\n  setTabIndex(btn);\n  setAttr(btn, MC.S_ROLE, \"button\");\n  setAttr(btn, MC.ARIA_PREFIX + \"label\", label);\n  return btn;\n};\n\nexport const isNullish = (v: unknown): v is null | undefined =>\n  v === undefined || v === null;\n\nexport const isEmpty = (v: unknown): v is null | undefined | \"\" =>\n  isNullish(v) || v === \"\";\n\nexport const isIterableObject = (v: unknown): v is IterableObject<unknown> =>\n  isNonPrimitive(v) && MC.SYMBOL.iterator in v;\n\nexport const isArray = (v: unknown) => isInstanceOf(v, MC.ARRAY);\n\nexport const isObject = (v: unknown) => isInstanceOf(v, MC.OBJECT);\n\nexport const isNonPrimitive = (v: unknown): v is object =>\n  v !== null && typeOf(v) === \"object\";\n\n// only primitive number\nexport const isNumber = (v: unknown): v is number => typeOf(v) === \"number\";\n\n/* eslint-disable-next-line @typescript-eslint/no-wrapper-object-types */\nexport const isString = (v: unknown): v is string | String =>\n  typeOf(v) === \"string\" || isInstanceOf(v, MC.STRING);\n\nexport const isLiteralString = (v: unknown): v is string =>\n  typeOf(v) === \"string\";\n\nexport const isBoolean = (v: unknown): v is boolean => typeOf(v) === \"boolean\";\n\n/* eslint-disable-next-line @typescript-eslint/no-unsafe-function-type */\nexport const isFunction = (v: unknown): v is Function =>\n  typeOf(v) === \"function\" || isInstanceOf(v, MC.FUNCTION);\n\nexport const isDoc = (target: unknown): target is Document =>\n  target === getDoc();\n\nexport const isMouseEvent = (event: Event): event is MouseEvent =>\n  isInstanceOf(event, MouseEvent);\n\nexport const isPointerEvent = (event: Event): event is PointerEvent =>\n  typeof PointerEvent !== \"undefined\" && isInstanceOf(event, PointerEvent);\n\nexport const isTouchPointerEvent = (event: Event): event is PointerEvent =>\n  isPointerEvent(event) && getPointerType(event) === MC.S_TOUCH;\n\nexport const isWheelEvent = (event: Event): event is WheelEvent =>\n  isInstanceOf(event, WheelEvent);\n\nexport const isKeyboardEvent = (event: Event): event is KeyboardEvent =>\n  isInstanceOf(event, KeyboardEvent);\n\nexport const isTouchEvent = (event: Event): event is TouchEvent =>\n  typeof TouchEvent !== \"undefined\" && isInstanceOf(event, TouchEvent);\n\nexport const isNode = (target: unknown) => isInstanceOf(target, Node);\n\nexport const isElement = (target: unknown) => isInstanceOf(target, Element);\n\nexport const isHTMLElement = (target: unknown) =>\n  isInstanceOf(target, HTMLElement);\n\nexport const isNodeBAfterA = (nodeA: Node, nodeB: Node) =>\n  (nodeA.compareDocumentPosition(nodeB) & Node.DOCUMENT_POSITION_FOLLOWING) !==\n  0;\n\nexport const strReplace = (\n  s: string,\n  match: string | RegExp,\n  replacement: string,\n) => s.replace(match, replacement);\n\nexport const setTimer = root.setTimeout.bind(root);\n\nexport const clearTimer = root.clearTimeout.bind(root);\n\nexport const getBoundingClientRect = (element: Element) =>\n  element.getBoundingClientRect();\n\n// Copy size properties explicitly to another object so they can be used with\n// the spread operator (DOMRect/DOMRectReadOnly's properties are not enumerable)\nexport const copyBoundingRectProps = (rect: BoundingRect): BoundingRect => {\n  return {\n    x: rect.x,\n    left: rect.left,\n    right: rect.right,\n    [MC.S_WIDTH]: rect[MC.S_WIDTH],\n    y: rect.y,\n    top: rect.top,\n    bottom: rect.bottom,\n    [MC.S_HEIGHT]: rect[MC.S_HEIGHT],\n  };\n};\n\nexport const querySelector = (root: Element | Document, selector: string) =>\n  root.querySelector(selector);\n\nexport const querySelectorAll = (root: Element | Document, selector: string) =>\n  root.querySelectorAll(selector);\n\nexport const docQuerySelector = (selector: string) =>\n  querySelector(getDoc(), selector);\n\nexport const docQuerySelectorAll = (selector: string) =>\n  querySelectorAll(getDoc(), selector);\n\nexport const getElementById = (id: string) => getDoc().getElementById(id);\n\nexport const getAttr = (element: Element, name: string) =>\n  element.getAttribute(name);\n\nexport const setAttr = (element: Element, name: string, value = \"true\") =>\n  element.setAttribute(name, value);\n\nexport const unsetAttr = (element: Element, name: string) =>\n  element.setAttribute(name, \"false\");\n\nexport const delAttr = (element: Element, name: string) =>\n  element.removeAttribute(name);\n\nexport const includes = (\n  arr: readonly unknown[] | string,\n  v: unknown,\n  startAt?: number,\n) => (arr.indexOf as (v: unknown, startAt?: number) => number)(v, startAt) >= 0;\n\nexport const every = <\n  A extends readonly unknown[],\n  C extends ArrayCallbackFn<A[number]>,\n>(\n  array: A,\n  predicate: C,\n) => array.every(predicate);\n\nexport const some = <\n  A extends readonly unknown[],\n  C extends ArrayCallbackFn<A[number]>,\n>(\n  array: A,\n  predicate: C,\n) => array.some(predicate);\n\nexport const filter = <\n  A extends readonly unknown[],\n  T extends A[number],\n  C extends ArrayCallbackFn<A[number]> | FilterFnTypeP<A[number], T>,\n>(\n  array: A,\n  filterFn: C,\n) => array.filter(filterFn) as FilteredType<C, A[number], T>[];\n\nexport const filterBlank = <A extends readonly unknown[]>(\n  array: A | null | undefined,\n) => {\n  const result = array\n    ? filter(array, (v): v is NonNullable<A[number]> => !isEmpty(v))\n    : undefined;\n\n  return lengthOf(result) ? result : undefined;\n};\n\nexport const sizeOf = (obj: { size: number } | null | undefined) =>\n  obj?.size ?? 0;\n\nexport const lengthOf = (obj: { length: number } | null | undefined) =>\n  obj?.length ?? 0;\n\nexport const lastOf = <A extends readonly unknown[]>(a: A | null | undefined) =>\n  a?.slice(-1)[0] as LastElement<A>;\n\nexport const firstOf = <A extends readonly unknown[]>(\n  a: A | null | undefined,\n) => a?.slice(0, 1)[0] as FirstElement<A>;\n\nexport const tagName = (element: Element) => element.tagName;\n\nexport const hasTagName = (element: Element, tag: string) =>\n  toLowerCase(tagName(element)) === toLowerCase(tag);\n\nexport const preventDefault = (event: Event) => event.preventDefault();\n\nexport const arrayFrom = MC.ARRAY.from.bind(MC.ARRAY);\n\nexport const keysOf = <T extends Record<string | symbol, unknown>>(\n  obj: T,\n): Array<keyof T & string> => MC.OBJECT.keys(obj);\n\nexport const defineProperty = MC.OBJECT.defineProperty.bind(MC.OBJECT);\n\n// use it in place of object spread\nexport const merge = <A extends readonly (object | null | undefined)[]>(\n  ...a: [...A]\n) => {\n  return MC.OBJECT.assign({}, ...a) as Spread<A>;\n};\n\nexport const copyObject = <T extends object | undefined>(obj: T) => merge(obj);\n\nexport const promiseResolve = MC.PROMISE.resolve.bind(MC.PROMISE);\n\nexport const promiseAll = MC.PROMISE.all.bind(MC.PROMISE);\n\nexport const assign = MC.OBJECT.assign.bind(MC.OBJECT);\n\nexport const freezeObj = MC.OBJECT.freeze.bind(MC.OBJECT);\n\nexport const hasOwnProp = (o: object, prop: string | symbol) =>\n  MC.OBJECT.prototype.hasOwnProperty.call(o, prop);\n\nexport const preventExtensions = MC.OBJECT.preventExtensions.bind(MC.OBJECT);\n\nexport const stringify = JSON.stringify.bind(JSON);\n\nexport const floor = MC.MATH.floor.bind(MC.MATH);\n\nexport const ceil = MC.MATH.ceil.bind(MC.MATH);\n\nexport const log2 = MC.MATH.log2.bind(MC.MATH);\n\nexport const sqrt = MC.MATH.sqrt.bind(MC.MATH);\n\nexport const max = MC.MATH.max.bind(MC.MATH);\n\nexport const min = MC.MATH.min.bind(MC.MATH);\n\nexport const abs = MC.MATH.abs.bind(MC.MATH);\n\nexport const round = MC.MATH.round.bind(MC.MATH);\n\nexport const pow = MC.MATH.pow.bind(MC.MATH);\n\nexport const exp = MC.MATH.exp.bind(MC.MATH);\n\nexport const parseFloat = MC.NUMBER.parseFloat.bind(MC.NUMBER);\n\nexport const isNaN = MC.NUMBER.isNaN.bind(MC.NUMBER);\n\nexport const isInstanceOf = <C extends Constructor<unknown>>(\n  value: unknown,\n  Class: C,\n): value is InstanceType<C> => value instanceof Class;\n\nexport const constructorOf = (obj: object) => obj.constructor;\n\nexport const typeOf = (obj: unknown) => typeof obj;\n\nexport const typeOrClassOf = (obj: unknown) =>\n  isObject(obj) ? constructorOf(obj)?.name : typeOf(obj);\n\nexport const parentOf = (element: Element | undefined | null) =>\n  element?.parentElement ?? null;\n\nexport const childrenOf = (element: Element | undefined | null) =>\n  element?.children || [];\n\nexport const targetOf = <O extends { target?: unknown } | null | undefined>(\n  obj: O,\n) =>\n  obj?.target as O extends { target: infer T }\n    ? T\n    : O extends { target?: infer T }\n      ? T | undefined\n      : undefined;\n\nexport const currentTargetOf = <\n  O extends { currentTarget?: unknown } | null | undefined,\n>(\n  obj: O,\n) =>\n  obj?.currentTarget as O extends { currentTarget: infer T }\n    ? T\n    : O extends { currentTarget?: infer T }\n      ? T | undefined\n      : undefined;\n\nexport const classList = <T extends Element | null | undefined>(element: T) =>\n  element?.classList as T extends Element ? DOMTokenList : undefined;\n\nconst S_TABINDEX = \"tabindex\";\nexport const getTabIndex = (element: Element) => getAttr(element, S_TABINDEX);\n\nexport const setTabIndex = (element: Element, index = \"0\") =>\n  setAttr(element, S_TABINDEX, index);\n\nexport const unsetTabIndex = (element: Element) => delAttr(element, S_TABINDEX);\n\nexport const remove = (obj: { remove: () => void } | null | undefined) =>\n  obj?.remove();\n\nexport const deleteObjKey = <O extends object>(obj: O, key: keyof O) =>\n  delete obj[key];\n\nexport const deleteKey = <K, V>(\n  map: MapBase<K, V> | SetBase<K> | null | undefined,\n  key: K,\n) => map?.delete(key);\n\nexport const elScrollTo = (\n  element: Element,\n  coords: { top?: number; left?: number },\n  behavior: ScrollBehavior = \"instant\",\n) => element.scrollTo(merge({ behavior }, coords));\n\nexport const elScrollBy = (\n  element: Element,\n  coords: { top?: number; left?: number },\n  behavior: ScrollBehavior = \"instant\",\n) => element.scrollBy(merge({ behavior }, coords));\n\nexport const newPromise = <T>(\n  executor: (\n    resolve: (value: T) => void,\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    reject: (reason?: any) => void,\n  ) => void,\n) => new Promise(executor);\n\nexport const newMap = <K, V>(entries?: readonly (readonly [K, V])[] | null) =>\n  new Map(entries);\n\nexport const newWeakMap = <K extends WeakKey, V>(\n  entries?: readonly (readonly [K, V])[] | null,\n) => new WeakMap(entries);\n\nexport const newSet = <T>(values?: readonly T[] | null) => new Set(values);\n\nexport const newWeakSet = <T extends WeakKey>(values?: readonly T[] | null) =>\n  new WeakSet(values);\n\nexport const newIntersectionObserver = (\n  callback: IntersectionObserverCallback,\n  options?: IntersectionObserverInit,\n) => new IntersectionObserver(callback, options);\n\nexport const newResizeObserver = (callback: ResizeObserverCallback) =>\n  typeof ResizeObserver === \"undefined\" ? null : new ResizeObserver(callback);\n\nexport const newMutationObserver = (callback: MutationCallback) =>\n  new MutationObserver(callback);\n\nexport const usageError = (msg: string) => new LisnUsageError(msg);\n\nexport const bugError = (msg: string) => new LisnBugError(msg);\n\nexport const illegalConstructorError = (useWhat: string) =>\n  usageError(`Illegal constructor. Use ${useWhat}.`);\n\nconst CONSOLE = console;\nexport const consoleDebug = CONSOLE.debug.bind(CONSOLE);\n\nexport const consoleLog = CONSOLE.log.bind(CONSOLE);\n\nexport const consoleInfo = CONSOLE.info.bind(CONSOLE);\n\nexport const consoleWarn = CONSOLE.warn.bind(CONSOLE);\n\nexport const consoleError = CONSOLE.error.bind(CONSOLE);\n\n// --------------------\n\ntype FirstElement<T extends readonly unknown[]> = T extends readonly [\n  infer Head,\n  ...infer Last__ignored,\n]\n  ? Head\n  : T[number] | undefined;\n\ntype LastElement<T extends readonly unknown[]> = T extends readonly [\n  ...infer Head__ignored,\n  infer Last,\n]\n  ? Last\n  : T[number] | undefined;\n\ntype ArrayCallbackFn<V> = (\n  value: V,\n  index: number,\n  array: readonly V[],\n) => unknown;\ntype FilterFnTypeP<V, T extends V> = (\n  value: V,\n  index: number,\n  array: readonly V[],\n) => value is T;\ntype FilteredType<\n  C extends ArrayCallbackFn<V> | FilterFnTypeP<V, T>,\n  V,\n  T extends V,\n> = C extends FilterFnTypeP<V, infer T> ? T : V;\n","/**\n * @module Settings\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\n/**\n * LISN's settings.\n * @readonly\n *\n * If you wish to modify them, then you need to do so immediately after loading\n * LISN before you instantiate any watchers, etc. For example:\n *\n * ```html\n * <!doctype html>\n * <html>\n *   <head>\n *     <meta charset=\"UTF-8\" />\n *     <meta name=\"viewport\" content=\"width=device-width\" />\n *     <script src=\"lisn.js\" charset=\"utf-8\"></script>\n *     <script charset=\"utf-8\">\n *       // modify LISN settings, for example:\n *       LISN.settings.deviceBreakpoints.desktop = 1024;\n *     </script>\n *   </head>\n *   <body>\n *   </body>\n * </html>\n * ```\n */\nexport const settings = MH.preventExtensions({\n  /**\n   * A unique selector (preferably `#some-id`) for the element that holds the\n   * main page content, if other than `document.body`.\n   *\n   * E.g. if your main content is inside a custom scrollable container, rather\n   * than directly in `document.body`, then pass a selector for it here.\n   *\n   * The element must be scrollable, i.e. have a fixed size and `overflow: scroll`.\n   *\n   * **IMPORTANT:** You must set this before initializing any watchers, widgets,\n   * etc. If you are using the HTML API, then you must set this before the\n   * document `readyState` becomes interactive.\n   *\n   * @defaultValue null // document.scrollingElement\n   * @category Generic\n   */\n  mainScrollableElementSelector: null as string | null,\n\n  /**\n   * This setting allows us to automatically wrap certain elements or groups of\n   * elements into a single `div` or `span` element to allow for more reliable\n   * or efficient working of certain features. In particular:\n   *\n   * 1. View tracking using relative offsets and a scrolling root **requires wrapping**\n   *\n   * When using view position tracking with a percentage offset specification\n   * (e.g. `top: 50%`) _and_ a custom root element that is scrollable_ (and\n   * obviously has a size smaller than the content), you **MUST** enable\n   * content wrapping, otherwise the trigger offset elements cannot be\n   * positioned relative to the scrolling _content size_.\n   *\n   * 2. Scroll tracking\n   *\n   * When using scroll tracking, including scrollbars, on a scrolling element\n   * (that obviously has a size smaller than the content), it's recommended for\n   * the content of the scrollable element to be wrapped in a single `div`\n   * container, to allow for more efficient and reliable detection of changes\n   * in the _scrollable content_ size.\n   *\n   * If content wrapping is disabled, when scroll tracking is used on a given\n   * element (other than the root of the document), each of the immediate\n   * children of the scrollable element have their sizes tracked, which could\n   * lead to more resource usage.\n   *\n   * 3. Scrollbars on custom elements\n   *\n   * When you setup a {@link Widgets.Scrollbar} widget for a custom\n   * scrollable element that may not be the main scrollable (and therefore\n   * won't take up the full viewport all the time), then to be able to position\n   * to scrollbar relative to the scrollable element, its content needs to be\n   * wrapped.\n   *\n   * If this setting is OFF, then the scrollbars on custom elements have to\n   * rely on position sticky which doesn't have as wide browser support as the\n   * default option.\n   *\n   * 4. Animating on viewport enter/leave\n   *\n   * For elements that have transforms applied as part of an animation or\n   * transition, if you wish to run or reverse the animation when the element\n   * enters or leaves the viewport, then the transform can interfere with the\n   * viewport tracking. For example, if undoing the animation as soon as the\n   * element leaves the viewport makes it enter it again (because it's moved),\n   * then this will result in a glitch.\n   *\n   * If content wrapping is disabled, then to get around such issues, a dummy\n   * element is positioned on top of the actual element and is the one tracked\n   * across the viewport instead. Either approach could cause issues depending\n   * on your CSS, so it's your choice which one is applied.\n   *\n   * ----------\n   *\n   * **IMPORTANT:** Certain widgets always require wrapping of elements or their\n   * children. This setting only applies in cases where wrapping is optional.\n   * If you can, it's recommended to leave this setting ON. You can still try to\n   * disable wrapping on a per-element basis by setting `data-lisn-no-wrap`\n   * attribute on it. Alternatively, if the elements that need wrapping are\n   * already wrapped in an element with a class `lisn-wrapper`, this will be\n   * used as the wrapper.\n   *\n   * @defaultValue true\n   * @category Generic\n   */\n  contentWrappingAllowed: true,\n  // [TODO v2] rename this setting\n\n  /**\n   * The timeout in milliseconds for waiting for the `document.readyState` to\n   * become `complete`. The timer begins _once the `readyState` becomes\n   * `interactive`_.\n   *\n   * The page will be considered \"ready\" either when the `readyState` becomes\n   * `complete` or this many milliseconds after it becomes `interactive`,\n   * whichever is first.\n   *\n   * Set to 0 or a negative number to disable timeout.\n   *\n   * @defaultValue 2000 // i.e. 2s\n   * @category Generic\n   */\n  pageLoadTimeout: 2000,\n\n  /**\n   * This enables LISN's HTML API. Then the page will be parsed (and watched\n   * for dynamically added elements at any time) for any elements matching a\n   * widget selector. Any element that has a matching CSS class or data\n   * attribute will be setup according to the relevant widget, which may wrap,\n   * clone or add attributes to the element.\n   *\n   * This is enabled by default for bundles, and disabled otherwise.\n   *\n   * **IMPORTANT:** You must set this before the document `readyState` becomes\n   * interactive.\n   *\n   * @defaultValue `false` in general, but `true` in browser bundles\n   * @category Widgets\n   */\n  autoWidgets: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.hideNative | ScrollbarConfig.hideNative}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarHideNative: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.onMobile | ScrollbarConfig.onMobile}.\n   *\n   * @defaultValue false\n   * @category Widgets/Scrollbar\n   */\n  scrollbarOnMobile: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.positionH | ScrollbarConfig.positionH}.\n   *\n   * @defaultValue \"bottom\"\n   * @category Widgets/Scrollbar\n   */\n  scrollbarPositionH: \"bottom\",\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.positionV | ScrollbarConfig.positionV}.\n   *\n   * @defaultValue \"right\"\n   * @category Widgets/Scrollbar\n   */\n  scrollbarPositionV: \"right\",\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.autoHide | ScrollbarConfig.autoHide}.\n   *\n   * @defaultValue -1\n   * @category Widgets/Scrollbar\n   */\n  scrollbarAutoHide: -1,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.clickScroll | ScrollbarConfig.clickScroll}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarClickScroll: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.dragScroll | ScrollbarConfig.dragScroll}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarDragScroll: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.useHandle | ScrollbarConfig.useHandle}.\n   *\n   * @defaultValue false\n   * @category Widgets/Scrollbar\n   */\n  scrollbarUseHandle: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.diffTolerance | SameHeightConfig.diffTolerance}.\n   *\n   * @defaultValue 15\n   * @category Widgets/SameHeight\n   */\n  sameHeightDiffTolerance: 15,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.resizeThreshold | SameHeightConfig.resizeThreshold}.\n   *\n   * @defaultValue 5\n   * @category Widgets/SameHeight\n   */\n  sameHeightResizeThreshold: 5,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.debounceWindow | SameHeightConfig.debounceWindow}.\n   *\n   * @defaultValue 100\n   * @category Widgets/SameHeight\n   */\n  sameHeightDebounceWindow: 100,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.minGap | SameHeightConfig.minGap}.\n   *\n   * @defaultValue 30\n   * @category Widgets/SameHeight\n   */\n  sameHeightMinGap: 30,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.maxFreeR | SameHeightConfig.maxFreeR}.\n   *\n   * @defaultValue 0.4\n   * @category Widgets/SameHeight\n   */\n  sameHeightMaxFreeR: 0.4,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.maxWidthR | SameHeightConfig.maxWidthR}.\n   *\n   * @defaultValue 1.7\n   * @category Widgets/SameHeight\n   */\n  sameHeightMaxWidthR: 1.7,\n\n  /**\n   * Set custom device breakpoints as width in pixels.\n   *\n   * The value of each sets its lower limit, i.e. it specifies a device whose\n   * width is larger than the given value (and up to the next larger one).\n   *\n   * If you specify only some of the below devices, then the other ones will\n   * keep their default breakpoint values.\n   *\n   * Adding device types, other than the ones listed below is not supported.\n   *\n   * @category Device layouts\n   */\n  deviceBreakpoints: {\n    /**\n     * This should be left as 0 as it's the catch-all for anything narrower\n     * than \"mobile-wide\".\n     *\n     * @defaultValue 0\n     */\n    mobile: 0,\n\n    /**\n     * Anything wider than the given value is \"mobile-wide\", up to the value of\n     * \"tablet\".\n     *\n     * @defaultValue 576\n     */\n    \"mobile-wide\": 576,\n\n    /**\n     * Anything wider than the given value is \"tablet\", up to the value of\n     * \"desktop\".\n     *\n     * @defaultValue 768\n     */\n    tablet: 768, // tablet is anything above this (up to desktop)\n\n    /**\n     * Anything wider than the given value is \"desktop\".\n     *\n     * @defaultValue 992\n     */\n    desktop: 992, // desktop is anything above this\n  },\n\n  /**\n   * Set custom aspect ratio breakpoints (as ratio of width to height).\n   *\n   * The value of each sets its lower limit, i.e. it specifies an aspect ratio\n   * that is wider than the given value (and up to the next wider one).\n   *\n   * If you specify only some of the below aspect ratios, then the other ones\n   * will keep their default breakpoint values.\n   *\n   * Adding aspect ratio types, other than the ones listed below is not\n   * supported.\n   *\n   * @category Device layouts\n   */\n  aspectRatioBreakpoints: {\n    /**\n     * This should be left as 0 as it's the catch-all for anything with\n     * a narrower aspect ratio than \"tall\".\n     *\n     * @defaultValue 0\n     */\n    \"very-tall\": 0, // very tall is up to 9:16\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"tall\", up to\n     * the value of \"square\".\n     *\n     * @defaultValue 9 / 16\n     */\n    tall: 9 / 16, // tall is between 9:16 and 3:4\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"square\", up\n     * to the value of \"wide\".\n     *\n     * @defaultValue 3 / 4\n     */\n    square: 3 / 4, // square is between 3:4 and 4:3\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"wide\", up to\n     * the value of \"very-wide\".\n     *\n     * @defaultValue 4 / 3\n     */\n    wide: 4 / 3, // wide is between 4:3 and 16:9\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"very-wide\".\n     *\n     * @defaultValue 16 / 9\n     */\n    \"very-wide\": 16 / 9, // very wide is above 16:9\n  },\n\n  /**\n   * The CSS class that enables light theme.\n   *\n   * **IMPORTANT:** If you change this, you should also change the\n   * `$light-theme-cls` variable in the SCSS configuration, or otherwise add the\n   * following to your CSS:\n   *\n   * :root,\n   * .custom-light-theme-cls {\n   *   --lisn-color-fg: some-dark-color;\n   *   --lisn-color-fg-t: some-dark-color-with-transparency;\n   *   --lisn-color-bg: some-light-color;\n   *   --lisn-color-bg-t: some-light-color-with-transparency;\n   * }\n   */\n  lightThemeClassName: \"light-theme\",\n\n  /**\n   * The CSS class that enables dark theme.\n   *\n   * **IMPORTANT:** If you change this, you should also change the\n   * `$dark-theme-cls` variable in the SCSS configuration, or otherwise add the\n   * following to your CSS:\n   *\n   * .custom-dark-theme-cls {\n   *   --lisn-color-fg: some-light-color;\n   *   --lisn-color-fg-t: some-light-color-with-transparency;\n   *   --lisn-color-bg: some-dark-color;\n   *   --lisn-color-bg-t: some-dark-color-with-transparency;\n   * }\n   */\n  darkThemeClassName: \"dark-theme\",\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some key (arrows) and wheel events (where the browser reports the delta\n   * mode to be LINE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 40\n   * @category Gestures\n   */\n  deltaLineHeight: 40,\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some wheel events (where the browser reports the delta mode to be PAGE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 1600\n   * @category Gestures\n   */\n  deltaPageWidth: 1600,\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some key (PageUp/PageDown/Space) and wheel events (where the browser\n   * reports the delta mode to be PAGE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 800\n   * @category Gestures\n   */\n  deltaPageHeight: 800,\n\n  /**\n   * Controls the debugging verbosity level. Values from 0 (none) to 10 (insane)\n   * are recognized.\n   *\n   * **Note:** Logging is not available in bundles except in the \"debug\" bundle.\n   *\n   * @defaultValue `0` except in the \"debug\" bundle where it defaults to 10\n   * @category Logging\n   */\n  verbosityLevel: 0,\n\n  /**\n   * The URL of the remote logger to connect to. LISN uses\n   * {@link https://socket.io/docs/v4/client-api/ | socket.io-client}\n   * to talk to the client and emits messages on the following namespaces:\n   *\n   * - `console.debug`\n   * - `console.log`\n   * - `console.info`\n   * - `console.warn`\n   * - `console.error`\n   *\n   * There is a simple logging server that ships with LISN, see the source\n   * code repository.\n   *\n   * You can always explicitly disable remote logging on a given page by\n   * setting `disableRemoteLog=1` query parameter in the URL.\n   *\n   * **Note:** Logging is not available in bundles (except in the `debug` bundle).\n   *\n   * @defaultValue null\n   * @category Logging\n   */\n  remoteLoggerURL: null as string | null,\n\n  /**\n   * Enable remote logging only on mobile devices.\n   *\n   * You can always disable remote logging for any page by setting\n   * `disableRemoteLog=1` URL query parameter.\n   *\n   * **Note:** Logging is not available in bundles (except in the `debug` bundle).\n   *\n   * @defaultValue false\n   * @category Logging\n   */\n  remoteLoggerOnMobileOnly: false,\n});\n\n// --------------------\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Point, Vector, AtLeastOne } from \"@lisn/globals/types\";\n\n/**\n * Round a number to the given decimal precision.\n *\n * @category Math\n */\nexport const roundNumTo = (value: number, numDecimal = 0) => {\n  const multiplicationFactor = MH.pow(10, numDecimal);\n  return MH.round(value * multiplicationFactor) / multiplicationFactor;\n};\n\n/**\n * Returns true if the given value is a valid _finite_ number.\n *\n * @category Validation\n */\nexport const isValidNum = (value: unknown): value is number =>\n  MH.isNumber(value) && MC.NUMBER.isFinite(value);\n\n/**\n * If the given value is a valid _finite_ number, it is returned, otherwise\n * the default is returned.\n *\n * @category Math\n */\nexport const toNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = MH.isLiteralString(value) ? MH.parseFloat(value) : value;\n\n  // parseFloat will strip trailing non-numeric characters, so we check that\n  // the parsed number is equal to the string, if it was a string, using loose\n  // equality, in order to make sure the entire string was a number.\n  return isValidNum(numValue) && numValue == value ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid _finite integer_ number, it is returned,\n * otherwise the default is returned.\n *\n * @category Math\n */\nexport const toInt = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  let numValue = toNum(value, null);\n  numValue = numValue === null ? numValue : MH.floor(numValue);\n\n  // Ensure that the parsed int equaled the original by loose equality.\n  return isValidNum(numValue) && numValue == value ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid non-negative _finite_ number, it is returned,\n * otherwise the default is returned.\n *\n * @category Math\n */\nexport const toNonNegNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = toNum(value, null);\n  return numValue !== null && numValue >= 0 ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid positive number, it is returned, otherwise the\n * default is returned.\n *\n * @category Math\n */\nexport const toPosNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = toNum(value, null);\n  return numValue !== null && numValue > 0 ? numValue : defaultValue;\n};\n\n/**\n * Returns the given number bound by min and/or max value.\n *\n * If the value is not a valid number, then `defaultValue` is returned if given\n * (_including if it is null_), otherwise `limits.min` if given and not null,\n * otherwise `limits.max` if given and not null, or finally 0.\n *\n * If the value is outside the bounds, then:\n * - if `defaultValue` is given, `defaultValue` is returned (_including if it\n *   is null_)\n * - otherwise, the min or the max value (whichever one is violated) is\n *   returned\n *\n * @category Math\n */\nexport const toNumWithBounds = <D extends number | false | null = number>(\n  value: unknown,\n  limits: AtLeastOne<{ min: number | null; max: number | null }>,\n  defaultValue?: D,\n): number | D => {\n  const isDefaultGiven = defaultValue !== undefined;\n  const numValue = toNum(value, null);\n  const min = limits?.min ?? null;\n  const max = limits?.max ?? null;\n\n  let result: number | D;\n  if (!isValidNum(numValue)) {\n    result = isDefaultGiven ? defaultValue : (min ?? max ?? 0);\n  } else if (min !== null && numValue < min) {\n    result = isDefaultGiven ? defaultValue : min;\n  } else if (max !== null && numValue > max) {\n    result = isDefaultGiven ? defaultValue : max;\n  } else {\n    result = numValue;\n  }\n\n  return result;\n};\n\n/**\n * Returns the largest absolute value among the given ones.\n *\n * The result is always positive.\n *\n * @category Math\n */\nexport const maxAbs = (...values: number[]) =>\n  MH.max(...values.map((v) => MH.abs(v)));\n\n/**\n * Returns the smallest absolute value among the given ones.\n *\n * The result is always positive.\n *\n * @category Math\n */\nexport const minAbs = (...values: number[]) =>\n  MH.min(...values.map((v) => MH.abs(v)));\n\n/**\n * Returns the value with the largest absolute value among the given ones.\n *\n * The result can be negative.\n *\n * @category Math\n */\nexport const havingMaxAbs = (...values: number[]): number =>\n  MH.lengthOf(values)\n    ? values.sort((a, b) => MH.abs(b) - MH.abs(a))[0]\n    : -MC.INFINITY;\n\n/**\n * Returns the value with the smallest absolute value among the given ones.\n *\n * The result can be negative.\n *\n * @category Math\n */\nexport const havingMinAbs = (...values: number[]) =>\n  MH.lengthOf(values)\n    ? values.sort((a, b) => MH.abs(a) - MH.abs(b))[0]\n    : MC.INFINITY;\n\n/**\n * Returns the angle (in radians) that the vector defined by the given x, y\n * makes with the positive horizontal axis.\n *\n * The angle returned is in the range -PI to PI, not including -PI.\n *\n * @category Math\n */\nexport const hAngle = (x: number, y: number) =>\n  normalizeAngle(MC.MATH.atan2(y, x)); // ensure that -PI is transformed to +PI\n\n/**\n * Normalizes the given angle (in radians) so that it's in the range -PI to PI,\n * not including -PI.\n *\n * @category Math\n */\nexport const normalizeAngle = (a: number) => {\n  // ensure it's positive in the range 0 to 2 PI\n  while (a < 0 || a > MC.PI * 2) {\n    a += (a < 0 ? 1 : -1) * MC.PI * 2;\n  }\n\n  // then, if > PI, offset by - 2PI\n  return a > MC.PI ? a - MC.PI * 2 : a;\n};\n\n/**\n * Converts the given angle in degrees to radians.\n *\n * @category Math\n */\nexport const degToRad = (a: number) => (a * MC.PI) / 180;\n\n/**\n * Converts the given angle in radians to degrees.\n *\n * @category Math\n */\nexport const radToDeg = (a: number) => (a * 180) / MC.PI;\n\n/**\n * Returns true if the given vectors point in the same direction.\n *\n * @param angleDiffThreshold\n *                  Sets the threshold in degrees when comparing the angles of\n *                  two vectors. E.g. for 5 degrees threshold, directions\n *                  whose vectors are within 5 degrees of each other are\n *                  considered parallel.\n *                  It doesn't make sense for this value to be < 0 or >= 90\n *                  degrees. If it is, it's forced to be positive (absolute)\n *                  and <= 89.99.\n *\n * @category Math\n */\nexport const areParallel = (vA: Vector, vB: Vector, angleDiffThreshold = 0) => {\n  const angleA = hAngle(vA[0], vA[1]);\n  const angleB = hAngle(vB[0], vB[1]);\n  angleDiffThreshold = MH.min(89.99, MH.abs(angleDiffThreshold));\n\n  return (\n    MH.abs(normalizeAngle(angleA - angleB)) <= degToRad(angleDiffThreshold)\n  );\n};\n\n/**\n * Returns true if the given vectors point in the opposite direction.\n *\n * @param angleDiffThreshold\n *                  Sets the threshold in degrees when comparing the angles of\n *                  two vectors. E.g. for 5 degrees threshold, directions\n *                  whose vectors are within 175-185 degrees of each other are\n *                  considered antiparallel.\n *                  It doesn't make sense for this value to be < 0 or >= 90\n *                  degrees. If it is, it's forced to be positive (absolute)\n *                  and <= 89.99.\n *\n * @category Math\n */\nexport const areAntiParallel = (\n  vA: Vector,\n  vB: Vector,\n  angleDiffThreshold = 0,\n) => areParallel(vA, [-vB[0], -vB[1]], angleDiffThreshold);\n\n/**\n * Returns the distance between two points on the screen.\n *\n * @category Math\n */\nexport const distanceBetween = (ptA: Point, ptB: Point) =>\n  MH.sqrt(MH.pow(ptA[0] - ptB[0], 2) + MH.pow(ptA[1] - ptB[1], 2));\n\n/**\n * Returns the two roots of the quadratic equation with coefficients\n * `a`, `b` & `c`, i.e. `a * x^2 + b * x + c = 0`\n *\n * The roots may be `NaN` if the quadratic has no real solutions.\n *\n * @category Math\n */\nexport const quadraticRoots = (a: number, b: number, c: number) => {\n  const z = MH.sqrt(b * b - 4 * a * c);\n  return [(-b + z) / (2 * a), (-b - z) / (2 * a)];\n};\n\n/**\n * Returns the value that an \"easing\" quadratic function would have at the\n * given x.\n *\n * @see https://easings.net/#easeInOutQuad\n *\n * @param x Must be between 0 and 1.\n *\n * @returns The current y-axis value between 0 and 1.\n *\n * @category Math\n */\nexport const easeInOutQuad = (x: number) =>\n  x < 0.5 ? 2 * x * x : 1 - MH.pow(-2 * x + 2, 2) / 2;\n\n/**\n * Returns the new position and velocity for a critically damped user-driven\n * spring state toward a current target position.\n *\n * @param [settings.lTarget]       Target final position.\n * @param [settings.dt]            Time step in milliseconds since the last call.\n *                                 Must be small for the returned values to be\n *                                 meaningful.\n * @param [settings.lag]           Lag in milliseconds (how long it should take\n *                                 for it to reach the final position). Must be\n *                                 positive.\n * @param [settings.l = 0]         Current position (starting or one returned by\n *                                 previous call).\n * @param [settings.v = 0]         Current velocity (returned by previous call).\n * @param [settings.precision = 2] Number of decimal places to round position to\n *                                 in order to determine when it's \"done\".\n * @returns Updated position and velocity\n *\n * @since v1.2.0\n *\n * @category Math\n */\nexport const criticallyDamped = (settings: {\n  lTarget: number;\n  dt: number;\n  lag: number;\n  l?: number;\n  v?: number;\n  precision?: number;\n}) => {\n  const { lTarget, precision = 2 } = settings;\n  const lag = toNumWithBounds(settings.lag, { min: 1 }) / 1000; // to seconds\n\n  // Since the position only approaches asymptotically the target it never truly\n  // reaches it exactly we need an approximation to calculate w0. N determines\n  // how far away from the target position we are after `lag` milliseconds.\n  const N = 7;\n  const w0 = N / lag;\n\n  let { l = 0, v = 0, dt } = settings;\n  dt /= 1000; // to seconds\n\n  if (roundNumTo(l - lTarget, precision) === 0) {\n    // we're done\n    l = lTarget;\n    v = 0;\n  } else if (dt > 0) {\n    const A = l - lTarget;\n    const B = v + w0 * A;\n    const e = MH.exp(-w0 * dt);\n\n    l = lTarget + (A + B * dt) * e;\n    v = (B - w0 * (A + B * dt)) * e;\n  }\n\n  return { l, v };\n};\n\n/**\n * Returns an array of object's keys sorted by the numeric value they hold.\n *\n * @category Math\n */\nexport const sortedKeysByVal = <T extends Record<string, number>>(\n  obj: T,\n  descending = false,\n): Array<keyof T> => {\n  if (descending) {\n    return MH.keysOf(obj).sort((x: keyof T, y: keyof T) => obj[y] - obj[x]);\n  }\n\n  return MH.keysOf(obj).sort((x: keyof T, y: keyof T) => obj[x] - obj[y]);\n};\n\n/**\n * Returns the key in the given object which holds the largest numeric value.\n *\n * If the object is empty, returns `undefined`.\n *\n * @category Math\n */\nexport const keyWithMaxVal = (\n  obj: Record<string, number>,\n): string | undefined => {\n  return MH.lastOf(sortedKeysByVal(obj));\n};\n\n/**\n * Returns the key in the given object which holds the smallest numeric value.\n *\n * If the object is empty, returns `undefined`.\n *\n * @category Math\n */\nexport const keyWithMinVal = (\n  obj: Record<string, number>,\n): string | undefined => {\n  return MH.firstOf(sortedKeysByVal(obj));\n};\n\n/**\n * Takes two integers and returns a bitmask that covers all values between\n * 1 << start and 1 << end, _including the starting and ending one_.\n *\n * If pStart > pEnd, they are reversed.\n *\n * getBitmask(start, start) always returns 1 << start\n * getBitmask(start, end) always returns same as getBitmask(end, start)\n *\n * @category Math\n */\nexport const getBitmask = (start: number, end: number): number =>\n  start > end\n    ? getBitmask(end, start)\n    : (~0 >>> (32 - end - 1 + start)) << start;\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { roundNumTo } from \"@lisn/utils/math\";\n\nexport const copyExistingKeys = <T extends object>(fromObj: T, toObj: T) => {\n  for (const key in toObj) {\n    if (!MH.hasOwnProp(toObj, key)) {\n      continue;\n    }\n\n    if (key in fromObj) {\n      if (MH.isNonPrimitive(fromObj[key]) && MH.isNonPrimitive(toObj[key])) {\n        copyExistingKeys(fromObj[key], toObj[key]);\n      } else {\n        toObj[key] = fromObj[key];\n      }\n    }\n  }\n};\n\n// Omits the keys in object keysToRm from obj. This is to avoid hardcording the\n// key names as a string so as to allow minifier to mangle them, and to avoid\n// using object spread.\nexport const omitKeys = <\n  O extends object,\n  R extends { [K in keyof O]?: unknown },\n>(\n  obj: O,\n  keysToRm: R,\n): Omit<O, keyof R> => {\n  const res: Partial<O> = {};\n  let key: keyof O;\n\n  for (key in obj) {\n    if (!(key in keysToRm)) {\n      res[key] = obj[key];\n    }\n  }\n\n  return res as Omit<O, keyof R>;\n};\n\n// Returns true if the two objects are equal. If values are numeric, it will\n// round to the given number of decimal places.\nexport const compareValuesIn = <T extends object>(\n  objA: T,\n  objB: T,\n  roundTo = 3,\n) => {\n  for (const key in objA) {\n    if (!MH.hasOwnProp(objA, key)) {\n      continue;\n    }\n\n    const valA = objA[key];\n    const valB = objB[key];\n\n    if (MH.isNonPrimitive(valA) && MH.isNonPrimitive(valB)) {\n      if (!compareValuesIn(valA, valB)) {\n        return false;\n      }\n    } else if (MH.isNumber(valA) && MH.isNumber(valB)) {\n      if (roundNumTo(valA, roundTo) !== roundNumTo(valB, roundTo)) {\n        return false;\n      }\n    } else if (valA !== valB) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const keyExists = <T extends object>(\n  obj: T,\n  key: string | number | symbol,\n): key is keyof T => MH.isNonPrimitive(obj) && key in obj;\n\nexport const toArrayIfSingle = <T>(value?: T | T[] | null | undefined): T[] =>\n  MH.isArray(value) ? value : !MH.isNullish(value) ? [value] : [];\n\nexport const toBoolean = (value: unknown) =>\n  value === true || value === \"true\" || value === \"\"\n    ? true\n    : MH.isNullish(value) || value === false || value === \"false\"\n      ? false\n      : null;\n\n/**\n * @deprecated\n */\nexport const toBool = toBoolean;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Size, StrRecord } from \"@lisn/globals/types\";\n\n/**\n * Formats an object as a string. It supports more meaningful formatting as\n * string for certain types rather than using the default string\n * representation.\n *\n * **NOTE:** This is not intended for serialization of data that needs to be\n * de-serialized. Only for debugging output.\n *\n * @param value    The value to format as string.\n * @param [maxLen] Maximum length of the returned string. If not given or\n *                 is <= 0, the string is not truncated. Otherwise, if the\n *                 result is longer than maxLen, it is truncated to\n *                 `maxLen - 3` and added a suffix of \"...\".\n *                 Note that if `maxLen` is > 0 but <= 3, the result is\n *                 always \"...\"\n *\n * @category Text\n */\nexport const formatAsString = (value: unknown, maxLen?: number) => {\n  const result = maybeConvertToString(value, false);\n\n  if (!MH.isNullish(maxLen) && maxLen > 0 && MH.lengthOf(result) > maxLen) {\n    return result.slice(0, MH.max(0, maxLen - 3)) + \"...\";\n  }\n\n  return result;\n};\n\n/**\n * Join an array of values as string using separator. It uses\n * {@link formatAsString} rather than the default string representation as\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join | Array:join} would.\n *\n * @param separator The separator to use to delimit each argument.\n * @param args      Objects or values to convert to string and join.\n *\n * @category Text\n */\nexport const joinAsString = (separator: string, ...args: unknown[]) =>\n  args.map((a) => formatAsString(a)).join(separator);\n\n/**\n * Similar to\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split | String.prototype.split}\n * except that\n * 1. `limit` is interpreted as the maximum number of splits, and the\n *   returned array contains `limit + 1` entries. Also if `limit` is given and\n *   the number of substrings is greater than the limit, all the remaining\n *   substrings are present in the final substring.\n * 2. If input is an empty string (or containing only whitespace), returns an\n *    empty array.\n *\n * @example\n * ```javascript\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 0); // -> ['foo, bar, baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 1); // -> ['foo', 'bar, baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 2); // -> ['foo', 'bar', 'baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 3); // -> ['foo', 'bar', 'baz']\n * ```\n *\n * @param trim  If true, entries will be trimmed for whitespace after splitting.\n *\n * @param limit If not given or < 0, the string will be split on every\n *              occurrence of `separator`. Otherwise, it will be split on\n *              the first `limit` number of occurrences of `separator`.\n *\n * @category Text\n */\nexport const splitOn = (\n  input: string,\n  separator: string | RegExp,\n  trim?: boolean,\n  limit?: number,\n) => {\n  if (!input.trim()) {\n    return [];\n  }\n\n  limit ??= -1;\n\n  const output: string[] = [];\n  const addEntry = (s: string) => output.push(trim ? s.trim() : s);\n\n  while (limit--) {\n    let matchIndex = -1,\n      matchLength = 0;\n    if (MH.isLiteralString(separator)) {\n      matchIndex = input.indexOf(separator);\n      matchLength = MH.lengthOf(separator);\n    } else {\n      const match = separator.exec(input);\n      matchIndex = match?.index ?? -1;\n      matchLength = match ? MH.lengthOf(match[0]) : 0;\n    }\n\n    if (matchIndex < 0) {\n      break;\n    }\n\n    addEntry(input.slice(0, matchIndex));\n    input = input.slice(matchIndex + matchLength);\n  }\n\n  addEntry(input);\n  return output;\n};\n\n/**\n * Converts a kebab-cased-string to camelCase.\n * The result is undefined if the input string is not formatted in\n * kebab-case.\n *\n * @category Text\n */\nexport const kebabToCamelCase = MH.kebabToCamelCase;\n\n/**\n * Converts a camelCasedString to kebab-case.\n * The result is undefined if the input string is not formatted in\n * camelCase.\n *\n * @category Text\n */\nexport const camelToKebabCase = MH.camelToKebabCase;\n\n/**\n * Generates a random string of a fixed length.\n *\n * **IMPORTANT:** This is _not_ suitable for cryptographic applications.\n *\n * @param nChars The length of the returned stirng.\n *\n * @category Text\n */\nexport const randId = (nChars = 8) => {\n  const segment = () =>\n    MH.floor(100000 + MC.MATH.random() * 900000).toString(36);\n\n  let s = \"\";\n  while (MH.lengthOf(s) < nChars) {\n    s += segment();\n  }\n  return s.slice(0, nChars);\n};\n\n/**\n * Returns an array of numeric margins in pixels from the given margin string.\n * The string should contain margins in either pixels or percentage; other\n * units are not supported.\n *\n * Percentage values are converted to pixels relative to the given\n * `absoluteSize`: left/right margins relative to the width, and top/bottom\n * margins relative to the height.\n *\n * Note that for the margin property, percentages are always relative to the\n * WIDTH of the parent, so you should pass the parent width as both the width\n * and the height keys in `absoluteSize`. But for IntersectionObserver's\n * `rootMargin`, top/bottom margin is relative to the height of the root, so\n * pass the actual root size.\n *\n * @returns [topMarginInPx, rightMarginInPx, bottomMarginInPx, leftMarginInPx]\n *\n * @category Text\n */\nexport const toMargins = (value: string, absoluteSize: Size) => {\n  const toPxValue = (strValue: string | undefined, index: number) => {\n    let margin = MH.parseFloat(strValue ?? \"\") || 0;\n\n    if (strValue === margin + \"%\") {\n      margin *=\n        index % 2 ? absoluteSize[MC.S_HEIGHT] : absoluteSize[MC.S_WIDTH];\n    }\n\n    return margin;\n  };\n\n  const parts = splitOn(value, \" \", true);\n  const margins: [number, number, number, number] = [\n    // top\n    toPxValue(parts[0], 0),\n    // right\n    toPxValue(parts[1] ?? parts[0], 1),\n    // bottom\n    toPxValue(parts[2] ?? parts[0], 2),\n    // left\n    toPxValue(parts[3] ?? parts[1] ?? parts[0], 3),\n  ];\n\n  return margins;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const objToStrKey = (obj: StrRecord): string =>\n  MH.stringify(flattenForSorting(obj));\n\n// --------------------\n\nconst flattenForSorting = (obj: StrRecord): unknown[] => {\n  const array = MH.isArray(obj)\n    ? obj\n    : MH.keysOf(obj)\n        .sort()\n        .map((k) => obj[k]);\n\n  return array.map((value) => {\n    if (\n      MH.isArray(value) ||\n      (MH.isNonPrimitive(value) && MH.constructorOf(value) === MC.OBJECT)\n    ) {\n      return flattenForSorting(value);\n    }\n    return value;\n  });\n};\n\nconst stringifyReplacer = (key: string, value: unknown) =>\n  key ? maybeConvertToString(value, true) : value;\n\nconst maybeConvertToString = <B extends boolean, V>(\n  value: V,\n  nested: B,\n): B extends false ? string : string | V => {\n  let result: string | V = \"\";\n\n  if (MH.isElement(value)) {\n    const classStr = MH.classList(value).toString().trim();\n\n    result = value.id\n      ? \"#\" + value.id\n      : `<${MH.tagName(value)}${classStr ? ' class=\"' + classStr + '\"' : \"\"}>`;\n\n    //\n  } else if (MH.isInstanceOf(value, Error)) {\n    /* istanbul ignore else */\n    if (\"stack\" in value && MH.isString(value.stack)) {\n      result = value.stack;\n    } else {\n      result = `Error: ${value.message}`;\n    }\n\n    //\n  } else if (MH.isArray(value)) {\n    result =\n      \"[\" +\n      value\n        .map((v) =>\n          MH.isString(v) ? MH.stringify(v) : maybeConvertToString(v, false),\n        )\n        .join(\",\") +\n      \"]\";\n\n    //\n  } else if (MH.isIterableObject(value)) {\n    result =\n      MH.typeOrClassOf(value) +\n      \"(\" +\n      maybeConvertToString(MH.arrayFrom(value), false) +\n      \")\";\n\n    //\n  } else if (MH.isNonPrimitive(value)) {\n    result = nested ? value : MH.stringify(value, stringifyReplacer);\n\n    //\n  } else {\n    // primitive\n    result = nested ? value : MC.STRING(value);\n  }\n\n  return result as B extends false ? string : string | V;\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\n\nimport { CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { toNum } from \"@lisn/utils/math\";\nimport { toBoolean } from \"@lisn/utils/misc\";\nimport { splitOn } from \"@lisn/utils/text\";\n\n/**\n * Returns true if the input is a string array or comma-separated string, whose\n * elements are valid according to the `validator` function.\n *\n * @param allowEmpty If `false`, then input without any entries is\n * considered _invalid_.\n *\n * @category Validation\n */\nexport const isValidStrList = <T extends string = string>(\n  value: unknown,\n  checkFn: (value: string) => value is T,\n  allowEmpty = true,\n): value is CommaSeparatedStr<T> | T[] => {\n  try {\n    const res = validateStrList(\"\", value, checkFn);\n    return allowEmpty || !MH.isNullish(res);\n  } catch (err) {\n    if (MH.isInstanceOf(err, LisnUsageError)) {\n      return false;\n    }\n    throw err;\n  }\n};\n\n/**\n * Returns an array of strings from the given list while validating each one\n * using the `checkFn` function.\n *\n * If it returns without throwing, the input is necessarily valid.\n * If the result is an empty array, it will return `null`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the input is not a string or array of strings, or if any\n *                entries do not pass `checkFn`.\n *\n * @param key Used in the error message thrown\n *\n * @returns `undefined` if the input contains no non-empty values (after\n * trimming whitespace on left/right from each), otherwise a non-empty array of\n * values.\n *\n * @category Validation\n */\nexport const validateStrList = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n): T[] | undefined =>\n  MH.filterBlank(\n    toArray(value)?.map((v) =>\n      _validateString(key, v, checkFn, \"a string or a string array\"),\n    ),\n  );\n\n/**\n * Returns an array of numbers from the given list.\n *\n * If it returns without throwing, the input is necessarily valid.\n * If the result is an empty array, it will return `null`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the input is not a number or array of numbers. Numerical\n *                strings are accepted.\n *\n * @param key Used in the error message thrown\n *\n * @returns `undefined` if the input contains no non-empty values (after\n * trimming whitespace on left/right from each), otherwise a non-empty array of\n * values.\n *\n * @category Validation\n */\nexport const validateNumList = (\n  key: string,\n  value: unknown,\n): number[] | undefined =>\n  MH.filterBlank(\n    toArray(value)?.map((v) =>\n      _validateNumber(key, v, \"a number or a number array\"),\n    ),\n  );\n\n/**\n * Returns a number corresponding to the supplied value, ensuring the supplied\n * value is a valid number or a string containing only a number.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @returns `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateNumber = (key: string, value: unknown) =>\n  _validateNumber(key, value);\n\n/**\n * Returns a boolean corresponding to the given value as follows:\n *\n * - `null` and `undefined` result in `undefined`\n * - `false` and `\"false\"` result in `false`\n * - `\"\"`, `true` and `\"true\"` result in `true`\n * - other values throw an error error\n *\n * Note that an empty string is treated as `true`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is not a valid boolean or boolean string.\n *\n * @returns `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateBoolean = (key: string, value: unknown) =>\n  _validateBoolean(key, value);\n\n/**\n * Returns a valid string from the supplied value, ensuring the supplied value\n * is a string that conforms to the given `checkFn`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @param checkFn If given and the supplied value is a string, then it is\n *                called with the value as a single argument. It must return\n *                true if the value is valid and false otherwise. If it is not\n *                given, then any literal string is accepted.\n *\n * @returns `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n) => _validateString(key, value, checkFn);\n\n/**\n * Like {@link validateString} except it requires input to be given and\n * non-empty.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid or empty.\n *\n * @category Validation\n */\nexport const validateStringRequired = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n): T => {\n  const result = _validateString(key, value, checkFn);\n\n  if (MH.isEmpty(result)) {\n    throw MH.usageError(`'${key}' is required`);\n  }\n\n  return result;\n};\n\n/**\n * Returns a valid boolean or a string from the supplied value, ensuring the\n * supplied value is either a boolean or boolean string (see\n * {@link validateBoolean}), or a string that conforms to the given `checkFn`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @param stringCheckFn If given and the supplied value is a string _other than\n *                      a boolean string_, then it is called with the value as\n *                      a single argument. It must return true if the value is\n *                      valid and false otherwise. If it is not given, then any\n *                      literal string is accepted.\n *\n * @category Validation\n */\nexport const validateBooleanOrString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  stringCheckFn?: (value: string) => value is T,\n) => _validateBooleanOrString(key, value, stringCheckFn);\n\n// --------------------\n\nconst toArray = (value: unknown): unknown[] | undefined => {\n  let result: unknown[] | null;\n  if (MH.isArray(value)) {\n    result = value;\n  } else if (MH.isIterableObject(value)) {\n    result = MH.arrayFrom(value);\n  } else if (MH.isLiteralString(value)) {\n    result = splitOn(value, \",\");\n  } else if (!MH.isNullish(value)) {\n    result = [value];\n  } else {\n    result = null;\n  }\n\n  return result\n    ? MH.filterBlank(result.map((v) => (MH.isLiteralString(v) ? v.trim() : v)))\n    : undefined;\n};\n\nconst _validateNumber = (\n  key: string,\n  value: unknown,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const numVal = toNum(value, null);\n  if (numVal === null) {\n    throw MH.usageError(`'${key}' must be ${typeDescription ?? \"a number\"}`);\n  }\n\n  return numVal;\n};\n\nconst _validateBoolean = (\n  key: string,\n  value: unknown,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const boolVal = toBoolean(value);\n  if (boolVal === null) {\n    throw MH.usageError(\n      `'${key}' must be ${typeDescription ?? '\"true\" or \"false\"'}`,\n    );\n  }\n\n  return boolVal;\n};\n\nconst _validateString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n  typeDescription?: string,\n): (typeof checkFn extends null | undefined ? string : T) | undefined => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  if (!MH.isLiteralString(value)) {\n    throw MH.usageError(`'${key}' must be ${typeDescription ?? \"a string\"}`);\n  } else if (checkFn && !checkFn(value)) {\n    throw MH.usageError(`Invalid value for '${key}'`);\n  }\n\n  return value as typeof checkFn extends null | undefined ? string : T;\n};\n\nconst _validateBooleanOrString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  stringCheckFn?: (value: string) => value is T,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const boolVal = toBoolean(value);\n  if (boolVal !== null) {\n    return boolVal;\n  }\n\n  if (!MH.isLiteralString(value)) {\n    throw MH.usageError(\n      `'${key}' must be ${typeDescription ?? \"a boolean or string\"}`,\n    );\n  }\n\n  return _validateString(key, value, stringCheckFn);\n};\n","/**\n * @module Modules/BitSpaces\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getBitmask } from \"@lisn/utils/math\";\n\nexport type BitPropName = string;\n\n/**\n * A union of all property names in the space.\n */\nexport type BitSpaceKey<S> = S extends BitSpace<infer T> ? T : never;\n\n/**\n * {@link BitSpace} represents a single set of mutually exclusive (or\n * orthogonal) properties.\n *\n * Each property has a numeric value equal to 1 bit-shifted by a certain number\n * of bits.\n *\n * Created using {@link BitSpaces.create}\n *\n * @interface\n */\nexport type BitSpace<T extends BitPropName> = {\n  /**\n   * The starting bit of the space. It's 0 for the first space created in a\n   * given set of {@link BitSpaces}.\n   */\n  start: number;\n\n  /**\n   * The ending bit of the space. It's always equal to\n   * start + (# of properties in space) - 1\n   */\n  end: number;\n\n  /**\n   * A bitmask of all values in the space.\n   */\n  bitmask: number;\n\n  /**\n   * Returns true if the given name is one of the properties in the space.\n   * It is case-sensitive.\n   */\n  has: (p: string) => p is T;\n\n  /**\n   * Takes the names of two properties within the space and returns a bitmask\n   * that covers all values between them _including the starting and ending\n   * one_.*\n   *\n   * If pStart > pEnd, they are reversed.\n   *\n   * * The numeric values of the properties are guaranteed to be in the same\n   *   order, increasing in value, as the keys passed to the `BitSpaces.create`,\n   *   function.\n   *\n   * @param pStart The name of the property that holds the start value.\n   *               If null the bitmask will cover from the lowest property.\n   * @param pEnd   The name of the property that holds the end cut-off value\n   *               for the bitmask. The bitmask with _not_ include pEnd's\n   *               value.\n   *               If null the bitmask will cover to the highest property,\n   *               _including_.\n   *\n   * @returns Returns a non-0 bitmask containing all values in the space between\n   *          the given ones.\n   *          Returns 0 if one or both of the given properties do not exist in\n   *          the space.\n   */\n  bitmaskFor: (pStart?: T | null, pEnd?: T | null) => number;\n\n  /**\n   * Returns the name of the property with the given value, or null if the\n   * value does not correspond to one of the space properties.\n   */\n  nameOf: (val: number) => T | null;\n\n  /**\n   * Holds properties whose numeric values are non-overlapping binary values,\n   * suitable for bitmasking.\n   *\n   * The given properties are set under the \"bit\" key in the object and hold\n   * the numeric value.\n   *\n   * @example\n   * ```javascript\n   * const space = new BitSpaces().create(\"up\", \"down\", \"left\", \"right\");\n   *\n   * // {\n   * //     bit: {\n   * //         up:    1, // at bit 0, i.e. 1 << 0\n   * //         down:  2, // at bit 1, i.e. 1 << 1\n   * //         left:  4, // at bit 2, i.e. 1 << 2\n   * //         right: 8, // at bit 3, i.e. 1 << 3\n   * //     },\n   * //     start:      0,\n   * //     end:        3,\n   * //     bitmask:    15, // 1 << 0 | 1 << 1 | 1 << 2 | 1 << 3\n   * //     has:        (p) => p === \"up\" || p === \"down\" || p === \"left\" || p === \"right\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 1 ? \"up\" : v === 2 ? \"down\" : v === 4 ...\n   * // }\n   *\n   * space.bitmaskFor(); // => space.bitmask (15)\n   * space.bitmaskFor(\"left\"); // => space.bit.left | space.bit.right (12)\n   * space.bitmaskFor(null, \"down\"); // => space.bit.up | space.bit.down (3)\n   * ```\n   */\n  bit: {\n    [key in T]: number;\n  };\n};\n\n/**\n * {@link BitSpaces} represents one or more related {@link BitSpace}s whose bit\n * values will not overlap.\n */\nexport class BitSpaces {\n  /**\n   * Creates and returns a new BitSpace that is bit shifted to the left as\n   * many bits as the ending bit of the previous space created by this\n   * instances, so that each new space created is non-overlapping with previous\n   * ones.\n   *\n   * The numeric values of the properties are guaranteed to be in the same\n   * order, increasing in value, as the keys passed to the function.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the number of bits in the space will exceed 32.\n   *\n   * @example\n   * ```javascript\n   * const spaces = new BitSpaces();\n   * const spaceA = spaces.create(\"up\", \"down\");\n   *\n   * // spaces.nBits   => 2\n   * // spaces.bitmask => 3\n   * //\n   * // spaceA:\n   * // {\n   * //     bit: {\n   * //         up:     1, // at bit 0, i.e. 1 << 0\n   * //         down:   2, // at bit 1, i.e. 1 << 1\n   * //     },\n   * //     start:      0,\n   * //     end:        1,\n   * //     bitmask:    3, // 1 << 0 | 1 << 1\n   * //     has:        (p) => p === \"up\" || p === \"down\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 1 ? \"up\" : v === 2 ? \"down\" : null\n   * // }\n   *\n   * const spaceB = spaces.create(\"left\", \"right\");\n   *\n   * // spaces.nBits   => 4\n   * // spaces.bitmask => 15\n   * //\n   * // spaceB:\n   * // {\n   * //     bit: {\n   * //         left:   4, // at bit 2, i.e. 1 << 2\n   * //         right:  8, // at bit 3, i.e. 1 << 3\n   * //     },\n   * //     start:      2,\n   * //     end:        3,\n   * //     bitmask:    12, // 1 << 2 | 1 << 3\n   * //     has:        (p) => p === \"left\" || p === \"right\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 4 ? \"left\" : v === 8 ? \"right\" : null\n   * // }\n   *\n   * ```\n   */\n  readonly create: <T extends BitPropName>(\n    ...propNames: readonly T[]\n  ) => BitSpace<T>;\n\n  /**\n   * Returns the number of bits all created spaces span, i.e. the end bit of\n   * the one + 1.\n   */\n  readonly nBits!: number;\n\n  /**\n   * Returns a bitmask containing all values in all created spaces.\n   */\n  readonly bitmask!: number;\n\n  constructor() {\n    const counter = newCounter();\n\n    this.create = (...propNames) => newBitSpace(counter, propNames);\n    MH.defineProperty(this, \"nBits\", { get: () => counter._nBits });\n    MH.defineProperty(this, \"bitmask\", { get: () => counter._bitmask });\n  }\n}\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newBitSpaces = () => new BitSpaces();\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const createBitSpace = <T extends BitPropName>(\n  spaces: BitSpaces,\n  ...propNames: readonly T[]\n): BitSpace<T> => spaces.create(...propNames);\n\n// ----------------------------------------\n\ntype BitCounter = {\n  _nBits: number;\n  _bitmask: number;\n};\n\nconst newCounter = (): BitCounter => ({\n  _nBits: 0,\n  _bitmask: 0,\n});\n\nconst newBitSpace = <T extends BitPropName>(\n  counter: BitCounter,\n  propNames: readonly T[],\n): BitSpace<T> => {\n  const start = counter._nBits;\n  const end = start + MH.lengthOf(propNames) - 1;\n  if (end >= 31) {\n    throw MH.usageError(\"BitSpaces overflow\");\n  }\n\n  const bitmask = getBitmask(start, end);\n  const space: BitSpace<T> = {\n    bit: {},\n    start,\n    end,\n    bitmask,\n\n    has: (p) =>\n      MH.isString(p) &&\n      p in space.bit &&\n      MH.isNumber((space.bit as Record<string, unknown>)[p]),\n\n    bitmaskFor: (pStart, pEnd) => {\n      if (\n        (!MH.isEmpty(pStart) && !space.has(pStart)) ||\n        (!MH.isEmpty(pEnd) && !space.has(pEnd))\n      ) {\n        return 0;\n      }\n\n      const thisStart = !MH.isEmpty(pStart)\n        ? MH.log2(space.bit[pStart])\n        : start;\n      const thisEnd = !MH.isEmpty(pEnd) ? MH.log2(space.bit[pEnd]) : end;\n\n      return getBitmask(thisStart, thisEnd);\n    },\n\n    nameOf: (val) => propNames[MH.log2(val) - start] ?? null,\n  } as BitSpace<T>;\n\n  for (const name of propNames) {\n    MH.defineProperty(space.bit, name, {\n      value: 1 << counter._nBits++,\n      enumerable: true,\n    });\n  }\n\n  counter._bitmask |= bitmask;\n\n  return space;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { MutationCategory } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newBitSpaces, createBitSpace } from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid category.\n *\n * @category Validation\n */\nexport const isValidMutationCategory = (\n  category: string,\n): category is MutationCategory => DOM_CATEGORIES_SPACE.has(category);\n\n/**\n * Returns true if the given string or array is a list of valid categories.\n *\n * @category Validation\n */\nexport const isValidMutationCategoryList = (categories: string | string[]) =>\n  isValidStrList(categories, isValidMutationCategory, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const DOM_CATEGORIES_SPACE = createBitSpace<MutationCategory>(\n  newBitSpaces(),\n  MC.S_ADDED,\n  MC.S_REMOVED,\n  MC.S_ATTRIBUTE,\n);\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\n/**\n * @category Tasks\n */\nexport type SchedulerPostTaskOptions = {\n  delay?: number;\n  priority?: TaskPriority;\n  signal?: AbortSignal;\n};\n\n/**\n * @category Tasks\n */\nexport type Scheduler = {\n  postTask<T, P extends readonly unknown[] | []>(\n    callback: (...params: P) => T,\n    options?: SchedulerPostTaskOptions,\n    ...args: P\n  ): Promise<T>;\n};\n\n/**\n * @category Tasks\n */\nexport type TaskPriority = \"user-blocking\" | \"user-visible\" | \"background\";\n\n/* eslint-disable-next-line no-var */\ndeclare var scheduler: Scheduler;\n\n/**\n * Schedules a task with high priority to be executed as soon as possible.\n *\n * It uses {@link https://developer.mozilla.org/en-US/docs/Web/API/Scheduler/postTask | Scheduler:postTask}\n * if available, otherwise falls back to\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MessageChannel | MessageChannel}.\n *\n * @category Tasks\n */\nexport const scheduleHighPriorityTask = (task: () => void) => {\n  if (typeof scheduler !== \"undefined\") {\n    scheduler.postTask(task, {\n      priority: \"user-blocking\",\n    });\n  } else {\n    // Fallback to MessageChannel\n    const channel = new MessageChannel();\n    channel.port1.onmessage = () => {\n      channel.port1.close();\n      task();\n    };\n    channel.port2.postMessage(\"\");\n  }\n};\n\n/**\n * Returns a wrapper around the given handler that is debounced by the given\n * debounce window.\n *\n * @category Tasks\n */\nexport const getDebouncedHandler = <Args extends unknown[]>(\n  debounceWindow: number,\n  handler: (...args: Args) => void,\n) => {\n  if (!debounceWindow) {\n    return handler;\n  }\n\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  let lastArgs: Args;\n\n  return (...args: Args) => {\n    lastArgs = args;\n\n    if (timer === null) {\n      timer = MH.setTimer(async () => {\n        await handler(...lastArgs);\n        timer = null;\n      }, debounceWindow);\n    }\n  };\n};\n\n/**\n * Returns a promise that resolves at least the given number of delay (in\n * milliseconds) later. Uses `setTimeout`.\n *\n * @category Tasks\n */\nexport const waitForDelay = (delay?: number) =>\n  MH.newPromise<void>((resolve) => {\n    MH.setTimer(resolve, delay);\n  });\n","/**\n * @module Modules/Callback\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getDebouncedHandler } from \"@lisn/utils/tasks\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * @typeParam Args See {@link Callback}\n */\nexport type CallbackHandler<Args extends unknown[] = []> = (\n  ...args: Args\n) => CallbackReturnType | Promise<CallbackReturnType>;\n\nexport type CallbackReturnType =\n  | typeof Callback.KEEP\n  | typeof Callback.REMOVE\n  | void;\n\n/**\n * For minification optimization. Exposed through Callback.wrap.\n *\n * @ignore\n * @internal\n */\nexport const wrapCallback = <Args extends unknown[] = []>(\n  handlerOrCallback: CallbackHandler<Args> | Callback<Args>,\n  debounceWindow = 0,\n): Callback<Args> => {\n  const isFunction = MH.isFunction(handlerOrCallback);\n  let isRemoved = () => false;\n\n  if (isFunction) {\n    // check if it's an invoke method\n    const callback = callablesMap.get(handlerOrCallback);\n    if (callback) {\n      return wrapCallback(callback);\n    }\n  } else {\n    isRemoved = handlerOrCallback.isRemoved;\n  }\n\n  const handler: CallbackHandler<Args> = isFunction\n    ? handlerOrCallback\n    : (...args: Args) => handlerOrCallback.invoke(...args);\n\n  const wrapper = new Callback<Args>(\n    getDebouncedHandler(debounceWindow, (...args: Args) => {\n      if (!isRemoved()) {\n        return handler(...args);\n      }\n    }),\n  );\n\n  if (!isFunction) {\n    handlerOrCallback.onRemove(wrapper.remove);\n  }\n\n  return wrapper;\n};\n\n/**\n * {@link Callback} wraps user-supplied callbacks. Supports\n * - removing a callback either when calling {@link remove} or if the user\n *   handler returns {@link Callback.REMOVE}\n * - calling custom {@link onRemove} hooks\n * - debouncing (via {@link wrap})\n * - awaiting on an asynchronous handler and ensuring that the handler does not\n *  run concurrently to itself, i.e. subsequent {@link invoke}s will be queued\n *\n * @typeParam Args The type of arguments that the callback expects.\n */\nexport class Callback<Args extends unknown[] = []> {\n  /**\n   * Possible return value for the handler.\n   *\n   * Do not do anything. Same as not retuning anything from the function.\n   */\n  static readonly KEEP: unique symbol = MC.SYMBOL(\n    \"KEEP\",\n  ) as typeof Callback.KEEP;\n\n  /**\n   * Possible return value for the handler.\n   *\n   * Will remove this callback.\n   */\n  static readonly REMOVE: unique symbol = MC.SYMBOL(\n    \"REMOVE\",\n  ) as typeof Callback.REMOVE;\n\n  /**\n   * Call the handler with the given arguments.\n   *\n   * If the handler is asynchronous, it awaits on it. Furthermore, calls will\n   * always wait for previous calls to this handler to complete first, i.e. it\n   * never runs concurrently to itself. If you need multiple calls to the async\n   * handler to run concurrently, then wrap it in a non-async function that\n   * does not await it.\n   *\n   * The returned promise is rejected in two cases:\n   * - If the callback throws an error or returns a rejected Promise.\n   * - If the callback is removed _after_ you call {@link invoke} but before the\n   *   handler is actually called (while it's waiting in the queue to be called)\n   *   In this case, the rejection reason is {@link Callback.REMOVE}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the callback is already removed.\n   */\n  readonly invoke: (...args: Args) => Promise<void>;\n\n  /**\n   * Mark the callback as removed and call the registered {@link onRemove} hooks.\n   *\n   * Future attempts to call it will result in\n   * {@link Errors.LisnUsageError | LisnUsageError}.\n   */\n  readonly remove: () => void;\n\n  /**\n   * Returns true if the callback has been removed and cannot be called again.\n   */\n  readonly isRemoved: () => boolean;\n\n  /**\n   * Registers the given function to be called when the callback is removed.\n   *\n   * You can call {@link onRemove} multiple times to register multiple hooks.\n   */\n  readonly onRemove: (fn: () => void) => void;\n\n  /**\n   * Wraps the given handler or callback as a callback, optionally debounced by\n   * the given debounce window.\n   *\n   * If the argument is already a callback _or an invoke method of a callback_,\n   * then the wrapper will call that callback and return the same value as it.\n   * It will also set up the returned wrapper callback so that it is removed\n   * when the original (given) callback is removed. However, removing the\n   * returned wrapper callback will _not_ cause the original callback (being\n   * wrapped) to be removed. If you want to do this, then do\n   * `wrapper.onRemove(wrapped.remove)`.\n   *\n   * Note that if the argument is a callback that's already debounced by a\n   * _larger_ window, then `debounceWindow` will have no effect.\n   *\n   * @param debounceWindow If non-0, the callback will be called at most\n   *                       every `debounceWindow` ms. The arguments it will\n   *                       be called with will be the last arguments the\n   *                       wrapper was called with.\n   */\n  static readonly wrap = wrapCallback;\n\n  /**\n   * @param handler The actual function to call. This should return one of\n   *                the known {@link CallbackReturnType} values.\n   */\n  constructor(handler: CallbackHandler<Args>) {\n    const logger = debug\n      ? new debug.Logger({ name: \"Callback\", logAtCreation: handler })\n      : null;\n\n    let isRemoved = false;\n    const id = MC.SYMBOL();\n\n    const onRemove = MH.newSet<() => void>();\n\n    this.isRemoved = () => isRemoved;\n\n    this.remove = () => {\n      if (!isRemoved) {\n        debug: logger?.debug8(\"Removing\");\n        isRemoved = true;\n\n        for (const rmFn of onRemove) {\n          rmFn();\n        }\n\n        CallbackScheduler._clear(id);\n      }\n    };\n\n    this.onRemove = (fn) => onRemove.add(fn);\n\n    this.invoke = (...args) =>\n      MH.newPromise((resolve, reject) => {\n        debug: logger?.debug8(\"Calling with\", args);\n        if (isRemoved) {\n          reject(MH.usageError(\"Callback has been removed\"));\n          return;\n        }\n\n        CallbackScheduler._push(\n          id,\n          async () => {\n            let result;\n            try {\n              result = await handler(...args);\n            } catch (err) {\n              reject(err);\n            }\n\n            if (result === Callback.REMOVE) {\n              this.remove();\n            }\n\n            resolve();\n          },\n          reject,\n        );\n      });\n\n    callablesMap.set(this.invoke, this);\n  }\n}\n\n// ----------------------------------------\n\ntype CallbackSchedulerTask = () => Promise<void>;\ntype CallbackSchedulerQueueItem = {\n  _task: CallbackSchedulerTask;\n  _running: boolean;\n  _onRemove: (reason: typeof Callback.REMOVE) => void;\n};\n\ntype CallableCallback<Args extends unknown[] = []> = (...args: Args) => void;\n\nconst callablesMap = MH.newWeakMap<CallableCallback, Callback>();\n\nconst CallbackScheduler = (() => {\n  const queues = MH.newMap<symbol, CallbackSchedulerQueueItem[]>();\n\n  const flush = async (queue: CallbackSchedulerQueueItem[]) => {\n    // So that callbacks are always called asynchronously for consistency,\n    // await here before calling 1st\n    await null;\n    while (MH.lengthOf(queue)) {\n      // shouldn't throw anything as Callback must catch errors\n      queue[0]._running = true;\n      await queue[0]._task();\n\n      // only remove when done\n      queue.shift();\n    }\n  };\n\n  return {\n    _clear: (id: symbol) => {\n      const queue = queues.get(id);\n      if (queue) {\n        let item: CallbackSchedulerQueueItem | undefined;\n        while ((item = queue.shift())) {\n          if (!item._running) {\n            item._onRemove(Callback.REMOVE);\n          }\n        }\n\n        MH.deleteKey(queues, id);\n      }\n    },\n\n    _push: (id: symbol, task: CallbackSchedulerTask, onRemove: () => void) => {\n      let queue = queues.get(id);\n      if (!queue) {\n        queue = [];\n        queues.set(id, queue);\n      }\n\n      queue.push({ _task: task, _onRemove: onRemove, _running: false });\n      if (MH.lengthOf(queue) === 1) {\n        flush(queue);\n      }\n    },\n  };\n})();\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LogFunction } from \"@lisn/globals/types\";\n\nimport { joinAsString } from \"@lisn/utils/text\";\n\nimport { Callback } from \"@lisn/modules/callback\";\n\n/**\n * Like `console.info` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logInfo: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleInfo(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.warn` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logWarn: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleWarn(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.error` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logError: LogFunction = (...args) => {\n  if (\n    (MH.lengthOf(args) > 1 || args[0] !== Callback.REMOVE) &&\n    !isMessageSeen(args)\n  ) {\n    MH.consoleError(MC.LOG_PREFIX, ...args);\n  }\n};\n\nconst discardMessages = MH.newSet<string>();\nconst isMessageSeen = (args: unknown[]) => {\n  const msg = joinAsString(\" \", ...args);\n  const isSeen = discardMessages.has(msg);\n  discardMessages.add(msg);\n  return isSeen;\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Preventing layout trashing\n *\n * {@link waitForMeasureTime} allows you to schedule tasks that read or\n * \"measure\", the DOM, for example getting computed styles, taking the\n * `offsetWidth` or the `scrollTop` of an element, etc... anything that _would_\n * force a layout if it runs after the layout has been invalidated by a\n * \"mutation\".\n *\n * See https://gist.github.com/paulirish/5d52fb081b3570c81e3 for a list of\n * operations that should be run on a valid layout to avoid forced layouts.\n *\n * {@link waitForMutateTime} allows you to schedule tasks that invalidate the\n * DOM layout by making changes to the style, inserting or removing elements,\n * etc.\n *\n * These ensure that:\n * - All mutation tasks that would invalidate the style run together before the\n *   next repaint.\n * - All measurement tasks that need a valid style will run as soon as possible\n *   after the next repaint.\n * - If a mutation task is scheduled by another mutation task, it will run in\n *   the same batch.\n * - If a measurement task is scheduled by either a mutation or another\n *   measurement task, it will run in the same batch.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logError } from \"@lisn/utils/log\";\nimport { scheduleHighPriorityTask } from \"@lisn/utils/tasks\";\n\n/**\n * Returns a Promise that is resolved before the next repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForMutateTime = () =>\n  MH.newPromise<void>((resolve) => {\n    scheduleDOMTask(scheduledDOMMutations, resolve);\n  });\n\n/**\n * Returns a Promise that is resolved as soon as possible after the next\n * repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForMeasureTime = () =>\n  MH.newPromise<void>((resolve) => {\n    scheduleDOMTask(scheduledDOMMeasurements, resolve);\n  });\n\n/**\n * Returns a Promise that is resolved before the repaint that follows the next\n * repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForSubsequentMutateTime = () =>\n  waitForMutateTime().then(waitForMeasureTime).then(waitForMutateTime);\n\n/**\n * Returns a Promise that is resolved as soon as possible after the repaint\n * that follows the next repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForSubsequentMeasureTime = () =>\n  waitForMeasureTime().then(waitForMutateTime).then(waitForMeasureTime);\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const asyncMutatorFor =\n  <Args extends unknown[], Ret>(func: (...args: Args) => Ret) =>\n  async (...args: Args) =>\n    waitForMutateTime().then(() => func(...args));\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const asyncMeasurerFor =\n  <Args extends unknown[], Ret>(func: (...args: Args) => Ret) =>\n  async (...args: Args) =>\n    waitForMeasureTime().then(() => func(...args));\n\n// ----------------------------------------\n\ntype TaskResolver = () => void;\ntype DOMTaskQueue = TaskResolver[];\n\nconst scheduledDOMMeasurements: DOMTaskQueue = [];\nconst scheduledDOMMutations: DOMTaskQueue = [];\nlet hasScheduledDOMTasks = false;\n\nconst scheduleDOMTask = (queue: DOMTaskQueue, resolve: TaskResolver) => {\n  queue.push(resolve);\n  if (!hasScheduledDOMTasks) {\n    hasScheduledDOMTasks = true;\n    MH.onAnimationFrame(runAllDOMTasks);\n  }\n};\n\nconst runAllDOMTasks = async () => {\n  // We suspend (await null) after each queue to ensure that microtasks that\n  // have been added by await waitFor* or waitFor*().then run before the next\n  // queue, so that if they schedule more measurements and/or mutations, they\n  // can be flushed now, in the same batch.\n\n  // We're inside an animation frame. Run all mutation tasks now.\n  while (MH.lengthOf(scheduledDOMMutations)) {\n    runDOMTaskQueue(scheduledDOMMutations);\n    // wait for tasks awaiting on the resolved promises, then check queue again\n    await null;\n  }\n\n  // The measurement queue is now empty => scheduling measurements after\n  // this point will result in rescheduling both queues again in the next\n  // frame.\n  //\n  // Schedule the measurement tasks as soon as possible, after the upcoming\n  // paint. Use a macro task with as high priority as possible.\n  scheduleHighPriorityTask(async () => {\n    while (MH.lengthOf(scheduledDOMMeasurements)) {\n      runDOMTaskQueue(scheduledDOMMeasurements);\n      // wait for tasks awaiting on the resolved promises, then check queue again\n      await null;\n    }\n\n    if (MH.lengthOf(scheduledDOMMutations)) {\n      // There have been mutations added. Schedule another flush.\n      MH.onAnimationFrame(runAllDOMTasks);\n    } else {\n      hasScheduledDOMTasks = false;\n    }\n  });\n};\n\nconst runDOMTaskQueue = (queue: DOMTaskQueue) => {\n  let resolve: TaskResolver | undefined;\n  while ((resolve = queue.shift())) {\n    try {\n      resolve();\n    } catch (err) /* istanbul ignore next */ {\n      logError(err);\n    }\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement } from \"@lisn/globals/types\";\n\n/**\n * Returns all the child elements of the given element that are not `script` or\n * `style` tags.\n *\n * @category DOM: Querying\n */\nexport const getVisibleContentChildren = (element: Element) =>\n  MH.filter([...MH.childrenOf(element)], (ch) =>\n    isVisibleContentTag(MH.tagName(ch)),\n  );\n\n/**\n * Returns whether the given tag is _not_ `script` or `style`. Comparison is\n * case insensitive.\n *\n * @category DOM: Querying\n */\nexport const isVisibleContentTag = (tagName: string) =>\n  !MH.includes([\"script\", \"style\"], MH.toLowerCase(tagName));\n\n/**\n * Returns whether the given tag name has by default an inline display.\n * Comparison is case insensitive.\n *\n * @category DOM: Querying\n */\nexport const isInlineTag = (tagName: string) =>\n  inlineTags.has(tagName.toLowerCase());\n\n/**\n * Returns whether the given element is as {@link DOMElement}.\n *\n * @category DOM: Querying\n */\nexport const isDOMElement = (target: unknown): target is DOMElement =>\n  MH.isHTMLElement(target) ||\n  MH.isInstanceOf(target, SVGElement) ||\n  (typeof MathMLElement !== \"undefined\" &&\n    MH.isInstanceOf(target, MathMLElement));\n\n// --------------------\n\nconst inlineTags = MH.newSet([\n  \"a\",\n  \"abbr\",\n  \"acronym\",\n  \"b\",\n  \"bdi\",\n  \"bdo\",\n  \"big\",\n  \"button\",\n  \"cite\",\n  \"code\",\n  \"data\",\n  \"dfn\",\n  \"em\",\n  \"i\",\n  \"img\",\n  \"input\",\n  \"kbd\",\n  \"label\",\n  \"mark\",\n  \"map\",\n  \"object\",\n  \"output\",\n  \"q\",\n  \"rp\",\n  \"rt\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"select\",\n  \"small\",\n  \"span\",\n  \"strong\",\n  \"sub\",\n  \"sup\",\n  \"textarea\",\n  \"time\",\n  \"tt\",\n  \"u\",\n  \"var\",\n]);\n","/**\n * @module Utils\n *\n * @categoryDescription CSS: Altering\n * These functions transition an element from one CSS class to another, but\n * could lead to forced layout if not scheduled using {@link waitForMutateTime}.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n *\n * @categoryDescription CSS: Altering (optimized)\n * These functions transition an element from one CSS class to another in an\n * optimized way using {@link waitForMutateTime} and so are asynchronous.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement, FlexDirection } from \"@lisn/globals/types\";\n\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n  asyncMeasurerFor,\n  asyncMutatorFor,\n  waitForSubsequentMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isDOMElement } from \"@lisn/utils/dom-query\";\nimport { isValidNum, roundNumTo } from \"@lisn/utils/math\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { camelToKebabCase, splitOn } from \"@lisn/utils/text\";\n\n/**\n * Removes the given `fromCls` class and adds the given `toCls` class to the\n * element.\n *\n * Unlike {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace | DOMTokenList:replace},\n * this will always add `toCls` even if `fromCls` isn't in the element's class list.\n *\n * @returns True if there was a change made (class removed or added), false\n * otherwise.\n *\n * @category CSS: Altering\n */\nexport const transitionElementNow = (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n) => {\n  cancelCSSTransitions(element, fromCls, toCls);\n\n  // Avoid triggering MutationObserver unnecessarily.\n  let didChange = false;\n  if (hasClass(element, fromCls)) {\n    didChange = true;\n    removeClassesNow(element, fromCls);\n  }\n\n  if (!hasClass(element, toCls)) {\n    addClassesNow(element, toCls);\n    didChange = true;\n  }\n\n  return didChange;\n};\n\n/**\n * Like {@link transitionElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay, and it finally awaits for the effective style's\n * transition-duration.\n *\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, this one is\n * cancelled.\n *\n * @example\n *\n * - {@link showElement} with delay of 100 schedules `lisn-hide` -> `lisn-show`\n *   in 100ms\n * - then if {@link hideElementNow} is called, or a scheduled\n *   {@link hideElement} completes  before that timer runs out, this call to\n *   {@link showElement} aborts\n *\n * ```javascript\n * hideElement(someElement, 10);\n * // this will be aborted in 10ms when the scheduled hideElement above\n * // completes\n * showElement(someElement, 100);\n * ```\n *\n * ```javascript\n * // this will be aborted in 10ms when the hideElement that will be scheduled\n * // below completes\n * showElement(someElement, 100);\n * hideElement(someElement, 10);\n * ```\n *\n * ```javascript\n * // this will be aborted immediately by hideElementNow that runs straight\n * // afterwards\n * showElement(someElement, 100);\n * hideElementNow(someElement);\n * ```\n *\n * ```javascript\n * hideElementNow(someElement);\n * // this will NOT be aborted because hideElementNow has completed already\n * showElement(someElement, 100);\n * ```\n *\n * @category CSS: Altering (optimized)\n */\nexport const transitionElement = async (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n  delay = 0,\n) => {\n  const thisTransition = scheduleCSSTransition(element, toCls);\n\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForMutateTime();\n  if (thisTransition._isCancelled()) {\n    // it has been overridden by a later transition\n    return false;\n  }\n\n  const didChange = transitionElementNow(element, fromCls, toCls);\n  thisTransition._finish();\n\n  if (!didChange) {\n    return false;\n  }\n\n  // Await for the transition duration so that caller awaiting on us knows when\n  // it's complete.\n  const transitionDuration = await getMaxTransitionDuration(element);\n  if (transitionDuration) {\n    await waitForDelay(transitionDuration);\n  }\n\n  return true;\n};\n\n/**\n * Transitions an element from class `lisn-undisplay` (which applies `display:\n * none`) to `lisn-display` (no style associated with this).\n *\n * The difference between this and simply removing the `lisn-undisplay` class\n * is that previously scheduled transitions to `lisn-undisplay` will be\n * cancelled.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const displayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY);\n\n/**\n * Like {@link displayElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const displayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY, delay);\n\n/**\n * The opposite of {@link displayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const undisplayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY);\n\n/**\n * Like {@link undisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const undisplayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY, delay);\n\n/**\n * Transitions an element from class `lisn-hide` (which makes the element\n * hidden) to `lisn-show` (which shows it). These classes have CSS\n * transitions applied so the element is faded into and out of view.\n *\n * @see {@link transitionElementNow}.\n *\n * @category CSS: Altering\n */\nexport const showElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW);\n\n/**\n * Like {@link showElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const showElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW, delay);\n\n/**\n * The opposite of {@link showElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const hideElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE);\n\n/**\n * Like {@link hideElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const hideElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE, delay);\n\n/**\n * If {@link isElementUndisplayed}, it will {@link displayElementNow},\n * otherwise it will {@link undisplayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleDisplayElementNow = (element: Element) =>\n  isElementUndisplayed(element)\n    ? displayElementNow(element)\n    : undisplayElementNow(element);\n\n/**\n * Like {@link toggleDisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleDisplayElement = (element: Element, delay = 0) =>\n  isElementUndisplayed(element)\n    ? displayElement(element, delay)\n    : undisplayElement(element, delay);\n\n/**\n * If {@link isElementHidden}, it will {@link showElementNow}, otherwise\n * {@link hideElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleShowElementNow = (element: Element) =>\n  isElementHidden(element) ? showElementNow(element) : hideElementNow(element);\n\n/**\n * Like {@link toggleShowElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleShowElement = (element: Element, delay = 0) =>\n  isElementHidden(element)\n    ? showElement(element, delay)\n    : hideElement(element, delay);\n\n/**\n * Returns true if the element's class list contains `lisn-hide`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementHidden = (element: Element) =>\n  hasClass(element, MC.PREFIX_HIDE);\n\n/**\n * Returns true if the element's class list contains `lisn-undisplay`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementUndisplayed = (element: Element) =>\n  hasClass(element, MC.PREFIX_UNDISPLAY);\n\n/**\n * Returns true if the element's class list contains the given class.\n *\n * @category CSS: Altering (optimized)\n */\nexport const hasClass = (element: Element, className: string) =>\n  MH.classList(element).contains(className);\n\n/**\n * Returns true if the element's class list contains all of the given classes.\n *\n * @since v1.2.0\n *\n * @category CSS: Altering (optimized)\n */\nexport const hasAllClasses = (element: Element, ...classNames: string[]) =>\n  MH.lengthOf(classNames) > 0 &&\n  !MH.some(classNames, (className) => !hasClass(element, className));\n\n/**\n * Returns true if the element's class list contains any of the given classes.\n *\n * @since v1.2.0\n *\n * @category CSS: Altering (optimized)\n */\nexport const hasAnyClass = (element: Element, ...classNames: string[]) =>\n  MH.some(classNames, (className) => hasClass(element, className));\n\n/**\n * Adds the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const addClassesNow = (element: Element, ...classNames: string[]) =>\n  MH.classList(element).add(...classNames);\n\n/**\n * Like {@link addClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const addClasses = asyncMutatorFor(addClassesNow);\n\n/**\n * Removes the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const removeClassesNow = (element: Element, ...classNames: string[]) =>\n  MH.classList(element).remove(...classNames);\n\n/**\n * Like {@link removeClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const removeClasses = asyncMutatorFor(removeClassesNow);\n\n/**\n * Toggles the given class on the element.\n *\n * @param force See {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle | DOMTokenList:toggle}\n *\n * @category CSS: Altering\n */\nexport const toggleClassNow = (\n  element: Element,\n  className: string,\n  force?: boolean,\n) => MH.classList(element).toggle(className, force);\n\n/**\n * Like {@link toggleClassNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleClass = asyncMutatorFor(toggleClassNow);\n\n/**\n * Toggles the given classes on the element. This function does not accept the\n * `force` parameter.\n *\n * @since v1.2.0\n *\n * @category CSS: Altering\n */\nexport const toggleClassesNow = (element: Element, ...classNames: string[]) => {\n  for (const cls of classNames) {\n    toggleClassNow(element, cls);\n  }\n};\n\n/**\n * Like {@link toggleClassesNow} except it will {@link waitForMutateTime}.\n *\n * @since v1.2.0\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleClasses = asyncMutatorFor(toggleClassesNow);\n\n/**\n * Replaces the given class on the element with a new one.\n *\n * @param force See {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace | DOMTokenList:replace}\n *\n * @since v1.2.0\n *\n * @category CSS: Altering\n */\nexport const replaceClassNow = (\n  element: Element,\n  oldClassName: string,\n  newClassName: string,\n) => MH.classList(element).replace(oldClassName, newClassName);\n\n/**\n * Like {@link replaceClassNow} except it will {@link waitForMutateTime}.\n *\n * @since v1.2.0\n *\n * @category CSS: Altering (optimized)\n */\nexport const replaceClass = asyncMutatorFor(replaceClassNow);\n\n// For *Data: to avoid unnecessary type checking that ensures element is\n// HTMLElement or SVGElement, use getAttribute instead of dataset.\n\n/**\n * Returns the value of the given data attribute. The name of the attribute\n * must _not_ start with `data`. It can be in either camelCase or kebab-case,\n * it is converted as needed.\n *\n * @category CSS: Altering (optimized)\n */\nexport const getData = (element: Element, name: string) =>\n  MH.getAttr(element, MH.prefixData(name));\n\n/**\n * Returns the value of the given data attribute as a boolean. Its value is\n * expected to be either blank or \"true\" (which result in `true`), or \"false\"\n * (which results in `false`).\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @since v1.2.0\n *\n * @category CSS: Altering (optimized)\n */\nexport const getBooleanData = (element: Element, name: string) => {\n  const value = getData(element, name);\n  return value !== null && value !== \"false\";\n};\n\n/**\n * @ignore\n * @deprecated\n */\nexport const getBoolData = getBooleanData;\n\n/**\n * Sets the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const setDataNow = (element: Element, name: string, value: string) =>\n  MH.setAttr(element, MH.prefixData(name), value);\n\n/**\n * Like {@link setDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const setData = asyncMutatorFor(setDataNow);\n\n/**\n * Sets the given data attribute with value \"true\" (default) or \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @since v1.2.0\n *\n * @category CSS: Altering\n */\nexport const setBooleanDataNow = (\n  element: Element,\n  name: string,\n  value = true,\n) => MH.setAttr(element, MH.prefixData(name), value + \"\");\n\n/**\n * @ignore\n * @deprecated\n */\nexport const setBoolDataNow = setBooleanDataNow;\n\n/**\n * Like {@link setBooleanDataNow} except it will {@link waitForMutateTime}.\n *\n * @since v1.2.0\n *\n * @category CSS: Altering (optimized)\n */\nexport const setBooleanData = asyncMutatorFor(setBooleanDataNow);\n\n/**\n * @ignore\n * @deprecated\n */\nexport const setBoolData = setBooleanData;\n\n/**\n * Sets the given data attribute with value \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @since v1.2.0\n *\n * @category CSS: Altering\n */\nexport const unsetBooleanDataNow = (element: Element, name: string) =>\n  MH.unsetAttr(element, MH.prefixData(name));\n\n/**\n * @ignore\n * @deprecated\n */\nexport const unsetBoolDataNow = unsetBooleanDataNow;\n\n/**\n * Like {@link unsetBooleanDataNow} except it will {@link waitForMutateTime}.\n *\n * @since v1.2.0\n *\n * @category CSS: Altering (optimized)\n */\nexport const unsetBooleanData = asyncMutatorFor(unsetBooleanDataNow);\n\n/**\n * @ignore\n * @deprecated\n */\nexport const unsetBoolData = unsetBooleanData;\n\n/**\n * Deletes the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const delDataNow = (element: Element, name: string) =>\n  MH.delAttr(element, MH.prefixData(name));\n\n/**\n * Like {@link delDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const delData = asyncMutatorFor(delDataNow);\n\n/**\n * Returns the value of the given property from the computed style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getComputedStylePropNow = (element: Element, prop: string) =>\n  getComputedStyle(element).getPropertyValue(prop);\n\n/**\n * Like {@link getComputedStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getComputedStyleProp = asyncMeasurerFor(getComputedStylePropNow);\n\n/**\n * Returns the value of the given property from the inline style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.getPropertyValue(prop);\n\n/**\n * Like {@link getStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getStyleProp = asyncMeasurerFor(getStylePropNow);\n\n/**\n * Sets the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const setStylePropNow = (\n  element: Element,\n  prop: string,\n  value: string,\n) => (element as DOMElement).style?.setProperty(prop, value);\n\n/**\n * Like {@link setStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const setStyleProp = asyncMutatorFor(setStylePropNow);\n\n/**\n * Deletes the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const delStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.removeProperty(prop);\n\n/**\n * Like {@link delStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const delStyleProp = asyncMutatorFor(delStylePropNow);\n\n/**\n * Returns the flex direction of the given element **if it has a flex layout**.\n *\n * @returns `null` if the element does not have a flex layout.\n *\n * @since v1.2.0\n */\nexport const getFlexDirection = async (\n  element: Element,\n): Promise<FlexDirection | null> => {\n  const displayStyle = await getComputedStyleProp(element, \"display\");\n  if (!displayStyle.includes(\"flex\")) {\n    return null;\n  }\n\n  return (await getComputedStyleProp(\n    element,\n    \"flex-direction\",\n  )) as FlexDirection;\n};\n\n/**\n * Returns the flex direction of the given element's parent **if it has a flex\n * layout**.\n *\n * @returns `null` if the element's parent does not have a flex layout.\n *\n * @since v1.2.0\n */\nexport const getParentFlexDirection = async (\n  element: Element,\n): Promise<FlexDirection | null> => {\n  const parent = MH.parentOf(element);\n  return parent ? getFlexDirection(parent) : null;\n};\n\n/**\n * Returns true if the given element has a flex layout. If direction is given,\n * then it also needs to match.\n *\n * @since v1.2.0\n */\nexport const isFlex = async (element: Element, direction?: FlexDirection) => {\n  const flexDirection = await getFlexDirection(element);\n\n  if (direction) {\n    return direction === flexDirection;\n  }\n\n  return flexDirection !== null;\n};\n\n/**\n * Returns true if the given element's parent has a flex layout. If direction is\n * given, then it also needs to match.\n *\n * @since v1.2.0\n */\nexport const isFlexChild = async (\n  element: Element,\n  direction?: FlexDirection,\n) => {\n  const parent = MH.parentOf(element);\n  return parent ? isFlex(parent, direction) : false;\n};\n\n/**\n * In milliseconds.\n *\n * @ignore\n * @internal\n */\nexport const getMaxTransitionDuration = async (element: Element) => {\n  const propVal = await getComputedStyleProp(element, \"transition-duration\");\n\n  return MH.max(\n    ...splitOn(propVal, \",\", true).map((strValue) => {\n      let duration = MH.parseFloat(strValue) || 0;\n\n      if (strValue === duration + \"s\") {\n        duration *= 1000;\n      }\n\n      return duration;\n    }),\n  );\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const disableInitialTransition = async (element: Element, delay = 0) => {\n  await addClasses(element, MC.PREFIX_TRANSITION_DISABLE);\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForSubsequentMutateTime();\n  removeClassesNow(element, MC.PREFIX_TRANSITION_DISABLE);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const setHasModal = () => setBooleanData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const delHasModal = () => delData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const copyStyle = async (\n  fromElement: Element,\n  toElement: Element,\n  includeComputedProps?: string[],\n) => {\n  if (!isDOMElement(fromElement) || !isDOMElement(toElement)) {\n    return;\n  }\n\n  await waitForMeasureTime();\n  const props: Record<string, string> = {};\n\n  if (includeComputedProps) {\n    for (const prop of includeComputedProps) {\n      props[prop] = getComputedStylePropNow(fromElement, prop);\n    }\n  }\n\n  const style = fromElement.style; // only inline styles\n  for (const prop in style) {\n    const value = style.getPropertyValue(prop);\n    if (value) {\n      props[prop] = value;\n    }\n  }\n\n  for (const prop in props) {\n    setStyleProp(toElement, prop, props[prop]);\n  }\n\n  addClasses(toElement, ...MH.classList(fromElement));\n};\n\n/**\n * If the props keys are in camelCase they are converted to kebab-case\n *\n * If a value is null or undefined, the property is deleted.\n *\n * @ignore\n * @internal\n */\nexport const setNumericStyleJsVarsNow = (\n  element: Element,\n  props: CssNumericProps,\n  options: {\n    _prefix?: string;\n    _units?: string;\n    _numDecimal?: number;\n  } = {},\n) => {\n  if (!isDOMElement(element)) {\n    return;\n  }\n\n  const varPrefix = MH.prefixCssJsVar(options?._prefix ?? \"\");\n  for (const prop in props) {\n    const cssPropSuffix = camelToKebabCase(prop);\n    const varName = `${varPrefix}${cssPropSuffix}`;\n\n    let value: number | null;\n\n    if (!isValidNum(props[prop])) {\n      value = null;\n    } else {\n      value = props[prop];\n      const thisNumDecimal =\n        options?._numDecimal ?? (value > 0 && value < 1 ? 2 : 0);\n      value = roundNumTo(value, thisNumDecimal);\n    }\n\n    if (value === null) {\n      delStylePropNow(element, varName);\n    } else {\n      setStylePropNow(element, varName, value + (options?._units ?? \"\"));\n    }\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const setNumericStyleJsVars = asyncMutatorFor(setNumericStyleJsVarsNow);\n\n// ----------------------------------------\n\ntype CssNumericProps = Record<string, number | undefined | null>;\n\ntype CSSTransition = {\n  _cancel: () => undefined;\n  _finish: () => undefined;\n  _isCancelled: () => boolean;\n};\n\nconst PREFIX_HAS_MODAL = MH.prefixName(\"has-modal\");\n\nconst scheduledCSSTransitions = MH.newWeakMap<\n  Element,\n  Record<string, CSSTransition>\n>();\n\nconst cancelCSSTransitions = (element: Element, ...toClasses: string[]) => {\n  const scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    return;\n  }\n\n  for (const toCls of toClasses) {\n    const scheduledTransition = scheduledTransitions[toCls];\n    if (scheduledTransition) {\n      scheduledTransition._cancel();\n    }\n  }\n};\n\nconst scheduleCSSTransition = (element: Element, toCls: string) => {\n  let scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    scheduledTransitions = {};\n    scheduledCSSTransitions.set(element, scheduledTransitions);\n  }\n\n  let isCancelled = false;\n  scheduledTransitions[toCls] = {\n    _cancel: () => {\n      isCancelled = true;\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _finish: () => {\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _isCancelled: () => {\n      return isCancelled;\n    },\n  };\n\n  return scheduledTransitions[toCls];\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Altering\n * These functions alter the DOM tree, but could lead to forced layout if not\n * scheduled using {@link Utils.waitForMutateTime}.\n *\n * @categoryDescription DOM: Altering (optimized)\n * These functions alter the DOM tree in an optimized way using\n * {@link Utils.waitForMutateTime} and so are asynchronous.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  hideElement,\n  hasAnyClass,\n  addClassesNow,\n  removeClassesNow,\n  getData,\n  setDataNow,\n  setBooleanData,\n} from \"@lisn/utils/css-alter\";\nimport { asyncMutatorFor } from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { randId } from \"@lisn/utils/text\";\n\n/**\n * Wraps the element in the given wrapper, or a newly created element if not given.\n *\n * @param [options.wrapper]\n *              If it's an element, it is used as the wrapper. If it's a string\n *              tag name, then a new element with this tag is created as the\n *              wrapper. If not given, then `div` is used if the element to be\n *              wrapped has an block-display tag, or otherwise `span` (if the\n *              element to be wrapped has an inline tag name).\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n * @returns The wrapper element that was either passed in options or created.\n *\n * @category DOM: Altering\n */\nexport const wrapElementNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: wrapper,\n    });\n\n    ignoreMove(wrapper, {\n      to: MH.parentOf(element),\n    });\n  }\n\n  element.replaceWith(wrapper);\n  wrapper.append(element);\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapElementNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapElement = asyncMutatorFor(wrapElementNow);\n\n/**\n * Wraps the element's children in the given wrapper, or a newly created element\n * if not given.\n *\n * @see {@link wrapElementNow}.\n *\n * @category DOM: Altering\n */\nexport const wrapChildrenNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n  const { ignoreMove } = options ?? {};\n\n  moveChildrenNow(element, wrapper, { ignoreMove });\n  moveElementNow(wrapper, {\n    to: element,\n    ignoreMove,\n  });\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapChildrenNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapChildren = asyncMutatorFor(wrapChildrenNow);\n\n/**\n * Replace an element with another one.\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const replaceElementNow = (\n  element: Element,\n  newElement: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    ignoreMove(\n      // remove element\n      element,\n      { from: MH.parentOf(element) },\n    );\n\n    ignoreMove(\n      // move newElement to element's current parent\n      newElement,\n      { from: MH.parentOf(newElement), to: MH.parentOf(element) },\n    );\n  }\n\n  element.replaceWith(newElement);\n};\n\n/**\n * Like {@link replaceElementNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const replaceElement = asyncMutatorFor(replaceElementNow);\n\n/**\n * Replace an element with another one.\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const swapElementsNow = (\n  elementA: Element,\n  elementB: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  const temp = MH.createElement(\"div\");\n  replaceElementNow(elementA, temp, options);\n  replaceElementNow(elementB, elementA, options);\n  replaceElementNow(temp, elementB, options);\n};\n\n/**\n * Like {@link swapElementsNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const swapElements = asyncMutatorFor(swapElementsNow);\n\n// [TODO v2]: moveChildren to accept newParent as options.to\n\n/**\n * Move an element's children to a new element\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the children (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveChildrenNow = (\n  oldParent: Element,\n  newParent: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    for (const child of MH.childrenOf(oldParent)) {\n      ignoreMove(child, {\n        from: oldParent,\n        to: newParent,\n      });\n    }\n  }\n\n  newParent.append(...MH.childrenOf(oldParent));\n};\n\n/**\n * Like {@link moveChildrenNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveChildren = asyncMutatorFor(moveChildrenNow);\n\n/**\n * Moves an element to a new position.\n *\n * @param [options.to]         The new parent or sibling (depending on\n *                             `options.position`). If not given, the\n *                             element is removed from the DOM.\n * @param [options.position]   - append (default): append to `options.to`\n *                             - prepend: prepend to `options.to`\n *                             - before: insert before `options.to`\n *                             - after: insert after `options.to`\n * @param [options.ignoreMove] If true, the DOM watcher instances will\n *                             ignore the operation of moving the element\n *                             (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveElementNow = (\n  element: Element,\n  options?: {\n    to?: Element;\n    position?: \"append\" | \"prepend\" | \"before\" | \"after\";\n    ignoreMove?: boolean;\n  },\n) => {\n  let parentEl = options?.to ?? null;\n  const position = options?.position || \"append\";\n  if (position === \"before\" || position === \"after\") {\n    parentEl = MH.parentOf(options?.to);\n  }\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: parentEl,\n    });\n  }\n\n  if (options?.to) {\n    options.to[position](element);\n  } else {\n    MH.remove(element);\n  }\n};\n\n/**\n * Like {@link moveElementNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveElement = asyncMutatorFor(moveElementNow);\n\n/**\n * It will {@link hideElement} and then remove it from the DOM.\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering (optimized)\n */\nexport const hideAndRemoveElement = async (\n  element: Element,\n  delay = 0,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  await hideElement(element, delay);\n  moveElementNow(element, options);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getOrAssignID = (element: Element, prefix = \"\") => {\n  let domID = element.id;\n  if (!domID) {\n    domID = `${prefix}-${randId()}`;\n    element.id = domID;\n  }\n\n  return domID;\n};\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const isAllowedToWrap = (element: Element) =>\n  settings.contentWrappingAllowed === true &&\n  getData(element, MC.PREFIX_NO_WRAP) === null;\n\n/**\n * @ignore\n * @internal\n *\n * @param [options.classNames] Default is [MC.PREFIX_WRAPPER]. Pass `null` to\n *                             disable check.\n *\n * @since v1.2.0\n */\nexport const getWrapper = (\n  element: Element,\n  options?: {\n    _tagName?: keyof HTMLElementTagNameMap;\n    _classNames?: string[] | null;\n  },\n) => {\n  const { _tagName: tagName, _classNames: classNames = [MC.PREFIX_WRAPPER] } =\n    options ?? {};\n  const parent = MH.parentOf(element);\n  if (\n    MH.lengthOf(MH.childrenOf(parent)) === 1 &&\n    MH.isHTMLElement(parent) &&\n    (!tagName || MH.hasTagName(parent, tagName)) &&\n    (!classNames || hasAnyClass(parent, ...classNames))\n  ) {\n    // Already wrapped\n    return parent;\n  }\n\n  return null; // don't check the element itself, only its parent\n};\n\n/**\n * @ignore\n * @internal\n *\n * @param [options.classNames] Default is [MC.PREFIX_WRAPPER]. Pass `null` to\n *                             disable check.\n *\n * @since v1.2.0\n */\nexport const getContentWrapper = (\n  element: Element,\n  options?: {\n    _tagName?: keyof HTMLElementTagNameMap;\n    _classNames?: string[] | null;\n  },\n) => {\n  const { _tagName: tagName, _classNames: classNames = [MC.PREFIX_WRAPPER] } =\n    options ?? {};\n  const firstChild = MH.childrenOf(element)[0];\n  if (\n    MH.lengthOf(MH.childrenOf(element)) === 1 &&\n    MH.isHTMLElement(firstChild) &&\n    (!tagName || MH.hasTagName(firstChild, tagName)) &&\n    (!classNames || hasAnyClass(firstChild, ...classNames))\n  ) {\n    // Already wrapped\n    return firstChild;\n  }\n\n  return null;\n};\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const tryWrapNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options?: O,\n) => _tryWrapNow(element, options);\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const tryWrap = asyncMutatorFor(tryWrapNow);\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const tryWrapContentNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options?: O,\n) => _tryWrapNow(element, options, true);\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const tryWrapContent = asyncMutatorFor(tryWrapContentNow);\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const unwrapContentNow = (wrapper: Element, classNames?: string[]) => {\n  const parent = wrapper.parentElement;\n  if (parent) {\n    moveChildrenNow(wrapper, parent, { ignoreMove: true });\n    moveElementNow(wrapper, { ignoreMove: true });\n    if (classNames) {\n      removeClassesNow(wrapper, ...classNames);\n    }\n  }\n};\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const unwrapContent = asyncMutatorFor(unwrapContentNow);\n\n/**\n * @ignore\n * @internal\n */\nexport const cloneElement = <E extends Element>(element: E) => {\n  const clone = element.cloneNode(true) as E;\n  setBooleanData(clone, MH.prefixName(\"clone\"));\n  return clone;\n};\n\n/**\n * Creates a dummy hidden clone that's got animation and transitions disabled\n * and absolute position, wrapped in a wrapper (of size 0) and inserts it just\n * before the `insertBefore` element (or if not given, the original element),\n * so that the hidden clone overlaps the actual element's regular\n * (pre-transformed) position.\n *\n * It clears the ID of the clone.\n *\n * Returns the clone.\n *\n * @ignore\n * @internal\n */\nexport const insertGhostCloneNow = <E extends Element>(\n  element: E,\n  insertBefore: Element | null = null,\n) => {\n  const clone = cloneElement(element);\n  clone.id = \"\";\n\n  addClassesNow(\n    clone,\n    MC.PREFIX_GHOST,\n    MC.PREFIX_TRANSITION_DISABLE,\n    MC.PREFIX_ANIMATE_DISABLE,\n  );\n\n  const wrapper = _tryWrapNow(clone, { _required: true });\n\n  moveElementNow(wrapper, {\n    to: insertBefore ?? element,\n    position: \"before\",\n    ignoreMove: true,\n  });\n\n  return { _wrapper: wrapper, _clone: clone };\n};\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const insertGhostClone = asyncMutatorFor(insertGhostCloneNow);\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const ignoreMove = (\n  target: Element,\n  options: { from?: Element | null; to?: Element | null },\n) =>\n  recordsToSkipOnce.set(target, {\n    from: options.from ?? null,\n    to: options.to ?? null,\n  });\n\n/**\n * @ignore\n * @internal\n */\nexport const getIgnoreMove = (\n  target: Element,\n): { from: Element | null; to: Element | null } | null =>\n  recordsToSkipOnce.get(target) ?? null;\n\n/**\n * @ignore\n * @internal\n */\nexport const clearIgnoreMove = (target: Element) => {\n  // We should not clear the entry the first time the operation is observed\n  // (when we return true here), because there may be multiple DOMWatcher\n  // instances that will observe it and need to query it. Instead do it shortly.\n  MH.setTimer(() => {\n    MH.deleteKey(recordsToSkipOnce, target);\n  }, 100);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const insertArrow = (\n  target: Element,\n  direction: \"up\" | \"down\" | \"left\" | \"right\",\n  position: \"prepend\" | \"append\" | \"before\" | \"after\" = \"append\",\n  tag = \"span\",\n) => {\n  const arrow = MH.createElement(tag);\n  addClassesNow(arrow, MH.prefixName(MC.S_ARROW));\n  setDataNow(arrow, MH.prefixName(\"direction\"), direction);\n  moveElement(arrow, { to: target, position, ignoreMove: true });\n  return arrow;\n};\n\n// ----------------------------------------\n\ntype ContentWrappingOptions = {\n  _tagName?: keyof HTMLElementTagNameMap;\n  _classNames?: string[]; // if the wrapper has any one of these, it will be re-used\n  _ignoreMove?: boolean; // default is true here\n  _required?: boolean; // if true, will ignore contentWrappingAllowed and data-lisn-no-wrap\n  _requiredBy?: string; // for logging purposes\n};\n\nconst recordsToSkipOnce = MH.newMap<\n  /* target being moved */ Element,\n  { from: Element | null; to: Element | null }\n>();\n\nconst createWrapperFor = (\n  element: Element,\n  wrapper: HTMLElement | keyof HTMLElementTagNameMap | undefined,\n) => {\n  if (MH.isElement(wrapper)) {\n    return wrapper;\n  }\n\n  let tag = wrapper;\n  if (!tag) {\n    if (isInlineTag(MH.tagName(element))) {\n      tag = \"span\";\n    } else {\n      tag = \"div\";\n    }\n  }\n\n  return MH.createElement(tag);\n};\n\nconst _tryWrapNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options: O | undefined,\n  wrapContent = false, // if true, wrap its children, otherwise given element\n) => {\n  const {\n    _tagName: tagName,\n    _classNames: classNames = [MC.PREFIX_WRAPPER],\n    _ignoreMove: ignoreMove = true,\n    _required: required = false,\n    _requiredBy: requiredBy = \"\",\n  } = options ?? {};\n\n  const getWrapperFn = wrapContent ? getContentWrapper : getWrapper;\n  const wrapFn = wrapContent ? wrapChildrenNow : wrapElementNow;\n  const allowedToWrap = isAllowedToWrap(element);\n\n  let wrapper = getWrapperFn(element, options);\n  if (!wrapper && (required || allowedToWrap)) {\n    wrapper = wrapFn(element, { wrapper: tagName, ignoreMove });\n    if (classNames) {\n      addClassesNow(wrapper, ...classNames);\n    }\n    if (isInlineTag(MH.tagName(wrapper))) {\n      addClassesNow(wrapper, MC.PREFIX_INLINE_WRAPPER);\n    }\n\n    if (!allowedToWrap && requiredBy) {\n      logWarn(\n        `content wrapping is disabled for element but wrapping is required by ${requiredBy}`,\n      );\n    }\n  }\n\n  return wrapper as O extends { _required: true }\n    ? HTMLElement\n    : HTMLElement | null;\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { NonNullableReturnType } from \"@lisn/globals/types\";\n\n/**\n * Returns a Promise that is resolved when the given `checkFn` function returns\n * a value other than `null` or `undefined`.\n *\n * The Promise is resolved with `checkFn`'s return value.\n *\n * The function is called initially, and then every time there are changes to\n * the DOM children. Uses\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * @param timeout If given, then if no such element is present after this many\n *                milliseconds, the promise will resolve to `null`.\n *\n * @category DOM: Events\n */\nexport const waitForElement = <\n  F extends () => unknown,\n  T extends number | undefined = undefined,\n>(\n  checkFn: F,\n  timeout?: number,\n) =>\n  MH.newPromise<\n    T extends undefined\n      ? NonNullableReturnType<F>\n      : null | NonNullableReturnType<F>\n  >((resolve) => {\n    const callFn = () => {\n      const result = checkFn();\n      if (!MH.isNullish(result)) {\n        resolve(result as NonNullableReturnType<F>);\n        return true; // done\n      }\n      return false;\n    };\n\n    if (callFn()) {\n      return; // resolved already\n    }\n\n    if (!MH.isNullish(timeout)) {\n      MH.setTimer(() => {\n        resolve(\n          null as T extends undefined\n            ? NonNullableReturnType<F>\n            : null | NonNullableReturnType<F>,\n        );\n        observer.disconnect();\n      }, timeout);\n    }\n\n    const observer = MH.newMutationObserver(() => {\n      if (callFn()) {\n        observer.disconnect();\n      }\n    });\n\n    observer.observe(MH.getDocElement(), {\n      childList: true,\n      subtree: true,\n    });\n  });\n\n/**\n * Returns a Promise that is resolved when the given `checkFn` function returns\n * a value other than `null` or `undefined` or the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * becomes \"interactive\".\n *\n * It always calls the given `checkFn` first before examining the `readyState`.\n *\n * If the `readyState` became interactive before the element was found, the\n * Promise resolves to `null`. Otherwise the Promise is resolved with `checkFn`'s\n * return value.\n *\n * The function is called initially, and then every time there are changes to\n * the DOM children. Uses\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * @category DOM: Events\n */\nexport const waitForElementOrInteractive = <F extends () => unknown>(\n  checkFn: F,\n) =>\n  MH.newPromise<NonNullableReturnType<F> | null>((resolve) => {\n    let isInteractive = false;\n    // Check element first, then readyState. The callback to waitForElement is\n    // run synchronously first time, so isInteractive will be false and checkFn\n    // will run.\n    waitForElement(() => isInteractive || checkFn()).then((res) => {\n      if (!isInteractive) {\n        resolve(res as NonNullableReturnType<F>);\n      } // else already resolved to null\n    });\n\n    waitForInteractive().then(() => {\n      isInteractive = true;\n      resolve(null);\n    });\n  });\n\n/**\n * Returns a Promise that is resolved when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"interactive\" (or if it's already \"interactive\" or \"complete\", the\n * Promise is fulfilled immediately).\n *\n * @category DOM: Events\n */\nexport const waitForInteractive = () =>\n  MH.newPromise<void>((resolve) => {\n    const readyState = MH.getReadyState();\n    if (readyState === INTERACTIVE || readyState === COMPLETE) {\n      resolve();\n      return;\n    }\n\n    MH.getDoc().addEventListener(\"DOMContentLoaded\", () => resolve());\n  });\n\n/**\n * Returns a Promise that is resolved when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"complete\" (or if it's already \"complete\", the Promise is fulfilled\n * immediately).\n *\n * @category DOM: Events\n */\nexport const waitForComplete = () =>\n  MH.newPromise<void>((resolve) => {\n    if (MH.getReadyState() === COMPLETE) {\n      resolve();\n      return;\n    }\n\n    MH.getDoc().addEventListener(\"readystatechange\", () => {\n      if (MH.getReadyState() === COMPLETE) {\n        resolve();\n      }\n    });\n  });\n\n/**\n * Returns a Promise that is resolved either when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"complete\" or the `readyState` is \"interactive\" and at least\n * {@link settings.pageLoadTimeout} milliseconds have passed (if > 0) since it\n * became \"interactive\".\n *\n * @category DOM: Events\n */\nexport const waitForPageReady = () =>\n  MH.newPromise<void>((resolve) => {\n    if (pageIsReady) {\n      resolve();\n      return;\n    }\n\n    return waitForInteractive().then(() => {\n      // Setup a listener for the complete state but wait at most\n      // <pageLoadTimeout> (if specified)\n      let timer: ReturnType<typeof setTimeout> | null = null;\n\n      const dispatchReady = () => {\n        pageIsReady = true;\n        if (timer) {\n          MH.clearTimer(timer);\n          timer = null;\n        }\n        resolve();\n      };\n\n      if (settings.pageLoadTimeout > 0) {\n        timer = MH.setTimer(() => {\n          dispatchReady();\n        }, settings.pageLoadTimeout);\n      }\n\n      waitForComplete().then(dispatchReady);\n    });\n  });\n\n/**\n * Returns true if the page is \"ready\". See {@link waitForPageReady}.\n *\n * @category DOM: Events\n */\nexport const isPageReady = () => pageIsReady;\n\n// --------------------\n\nconst COMPLETE = \"complete\";\nconst INTERACTIVE = \"interactive\";\n\nlet pageIsReady = false;\n\nif (!MH.hasDOM()) {\n  pageIsReady = true;\n} else {\n  waitForPageReady(); // ensure pageIsReady is set even if waitForPageReady is not called\n}\n","/**\n * @module Modules/XMap\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { MapBase } from \"@lisn/globals/types\";\n\nexport type DefaultValueGetter<K, V> = (key: K) => V;\nexport type IteratorCallback<K, V> = (\n  value: V,\n  key: K,\n  map: XMap<K, V>,\n) => void;\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXMap = <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  new XMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXMapGetter =\n  <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXMap(getDefaultV);\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMap = <K extends WeakKey, V>(\n  getDefaultV: DefaultValueGetter<K, V>,\n) => new XWeakMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXWeakMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMapGetter =\n  <K extends WeakKey, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXWeakMap(getDefaultV);\n\nexport abstract class XMapBase<K, V> {\n  /**\n   * Returns the value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly get: (key: K) => V | undefined;\n\n  /**\n   * Like {@link get} except that if the key is not found in the map, then it\n   * will set and return a default value by calling `getDefaultV` passed to the\n   * constructor.\n   */\n  readonly sGet: (key: K) => V;\n\n  /**\n   * Sets a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly set: (key: K, value: V) => void;\n\n  /**\n   * Deletes a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly delete: (key: K) => void;\n\n  /**\n   * Deletes empty keys in the {@link XMap} or {@link XWeakMap} starting at the\n   * final nested path and checking the level above after deletion.\n   *\n   * A key is considered empty if it's value is undefined or it's an empty Map,\n   * Set, Array, etc (anything with size or length property equal to 0).\n   */\n  readonly prune: (sk: K, ...rest: unknown[]) => void;\n\n  /**\n   * Returns true if the {@link XMap} or {@link XWeakMap} contains the given key.\n   */\n  readonly has: (key: K) => boolean;\n\n  protected constructor(\n    root: MapBase<K, V>,\n    getDefaultV: DefaultValueGetter<K, V>,\n  ) {\n    this.get = (key) => root.get(key);\n    this.set = (key, value) => root.set(key, value);\n    this.delete = (key) => MH.deleteKey(root, key);\n    this.has = (key) => root.has(key);\n\n    this.sGet = (key) => {\n      let result = root.get(key);\n      if (result === undefined) {\n        result = getDefaultV(key);\n        root.set(key, result);\n      }\n      return result;\n    };\n\n    this.prune = (sk, ...rest) => {\n      const value = root.get(sk);\n      if (value instanceof XMapBase && MH.lengthOf(rest)) {\n        value.prune(rest[0], ...rest.slice(1));\n      }\n\n      if (\n        value === undefined ||\n        (MH.isIterableObject(value) &&\n          !(\n            (\"size\" in value && value.size) ||\n            (\"length\" in value && value.length)\n          ))\n      ) {\n        MH.deleteKey(root, sk);\n      }\n    };\n  }\n}\n\n/**\n * {@link XMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map | Map},\n * except that it supports automatically creating missing entries with\n * {@link sGet} according to a default value getter function.\n *\n * @typeParam K The type of the keys the map holds.\n * @typeParam V The type of the values the map holds.\n */\nexport class XMap<K, V> extends XMapBase<K, V> implements Iterable<[K, V]> {\n  /**\n   * Returns the number of entries in the {@link XMap}.\n   */\n  readonly size!: number;\n\n  /**\n   * Deletes all entries in the {@link XMap}.\n   */\n  readonly clear: () => void;\n\n  /**\n   * Returns an iterator over the {@link XMap} entries.\n   */\n  readonly entries: () => MapIterator<[K, V]>;\n\n  /**\n   * Returns an iterator over the {@link XMap} keys.\n   */\n  readonly keys: () => MapIterator<K>;\n\n  /**\n   * Returns an iterator over the {@link XMap} values.\n   */\n  readonly values: () => MapIterator<V>;\n\n  readonly [Symbol.iterator]!: () => IterableIterator<[K, V]>;\n\n  /**\n   * Returns a function that when called returns a new {@link XMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XMap}s.\n   */\n  static readonly newXMapGetter = newXMapGetter;\n\n  /**\n   * @param getDefaultV This function is called each time {@link sGet} is\n   *                    called with a non-existent key and must return a value\n   *                    that is then set for that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newMap<K, V>();\n    super(root, getDefaultV);\n\n    MH.defineProperty(this, \"size\", { get: () => root.size });\n    this.clear = () => root.clear();\n    this.entries = () => root.entries();\n    this.keys = () => root.keys();\n    this.values = () => root.values();\n    this[MC.SYMBOL.iterator] = () => root[MC.SYMBOL.iterator]();\n  }\n}\n\n/**\n * {@link XWeakMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap | WeakMap},\n * except that it supports automatically creating missing entries with\n * with {@link sGet} according to a default value getter function.\n *\n * @typeParam K The type of the keys the map holds.\n * @typeParam V The type of the values the map holds.\n */\nexport class XWeakMap<K extends WeakKey, V> extends XMapBase<K, V> {\n  /**\n   * Returns a function that when called returns a new {@link XWeakMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XWeakMap}s.\n   */\n  static readonly newXWeakMapGetter = newXWeakMapGetter;\n\n  /**\n   * @param getDefaultV This function is called each time {@link sGet} is\n   *                    called with a non-existent key and must return a value\n   *                    that is then set for that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newWeakMap<K, V>();\n    super(root, getDefaultV);\n  }\n}\n","/**\n * @module Watchers/DOMWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  MutationCategory,\n  CommaSeparatedStr,\n  AtLeastOne,\n} from \"@lisn/globals/types\";\n\nimport { DOM_CATEGORIES_SPACE } from \"@lisn/utils/dom\";\nimport {\n  getIgnoreMove,\n  clearIgnoreMove,\n  ignoreMove,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link DOMWatcher} listens for changes do the DOM tree. It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * It manages registered callbacks globally and reuses MutationObservers for\n * more efficient performance.\n *\n * Each instance of DOMWatcher manages up to two MutationObservers: one\n * for `childList` changes and one for attribute changes, and it disconnects\n * them when there are no active callbacks for the relevant type.\n *\n * `characterData` and changes to base\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Node | Node}s\n * (non-{@link https://developer.mozilla.org/en-US/docs/Web/API/Element | Element})\n * are not supported.\n */\nexport class DOMWatcher {\n  /**\n   * Call the given handler whenever there's a matching mutation within this\n   * DOMWatcher's {@link DOMWatcherConfig.root | root}.\n   *\n   * If {@link OnMutationOptions.skipInitial | options.skipInitial} is `false`\n   * (default), _and_ {@link OnMutationOptions.selector | options.selector} is\n   * given, _and_ {@link OnMutationOptions.categories | options.categories}\n   * includes \"added\", the handler is also called (almost) immediately with all\n   * existing elements matching the selector under this DOMWatcher's\n   * {@link DOMWatcherConfig.root | root}.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times, even if\n   * the options differ. If the handler has already been added, it is removed\n   * and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are not valid.\n   */\n  readonly onMutation: (\n    handler: OnMutationHandler,\n    options?: OnMutationOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offMutation: (handler: OnMutationHandler) => void;\n\n  /**\n   * Ignore an upcoming moving/adding/removing of an element.\n   *\n   * The operation must complete within the next cycle, by the time\n   * MutationObserver calls us.\n   *\n   * Use this to prevent this instance of DOMWatcher from calling any callbacks\n   * that listen for relevant changes as a result of this operation, to prevent\n   * loops for example.\n   *\n   * **IMPORTANT:**\n   *\n   * Ignoring moving of an element from a parent _inside_ this DOMWatcher's\n   * root to another parent that's _outside_ the root, will work as expected,\n   * even though the \"adding to the new parent\" mutation will not be observed.\n   * This is because the element's current parent at the time of the mutation\n   * callback can be examined.\n   *\n   * However if you want to ignore moving of an element _from a parent outside\n   * this DOMWatcher's root_ you need to specify from: null since the \"removal\n   * from the old parent\" mutation would not be observed and there's no way to\n   * examine it's previous parent at the time the \"adding to the new parent\"\n   * mutation is observed.\n   *\n   * For this reason, setting `options.from` to be an element that's not under\n   * the root is internally treated the same as `options.from: null`.\n   */\n  readonly ignoreMove: (target: Element, options: MoveOptions) => void;\n\n  /**\n   * Creates a new instance of DOMWatcher with the given\n   * {@link DOMWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: DOMWatcherConfig) {\n    return new DOMWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of DOMWatcher with the given\n   * {@link DOMWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: DOMWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    const root = myConfig._root === MH.getBody() ? null : myConfig._root;\n    let instance = instances.get(root)?.get(configStrKey);\n    if (!instance) {\n      instance = new DOMWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: DOMWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"DOMWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"DOMWatcher\", logAtCreation: config })\n      : null;\n\n    const buffer = newXMap<Element, MutationOperationInternal>((t) => ({\n      _target: t,\n      _categoryBitmask: 0,\n      _attributes: MH.newSet(),\n      _addedTo: null,\n      _removedFrom: null,\n    }));\n\n    const allCallbacks = MH.newMap<\n      OnMutationHandler,\n      {\n        _callback: OnMutationCallback;\n        _options: OnMutationOptionsInternal;\n      }\n    >();\n\n    // ----------\n\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const mutationHandler = (records: MutationRecord[]) => {\n      debug: logger?.debug9(`Got ${records.length} new records`, records);\n\n      for (const record of records) {\n        const target = MH.targetOf(record);\n        const recType = record.type;\n\n        /* istanbul ignore next */\n        if (!MH.isElement(target)) {\n          continue;\n        }\n\n        if (recType === MC.S_CHILD_LIST) {\n          for (const child of record.addedNodes) {\n            if (MH.isElement(child)) {\n              const operation = buffer.sGet(child);\n              operation._addedTo = target;\n              operation._categoryBitmask |= ADDED_BIT;\n            }\n          }\n\n          for (const child of record.removedNodes) {\n            if (MH.isElement(child)) {\n              const operation = buffer.sGet(child);\n              operation._removedFrom = target;\n              operation._categoryBitmask |= REMOVED_BIT;\n            }\n          }\n\n          //\n        } else if (recType === MC.S_ATTRIBUTES && record.attributeName) {\n          const operation = buffer.sGet(target);\n          operation._attributes.add(record.attributeName);\n          operation._categoryBitmask |= ATTRIBUTE_BIT;\n        }\n      }\n\n      // Schedule flushing of the buffer asynchronously so that we can combine\n      // the records from the two MutationObservers.\n      if (!timer && MH.sizeOf(buffer)) {\n        timer = MH.setTimer(() => {\n          debug: logger?.debug9(`Processing ${buffer.size} operations`);\n          for (const operation of buffer.values()) {\n            if (shouldSkipOperation(operation)) {\n              debug: logger?.debug10(\"Skipping operation\", operation);\n            } else {\n              processOperation(operation);\n            }\n          }\n\n          buffer.clear();\n          timer = null;\n        }, 0);\n      }\n    };\n\n    const observers: Record<MutationType, MyObserver> = {\n      [MC.S_CHILD_LIST]: {\n        _observer: MH.newMutationObserver(mutationHandler),\n        _isActive: false,\n      },\n      [MC.S_ATTRIBUTES]: {\n        _observer: MH.newMutationObserver(mutationHandler),\n        _isActive: false,\n      },\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnMutationHandler,\n      options: OnMutationOptionsInternal,\n    ): OnMutationCallback => {\n      MH.remove(allCallbacks.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => deleteHandler(handler));\n\n      allCallbacks.set(handler, { _callback: callback, _options: options });\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnMutation = async (\n      handler: OnMutationHandler,\n      userOptions: OnMutationOptions | undefined,\n    ) => {\n      const options = getOptions(userOptions ?? {});\n      const callback = createCallback(handler, options);\n\n      let root = config._root ?? MH.getBody();\n      if (!root) {\n        root = await waitForElement(MH.getBody);\n      } else {\n        // So that the call is always async\n        await null;\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      if (options._categoryBitmask & (ADDED_BIT | REMOVED_BIT)) {\n        activateObserver(root, MC.S_CHILD_LIST);\n      }\n\n      if (options._categoryBitmask & ATTRIBUTE_BIT) {\n        activateObserver(root, MC.S_ATTRIBUTES);\n      }\n\n      if (\n        userOptions?.skipInitial ||\n        !options._selector ||\n        !(options._categoryBitmask & ADDED_BIT)\n      ) {\n        return;\n      }\n\n      // As some of the matching elements that currently exist in the root may\n      // have just been added and therefore in the MutationObserver's queue, to\n      // avoid calling the handler with those entries twice, we empty its queue\n      // now and process it (which would also invoke the newly added callback).\n      // Then we skip any elements returned in querySelectorAll that were in\n      // the queue.\n\n      const childQueue = observers[MC.S_CHILD_LIST]._observer.takeRecords();\n      mutationHandler(childQueue);\n\n      for (const element of [\n        ...MH.querySelectorAll(root, options._selector),\n        ...(root.matches(options._selector) ? [root] : []),\n      ]) {\n        const initOperation: MutationOperationInternal = {\n          _target: element,\n          _categoryBitmask: ADDED_BIT,\n          _attributes: MH.newSet(),\n          _addedTo: MH.parentOf(element),\n          _removedFrom: null,\n        };\n\n        const bufferedOperation = buffer.get(element);\n        const diffOperation = getDiffOperation(\n          initOperation,\n          bufferedOperation,\n        );\n\n        if (diffOperation) {\n          if (shouldSkipOperation(diffOperation)) {\n            debug: logger?.debug10(\"Skipping operation\", diffOperation);\n          } else {\n            debug: logger?.debug5(\"Calling initially with\", diffOperation);\n            await invokeCallback(callback, diffOperation);\n          }\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (handler: OnMutationHandler) => {\n      MH.deleteKey(allCallbacks, handler);\n\n      let activeCategories = 0;\n      for (const entry of allCallbacks.values()) {\n        activeCategories |= entry._options._categoryBitmask;\n      }\n\n      if (!(activeCategories & (ADDED_BIT | REMOVED_BIT))) {\n        deactivateObserver(MC.S_CHILD_LIST);\n      }\n\n      if (!(activeCategories & ATTRIBUTE_BIT)) {\n        deactivateObserver(MC.S_ATTRIBUTES);\n      }\n    };\n\n    // ----------\n\n    const processOperation = (operation: MutationOperationInternal) => {\n      debug: logger?.debug10(\"Processing operation\", operation);\n\n      for (const entry of allCallbacks.values()) {\n        const categoryBitmask = entry._options._categoryBitmask;\n        const target = entry._options._target;\n        const selector = entry._options._selector;\n\n        if (!(operation._categoryBitmask & categoryBitmask)) {\n          debug: logger?.debug10(`Category does not match: ${categoryBitmask}`);\n          continue;\n        }\n\n        const currentTargets = [];\n        if (target) {\n          if (!operation._target.contains(target)) {\n            debug: logger?.debug10(\"Target does not match\", target);\n            continue;\n          }\n\n          currentTargets.push(target);\n        }\n\n        if (selector) {\n          const matches = [...MH.querySelectorAll(operation._target, selector)];\n\n          if (operation._target.matches(selector)) {\n            matches.push(operation._target);\n          }\n\n          if (!MH.lengthOf(matches)) {\n            debug: logger?.debug10(`Selector does not match: ${selector}`);\n            continue;\n          }\n\n          currentTargets.push(...matches);\n        }\n\n        invokeCallback(entry._callback, operation, currentTargets);\n      }\n    };\n\n    // ----------\n\n    const activateObserver = (root: Element, mutationType: MutationType) => {\n      if (!observers[mutationType]._isActive) {\n        debug: logger?.debug3(\n          `Activating mutation observer for '${mutationType}'`,\n        );\n        observers[mutationType]._observer.observe(root, {\n          [mutationType]: true,\n          subtree: config._subtree,\n        });\n        observers[mutationType]._isActive = true;\n      }\n    };\n\n    // ----------\n\n    const deactivateObserver = (mutationType: MutationType) => {\n      if (observers[mutationType]._isActive) {\n        debug: logger?.debug3(\n          `Disconnecting mutation observer for '${mutationType}'`,\n        );\n        observers[mutationType]._observer.disconnect();\n        observers[mutationType]._isActive = false;\n      }\n    };\n\n    // ----------\n\n    const shouldSkipOperation = (\n      operation: MutationOperationInternal,\n    ): boolean => {\n      const target = operation._target;\n      const requestToSkip = getIgnoreMove(target);\n      if (!requestToSkip) {\n        return false;\n      }\n\n      const removedFrom = operation._removedFrom;\n      const addedTo = MH.parentOf(target);\n      const requestFrom = requestToSkip.from;\n      const requestTo = requestToSkip.to;\n\n      const root = config._root ?? MH.getBody();\n      // If \"from\" is currently outside our root, we may not have seen a\n      // removal operation.\n      if (\n        (removedFrom === requestFrom || !root.contains(requestFrom)) &&\n        addedTo === requestTo\n      ) {\n        clearIgnoreMove(target);\n        return true;\n      }\n\n      return false;\n    };\n\n    // ----------\n\n    this.ignoreMove = ignoreMove;\n\n    // ----------\n\n    this.onMutation = setupOnMutation;\n\n    // ----------\n\n    this.offMutation = (handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type DOMWatcherConfig = {\n  /**\n   * The root element to observe for changes.\n   *\n   * It cannot be overridden on a per-callback basis.\n   *\n   * @defaultValue document.body\n   */\n  root?: Element | null;\n\n  /**\n   * Whether to observe root's subtree for changes or just direct descendants.\n   *\n   * It cannot be overridden on a per-callback basis.\n   *\n   * @defaultValue true\n   */\n  subtree?: boolean;\n};\n\n/**\n * @interface\n */\nexport type OnMutationOptions = {\n  /**\n   * If this is given, then the handler would only be called for operations\n   * where the target is _either_ the given element or an ancestor of it, i.e.\n   * it {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/contains | Node:contains} it.\n   *\n   * @defaultValue undefined\n   */\n  target?: Element;\n\n  /**\n   * If this is given, then the handler would only be called for operations\n   * where the target matches the given selector _or contains an element\n   * matching the given selector_.\n   *\n   * @defaultValue undefined\n   */\n  selector?: string;\n\n  /**\n   * Specifies a list of {@link MutationCategory}s to target for.\n   *\n   * If not given, then the handler is called for any of the supported\n   * mutations.\n   *\n   * It can be a comma-separated list of category names or an array of such\n   * names.\n   *\n   * @defaultValue undefined\n   */\n  categories?: CommaSeparatedStr<MutationCategory> | MutationCategory[];\n\n  /**\n   * Do not call the handler until there's a future matching mutation.\n   *\n   * By default, if `selector` is given, and `categories` includes `added`, we\n   * call the handler (almost) immediately with all elements matching selector\n   * relative to this DOMWatcher's root.\n   *\n   * The initial operation will contain just the element and\n   * `addedTo: <current parent>`.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\nexport type MoveOptions = AtLeastOne<{\n  /**\n   * If to is missing or null, it's a removal operation.\n   */\n  to: Element | null;\n\n  /**\n   * If from is missing or null, it's an insertion operation.\n   */\n  from: Element | null;\n}>;\n\nexport type MutationOperation = {\n  /**\n   * The target that was changed.\n   */\n  target: Element;\n\n  /**\n   * The target that the callback was interested in.\n   *\n   * If `selector` is given as part of {@link OnMutationOptions}, then\n   * `currentTarget` will point to the target that matched the selector\n   * starting at the operation's `target` as the root. If the operation's\n   * `target` contains more than one element matching selector, the callback\n   * will be called once for _each_ matching child.\n   *\n   * If `target` is given as part of {@link OnMutationOptions}, then\n   * `currentTarget` will be that element.\n   */\n  currentTarget: Element;\n\n  /**\n   * The list of attributes that were changed in this round.\n   */\n  attributes: Set<string>;\n\n  /**\n   * The element that the target was added to, i.e. it's new parent. It is null\n   * if the target was not moved to a new element _during this round_. It does\n   * not mean that this is its current parent.\n   */\n  addedTo: Element | null;\n\n  /**\n   * The element that the target was removed from, i.e. it's old parent. It is\n   * null if the target was not removed from a previous element _during this\n   * round_. It does not mean it did not previously have a parent, but that its\n   * removal was not observed.\n   */\n  removedFrom: Element | null;\n};\n\n/**\n * The handler is invoked with one argument:\n *\n * - a {@link MutationOperation} for a set of mutations related to a particular\n *   element\n *\n * The handler could be invoked multiple times in each \"round\" (cycle of event\n * loop) if there are mutation operations for more than one element that match\n * the supplied {@link OnMutationOptions}.\n */\nexport type OnMutationHandlerArgs = [MutationOperation];\nexport type OnMutationCallback = Callback<OnMutationHandlerArgs>;\nexport type OnMutationHandler =\n  | CallbackHandler<OnMutationHandlerArgs>\n  | OnMutationCallback;\n\n// ----------------------------------------\n\ntype DOMWatcherConfigInternal = {\n  _root: Element | null;\n  _subtree: boolean;\n};\n\ntype OnMutationOptionsInternal = {\n  _target: Element | null;\n  _selector: string;\n  _categoryBitmask: number;\n};\n\ntype MyObserver = {\n  _observer: MutationObserver;\n  _isActive: boolean;\n};\n\ntype MutationType = \"childList\" | \"attributes\";\n\ntype MutationOperationInternal = {\n  _target: Element;\n  _attributes: Set<string>;\n  _addedTo: Element | null;\n  _removedFrom: Element | null;\n  _categoryBitmask: number;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, DOMWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (\n  config: DOMWatcherConfig | undefined,\n): DOMWatcherConfigInternal => {\n  return {\n    _root: config?.root ?? null,\n    _subtree: config?.subtree ?? true,\n  };\n};\n\nconst CATEGORIES_BITS = DOM_CATEGORIES_SPACE.bit;\nconst ADDED_BIT = CATEGORIES_BITS[MC.S_ADDED];\nconst REMOVED_BIT = CATEGORIES_BITS[MC.S_REMOVED];\nconst ATTRIBUTE_BIT = CATEGORIES_BITS[MC.S_ATTRIBUTE];\n\n// ----------------------------------------\n\nconst getOptions = (options: OnMutationOptions): OnMutationOptionsInternal => {\n  let categoryBitmask = 0;\n  const categories = validateStrList(\n    \"categories\",\n    options.categories,\n    DOM_CATEGORIES_SPACE.has,\n  );\n\n  if (categories) {\n    for (const cat of categories) {\n      categoryBitmask |= CATEGORIES_BITS[cat];\n    }\n  } else {\n    categoryBitmask = DOM_CATEGORIES_SPACE.bitmask; // default: all\n  }\n\n  const selector = options.selector ?? \"\";\n  if (!MH.isString(selector)) {\n    throw MH.usageError(\"'selector' must be a string\");\n  }\n\n  return {\n    _categoryBitmask: categoryBitmask,\n    _target: options.target ?? null,\n    _selector: selector,\n  };\n};\n\nconst getDiffOperation = (\n  operationA: MutationOperationInternal,\n  operationB: MutationOperationInternal | undefined,\n): MutationOperationInternal | null => {\n  if (!operationB || operationA._target !== operationB._target) {\n    return operationA;\n  }\n\n  const attributes = MH.newSet<string>();\n  for (const attr of operationA._attributes) {\n    if (!operationB._attributes.has(attr)) {\n      attributes.add(attr);\n    }\n  }\n\n  const categoryBitmask =\n    operationA._categoryBitmask ^ operationB._categoryBitmask;\n\n  const addedTo =\n    operationA._addedTo === operationB._addedTo ? null : operationA._addedTo;\n\n  const removedFrom =\n    operationA._removedFrom === operationB._removedFrom\n      ? null\n      : operationA._removedFrom;\n\n  if (!MH.sizeOf(attributes) && !categoryBitmask && !addedTo && !removedFrom) {\n    return null;\n  }\n\n  return {\n    _target: operationA._target,\n    _categoryBitmask: categoryBitmask,\n    _attributes: attributes,\n    _addedTo: addedTo,\n    _removedFrom: removedFrom,\n  };\n};\n\nconst invokeCallback = (\n  callback: OnMutationCallback,\n  operation: MutationOperationInternal,\n  currentTargets: Element[] = [],\n) => {\n  if (!MH.lengthOf(currentTargets)) {\n    currentTargets = [operation._target];\n  }\n\n  for (const currentTarget of currentTargets) {\n    callback\n      .invoke({\n        target: operation._target,\n        currentTarget,\n        attributes: operation._attributes,\n        addedTo: operation._addedTo,\n        removedFrom: operation._removedFrom,\n      })\n      .catch(logError);\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  XYDirection,\n  ZDirection,\n  NoDirection,\n  AmbiguousDirection,\n  CommaSeparatedStr,\n  Vector,\n} from \"@lisn/globals/types\";\n\nimport { maxAbs, areParallel } from \"@lisn/utils/math\";\nimport { isValidStrList, validateStrList } from \"@lisn/utils/validation\";\n\n/**\n * Returns the cardinal direction in the XY plane for the larger of the two\n * deltas (horizontal vs vertical).\n *\n * If both deltas are 0, returns \"none\".\n *\n * If both deltas are equal and non-0, returns \"ambiguous\".\n *\n * @category Directions\n */\nexport const getMaxDeltaDirection = (\n  deltaX: number,\n  deltaY: number,\n): XYDirection | NoDirection | AmbiguousDirection => {\n  if (!MH.abs(deltaX) && !MH.abs(deltaY)) {\n    return MC.S_NONE;\n  }\n\n  if (MH.abs(deltaX) === MH.abs(deltaY)) {\n    return MC.S_AMBIGUOUS;\n  }\n\n  if (MH.abs(deltaX) > MH.abs(deltaY)) {\n    return deltaX < 0 ? MC.S_LEFT : MC.S_RIGHT;\n  }\n  return deltaY < 0 ? MC.S_UP : MC.S_DOWN;\n};\n\n/**\n * Returns the approximate direction of the given 2D vector as one of the\n * cardinal (XY plane) ones: \"up\", \"down\", \"left\" or \"right\"; or \"ambiguous\".\n *\n * @param angleDiffThreshold See {@link areParallel} or\n *                           {@link Utils.areAntiParallel | areAntiParallel}.\n *                           This determines whether the inferred direction is\n *                           ambiguous. For it to _not_ be ambiguous it must\n *                           align with one of the four cardinal directions to\n *                           within `angleDiffThreshold`. It doesn't make\n *                           sense for this value to be < 0 or >= 45 degrees.\n *                           If it is, it's forced to be positive (absolute)\n *                           and <= 44.99.\n *\n * @category Directions\n */\nexport const getVectorDirection = (\n  vector: Vector,\n  angleDiffThreshold = 0,\n): XYDirection | AmbiguousDirection | NoDirection => {\n  angleDiffThreshold = MH.min(44.99, MH.abs(angleDiffThreshold));\n\n  if (!maxAbs(...vector)) {\n    return MC.S_NONE;\n  } else if (areParallel(vector, [1, 0], angleDiffThreshold)) {\n    return MC.S_RIGHT;\n  } else if (areParallel(vector, [0, 1], angleDiffThreshold)) {\n    return MC.S_DOWN;\n  } else if (areParallel(vector, [-1, 0], angleDiffThreshold)) {\n    return MC.S_LEFT;\n  } else if (areParallel(vector, [0, -1], angleDiffThreshold)) {\n    return MC.S_UP;\n  }\n\n  return MC.S_AMBIGUOUS;\n};\n\n/**\n * Returns the opposite direction to the given direction or null if the given\n * direction has no opposite.\n *\n * @example\n * ```javascript\n * getOppositeDirection(\"up\"); // -> \"down\"\n * getOppositeDirection(\"down\"); // -> \"up\"\n * getOppositeDirection(\"left\"); // -> \"right\"\n * getOppositeDirection(\"right\"); // -> \"left\"\n * getOppositeDirection(\"none\"); // -> null\n * getOppositeDirection(\"ambiguous\"); // -> null\n * ```\n *\n * @category Directions\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid.\n */\nexport const getOppositeDirection = (\n  direction: Direction,\n): Direction | null => {\n  if (!(direction in OPPOSITE_DIRECTIONS)) {\n    throw MH.usageError(\"Invalid 'direction'\");\n  }\n\n  return OPPOSITE_DIRECTIONS[direction];\n};\n\n/**\n * Returns the set of directions which are opposite to the given set of directions.\n *\n * There are two sets of opposite pairs (\"up\"/\"down\" and \"left\"/\"right\") and at\n * least one of the two opposing directions of a pair must be present for the\n * other one to be included. If both directions that constitute a pair of\n * opposites is given, then the other pair is returned instead (minus any that\n * are present in the input). See examples below for clarification.\n *\n * @example\n * ```javascript\n * getOppositeXYDirections(\"up\"); // -> [\"down\"]\n * getOppositeXYDirections(\"left\"); // -> [\"right\"]\n * getOppositeXYDirections(\"up,down\"); // -> [\"left\",\"right\"]\n * getOppositeXYDirections(\"up,left\"); // -> [\"down\",\"right\"]\n * getOppositeXYDirections(\"up,left,right\"); // -> [\"down\"]\n * getOppositeXYDirections(\"none\"); // -> throws\n * getOppositeXYDirections(\"ambiguous\"); // -> throws\n * getOppositeXYDirections(\"in\"); // -> throws\n * ```\n *\n * @category Directions\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid.\n */\nexport const getOppositeXYDirections = (\n  directions: CommaSeparatedStr<XYDirection> | XYDirection[],\n): XYDirection[] => {\n  const directionList = validateStrList(\n    \"directions\",\n    directions,\n    isValidXYDirection,\n  );\n\n  if (!directionList) {\n    throw MH.usageError(\"'directions' is required\");\n  }\n\n  const opposites: XYDirection[] = [];\n  for (const direction of directionList) {\n    const opposite = getOppositeDirection(direction);\n    if (\n      opposite &&\n      isValidXYDirection(opposite) &&\n      !MH.includes(directionList, opposite)\n    ) {\n      opposites.push(opposite);\n    }\n  }\n\n  if (!MH.lengthOf(opposites)) {\n    for (const direction of XY_DIRECTIONS) {\n      if (!MH.includes(directionList, direction)) {\n        opposites.push(direction);\n      }\n    }\n  }\n\n  return opposites;\n};\n\n/**\n * Returns true if the given direction is one of the known XY ones.\n *\n * @category Validation\n */\nexport const isValidXYDirection = (\n  direction: string,\n): direction is XYDirection => MH.includes(XY_DIRECTIONS, direction);\n\n/**\n * Returns true if the given direction is one of the known Z ones.\n *\n * @category Validation\n */\nexport const isValidZDirection = (direction: string): direction is ZDirection =>\n  MH.includes(Z_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string is a valid direction.\n *\n * @category Validation\n */\nexport const isValidDirection = (direction: string): direction is Direction =>\n  MH.includes(DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid directions.\n *\n * @category Validation\n */\nexport const isValidDirectionList = (\n  directions: string | string[],\n): directions is CommaSeparatedStr<Direction> | Direction[] =>\n  isValidStrList(directions, isValidDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const XY_DIRECTIONS = [\n  MC.S_UP,\n  MC.S_DOWN,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const Z_DIRECTIONS = [MC.S_IN, MC.S_OUT] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const SCROLL_DIRECTIONS = [\n  ...XY_DIRECTIONS,\n  MC.S_NONE,\n  MC.S_AMBIGUOUS,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const DIRECTIONS = [\n  ...XY_DIRECTIONS,\n  ...Z_DIRECTIONS,\n  MC.S_NONE,\n  MC.S_AMBIGUOUS,\n] as const;\n\n// --------------------\n\nconst OPPOSITE_DIRECTIONS = {\n  [MC.S_UP]: MC.S_DOWN,\n  [MC.S_DOWN]: MC.S_UP,\n  [MC.S_LEFT]: MC.S_RIGHT,\n  [MC.S_RIGHT]: MC.S_LEFT,\n  [MC.S_IN]: MC.S_OUT,\n  [MC.S_OUT]: MC.S_IN,\n  [MC.S_NONE]: null,\n  [MC.S_AMBIGUOUS]: null,\n} as const;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { addClasses, removeClasses } from \"@lisn/utils/css-alter\";\nimport { copyExistingKeys } from \"@lisn/utils/misc\";\n\nimport { XMap, newXMapGetter, newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * Calls the given event listener, which could be a function that's callable\n * directly, or an object that has a `handleEvent` function property.\n *\n * @category Events: Generic\n */\nexport const callEventListener = (\n  handler: EventListenerOrEventListenerObject,\n  event: Event,\n) => {\n  if (MH.isFunction(handler)) {\n    handler.call(event.currentTarget ?? self, event);\n  } else {\n    handler.handleEvent.call(event.currentTarget ?? self, event);\n  }\n};\n\n/**\n * Adds an event listener for the given event name to the given target.\n *\n * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener | EventTarget:addEventListener}\n * but it handles `options` object in case the browser does not support those.\n * Does not support the `signal` option unless browser natively supports that.\n *\n * @returns `true` if successfully added, or `false` if the same handler has\n * already been added by us, or if the handler is not a valid event listener.\n *\n * @category Events: Generic\n */\nexport const addEventListenerTo = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n): boolean => {\n  options ??= false;\n  eventType = transformEventType(eventType);\n  if (getEventHandlerData(target, eventType, handler, options)) {\n    // already added\n    return false;\n  }\n\n  let thirdArg = options;\n  let wrappedHandler = handler;\n\n  // If the user passed an options object but the browser only supports a\n  // boolen for 'useCapture', then handle this.\n  const supports = getBrowserSupport();\n  if (MH.isNonPrimitive(options)) {\n    if (!supports._optionsArg) {\n      thirdArg = options.capture ?? false;\n    }\n\n    if (options.once && !supports._options.once) {\n      // Remove the handler once it's called once\n      wrappedHandler = (event) => {\n        removeEventListenerFrom(target, eventType, handler, options);\n        callEventListener(handler, event);\n      };\n    }\n  }\n\n  setEventHandlerData(target, eventType, handler, options, {\n    _wrappedHandler: wrappedHandler,\n    _thirdArg: thirdArg,\n  });\n\n  target.addEventListener(eventType, wrappedHandler, thirdArg);\n  return true;\n};\n\n/**\n * Removes an event listener that has been added using\n * {@link addEventListenerTo}.\n *\n * **IMPORTANT:** If you have added a listener using the built-in\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener | EventTarget:addEventListener},\n * then you should use\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener | EventTarget:removeEventListener},\n * to remove it, not this function.\n *\n * @returns `true` if successfully removed, or `false` if the handler has not\n * been added by us.\n *\n * @category Events: Generic\n */\nexport const removeEventListenerFrom = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => {\n  options ??= false;\n  eventType = transformEventType(eventType);\n  const data = getEventHandlerData(target, eventType, handler, options);\n\n  if (!data) {\n    return false;\n  }\n\n  target.removeEventListener(eventType, data._wrappedHandler, data._thirdArg);\n  deleteEventHandlerData(target, eventType, handler, options);\n  return true;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const preventSelect = (target: EventTarget) => {\n  addEventListenerTo(target, MC.S_SELECTSTART, MH.preventDefault);\n  if (MH.isElement(target)) {\n    addClasses(target, MC.PREFIX_NO_SELECT);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const undoPreventSelect = (target: EventTarget) => {\n  removeEventListenerFrom(target, MC.S_SELECTSTART, MH.preventDefault);\n  if (MH.isElement(target)) {\n    removeClasses(target, MC.PREFIX_NO_SELECT);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getBrowserSupport = (): BrowserEventSupport => {\n  if (browserEventSupport) {\n    // already detected\n    return browserEventSupport;\n  }\n\n  const supports = {\n    _pointer: false,\n    _optionsArg: false,\n    _options: {\n      capture: false,\n      passive: false,\n      once: false,\n      signal: false,\n    },\n  };\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#safely_detecting_option_support\n  const optTest = {};\n  let opt: keyof typeof supports._options;\n  for (opt in supports._options) {\n    const thisOpt = opt;\n    MH.defineProperty(optTest, thisOpt, {\n      get: () => {\n        supports._options[thisOpt] = true;\n        if (thisOpt === \"signal\") {\n          return new AbortController().signal;\n        }\n        return false;\n      },\n    });\n  }\n\n  const dummyHandler = () => {}; // TypeScript does not accept null\n  const dummyElement = MH.createElement(\"div\");\n  try {\n    dummyElement.addEventListener(\"testOptionSupport\", dummyHandler, optTest);\n    dummyElement.removeEventListener(\n      \"testOptionSupport\",\n      dummyHandler,\n      optTest,\n    );\n    supports._optionsArg = true;\n  } catch (e__ignored) {\n    //\n  }\n\n  supports._pointer = \"onpointerup\" in dummyElement;\n\n  browserEventSupport = supports;\n  return supports;\n};\n\n// --------------------\n\ntype EventHandlerData = {\n  _wrappedHandler: EventListenerOrEventListenerObject;\n  _thirdArg: boolean | AddEventListenerOptions;\n};\n\nlet browserEventSupport: BrowserEventSupport;\n\nconst registeredEventHandlerData = newXWeakMap<\n  EventTarget,\n  XMap<\n    string, // event type\n    XMap<\n      EventListenerOrEventListenerObject, // user-supplied handler\n      Map<\n        string, // str repr of options\n        EventHandlerData\n      >\n    >\n  >\n>(newXMapGetter(newXMapGetter(() => MH.newMap())));\n\n// detect browser features, see below\ntype BrowserEventSupport = {\n  _pointer: boolean;\n  _optionsArg: boolean;\n  _options: {\n    capture: boolean;\n    passive: boolean;\n    once: boolean;\n    signal: boolean;\n  };\n};\n\nconst getEventOptionsStr = (\n  options: boolean | AddEventListenerOptions,\n): string => {\n  const finalOptions: AddEventListenerOptions = {\n    capture: false,\n    passive: false,\n    once: false,\n  };\n\n  if (options === false || options === true) {\n    finalOptions.capture = options;\n  } else if (MH.isObject(options)) {\n    copyExistingKeys(options, finalOptions);\n  }\n\n  return MH.stringify(finalOptions);\n};\n\nconst getEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  return registeredEventHandlerData\n    .get(target)\n    ?.get(eventType)\n    ?.get(handler)\n    ?.get(optionsStr);\n};\n\nconst deleteEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  MH.deleteKey(\n    registeredEventHandlerData.get(target)?.get(eventType)?.get(handler),\n    optionsStr,\n  );\n  registeredEventHandlerData.prune(target, eventType, handler);\n};\n\nconst setEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n  data: EventHandlerData,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  registeredEventHandlerData\n    .sGet(target)\n    .sGet(eventType)\n    .sGet(handler)\n    .set(optionsStr, data);\n};\n\nconst transformEventType = (eventType: string) => {\n  const supports = getBrowserSupport();\n  if (eventType.startsWith(MC.S_POINTER) && !supports._pointer) {\n    // TODO maybe log a warning message is it's not supported, e.g. there's no\n    // mousecancel\n    return MH.strReplace(eventType, MC.S_POINTER, MC.S_MOUSE);\n  }\n\n  return eventType;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureDevice, GestureIntent } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * `deltaX` and `deltaY` together specify the precise direction in the XY plane\n * of the move if relevant (i.e. other than zoom intent). The direction\n * specifies the effective X (\"left\"/\"right\"), Y (\"up\"/\"down\") or Z (\"in\"/\"out\")\n * direction, or \"none\"/\"ambiguous\".\n *\n * `deltaZ` specifies relative zoom in or out for zoom intents.\n * For zoom in, deltaZ is always > 1, and for zoom out it is < 1.\n * For non-zoom events it is 1.\n *\n * For zoom intents, `direction` would be either in, out or none.\n * For other intents, it would be up, down, left, right, none or ambiguous.\n *\n * For important notes on the delta values see\n * - {@link Utils.getKeyGestureFragment | getKeyGestureFragment}\n * - {@link Utils.getTouchGestureFragment | getTouchGestureFragment}\n * - {@link Utils.getWheelGestureFragment | getWheelGestureFragment}\n *\n * @category Gestures\n */\nexport type GestureFragment = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n  deltaX: number;\n  deltaY: number;\n  deltaZ: number;\n};\n\n/**\n * Returns true if the given string is a valid gesture device.\n *\n * @category Validation\n */\nexport const isValidInputDevice = (device: string): device is GestureDevice =>\n  MH.includes(DEVICES, device);\n\n/**\n * Returns true if the given string is a valid gesture intent.\n *\n * @category Validation\n */\nexport const isValidIntent = (intent: string): intent is GestureIntent =>\n  MH.includes(INTENTS, intent);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * devices.\n *\n * @category Validation\n */\nexport const isValidInputDeviceList = (devices: string | string[]) =>\n  isValidStrList(devices, isValidInputDevice, false);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * intents.\n *\n * @category Validation\n */\nexport const isValidIntentList = (intents: string | string[]) =>\n  isValidStrList(intents, isValidIntent, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const addDeltaZ = (current: number, increment: number) =>\n  MH.max(MIN_DELTA_Z, current * increment);\n\n/**\n * @ignore\n * @internal\n */\nexport const DEVICES: GestureDevice[] = [\n  MC.S_KEY,\n  MC.S_POINTER,\n  MC.S_TOUCH,\n  MC.S_WHEEL,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const INTENTS: GestureIntent[] = [\n  MC.S_SCROLL,\n  MC.S_ZOOM,\n  MC.S_DRAG,\n  MC.S_UNKNOWN,\n] as const;\n\n// Do not allow zooming out more than this value\nconst MIN_DELTA_Z = 0.1;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { Direction, GestureIntent } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport { GestureFragment, addDeltaZ } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"keydown\"\n * events will be considered.\n *\n * If there are no \"keydown\" events in the given list of events, returns\n * `false`.\n *\n * The deltas of all events are summed together before determining final delta\n * and direction.\n *\n * If the events are of conflicting types, i.e. some scroll, some zoom, then\n * the intent will be \"unknown\" and the direction will be \"ambiguous\".\n *\n * Otherwise, if the deltas sum up to 0, the direction will be \"none\".\n *\n * **IMPORTANT NOTES ON THE DELTA VALUES**\n *\n * For key gestures the deltas are unreliable. You should not assume they\n * correspond to the would-be scroll or zoom amount that the browser would do.\n * But they can be used to determine relative amounts for animating, etc.\n *\n * Key press events can be divided into 3 categories: that scroll by a \"line\"\n * (e.g. arrow keys), by a \"page\" (e.g. PageUp/PageDown) or by the full content\n * height/width (e.g. Home/End). The actual scroll amount that _would_ result\n * from the event is dependent on the browser, the window size or the element's\n * scroll width/height, so ours can only be a best guess.\n *\n * Since the actual pixel equivalent is browser specific, we use reasonable\n * default values of delta for each of these \"line\", \"page\" or \"content\" modes,\n * similar to what\n * {@link Utils.getWheelGestureFragment | getWheelGestureFragment} does:\n * - For \"line\", then a configurable fixed value is used\n *  ({@link settings.deltaLineHeight}).\n * - For \"page\", then a configurable fixed value is used\n *  ({@link settings.deltaPageHeight}).\n * - For \"content\", the element's scroll height is used if given, otherwise\n *   the viewport height (same as \"page\"). We do not try to get the current\n *   scroll height of the target element, (which would be the best guess value\n *   of `deltaY` in case of Home/End key presses), as that would either involve\n *   an asynchronous action or would result in forced layout. If the caller is\n *   already tracking the scroll height of the target, you can pass this as an\n *   argument. Otherwise, we'll default to using the viewport height, same as\n *   for PageUp/Down.\n *\n * If the key gesture fragment is a result of multiple events that were\n * accumulated, the deltas are summed as usual, e.g. if a \"page\" is equal to 20\n * \"lines\", then pressing PageDown and then 10 times Up, would result in a\n * delta equal to 10 \"lines\" down.\n *\n * For zoom intents, `deltaZ` gives a relative change of scale, whereby each\n * press of + or - steps up by 15% or down by ~13% (`1 / 1.15` to be exact)\n * since the previous one.\n *\n * @param [options.angleDiffThreshold] See {@link getVectorDirection}\n * @param [options.scrollHeight]       Use this as deltaY when Home/End is\n *                                     pressed.\n *\n * @returns `false` if there are no \"keydown\" events in the list, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getKeyGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n    scrollHeight?: number;\n  },\n): GestureFragment | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  const LINE = settings.deltaLineHeight;\n  const PAGE = settings.deltaPageHeight;\n  const CONTENT = options?.scrollHeight ?? PAGE;\n\n  const deltasUp = (amount: number): DeltasArr => [0, -amount, 1];\n  const deltasDown = (amount: number): DeltasArr => [0, amount, 1];\n  const deltasLeft = (amount: number): DeltasArr => [-amount, 0, 1];\n  const deltasRight = (amount: number): DeltasArr => [amount, 0, 1];\n  const deltasIn: DeltasArr = [0, 0, 1.15];\n  const deltasOut: DeltasArr = [0, 0, 1 / 1.15];\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent | null = null;\n  let deltaX = 0,\n    deltaY = 0,\n    deltaZ = 1;\n\n  for (const event of events) {\n    if (!MH.isKeyboardEvent(event) || event.type !== MC.S_KEYDOWN) {\n      continue;\n    }\n\n    const deltasForKey: Record<string, DeltasArr | null> = {\n      [SK_UP]: deltasUp(LINE),\n      [SK_ARROWUP]: deltasUp(LINE),\n      [SK_PAGEUP]: deltasUp(PAGE),\n      Home: deltasUp(CONTENT),\n      [SK_DOWN]: deltasDown(LINE),\n      [SK_ARROWDOWN]: deltasDown(LINE),\n      [SK_PAGEDOWN]: deltasDown(PAGE),\n      End: deltasDown(CONTENT),\n      [SK_LEFT]: deltasLeft(LINE),\n      [SK_ARROWLEFT]: deltasLeft(LINE),\n      [SK_RIGHT]: deltasRight(LINE),\n      [SK_ARROWRIGHT]: deltasRight(LINE),\n      \" \": (event.shiftKey ? deltasUp : deltasDown)(PAGE),\n      \"+\": deltasIn,\n      \"=\": event.ctrlKey ? deltasIn : null,\n      \"-\": deltasOut,\n    };\n\n    const theseDeltas = deltasForKey[event.key] ?? null;\n    if (!theseDeltas) {\n      // not a relevant key\n      continue;\n    }\n\n    const [thisDeltaX, thisDeltaY, thisDeltaZ] = theseDeltas;\n    const thisIntent = thisDeltaZ !== 1 ? MC.S_ZOOM : MC.S_SCROLL;\n\n    deltaX += thisDeltaX;\n    deltaY += thisDeltaY;\n    deltaZ = addDeltaZ(deltaZ, thisDeltaZ);\n\n    if (!intent) {\n      intent = thisIntent;\n    } else if (intent !== thisIntent) {\n      // mixture of zoom and scroll\n      intent = MC.S_UNKNOWN;\n    }\n  }\n\n  if (!intent) {\n    return false; // no relevant events\n  } else if (intent === MC.S_UNKNOWN) {\n    direction = MC.S_AMBIGUOUS;\n  } else if (intent === MC.S_ZOOM) {\n    direction = deltaZ > 1 ? MC.S_IN : deltaZ < 1 ? MC.S_OUT : MC.S_NONE;\n  } else {\n    direction = getVectorDirection(\n      [deltaX, deltaY],\n      options?.angleDiffThreshold,\n    );\n  }\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_KEY,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n      };\n};\n\n// --------------------\n\ntype DeltasArr = [number, number, number];\n\nconst SK_UP = \"Up\";\nconst SK_DOWN = \"Down\";\nconst SK_LEFT = \"Left\";\nconst SK_RIGHT = \"Right\";\nconst SK_PAGE = \"Page\";\nconst SK_ARROW = \"Arrow\";\nconst SK_PAGEUP = (SK_PAGE + SK_UP) as `${typeof SK_PAGE}${typeof SK_UP}`;\nconst SK_PAGEDOWN = (SK_PAGE + SK_DOWN) as `${typeof SK_PAGE}${typeof SK_DOWN}`;\nconst SK_ARROWUP = (SK_ARROW + SK_UP) as `${typeof SK_ARROW}${typeof SK_UP}`;\nconst SK_ARROWDOWN = (SK_ARROW +\n  SK_DOWN) as `${typeof SK_ARROW}${typeof SK_DOWN}`;\nconst SK_ARROWLEFT = (SK_ARROW +\n  SK_LEFT) as `${typeof SK_ARROW}${typeof SK_LEFT}`;\nconst SK_ARROWRIGHT = (SK_ARROW +\n  SK_RIGHT) as `${typeof SK_ARROW}${typeof SK_RIGHT}`;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\nimport { getBrowserSupport } from \"@lisn/utils/event\";\nimport { GestureFragment } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. If the browser\n * supports Pointer events, then only \"pointermove\" events will be considered.\n * Otherwise, only \"mousemove\" events will be considered.\n *\n * If there are less than 2 such events in the given list of events, returns\n * `false`.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"pointercancel\" in the list or buttons other than the primary are pressed,\n * returns `null`.\n *\n * Pointer gestures always require the primary button to be pressed and the\n * resulting intent is always \"drag\", and `deltaZ` is always 1.\n *\n * @param [options.angleDiffThreshold] See {@link getVectorDirection}\n *\n * @returns `false` if there are less than 2 \"pointermove\"/\"mousemove\" events\n * in the list, `null` if the gesture is terminated, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getPointerGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let isCancelled = false;\n  const supports = getBrowserSupport();\n\n  // If the browser supports pointer events, then only take those; otherwise\n  // take the mouse events\n  const pointerEventClass = supports._pointer ? PointerEvent : MouseEvent;\n  const pointerUpType = supports._pointer ? MC.S_POINTERUP : MC.S_MOUSEUP;\n\n  const filteredEvents: MouseEvent[] = MH.filter(\n    events,\n    (event): event is MouseEvent => {\n      const eType = event.type;\n      isCancelled = isCancelled || eType === MC.S_POINTERCANCEL;\n      if (eType !== MC.S_CLICK && MH.isInstanceOf(event, pointerEventClass)) {\n        // Only events where the primary button is pressed (unless it's a\n        // pointerup event, in which case no buttons should be pressed) are\n        // considered, otherwise consider it terminated\n        isCancelled =\n          isCancelled ||\n          (eType === pointerUpType && event.buttons !== 0) ||\n          (eType !== pointerUpType && event.buttons !== 1);\n        // we don't handle touch pointer events\n        return !MH.isTouchPointerEvent(event);\n      }\n      return false;\n    },\n  );\n\n  const numEvents = MH.lengthOf(filteredEvents);\n  if (numEvents < 2) {\n    return false; // no enough events\n  }\n\n  if (isCancelled) {\n    return null; // terminated\n  }\n\n  const firstEvent = filteredEvents[0];\n  const lastEvent = filteredEvents[numEvents - 1];\n  if (MH.getPointerType(firstEvent) !== MH.getPointerType(lastEvent)) {\n    return null; // different devices, consider it terminated\n  }\n\n  const deltaX = lastEvent.clientX - firstEvent.clientX;\n  const deltaY = lastEvent.clientY - firstEvent.clientY;\n  const direction = getVectorDirection(\n    [deltaX, deltaY],\n    options?.angleDiffThreshold,\n  );\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_POINTER,\n        direction,\n        intent: MC.S_DRAG,\n        deltaX,\n        deltaY,\n        deltaZ: 1,\n      };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureIntent, Vector } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport {\n  maxAbs,\n  havingMaxAbs,\n  distanceBetween,\n  areAntiParallel,\n} from \"@lisn/utils/math\";\nimport { GestureFragment } from \"@lisn/utils/gesture\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Gestures\n */\nexport type TouchDiff = {\n  startX: number;\n  startY: number;\n\n  endX: number;\n  endY: number;\n\n  deltaX: number;\n  deltaY: number;\n\n  isSignificant: boolean;\n};\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"touchmove\" events\n * will be considered.\n *\n * If there are less than 2 such events in the given list of events, returns `false`.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that by default swipe actions follow the natural direction: swipe up\n * with scroll intent results in direction down and swipe down results in\n * direction up. Drag intent always follows the direction of the gesture.\n *\n * For zoom intents, which necessarily involves exactly two fingers `deltaZ`\n * is based on the relative change in distance between the fingers.\n *\n * @param [options.deltaThreshold]\n *                          A change of x or y coordinate less than this is\n *                          considered insignificant, for the purposes of\n *                          determining:\n *                          1) whether the inferred direction is in one of the\n *                             four cardinal ones, or otherwise ambiguous; and\n *                          2) whether more than two fingers have moved and\n *                             therefore whether the direction could be zoom or\n *                             not\n * @param [options.angleDiffThreshold] See {@link getVectorDirection}\n * @param [options.reverseScroll]\n *                          If set to `true`, will disable natural scroll\n *                          direction.\n * @param [options.dragHoldTime]\n *                          If the user presses and holds for at least the\n *                          given amount of milliseconds before moving the\n *                          finger(s), gestures other than pinch will be\n *                          treated as a drag instead of scroll as long as the\n *                          number of fingers touching the screen is\n *                          `options.dragNumFingers`. Default is 500ms.\n * @param [options.dragNumFingers]\n *                          The number of fingers that could be considered a\n *                          drag intent. Default is 1.\n *\n * @returns `false` if there are less than 2 \"touchmove\" events in the list,\n * `null` if the gesture is terminated, otherwise a {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getTouchGestureFragment = (\n  events: Event[],\n  options?: {\n    deltaThreshold?: number;\n    angleDiffThreshold?: number;\n    reverseScroll?: boolean;\n    dragHoldTime?: number;\n    dragNumFingers?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let moves = getTouchDiff(events, options?.deltaThreshold);\n\n  if (!moves) {\n    return null; // terminated\n  }\n\n  let numMoves = MH.lengthOf(moves);\n\n  const holdTime = getHoldTime(events);\n  const canBeDrag =\n    holdTime >= (options?.dragHoldTime ?? 500) &&\n    numMoves === (options?.dragNumFingers ?? 1);\n  const angleDiffThreshold = options?.angleDiffThreshold;\n\n  let deltaX = havingMaxAbs(...moves.map((m) => m.deltaX));\n  let deltaY = havingMaxAbs(...moves.map((m) => m.deltaY));\n  let deltaZ = 1;\n\n  if (numMoves > 2) {\n    // Take only the significant ones\n    moves = MH.filter(moves, (d) => d.isSignificant);\n    numMoves = MH.lengthOf(moves);\n  }\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent = MC.S_UNKNOWN;\n  if (numMoves === 2) {\n    // Check if it's a zoom\n    const vectorA: Vector = [moves[0].deltaX, moves[0].deltaY];\n    const vectorB: Vector = [moves[1].deltaX, moves[1].deltaY];\n\n    // If either finger is approx stationary, or if they move in opposite directions,\n    // treat it as zoom.\n    if (\n      !havingMaxAbs(...vectorA) || // finger A still\n      !havingMaxAbs(...vectorB) || // finger B still\n      areAntiParallel(vectorA, vectorB, angleDiffThreshold)\n    ) {\n      // It's a pinch motion => zoom\n      const startDistance = distanceBetween(\n        [moves[0].startX, moves[0].startY],\n        [moves[1].startX, moves[1].startY],\n      );\n\n      const endDistance = distanceBetween(\n        [moves[0].endX, moves[0].endY],\n        [moves[1].endX, moves[1].endY],\n      );\n\n      direction = startDistance < endDistance ? MC.S_IN : MC.S_OUT;\n      deltaZ = endDistance / startDistance;\n      deltaX = deltaY = 0;\n      intent = MC.S_ZOOM;\n    }\n  }\n\n  const deltaSign = canBeDrag || options?.reverseScroll ? 1 : -1;\n  // If scrolling, swap the deltas for natural scroll direction.\n  // Add +0 to force -0 to be +0 since jest doesn't think they're equal\n  deltaX = deltaSign * deltaX + 0;\n  deltaY = deltaSign * deltaY + 0;\n\n  if (direction === MC.S_NONE) {\n    // Wasn't a zoom. Check if all moves are aligned.\n    let isFirst = true;\n\n    for (const m of moves) {\n      // There's at least one significant move, assume scroll or drag intent.\n      intent = canBeDrag ? MC.S_DRAG : MC.S_SCROLL;\n\n      const thisDirection = getVectorDirection(\n        [deltaSign * m.deltaX, deltaSign * m.deltaY],\n        angleDiffThreshold,\n      );\n\n      if (thisDirection === MC.S_NONE) {\n        continue;\n      }\n\n      if (isFirst) {\n        direction = thisDirection;\n      } else if (direction !== thisDirection) {\n        direction = MC.S_AMBIGUOUS;\n        break;\n      }\n\n      isFirst = false;\n    }\n  }\n\n  if (direction === MC.S_NONE) {\n    const lastTouchEvent = MH.lastOf(events.filter(MH.isTouchEvent));\n    // If all fingers have lifted off, consider it terminated, otherwise wait\n    // for more events.\n    return MH.lengthOf(lastTouchEvent?.touches) ? false : null;\n  }\n\n  return {\n    device: MC.S_TOUCH,\n    direction,\n    intent,\n    deltaX,\n    deltaY,\n    deltaZ,\n  };\n};\n\n/**\n * Returns a description of the changes in each finger between the first and\n * the last relevant TouchEvent in the list.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that, `deltaX`/`deltaY` are the end X/Y coordinate minus the start X/Y\n * coordinate. For natural scroll direction you should swap their signs.\n *\n * @param deltaThreshold If the change of x and y coordinate are both less\n *                       than this, it is marked as not significant.\n *\n * @category Gestures\n */\nexport const getTouchDiff = (\n  events: Event[],\n  deltaThreshold = 0,\n): TouchDiff[] | null => {\n  // Group each touch point of each event by identifier, so that we can get the\n  // start and end coordinate of each finger\n  const groupedTouches = newXMap<number, Touch[]>((): Touch[] => []);\n\n  for (const event of events) {\n    if (!MH.isTouchEvent(event)) {\n      continue;\n    }\n\n    if (event.type === MC.S_TOUCHCANCEL) {\n      return null; // gesture terminated\n    }\n\n    for (const touch of event.touches) {\n      groupedTouches.sGet(touch.identifier).push(touch);\n    }\n  }\n\n  const moves: TouchDiff[] = [];\n\n  for (const touchList of groupedTouches.values()) {\n    const nTouches = MH.lengthOf(touchList);\n    if (nTouches < 2) {\n      // Only one event had that finger in it, so there's no move for it\n      continue;\n    }\n\n    const firstTouch = touchList[0];\n    const lastTouch = touchList[nTouches - 1];\n    const startX = firstTouch.clientX;\n    const startY = firstTouch.clientY;\n\n    const endX = lastTouch.clientX;\n    const endY = lastTouch.clientY;\n\n    const deltaX = endX - startX;\n    const deltaY = endY - startY;\n\n    const isSignificant = maxAbs(deltaX, deltaY) >= deltaThreshold;\n\n    // Consider it a move in one of the 4 cardinal ones\n    moves.push({\n      startX,\n      startY,\n      endX,\n      endY,\n      deltaX,\n      deltaY,\n      isSignificant,\n    });\n  }\n\n  return moves;\n};\n\n// --------------------\n\nconst getHoldTime = (events: Event[]) => {\n  const firstStart = events.findIndex((e) => e.type === MC.S_TOUCHSTART);\n  const firstMove = events.findIndex((e) => e.type === MC.S_TOUCHMOVE);\n  if (firstStart < 0 || firstMove < 1) {\n    return 0;\n  }\n\n  return events[firstMove].timeStamp - events[firstStart].timeStamp;\n};\n","/**\n * @module\n * @ignore\n * @internal\n *\n * FULL CREDIT FOR THIS GOES TO\n * https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n *\n * ADAPTED FROM THE ABOVE SOURCE\n *\n * ORIGINAL COPYRIGHT IN FILE PRESERVED:\n *\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * ORIGINAL LICENSE\n *\n * BSD License\n *\n * For FixedDataTable software\n *\n * Copyright (c) 2015, Facebook, Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *\n *  * Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n *  * Neither the name Facebook nor the names of its contributors may be used to\n *    endorse or promote products derived from this software without specific\n *    prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { settings } from \"@lisn/globals/settings\";\n\n/**\n * ORIGINAL DEVELOPER COMMENT PRESERVED\n *\n * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n * complicated, thus this doc is long and (hopefully) detailed enough to answer\n * your questions.\n *\n * If you need to react to the mouse wheel in a predictable way, this code is\n * like your bestest friend. * hugs *\n *\n * As of today, there are 4 DOM event types you can listen to:\n *\n *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n *\n * So what to do?  The is the best:\n *\n *   normalizeWheel.getEventType();\n *\n * In your event callback, use this code to get sane interpretation of the\n * deltas.  This code will return an object with properties:\n *\n *   spinX   -- normalized spin speed (use for zoom) - x plane\n *   spinY   -- \" - y plane\n *   pixelX  -- normalized distance (to pixels) - x plane\n *   pixelY  -- \" - y plane\n *\n * Wheel values are provided by the browser assuming you are using the wheel to\n * scroll a web page by a number of lines or pixels (or pages).  Values can vary\n * significantly on different platforms and browsers, forgetting that you can\n * scroll at different speeds.  Some devices (like trackpads) emit more events\n * at smaller increments with fine granularity, and some emit massive jumps with\n * linear speed or acceleration.\n *\n * This code does its best to normalize the deltas for you:\n *\n *   - spin is trying to normalize how far the wheel was spun (or trackpad\n *     dragged).  This is super useful for zoom support where you want to\n *     throw away the chunky scroll steps on the PC and make those equal to\n *     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n *     resolve a single slow step on a wheel to 1.\n *\n *   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n *     get the crazy differences between browsers, but at least it'll be in\n *     pixels!\n *\n *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n *     should translate to positive value zooming IN, negative zooming OUT.\n *     This matches the newer 'wheel' event.\n *\n * Why are there spinX, spinY (or pixels)?\n *\n *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n *     with a mouse.  It results in side-scrolling in the browser by default.\n *\n *   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n *\n *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n *     probably is by browsers in conjunction with fancy 3D controllers .. but\n *     you know.\n *\n * Implementation info:\n *\n * Examples of 'wheel' event if you scroll slowly (down) by one step with an\n * average mouse:\n *\n *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n *\n * On the trackpad:\n *\n *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n *\n * On other/older browsers.. it's more complicated as there can be multiple and\n * also missing delta values.\n *\n * The 'wheel' event is more standard:\n *\n * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n *\n * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n * backward compatibility with older events.  Those other values help us\n * better normalize spin speed.  Example of what the browsers provide:\n *\n *                          | event.wheelDelta | event.detail\n *        ------------------+------------------+--------------\n *          Safari v5/OS X  |       -120       |       0\n *          Safari v5/Win7  |       -120       |       0\n *         Chrome v17/OS X  |       -120       |       0\n *         Chrome v17/Win7  |       -120       |       0\n *                IE9/Win7  |       -120       |   undefined\n *         Firefox v4/OS X  |     undefined    |       1\n *         Firefox v4/Win7  |     undefined    |       3\n */\nexport const normalizeWheel = (event: LegacyWheelEvent): WheelData => {\n  let spinX = 0,\n    spinY = 0,\n    pixelX = event.deltaX,\n    pixelY = event.deltaY;\n\n  const LINE = settings.deltaLineHeight;\n\n  // Legacy\n  if (event.detail !== undefined) {\n    spinY = event.detail;\n  }\n  if (event.wheelDelta !== undefined) {\n    spinY = -event.wheelDelta / 120;\n  }\n  if (event.wheelDeltaY !== undefined) {\n    spinY = -event.wheelDeltaY / 120;\n  }\n  if (event.wheelDeltaX !== undefined) {\n    spinX = -event.wheelDeltaX / 120;\n  }\n\n  if ((pixelX || pixelY) && event.deltaMode) {\n    if (event.deltaMode === 1) {\n      // delta in LINE units\n      pixelX *= LINE;\n      pixelY *= LINE;\n    } else {\n      // delta in PAGE units\n      pixelX *= settings.deltaPageWidth;\n      pixelY *= settings.deltaPageHeight;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pixelX && !spinX) {\n    spinX = pixelX < 1 ? -1 : 1;\n  }\n  if (pixelY && !spinY) {\n    spinY = pixelY < 1 ? -1 : 1;\n  }\n\n  return { spinX, spinY, pixelX, pixelY };\n};\n\nexport type WheelData = {\n  spinX: number;\n  spinY: number;\n  pixelX: number;\n  pixelY: number;\n};\n\n// --------------------\n\ntype LegacyWheelEvent = WheelEvent & {\n  wheelDelta?: number;\n  wheelDeltaX?: number;\n  wheelDeltaY?: number;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureIntent } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport { havingMaxAbs } from \"@lisn/utils/math\";\nimport { normalizeWheel } from \"@lisn/utils/normalize-wheel\";\n\nimport { GestureFragment, addDeltaZ } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"wheel\" events\n * will be considered.\n *\n * If there are no \"wheel\" events in the given list of events, returns `false`.\n *\n * The deltas of all events are summed together before determining final delta\n * and direction.\n *\n * If the events are of conflicting types, i.e. some scroll, some zoom, then\n * the intent will be \"unknown\" and the direction will be \"ambiguous\".\n *\n * If the deltas sum up to 0, the direction will be \"none\".\n *\n * **IMPORTANT NOTES ON THE DELTA VALUES**\n *\n * For wheel gestures the deltas are _highly_ unreliable, especially when\n * zooming (Control + wheel or pinching trackpad). You should not assume they\n * correspond to the would-be scroll or zoom amount that the browser would do.\n * But they can be used to determine relative amounts for animating, etc.\n *\n * If the browser reports the delta values of a WheelEvent to be in mode \"line\",\n * then a configurable fixed value is used\n * ({@link Settings.settings.deltaLineHeight | settings.deltaLineHeight}).\n *\n * If the browser reports the delta values of a WheelEvent to be in mode \"page\",\n * then a configurable fixed value is used\n * ({@link Settings.settings.deltaPageWidth | settings.deltaPageWidth} and\n * ({@link Settings.settings.deltaPageHeight | settings.deltaPageHeight}).\n *\n * For zoom intents `deltaZ` is based on what the browser reports as the\n * `deltaY`, which in most browsers roughly corresponds to a percentage zoom\n * factor.\n *\n * @param [options.angleDiffThreshold] See {@link getVectorDirection}.\n *                                     Default is 5.\n *\n * @returns `false` if there are no \"wheel\" events in the list, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getWheelGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent | null = null;\n  let deltaX = 0,\n    deltaY = 0,\n    deltaZ = 1;\n\n  for (const event of events) {\n    if (!MH.isWheelEvent(event) || event.type !== MC.S_WHEEL) {\n      continue;\n    }\n\n    const data = normalizeWheel(event);\n    let thisIntent: GestureIntent = MC.S_SCROLL;\n    let thisDeltaX = data.pixelX;\n    let thisDeltaY = data.pixelY;\n    let thisDeltaZ = 1;\n    const maxDelta = havingMaxAbs(thisDeltaX, thisDeltaY);\n\n    if (event.ctrlKey && !thisDeltaX) {\n      // Browsers report negative deltaY for zoom in, so swap sign\n      let percentage = -maxDelta;\n      // If it's more than 50, assume it's a mouse wheel => delta is roughly\n      // multiple of 10%. Otherwise a trackpad => delta is roughly multiple of 1%\n      if (MH.abs(percentage) >= 50) {\n        percentage /= 10;\n      }\n\n      thisDeltaZ = 1 + percentage / 100;\n\n      thisDeltaX = thisDeltaY = 0;\n      thisIntent = MC.S_ZOOM;\n    } else if (event.shiftKey && !thisDeltaX) {\n      // Holding Shift while turning wheel or swiping trackpad in vertically\n      // results in sideways scroll.\n      thisDeltaX = thisDeltaY;\n      thisDeltaY = 0;\n    }\n\n    deltaX += thisDeltaX;\n    deltaY += thisDeltaY;\n    deltaZ = addDeltaZ(deltaZ, thisDeltaZ);\n\n    if (!thisIntent) {\n      // not a relevant key\n    } else if (!intent) {\n      intent = thisIntent;\n    } else if (intent !== thisIntent) {\n      // mixture of zoom and scroll\n      intent = MC.S_UNKNOWN;\n    }\n  }\n\n  if (!intent) {\n    return false; // no relevant events\n  } else if (intent === MC.S_UNKNOWN) {\n    direction = MC.S_AMBIGUOUS;\n  } else if (intent === MC.S_ZOOM) {\n    direction = deltaZ > 1 ? MC.S_IN : deltaZ < 1 ? MC.S_OUT : MC.S_NONE;\n  } else {\n    direction = getVectorDirection(\n      [deltaX, deltaY],\n      options?.angleDiffThreshold,\n    );\n  }\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_WHEEL,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n      };\n};\n","/**\n * @module Watchers/GestureWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureIntent,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  addClasses,\n  removeClasses,\n  setNumericStyleJsVars,\n} from \"@lisn/utils/css-alter\";\nimport { isValidDirection } from \"@lisn/utils/directions\";\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { getDebouncedHandler } from \"@lisn/utils/tasks\";\n\nimport { addDeltaZ } from \"@lisn/utils/gesture\";\n\nimport {\n  isValidInputDevice,\n  isValidIntent,\n  GestureFragment,\n  DEVICES,\n  INTENTS,\n} from \"@lisn/utils/gesture\";\nimport { getKeyGestureFragment } from \"@lisn/utils/gesture-key\";\nimport { getPointerGestureFragment } from \"@lisn/utils/gesture-pointer\";\nimport { getTouchGestureFragment } from \"@lisn/utils/gesture-touch\";\nimport { getWheelGestureFragment } from \"@lisn/utils/gesture-wheel\";\nimport { logError } from \"@lisn/utils/log\";\nimport {\n  maxAbs,\n  toNonNegNum,\n  toPosNum,\n  toNumWithBounds,\n} from \"@lisn/utils/math\";\nimport { randId, objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { LoggerInterface } from \"@lisn/debug/types\";\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link GestureWatcher} listens for user gestures resulting from wheel,\n * pointer, touch or key input events.\n *\n * It supports scroll, zoom or drag type gestures.\n *\n * It manages registered callbacks globally and reuses event listeners for more\n * efficient performance.\n */\nexport class GestureWatcher {\n  /**\n   * Call the given handler whenever the user performs a gesture on the target\n   * matching the given options.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same event target, even if the options differ. If the handler has already\n   * been added for this target, either using {@link onGesture} or\n   * {@link trackGesture}, then it will be removed and re-added with the\n   * current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onGesture: (\n    target: EventTarget,\n    handler: OnGestureHandler,\n    options?: OnGestureOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offGesture: (target: EventTarget, handler: OnGestureHandler) => void;\n\n  /**\n   * This is the same as {@link onGesture} except that if `handler` is not\n   * given, then it defaults to an internal handler that updates a set of CSS\n   * variables on the target's style:\n   *\n   *   - `--lisn-js--<Intent>-delta-x`\n   *   - `--lisn-js--<Intent>-delta-y`\n   *   - `--lisn-js--<Intent>-delta-z`\n   *\n   * where and `<Intent>` is one of {@link GestureIntent} and the delta X, Y\n   * and Z are the _total summed up_ `deltaX`, `deltaY` and `deltaZ` since the\n   * callback was added, summed over all devices used (key, touch, etc).\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackGesture} or using\n   * {@link onGesture}, then it will be removed and re-added with the current\n   * options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly trackGesture: (\n    element: Element,\n    handler?: OnGestureHandler | null,\n    options?: OnGestureOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackGesture}.\n   */\n  readonly noTrackGesture: (\n    element: Element,\n    handler?: OnGestureHandler | null,\n  ) => void;\n\n  /**\n   * Creates a new instance of GestureWatcher with the given\n   * {@link GestureWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: GestureWatcherConfig) {\n    return new GestureWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of GestureWatcher with the given\n   * {@link GestureWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: GestureWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new GestureWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: GestureWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"GestureWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"GestureWatcher\", logAtCreation: config })\n      : null;\n\n    const allCallbacks = newXWeakMap<\n      EventTarget,\n      Map<\n        OnGestureHandler,\n        {\n          _callback: OnGestureCallback;\n          _wrapper: OnGestureHandlerWrapper;\n          _options: OnGestureOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    // For each target and event type, add only 1 global listener that will then\n    // manage the event queues and callbacks.\n    const allListeners = newXWeakMap<\n      EventTarget,\n      Map<GestureDevice, DeviceListeners>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const createCallback = (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      options: OnGestureOptionsInternal,\n    ): OnGestureCallback => {\n      MH.remove(allCallbacks.get(target)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler for\", options);\n      const { _callback, _wrapper } = getCallbackAndWrapper(\n        handler,\n        options,\n        logger,\n      );\n\n      _callback.onRemove(() => deleteHandler(target, handler, options));\n\n      allCallbacks.sGet(target).set(handler, {\n        _callback,\n        _wrapper,\n        _options: options,\n      });\n\n      return _callback;\n    };\n\n    // ----------\n\n    // async for consistency with other watchers and future compatibility in\n    // case of change needed\n    const setupOnGesture = async (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      userOptions: OnGestureOptions | undefined,\n    ) => {\n      const options = getOptions(config, userOptions ?? {});\n      createCallback(target, handler, options);\n\n      for (const device of options._devices ?? DEVICES) {\n        let listeners = allListeners.get(target)?.get(device);\n        if (listeners) {\n          debug: logger?.debug4(\n            `Listeners already added for ${device}`,\n            target,\n            options,\n          );\n        } else {\n          debug: logger?.debug4(\n            `Adding listeners for ${device}`,\n            target,\n            options,\n          );\n\n          listeners = setupListeners(target, device, options);\n          allListeners.sGet(target).set(device, listeners);\n        }\n\n        listeners._nCallbacks++;\n        if (options._preventDefault) {\n          listeners._nPreventDefault++;\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      options: OnGestureOptionsInternal,\n    ) => {\n      MH.deleteKey(allCallbacks.get(target), handler);\n      allCallbacks.prune(target);\n\n      for (const device of options._devices ?? DEVICES) {\n        const listeners = allListeners.get(target)?.get(device);\n        if (listeners) {\n          listeners._nCallbacks--;\n          if (options._preventDefault) {\n            listeners._nPreventDefault--;\n          }\n\n          if (!listeners._nCallbacks) {\n            debug: logger?.debug4(\n              `No more callbacks for target and device ${device}; removing listeners`,\n              target,\n            );\n\n            MH.deleteKey(allListeners.get(target), device);\n            listeners._remove();\n          }\n        }\n      }\n    };\n\n    // ----------\n\n    const invokeCallbacks = (\n      target: EventTarget,\n      device: GestureDevice,\n      event: Event,\n    ): boolean /* true if terminated */ => {\n      const preventDefault =\n        (allListeners.get(target)?.get(device)?._nPreventDefault ?? 0) > 0;\n\n      let isTerminated = false;\n      for (const { _wrapper } of allCallbacks.get(target)?.values() || []) {\n        isTerminated =\n          _wrapper(target, device, event, preventDefault) || isTerminated;\n      }\n\n      return isTerminated;\n    };\n\n    // ----------\n\n    const setupListeners = (\n      target: EventTarget,\n      device: GestureDevice,\n      options: OnGestureOptionsInternal,\n    ): DeviceListeners => {\n      const intents = options._intents;\n      let hasAddedTabIndex = false;\n      let hasPreventedSelect = false;\n\n      if (\n        device === MC.S_KEY &&\n        MH.isElement(target) &&\n        !MH.getTabIndex(target)\n      ) {\n        hasAddedTabIndex = true;\n        // enable element to receive keydown events\n        MH.setTabIndex(target);\n      } else if (MH.isElement(target) && device === MC.S_TOUCH) {\n        if (options._preventDefault) {\n          addClasses(target, MC.PREFIX_NO_TOUCH_ACTION);\n        }\n\n        if (!intents || MH.includes(intents, MC.S_DRAG)) {\n          hasPreventedSelect = true;\n          preventSelect(target);\n        }\n      }\n\n      const addOrRemoveListeners = (\n        action: \"add\" | \"remove\",\n        listener: EventListener,\n        eventTypes: readonly (keyof GlobalEventHandlersEventMap)[],\n      ) => {\n        const method =\n          action === \"add\" ? addEventListenerTo : removeEventListenerFrom;\n        for (const eventType of eventTypes) {\n          debug: logger?.debug8(`${action} listener for ${eventType}`, target);\n          method(target, eventType, listener, {\n            passive: false,\n            capture: true,\n          });\n        }\n      };\n\n      const addInitialListener = () =>\n        addOrRemoveListeners(\"add\", initialListener, initiatingEvents[device]);\n\n      const removeInitialListener = () =>\n        addOrRemoveListeners(\n          \"remove\",\n          initialListener,\n          initiatingEvents[device],\n        );\n\n      const addOngoingListener = () =>\n        addOrRemoveListeners(\"add\", processEvent, ongoingEvents[device]);\n\n      const removeOngoingListener = () =>\n        addOrRemoveListeners(\"remove\", processEvent, ongoingEvents[device]);\n\n      const initialListener = (event: Event) => {\n        processEvent(event);\n        removeInitialListener();\n        addOngoingListener();\n      };\n\n      const processEvent = (event: Event) => {\n        const isTerminated = invokeCallbacks(target, device, event);\n        if (isTerminated) {\n          removeOngoingListener();\n          addInitialListener();\n        }\n      };\n\n      addInitialListener();\n\n      return {\n        _nCallbacks: 0,\n        _nPreventDefault: 0,\n        _remove: () => {\n          if (MH.isElement(target)) {\n            if (hasAddedTabIndex) {\n              MH.unsetTabIndex(target);\n            }\n\n            removeClasses(target, MC.PREFIX_NO_TOUCH_ACTION);\n\n            if (hasPreventedSelect) {\n              undoPreventSelect(target);\n            }\n          }\n\n          removeOngoingListener();\n          removeInitialListener();\n        },\n      };\n    };\n\n    // ----------\n\n    this.trackGesture = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setGestureCssProps;\n        // initial values\n        for (const intent of INTENTS) {\n          setGestureCssProps(element, {\n            intent,\n            totalDeltaX: 0,\n            totalDeltaY: 0,\n            totalDeltaZ: 1,\n          });\n        }\n      }\n\n      return setupOnGesture(element, handler, options);\n    };\n\n    // ----------\n\n    this.noTrackGesture = (element, handler?) => {\n      if (!handler) {\n        handler = setGestureCssProps;\n\n        // delete the properties\n        for (const intent of INTENTS) {\n          setGestureCssProps(element, { intent });\n        }\n      }\n\n      this.offGesture(element, handler);\n    };\n\n    // ----------\n\n    this.onGesture = setupOnGesture;\n\n    // ----------\n\n    this.offGesture = (target, handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(target)?.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type GestureWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnGestureOptions.preventDefault | preventDefault} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.debounceWindow | debounceWindow} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 150\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.deltaThreshold | deltaThreshold} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 5\n   */\n  deltaThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.angleDiffThreshold | angleDiffThreshold} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * It does not make much sense to set this to 0.\n   *\n   * The value is in _degrees_, not radians.\n   *\n   * @defaultValue 35\n   */\n  angleDiffThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.naturalTouchScroll | naturalTouchScroll} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue true\n   */\n  naturalTouchScroll?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.touchDragHoldTime | touchDragHoldTime} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 500\n   */\n  touchDragHoldTime?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.touchDragNumFingers | touchDragNumFingers} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 1\n   */\n  touchDragNumFingers?: number;\n};\n\n/**\n * @interface\n */\nexport type OnGestureOptions = {\n  /**\n   * One or more device types to listen for. If not specified, then all devices\n   * are enabled.\n   *\n   * It can be a comma-separated list of {@link GestureDevice}s or an array of\n   * such devices.\n   *\n   * @defaultValue undefined\n   */\n  devices?: CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If given, callback will only be called if the gesture's direction is one\n   * of the given ones.\n   *\n   * It can be a comma-separated list of {@link Direction}s or an array of such\n   * directions.\n   *\n   * @defaultValue undefined\n   */\n  directions?: CommaSeparatedStr<Direction> | Direction[];\n\n  /**\n   * If given, callback will only be called if the gesture's intent is one\n   * of the given ones.\n   *\n   * It can be a comma-separated list of {@link GestureIntent}s or an\n   * array of such intents.\n   *\n   * @defaultValue undefined\n   */\n  intents?: CommaSeparatedStr<GestureIntent> | GestureIntent[];\n\n  /**\n   * Set minimum total delta X. Further reductions in delta X below this value\n   * will be ignored.\n   *\n   * The value is in pixels and can be negative.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaX?: number;\n\n  /**\n   * Set maximum total delta X. Further increase in delta X above this value\n   * will be ignored.\n   *\n   * The value is in pixels.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaX?: number;\n\n  /**\n   * Set minimum total delta Y. Further reductions in delta Y below this value\n   * will be ignored.\n   *\n   * The value is in pixels and can be negative.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaY?: number;\n\n  /**\n   * Set maximum total delta Y. Further increase in delta Y above this value\n   * will be ignored.\n   *\n   * The value is in pixels.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaY?: number;\n\n  /**\n   * Set minimum total delta Z. Further reductions in delta Z below this value\n   * will be ignored.\n   *\n   * The value is in percentage zoom, relative to 1, and can be less than 1 but\n   * must be > 0.1 which is a hard minimum.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaZ?: number;\n\n  /**\n   * Set maximum total delta Z. Further increase in delta Z above this value\n   * will be ignored.\n   *\n   * The value is in percentage zoom, relative to 1, and must be positive.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaZ?: number;\n\n  /**\n   * If true, the events of the gesture, e.g. relevant key presses or touch\n   * moves, etc, will have their default action prevented.\n   *\n   * **IMPORTANT:** For pointer gestures, then pointer/mouse down and click\n   * will be prevented.\n   *\n   * @defaultValue {@link GestureWatcherConfig.preventDefault}\n   */\n  preventDefault?: boolean;\n\n  /**\n   * If given, callback will be called at most once every `debounceWindow`\n   * milliseconds.\n   *\n   * Note that if both `debounceWindow` and `deltaThreshold` are set, _both_\n   * must be exceeded before callback is called.\n   *\n   * @defaultValue {@link GestureWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n\n  /**\n   * Callback will only be called when the gesture's accumulated delta, since\n   * the last time callback was called, exceeds `deltaThreshold`.\n   *\n   * At least one of the three deltas (X, Y or Z) must exceed this number (in\n   * absolute value). Note that when comparing `deltaZ`, it is multiplied by\n   * 100 since it represents fractions of 1 (100%). So supplying\n   * `deltaThreshold` of 10 means is equivalent to the following condition:\n   *\n   * ```\n   * abs(deltaX) >= 10 || abs(deltaY) >= 10 ||  abs(1 - deltaZ) >= 0.1\n   * ```\n   *\n   * Accumulation of the delta ends if the gesture is terminated, for example,\n   * in case of touch gestures, by a \"touchcancel\" event of by the final finger\n   * lifting off..\n   *\n   * Note that if both `debounceWindow` and `deltaThreshold` are set, _both_\n   * must be exceeded before callback is called.\n   *\n   * @defaultValue {@link GestureWatcherConfig.deltaThreshold}\n   */\n  deltaThreshold?: number;\n\n  /**\n   * See {@link Utils.getVectorDirection | getVectorDirection}.\n   *\n   * @defaultValue {@link GestureWatcherConfig.angleDiffThreshold}\n   */\n  angleDiffThreshold?: number;\n\n  /**\n   * Whether touch scroll gestures follow the natural direction: swipe up\n   * with scroll intent results in direction down and swipe down results in\n   * direction up.\n   *\n   * @defaultValue {@link GestureWatcherConfig.naturalTouchScroll}\n   */\n  naturalTouchScroll?: boolean;\n\n  /**\n   * If the user presses and holds on a touchscreen for at least the given\n   * amount of milliseconds before moving the finger(s), touch gestures other\n   * than pinch will be treated as a drag intent instead of scroll as long as\n   * the number of fingers touching the screen is {@link touchDragNumFingers}.\n   *\n   * Set to 0 in order to treat _all_ non-pinch touch gestures as drag.\n   *\n   * Set to a negative number in order to treat _all_ non-pinch touch gestures\n   * as scroll.\n   *\n   * @defaultValue {@link GestureWatcherConfig.touchDragHoldTime}\n   */\n  touchDragHoldTime?: number;\n\n  /**\n   * The number of fingers that could be considered a drag intent for touch\n   * gestures.\n   *\n   * @defaultValue {@link GestureWatcherConfig.touchDragHoldTime}\n   */\n  touchDragNumFingers?: number;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the event target that was passed to the {@link GestureWatcher.onGesture}\n *   call (equivalent to\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget | Event:currentTarget}).\n * - the {@link GestureData} that describes the gesture's progression since the\n *   last time the callback was called and since the callback was added.\n */\nexport type OnGestureHandlerArgs = [EventTarget, GestureData, Event[]];\nexport type OnGestureCallback = Callback<OnGestureHandlerArgs>;\nexport type OnGestureHandler =\n  | CallbackHandler<OnGestureHandlerArgs>\n  | OnGestureCallback;\n\nexport type GestureData = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n\n  /**\n   * Delta in the horizontal direction since the start of the gesture.\n   */\n  deltaX: number;\n\n  /**\n   * Delta in the vertical direction since the start of the gesture.\n   */\n  deltaY: number;\n\n  /**\n   * Relative fractional zoom in or out for zoom intents since the start of\n   * the gesture.\n   *\n   * For zoom in, `deltaZ` is always > 1, and for zoom out it is < 1.\n   *\n   * For non-zoom gestures it is 1.\n   */\n  deltaZ: number;\n\n  /**\n   * The time in milliseconds it took for the gesture. This will be the\n   * difference in timestamps between the first and last event that composed\n   * the gesture. For key and wheel gestures this could be 0, since 1 event is\n   * sufficient for them.\n   */\n  time: number;\n  // TODO totalTime, velocity (bound by max), averageVelocity (bound by max)\n\n  /**\n   * Delta in the horizontal direction since the callback was added.\n   */\n  totalDeltaX: number;\n\n  /**\n   * Delta in the vertical direction since the callback was added.\n   */\n  totalDeltaY: number;\n\n  /**\n   * Percentage (relative) zoom in or out for zoom intents since the callback\n   * was added.\n   */\n  totalDeltaZ: number;\n};\n\n// ----------------------------------------\n\ntype GestureWatcherConfigInternal = {\n  _preventDefault: boolean;\n  _debounceWindow: number;\n  _deltaThreshold: number;\n  _angleDiffThreshold: number;\n  _naturalTouchScroll: boolean;\n  _touchDragHoldTime: number;\n  _touchDragNumFingers: number;\n};\n\ntype OnGestureOptionsInternal = {\n  _devices: GestureDevice[] | null;\n  _directions: Direction[] | null;\n  _intents: GestureIntent[] | null;\n  _minTotalDeltaX: number | null;\n  _maxTotalDeltaX: number | null;\n  _minTotalDeltaY: number | null;\n  _maxTotalDeltaY: number | null;\n  _minTotalDeltaZ: number | null;\n  _maxTotalDeltaZ: number | null;\n  _preventDefault: boolean;\n  _debounceWindow: number;\n  _deltaThreshold: number;\n  _angleDiffThreshold: number;\n  _naturalTouchScroll: boolean;\n  _touchDragHoldTime: number;\n  _touchDragNumFingers: number;\n};\n\ntype OnGestureHandlerWrapper = (\n  _target: EventTarget,\n  _device: GestureDevice,\n  _event: Event,\n  _preventDefault: boolean,\n) => boolean;\n\n// Specific to a combination of target + device\ntype DeviceListeners = {\n  _nCallbacks: number; // total number of callbacks\n  _nPreventDefault: number; // total number wanting to prevent default action\n  _remove: () => void;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, GestureWatcher>();\n\nconst getConfig = (\n  config: GestureWatcherConfig | undefined,\n): GestureWatcherConfigInternal => {\n  config ??= {};\n  return {\n    _preventDefault: config.preventDefault ?? true,\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 150),\n    _deltaThreshold: toNonNegNum(config.deltaThreshold, 5),\n    _angleDiffThreshold: toPosNum(config.angleDiffThreshold, 35),\n    _naturalTouchScroll: config.naturalTouchScroll ?? true,\n    _touchDragHoldTime: config.touchDragHoldTime ?? 500,\n    _touchDragNumFingers: config.touchDragNumFingers ?? 1,\n  };\n};\n\nconst initiatingEvents: {\n  [D in GestureDevice]: readonly (keyof GlobalEventHandlersEventMap)[];\n} = {\n  key: [MC.S_KEYDOWN],\n  // If the browser doesn't support pointer events, then\n  // addEventListenerTo will transform it into mousedown\n  //\n  // We need to listen for click, since that occurs after a pointerup (i.e.\n  // after a gesure is terminated and the ongoing listeners removed), but it\n  // needs to have its default action prevented.\n  pointer: [MC.S_POINTERDOWN, MC.S_CLICK],\n  touch: [MC.S_TOUCHSTART],\n  wheel: [MC.S_WHEEL],\n} as const;\n\nconst ongoingEvents: {\n  [D in GestureDevice]: readonly (keyof GlobalEventHandlersEventMap)[];\n} = {\n  key: [MC.S_KEYDOWN],\n  pointer: [\n    // If the browser doesn't support point events, then\n    // addEventListenerTo will transform them into mouse*\n    MC.S_POINTERDOWN,\n    MC.S_POINTERUP, // would terminate\n    MC.S_POINTERMOVE,\n    MC.S_POINTERCANCEL, // would terminate\n    MC.S_CLICK, // would terminate; can be default-prevented\n  ],\n  touch: [MC.S_TOUCHSTART, MC.S_TOUCHEND, MC.S_TOUCHMOVE, MC.S_TOUCHCANCEL],\n  wheel: [MC.S_WHEEL],\n} as const;\n\nconst fragmentGetters: {\n  [D in GestureDevice]: (\n    events: Event[],\n    options: {\n      deltaThreshold?: number;\n      angleDiffThreshold?: number;\n      reverseScroll?: boolean;\n      dragHoldTime?: number;\n      dragNumFingers?: number;\n    },\n  ) => GestureFragment | null | false;\n} = {\n  [MC.S_KEY]: getKeyGestureFragment,\n  [MC.S_POINTER]: getPointerGestureFragment,\n  [MC.S_TOUCH]: getTouchGestureFragment,\n  [MC.S_WHEEL]: getWheelGestureFragment,\n};\n\nconst getOptions = (\n  config: GestureWatcherConfigInternal,\n  options: OnGestureOptions,\n): OnGestureOptionsInternal => {\n  const debounceWindow = toNonNegNum(\n    options[MC.S_DEBOUNCE_WINDOW],\n    config._debounceWindow, // watcher is never debounced, so apply default here\n  );\n  const deltaThreshold = toNonNegNum(\n    options.deltaThreshold,\n    config._deltaThreshold,\n  );\n\n  return {\n    _devices:\n      validateStrList(\"devices\", options.devices, isValidInputDevice) ?? null,\n    _directions:\n      validateStrList(\"directions\", options.directions, isValidDirection) ??\n      null,\n    _intents:\n      validateStrList(\"intents\", options.intents, isValidIntent) ?? null,\n    _minTotalDeltaX: options.minTotalDeltaX ?? null,\n    _maxTotalDeltaX: options.maxTotalDeltaX ?? null,\n    _minTotalDeltaY: options.minTotalDeltaY ?? null,\n    _maxTotalDeltaY: options.maxTotalDeltaY ?? null,\n    _minTotalDeltaZ: options.minTotalDeltaZ ?? null,\n    _maxTotalDeltaZ: options.maxTotalDeltaZ ?? null,\n    _preventDefault: options.preventDefault ?? config._preventDefault,\n    _debounceWindow: debounceWindow,\n    _deltaThreshold: deltaThreshold,\n    _angleDiffThreshold: toNonNegNum(\n      options.angleDiffThreshold,\n      config._angleDiffThreshold,\n    ),\n    _naturalTouchScroll:\n      options.naturalTouchScroll ?? config._naturalTouchScroll,\n    _touchDragHoldTime: options.touchDragHoldTime ?? config._touchDragHoldTime,\n    _touchDragNumFingers:\n      options.touchDragNumFingers ?? config._touchDragNumFingers,\n  };\n};\n\n// Since each callback needs to accumulate events during its debounce window\n// and until its threshold is exceeded, we use a wrapper around the\n// user-supplied handler to do that.\nconst getCallbackAndWrapper = (\n  handler: OnGestureHandler,\n  options: OnGestureOptionsInternal,\n  logger: LoggerInterface | null,\n): { _callback: OnGestureCallback; _wrapper: OnGestureHandlerWrapper } => {\n  let totalDeltaX = 0,\n    totalDeltaY = 0,\n    totalDeltaZ = 1;\n  // When there's a pointer down, drag then pointerup, since we prevent\n  // pointerdown default action, this results in a click event shortly\n  // afterwards even when there's been a movement of the mouse. We detect that\n  // and prevent this click.\n  let preventNextClick = false;\n\n  const directions = options._directions;\n  const intents = options._intents;\n  const minTotalDeltaX = options._minTotalDeltaX;\n  const maxTotalDeltaX = options._maxTotalDeltaX;\n  const minTotalDeltaY = options._minTotalDeltaY;\n  const maxTotalDeltaY = options._maxTotalDeltaY;\n  const minTotalDeltaZ = options._minTotalDeltaZ;\n  const maxTotalDeltaZ = options._maxTotalDeltaZ;\n  const deltaThreshold = options._deltaThreshold;\n  const angleDiffThreshold = options._angleDiffThreshold;\n  const reverseScroll = !options._naturalTouchScroll;\n  const dragHoldTime = options._touchDragHoldTime;\n  const dragNumFingers = options._touchDragNumFingers;\n\n  // The event queue is cleared when the threshold is exceeded AND the debounce\n  // window has passed. It's not necessary for the actual handler to be called\n  // then (e.g. if the direction or intent doesn't match, it won't be).\n  const eventQueue: Event[] = [];\n  const id = randId();\n\n  // Since handler could be a function or a callback (not callable), we wrap it\n  // so that in case it's already a callback, its removal will result in\n  // deleteHandler getting called. It is not debounced itself, instead there's\n  // a debounced wrapper that invokes it.\n  const callback = wrapCallback(handler);\n\n  // The debounced callback wrapper is what is debounced.\n  // It accumulates total deltas and checks if the conditions (of threshold,\n  // direction and intent) are satisfied before calling the real handler.\n  //\n  // Most importantly, since it is only called when the debounce window has\n  // expired it can clear the event queue if the threshold is also exceeded.\n  const debouncedWrapper = getDebouncedHandler(\n    options._debounceWindow,\n    (\n      target: EventTarget,\n      fragment: GestureFragment,\n      eventQueueCopy: Event[],\n    ) => {\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      const deltaX = fragment.deltaX;\n      const deltaY = fragment.deltaY;\n      const deltaZ = fragment.deltaZ;\n      const device = fragment.device;\n\n      if (\n        MH.round(maxAbs(deltaX, deltaY, (1 - deltaZ) * 100)) < deltaThreshold\n      ) {\n        debug: logger?.debug7(\n          `[${id}] Delta threshold not exceeded for callback`,\n        );\n        return;\n      }\n\n      debug: logger?.debug9(`[${id}] Done summing events for ${device}`);\n      clearEventQueue(device, eventQueue);\n\n      const newTotalDeltaX = toNumWithBounds(totalDeltaX + deltaX, {\n        min: minTotalDeltaX,\n        max: maxTotalDeltaX,\n      });\n\n      const newTotalDeltaY = toNumWithBounds(totalDeltaY + deltaY, {\n        min: minTotalDeltaY,\n        max: maxTotalDeltaY,\n      });\n\n      const newTotalDeltaZ = toNumWithBounds(addDeltaZ(totalDeltaZ, deltaZ), {\n        min: minTotalDeltaZ,\n        max: maxTotalDeltaZ,\n      });\n\n      if (\n        newTotalDeltaX === totalDeltaX &&\n        newTotalDeltaY === totalDeltaY &&\n        newTotalDeltaZ === totalDeltaZ\n      ) {\n        return;\n      }\n\n      totalDeltaX = newTotalDeltaX;\n      totalDeltaY = newTotalDeltaY;\n      totalDeltaZ = newTotalDeltaZ;\n\n      const direction = fragment.direction;\n      const intent = fragment.intent;\n      const time =\n        eventQueueCopy[MH.lengthOf(eventQueueCopy) - 1]?.timeStamp -\n          eventQueueCopy[0]?.timeStamp || 0;\n\n      const data = {\n        device,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n        time,\n        totalDeltaX,\n        totalDeltaY,\n        totalDeltaZ,\n      };\n\n      if (\n        direction !== MC.S_NONE &&\n        (!directions || MH.includes(directions, direction)) &&\n        (!intents || MH.includes(intents, intent))\n      ) {\n        callback.invoke(target, data, eventQueueCopy).catch(logError);\n      } else {\n        debug: logger?.debug7(\n          `[${id}] Directions or intents not matching for callback`,\n        );\n      }\n    },\n  );\n\n  // This wrapper is NOT debounced and adds the events to the queue, prevents\n  // default action if needed, and indicates whether the gesture is terminated.\n  const wrapper = (\n    target: EventTarget,\n    device: GestureDevice,\n    event: Event,\n    preventDefault: boolean,\n  ) => {\n    eventQueue.push(event);\n\n    const fragment = fragmentGetters[device](eventQueue, {\n      angleDiffThreshold,\n      deltaThreshold,\n      reverseScroll,\n      dragHoldTime,\n      dragNumFingers,\n    });\n\n    debug: logger?.debug8(\n      `[${id}] Got fragment for ${device} (${event.type})`,\n      fragment,\n      [...eventQueue].map((e) => e.type),\n    );\n\n    if (preventDefault) {\n      preventDefaultActionFor(\n        event,\n        !!fragment || (event.type === MC.S_CLICK && preventNextClick),\n      );\n    }\n\n    if (fragment === false) {\n      // not enough events in the queue, pass\n      debug: logger?.debug9(`[${id}] Not enough events for gesture ${device}`);\n      return false;\n    } else if (fragment === null) {\n      // consider the gesture terminated\n      clearEventQueue(device, eventQueue);\n      debug: logger?.debug9(`[${id}] Gesture for ${device} terminated`);\n      return true;\n    }\n\n    if (device === MC.S_POINTER) {\n      // If we're here, there's been a drag, expect a click immediately\n      // afterwards and prevent default action.\n      preventNextClick = true;\n      MH.setTimer(() => {\n        preventNextClick = false;\n      }, 10);\n    }\n\n    debouncedWrapper(\n      target,\n      fragment,\n      [...eventQueue], // copy\n    );\n\n    return false;\n  };\n\n  return { _callback: callback, _wrapper: wrapper };\n};\n\nconst clearEventQueue = (device: GestureDevice, queue: Event[]) => {\n  const keepLastEvent = device === MC.S_POINTER || device === MC.S_TOUCH;\n  queue.splice(0, MH.lengthOf(queue) - (keepLastEvent ? 1 : 0));\n};\n\nconst preventDefaultActionFor = (event: Event, isActualGesture: boolean) => {\n  const target = event.currentTarget;\n  const eventType = event.type;\n  const isPointerDown =\n    eventType === MC.S_POINTERDOWN || eventType === MC.S_MOUSEDOWN;\n\n  if (\n    eventType === MC.S_TOUCHMOVE ||\n    eventType === MC.S_WHEEL ||\n    ((eventType === MC.S_CLICK || eventType === MC.S_KEYDOWN) &&\n      isActualGesture) ||\n    (isPointerDown && (event as MouseEvent).buttons === 1)\n  ) {\n    MH.preventDefault(event);\n\n    if (isPointerDown && MH.isHTMLElement(target)) {\n      // Otherwise capturing key events won't work\n      target.focus({ preventScroll: true });\n    }\n  }\n};\n\nconst setGestureCssProps = (\n  target: EventTarget,\n  data: Partial<GestureData>,\n) => {\n  const intent = data.intent;\n\n  if (!MH.isElement(target) || !intent || intent === MC.S_UNKNOWN) {\n    return;\n  }\n\n  const prefix = `${intent}-`;\n\n  if (intent === MC.S_ZOOM) {\n    setNumericStyleJsVars(\n      target,\n      {\n        deltaZ: data.totalDeltaZ,\n      },\n      {\n        _prefix: prefix,\n        _numDecimal: 2,\n      },\n    ); // don't await here\n  } else {\n    setNumericStyleJsVars(\n      target,\n      {\n        deltaX: data.totalDeltaX,\n        deltaY: data.totalDeltaY,\n      },\n      {\n        _prefix: prefix,\n      },\n    ); // don't await here\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { sortedKeysByVal } from \"@lisn/utils/math\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  BitSpace,\n  newBitSpaces,\n  createBitSpace,\n} from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid device name.\n *\n * @category Validation\n */\nexport const isValidDevice = (device: string): device is Device =>\n  ORDERED_DEVICES.has(device);\n\n/**\n * Returns true if the given string is a valid aspect ratio name.\n *\n * @category Validation\n */\nexport const isValidAspectRatio = (\n  aspectRatio: string,\n): aspectRatio is AspectRatio => ORDERED_ASPECTR.has(aspectRatio);\n\n/**\n * Returns true if the given string is a valid device specification (including\n * `\"min <Device>\"`, etc).\n *\n * Returns false for \"\", although if you passed \"\" in\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} it would\n * accept it as specifying _all_ devices.\n *\n * @category Validation\n */\nexport const isValidDeviceList = (\n  device: string | string[],\n): device is DeviceSpec | Device[] =>\n  isValidForType(S_DEVICES, device, ORDERED_DEVICES);\n\n/**\n * Returns true if the given string is a valid aspect ratio specification\n * (including `\"min <AspectRatio>\"`, etc).\n *\n * Returns false for \"\", although if you passed \"\" in\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} it would\n * accept it as specifying _all_ aspect ratios.\n *\n * @category Validation\n */\nexport const isValidAspectRatioList = (\n  aspectR: string | string[],\n): aspectR is AspectRatioSpec | AspectRatio[] =>\n  isValidForType(S_ASPECTRS_CAMEL, aspectR, ORDERED_ASPECTR);\n\n/**\n * Returns a list of {@link Device}s that are not covered by the given device\n * specification. See\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for accepted\n * formats.\n *\n * Returns an empty for \"\" or for a specification that includes all devices.\n *\n * @category Layout\n */\nexport const getOtherDevices = (device: DeviceSpec | Device[]): Device[] =>\n  getOtherLayouts(S_DEVICES, device, ORDERED_DEVICES);\n\n/**\n * Returns a list of {@link AspectRatio}s that are not covered by the given\n * aspect ratio specification. See\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for accepted\n * formats.\n *\n * Returns an empty for \"\" or for a specification that includes all aspect\n * ratios.\n *\n * @category Layout\n */\nexport const getOtherAspectRatios = (\n  aspectR: AspectRatioSpec | AspectRatio[],\n): AspectRatio[] => getOtherLayouts(S_ASPECTRS_CAMEL, aspectR, ORDERED_ASPECTR);\n\n/**\n * @ignore\n * @internal\n */\nexport const getLayoutBitmask = (options?: {\n  devices?: DeviceSpec | Device[];\n  aspectRatios?: AspectRatioSpec | AspectRatio[];\n}): number => {\n  let layoutBitmask =\n    getBitmaskFromSpec(S_DEVICES, options?.devices, ORDERED_DEVICES) |\n    getBitmaskFromSpec(\n      S_ASPECTRS_CAMEL,\n      options?.aspectRatios,\n      ORDERED_ASPECTR,\n    );\n\n  if (!layoutBitmask) {\n    layoutBitmask = ORDERED_DEVICES.bitmask | ORDERED_ASPECTR.bitmask; // default: all\n  }\n\n  return layoutBitmask;\n};\n\n// In ascending order by width.\nconst ORDERED_DEVICE_NAMES = sortedKeysByVal(settings.deviceBreakpoints);\nconst ORDERED_ASPECTR_NAMES = sortedKeysByVal(settings.aspectRatioBreakpoints);\n\nconst bitSpaces = newBitSpaces();\n\n/**\n * @ignore\n * @internal\n */\nexport const ORDERED_DEVICES = createBitSpace(\n  bitSpaces,\n  ...ORDERED_DEVICE_NAMES,\n);\n\n/**\n * @ignore\n * @internal\n */\nexport const ORDERED_ASPECTR = createBitSpace(\n  bitSpaces,\n  ...ORDERED_ASPECTR_NAMES,\n);\n\n/**\n * @ignore\n * @internal\n */\nexport const NUM_LAYOUTS =\n  MH.lengthOf(ORDERED_DEVICE_NAMES) + MH.lengthOf(ORDERED_ASPECTR_NAMES);\n\n// --------------------\n\nconst S_DEVICES = \"devices\";\nconst S_ASPECTRS_CAMEL = \"aspectRatios\";\n\n// Don't use capture groups for old browser support\nconst LAYOUT_RANGE_REGEX = RegExp(\n  \"^ *(?:\" +\n    \"([a-z-]+) +to +([a-z-]+)|\" +\n    \"min +([a-z-]+)|\" +\n    \"max +([a-z-]+)\" +\n    \") *$\",\n);\n\nconst getLayoutsFromBitmask = <T extends Device | AspectRatio>(\n  keyName: string,\n  bitmask: number,\n  bitSpace: BitSpace<T>,\n): T[] => {\n  const layouts: T[] = [];\n  for (let bit = bitSpace.start; bit <= bitSpace.end; bit++) {\n    const value = 1 << bit;\n    if (bitmask & value) {\n      const name = bitSpace.nameOf(value);\n      if (name) {\n        layouts.push(name);\n      }\n    }\n  }\n\n  return layouts;\n};\n\nconst getOtherLayouts = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[],\n  bitSpace: BitSpace<T>,\n): T[] => {\n  const bitmask = getBitmaskFromSpec(keyName, spec, bitSpace);\n  if (!bitmask) {\n    return [];\n  }\n\n  const oppositeBitmask = bitSpace.bitmask & ~bitmask;\n  return getLayoutsFromBitmask(keyName, oppositeBitmask, bitSpace);\n};\n\nconst isValidForType = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[],\n  bitSpace: BitSpace<T>,\n): boolean => {\n  try {\n    const bitmask = getBitmaskFromSpec(keyName, spec, bitSpace);\n    return bitmask !== 0;\n  } catch (err) {\n    if (MH.isInstanceOf(err, LisnUsageError)) {\n      return false;\n    }\n    throw err;\n  }\n};\n\nconst getBitmaskFromSpec = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[] | undefined | null,\n  bitSpace: BitSpace<T>,\n): number => {\n  if (MH.isEmpty(spec)) {\n    return 0;\n  }\n  const singleKeyName = keyName.slice(0, -1);\n\n  if (MH.isString(spec)) {\n    const rangeMatch = spec.match(LAYOUT_RANGE_REGEX);\n    if (rangeMatch) {\n      const minLayout = rangeMatch[1] || rangeMatch[3];\n      const maxLayout = rangeMatch[2] || rangeMatch[4];\n\n      if (minLayout !== undefined && !bitSpace.has(minLayout)) {\n        throw MH.usageError(`Unknown ${singleKeyName} '${minLayout}'`);\n      }\n\n      if (maxLayout !== undefined && !bitSpace.has(maxLayout)) {\n        throw MH.usageError(`Unknown ${singleKeyName} '${maxLayout}'`);\n      }\n\n      return bitSpace.bitmaskFor(minLayout, maxLayout);\n    }\n  }\n\n  let bitmask = 0;\n  const layouts = validateStrList(keyName, spec, bitSpace.has);\n  if (layouts) {\n    for (const lt of layouts) {\n      bitmask |= bitSpace.bit[lt];\n    }\n  }\n\n  return bitmask;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  addClassesNow,\n  removeClassesNow,\n  getData,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { criticallyDamped } from \"@lisn/utils/math\";\n\nexport type ElapsedTimes = {\n  total: number;\n  sinceLast: number;\n};\n\n/**\n * The callback is as an argument the {@link ElapsedTimes | elapsed times}:\n * - The total elapsed time in milliseconds since the start\n * - The elapsed time in milliseconds since the previous frame\n *\n * The first time this callback is called both of these will be 0 unless seed\n * values were provided.\n *\n * The callback must return `true` if it wants to animate again on the next\n * frame and `false` if done.\n *\n * @since v1.2.0\n *\n * @category Animations\n */\nexport type AnimationCallback = (elapsed: ElapsedTimes) => boolean;\n\n/**\n * Returns a promise that resolves at the next animation frame. Async/await\n * version of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/requestAnimationFrame | requestAnimationFrame}.\n *\n * @returns The timestamp gotten from `requestAnimationFrame`\n *\n * @category Animations\n */\nexport const waitForAnimationFrame = async () =>\n  MH.newPromise<number>((resolve) => {\n    MH.onAnimationFrame(resolve);\n  });\n\n/**\n * Calls the given callback on every animation frame.\n *\n * The returned Promise resolves when the callback is done (returns `false`).\n *\n * @param callback  See {@link AnimationCallback}.\n * @param elapsed   Seed values to use as the total elapsed and elapsed since\n *                  last. Otherwise it will use the timestamp of the first frame\n *                  as the start, which will result in those values being 0 the\n *                  first time.\n *\n * @since v1.2.0\n *\n * @category Animations\n */\nexport const onEveryAnimationFrame = async (\n  callback: AnimationCallback,\n  elapsed?: ElapsedTimes,\n) => {\n  for await (elapsed of newAnimationFrameIterator(elapsed)) {\n    const shouldRepeat = callback(elapsed);\n    if (!shouldRepeat) {\n      break;\n    }\n  }\n};\n\n/**\n * Generator version of {@link onEveryAnimationFrame}.\n *\n * Returns a new async iterator which yields the total elapsed time and elapsed\n * time since the last call on every animation frame.\n *\n * @example\n * ```javascript\n * for await (const elapsed of newAnimationFrameIterator()) {\n *   // ... do something\n *   if (done) break;\n * }\n * ```\n *\n * @since v1.2.0\n *\n * @category Animations\n */\nexport async function* newAnimationFrameIterator(\n  elapsed?: ElapsedTimes,\n): AsyncGenerator<ElapsedTimes, never> {\n  let startTime: number, previousTimeStamp: number;\n  const { total: totalSeed = 0, sinceLast: sinceLastSeed = 0 } = elapsed ?? {};\n\n  const step = async () => {\n    const timeStamp = await waitForAnimationFrame();\n    if (!startTime || !previousTimeStamp) {\n      // First time\n      startTime = timeStamp - totalSeed;\n      previousTimeStamp = timeStamp - sinceLastSeed;\n    }\n\n    const totalElapsed = timeStamp - startTime;\n    const elapsedSinceLast = timeStamp - previousTimeStamp;\n    previousTimeStamp = timeStamp;\n\n    return { total: totalElapsed, sinceLast: elapsedSinceLast };\n  };\n\n  while (true) {\n    yield step();\n  }\n}\n\n/**\n * Returns an animation iterator based on {@link criticallyDamped} that starts\n * at the given position `l`, with velocity `v = 0` and time `t = 0` and yields\n * the new position and velocity, and total time at every animation frame.\n *\n * @param [settings.l]         The initial starting position.\n * @param [settings.lTarget]   The initial target position. Can be updated when\n *                             calling next().\n * @param [settings.lag]       See {@link criticallyDamped}.\n * @param [settings.precision] See {@link criticallyDamped}.\n *\n * @returns An iterator whose `next` method accepts an optional new `lTarget`.\n * The iterator yields an object containing successive values for:\n * - position (`l`)\n * - velocity (`v`)\n * - total time elapsed (`t`)\n *\n * @example\n * If you never need to update the target you can use a for await loop:\n *\n * ```javascript\n * const iterator = newCriticallyDampedAnimationIterator({\n *   l: 10,\n *   lTarget: 100,\n *   lag: 1500\n * });\n *\n * for await (const { l, v, t } of iterator) {\n *   console.log({ l, v, t });\n * }\n * ```\n *\n * @example\n * If you do need to update the target, then call `next` explicitly:\n *\n * ```javascript\n * const iterator = newCriticallyDampedAnimationIterator({\n *   l: 10,\n *   lTarget: 100,\n *   lag: 1500\n * });\n *\n * let { value: { l, v, t } } = await iterator.next();\n * ({ value: { l, v, t } } = await iterator.next()); // updated\n * ({ value: { l, v, t } } = await iterator.next(200)); // updated towards a new target\n * ```\n *\n * @since v1.2.0\n *\n * @category Animations\n */\nexport async function* newCriticallyDampedAnimationIterator(settings: {\n  lTarget: number;\n  lag: number;\n  l?: number;\n}): AsyncGenerator<{ l: number; v: number; t: number }, never> {\n  let { l, lTarget } = settings;\n  const { lag } = settings;\n  let v = 0,\n    t = 0,\n    dt = 0;\n\n  const next = async () => {\n    ({ l, v } = criticallyDamped({\n      l,\n      v,\n      lTarget,\n      dt,\n      lag,\n    }));\n    return { l, v, t };\n  };\n\n  for await ({ total: t, sinceLast: dt } of newAnimationFrameIterator()) {\n    if (dt === 0) {\n      continue;\n    }\n\n    lTarget = yield next() ?? lTarget;\n  }\n\n  throw null; // tell TypeScript it will never end\n}\n\n/**\n * @param webAnimationCallback This function is called for each\n *                             {@link https://developer.mozilla.org/en-US/docs/Web/API/Animation | Animation}\n *                             on the element. It {@link waitForMeasureTime}\n *                             before reading the animations.\n * @param legacyCallback       This function is called if the browser does not\n *                             support the Web Animations API. It is called\n *                             after {@link waitForMutateTime} so it can safely\n *                             modify styles.\n * @param realtime             If true, then it does not\n *                             {@link waitForMeasureTime} or\n *                             {@link waitForMutateTime} and runs\n *                             synchronously.\n *\n * @category Animations\n */\nexport const iterateAnimations = async (\n  element: Element,\n  webAnimationCallback: (animation: Animation) => void,\n  legacyCallback: (element: Element) => void,\n  realtime = false,\n) => {\n  /* istanbul ignore next */ // jsdom doesn't support Web Animations\n  if (\n    \"getAnimations\" in element &&\n    getData(element, MH.prefixName(\"test-legacy\")) === null\n  ) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    for (const animation of element.getAnimations()) {\n      webAnimationCallback(animation);\n    }\n\n    // Old browsers, no Animation API\n  } else {\n    if (!realtime) {\n      await waitForMutateTime();\n    }\n\n    legacyCallback(element);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const resetCssAnimationsNow = (element: Element) => {\n  addClassesNow(element, MC.PREFIX_ANIMATE_DISABLE); // cause it to reset\n  // If we remove the disable class immediately, then it will not have the\n  // effect to reset the animation, since the browser won't see any change in\n  // the classList at the start of the frame. So we ideally need to remove the\n  // disable class after the next paint. However, depending on the animation,\n  // and its state, disabling animation and waiting for the next animation\n  // frame may cause a visible glitch, so we need to force layout now.\n  /* eslint-disable-next-line @typescript-eslint/no-unused-expressions */\n  element[MC.S_CLIENT_WIDTH]; // forces layout\n\n  removeClassesNow(element, MC.PREFIX_ANIMATE_DISABLE);\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  ScrollDirection,\n  ScrollTarget,\n  TargetCoordinates,\n  CoordinateOffset,\n  ScrollPosition,\n  Offset,\n} from \"@lisn/globals/types\";\n\nimport {\n  newAnimationFrameIterator,\n  ElapsedTimes,\n} from \"@lisn/utils/animations\";\nimport { getComputedStylePropNow } from \"@lisn/utils/css-alter\";\nimport { SCROLL_DIRECTIONS } from \"@lisn/utils/directions\";\nimport {\n  waitForInteractive,\n  waitForElementOrInteractive,\n} from \"@lisn/utils/dom-events\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { maxAbs, criticallyDamped } from \"@lisn/utils/math\";\nimport { randId, formatAsString } from \"@lisn/utils/text\";\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * @category Scrolling\n */\nexport type ScrollAction = {\n  cancel: () => boolean;\n\n  /**\n   * Will reject if the scroll is cancelled.\n   */\n  waitFor: () => Promise<ScrollPosition>;\n};\n\n/**\n * @category Scrolling\n * @interface\n */\nexport type ScrollToOptions = {\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue If `document.body` is scrollable, will use that; otherwise `document.scrollingElement`\n   */\n  scrollable?: Element;\n\n  /**\n   * Offset the target coordinates by the given amount(s).\n   *\n   * E.g. if the final target coordinates are computed to be\n   * `{top: 100, left: 0}` and you specify offset as `{top: 10, left: 20}`, it\n   * will scroll to  `{top: 110, left: 20}`.\n   *\n   * @defaultValue undefined\n   */\n  offset?: CoordinateOffset;\n\n  // TODO maybe support fixed average velocity as an alternative to fixed duration?\n  /**\n   * The duration of the scroll animation in milliseconds. If not given, it is\n   * instant.\n   *\n   * @defaultValue 0\n   */\n  duration?: number;\n\n  /**\n   * Whether another request to us to scroll the same target can interrupt this\n   * scroll before it finishes.\n   *\n   * @defaultValue false\n   */\n  weCanInterrupt?: boolean;\n\n  /**\n   * Whether a user attempt to scroll the target can interrupt this before it\n   * finishes.\n   *\n   * @defaultValue false\n   */\n  userCanInterrupt?: boolean;\n\n  /**\n   * If the scrolling element is already at the given coordinates (or strictly\n   * speaking we allow for 5 pixels difference), then if `altTarget` is given,\n   * this will become the target to scroll to.\n   *\n   * @defaultValue undefined\n   */\n  altTarget?: TargetCoordinates | Element | string;\n\n  /**\n   * Offset the target coordinates by the given amount(s) when `altTarget` is used.\n   *\n   * See {@link ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined\n   */\n  altOffset?: CoordinateOffset;\n};\n\n// ----------\n\n/**\n * Returns true if the given element is scrollable in the given direction, or\n * in either direction (if `axis` is not given).\n *\n * It first checks whether the current scroll offset on the target along the\n * given axis is non-0, and if so returns true immediately. Otherwise it will\n * attempt to determine if it's scrollable using one of these methods\n * (controlled by `options.active`):\n * - passive check (default): Will examine `clientWidth/Height`,\n *   `scrollWidth/Height` as well as the computed `overflow` CSS property to try\n *   to determine if the target is scrollable. This is not 100% reliable but is\n *   safer than the active check\n * - active check: Will attempt to scroll the target by 1px and examine if the\n *   scroll offset had changed, then revert it back to 0. This is a more\n *   reliable check, however it can cause issues in certain contexts. In\n *   particular, if a scroll on the target had just been initiated (but it's\n *   scroll offset was still 0), the scroll may be cancelled. Never use that\n *   inside scroll-based handlers.\n *\n * **NOTE:** If the layout has been invalidated and not yet recalculated, this\n * will cause a forced layout, so always {@link waitForMeasureTime} before\n * calling this function when possible.\n *\n * @param [options.axis]    One of \"x\" or \"y\" for horizontal or vertical scroll\n *                          respectively. If not given, it checks both.\n * @param [options.active]  If true, then if the target's current scroll offset\n *                          is 0, it will attempt to scroll it rather than\n *                          looking at its overflow.\n * @param [options.noCache] By default the result of a check is cached for 1s\n *                          and if there's already a cached result for this\n *                          element, it is returned. Set this to true to disable\n *                          checking the cache and also saving the result into\n *                          the cache.\n *\n * @category Scrolling\n */\nexport const isScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n): boolean => {\n  const { axis, active, noCache } = options ?? {};\n  if (!axis) {\n    return (\n      isScrollable(element, { axis: \"y\", active, noCache }) ||\n      isScrollable(element, { axis: \"x\", active, noCache })\n    );\n  }\n\n  if (!noCache) {\n    const cachedResult = isScrollableCache.get(element)?.get(axis);\n    if (!MH.isNullish(cachedResult)) {\n      return cachedResult;\n    }\n  }\n\n  const offset = axis === \"x\" ? \"Left\" : \"Top\";\n  let result = false;\n\n  if (element[`scroll${offset}`]) {\n    result = true;\n  } else if (active) {\n    // Use scrollTo with explicit behavior set to instant instead of setting\n    // the scrollTop/Left properties since the latter doesn't work with\n    // scroll-behavior smooth.\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 1 });\n    const canScroll = element[`scroll${offset}`] > 0;\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 0 });\n    result = canScroll;\n  } else {\n    const dimension = axis === \"x\" ? \"Width\" : \"Height\";\n    const hasOverflow =\n      element[`scroll${dimension}`] > element[`client${dimension}`];\n    const overflowProp = getComputedStylePropNow(element, \"overflow\");\n    result = hasOverflow && MH.includes([\"scroll\", \"auto\"], overflowProp);\n  }\n\n  if (!noCache) {\n    isScrollableCache.sGet(element).set(axis, result);\n    MH.setTimer(() => {\n      MH.deleteKey(isScrollableCache.get(element), axis);\n      isScrollableCache.prune(element);\n    }, IS_SCROLLABLE_CACHE_TIMEOUT);\n  }\n\n  return result;\n};\n\n/**\n * Returns the closest scrollable ancestor of the given element, _not including\n * it_.\n *\n * @param options See {@link isScrollable}\n *\n * @returns `null` if no scrollable ancestors are found.\n *\n * @category Scrolling\n */\nexport const getClosestScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n) => {\n  // Walk up the tree, starting at the element in question but excluding it.\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = MH.parentOf(ancestor))) {\n    if (isScrollable(ancestor, options)) {\n      return ancestor;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Returns the current {@link ScrollAction} if any.\n *\n * @category Scrolling\n */\nexport const getCurrentScrollAction = (\n  scrollable?: Element,\n): ScrollAction | null => {\n  scrollable = toScrollableOrDefault(scrollable);\n  const info = currentScrollInfos.get(scrollable);\n  if (info) {\n    return MH.copyObject(info._action);\n  }\n  return null;\n};\n\n/**\n * Scrolls the given scrollable element to the given `to` target.\n *\n * Returns `null` if there's an ongoing scroll that is not cancellable.\n *\n * Note that if `to` is an element or a selector, then it _must_ be a\n * descendant of the scrollable element.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *               If the target coordinates are invalid.\n *\n * @param to If this is an element, then its top-left position is used as\n *           the target coordinates. If it is a string, then it is treated\n *           as a selector for an element using `querySelector`.\n *\n * @returns `null` if there's an ongoing scroll that is not cancellable,\n * otherwise a {@link ScrollAction}.\n *\n * @category Scrolling\n */\nexport const scrollTo = (\n  to: TargetCoordinates | Element | string,\n  userOptions?: ScrollToOptions,\n): ScrollAction | null => {\n  const options = getOptions(to, userOptions);\n  const scrollable = options._scrollable;\n\n  // cancel current scroll action if any\n  const info = currentScrollInfos.get(scrollable);\n  if (info) {\n    if (!info._action.cancel()) {\n      // current scroll action is not cancellable by us\n      return null;\n    }\n  }\n\n  let isCancelled = false;\n\n  const cancelFn = options._weCanInterrupt\n    ? () => (isCancelled = true)\n    : () => false;\n\n  const scrollEvents = [\"touchmove\", \"wheel\"]; // don't bother with keyboard\n  let preventScrollHandler: EventListener | null = null;\n\n  if (options._userCanInterrupt) {\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(\n        scrollable,\n        eventType,\n        () => {\n          isCancelled = true;\n        },\n        { once: true },\n      );\n    }\n  } else {\n    preventScrollHandler = MH.preventDefault;\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(scrollable, eventType, preventScrollHandler, {\n        passive: false,\n      });\n    }\n  }\n\n  const thisInfo: ScrollInfo = {\n    _action: {\n      waitFor: () => scrollActionPromise,\n      cancel: cancelFn,\n    },\n  };\n\n  const cleanup = () => {\n    if (currentScrollInfos.get(scrollable)?._action === thisInfo._action) {\n      MH.deleteKey(currentScrollInfos, scrollable);\n    }\n\n    if (preventScrollHandler) {\n      for (const eventType of scrollEvents) {\n        removeEventListenerFrom(scrollable, eventType, preventScrollHandler, {\n          passive: false,\n        });\n      }\n    }\n  };\n\n  const scrollActionPromise = initiateScroll(options, () => isCancelled);\n  thisInfo._action.waitFor().then(cleanup).catch(cleanup);\n\n  updateCurrentScrollInfo(scrollable, thisInfo);\n  return thisInfo._action;\n};\n\n/**\n * Returns true if the given string is a valid scroll direction.\n *\n * @category Validation\n */\nexport const isValidScrollDirection = (\n  direction: string,\n): direction is ScrollDirection => MH.includes(SCROLL_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid scroll\n * directions.\n *\n * @category Validation\n */\nexport const isValidScrollDirectionList = (directions: string | string[]) =>\n  isValidStrList(directions, isValidScrollDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const mapScrollable = (original: Element, actualScrollable: Element) =>\n  mappedScrollables.set(original, actualScrollable);\n\n/**\n * @ignore\n * @internal\n */\nexport const unmapScrollable = (original: Element) =>\n  MH.deleteKey(mappedScrollables, original);\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientWidthNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetWidth -\n      getBorderWidth(element, MC.S_LEFT) -\n      getBorderWidth(element, MC.S_RIGHT)\n    : element[MC.S_CLIENT_WIDTH];\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientHeightNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetHeight -\n      getBorderWidth(element, MC.S_TOP) -\n      getBorderWidth(element, MC.S_BOTTOM)\n    : element[MC.S_CLIENT_HEIGHT];\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainContentElement = (): HTMLElement | null =>\n  mainContentElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainContentElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainContentElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainScrollableElement = (): HTMLElement | null =>\n  mainScrollableElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainScrollableElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainScrollableElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultScrollingElement = () => {\n  const body = MH.getBody();\n  return isScrollable(body) ? body : (MH.getDocScrollingElement() ?? body);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetScrollableElement = (\n  target: ScrollTarget | null | undefined,\n): Element | null => toScrollableOrMain(target, tryGetMainScrollableElement);\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchScrollableElement = async (\n  target: ScrollTarget | null | undefined,\n): Promise<Element> => toScrollableOrMain(target, fetchMainScrollableElement);\n\n// ----------------------------------------\n\ntype ScrollToOptionsInternal = {\n  _target: TargetCoordinates;\n  _offset: CoordinateOffset | null;\n  _altTarget: TargetCoordinates | null;\n  _altOffset: CoordinateOffset | null;\n  _scrollable: Element;\n  _duration: number;\n  _weCanInterrupt: boolean;\n  _userCanInterrupt: boolean;\n};\n\ntype Velocity = { top: number; left: number };\n\ntype ScrollInfo = {\n  _action: ScrollAction;\n  _position?: ScrollPosition;\n  _velocity?: Velocity;\n  _elapsed?: ElapsedTimes;\n};\n\nconst IS_SCROLLABLE_CACHE_TIMEOUT = 1000;\n\nconst isScrollableCache = newXMap<Element, Map<\"x\" | \"y\", boolean>>(() =>\n  MH.newMap(),\n);\n\nconst mappedScrollables = MH.newMap<Element, Element>();\n\nconst currentScrollInfos = MH.newMap<Element, ScrollInfo>();\n\nconst DIFF_THRESHOLD = 5;\nconst arePositionsDifferent = (\n  start: ScrollPosition,\n  end: ScrollPosition,\n  threshold = DIFF_THRESHOLD,\n) => maxAbs(start.top - end.top, start.left - end.left) > threshold;\n\n// must be called in \"measure time\"\nconst getBorderWidth = (element: Element, side: Offset) =>\n  MH.ceil(MH.parseFloat(getComputedStylePropNow(element, `border-${side}`)));\n\nconst isScrollableBodyInQuirks = (element: Element): element is HTMLElement =>\n  element === MH.getBody() && MH.getDocScrollingElement() === null;\n\nconst toScrollableOrMain = <R>(\n  target: ScrollTarget | null | undefined,\n  getMain: () => R,\n): Element | R => {\n  if (MH.isElement(target)) {\n    return mappedScrollables.get(target) ?? target;\n  }\n\n  if (!target || target === MH.getWindow() || target === MH.getDoc()) {\n    return getMain();\n  }\n\n  throw MH.usageError(\"Unsupported scroll target\");\n};\n\nconst toScrollableOrDefault = (scrollable: Element | undefined): Element =>\n  scrollable ?? getDefaultScrollingElement();\n\nconst getOptions = (\n  to: TargetCoordinates | Element | string,\n  options: ScrollToOptions | undefined,\n): ScrollToOptionsInternal => {\n  const scrollable = toScrollableOrDefault(options?.scrollable);\n  const target = getTargetCoordinates(scrollable, to);\n  const altTarget = options?.altTarget\n    ? getTargetCoordinates(scrollable, options?.altTarget)\n    : null;\n\n  return {\n    _target: target,\n    _offset: options?.offset ?? null,\n    _altTarget: altTarget,\n    _altOffset: options?.altOffset ?? null,\n    _scrollable: scrollable,\n    _duration: options?.duration ?? 0,\n    _weCanInterrupt: options?.weCanInterrupt ?? false,\n    _userCanInterrupt: options?.userCanInterrupt ?? false,\n  };\n};\n\nconst updateCurrentScrollInfo = (\n  scrollable: Element,\n  newInfo: Partial<ScrollInfo>,\n) => {\n  const existingScrollInfo = currentScrollInfos.get(scrollable);\n  const _action = newInfo._action ?? existingScrollInfo?._action;\n  if (_action) {\n    currentScrollInfos.set(\n      scrollable,\n      MH.merge(existingScrollInfo, newInfo, { _action }),\n    );\n  }\n};\n\nconst getTargetCoordinates = (\n  scrollable: Element,\n  target: TargetCoordinates | Element | string,\n): TargetCoordinates => {\n  const isDocScrollingElement = scrollable === MH.getDocScrollingElement();\n\n  if (MH.isElement(target)) {\n    if (scrollable === target || !scrollable.contains(target)) {\n      throw MH.usageError(\"Target must be a descendant of the scrollable one\");\n    }\n\n    return {\n      top: () =>\n        MH.getBoundingClientRect(target).top -\n        MH.getBoundingClientRect(scrollable).top +\n        (isDocScrollingElement ? 0 : scrollable[MC.S_SCROLL_TOP]),\n      left: () =>\n        MH.getBoundingClientRect(target).left -\n        MH.getBoundingClientRect(scrollable).left +\n        (isDocScrollingElement ? 0 : scrollable[MC.S_SCROLL_LEFT]),\n    };\n  }\n\n  if (MH.isString(target)) {\n    const targetEl = MH.docQuerySelector(target);\n    if (!targetEl) {\n      throw MH.usageError(`No match for '${target}'`);\n    }\n\n    return getTargetCoordinates(scrollable, targetEl);\n  }\n\n  if (!MH.isObject(target) || !(\"top\" in target || \"left\" in target)) {\n    throw MH.usageError(\"Invalid coordinates\");\n  }\n\n  return target;\n};\n\nconst getStartEndPosition = async (\n  options: ScrollToOptionsInternal,\n): Promise<{ _start: ScrollPosition; _end: ScrollPosition }> => {\n  await waitForMeasureTime();\n\n  const applyOffset = (\n    position: ScrollPosition,\n    offset: CoordinateOffset | null,\n  ) => {\n    position.top += offset?.top ?? 0;\n    position.left += offset?.left ?? 0;\n  };\n\n  const scrollable = options._scrollable;\n  const start = {\n    top: scrollable[MC.S_SCROLL_TOP],\n    left: scrollable[MC.S_SCROLL_LEFT],\n  };\n\n  let end = getEndPosition(scrollable, start, options._target);\n  applyOffset(end, options._offset);\n\n  if (!arePositionsDifferent(start, end) && options._altTarget) {\n    end = getEndPosition(scrollable, start, options._altTarget);\n    applyOffset(end, options._altOffset);\n  }\n\n  return { _start: start, _end: end };\n};\n\n// must be called in \"measure time\"\nconst getEndPosition = (\n  scrollable: Element,\n  startPosition: ScrollPosition,\n  targetCoordinates: TargetCoordinates,\n): ScrollPosition => {\n  // by default no change in scroll top or left\n  const endPosition = MH.copyObject(startPosition);\n\n  if (!MH.isNullish(targetCoordinates?.top)) {\n    if (MH.isFunction(targetCoordinates.top)) {\n      endPosition.top = targetCoordinates.top(scrollable);\n    } else {\n      endPosition.top = targetCoordinates.top;\n    }\n  }\n\n  if (!MH.isNullish(targetCoordinates?.left)) {\n    if (MH.isFunction(targetCoordinates.left)) {\n      endPosition.left = targetCoordinates.left(scrollable);\n    } else {\n      endPosition.left = targetCoordinates.left;\n    }\n  }\n\n  // Set boundaries\n  const scrollH = scrollable[MC.S_SCROLL_HEIGHT];\n  const scrollW = scrollable[MC.S_SCROLL_WIDTH];\n  const clientH = getClientHeightNow(scrollable);\n  const clientW = getClientWidthNow(scrollable);\n  endPosition.top = MH.min(scrollH - clientH, endPosition.top);\n  endPosition.top = MH.max(0, endPosition.top);\n\n  endPosition.left = MH.min(scrollW - clientW, endPosition.left);\n  endPosition.left = MH.max(0, endPosition.left);\n\n  return endPosition;\n};\n\nconst initiateScroll = async (\n  options: ScrollToOptionsInternal,\n  isCancelled: () => boolean,\n) => {\n  const position = await getStartEndPosition(options);\n  const duration = options._duration;\n  const scrollable = options._scrollable;\n  const existingScrollInfo = currentScrollInfos.get(scrollable);\n\n  const currentPosition = existingScrollInfo?._position ?? position._start;\n  const currentVelocity = existingScrollInfo?._velocity ?? {\n    [MC.S_TOP]: 0,\n    [MC.S_LEFT]: 0,\n  };\n  let elapsed = existingScrollInfo?._elapsed;\n\n  const logger = debug\n    ? new debug.Logger({\n        name: `scroll-${formatAsString(scrollable)}-${randId()}`,\n        logAtCreation: {\n          options,\n          position,\n          elapsed,\n          currentPosition: MH.copyObject(currentPosition),\n          currentVelocity: MH.copyObject(currentVelocity),\n        },\n      })\n    : null;\n\n  for await (elapsed of newAnimationFrameIterator(elapsed)) {\n    const deltaTime = elapsed.sinceLast;\n    if (deltaTime === 0) {\n      // First time\n      continue;\n    }\n\n    // Element.scrollTo equates to a measurement and needs to run after\n    // painting to avoid forced layout.\n    await waitForMeasureTime();\n\n    if (isCancelled()) {\n      // Reject the promise\n      logger?.debug8(\"Cancelled\");\n      throw currentPosition;\n    }\n\n    for (const s of [MC.S_LEFT, MC.S_TOP] as const) {\n      const { l, v } = criticallyDamped({\n        l: currentPosition[s],\n        v: currentVelocity[s],\n        lTarget: position._end[s],\n        dt: deltaTime,\n        lag: duration,\n      });\n\n      currentPosition[s] = l;\n      currentVelocity[s] = v;\n    }\n\n    updateCurrentScrollInfo(scrollable, {\n      _position: currentPosition,\n      _velocity: currentVelocity,\n      _elapsed: elapsed,\n    });\n\n    const isDone = !arePositionsDifferent(currentPosition, position._end, 0.5);\n    if (isDone) {\n      MH.assign(currentPosition, position._end); // use exact final coordinates\n    }\n\n    MH.elScrollTo(scrollable, currentPosition);\n\n    if (isDone) {\n      logger?.debug8(\"Done\");\n      break;\n    }\n  }\n\n  return currentPosition;\n};\n\n// ------------------------------\n\nlet mainContentElement: HTMLElement;\nlet mainScrollableElement: HTMLElement;\n\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      const mainScrollableElementSelector =\n        settings.mainScrollableElementSelector;\n\n      const contentElement = await waitForElementOrInteractive(() => {\n        return mainScrollableElementSelector\n          ? MH.docQuerySelector(mainScrollableElementSelector)\n          : MH.getBody(); // default if no selector\n      });\n\n      // defaults\n      mainScrollableElement = getDefaultScrollingElement();\n      mainContentElement = MH.getBody();\n\n      if (!contentElement) {\n        logError(\n          MH.usageError(\n            `No match for '${mainScrollableElementSelector}'. ` +\n              \"Scroll tracking/capturing may not work as intended.\",\n          ),\n        );\n      } else if (!MH.isHTMLElement(contentElement)) {\n        logWarn(\"mainScrollableElementSelector should point to an HTMLElement\");\n      } else if (contentElement !== mainContentElement) {\n        mainScrollableElement = mainContentElement = contentElement;\n      }\n    })();\n  }\n\n  return initPromise;\n};\n\n// Try to find the main scrollable/content elements asap so that tryGetMain*\n// can return them if called before fetchMain*\nif (MH.hasDOM()) {\n  waitForInteractive().then(init);\n}\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  addClasses,\n  addClassesNow,\n  setDataNow,\n  setStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, tryWrapContent } from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { camelToKebabCase, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  isScrollable,\n  tryGetMainContentElement,\n  fetchMainContentElement,\n} from \"@lisn/utils/scroll\";\n\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Overlays\n * @interface\n */\nexport type OverlayOptions = {\n  /**\n   * The parent element to insert the overlay into.\n   *\n   * If not given, then:\n   * - if the overlay is to have a `position: fixed`, then `document.body` is used\n   * - otherwise,\n   *   {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}\n   *   is used\n   */\n  parent?: HTMLElement;\n\n  /**\n   * If set, then it will be assigned as the DOM element ID for the new\n   * overlay.\n   *\n   * Furthermore, the new overlay will be created and will not be saved for\n   * future reuse.\n   *\n   * By default, if `id` is not given, the overlay will be saved, and if\n   * {@link createOverlay} is called again with the same `style`, `data` and\n   * parent, the previous overlay is returned.\n   */\n  id?: string;\n\n  /**\n   * Every entry in this object will be set on the `style` of the new overlay.\n   *\n   * **IMPORTANT:** By default overlays are positioned absolutely, so if you need\n   * another positioning, override this here by setting a `position` key in\n   * `style`. If position is either \"absolute\" (by default or explicitly set) or\n   * \"fixed\", and none of `top` or `bottom` is given, `top: 0` is set; and\n   * similarly, if none of `left` or `right` is given, `left: 0` is set.\n   */\n  style?: Record<string, string>;\n\n  /**\n   * Every entry in this object will be set as a data attribute on the new\n   * overlay.\n   *\n   * Keys can be either kebab-case or camelCase (they will be converted if\n   * needed). Do _not_ include the \"data-\" prefix which will be added\n   * automatically. E.g. both \"foo-bar\" and \"fooBar\" will result in\n   * \"data-foo-bar\" being set.\n   */\n  data?: Record<string, string>;\n};\n\n/**\n * Returns an existing overlay for this specification. If the overlay was just\n * created it may not yet be attached to the DOM.\n *\n * @category Overlays\n */\nexport const getOverlay = (userOptions?: OverlayOptions) => {\n  const options = tryGetOverlayOptions(userOptions);\n  if (!options) {\n    return null;\n  }\n\n  return overlays.get(options._parent)?.get(options._overlayKey) ?? null;\n};\n\n/**\n * Creates a new overlay, and inserts it into the DOM as soon as\n * {@link waitForMutateTime} resolves, or returns an already existing matching\n * overlay.\n *\n * **Note** that if {@link OverlayOptions.id} is set, a new overlay will\n * _always_ be created.\n *\n * @category Overlays\n */\nexport const createOverlay = async (userOptions?: OverlayOptions) => {\n  const options = await fetchOverlayOptions(userOptions);\n  const canReuse = !options._id;\n\n  if (canReuse) {\n    const existingOverlay = overlays\n      .get(options._parent)\n      ?.get(options._overlayKey);\n\n    if (existingOverlay) {\n      if (!MH.parentOf(existingOverlay)) {\n        // not yet inserted into the DOM, so wait until it is\n        await waitForMutateTime();\n      }\n      return existingOverlay;\n    }\n  }\n\n  // Create a new one\n  const overlay = createOnlyOverlay(options);\n  if (canReuse) {\n    // Save it now before awating, so that concurrent requests to create the\n    // same one use it\n    overlays.sGet(options._parent).set(options._overlayKey, overlay);\n  } else {\n    overlay.id = options._id;\n  }\n\n  const isPercentageHOffset = MH.includes(\n    (options._style.left || \"\") + (options._style.right || \"\"),\n    \"%\",\n  );\n\n  const isPercentageVOffset = MH.includes(\n    (options._style.top || \"\") + (options._style.bottom || \"\"),\n    \"%\",\n  );\n\n  let needsContentWrapping = false;\n  let parentEl = options._parent;\n  if (isPercentageHOffset || isPercentageVOffset) {\n    needsContentWrapping =\n      (isPercentageHOffset && isScrollable(parentEl, { axis: \"x\" })) ||\n      (isPercentageVOffset && isScrollable(parentEl, { axis: \"y\" }));\n  }\n\n  if (needsContentWrapping) {\n    // TODO Is it possible to unwrap the children when no longer needing this\n    // overlay? Probably not worth the effort. ViewWatcher doesn't remove old\n    // olverlays anyway.\n    parentEl = await tryWrapContent(parentEl, {\n      _classNames: [MC.PREFIX_WRAPPER, PREFIX_WRAPPER],\n      _required: true,\n      _requiredBy: \"percentage offset view trigger with scrolling root\",\n    });\n  }\n\n  if (options._style.position === MC.S_ABSOLUTE) {\n    // Ensure parent has non-static positioning\n    addClasses(parentEl, MH.prefixName(\"overlay-container\"));\n  }\n\n  await moveElement(overlay, { to: parentEl });\n\n  return overlay;\n};\n\n// ----------------------------------------\n\ntype OverlayOptionsInternal = {\n  _parent: HTMLElement;\n  _id: string;\n  _style: Record<string, string>;\n  _data: Record<string, string>;\n  _overlayKey: string;\n};\n\nconst PREFIX_WRAPPER = MH.prefixName(\"overlay-wrapper\");\n\nconst overlays = newXWeakMap<HTMLElement, Map<string, HTMLElement>>(() =>\n  MH.newMap(),\n);\n\nconst tryGetOverlayOptions = (\n  userOptions: OverlayOptions | undefined,\n): OverlayOptionsInternal | null => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = tryGetParent(userOptions?.parent, style.position);\n  if (!parentEl) {\n    return null;\n  }\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst fetchOverlayOptions = async (\n  userOptions: OverlayOptions | undefined,\n): Promise<OverlayOptionsInternal> => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = await fetchParent(userOptions?.parent, style.position);\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst getOverlayKey = (\n  style: Record<string, string>,\n  data: Record<string, string>,\n) => objToStrKey(style) + \"|\" + objToStrKey(data);\n\nconst getCssProperties = (style: Record<string, string> | undefined) => {\n  const finalCssProperties: Record<string, string> = MH.merge(\n    style,\n    { position: style?.position || MC.S_ABSOLUTE }, // default\n  );\n\n  if (\n    finalCssProperties.position === MC.S_ABSOLUTE ||\n    finalCssProperties.position === MC.S_FIXED\n  ) {\n    if (\n      MH.isEmpty(finalCssProperties.top) &&\n      MH.isEmpty(finalCssProperties.bottom)\n    ) {\n      finalCssProperties.top = \"0px\";\n    }\n\n    if (\n      MH.isEmpty(finalCssProperties.left) &&\n      MH.isEmpty(finalCssProperties.right)\n    ) {\n      finalCssProperties.left = \"0px\";\n    }\n  }\n\n  return finalCssProperties;\n};\n\nconst tryGetParent = (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED ? MH.getBody() : tryGetMainContentElement());\n\nconst fetchParent = async (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED\n    ? await waitForElement(MH.getBody)\n    : await fetchMainContentElement());\n\nconst createOnlyOverlay = (options: OverlayOptionsInternal) => {\n  const overlay = MH.createElement(\"div\");\n\n  addClassesNow(overlay, MH.prefixName(\"overlay\"));\n\n  const data = options._data;\n  for (const attr of MH.keysOf(data)) {\n    setDataNow(overlay, camelToKebabCase(attr), data[attr]);\n  }\n\n  const style = options._style;\n  for (const prop of MH.keysOf(style)) {\n    setStylePropNow(overlay, prop, style[prop]);\n  }\n\n  return overlay;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size } from \"@lisn/globals/types\";\n\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { createOverlay } from \"@lisn/utils/overlays\";\n\n/**\n * Returns the content box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @category Size measurements\n */\nexport const getEntryContentBox = (entry: ResizeObserverEntry): Size => {\n  const size = entry.contentBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  }\n\n  const rect = entry.contentRect;\n  return { [MC.S_WIDTH]: rect[MC.S_WIDTH], [MC.S_HEIGHT]: rect[MC.S_HEIGHT] };\n};\n\n/**\n * Returns the border box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @param fallbackToContent If the entry does not contain border box\n *                          measurements (depending on browser), then fall back\n *                          to using the content box size. Otherwise (by\n *                          default) will return `NaN` values for width and\n *                          height.\n *\n * @category Size measurements\n */\nexport const getEntryBorderBox = (\n  entry: ResizeObserverEntry,\n  fallbackToContent = false,\n): Size => {\n  const size = entry.borderBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  } else if (fallbackToContent) {\n    return getEntryContentBox(entry);\n  }\n\n  return { [MC.S_WIDTH]: NaN, [MC.S_HEIGHT]: NaN };\n};\n\n/**\n * Returns true if the given string is a valid box type.\n *\n * @category Validation\n */\nexport const isValidBox = (box: string): box is Box =>\n  MH.includes(ALL_BOXES, box);\n\n/**\n * Returns true if the given string is a valid dimension.\n *\n * @category Validation\n */\nexport const isValidDimension = (dimension: string): dimension is Dimension =>\n  MH.includes(ALL_DIMENSIONS, dimension);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetViewportOverlay = (): HTMLElement | null =>\n  viewportOverlay ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via SizeWatcher\n */\nexport const fetchViewportOverlay = async (): Promise<HTMLElement> => {\n  await init();\n\n  return viewportOverlay;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchViewportSize = async (realtime = false) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const root = MH.hasDOM()\n    ? (MH.getDocScrollingElement() ?? MH.getBody())\n    : null;\n\n  return {\n    [MC.S_WIDTH]: root?.clientWidth ?? 0,\n    [MC.S_HEIGHT]: root?.clientHeight ?? 0,\n  };\n};\n\n// ----------------------------------------\n\nconst S_INLINE_SIZE = \"inlineSize\";\nconst S_BLOCK_SIZE = \"blockSize\";\n\nconst ALL_BOXES: Box[] = [\"content\", \"border\"] as const;\nconst ALL_DIMENSIONS: Dimension[] = [MC.S_WIDTH, MC.S_HEIGHT] as const;\n\nconst getSizeFromInlineBlock = (\n  size: ResizeObserverSize | ReadonlyArray<ResizeObserverSize>,\n): Size => {\n  /* istanbul ignore else */\n  if (MH.isIterableObject(size)) {\n    return {\n      [MC.S_WIDTH]: size[0][S_INLINE_SIZE],\n      [MC.S_HEIGHT]: size[0][S_BLOCK_SIZE],\n    };\n  }\n  return {\n    // in some browsers inlineSize and blockSize are scalars and nor Arrays\n    [MC.S_WIDTH]: (size as { [S_INLINE_SIZE]: number })[S_INLINE_SIZE],\n    [MC.S_HEIGHT]: (size as { [S_BLOCK_SIZE]: number })[S_BLOCK_SIZE],\n  };\n};\n\n// ------------------------------\n\nlet viewportOverlay: HTMLElement;\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      viewportOverlay = await createOverlay({\n        id: MH.prefixName(\"vp-ovrl\"),\n        style: {\n          position: \"fixed\",\n          [MC.S_WIDTH]: \"100vw\",\n          [MC.S_HEIGHT]: \"100vh\",\n        },\n      });\n    })();\n  }\n\n  return initPromise;\n};\n","/**\n * @module Modules/XResizeObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logWarn, logError } from \"@lisn/utils/log\";\n\nimport debug from \"@lisn/debug/debug\";\n\nexport type XResizeObserverCallback = (\n  entries: ResizeObserverEntry[],\n  observer: XResizeObserver,\n) => void;\n\n/**\n * {@link XResizeObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}\n * - observes both border box and content box size changes\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n * - can debounce the callback\n */\nexport class XResizeObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe | ResizeObserver:observe} except it accepts multiple targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent resize.\n   *\n   * If the target is already being observed, nothing is done.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/unobserve | ResizeObserver:unobserve} except it accepts multiple targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/disconnect | ResizeObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * @param debounceWindow Debounce the handler so that it's called at most\n   *                       every `debounceWindow` ms.\n   */\n  constructor(callback: XResizeObserverCallback, debounceWindow?: number) {\n    const logger = debug ? new debug.Logger({ name: \"XResizeObserver\" }) : null;\n\n    // Keep the latest ResizeObserverEntry for each target during the\n    // debounceWindow. Short-lived, so ok to use a Map.\n    const buffer = MH.newMap<Element, ResizeObserverEntry>();\n\n    // Since internally we have two observers, one for border box, one for\n    // content box, we will get called initially twice for a target. So we keep\n    // a counter of 1 or 2 for how many more calls to ignore.\n    const targetsToSkip = MH.newWeakMap<Element, 1 | 2>();\n\n    let observedTargets = MH.newWeakSet<Element>();\n\n    debounceWindow ??= 0;\n\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      // Override entries for previous targets, but keep entries whose targets\n      // were not resized in this round\n      for (const entry of entries) {\n        const target = MH.targetOf(entry);\n        const skipNum = targetsToSkip.get(target);\n        if (skipNum !== undefined) {\n          if (skipNum === 2) {\n            // expect one more call\n            targetsToSkip.set(target, 1);\n          } else {\n            // done\n            /* istanbul ignore next */\n            if (skipNum !== 1) {\n              logError(MH.bugError(`# targetsToSkip is ${skipNum}`));\n            }\n            MH.deleteKey(targetsToSkip, target);\n          }\n\n          continue;\n        }\n\n        buffer.set(target, entry);\n      }\n\n      debug: logger?.debug9(\n        `Got ${entries.length} new entries. ` +\n          `Have ${buffer.size} unique-target entries`,\n        entries,\n      );\n\n      if (!timer && MH.sizeOf(buffer)) {\n        timer = MH.setTimer(() => {\n          if (MH.sizeOf(buffer)) {\n            callback(MH.arrayFrom(buffer.values()), this);\n            buffer.clear();\n          }\n\n          timer = null;\n        }, debounceWindow);\n      }\n    };\n\n    const borderObserver = MH.newResizeObserver(resizeHandler);\n    const contentObserver = MH.newResizeObserver(resizeHandler);\n    if (!borderObserver || !contentObserver) {\n      logWarn(\n        \"This browser does not support ResizeObserver. Some features won't work.\",\n      );\n    }\n\n    const observeTarget = (target: Element) => {\n      observedTargets.add(target);\n      borderObserver?.observe(target, { box: \"border-box\" });\n      contentObserver?.observe(target);\n    };\n\n    // --------------------\n\n    this.observe = (...targets) => {\n      debug: logger?.debug10(\"Observing targets\", targets);\n\n      for (const target of targets) {\n        observeTarget(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      debug: logger?.debug10(\"Observing targets (later)\", targets);\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.set(target, 2);\n        observeTarget(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      debug: logger?.debug10(\"Unobserving targets\", targets);\n\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        borderObserver?.unobserve(target);\n        contentObserver?.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      debug: logger?.debug10(\"Disconnecting\");\n      observedTargets = MH.newWeakSet();\n      borderObserver?.disconnect();\n      contentObserver?.disconnect();\n    };\n  }\n}\n","/**\n * @module Watchers/SizeWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size, SizeTarget } from \"@lisn/globals/types\";\n\nimport { setNumericStyleJsVars } from \"@lisn/utils/css-alter\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum } from \"@lisn/utils/math\";\nimport {\n  isValidBox,\n  isValidDimension,\n  getEntryBorderBox,\n  getEntryContentBox,\n  tryGetViewportOverlay,\n  fetchViewportOverlay,\n} from \"@lisn/utils/size\";\nimport { objToStrKey } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XResizeObserver } from \"@lisn/modules/x-resize-observer\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link SizeWatcher} monitors the size of a given target. It's built on top\n * of {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}.\n *\n * It manages registered callbacks globally and reuses ResizeObservers.\n *\n * Each instance of SizeWatcher manages up to two ResizeObservers: one\n * for content-box size changes and one for border-box size changes.\n */\nexport class SizeWatcher {\n  /**\n   * Call the given handler whenever the target's size changes.\n   *\n   * Unless {@link OnResizeOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest size data.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly onResize: (\n    handler: OnResizeHandler,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offResize: (handler: OnResizeHandler, target?: SizeTarget) => void;\n\n  /**\n   * This is the same as {@link onResize} except that if `handler` is not given,\n   * then it defaults to an  handler that updates a set of CSS variables on the\n   * target's style:\n   *\n   * - If {@link OnResizeOptions.target | options.target} is not given, or is\n   *   `window`, the following CSS variables are set on the root (`html`)\n   *   element and represent the viewport size:\n   *   - `--lisn-js--window-border-width`\n   *   - `--lisn-js--window-border-height`\n   *   - `--lisn-js--window-content-width`\n   *   - `--lisn-js--window-content-height`\n   *\n   * - Otherwise, the following variables are set on the target itself and\n   *   represent its visible size:\n   *   - `--lisn-js--border-width`\n   *   - `--lisn-js--border-height`\n   *   - `--lisn-js--content-width`\n   *   - `--lisn-js--content-height`\n   *\n   * If `target` is `document`, then it will use `document.documentElement`.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly trackSize: (\n    handler?: OnResizeHandler | null,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackSize}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackSize: (\n    handler?: OnResizeHandler | null,\n    target?: SizeTarget,\n  ) => void;\n\n  /**\n   * Get the size of the given target. It will get the size from a\n   * ResizeObserverEntry and so it's always delayed by one frame at least.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly fetchCurrentSize: (target?: SizeTarget) => Promise<SizeData>;\n\n  /**\n   * Creates a new instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: SizeWatcherConfig) {\n    return new SizeWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: SizeWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new SizeWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: SizeWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"SizeWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"SizeWatcher\", logAtCreation: config })\n      : null;\n\n    const allSizeData = MH.newWeakMap<Element, SizeData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnResizeHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    // Don't debounce the observer, only callbacks.\n    const xObserver = new XResizeObserver(resizeHandler);\n\n    // ----------\n\n    const fetchCurrentSize = async (\n      target: SizeTarget | undefined,\n    ): Promise<SizeData> => {\n      const element = await fetchElement(target);\n      const sizeData = allSizeData.get(element);\n      if (sizeData) {\n        return MH.copyObject(sizeData);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp ResizeObserver\n        const observer = MH.newResizeObserver((entries) => {\n          const sizeData = getSizeData(entries[0]);\n          observer?.disconnect();\n          resolve(sizeData); // no need to copy or save it\n        });\n\n        if (observer) {\n          observer.observe(element);\n        } else {\n          // Warning would have already been logged by XResizeObserver\n          resolve({\n            border: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n            content: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n          });\n        }\n      });\n    };\n\n    // ----------\n\n    const fetchOptions = async (\n      options: OnResizeOptions,\n    ): Promise<OnResizeOptionsInternal> => {\n      const box = options.box ?? null;\n      if (box && !isValidBox(box)) {\n        throw MH.usageError(`Unknown box type: '${box}'`);\n      }\n\n      const dimension = options.dimension ?? null;\n      if (dimension && !isValidDimension(dimension)) {\n        throw MH.usageError(`Unknown dimension: '${dimension}'`);\n      }\n\n      return {\n        _element: await fetchElement(MH.targetOf(options)),\n        _box: box,\n        _dimension: dimension,\n        // If threshold is 0, internally treat as 1 (pixel)\n        _threshold:\n          toNonNegNum(options.threshold, config._resizeThreshold) || 1,\n        _debounceWindow:\n          options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n      };\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = { _callback: callback, _options: options };\n      allCallbacks.sGet(element).set(handler, entry);\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnResize = async (\n      handler: OnResizeHandler,\n      userOptions: OnResizeOptions | undefined,\n    ) => {\n      const options = await fetchOptions(userOptions ?? {});\n      const element = options._element;\n\n      // Don't await for the size data before creating the callback so that\n      // setupOnResize and removeOnResize have the same \"timing\" and therefore\n      // calling onResize and offResize immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options);\n      const callback = entry._callback;\n      const sizeData = await fetchCurrentSize(element);\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = sizeData;\n      allSizeData.set(element, sizeData);\n\n      // Always use observeLater. This is because the initial call to callback\n      // shouldn't be debounced, and so we call it manually here, regardless if\n      // it's a new target or not. Therefore we don't want the observer to also\n      // call it in case it _is_ a new target.\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, sizeData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, sizeData);\n      }\n    };\n\n    // ----------\n\n    const removeOnResize = async (\n      handler: OnResizeHandler,\n      target: SizeTarget | undefined,\n    ) => {\n      const options = await fetchOptions({ target });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setSizeCssProps) {\n          // delete the properties\n          setSizeCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ) => {\n      const element = options._element;\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n        xObserver.unobserve(element);\n        MH.deleteKey(allSizeData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = (entry: ResizeObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      const latestData = getSizeData(entry);\n      allSizeData.set(element, latestData);\n\n      debug: logger?.debug9(\"New size data\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        const thresholdsExceeded = hasExceededThreshold(\n          entry._options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\"Threshold not exceeded\");\n          continue;\n        }\n\n        entry._data = latestData;\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentSize = fetchCurrentSize;\n\n    // ----------\n\n    this.trackSize = async (handler?, options?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      return setupOnResize(handler, options);\n    };\n\n    // ----------\n\n    this.noTrackSize = (handler?, target?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      removeOnResize(handler, target); // no need to await\n    };\n\n    // ----------\n\n    this.onResize = setupOnResize;\n\n    // ----------\n\n    this.offResize = (handler, target?) => {\n      removeOnResize(handler, target); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type SizeWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnResizeOptions.debounceWindow | debounceWindow} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnResizeOptions.threshold | threshold} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 50\n   */\n  resizeThreshold?: number;\n};\n\n/**\n * @interface\n */\nexport type OnResizeOptions = {\n  /**\n   * If it is not given, or is `null` or `window`, then it will track the size\n   * of the viewport (akin to `clientHeight` on `documentElement`).\n   *\n   * If it is `document`, then it will use `document.documentElement`.\n   *\n   * Other values of target must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  target?: SizeTarget;\n\n  /**\n   * Specifies whether to listen for changes in content box size or border box\n   * size.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  box?: Box;\n\n  /**\n   * Specifies whether to listen for changes in width or height.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  dimension?: Dimension;\n\n  /**\n   * If non-0, the handler will only be called when the target's size in the\n   * observed {@link OnResizeOptions.dimension} and {@link OnResizeOptions.box}\n   * type has changed at least `threshold` pixels since the last time the\n   * handler was called.\n   *\n   * Special case when `threshold` is 0 and at least one of\n   * {@link OnResizeOptions.dimension} or {@link OnResizeOptions.box} is given:\n   * if there's a resize event but the size in the observed dimensions/box\n   * types has not changed, the callback is _not_ called.\n   *\n   * @defaultValue {@link SizeWatcherConfig.resizeThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * @defaultValue {@link SizeWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * The handler is invoked with three arguments:\n *\n * - the element that has been resized: if the target you requested was the\n *   viewport, then this will be a fixed positioned overlay that tracks the\n *   size of the viewport\n * - the {@link SizeData} for the element\n */\nexport type OnResizeHandlerArgs = [Element, SizeData];\nexport type OnResizeCallback = Callback<OnResizeHandlerArgs>;\nexport type OnResizeHandler =\n  | CallbackHandler<OnResizeHandlerArgs>\n  | OnResizeCallback;\n\nexport type SizeData = Record<Box, Size>;\n\n// ----------------------------------------\n\ntype SizeWatcherConfigInternal = {\n  _debounceWindow: number;\n  _resizeThreshold: number;\n};\n\ntype OnResizeOptionsInternal = {\n  _element: Element;\n  _box: Box | null;\n  _dimension: Dimension | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnResizeCallback;\n  _options: OnResizeOptionsInternal;\n  _data?: SizeData;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, SizeWatcher>();\n\nconst getConfig = (\n  config: SizeWatcherConfig | undefined,\n): SizeWatcherConfigInternal => {\n  config ??= {};\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _resizeThreshold: toNonNegNum(config.resizeThreshold, 50) || 1,\n  };\n};\n\n// --------------------\n\nconst hasExceededThreshold = (\n  options: OnResizeOptionsInternal,\n  latestData: SizeData,\n  lastThresholdData: SizeData | undefined,\n): boolean => {\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  let box: Box, dim: Dimension;\n  for (box in latestData) {\n    if (options._box && options._box !== box) {\n      continue;\n    }\n\n    for (dim in latestData[box]) {\n      if (options._dimension && options._dimension !== dim) {\n        continue;\n      }\n\n      const diff = MH.abs(latestData[box][dim] - lastThresholdData[box][dim]);\n      if (diff >= options._threshold) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nconst getSizeData = (entry: ResizeObserverEntry): SizeData => {\n  const borderBox = getEntryBorderBox(entry, true);\n  const contentBox = getEntryContentBox(entry);\n\n  return {\n    border: borderBox,\n    content: contentBox,\n  };\n};\n\nconst setSizeCssProps = (\n  element: Element,\n  sizeData: SizeData | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetViewportOverlay()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"window-\";\n  }\n\n  const props = {\n    borderWidth: sizeData?.border[MC.S_WIDTH],\n    borderHeight: sizeData?.border[MC.S_HEIGHT],\n    contentWidth: sizeData?.content[MC.S_WIDTH],\n    contentHeight: sizeData?.content[MC.S_HEIGHT],\n  };\n  setNumericStyleJsVars(element, props, { _prefix: prefix }); // don't await here\n};\n\nconst fetchElement = async (\n  target: SizeTarget | undefined,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  }\n\n  if (!target || target === MH.getWindow()) {\n    return fetchViewportOverlay();\n  }\n\n  if (target === MH.getDoc()) {\n    return MH.getDocElement();\n  }\n\n  throw MH.usageError(\"Unsupported resize target\");\n};\n\nconst invokeCallback = (\n  callback: OnResizeCallback,\n  element: Element,\n  sizeData: SizeData,\n) => callback.invoke(element, MH.copyObject(sizeData)).catch(logError);\n","/**\n * @module Watchers/LayoutWatcher\n */\n\n// NOTES FOR DEVELOPERS\n//\n// For each layout (device or aspect ratio), we create an overlay that has a\n// a width that corresponds to the layout:\n//  - for device layouts, it's a fixed width in pixels, equal to the minimum\n//    width of the device\n//  - for aspect ratio layouts, the overlay has a width that's relative to\n//    the root's height, equal to the minimum width of the aspect ratio\n//\n// Then we observe each overlay with an IntersectionObserver whose root\n// is this Watcher's root and whose root margin is -100% from the left (i.e.\n// right-most edge of the root).\n//\n// If the root is null, i.e. the viewport, the overlays will have a \"fixed\"\n// position and be inserted in document.body. Otherwise, they'll be inserted\n// in the root element with an \"absolute\" position. The root element, if not\n// body must be positioned. It gets a default position of \"relative\" through\n// the class `.lisn-overlay-container`, which Overlays ensures it gets.\n//\n// If using custom root we track its size through SizeWatcher as the\n// aspectRatio overlays are relative to the height, and we can't rely on CSS\n// alone as the root may not have a fixed height through CSS.\n//\n// Whenever any overlay intersects the root, this means that the viewport\n// width is now equal to or narrower than the overlay.\n//\n// ~~~~ The current device or aspect ratio corresponds to the _widest_\n// ~~~~ overlay that does not intersect.\n//\n// For example:\n//\n// | mobile\n// ========| mobile-wide\n// ======================| tablet\n// =========================================| desktop\n//\n// _________________________________| viewport width\n//\n// Here, mobile, mobile-wide and tablet overlays are _not_ intersecting, only\n// desktop intersects. The device layout is therefore tablet.\n//\n// Therefore:\n// - have the layout bit spaces ordered from narrowest layout at lowest bit\n//   to widest layout at hightest bit\n// - keep a running bitmask of which overlays are not intersecting and update\n//   it each time there is an IntersectionObserverEntry.\n// - get the highest device or aspect ratio bit in that bitmask to find out\n//   the widest non-intersecting overlay\n//\n// For simplicity we create overlays also for layouts that have a 0-width.\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  Layout,\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport {\n  getLayoutBitmask,\n  NUM_LAYOUTS,\n  ORDERED_DEVICES,\n  ORDERED_ASPECTR,\n} from \"@lisn/utils/layout\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { omitKeys, copyExistingKeys } from \"@lisn/utils/misc\";\nimport { createOverlay } from \"@lisn/utils/overlays\";\nimport { objToStrKey } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link LayoutWatcher} listens for changes in either the width or aspect\n * ratio of the viewport or the given {@link LayoutWatcherConfig.root | root}.\n *\n * It does not track resize events; rather it's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class LayoutWatcher {\n  /**\n   * Call the given handler whenever the layout changes.\n   *\n   * Unless {@link OnLayoutOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current layout.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times, even if\n   * the options differ. If the handler has already been added, it is removed\n   * and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onLayout: (\n    handler: OnLayoutHandler,\n    options?: OnLayoutOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offLayout: (handler: OnLayoutHandler) => void;\n\n  /**\n   * Get the current screen layout.\n   */\n  readonly fetchCurrentLayout: () => Promise<LayoutData>;\n\n  /**\n   * Creates a new instance of LayoutWatcher with the given\n   * {@link LayoutWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: LayoutWatcherConfig) {\n    return new LayoutWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of LayoutWatcher with the given\n   * {@link LayoutWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: LayoutWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new LayoutWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: LayoutWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"LayoutWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"LayoutWatcher\", logAtCreation: config })\n      : null;\n    let nonIntersectingBitmask = 0;\n    let currentLayoutData: LayoutData = {\n      device: null,\n      aspectRatio: null,\n    };\n\n    const allCallbacks = MH.newMap<\n      OnLayoutHandler,\n      {\n        _callback: OnLayoutCallback;\n        _layoutBitmask: number;\n      }\n    >();\n\n    // ----------\n\n    const fetchCurrentLayout = async (): Promise<LayoutData> => {\n      await readyPromise;\n\n      return MH.copyObject(currentLayoutData);\n    };\n\n    // ----------\n\n    const setupOverlays = async () => {\n      const { root, overlays } = await createOverlays(\n        config._root,\n        config._deviceBreakpoints,\n        config._aspectRatioBreakpoints,\n      );\n\n      return MH.newPromise<void>((resolve) => {\n        let isReady = false;\n\n        const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n          const numEntries = MH.lengthOf(entries);\n          debug: logger?.debug9(`Got ${numEntries} new entries`, entries);\n\n          if (!isReady) {\n            /* istanbul ignore next */ // shouldn't happen\n            if (numEntries < NUM_LAYOUTS) {\n              logWarn(\n                MH.bugError(\n                  `Got IntersectionObserver ${numEntries}, ` +\n                    `expected >= ${NUM_LAYOUTS}`,\n                ),\n              );\n            }\n          }\n\n          for (const entry of entries) {\n            nonIntersectingBitmask = getNonIntersecting(\n              nonIntersectingBitmask,\n              entry,\n            );\n          }\n\n          // If this is the initial call from IntersectionObserver, skip callbacks.\n          // Those that have skipInitial: false would be called elsewhere, by\n          // setupOnLayout\n          processLayoutChange(!isReady);\n          isReady = true;\n          resolve(); // ready after IntersectionObserver has called us the 1st time\n        };\n\n        // ----------\n\n        const observeOptions = {\n          root,\n          rootMargin: \"5px 0% 5px -100%\",\n        };\n\n        const observer = MH.newIntersectionObserver(\n          intersectionHandler,\n          observeOptions,\n        );\n\n        for (const triggerOverlay of overlays) {\n          observer.observe(triggerOverlay);\n        }\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnLayoutHandler,\n      layoutBitmask: number,\n    ): OnLayoutCallback => {\n      MH.remove(allCallbacks.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", layoutBitmask);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler);\n      });\n\n      allCallbacks.set(handler, {\n        _callback: callback,\n        _layoutBitmask: layoutBitmask,\n      });\n      return callback;\n    };\n\n    const setupOnLayout = async (\n      handler: OnLayoutHandler,\n      options: OnLayoutOptions | undefined,\n    ) => {\n      const layoutBitmask = getLayoutBitmask(options);\n      const callback = createCallback(handler, layoutBitmask);\n\n      if (options?.skipInitial) {\n        return;\n      }\n\n      const layoutData = await fetchCurrentLayout();\n\n      if (\n        !callback.isRemoved() &&\n        changeMatches(layoutBitmask, layoutData, null)\n      ) {\n        debug: logger?.debug5(\"Calling initially with\", layoutData);\n        await invokeCallback(callback, layoutData);\n      }\n    };\n\n    const deleteHandler = (handler: OnLayoutHandler) => {\n      MH.deleteKey(allCallbacks, handler);\n      // no need to unobserve the overlays\n    };\n\n    const processLayoutChange = (skipCallbacks: boolean) => {\n      const deviceBit = MH.floor(\n        MH.log2(nonIntersectingBitmask & ORDERED_DEVICES.bitmask),\n      );\n\n      const aspectRatioBit = MH.floor(\n        MH.log2(nonIntersectingBitmask & ORDERED_ASPECTR.bitmask),\n      );\n\n      const layoutData: LayoutData = { device: null, aspectRatio: null };\n\n      // -Infinity means all of the overlays are intersecting, which would only\n      // happen if the narrowest overlay is not actually 0-width (which is not the\n      // case by default and against the recommended settings).\n      if (deviceBit !== -MC.INFINITY) {\n        layoutData.device = ORDERED_DEVICES.nameOf(1 << deviceBit);\n      }\n      if (aspectRatioBit !== -MC.INFINITY) {\n        layoutData.aspectRatio = ORDERED_ASPECTR.nameOf(1 << aspectRatioBit);\n      }\n\n      debug: logger?.debug8(\"New layout\", layoutData);\n\n      if (!skipCallbacks) {\n        for (const entry of allCallbacks.values()) {\n          const layoutBitmask = entry._layoutBitmask;\n          if (!changeMatches(layoutBitmask, layoutData, currentLayoutData)) {\n            debug: logger?.debug9(\n              `Layout change does not match bitmask ${layoutBitmask}`,\n            );\n            continue;\n          }\n\n          invokeCallback(entry._callback, layoutData);\n        }\n      }\n\n      currentLayoutData = layoutData;\n    };\n\n    const readyPromise = setupOverlays(); // no need to await\n\n    // ----------\n\n    this.fetchCurrentLayout = fetchCurrentLayout;\n\n    // ----------\n\n    this.onLayout = setupOnLayout;\n\n    // ----------\n\n    this.offLayout = (handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type LayoutWatcherConfig = {\n  /**\n   * The root element whose layout to watch. If not given or `null`, then the\n   * viewport layout is watched.\n   *\n   * @defaultValue null\n   */\n  root?: HTMLElement | null;\n\n  /**\n   * Use custom device breakpoints. Only known device names ({@link Device})\n   * are supported. If any are missing from the given dictionary, the value\n   * from {@link settings.deviceBreakpoints} is used.\n   *\n   * @defaultValue {@link settings.deviceBreakpoints}\n   */\n  deviceBreakpoints?: typeof settings.deviceBreakpoints;\n\n  /**\n   * Use custom aspect ratio breakpoints. Only known aspect ratio names\n   * ({@link AspectRatio}) are supported. If any are missing from the given\n   * dictionary, the value from {@link settings.aspectRatioBreakpoints} is\n   * used.\n   *\n   * @defaultValue {@link settings.aspectRatioBreakpoints}\n   */\n  aspectRatioBreakpoints?: typeof settings.aspectRatioBreakpoints;\n};\n\n/**\n * @interface\n */\nexport type OnLayoutOptions = {\n  /**\n   * Specifies a list of {@link Device}s to target for.\n   *\n   * The handler will only be called if there is a change of device to a device\n   * matching the specification.\n   *\n   * It can be:\n   * - \"min <Device>\": devices at least as wide as `<Device>`\n   * - \"max <Device>\": devices at most as wide as `<Device>`\n   * - \"<DeviceMin> to <DeviceMax>\": devices at least as wide as `<DeviceMin>`\n   *                                 and at most as wide as `<DeviceMax>`\n   * - a comma-separated list of device names\n   * - an array of device names\n   *\n   * **NOTE**\n   *\n   * If only one of {@link devices} or {@link aspectRatios} is specified, the\n   * handler will only be called for matching changes of device or aspect ratio\n   * respectively.\n   *\n   * If neither is specified, the handler will be called for any change of layout\n   * (device or aspect ratio).\n   *\n   * Also note that an empty array is treated the same as not given, or `null`.\n   *\n   * @defaultValue undefined\n   */\n  devices?: DeviceSpec | Device[];\n\n  /**\n   * Specifies a list of {@link AspectRatio}s to target for.\n   *\n   * The handler will only be called if there is a change of aspect ratio to\n   * an aspect ratios matching the specification.\n   *\n   * It can be:\n   * - \"min <AspectRatio>\": aspect ratios at least as wide as `<AspectRatio>`\n   * - \"max <AspectRatio>\": aspect ratios at most as wide as `<AspectRatio>`\n   * - \"<AspectRatioMin> to <AspectRatioMax>\": aspect ratios at least as wide\n   *                        as `<AspectRatioMin>` and at most as wide as\n   *                        `<AspectRatioMax>`\n   * - a comma-separated list of aspect ratio names\n   * - an array of aspect ratio names\n   *\n   * **NOTE**\n   *\n   * If only one of {@link devices} or {@link aspectRatios} is specified, the\n   * handler will only be called for matching changes of device or aspect ratio\n   * respectively.\n   *\n   * If neither is specified, the handler will be called for any change of layout\n   * (device or aspect ratio).\n   *\n   * @defaultValue undefined\n   */\n  aspectRatios?: AspectRatioSpec | AspectRatio[];\n\n  /**\n   * Do not call the handler until there's a future change of layout.\n   *\n   * By default, we call the handler (almost) immediately with the current\n   * layout data if it matches the given {@link devices} and {@link aspectRatios}.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with one argument:\n *\n * - the current {@link LayoutData}\n */\nexport type OnLayoutHandlerArgs = [LayoutData];\nexport type OnLayoutCallback = Callback<OnLayoutHandlerArgs>;\nexport type OnLayoutHandler =\n  | CallbackHandler<OnLayoutHandlerArgs>\n  | OnLayoutCallback;\n\n/**\n * Note that {@link device} or {@link aspectRatio} would only be null if the\n * viewport is narrower than the narrowest device/aspect ratio. This would only\n * happen if the narrowest device/aspect ratio is _not_ 0-width (which is not\n * the case with the default breakpoints and is against the recommendation for\n * setting breakpoints.\n */\nexport type LayoutData = {\n  device: Device | null;\n  aspectRatio: AspectRatio | null;\n};\n\n// ----------------------------------------\n\ntype LayoutWatcherConfigInternal = {\n  _root: HTMLElement | null;\n  _deviceBreakpoints: typeof settings.deviceBreakpoints;\n  _aspectRatioBreakpoints: typeof settings.aspectRatioBreakpoints;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<HTMLElement | null, Map<string, LayoutWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst VAR_BORDER_HEIGHT = MH.prefixCssJsVar(\"border-height\");\nconst PREFIX_DEVICE = MH.prefixName(\"device\");\nconst PREFIX_ASPECTR = MH.prefixName(\"aspect-ratio\");\n\nconst getConfig = (\n  config: LayoutWatcherConfig | undefined,\n): LayoutWatcherConfigInternal => {\n  const deviceBreakpoints = MH.copyObject(settings.deviceBreakpoints);\n  if (config?.deviceBreakpoints) {\n    copyExistingKeys(config.deviceBreakpoints, deviceBreakpoints);\n  }\n\n  const aspectRatioBreakpoints = MH.copyObject(settings.aspectRatioBreakpoints);\n\n  if (config?.aspectRatioBreakpoints) {\n    copyExistingKeys(config.aspectRatioBreakpoints, aspectRatioBreakpoints);\n  }\n\n  return {\n    _root: config?.root ?? null,\n    _deviceBreakpoints: deviceBreakpoints,\n    _aspectRatioBreakpoints: aspectRatioBreakpoints,\n  };\n};\n\n// ----------------------------------------\n\nconst createOverlays = async (\n  root: HTMLElement | null,\n  deviceBreakpoints: typeof settings.deviceBreakpoints,\n  aspectRatioBreakpoints: typeof settings.aspectRatioBreakpoints,\n) => {\n  const overlayPromises = [];\n\n  let overlayParent: HTMLElement;\n  if (root) {\n    overlayParent = root;\n  } else {\n    // Since modals remove the scrollbar on the body when active, the width of\n    // the body changes upon open/close of a modal, which would create\n    // glitching if it happens near a device breakpoint. So if the root is the\n    // viewport, we create a fixed positioned container to hold the overlays\n    // and set its width to be 100vw and use that as the root of\n    overlayParent = await createOverlay({\n      style: {\n        position: \"fixed\",\n        [MC.S_WIDTH]: \"100vw\",\n      },\n    });\n  }\n\n  let device: Device;\n  for (device in deviceBreakpoints) {\n    overlayPromises.push(\n      createOverlay({\n        parent: overlayParent,\n        style: {\n          position: \"absolute\",\n          [MC.S_WIDTH]: deviceBreakpoints[device] + \"px\",\n        },\n        data: {\n          [PREFIX_DEVICE]: device,\n        },\n      }),\n    );\n  }\n\n  const parentHeightCss = root ? `var(${VAR_BORDER_HEIGHT}, 0) * 1px` : \"100vh\";\n  if (root) {\n    SizeWatcher.reuse().trackSize(null, { target: root });\n  }\n\n  let aspectRatio: AspectRatio;\n  for (aspectRatio in aspectRatioBreakpoints) {\n    overlayPromises.push(\n      createOverlay({\n        parent: overlayParent,\n        style: {\n          position: \"absolute\",\n          [MC.S_WIDTH]:\n            `calc(${aspectRatioBreakpoints[aspectRatio]} ` +\n            `* ${parentHeightCss})`,\n        },\n        data: {\n          [PREFIX_ASPECTR]: aspectRatio,\n        },\n      }),\n    );\n  }\n\n  const overlays = await MH.promiseAll(overlayPromises);\n  return { root: overlayParent, overlays };\n};\n\nconst getOverlayLayout = (overlay: HTMLElement): Layout | null => {\n  const layout =\n    getData(overlay, PREFIX_DEVICE) || getData(overlay, PREFIX_ASPECTR);\n  /* istanbul ignore else */\n  if (layout && (ORDERED_DEVICES.has(layout) || ORDERED_ASPECTR.has(layout))) {\n    return layout;\n  } else {\n    // shouldn't happen\n    logError(MH.bugError(\"No device or aspectRatio data attribute\"));\n    return null;\n  }\n};\n\nconst changeMatches = (\n  layoutBitmask: number,\n  thisLayoutData: LayoutData,\n  prevLayoutData: LayoutData | undefined | null,\n): boolean => {\n  // True if the callback is interested in a change of device and there's a\n  // change of device and the new device is one of the ones it's interested in\n  // (or it's null, i.e. device is undefined).\n  // And the same for aspect ratios.\n\n  if (\n    prevLayoutData?.device !== thisLayoutData.device &&\n    (!thisLayoutData.device ||\n      ORDERED_DEVICES.bit[thisLayoutData.device] & layoutBitmask)\n  ) {\n    return true;\n  }\n\n  if (\n    prevLayoutData?.aspectRatio !== thisLayoutData.aspectRatio &&\n    (!thisLayoutData.aspectRatio ||\n      ORDERED_ASPECTR.bit[thisLayoutData.aspectRatio] & layoutBitmask)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nconst getNonIntersecting = (\n  nonIntersectingBitmask: number, // current\n  entry: IntersectionObserverEntry,\n): number => {\n  const target = MH.targetOf(entry);\n  /* istanbul ignore next */ // shouldn't happen\n  if (!MH.isHTMLElement(target)) {\n    logError(\n      MH.bugError(\n        `IntersectionObserver called us with '${MH.typeOrClassOf(target)}'`,\n      ),\n    );\n    return nonIntersectingBitmask;\n  }\n\n  const layout = getOverlayLayout(target);\n  let bit = 0;\n  if (!layout) {\n    // error already logged by getOverlayLayout\n  } else if (ORDERED_DEVICES.has(layout)) {\n    bit = ORDERED_DEVICES.bit[layout];\n  } else if (ORDERED_ASPECTR.has(layout)) {\n    bit = ORDERED_ASPECTR.bit[layout];\n  } else {\n    /* istanbul ignore next */ // shouldn't happen\n    logError(\n      MH.bugError(`Unknown device or aspectRatio data attribute: ${layout}`),\n    );\n  }\n\n  if (entry.isIntersecting) {\n    nonIntersectingBitmask &= ~bit;\n  } else {\n    nonIntersectingBitmask |= bit;\n  }\n\n  return nonIntersectingBitmask;\n};\n\nconst invokeCallback = (callback: OnLayoutCallback, layoutData: LayoutData) =>\n  callback.invoke(MH.copyObject(layoutData)).catch(logError);\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { PointerAction } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * Returns true if the given string is a valid pointer action.\n *\n * @category Validation\n */\nexport const isValidPointerAction = (action: string): action is PointerAction =>\n  MH.includes(POINTER_ACTIONS, action);\n\n/**\n * Returns true if the given string or array is a valid list of pointer\n * actions.\n *\n * @category Validation\n */\nexport const isValidPointerActionList = (actions: string | string[]) =>\n  isValidStrList(actions, isValidPointerAction, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const POINTER_ACTIONS: PointerAction[] = [\n  MC.S_CLICK,\n  MC.S_HOVER,\n  MC.S_PRESS,\n] as const;\n","/**\n * @module Watchers/PointerWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { PointerAction, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { isValidPointerAction, POINTER_ACTIONS } from \"@lisn/utils/pointer\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * {@link PointerWatcher} listens for simple pointer actions like clicks, press\n * and hold or hover.\n */\nexport class PointerWatcher {\n  /**\n   * Call the `startHandler` whenever the pointer action begins.\n   * Call the `endHandler` whenever the pointer action ends. If `endHandler` is\n   * not given, it defaults to `startHandler`.\n   *\n   * For an explanation of what \"begins\" and \"ends\" means for each supported\n   * action, see {@link OnPointerOptions.actions}.\n   *\n   * **IMPORTANT:** The same handlers can _not_ be added multiple times for the\n   * same event target, even if the options differ. If the handler has already\n   * been added for this target, then it will be removed and re-added with the\n   * current options.\n   */\n  readonly onPointer: (\n    target: EventTarget,\n    startHandler: OnPointerHandler,\n    endHandler?: OnPointerHandler,\n    options?: OnPointerOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes previously added handlers.\n   */\n  readonly offPointer: (\n    target: EventTarget,\n    startHandler: OnPointerHandler,\n    endHandler?: OnPointerHandler,\n  ) => void;\n\n  /**\n   * Creates a new instance of PointerWatcher with the given\n   * {@link PointerWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: PointerWatcherConfig) {\n    return new PointerWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of PointerWatcher with the given\n   * {@link PointerWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: PointerWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new PointerWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: PointerWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"PointerWatcher.create\");\n    }\n\n    // Keep this watcher super simple. The events we listen for don't fire at a\n    // high rate and it's unlikely for there to be many many callbacks for each\n    // target and event type, so don't bother with using a delegating listener,\n    // etc.\n\n    // Keep a map of callbacks so we can lookup the callback by the handler\n    // (and also to prevent duplicate handler for each target, for consistency\n    // with other watchers).\n    const allCallbacks = newXWeakMap<\n      EventTarget,\n      Map<OnPointerHandler, OnPointerCallback>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const createCallback = (\n      target: EventTarget,\n      handler: OnPointerHandler,\n    ): OnPointerCallback => {\n      MH.remove(allCallbacks.get(target)?.get(handler));\n\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        MH.deleteKey(allCallbacks.get(target), handler);\n      });\n\n      allCallbacks.sGet(target).set(handler, callback);\n      return callback;\n    };\n\n    // async for consistency with other watchers and future compatibility in\n    // case of change needed\n    const setupOnPointer = async (\n      target: EventTarget,\n      startHandler: OnPointerHandler,\n      endHandler: OnPointerHandler | undefined,\n      userOptions: OnPointerOptions | undefined,\n    ) => {\n      const options = getOptions(config, userOptions);\n      const startCallback = createCallback(target, startHandler);\n      const endCallback =\n        endHandler && endHandler !== startHandler\n          ? createCallback(target, endHandler)\n          : startCallback;\n\n      for (const action of options._actions) {\n        listenerSetupFn[action](target, startCallback, endCallback, options);\n      }\n    };\n\n    // ----------\n\n    this.onPointer = setupOnPointer;\n\n    // ----------\n\n    this.offPointer = (target, startHandler, endHandler?) => {\n      const entry = allCallbacks.get(target);\n      MH.remove(entry?.get(startHandler));\n      if (endHandler) {\n        MH.remove(entry?.get(endHandler));\n      }\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type PointerWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnPointerOptions.preventDefault | preventDefault} in calls to\n   * {@link PointerWatcher.onPointer}.\n   *\n   * @defaultValue false\n   */\n  preventDefault?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnPointerOptions.preventSelect | preventSelect} in calls to\n   * {@link PointerWatcher.onPointer}.\n   *\n   * @defaultValue true\n   */\n  preventSelect?: boolean;\n};\n\n/**\n * @interface\n */\nexport type OnPointerOptions = {\n  /**\n   * One or more of of \"click\", \"hover\" or \"press\". If not specified, then all\n   * actions are enabled.\n   *\n   * It can be a comma-separated list of {@link PointerAction}s or an array of\n   * such actions.\n   *\n   * For click actions, the start handler is called for every odd number of\n   * clicks (1st, 3rd, 5th, etc), and the end handler is called for every other\n   * click. It functions like a toggle.\n   *\n   * For hover and press actions, the start handler is called when the pointer\n   * enters or presses down on the target respectively, and the end handler is\n   * called when the pointer leaves or comes off the target respectively.\n   *\n   * Note that on touch screens, hover and press actions behave identically.\n   *\n   * @defaultValue undefined\n   */\n  actions?: CommaSeparatedStr<PointerAction> | PointerAction[];\n\n  /**\n   * If true, the events of the pointer actions, e.g. click, will have their\n   * default action prevented.\n   *\n   * @defaultValue {@link PointerWatcherConfig.preventDefault}\n   */\n  preventDefault?: boolean;\n\n  /**\n   * If true (default), then for press actions (and hover actions on touch\n   * screens) it will prevent starting a text selection.\n   *\n   * @defaultValue {@link PointerWatcherConfig.preventSelect}\n   */\n  preventSelect?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the event target that was passed to the {@link PointerWatcher.onPointer}\n *   call (equivalent to\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget | Event:currentTarget}).\n * - the {@link PointerActionData} describing the state of the action.\n */\nexport type OnPointerHandlerArgs = [EventTarget, PointerActionData, Event];\nexport type OnPointerCallback = Callback<OnPointerHandlerArgs>;\nexport type OnPointerHandler =\n  | CallbackHandler<OnPointerHandlerArgs>\n  | OnPointerCallback;\n\nexport type PointerActionData = {\n  action: PointerAction;\n  state: \"ON\" | \"OFF\";\n};\n\n// ----------------------------------------\n\ntype PointerWatcherConfigInternal = {\n  _preventDefault: boolean;\n  _preventSelect: boolean;\n};\n\ntype OnPointerOptionsInternal = {\n  _actions: PointerAction[];\n  _preventDefault: boolean;\n  _preventSelect: boolean;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, PointerWatcher>();\n\nconst getConfig = (\n  config: PointerWatcherConfig | undefined,\n): PointerWatcherConfigInternal => {\n  return {\n    _preventDefault: config?.preventDefault ?? false,\n    _preventSelect: config?.preventSelect ?? true,\n  };\n};\n\nconst getOptions = (\n  config: PointerWatcherConfigInternal,\n  options: OnPointerOptions | undefined,\n): OnPointerOptionsInternal => {\n  return {\n    _actions:\n      validateStrList(\"actions\", options?.actions, isValidPointerAction) ||\n      POINTER_ACTIONS,\n    _preventDefault: options?.preventDefault ?? config._preventDefault,\n    _preventSelect: options?.preventSelect ?? config._preventSelect,\n  };\n};\n\nconst setupClickListener = (\n  target: EventTarget,\n  startCallback: OnPointerCallback,\n  endCallback: OnPointerCallback,\n  options: OnPointerOptionsInternal,\n) => {\n  // false if next will start; true if next will end.\n  let toggleState = false;\n\n  const wrapper = (event: Event) => {\n    if (options._preventDefault) {\n      MH.preventDefault(event);\n    }\n\n    toggleState = !toggleState;\n\n    const data: PointerActionData = {\n      action: MC.S_CLICK,\n      state: toggleState ? \"ON\" : \"OFF\",\n    };\n\n    invokeCallback(\n      toggleState ? startCallback : endCallback,\n      target,\n      data,\n      event,\n    );\n  };\n\n  addEventListenerTo(target, MC.S_CLICK, wrapper);\n\n  const remove = () => removeEventListenerFrom(target, MC.S_CLICK, wrapper);\n\n  startCallback.onRemove(remove);\n  endCallback.onRemove(remove);\n};\n\nconst setupPointerListeners = (\n  action: typeof MC.S_HOVER | typeof MC.S_PRESS,\n  target: EventTarget,\n  startCallback: OnPointerCallback,\n  endCallback: OnPointerCallback,\n  options: OnPointerOptionsInternal,\n) => {\n  // If the browser doesn't support pointer events, then\n  // addEventListenerTo will transform these into mouse*\n  const startEventSuff = action === MC.S_HOVER ? \"enter\" : \"down\";\n  const endEventSuff = action === MC.S_HOVER ? \"leave\" : \"up\";\n  const startEvent = MC.S_POINTER + startEventSuff;\n  const endEvent = MC.S_POINTER + endEventSuff;\n\n  const wrapper = (event: Event, callback: OnPointerCallback) => {\n    if (options._preventDefault) {\n      MH.preventDefault(event);\n    }\n\n    const data: PointerActionData = {\n      action,\n      state:\n        MH.strReplace(event.type, /pointer|mouse/, \"\") === startEventSuff\n          ? \"ON\"\n          : \"OFF\",\n    };\n\n    invokeCallback(callback, target, data, event);\n  };\n  const startListener = (event: Event) => wrapper(event, startCallback);\n  const endListener = (event: Event) => wrapper(event, endCallback);\n\n  addEventListenerTo(target, startEvent, startListener);\n  addEventListenerTo(target, endEvent, endListener);\n\n  // On some touch screen devices pressing and holding will initiate select\n  // and result in touchend, so we prevent text select\n  if (options._preventSelect) {\n    preventSelect(target);\n  }\n\n  startCallback.onRemove(() => {\n    undoPreventSelect(target);\n    removeEventListenerFrom(target, startEvent, startListener);\n  });\n\n  endCallback.onRemove(() => {\n    undoPreventSelect(target);\n    removeEventListenerFrom(target, endEvent, endListener);\n  });\n};\n\nconst listenerSetupFn: {\n  [D in PointerAction]: (\n    target: EventTarget,\n    startCallback: OnPointerCallback,\n    endCallback: OnPointerCallback,\n    options: OnPointerOptionsInternal,\n  ) => void;\n} = {\n  click: setupClickListener,\n  hover: (...args) => setupPointerListeners(MC.S_HOVER, ...args),\n  press: (...args) => setupPointerListeners(MC.S_PRESS, ...args),\n} as const;\n\nconst invokeCallback = (\n  callback: OnPointerCallback,\n  target: EventTarget,\n  actionData: PointerActionData,\n  event: Event,\n) => callback.invoke(target, MH.copyObject(actionData), event).catch(logError);\n","/**\n * @module Watchers/ScrollWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { XYDirection, ScrollDirection, SizeTarget } from \"@lisn/globals/types\";\n\nimport {\n  ScrollTarget,\n  TargetCoordinate,\n  TargetCoordinates,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { setNumericStyleJsVars } from \"@lisn/utils/css-alter\";\nimport { getMaxDeltaDirection } from \"@lisn/utils/directions\";\nimport { moveElement, tryWrapContent } from \"@lisn/utils/dom-alter\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum, maxAbs } from \"@lisn/utils/math\";\nimport {\n  scrollTo,\n  getCurrentScrollAction,\n  getClientWidthNow,\n  getClientHeightNow,\n  tryGetMainScrollableElement,\n  fetchMainContentElement,\n  fetchMainScrollableElement,\n  fetchScrollableElement,\n  isValidScrollDirection,\n  ScrollAction,\n  ScrollToOptions,\n} from \"@lisn/utils/scroll\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { MutationOperation, DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n// re-export for convenience\nexport type { ScrollAction, ScrollToOptions } from \"@lisn/utils/scroll\";\n\n/**\n * {@link ScrollWatcher} listens for scroll events in any direction.\n *\n * It manages registered callbacks globally and reuses event listeners for more\n * efficient performance.\n */\nexport class ScrollWatcher {\n  /**\n   * Call the given handler whenever the given scrollable is scrolled.\n   *\n   * Unless {@link OnScrollOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest scroll data. If a scroll has\n   * not yet been observed on the scrollable and its `scrollTop` and\n   * `scrollLeft` are 0, then the direction is {@link Types.NoDirection} and\n   * the handler is only called if {@link Types.NoDirection} is part of the\n   * supplied {@link OnScrollOptions.directions | options.directions} (or\n   * {@link OnScrollOptions.directions | options.directions} is not given).\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking content size changes using\n   * {@link trackScroll}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onScroll: (\n    handler: OnScrollHandler,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly offScroll: (\n    handler: OnScrollHandler,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * This everything that {@link onScroll} does plus more:\n   *\n   * In addition to a scroll event, the handler is also called when either the\n   * offset size or scroll (content) size of the scrollable changes as that\n   * would affect its `scrollTopFraction` and `scrollLeftFraction` and possibly\n   * the `scrollTop` and `scrollLeft` as well.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates a set of CSS variables on the scrollable element's style:\n   *\n   * - If {@link OnScrollOptions.scrollable | options.scrollable} is not given,\n   *   or is `null`, `window` or `document`, the following CSS variables are\n   *   set on the root (`html`) element and represent the scroll of the\n   *   {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}:\n   *   - `--lisn-js--page-scroll-top`\n   *   - `--lisn-js--page-scroll-top-fraction`\n   *   - `--lisn-js--page-scroll-left`\n   *   - `--lisn-js--page-scroll-left-fraction`\n   *   - `--lisn-js--page-scroll-width`\n   *   - `--lisn-js--page-scroll-height`\n   *\n   * - Otherwise, the following variables are set on the scrollable itself,\n   *   and represent its scroll offset:\n   *   - `--lisn-js--scroll-top`\n   *   - `--lisn-js--scroll-top-fraction`\n   *   - `--lisn-js--scroll-left`\n   *   - `--lisn-js--scroll-left-fraction`\n   *   - `--lisn-js--scroll-width`\n   *   - `--lisn-js--scroll-height`\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly trackScroll: (\n    handler?: OnScrollHandler | null,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackScroll}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly noTrackScroll: (\n    handler?: OnScrollHandler | null,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * Get the scroll offset of the given scrollable. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                 this only when doing realtime scroll-based animations\n   *                 as it may cause a forced layout.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScroll: (\n    scrollable?: ScrollTarget,\n    realtime?: boolean,\n  ) => Promise<ScrollData>;\n\n  /**\n   * Scrolls the given scrollable element to in the given direction.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the direction or options are invalid.\n   */\n  readonly scroll: (\n    direction: XYDirection,\n    options?: ScrollOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Scrolls the given scrollable element to the given `to` scrollable.\n   *\n   * Returns `null` if there's an ongoing scroll that is not cancellable.\n   *\n   * Note that if `to` is an element or a selector, then it _must_ be a\n   * descendant of the scrollable element.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the \"to\" coordinates or options are invalid.\n   *\n   * @param to If this is an element, then its top-left position is used as\n   *           the target coordinates. If it is a string, then it is treated\n   *           as a selector for an element using `querySelector`.\n   * @param [options.scrollable]\n   *           If not given, it defaults to\n   *           {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}.\n   *\n   * @returns `null` if there's an ongoing scroll that is not cancellable,\n   * otherwise a {@link ScrollAction}.\n   */\n  readonly scrollTo: (\n    to: TargetCoordinates | Element | string,\n    options?: ScrollToOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Returns the current {@link ScrollAction} if any.\n   *\n   * @param scrollable If not given, it defaults to\n   *                   {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScrollAction: (\n    scrollable?: Element,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Cancels the ongoing scroll that's resulting from smooth scrolling\n   * triggered in the past. Does not interrupt or prevent further scrolling.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   *\n   * @param [options.immediate] If true, then it will not use\n   *                            {@link waitForMeasureTime} or\n   *                            {@link Utils.waitForMutateTime | waitForMutateTime}.\n   *                            Warning: this will likely result in forced layout.\n   */\n  readonly stopUserScrolling: (options?: {\n    scrollable?: ScrollTarget;\n    immediate?: boolean;\n  }) => Promise<void>;\n\n  /**\n   * Returns the element that holds the main page content. By default it's\n   * `document.body` but is overridden by\n   * {@link Settings.settings.mainScrollableElementSelector}.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainContentElement(): Promise<HTMLElement> {\n    return fetchMainContentElement();\n  }\n\n  /**\n   * Returns the scrollable element that holds the wrapper around the main page\n   * content. By default it's `document.scrollable` (unless `document.body` is\n   * actually scrollable, in which case it will be used) but it will be\n   * different if {@link Settings.settings.mainScrollableElementSelector} is set.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainScrollableElement(): Promise<HTMLElement> {\n    return fetchMainScrollableElement();\n  }\n\n  /**\n   * Creates a new instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: ScrollWatcherConfig) {\n    return new ScrollWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: ScrollWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new ScrollWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ScrollWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ScrollWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ScrollWatcher\", logAtCreation: config })\n      : null;\n\n    const allScrollData = MH.newWeakMap<Element, ScrollData>();\n\n    const activeListeners = MH.newWeakMap<\n      ScrollTarget,\n      { _nRealtime: number }\n    >();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnScrollHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const fetchCurrentScroll = async (\n      element: Element,\n      realtime = false,\n      isScrollEvent = false,\n    ): Promise<ScrollData> => {\n      // The scroll data can change event without a scroll event, e.g. by the\n      // element changing size, so always get the latest here.\n      const previousEventData = allScrollData.get(element);\n      const latestData = await fetchScrollData(\n        element,\n        previousEventData,\n        realtime,\n      );\n\n      // If there hasn't been a scroll event, use the old scroll direction\n      if (!isScrollEvent && previousEventData) {\n        latestData.direction = previousEventData.direction;\n      }\n      return latestData;\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n      trackType: TrackType,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      };\n      allCallbacks.sGet(element).set(handler, entry);\n\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnScroll = async (\n      handler: OnScrollHandler,\n      userOptions: OnScrollOptions | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, userOptions ?? {});\n      const element = options._element;\n\n      // Don't await for the scroll data before creating the callback so that\n      // setupOnScroll and removeOnScroll have the same \"timing\" and therefore\n      // calling onScroll and offScroll immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options, trackType);\n      const callback = entry._callback;\n\n      const eventTarget = options._eventTarget;\n      const scrollData = await fetchCurrentScroll(\n        element,\n        options._debounceWindow === 0,\n      );\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = scrollData;\n      allScrollData.set(element, scrollData);\n\n      if (trackType === TRACK_FULL) {\n        await setupSizeTrack(entry);\n      }\n\n      let listenerOptions = activeListeners.get(eventTarget);\n      if (!listenerOptions) {\n        debug: logger?.debug4(\"Adding scroll listener\", eventTarget);\n        listenerOptions = { _nRealtime: 0 };\n        activeListeners.set(eventTarget, listenerOptions);\n        // Don't debounce the scroll handler, only the callbacks.\n        addEventListenerTo(eventTarget, MC.S_SCROLL, scrollHandler);\n      }\n\n      if (options._debounceWindow === 0) {\n        listenerOptions._nRealtime++;\n      }\n\n      const directions = options._directions;\n      if (\n        !callback.isRemoved() &&\n        !userOptions?.skipInitial &&\n        directionMatches(directions, scrollData.direction)\n      ) {\n        debug: logger?.debug5(\"Calling initially with\", element, scrollData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, scrollData);\n      }\n    };\n\n    // ----------\n\n    const removeOnScroll = async (\n      handler: OnScrollHandler,\n      scrollable: ScrollTarget | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, { scrollable });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setScrollCssProps) {\n          // delete the properties\n          setScrollCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n    ) => {\n      const element = options._element;\n      const eventTarget = options._eventTarget;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      const listenerOptions = activeListeners.get(eventTarget);\n      if (listenerOptions && options._debounceWindow === 0) {\n        listenerOptions._nRealtime--;\n      }\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for scrollable; removing listener\",\n          element,\n        );\n\n        MH.deleteKey(allScrollData, element);\n        removeEventListenerFrom(eventTarget, MC.S_SCROLL, scrollHandler);\n        MH.deleteKey(activeListeners, eventTarget);\n        // TODO: Should we unwrap children if previously WE wrapped them?\n      }\n    };\n\n    // ----------\n\n    const setupSizeTrack = async (entry: CallbackEntry) => {\n      const options = entry._options;\n      const element = options._element;\n      const scrollCallback = entry._callback;\n      debug: logger?.debug8(\"Setting up size tracking\", element);\n\n      const doc = MH.getDoc();\n      const docScrollingElement = MH.getDocScrollingElement();\n\n      const resizeCallback = wrapCallback(async () => {\n        // Get the latest scroll data for the scrollable\n        // Currently, the resize callback is already delayed by a frame due to\n        // the SizeWatcher, so we don't need to treat this as realtime.\n        const latestData = await fetchCurrentScroll(element);\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n        } else if (!scrollCallback.isRemoved()) {\n          await invokeCallback(scrollCallback, element, latestData);\n        }\n      });\n\n      scrollCallback.onRemove(resizeCallback.remove);\n\n      // Don't use default instance as it has a high threshold.\n      const sizeWatcher = SizeWatcher.reuse();\n      const setupOnResize = (target?: SizeTarget) =>\n        sizeWatcher.onResize(resizeCallback, {\n          target,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          // TODO maybe accepts resizeThreshold option\n          threshold: options._threshold,\n        });\n\n      if (element === docScrollingElement) {\n        // In case we're tracking the main document scroll, then we only need to\n        // observe the viewport size and the size of the documentElement (which is\n        // the content size).\n\n        setupOnResize(); // viewport size\n        setupOnResize(doc); // content size\n\n        return;\n      }\n\n      // ResizeObserver only detects changes in offset width/height which is\n      // the visible size of the scrolling element, and that is not affected by the\n      // size of its content.\n      // But we also need to detect changes in the scroll width/height which is\n      // the size of the content.\n      // We also need to keep track of elements being added to the scrollable element.\n\n      const observedElements = MH.newSet<Element>([element]);\n\n      // Observe the scrolling element\n      setupOnResize(element);\n\n      // And also its children (if possible, a single wrapper around them\n      const wrapper = await tryWrapContent(element, {\n        _classNames: [MC.PREFIX_WRAPPER, PREFIX_WRAPPER],\n      });\n      if (wrapper) {\n        setupOnResize(wrapper);\n        observedElements.add(wrapper);\n\n        //\n      } else {\n        for (const child of MH.childrenOf(element)) {\n          setupOnResize(child);\n          observedElements.add(child);\n        }\n      }\n\n      // Watch for newly added elements\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      const onAddedCallback = wrapCallback((operation: MutationOperation) => {\n        const child = MH.currentTargetOf(operation);\n        // If we've just added the wrapper, it will be in DOMWatcher's queue,\n        // so check.\n        if (child !== wrapper) {\n          if (wrapper) {\n            // Move this child into the wrapper. If this results in change of size\n            // for wrapper, SizeWatcher will call us.\n            moveElement(child, { to: wrapper, ignoreMove: true });\n          } else {\n            // Track the size of this child.\n            // Don't skip initial, call the callback now\n            setupOnResize(child);\n            observedElements.add(child);\n          }\n        }\n      });\n\n      domWatcher.onMutation(onAddedCallback, { categories: [MC.S_ADDED] });\n      resizeCallback.onRemove(onAddedCallback.remove);\n    };\n\n    // ----------\n\n    const scrollHandler = async (event: Event) => {\n      // We cannot use event.currentTarget because scrollHandler is called inside\n      // a setTimeout so by that time, currentTarget is null or something else.\n      //\n      // However, target and currentTarget only differ when the event is in the\n      // bubbling or capturing phase. Because\n      //\n      // - the scroll event only bubbles when fired on document, and (it only\n      //   bubbles up to window)\n      // - and we never attach the listener to the capturing phase\n      // - and we always use document instead of window to listen for scroll on\n      //   document\n      //\n      // then event.target suffices.\n      const scrollable = MH.targetOf(event);\n      /* istanbul ignore next */\n      if (!scrollable || !(MH.isElement(scrollable) || MH.isDoc(scrollable))) {\n        return;\n      }\n\n      const element = await fetchScrollableElement(scrollable);\n      const realtime = (activeListeners.get(scrollable)?._nRealtime ?? 0) > 0;\n      const latestData = await fetchCurrentScroll(element, realtime, true);\n      allScrollData.set(element, latestData);\n\n      debug: logger?.debug9(\"Scroll event\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        // Consider the direction since the last scroll event and not the\n        // direction based on the largest delta the last time the callback\n        // was called.\n        const options = entry._options;\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n          continue;\n        }\n\n        // If threshold has been exceeded, always update the latest data for\n        // this callback.\n        entry._data = latestData;\n\n        if (!directionMatches(options._directions, latestData.direction)) {\n          debug: logger?.debug9(\n            \"Direction does not match\",\n            options,\n            latestData,\n          );\n          continue;\n        }\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentScroll = (scrollable?, realtime?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        fetchCurrentScroll(element, realtime),\n      );\n\n    // ----------\n\n    this.scroll = (direction, options) => {\n      if (!isValidScrollDirection(direction)) {\n        throw MH.usageError(`Unknown scroll direction: '${direction}'`);\n      }\n\n      const isVertical = direction === MC.S_UP || direction === MC.S_DOWN;\n      const sign = direction === MC.S_UP || direction === MC.S_LEFT ? -1 : 1;\n      let targetCoordinate: TargetCoordinate;\n\n      const amount = options?.amount ?? 100;\n      const asFractionOf = options?.asFractionOf;\n\n      if (asFractionOf === \"visible\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * getClientHeightNow(el)) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * getClientWidthNow(el)) / 100;\n\n        //\n      } else if (asFractionOf === \"content\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * el[MC.S_SCROLL_HEIGHT]) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * el[MC.S_SCROLL_WIDTH]) / 100;\n\n        //\n      } else if (asFractionOf !== undefined && asFractionOf !== \"pixel\") {\n        throw MH.usageError(\n          `Unknown 'asFractionOf' keyword: '${asFractionOf}'`,\n        );\n\n        //\n      } else {\n        targetCoordinate = isVertical\n          ? (el) => el[MC.S_SCROLL_TOP] + sign * amount\n          : (el) => el[MC.S_SCROLL_LEFT] + sign * amount;\n      }\n\n      const target = isVertical\n        ? { top: targetCoordinate }\n        : { left: targetCoordinate };\n\n      return this.scrollTo(target, options);\n    };\n\n    // ----------\n\n    this.scrollTo = async (to, options) =>\n      scrollTo(\n        to,\n        MH.merge(options, {\n          duration: options?.duration ?? config._scrollDuration, // default\n          scrollable: await fetchScrollableElement(options?.scrollable), // override\n        }),\n      );\n\n    // ----------\n\n    this.fetchCurrentScrollAction = (scrollable?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        getCurrentScrollAction(element),\n      );\n\n    // ----------\n\n    this.stopUserScrolling = async (options) => {\n      const element = await fetchScrollableElement(options?.scrollable);\n      const stopScroll = () =>\n        MH.elScrollTo(element, {\n          top: element[MC.S_SCROLL_TOP],\n          left: element[MC.S_SCROLL_LEFT],\n        });\n\n      if (options?.immediate) {\n        stopScroll();\n      } else {\n        waitForMeasureTime().then(stopScroll);\n      }\n    };\n\n    // ----------\n\n    this.trackScroll = (handler?, options?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      return setupOnScroll(handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackScroll = (handler?, scrollable?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      removeOnScroll(handler, scrollable, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onScroll = (handler, options?) =>\n      setupOnScroll(handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offScroll = (handler, scrollable?) => {\n      removeOnScroll(handler, scrollable, TRACK_REGULAR); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type ScrollWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnScrollOptions.debounceWindow | debounceWindow} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnScrollOptions.threshold | threshold} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 50\n   */\n  scrollThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link ScrollOptions.duration | duration} in calls to\n   * {@link ScrollWatcher.scroll} and {@link ScrollWatcher.scrollTo}.\n   *\n   * @defaultValue 1000\n   */\n  scrollDuration?: number;\n};\n\n/**\n * @interface\n */\nexport type OnScrollOptions = {\n  /**\n   * If it is not given, or is `null`, `window` or `document`, then it will\n   * track the scroll of the\n   * {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}.\n   *\n   * Other values must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  scrollable?: ScrollTarget;\n\n  /**\n   * If non-0, the scroll handler will only be called when the scrollable's\n   * scroll offset in the observed direction has changed at least\n   * `scrollThreshold` pixels since the last time the handler was called.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.scrollThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Specifies a list of {@link ScrollDirection}s to listen for.\n   *\n   * It can be a comma-separated list of direction names or an array of such\n   * names.\n   *\n   * If not given, then it listens for scrolls in any direction, including\n   * {@link Types.NoDirection} and {@link Types.AmbiguousDirection}.\n   *\n   * The {@link Types.NoDirection} occurs when the callback is called initially\n   * (if `skipInitial` is not `true`) and there hasn't yet been a scroll\n   * observed on the scrollable _and_ it's `scrollTop`/`scrollLeft` are 0.\n   *\n   * The {@link Types.AmbiguousDirection} occurs when the user scrolls\n   * diagonally with close to equal deltas in both horizontal and vertical\n   * direction.\n   *\n   * **IMPORTANT:**\n   *\n   * The direction of a scroll event is always based on comparing `deltaX` and\n   * `deltaY` relative to the _last scroll event_ (within the `debounceWindow`,\n   * and not to the scroll data for the last time the callback was called (in\n   * case it was skipped because `threshold` was not exceeded or in case it was\n   * debounced by a larger window than the watcher).\n   *\n   * I.e. if you have both `threshold` and `directions` restricted, or if the\n   * callback has a larger debounce window than the watcher, it is possible for\n   * there to be a change in the relevant `scrollTop`/`scrollLeft` offset that\n   * exceeds the threshold, and for the callback to _not_ be called.\n   *\n   * For a callback to be called, both of these must be true:\n   * - the change in `scrollTop`/`scrollLeft`, _compared to the last time the\n   *   callback was called_ must exceed the {@link threshold}\n   * - the effective scroll direction, _compared to the last scroll event_\n   *   prior to the _watcher's_ debounce window must be one of the given\n   *   {@link directions}.\n   *\n   * @defaultValue undefined\n   */\n  directions?: CommaSeparatedStr<ScrollDirection> | ScrollDirection[];\n\n  /**\n   * Do not call the handler until there's a future scroll of the element.\n   *\n   * By default we call the handler (almost) immediately if there's been a\n   * scroll in one of the given directions, or if there has not been a scroll\n   * but directions includes {@link Types.NoDirection}, but you can disable\n   * this initial call here.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts, but you probably need this when doing\n   * scroll-based animations.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * @interface\n */\nexport type ScrollOptions = ScrollToOptions & {\n  /**\n   * How much to scroll in the given direction.\n   *\n   * @defaultValue 100\n   */\n  amount?: number;\n\n  /**\n   * If set to \"pixel\" (default), `amount` is taken as absolute pixels.\n   *\n   * If set to \"visible\", `amount` is taken as percent of the element's visible\n   * size in the scrolling direction (100 means full client width for\n   * horizontal or height for vertical scroll).\n   *\n   * If set to \"content\", `amount` is taken as percent of the element's full\n   * content size in the scrolling direction (100 means full scroll width for\n   * horizontal or height for vertical scroll).\n   *\n   * @defaultValue \"pixel\"\n   */\n  asFractionOf?: \"pixel\" | \"visible\" | \"content\";\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the element that has been resized\n * - the {@link ScrollData} for the element\n */\nexport type OnScrollHandlerArgs = [Element, ScrollData];\nexport type OnScrollCallback = Callback<OnScrollHandlerArgs>;\nexport type OnScrollHandler =\n  | CallbackHandler<OnScrollHandlerArgs>\n  | OnScrollCallback;\n\nexport type ScrollData = {\n  clientWidth: number;\n  clientHeight: number;\n  scrollWidth: number;\n  scrollHeight: number;\n\n  scrollTop: number;\n\n  /**\n   * This is the `scrollTop` relative to the full `scrollHeight` minus the\n   * `clientHeight`, ranging from 0 to 1.\n   */\n  scrollTopFraction: number;\n\n  scrollLeft: number;\n\n  /**\n   * This is the `scrollLeft` relative to the full `scrollWidth` minus the\n   * `clientWidth`, ranging from 0 to 1.\n   */\n  scrollLeftFraction: number;\n\n  /**\n   * This is the direction of the last scroll action, i.e. _compared to the\n   * last scroll event_, not necessarily based on the deltas compared to the\n   * last time this callback was called.\n   */\n  direction: ScrollDirection;\n};\n\n// ----------------------------------------\n\ntype ScrollWatcherConfigInternal = {\n  _debounceWindow: number;\n  _scrollThreshold: number;\n  _scrollDuration: number;\n};\n\ntype OnScrollOptionsInternal = {\n  _element: Element;\n  _eventTarget: ScrollTarget;\n  _directions: ScrollDirection[] | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnScrollCallback;\n  _trackType: TrackType;\n  _options: OnScrollOptionsInternal;\n  _data?: ScrollData;\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, ScrollWatcher>();\n\nconst PREFIX_WRAPPER = MH.prefixName(\"scroll-watcher-wrapper\");\n\nconst getConfig = (\n  config: ScrollWatcherConfig | undefined,\n): ScrollWatcherConfigInternal => {\n  config ??= {};\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _scrollThreshold: toNonNegNum(config.scrollThreshold, 50) || 1,\n    _scrollDuration: toNonNegNum(config.scrollDuration, 1000),\n  };\n};\n\nconst TRACK_REGULAR = 1; // only scroll events\nconst TRACK_FULL = 2; // scroll + resizing of content and/or wrapper\n\n// --------------------\n\nconst fetchOnScrollOptions = async (\n  config: ScrollWatcherConfigInternal,\n  options: OnScrollOptions,\n): Promise<OnScrollOptionsInternal> => {\n  const directions =\n    validateStrList(\"directions\", options.directions, isValidScrollDirection) ||\n    null;\n\n  const element = await fetchScrollableElement(options.scrollable);\n\n  return {\n    _element: element,\n    _eventTarget: getEventTarget(element),\n    _directions: directions,\n    // If threshold is 0, internally treat as 1 (pixel)\n    _threshold: toNonNegNum(options.threshold, config._scrollThreshold) || 1,\n    _debounceWindow: options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n  };\n};\n\nconst directionMatches = (\n  userDirections: ScrollDirection[] | null,\n  latestDirection: ScrollDirection,\n) => !userDirections || MH.includes(userDirections, latestDirection);\n\nconst hasExceededThreshold = (\n  options: OnScrollOptionsInternal,\n  latestData: ScrollData,\n  lastThresholdData: ScrollData | undefined,\n): boolean => {\n  const directions = options._directions;\n  const threshold = options._threshold;\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  const topDiff = maxAbs(\n    latestData[MC.S_SCROLL_TOP] - lastThresholdData[MC.S_SCROLL_TOP],\n    latestData[MC.S_SCROLL_HEIGHT] - lastThresholdData[MC.S_SCROLL_HEIGHT],\n    latestData[MC.S_CLIENT_HEIGHT] - lastThresholdData[MC.S_CLIENT_HEIGHT],\n  );\n\n  const leftDiff = maxAbs(\n    latestData[MC.S_SCROLL_LEFT] - lastThresholdData[MC.S_SCROLL_LEFT],\n    latestData[MC.S_SCROLL_WIDTH] - lastThresholdData[MC.S_SCROLL_WIDTH],\n    latestData[MC.S_CLIENT_WIDTH] - lastThresholdData[MC.S_CLIENT_WIDTH],\n  );\n\n  // If the callback is only interested in up/down, then only check the\n  // scrollTop delta, and similarly for left/right.\n  let checkTop = false,\n    checkLeft = false;\n  if (\n    !directions ||\n    MH.includes(directions, MC.S_NONE) ||\n    MH.includes(directions, MC.S_AMBIGUOUS)\n  ) {\n    checkTop = checkLeft = true;\n  } else {\n    if (\n      MH.includes(directions, MC.S_UP) ||\n      MH.includes(directions, MC.S_DOWN)\n    ) {\n      checkTop = true;\n    }\n    if (\n      MH.includes(directions, MC.S_LEFT) ||\n      MH.includes(directions, MC.S_RIGHT)\n    ) {\n      checkLeft = true;\n    }\n  }\n\n  return (\n    (checkTop && topDiff >= threshold) || (checkLeft && leftDiff >= threshold)\n  );\n};\n\nconst fetchScrollData = async (\n  element: Element,\n  previousEventData: ScrollData | undefined,\n  realtime: boolean,\n): Promise<ScrollData> => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollTop = MH.ceil(element[MC.S_SCROLL_TOP]);\n  const scrollLeft = MH.ceil(element[MC.S_SCROLL_LEFT]);\n  const scrollWidth = element[MC.S_SCROLL_WIDTH];\n  const scrollHeight = element[MC.S_SCROLL_HEIGHT];\n  const clientWidth = getClientWidthNow(element);\n  const clientHeight = getClientHeightNow(element);\n\n  const scrollTopFraction =\n    MH.round(scrollTop) / (scrollHeight - clientHeight || MC.INFINITY);\n  const scrollLeftFraction =\n    MH.round(scrollLeft) / (scrollWidth - clientWidth || MC.INFINITY);\n\n  const prevScrollTop = previousEventData?.scrollTop ?? 0;\n  const prevScrollLeft = previousEventData?.scrollLeft ?? 0;\n\n  const direction = getMaxDeltaDirection(\n    scrollLeft - prevScrollLeft,\n    scrollTop - prevScrollTop,\n  );\n\n  return {\n    direction,\n    [MC.S_CLIENT_WIDTH]: clientWidth,\n    [MC.S_CLIENT_HEIGHT]: clientHeight,\n    [MC.S_SCROLL_WIDTH]: scrollWidth,\n    [MC.S_SCROLL_HEIGHT]: scrollHeight,\n    [MC.S_SCROLL_TOP]: scrollTop,\n    [MC.S_SCROLL_TOP_FRACTION]: scrollTopFraction,\n    [MC.S_SCROLL_LEFT]: scrollLeft,\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollLeftFraction,\n  };\n};\n\nconst setScrollCssProps = (\n  element: Element,\n  scrollData: Partial<ScrollData> | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetMainScrollableElement()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"page-\";\n  }\n\n  scrollData ??= {};\n  const props = {\n    [MC.S_SCROLL_TOP]: scrollData[MC.S_SCROLL_TOP],\n    [MC.S_SCROLL_TOP_FRACTION]: scrollData[MC.S_SCROLL_TOP_FRACTION],\n    [MC.S_SCROLL_LEFT]: scrollData[MC.S_SCROLL_LEFT],\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollData[MC.S_SCROLL_LEFT_FRACTION],\n    [MC.S_SCROLL_WIDTH]: scrollData[MC.S_SCROLL_WIDTH],\n    [MC.S_SCROLL_HEIGHT]: scrollData[MC.S_SCROLL_HEIGHT],\n  };\n  setNumericStyleJsVars(element, props, { _prefix: prefix });\n};\n\nconst getEventTarget = (element: Element): ScrollTarget => {\n  if (element === MH.getDocScrollingElement()) {\n    return MH.getDoc();\n  }\n\n  return element;\n};\n\nconst invokeCallback = (\n  callback: OnScrollCallback,\n  element: Element,\n  scrollData: ScrollData,\n) => callback.invoke(element, MH.copyObject(scrollData)).catch(logError);\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { ScrollOffset, View, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { isValidStrList, validateStrList } from \"@lisn/utils/validation\";\n\nimport { newBitSpaces, createBitSpace } from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid {@link ScrollOffset}.\n *\n * @category Validation\n */\nexport const isValidScrollOffset = (offset: string): offset is ScrollOffset =>\n  offset.match(OFFSET_REGEX) !== null;\n\n/**\n * Returns true if the given string is a valid \"view\".\n *\n * @category Validation\n */\nexport const isValidView = (view: string): view is View =>\n  MH.includes(VIEWS, view);\n\n/**\n * Returns true if the given string or array is a list of valid views.\n *\n * @category Validation\n */\nexport const isValidViewList = (views: string | string[]) =>\n  isValidStrList(views, isValidView, false);\n\n/**\n * Returns the views that are opposite to the given set of views.\n *\n * Above and below are opposites, and so are left and right.\n *\n * \"at\" is a special case. It is considered opposite to any view in the sense\n * that if it is not present in `views` it will always be included in the\n * returned array. However it is not \"strongly\" opposite in the sense that it\n * will not cause other views to be included in the result unless it is the\n * only view in `views`. That is, there are two sets of strongly opposite pairs\n * (\"above\"/\"below\" and \"left\"/\"right\") and at least one of the two opposing\n * views of a pair must be present for the other one to be included, _except in\n * the special case of `views` being \"at\"_. See examples below for\n * clarification.\n *\n * **Note** that the order of the returned array is not defined.\n *\n * @example\n * Returns [\"above\", \"below\", \"left\", \"right\"] (not definite order), since\n * \"at\" is the only view present and is opposite to all:\n *\n * ```javascript\n * getOppositeViews(\"at\"); // -> [\"above\", \"below\", \"left\", \"right\"] (not necessarily in this order)\n * ```\n *\n * @example\n * Returns [\"below\"]. \"left\" and \"right\" are NOT included even though \"at\" is\n * given, because at least one of the two opposing views of a pair must be\n * present for the other one to be included (except in the special case of\n * `views` being \"at\").\n *\n * ```javascript\n * getOppositeViews(\"at,above\"); // -> [\"below\"]\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above\"); // -> [\"at\", \"below\"] (not necessarily in this order)\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above,below\"); // -> [\"at\"]\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"at,above,below\"); // -> []\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above,right\"); // -> [\"at\", \"below\", \"left\"] (not necessarily in this order)\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"at,above,right\"); // -> [\"below\", \"left\"] (not necessarily in this order)\n * ```\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid, including if it's empty \"\".\n *\n * @category Views\n */\nexport const getOppositeViews = (\n  views: CommaSeparatedStr<View> | View[],\n): View[] => {\n  if (!views) {\n    throw MH.usageError(\"'views' cannot be empty\");\n  }\n\n  const bitmask = getViewsBitmask(views);\n  let oppositeBitmask = VIEWS_SPACE.bitmask & ~bitmask; // initial, all not present in bitmask\n\n  // If the given view is \"at\", then include all the other ones.\n  // Otherwise include only the opposite views of those directional\n  // (above/below/left/right) that are present. I.e. if neither left not right\n  // is given, then don't include them\n  if (bitmask !== VIEWS_SPACE.bit.at) {\n    // remove the opposite ones to those not present\n    if (!(bitmask & VIEWS_SPACE.bit.above)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.below;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.below)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.above;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.left)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.right;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.right)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.left;\n    }\n  }\n\n  return getViewsFromBitmask(oppositeBitmask);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getViewsBitmask = (\n  viewsStr: View[] | string | undefined,\n): number => {\n  let viewsBitmask = 0;\n  const views = validateStrList(\"views\", viewsStr, isValidView);\n\n  if (views) {\n    for (const v of views) {\n      if (!isValidView(v)) {\n        throw MH.usageError(`Unknown view '${v}'`);\n      }\n\n      viewsBitmask |= VIEWS_SPACE.bit[v];\n    }\n  } else {\n    viewsBitmask = VIEWS_SPACE.bitmask; // default: all\n  }\n\n  return viewsBitmask;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const parseScrollOffset = (input: string) => {\n  const match = input.match(OFFSET_REGEX);\n  if (!match) {\n    throw MH.usageError(`Invalid offset: '${input}'`);\n  }\n\n  const reference = match[1];\n  const value = match[2];\n  /* istanbul ignore next */ // shouldn't happen\n  if (!reference || !value) {\n    throw MH.bugError(\"Offset regex: blank capture groups\");\n  }\n\n  return { reference, value };\n};\n\nconst VIEWS: View[] = [\n  MC.S_AT,\n  MC.S_ABOVE,\n  MC.S_BELOW,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const VIEWS_SPACE = createBitSpace<View>(newBitSpaces(), ...VIEWS);\n\n// --------------------\n\n// Don't use capture groups for old browser support\nconst OFFSET_REGEX = RegExp(\"(top|bottom|left|right): *([^ ].+)\");\n\nconst getViewsFromBitmask = (bitmask: number): View[] => {\n  const views: View[] = [];\n  for (let bit = VIEWS_SPACE.start; bit <= VIEWS_SPACE.end; bit++) {\n    const value = 1 << bit;\n    if (bitmask & value) {\n      const name = VIEWS_SPACE.nameOf(value);\n      if (name) {\n        views.push(name);\n      }\n    }\n  }\n\n  return views;\n};\n","/**\n * @module Modules/XIntersectionObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nexport type XIntersectionObserverCallback = (\n  entries: IntersectionObserverEntry[],\n  observer: XIntersectionObserver,\n) => void;\n\n/**\n * {@link XIntersectionObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}\n * with added capabilities:\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n */\nexport class XIntersectionObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root | IntersectionObserver:root}.\n   */\n  readonly root!: Element | Document | null;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin | IntersectionObserver:rootMargin}.\n   */\n  readonly rootMargin!: string;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/thresholds | IntersectionObserver:thresholds}.\n   */\n  readonly thresholds!: number[];\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/observe | IntersectionObserver:observe} except it accepts multiple\n   * targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent intersection change.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/unobserve | IntersectionObserver:unobserve} except it accepts multiple\n   * targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/disconnect | IntersectionObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * Like `IntersectionObserver.takeRecords`.\n   */\n  readonly takeRecords: () => void;\n\n  constructor(\n    callback: XIntersectionObserverCallback,\n    observeOptions?: IntersectionObserverInit,\n  ) {\n    let observedTargets = MH.newWeakSet<Element>();\n    const targetsToSkip = MH.newWeakSet<Element>();\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      const selectedEntries = [];\n\n      for (const entry of entries) {\n        if (targetsToSkip.has(MH.targetOf(entry))) {\n          MH.deleteKey(targetsToSkip, MH.targetOf(entry));\n          continue;\n        }\n\n        selectedEntries.push(entry);\n      }\n\n      if (MH.lengthOf(selectedEntries)) {\n        callback(selectedEntries, this);\n      }\n    };\n\n    const observer = MH.newIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    MH.defineProperty(this, \"root\", { get: () => observer.root });\n    MH.defineProperty(this, \"rootMargin\", {\n      get: () => observer.rootMargin,\n    });\n    MH.defineProperty(this, \"thresholds\", {\n      get: () => observer.thresholds,\n    });\n\n    this.observe = (...targets) => {\n      for (const target of targets) {\n        observedTargets.add(target);\n        observer.observe(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.add(target);\n        this.observe(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        observer.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      observedTargets = MH.newWeakSet();\n      observer.disconnect();\n    };\n\n    this.takeRecords = () => observer.takeRecords();\n  }\n}\n","/**\n * @module Watchers/ViewWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  ViewTarget,\n  View,\n  BoundingRect,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { setNumericStyleJsVars } from \"@lisn/utils/css-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForSubsequentMeasureTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys, compareValuesIn } from \"@lisn/utils/misc\";\nimport { createOverlay, OverlayOptions } from \"@lisn/utils/overlays\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport { toMargins, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  VIEWS_SPACE,\n  getViewsBitmask,\n  parseScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap, newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XIntersectionObserver } from \"@lisn/modules/x-intersection-observer\";\n\nimport { DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewWatcher} monitors the position of a given target relative to the\n * given {@link ViewWatcherConfig.root | root} or the viewport.\n *\n * It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class ViewWatcher {\n  /**\n   * Call the given handler whenever the {@link ViewWatcherConfig.root | root}'s\n   * view relative to the target position changes, i.e. when the target enters\n   * or leaves the root.\n   *\n   * Unless {@link OnViewOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current view if it matches this\n   * set of options*.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking position across root\n   * using {@link trackView}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or the options are invalid.\n   */\n  readonly onView: (\n    target: ViewTarget,\n    handler: OnViewHandler,\n    options?: OnViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offView: (target: ViewTarget, handler: OnViewHandler) => void;\n\n  /**\n   * This does more than just {@link onView}. The difference is that in\n   * addition to a change of {@link View}, such as the target entering or\n   * leaving the ViewWatcher's {@link ViewWatcherConfig.root | root} (by\n   * default the viewport), the handler is also called each time the target's\n   * relative view changes _while inside the root_.\n   *\n   * A change of relative position happens when:\n   * - the target is resized\n   * - the root is resized\n   * - the any of the target's scrollable ancestors is scrolled\n   * - the target's attributes changed that resulted in a change of position\n   *\n   * All of the above are accounted for. Internally it uses\n   * {@link ScrollWatcher}, {@link DOMWatcher} and {@link SizeWatcher} to keep\n   * track of all of this.\n   *\n   * If the target is leaves the ViewWatcher's\n   * {@link ViewWatcherConfig.root | root}, the handler will be called with\n   * the {@link ViewData}, and the above events will stop being tracked until\n   * the target enters the watcher's root again.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates the following set of CSS variables on the target's style and\n   * represent its relative position:\n   *\n   * - `--lisn-js--r-top`\n   * - `--lisn-js--r-bottom`\n   * - `--lisn-js--r-left`\n   * - `--lisn-js--r-right`\n   * - `--lisn-js--r-width`\n   * - `--lisn-js--r-height`\n   * - `--lisn-js--r-h-middle`\n   * - `--lisn-js--r-v-middle`\n   *\n   * See {@link ViewData.relative} for an explanation of each.\n   *\n   * Note that only Element targets are supported here and not offsets.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or \"views\" are invalid.\n   */\n  readonly trackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n    options?: TrackViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackView}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n  ) => void;\n\n  /**\n   * Get the current view relative to the target. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                 this only when doing realtime scroll-based animations\n   *                 as it may cause a forced layout.\n   */\n  readonly fetchCurrentView: (\n    target: ViewTarget,\n    realtime?: boolean,\n  ) => Promise<ViewData>;\n\n  /**\n   * Creates a new instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: ViewWatcherConfig) {\n    return new ViewWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing  instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: ViewWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new ViewWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ViewWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ViewWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ViewWatcher\", logAtCreation: config })\n      : null;\n\n    const allViewData = MH.newWeakMap<Element, ViewData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<\n        OnViewHandler,\n        {\n          _callback: OnViewCallback;\n          _trackType: TrackType;\n          _options: OnViewOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      debug: logger?.debug9(`Got ${entries.length} new entries`, entries);\n\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    const observeOptions = {\n      root: config._root,\n      threshold: config._threshold,\n      rootMargin: config._rootMargin,\n    };\n\n    const xObserver = new XIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    // ----------\n\n    const fetchCurrentView = (\n      element: Element,\n      realtime = false,\n    ): Promise<ViewData> => {\n      const fetchData = async (\n        entryOrElement: IntersectionObserverEntry | Element,\n      ) => {\n        const intersection = await fetchIntersectionData(\n          config,\n          entryOrElement,\n          realtime,\n        );\n        const data = await fetchViewData(intersection, realtime);\n        return data;\n      };\n\n      if (realtime) {\n        return fetchData(element);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp IntersectionObserver\n        const observer = MH.newIntersectionObserver((entries) => {\n          const promise = fetchData(entries[0]);\n          observer.disconnect();\n          promise.then(resolve);\n        }, observeOptions);\n\n        observer.observe(element);\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n      trackType: TrackType,\n    ): OnViewCallback => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      allCallbacks.sGet(element).set(handler, {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      });\n\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      userOptions: (OnViewOptions & TrackViewOptions) | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOptions(config._root, target, userOptions);\n      const element = options._element;\n\n      const callback = createCallback(handler, options, trackType);\n\n      // View watcher should be used before the DOM is loaded since the initial\n      // size of the root may be 0 or close to 0 and would lead to premature\n      // triggering.\n      await waitForInteractive();\n\n      // Initial call doesn't need to be realtime, and best to use an actual\n      // IntersectionObserverEntry for that one.\n      let viewData = await fetchCurrentView(element);\n\n      if (\n        viewData.rootBounds[MC.S_WIDTH] === 0 &&\n        viewData.rootBounds[MC.S_HEIGHT] === 0\n      ) {\n        // Possibly the root is being setup now, wait for one AF\n        debug: logger?.debug5(\n          \"Got zero root size, deferring for a bit\",\n          config._root,\n        );\n        await waitForSubsequentMeasureTime();\n        viewData = await fetchCurrentView(element);\n      }\n\n      if (trackType === TRACK_FULL) {\n        // Detect resize or scroll\n        await setupInviewTrack(options, callback, viewData);\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      // Always use observeLater to skip the initial call from the\n      // IntersectionObserver, and call callbacks that have skipInitial: false\n      // here. Otherwise, we can't tell from inside the intersectionHandler whether\n      // a callback wants to skip its initial call or not.\n      //\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, viewData);\n        if (viewsToBitmask(viewData.views) & options._viewsBitmask) {\n          await invokeCallback(callback, element, viewData);\n        }\n      }\n    };\n\n    // ----------\n\n    const removeOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      trackType: TrackType,\n    ) => {\n      // For time sync, so that if called immediately after onView without\n      // awaiting, it will remove the callback that is about to be added.\n      // But if no such handler has been added we may unnecessarily\n      // create an overlay... TODO\n      const options = await fetchOptions(config._root, target, {});\n      const element = options._element;\n\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setViewCssProps) {\n          // delete the properties\n          setViewCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n    ) => {\n      const element = options._element;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n\n        xObserver.unobserve(element);\n        MH.deleteKey(allViewData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = async (entry: IntersectionObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      // This doesn't need to be \"realtime\", since IntersectionObserver alone\n      // introduces a delay.\n      const intersection = await fetchIntersectionData(config, entry);\n      const latestData = await fetchViewData(intersection);\n      debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n      const viewsBitmask = viewsToBitmask(latestData.views);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        if (viewsBitmask & entry._options._viewsBitmask) {\n          invokeCallback(entry._callback, element, latestData);\n        }\n      }\n    };\n\n    // ----------\n\n    const setupInviewTrack = async (\n      options: OnViewOptionsInternal,\n      viewCallback: OnViewCallback,\n      viewData: ViewData,\n    ) => {\n      const element = options._element;\n      debug: logger?.debug8(\n        \"Setting up size, scroll and attribute tracking\",\n        element,\n      );\n\n      const sizeWatcher = SizeWatcher.reuse();\n      const scrollWatcher = ScrollWatcher.reuse();\n      const realtime = options._debounceWindow === 0;\n\n      // Detect when target's class or style attribute change\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      // We need to remove the tracking callback when target leaves view and re-add\n      // it when it enters view. But the OnViewCallback that is associated may have\n      // already been added prior, by calling onView with this handler, so we can't\n      // always wrap around it, in order to detect when it's called with a change\n      // of view. So we setup another OnViewCallback tied to the tracking callback.\n      let isInview = false;\n\n      let removeTrackCallback: (() => void) | null = null;\n\n      // Finds any scrollable ancestors of the element and detect scroll on them.\n      const scrollableAncestors = await fetchScrollableAncestors(\n        element,\n        realtime,\n      );\n      if (viewCallback.isRemoved()) {\n        return;\n      }\n\n      const addTrackCallback = () => {\n        const trackCallback = wrapCallback(async () => {\n          const prevData = allViewData.get(element);\n\n          // Get the latest view data for the target\n          const latestData = await fetchCurrentView(element, realtime);\n          debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n          const changed = viewChanged(latestData, prevData);\n          if (changed) {\n            // When comparing for changes, we round the numbers to certain number\n            // of decimal places, and allViewData serves as a \"last threshold\"\n            // state, so only update it if there was a significant change.\n            // Otherwise very quick changes in small increments would get\n            // rejected as \"no change\".\n            allViewData.set(element, latestData);\n\n            if (isInview && !viewCallback.isRemoved()) {\n              // Could have been removed during the debounce window\n              await invokeCallback(viewCallback, element, latestData);\n            }\n          } else {\n            debug: logger?.debug9(\"ViewData same as last\");\n          }\n        });\n\n        // TODO Is there a better way to detect when it's moved?\n        viewCallback.onRemove(trackCallback.remove);\n        removeTrackCallback = trackCallback.remove;\n\n        // Detect when target's class or style attribute change\n        domWatcher.onMutation(trackCallback, {\n          categories: [MC.S_ATTRIBUTE],\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when target is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: element,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the root is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: config._root ?? MH.getWindow(),\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the target's scrollable ancestors are scrolled (this\n        // will almost certainly include the main scrollable element).\n        for (const ancestor of scrollableAncestors) {\n          scrollWatcher.onScroll(trackCallback, {\n            scrollable: ancestor,\n            [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n            threshold: options._scrollThreshold,\n            [MC.S_SKIP_INITIAL]: true,\n          });\n        }\n      };\n\n      const enterOrLeaveCallback = createCallback(\n        (target__ignored, viewData) => {\n          if (viewData.views[0] === MC.S_AT) {\n            if (!isInview) {\n              isInview = true;\n              addTrackCallback();\n            }\n          } else if (removeTrackCallback) {\n            isInview = false;\n            removeTrackCallback();\n            removeTrackCallback = null;\n          }\n        },\n        MH.assign(options, {\n          _viewsBitmask: VIEWS_SPACE.bitmask,\n        }),\n        TRACK_REGULAR,\n      );\n\n      viewCallback.onRemove(enterOrLeaveCallback.remove);\n\n      allViewData.set(element, viewData); // to avoid duplicate initial call\n      // Setup the track and the \"inView\" state\n      if (!enterOrLeaveCallback.isRemoved()) {\n        invokeCallback(enterOrLeaveCallback, element, viewData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentView = (target, realtime = false) =>\n      fetchElement(config._root, target).then((element) =>\n        fetchCurrentView(element, realtime),\n      );\n\n    // ----------\n\n    this.trackView = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      return setupOnView(element, handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackView = (element, handler?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      removeOnView(element, handler, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onView = (target, handler, options?) =>\n      setupOnView(target, handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offView = (target, handler) =>\n      removeOnView(target, handler, TRACK_REGULAR); // no need to await\n  }\n}\n\n/**\n * @interface\n */\nexport type ViewWatcherConfig = {\n  /**\n   * The root element to use for the IntersectionObserver.\n   *\n   * **NOTE:** If the target you want to observe (via\n   * {@link ViewWatcher.onView}) is inside a scrolling element, then you should\n   * probably set the watcher's root to be that scrolling element or a wrapper\n   * around it. However, even if you don't or can't do that, the watcher will\n   * try to be smart about that, and when the target is no longer intercepting\n   * because it's scrolled outside its scrolling container, and yet its\n   * bounding box is still inside the watcher root (e.g. the viewport) the\n   * watcher will determine the relative view based on the scrolling container\n   * and not the actual watcher root.\n   *\n   * @defaultValue null\n   */\n  root?: Element | null;\n\n  /**\n   * The rootMargin to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue \"0px 0px 0px 0px\"\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue 0\n   */\n  threshold?: number | number[];\n};\n\n/**\n * @interface\n */\nexport type OnViewOptions = {\n  /**\n   * Specifies a list of {@link View}s to target for.\n   *\n   * The handler will only be called if there is a change of view relative to\n   * the target that matches the given ones.\n   *\n   * It can be a comma-separated list of \"views\" or an array of such names.\n   *\n   * @defaultValue undefined\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * @interface\n */\nexport type TrackViewOptions = {\n  /**\n   * Use this debounce window for the {@link ScrollWatcher} and\n   * {@link SizeWatcher} involved in the view tracking.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts during scroll, but you probably need this when\n   * doing scroll-based animations.\n   *\n   * @defaultValue undefined // ScrollWatcher and SizeWatcher defaults\n   */\n  debounceWindow?: number;\n\n  /**\n   * Use this resize threshold for the {@link SizeWatcher} involved in the view\n   * tracking.\n   *\n   * @defaultValue undefined // SizeWatcher default\n   */\n  resizeThreshold?: number;\n\n  /**\n   * Use this scroll threshold for the {@link ScrollWatcher} involved in the\n   * view tracking.\n   *\n   * @defaultValue undefined // ScrollWatcher default\n   */\n  scrollThreshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - The element that is the target of the IntersectionObserver. If the call to\n *   {@link ViewWatcher.onView} specified an element as the target, it will be\n *   the same. If it specified an offset, then the element passed to the\n *   callback will be an absolutely positioned trigger overlay that's created\n *   as a result.\n * - the {@link ViewData} for relative to the target\n */\nexport type OnViewHandlerArgs = [Element, ViewData];\nexport type OnViewCallback = Callback<OnViewHandlerArgs>;\nexport type OnViewHandler = CallbackHandler<OnViewHandlerArgs> | OnViewCallback;\n\nexport type ViewData = {\n  isIntersecting: boolean;\n\n  targetBounds: BoundingRect;\n\n  rootBounds: BoundingRect;\n\n  /**\n   * The current view or views of the target. There would be two views given\n   * only if the target is _not_ in view and it's diagonally across from the\n   * root, e.g. both below and to the right.\n   */\n  views: [View, View?];\n\n  /**\n   * This is the target's position relative to the\n   * {@link ViewWatcherConfig.root | root} with values relative to the root\n   * size.\n   *\n   * It is like the {@link targetBounds} except that each quantity is scaled by\n   * the root's width or height, and having two additional computed values.\n   */\n  relative: {\n    x: number;\n    y: number;\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n    width: number;\n    height: number;\n\n    /**\n     * Average of the relative left and right.\n     */\n    hMiddle: number;\n\n    /**\n     * Average of the relative top and bottom.\n     */\n    vMiddle: number;\n  };\n};\n\n// ----------------------------------------\n\ntype ViewWatcherConfigInternal = {\n  _root: Element | null;\n  _rootMargin: string;\n  _threshold: number | number[];\n};\n\ntype OnViewOptionsInternal = {\n  _element: Element;\n  _viewsBitmask: number;\n  _debounceWindow: number | undefined;\n  _resizeThreshold: number | undefined;\n  _scrollThreshold: number | undefined;\n};\n\ntype IntersectionData = {\n  _target: Element;\n  _targetBounds: BoundingRect;\n  _root: Element | null;\n  _rootMargins: [number, number, number, number];\n  _rootBounds: BoundingRect;\n  _isIntersecting: boolean | null; // null means unknown, no IntersectionObserverEntry\n  _isCrossOrigin: boolean | null; // null means unknown, no IntersectionObserverEntry\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, ViewWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (\n  config: ViewWatcherConfig | undefined,\n): ViewWatcherConfigInternal => {\n  return {\n    _root: config?.root ?? null,\n    _rootMargin: config?.rootMargin ?? \"0px 0px 0px 0px\",\n    _threshold: config?.threshold ?? 0,\n  };\n};\n\nconst TRACK_REGULAR = 1; // only entering/leaving root\nconst TRACK_FULL = 2; // entering/leaving + moving across (fine-grained)\n\n// --------------------\n\nconst fetchOptions = async (\n  root: Element | null,\n  target: ViewTarget,\n  options: (OnViewOptions & TrackViewOptions) | undefined,\n): Promise<OnViewOptionsInternal> => {\n  return {\n    _element: await fetchElement(root, target),\n    _viewsBitmask: getViewsBitmask(options?.views),\n    _debounceWindow: options?.debounceWindow,\n    _resizeThreshold: options?.resizeThreshold,\n    _scrollThreshold: options?.scrollThreshold,\n  };\n};\n\nconst fetchScrollableAncestors = async (\n  element: Element,\n  realtime: boolean,\n) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollableAncestors = [];\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = getClosestScrollable(ancestor, { active: true }))) {\n    scrollableAncestors.push(ancestor);\n  }\n\n  return scrollableAncestors;\n};\n\nconst viewChanged = (latestData: ViewData, prevData: ViewData | undefined) =>\n  !prevData ||\n  viewsToBitmask(prevData.views) !== viewsToBitmask(latestData.views) ||\n  !compareValuesIn(\n    MH.copyBoundingRectProps(prevData.targetBounds),\n    MH.copyBoundingRectProps(latestData.targetBounds),\n  ) ||\n  !compareValuesIn(prevData.rootBounds, latestData.rootBounds) ||\n  !compareValuesIn(prevData.relative, latestData.relative);\n\nconst viewsToBitmask = (views: [View, View?]) =>\n  VIEWS_SPACE.bit[views[0]] | (views[1] ? VIEWS_SPACE.bit[views[1]] : 0);\n\nconst fetchIntersectionData = async (\n  config: ViewWatcherConfigInternal,\n  entryOrTarget: IntersectionObserverEntry | Element,\n  realtime = false,\n): Promise<IntersectionData> => {\n  const root = config._root;\n  const vpSize = await fetchViewportSize(realtime);\n  const rootMargins = toMargins(config._rootMargin, vpSize);\n\n  let target: Element;\n  let targetBounds: BoundingRect;\n  let rootBounds: BoundingRect | null = null;\n  let isIntersecting: boolean | null = null;\n  let isCrossOrigin: boolean | null = null;\n\n  if (MH.isInstanceOf(entryOrTarget, IntersectionObserverEntry)) {\n    target = entryOrTarget.target;\n    targetBounds = entryOrTarget.boundingClientRect;\n    rootBounds = entryOrTarget.rootBounds;\n    isIntersecting = entryOrTarget.isIntersecting;\n    isCrossOrigin = !entryOrTarget.rootBounds;\n  } else {\n    target = entryOrTarget;\n    targetBounds = await fetchBounds(target, realtime);\n  }\n\n  if (!rootBounds) {\n    rootBounds = await fetchBounds(root, realtime, rootMargins);\n  }\n\n  return {\n    _target: target,\n    _targetBounds: targetBounds,\n    _root: root,\n    _rootMargins: rootMargins,\n    _rootBounds: rootBounds,\n    _isIntersecting: isIntersecting,\n    _isCrossOrigin: isCrossOrigin,\n  };\n};\n\nconst fetchBounds = async (\n  root: Element | null,\n  realtime: boolean,\n  rootMargins?: [number, number, number, number],\n): Promise<BoundingRect> => {\n  let rect: BoundingRect;\n\n  if (root) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    rect = MH.copyBoundingRectProps(MH.getBoundingClientRect(root));\n  } else {\n    const { width, height } = await fetchViewportSize(realtime);\n    rect = {\n      x: 0,\n      left: 0,\n      right: width,\n      width,\n      y: 0,\n      top: 0,\n      bottom: height,\n      height,\n    };\n  }\n\n  if (rootMargins) {\n    rect.x = rect[MC.S_LEFT] -= rootMargins[3];\n    rect[MC.S_RIGHT] += rootMargins[1];\n    rect[MC.S_WIDTH] += rootMargins[1] + rootMargins[3];\n\n    rect.y = rect[MC.S_TOP] -= rootMargins[0];\n    rect[MC.S_BOTTOM] += rootMargins[2];\n    rect[MC.S_HEIGHT] += rootMargins[0] + rootMargins[2];\n  }\n\n  return rect;\n};\n\nconst fetchViewData = async (\n  intersection: IntersectionData,\n  realtime = false,\n): Promise<ViewData> => {\n  const vpSize = await fetchViewportSize(realtime);\n  const vpHeight = vpSize[MC.S_HEIGHT];\n  const vpWidth = vpSize[MC.S_WIDTH];\n\n  const views = await fetchViews(intersection, realtime);\n\n  const relative = MH.merge(\n    { hMiddle: NaN, vMiddle: NaN },\n    MH.copyBoundingRectProps(intersection._targetBounds),\n  );\n\n  relative.y /= vpHeight;\n  relative[MC.S_TOP] /= vpHeight;\n  relative[MC.S_BOTTOM] /= vpHeight;\n  relative[MC.S_HEIGHT] /= vpHeight;\n\n  relative.x /= vpWidth;\n  relative[MC.S_LEFT] /= vpWidth;\n  relative[MC.S_RIGHT] /= vpWidth;\n  relative[MC.S_WIDTH] /= vpWidth;\n\n  relative.hMiddle = (relative[MC.S_LEFT] + relative[MC.S_RIGHT]) / 2;\n  relative.vMiddle = (relative[MC.S_TOP] + relative[MC.S_BOTTOM]) / 2;\n\n  const viewData: ViewData = {\n    isIntersecting: intersection._isIntersecting ?? views[0] === MC.S_AT,\n    targetBounds: intersection._targetBounds,\n    rootBounds: intersection._rootBounds,\n    views,\n    relative,\n  };\n\n  return viewData;\n};\n\nconst fetchViews = async (\n  intersection: IntersectionData,\n  realtime: boolean,\n  useScrollingAncestor?: Element,\n): Promise<[View, View?]> => {\n  if (intersection._isIntersecting) {\n    return [MC.S_AT];\n  }\n\n  let rootBounds: BoundingRect;\n  if (useScrollingAncestor) {\n    rootBounds = await fetchBounds(\n      useScrollingAncestor,\n      realtime,\n      intersection._rootMargins,\n    );\n  } else {\n    rootBounds = intersection._rootBounds;\n  }\n\n  const targetBounds = intersection._targetBounds;\n  const delta = {\n    _left: rootBounds[MC.S_LEFT] - targetBounds[MC.S_LEFT],\n    _right: targetBounds[MC.S_RIGHT] - rootBounds[MC.S_RIGHT],\n    _top: rootBounds[MC.S_TOP] - targetBounds[MC.S_TOP],\n    _bottom: targetBounds[MC.S_BOTTOM] - rootBounds[MC.S_BOTTOM],\n  };\n\n  let xView: View | null = null;\n  let yView: View | null = null;\n  if (delta._left > 0 && delta._right > 0) {\n    // Target is wider than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    xView = delta._left > delta._right ? MC.S_RIGHT : MC.S_LEFT;\n  } else if (delta._left > 0) {\n    // Target is to the left of the root\n    xView = MC.S_RIGHT;\n  } else if (delta._right > 0) {\n    // Target is to the right of the root\n    xView = MC.S_LEFT;\n  } // else target is horizontally contained in root, see below\n\n  if (delta._top > 0 && delta._bottom > 0) {\n    // Target is taller than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    yView = delta._top > delta._bottom ? MC.S_BELOW : MC.S_ABOVE;\n  } else if (delta._top > 0) {\n    // Target is above the root\n    yView = MC.S_BELOW;\n  } else if (delta._bottom > 0) {\n    // Target is below the root\n    yView = MC.S_ABOVE;\n  } // else target is vertically contained in root, see below\n\n  if (xView && yView) {\n    // diagonally out of vide\n    return [xView, yView];\n  } else if (xView) {\n    // horizontally out of vide\n    return [xView];\n  } else if (yView) {\n    // vertically out of vide\n    return [yView];\n  }\n\n  // The target is contained in the root bounds and yet isIntersecting was\n  // not true. This means that either:\n  //\n  // 1. It may be intersecting, but we didn't get an actual\n  //    IntersectionObserverEntry and we don't know if it's intersecting\n  //    or not\n  // 2. The target is inside a scrolling element that is _not_ being used as\n  //    the observer root, and the target has scrolled out of the scrollable\n  //    bounds but still inside the viewport\n  // 3. We're inside a cross-origin iFrame and the iFrame is partially or\n  //    fully not-intersecting\n\n  if (!intersection._isCrossOrigin) {\n    // This is case 1. or 2. => get the views relative to the closest\n    // scrollable ancestor relative to which it is _not_ intersecting, if\n    // any. If it's nested inside several scrolling elements, we'll end up\n    // looping over each one until we find the one for which the target is\n    // outside its box.\n    //\n    // It is too risky to use active isScrollable check here since we could be\n    // inside an onScroll handler, so just use passive.\n    const scrollingAncestor = getClosestScrollable(\n      useScrollingAncestor ?? intersection._target,\n    );\n\n    if (scrollingAncestor) {\n      return fetchViews(intersection, realtime, scrollingAncestor);\n    }\n  }\n\n  // Either case 3. (cross-origin iframe outside the viewport) or case 1. and\n  // the target is actually intersecting the root. Either way, it's to be\n  // considered in-view of its root.\n  return [MC.S_AT];\n};\n\nconst setViewCssProps = (\n  element: Element,\n  viewData: ViewData | undefined | null,\n) => {\n  const relative: Record<string, number> = viewData?.relative ?? {};\n  const props = {\n    top: relative.top,\n    bottom: relative.bottom,\n    left: relative.left,\n    right: relative.right,\n    [MC.S_WIDTH]: relative[MC.S_WIDTH],\n    [MC.S_HEIGHT]: relative[MC.S_HEIGHT],\n    hMiddle: relative.hMiddle,\n    vMiddle: relative.vMiddle,\n  };\n  setNumericStyleJsVars(element, props, { _prefix: \"r-\", _numDecimal: 4 }); // don't await here\n};\n\nconst fetchElement = async (\n  root: Element | null,\n  target: ViewTarget,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  } else if (!MH.isString(target)) {\n    throw MH.usageError(\n      \"'target' must be an offset string or an HTMLElement | SVGElement | MathMLElement\",\n    );\n  }\n\n  const overlayOptions = getOverlayOptions(root, target);\n  return await createOverlay(overlayOptions);\n};\n\nconst getOverlayOptions = (\n  root: Element | null,\n  target: string,\n): OverlayOptions => {\n  const { reference, value } = parseScrollOffset(target);\n\n  let ovrDimension: \"width\" | \"height\";\n  if (reference === MC.S_TOP || reference === MC.S_BOTTOM) {\n    ovrDimension = MC.S_WIDTH;\n  } else if (reference === MC.S_LEFT || reference === MC.S_RIGHT) {\n    ovrDimension = MC.S_HEIGHT;\n  } else {\n    throw MH.usageError(`Invalid offset reference: '${reference}'`);\n  }\n\n  return {\n    parent: MH.isHTMLElement(root) ? root : undefined,\n    style: {\n      [reference]: value,\n      [ovrDimension]: \"100%\",\n    },\n  };\n};\n\nconst invokeCallback = (\n  callback: OnViewCallback,\n  element: Element,\n  viewData: ViewData,\n) => callback.invoke(element, MH.copyObject(viewData)).catch(logError);\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nexport * from \"@lisn/watchers/dom-watcher\";\nexport * from \"@lisn/watchers/gesture-watcher\";\nexport * from \"@lisn/watchers/layout-watcher\";\nexport * from \"@lisn/watchers/pointer-watcher\";\nexport * from \"@lisn/watchers/scroll-watcher\";\nexport * from \"@lisn/watchers/size-watcher\";\nexport * from \"@lisn/watchers/view-watcher\";\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport { settings } from \"@lisn/globals/settings\";\nsettings.autoWidgets = true;\n\nexport { settings } from \"@lisn/globals/settings\";\nexport * as watchers from \"@lisn/watchers/index\";\n","/**\n * ## Specification for the HTML API for widgets\n *\n * The following describes the general syntax when using the HTML API for\n * automatic creation of widgets based on data attributes\n * ({@link Settings.settings.autoWidgets | settings.autoWidgets} must be true.\n *\n * A widget specification should be given as a\n * `data-lisn-<WidgetName>=\"<WidgetConfList>\"` attribute.\n *\n * Alternatively, if using all default configurations, you can simply add the\n * `lisn-<WidgetName>` CSS class. Specifying a configuration using CSS classes\n * is not currently possible for widgets, only triggers.\n *\n * The general specification for a widget is of the form:\n *\n * ```\n * <WidgetConfList> ::= <WidgetConf> { \";\" <WidgetConf> }\n *\n * <WidgetConf> ::= [ <WidgetOption> { \"|\" <WidgetOption> } ]\n *\n * <WidgetOption> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n * ```\n *\n * **NOTE:**\n *\n * There can be 0 or more spaces around any of the separator characters.\n *\n * Not all widgets support multiple instances per single element and therefore\n * multiple configurations. Refer to the specific widget.\n *\n * The characters \"|\", \";\", \"=\" are reserved separators and cannot be used\n * literally as part of an option value.\n *\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { hasClass, getData } from \"@lisn/utils/css-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { toArrayIfSingle } from \"@lisn/utils/misc\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString, kebabToCamelCase, splitOn } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { DOMWatcher } from \"@lisn/watchers/dom-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\nexport class Widget {\n  /**\n   * Disables the functionality of the widget. What this means is specific to\n   * each widget.\n   */\n  readonly disable: () => Promise<void>;\n\n  /**\n   * Re-enables the functionality of the widget. What this means is specific to\n   * each widget.\n   */\n  readonly enable: () => Promise<void>;\n\n  /**\n   * Re-enables the widget if disabled, otherwise disables it.\n   */\n  readonly toggleEnable: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is disabled.\n   */\n  readonly onDisable: (handler: WidgetHandler) => void;\n\n  /**\n   * The given handler will be called when the widget is enabled.\n   */\n  readonly onEnable: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is currently disabled.\n   */\n  readonly isDisabled: () => boolean;\n\n  /**\n   * Undoes all modifications to the element and returns it to its original state.\n   *\n   * You will need to recreate it if you want to enable its functionality again.\n   */\n  readonly destroy: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is destroyed.\n   */\n  readonly onDestroy: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is destroyed.\n   */\n  readonly isDestroyed: () => boolean;\n\n  /**\n   * Returns the element passed to the widget constructor.\n   */\n  readonly getElement: () => Element;\n\n  /**\n   * Retrieve an existing widget by element and ID.\n   */\n  static get(element: Element, id: string): Widget | null {\n    return instances.get(element)?.get(id) ?? null;\n  }\n\n  /**\n   * **IMPORTANT:** If ID is given and there's already a widget with this ID on\n   * this element, it will be destroyed!\n   */\n  constructor(element: Element, config?: { id?: string }) {\n    const logger = debug\n      ? new debug.Logger({\n          name: `${this.constructor.name}-${formatAsString(element)}`,\n          logAtCreation: this,\n        })\n      : null;\n\n    const id = config?.id;\n    if (id) {\n      instances.get(element)?.get(id)?.destroy(); // don't await here\n      instances.sGet(element).set(id, this);\n    }\n\n    let isDisabled = false;\n    let isDestroyed = false;\n    let destroyPromise: Promise<void>;\n\n    const enableCallbacks = MH.newSet<WidgetCallback>();\n    const disableCallbacks = MH.newSet<WidgetCallback>();\n    const destroyCallbacks = MH.newSet<WidgetCallback>();\n\n    this.disable = async () => {\n      if (!isDisabled) {\n        debug: logger?.debug8(\"Disabling\");\n        isDisabled = true;\n\n        for (const callback of disableCallbacks) {\n          await callback.invoke(this);\n        }\n      }\n    };\n\n    this.enable = async () => {\n      if (!isDestroyed && isDisabled) {\n        debug: logger?.debug8(\"Enabling\");\n        isDisabled = false;\n\n        for (const callback of enableCallbacks) {\n          await callback.invoke(this);\n        }\n      }\n    };\n\n    this.toggleEnable = async () => {\n      if (!isDestroyed) {\n        await (isDisabled ? this.enable : this.disable)();\n      }\n    };\n\n    this.onDisable = (handler) => disableCallbacks.add(wrapCallback(handler));\n    this.onEnable = (handler) => enableCallbacks.add(wrapCallback(handler));\n\n    this.isDisabled = () => isDisabled;\n\n    this.destroy = () => {\n      if (!destroyPromise) {\n        destroyPromise = (async () => {\n          debug: logger?.debug8(\"Destroying\");\n          isDestroyed = true;\n          await this.disable();\n\n          for (const callback of destroyCallbacks) {\n            await callback.invoke(this);\n          }\n\n          enableCallbacks.clear();\n          disableCallbacks.clear();\n          destroyCallbacks.clear();\n\n          if (id) {\n            const elInstances = instances.get(element);\n            if (elInstances?.get(id) === this) {\n              MH.deleteKey(elInstances, id);\n              instances.prune(element);\n            }\n          }\n        })();\n      }\n\n      return destroyPromise;\n    };\n\n    this.onDestroy = (handler) => destroyCallbacks.add(wrapCallback(handler));\n\n    this.isDestroyed = () => isDestroyed;\n\n    this.getElement = () => element;\n  }\n}\n\nexport type WidgetCallbackArgs = [Widget];\nexport type WidgetCallback = Callback<WidgetCallbackArgs>;\nexport type WidgetHandler =\n  | WidgetCallback\n  | CallbackHandler<WidgetCallbackArgs>;\n\n/**\n * **NOTE:** If the function returns a widget or a list of widgets created for\n * the given element, then each one will be automatically destroyed if the\n * element is removed from the DOM.\n */\nexport type WidgetCreateFn<Config extends Record<string, unknown>> = (\n  element: Element,\n  config?: Config,\n) => Widget | Widget[] | null | Promise<Widget | Widget[] | null>;\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidatorObject<\n  Config extends Record<string, unknown>,\n> = {\n  [K in keyof Config]: (key: K, v: unknown) => Config[K];\n};\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigAsyncValidatorObject<\n  Config extends Record<string, unknown>,\n> = {\n  [K in keyof Config]: (key: K, v: unknown) => Config[K] | Promise<Config[K]>;\n};\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidatorFunc<Config extends Record<string, unknown>> =\n  (\n    element: Element,\n  ) =>\n    | WidgetConfigValidatorObject<Config>\n    | WidgetConfigAsyncValidatorObject<Config>;\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidator<Config extends Record<string, unknown>> =\n  | WidgetConfigValidatorObject<Config>\n  | WidgetConfigValidatorFunc<Config>;\n\n/**\n * Enables automatic setting up of a widget from an elements matching the given\n * selector.\n *\n * If {@link settings.autoWidgets} is true, nothing is done. Otherwise,\n * when an element matching the selector is added to the DOM, `newWidget` will\n * be called and it's expected to setup the widget.\n *\n * **IMPORTANT:** The widget that is returned by `newWidget` will be\n * automatically destroyed when the element that created them is removed from\n * the DOM.\n *\n * **IMPORTANT:** If a widget by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param name      The name of the widget. Should be in kebab-case.\n * @param newWidget Called for every element matching the widget selector.\n * @param configValidator\n *                  A validator object, or a function that returns such an\n *                  object, for all options supported by the widget. If\n *                  given, then the `newWidget` function will also be\n *                  passed a configuration object constructed from the\n *                  element's data attribute.\n * @param [options.selector]\n *                  The selector to match elements for. If not given, then\n *                  uses a default value of `[data-lisn-<name>], .lisn-<name>`\n * @param [options.supportsMultiple]\n *                  If true, and if `configValidator` is given, then the\n *                  value of the element's widget specific data attribute\n *                  will be split on \";\" and each one parsed individually\n *                  as a configuration. Then the `newWidget` function will\n *                  be called once for each configuration.\n */\nexport const registerWidget = async <Config extends Record<string, unknown>>(\n  name: string,\n  newWidget: WidgetCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n  options?: {\n    selector?: string;\n    supportsMultiple?: boolean;\n  },\n) => {\n  if (registeredWidgets.has(name)) {\n    return;\n  }\n\n  registeredWidgets.add(name);\n\n  // init after DOM loaded so that the settings can be configured by the user\n  // straight after loading LISN.js\n  await waitForInteractive();\n\n  const prefixedName = MH.prefixName(name);\n  const selector = options?.selector || getDefaultWidgetSelector(prefixedName);\n\n  if (settings.autoWidgets) {\n    const domWatcher = DOMWatcher.reuse();\n    domWatcher.onMutation(\n      async (operation) => {\n        const element = MH.currentTargetOf(operation);\n        const thisConfigValidator = MH.isFunction(configValidator)\n          ? await configValidator(element)\n          : configValidator;\n\n        const widgets: Widget[] = [];\n        const configSpecs: string[] = [];\n        const dataAttr = getData(element, prefixedName);\n\n        if (options?.supportsMultiple) {\n          if (hasClass(element, prefixedName)) {\n            configSpecs.push(\"\");\n          }\n\n          if (dataAttr !== null) {\n            configSpecs.push(\n              ...(dataAttr ? splitOn(dataAttr, \";\", true) : [\"\"]),\n            );\n          }\n        } else {\n          configSpecs.push(dataAttr ?? \"\");\n        }\n\n        for (const spec of configSpecs) {\n          const config = thisConfigValidator\n            ? await fetchWidgetConfig(spec, thisConfigValidator)\n            : undefined;\n\n          const theseWidgets = await newWidget(element, config);\n          if (theseWidgets) {\n            widgets.push(...toArrayIfSingle(theseWidgets));\n          }\n        }\n\n        // auto-destroy on element remove\n        if (MH.lengthOf(widgets)) {\n          domWatcher.onMutation(\n            () => {\n              for (const w of widgets) {\n                w.destroy();\n              }\n            },\n            {\n              target: element,\n              categories: [MC.S_REMOVED],\n            },\n          );\n        }\n      },\n      {\n        selector,\n        categories: [MC.S_ADDED],\n      },\n    );\n  }\n};\n\n/**\n * Returns a configuration object from the given user input, which can be\n * either an object or a `<separator>` separated string of key=values.\n *\n * If `input` is a string, it must be of the format:\n *\n * ```\n * <UserConfigString> ::= <OptionSpec> { <Separator> <OptionSpec> }\n *\n * <OptionSpec> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n * ```\n *\n * By default, for widgets `<separator>` is \"|\".\n *\n * **NOTE:** If `input` is a string, option names will be converted from\n * kebab-case to camelCase.\n *\n * The given `validator` defines the shape of the returned object. It is called\n * for each entry _in the `validator` object_, with that key and the\n * corresponding value from the input configuration, as the two parameters.\n *\n * If a key is not found in the input, the value passed to the validating\n * function will be `undefined`.\n *\n * If the input is a string and a key has no value, the value passed to the\n * validating function will be an empty string `\"\"`.\n *\n * The final configuration contains all keys from the `validator` object with\n * the value that the validating function for each key returned.\n *\n * There are several built-in validating functions that you can make use of.\n *\n * @see {@link Utils.validateStrList}\n * @see {@link Utils.validateNumber}\n * @see {@link Utils.validateBoolean}\n * @see {@link Utils.validateString}\n * @see {@link Utils.validateBooleanOrString}\n */\nexport const getWidgetConfig = <Config extends Record<string, unknown>>(\n  input: Record<string, unknown> | string | null | undefined,\n  validator: WidgetConfigValidatorObject<Config>,\n  separator = \"|\",\n): Config => {\n  const config = {} as Config;\n  if (!(input instanceof Object)) {\n    input = toOptionsObject(input, separator);\n  }\n\n  for (const key in validator) {\n    config[key] = validator[key](key, input[key]);\n  }\n  return config;\n};\n\n/**\n * Like {@link getWidgetConfig} but it accepts an object whose validator\n * functions may return a promise.\n */\nexport const fetchWidgetConfig = async <Config extends Record<string, unknown>>(\n  input: Record<string, unknown> | string | null | undefined,\n  validator: WidgetConfigAsyncValidatorObject<Config>,\n  separator = \"|\",\n): Promise<Config> => {\n  const config = {} as Config;\n  const configPromises = getWidgetConfig<{\n    [K in keyof Config]: Config[K] | Promise<Config[K]>;\n  }>(input, validator, separator);\n\n  for (const key in configPromises) {\n    config[key] = await configPromises[key];\n  }\n\n  return config;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultWidgetSelector = (prefix: string) =>\n  `.${prefix},[data-${prefix}]`;\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchUniqueWidget = async <W extends Widget>(\n  name: string,\n  element: Element,\n  Type: { get: (element: Element) => W | null },\n): Promise<W | null> => {\n  let widget = Type.get(element);\n  if (!widget) {\n    await waitForDelay(0); // in case it's being processed now\n    widget = Type.get(element);\n\n    if (!widget) {\n      logWarn(`No ${name} widget for element ${formatAsString(element)}`);\n      return null;\n    }\n  }\n\n  return widget;\n};\n\nconst instances = newXWeakMap<Element, Map<string, Widget>>(() => MH.newMap());\nconst registeredWidgets = MH.newSet<string>();\n\n// --------------------\n\nconst toOptionsObject = (\n  input: string | null | undefined,\n  separator: string,\n) => {\n  const options: Record<string, string> = {};\n  for (const entry of MH.filter(\n    splitOn(input ?? \"\", separator, true),\n    (v) => !MH.isEmpty(v),\n  )) {\n    const [key, value] = splitOn(entry, /\\s*=\\s*/, true, 1);\n    options[kebabToCamelCase(key)] = value ?? \"\";\n  }\n  return options;\n};\n","/**\n * @module Actions\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { splitOn } from \"@lisn/utils/text\";\n\nimport { WidgetConfigValidator, fetchWidgetConfig } from \"@lisn/widgets/widget\";\n\n/**\n * @interface\n */\nexport type Action = {\n  do: () => void;\n  undo: () => void;\n  toggle: () => void;\n};\n\nexport type ActionCreateFn<Config extends Record<string, unknown>> = (\n  element: Element,\n  args: string[],\n  config?: Config,\n) => Action | Promise<Action>;\n\n/**\n * Registers the given action so that it can be parsed by\n * {@link Triggers.registerTrigger}.\n *\n * **IMPORTANT:** If an action by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param name      The name of the action. Should be in kebab-case.\n * @param newAction Called for every action specification for a trigger\n *                  parsed by {@link Triggers.registerTrigger}\n */\nexport const registerAction = <Config extends Record<string, unknown>>(\n  name: string,\n  newAction: ActionCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  if (registeredActions.has(name)) {\n    return;\n  }\n\n  const newActionFromSpec = async (\n    element: Element,\n    argsAndOptions: string,\n  ) => {\n    const thisConfigValidator = MH.isFunction(configValidator)\n      ? await configValidator(element)\n      : configValidator;\n\n    const args: string[] = [];\n    const config = thisConfigValidator\n      ? await fetchWidgetConfig(argsAndOptions, thisConfigValidator, \",\")\n      : undefined;\n\n    for (const entry of splitOn(argsAndOptions, \",\", true)) {\n      if (entry) {\n        if (!MH.includes(entry, \"=\")) {\n          args.push(entry);\n        }\n      }\n    }\n\n    return newAction(element, args, config);\n  };\n\n  registeredActions.set(name, newActionFromSpec);\n};\n\n/**\n * Returns an {@link Action} registered under the given name and instantiated\n * with the given element and arguments and options parsed from the given string.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given spec is not valid.\n */\nexport const fetchAction = async (\n  element: Element,\n  name: string,\n  argsAndOptions?: string,\n): Promise<Action> => {\n  const newActionFromSpec = registeredActions.get(name);\n  if (!newActionFromSpec) {\n    throw MH.usageError(`Unknown action '${name}'`);\n  }\n\n  return await newActionFromSpec(element, argsAndOptions ?? \"\");\n};\n\n// --------------------\n\nconst registeredActions = MH.newMap<\n  string,\n  (element: Element, spec: string) => Action | Promise<Action>\n>();\n","/**\n * @module Actions\n *\n * @categoryDescription Adding/removing class\n * {@link AddClass} and {@link RemoveClass} add or remove a list of CSS classes\n * to/from the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  addClasses,\n  removeClasses,\n  toggleClasses,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Adds or removes a list of CSS classes to/from the given element.\n *\n * **IMPORTANT:** When constructed, it removes all given classes from the\n * element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"add-class\".\n * - Accepted string arguments: one or more CSS classes\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@add-class: clsA, clsB\"></div>\n * ```\n *\n * @category Adding/removing class\n */\nexport class AddClass implements Action {\n  /**\n   * Adds the classes given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Removes the classes given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles each class given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"add-class\",\n      (element, classNames) => new AddClass(element, ...classNames),\n    );\n  }\n\n  constructor(element: Element, ...classNames: string[]) {\n    const { _add, _remove, _toggle } = getMethods(element, classNames);\n    _remove(); // initial state\n\n    this.do = _add;\n    this.undo = _remove;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Removes or adds a list of CSS classes to/from the given element.\n *\n * **IMPORTANT:** When constructed, it adds all given classes from the element\n * as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"remove-class\".\n * - Accepted string arguments: one or more CSS classes\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@remove-class: clsA, clsB\"></div>\n * ```\n *\n * @category Adding/removing class\n */\nexport class RemoveClass implements Action {\n  /**\n   * Removes the classes given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Adds the classes given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles each class given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"remove-class\",\n      (element, classNames) => new RemoveClass(element, ...classNames),\n    );\n  }\n\n  constructor(element: Element, ...classNames: string[]) {\n    const { _add, _remove, _toggle } = getMethods(element, classNames);\n    _add(); // initial state\n\n    this.do = _remove;\n    this.undo = _add;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element, classNames: string[]) => {\n  return {\n    _add: () => addClasses(element, ...classNames),\n    _remove: () => removeClasses(element, ...classNames),\n    _toggle: () => toggleClasses(element, ...classNames),\n  };\n};\n","/**\n * @module Actions\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  iterateAnimations,\n  resetCssAnimationsNow,\n} from \"@lisn/utils/animations\";\nimport {\n  hasClass,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n} from \"@lisn/utils/css-alter\";\nimport { isPageReady, waitForPageReady } from \"@lisn/utils/dom-events\";\nimport { formatAsString } from \"@lisn/utils/text\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport debug from \"@lisn/debug/debug\";\nimport { LoggerInterface } from \"@lisn/debug/types\";\n\n/**\n * Plays or reverses all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it resets and pauses the animations as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@animate\"></div>\n * ```\n *\n * @category Animation\n */\nexport class Animate implements Action {\n  /**\n   * (Re)plays the animations forwards.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * (Re)plays the animations backwards.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Reverses the animations from its current direction.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate\", (element) => new Animate(element));\n  }\n\n  constructor(element: Element) {\n    const logger = debug\n      ? new debug.Logger({\n          name: `Animate-${formatAsString(element)}`,\n        })\n      : null;\n\n    // initial state is 0% and paused\n    animate(element, GO_FORWARD, logger, true);\n    let isFirst = true;\n\n    this.do = () => animate(element, GO_FORWARD, logger);\n    this.undo = () => animate(element, GO_BACKWARD, logger);\n    this[MC.S_TOGGLE] = () => {\n      const res = animate(element, isFirst ? GO_FORWARD : GO_TOGGLE, logger);\n      isFirst = false;\n      return res;\n    };\n  }\n}\n\n// --------------------\n\ntype AnimateDirection =\n  | typeof GO_FORWARD\n  | typeof GO_BACKWARD\n  | typeof GO_TOGGLE;\n\nconst GO_FORWARD = 0;\nconst GO_BACKWARD = 1;\nconst GO_TOGGLE = 2;\n\nconst animate = (\n  element: Element,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial = false,\n) => {\n  debug: logger?.debug8(\"Animating element\");\n  return iterateAnimations(\n    element,\n    /* istanbul ignore next */ // jsdom doesn't support Web Animations\n    (animation) => setupAnimation(animation, direction, logger, isInitial),\n    (element) => setupAnimationLegacy(element, direction, logger, isInitial),\n    isInitial,\n  );\n};\n\n/* istanbul ignore next */ // jsdom doesn't support Web Animations\nconst setupAnimation = (\n  animation: Animation,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  const pauseTillReady = !isPageReady();\n  const isBackward = animation.playbackRate === -1;\n\n  debug: logger?.debug9(\"Setting up animation\", animation, {\n    direction,\n    isBackward,\n  });\n\n  if (\n    direction === GO_TOGGLE ||\n    (direction === GO_FORWARD && isBackward) ||\n    (direction === GO_BACKWARD && !isBackward)\n  ) {\n    debug: logger?.debug9(\"Reversing animation\", animation.playState);\n    animation.reverse();\n  } else if (animation.playState === \"paused\") {\n    debug: logger?.debug9(\"Playing animation\", animation.playState);\n    animation.play();\n  } else {\n    debug: logger?.debug9(\n      \"Animation has played or is playing already\",\n      animation.playState,\n    );\n  }\n\n  if (isInitial || pauseTillReady) {\n    debug: logger?.debug9(\"Pausing animation\", animation.playState);\n    animation.pause();\n\n    if (!isInitial) {\n      // we were only pausing until ready\n      /* istanbul ignore next */\n      waitForPageReady().then(() => {\n        debug: logger?.debug9(\"Restarting animation\", animation.playState);\n        animation.play();\n      });\n    }\n  }\n\n  // If the element is moved (including if wrapped, such as by the ViewTrigger),\n  // this will cancel CSS animations and replace them with new running ones\n  if (MH.isInstanceOf(animation, CSSAnimation)) {\n    const cancelHandler = (event: AnimationPlaybackEvent) =>\n      onAnimationCancel(event, animation, direction, logger, isInitial);\n\n    animation.addEventListener(MC.S_CANCEL, cancelHandler);\n    animation.addEventListener(\"finish\", () =>\n      animation.removeEventListener(MC.S_CANCEL, cancelHandler),\n    );\n  }\n};\n\n/* istanbul ignore next */ // jsdom doesn't support Web Animations\nconst onAnimationCancel = (\n  event: AnimationPlaybackEvent,\n  animation: CSSAnimation,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  // setup again the new animation\n  debug: logger?.debug9(\"Animation cancelled, re-setting up new one\");\n  const target = MH.targetOf(event);\n  if (!MH.isInstanceOf(target, Animation)) {\n    return;\n  }\n\n  const effect = target.effect;\n  if (!MH.isInstanceOf(effect, KeyframeEffect)) {\n    return;\n  }\n\n  for (const newAnimation of MH.targetOf(effect)?.getAnimations() || []) {\n    if (\n      MH.isInstanceOf(newAnimation, CSSAnimation) &&\n      newAnimation.animationName === animation.animationName\n    ) {\n      setupAnimation(newAnimation, direction, logger, isInitial);\n      break;\n    }\n  }\n};\n\nconst setupAnimationLegacy = (\n  element: Element,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  const isBackward = hasClass(element, MC.PREFIX_ANIMATE_REVERSE);\n  const isPaused = hasClass(element, MC.PREFIX_ANIMATE_PAUSE);\n\n  const pauseTillReady = !isPageReady();\n\n  const goBackwards =\n    direction === GO_BACKWARD || (direction === GO_TOGGLE && !isBackward);\n\n  const doPause = isInitial || pauseTillReady;\n\n  debug: logger?.debug9(\"Setting up legacy animations\", element, {\n    direction,\n    isBackward,\n    isPaused,\n    goBackwards,\n    doPause,\n  });\n\n  if (goBackwards === isBackward && doPause === isPaused) {\n    // nothing to do\n    debug: logger?.debug9(\"No need to reset or pause animation\");\n    return;\n  }\n\n  resetCssAnimationsNow(element);\n\n  removeClassesNow(element, MC.PREFIX_ANIMATE_PAUSE, MC.PREFIX_ANIMATE_REVERSE);\n  addClassesNow(\n    element,\n    ...(goBackwards ? [MC.PREFIX_ANIMATE_REVERSE] : []),\n    ...(doPause ? [MC.PREFIX_ANIMATE_PAUSE] : []),\n  );\n\n  if (!isInitial && pauseTillReady) {\n    waitForPageReady().then(() =>\n      removeClasses(element, MC.PREFIX_ANIMATE_PAUSE),\n    );\n  }\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Animation\n * {@link AnimatePlay} and {@link AnimatePause} resume or pause all animations\n * on the given element. They work with CSS or Web Animations.\n *\n * {@link Actions.Animate | Animate} plays or reverses all animations on the\n * given element. It works with CSS or Web Animations.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  iterateAnimations,\n  resetCssAnimationsNow,\n} from \"@lisn/utils/animations\";\nimport {\n  hasClass,\n  addClassesNow,\n  removeClassesNow,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Resumes or pauses all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it resets and pauses the animations as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate-play\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Play/pause</button>\n * <div data-lisn-on-click=\"@animate-play +target=#btn\"></div>\n * ```\n *\n * @category Animation\n */\nexport class AnimatePlay implements Action {\n  /**\n   * Resumes the animations without resetting them.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Pauses the animations without resetting them.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Resumes the animations if paused, otherwise pauses them.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate-play\", (element) => new AnimatePlay(element));\n  }\n\n  constructor(element: Element) {\n    const { _play, _pause, _toggle } = getMethods(element);\n\n    // initial state is 0% and paused\n    animate(element, PAUSE, true);\n\n    this.do = _play;\n    this.undo = _pause;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Pauses or resumes all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it plays the animations as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate-pause\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Play/pause</button>\n * <div data-lisn-on-click=\"@animate-pause +target=#btn\"></div>\n * ```\n *\n * @category Animation\n */\nexport class AnimatePause implements Action {\n  /**\n   * Pauses the animations without resetting them.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Resumes the animations without resetting them.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Resumes the animations if paused, otherwise pauses them.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate-pause\", (element) => new AnimatePause(element));\n  }\n\n  constructor(element: Element) {\n    const { _play, _pause, _toggle } = getMethods(element);\n\n    // Initial state is playing\n    _play();\n\n    this.do = _pause;\n    this.undo = _play;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\ntype AnimateAction = typeof PLAY | typeof PAUSE | typeof TOGGLE;\n\nconst PLAY = 0;\nconst PAUSE = 1;\nconst TOGGLE = 2;\n\nconst getMethods = (element: Element) => {\n  return {\n    _play: () => animate(element, PLAY),\n    _pause: () => animate(element, PAUSE),\n    _toggle: () => animate(element, TOGGLE),\n  };\n};\n\nconst animate = (\n  element: Element,\n  action: AnimateAction,\n  isInitial = false,\n) => {\n  return iterateAnimations(\n    element,\n    /* istanbul ignore next */ // jsdom doesn't support Web Animations\n    (animation) => {\n      const isPaused = animation.playState === \"paused\";\n      if (action === PLAY || (isPaused && action === TOGGLE)) {\n        animation.play();\n      } else {\n        animation.pause();\n      }\n    },\n    (element) => {\n      if (isInitial) {\n        resetCssAnimationsNow(element);\n      }\n\n      const isPaused = hasClass(element, MC.PREFIX_ANIMATE_PAUSE);\n      if (action === PLAY || (isPaused && action === TOGGLE)) {\n        removeClassesNow(element, MC.PREFIX_ANIMATE_PAUSE);\n      } else {\n        addClassesNow(element, MC.PREFIX_ANIMATE_PAUSE);\n      }\n    },\n    isInitial,\n  );\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Showing/hiding elements\n * {@link Display} and {@link Undisplay} displays or \"undisplays\" (display:\n * none) the given element.\n *\n * {@link Actions.Show | Show} and {@link Actions.Hide | Hide} show or hide the\n * given element with a smooth fading transition.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  displayElement,\n  displayElementNow,\n  undisplayElement,\n  undisplayElementNow,\n  toggleDisplayElement,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Displays or \"undisplays\" (display: none) the given element.\n *\n * **IMPORTANT:** When constructed, it adds `display: none` to the element as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"display\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Display/undisplay</button>\n * <div data-lisn-on-click=\"@display +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Display implements Action {\n  /**\n   * It reverts the element to its original `display` property.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Sets `display: none` on the element.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Displays the element if it's \"undisplayed\", otherwise \"undisplays\" it.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"display\", (element) => new Display(element));\n  }\n\n  constructor(element: Element) {\n    undisplayElementNow(element); // initial state\n\n    const { _display, _undisplay, _toggle } = getMethods(element);\n    this.do = _display;\n    this.undo = _undisplay;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * \"Undisplays\" (display: none) or displays the given element.\n *\n * **IMPORTANT:** When constructed, it removes the `lisn-undisplay` class if\n * present on the element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"undisplay\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Display/undisplay</button>\n * <div data-lisn-on-click=\"@undisplay +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Undisplay implements Action {\n  /**\n   * Sets `display: none` on the element.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * It reverts the element to its original `display` property.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Displays the element if it's \"undisplayed\", otherwise \"undisplays\" it.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"undisplay\", (element) => new Undisplay(element));\n  }\n\n  constructor(element: Element) {\n    displayElementNow(element); // initial state\n\n    const { _display, _undisplay, _toggle } = getMethods(element);\n    this.do = _undisplay;\n    this.undo = _display;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  return {\n    _display: async () => {\n      await displayElement(element); // ignore return val\n    },\n\n    _undisplay: async () => {\n      await undisplayElement(element); // ignore return val\n    },\n\n    _toggle: async () => {\n      await toggleDisplayElement(element); // ignore return val\n    },\n  };\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Searching for reference elements\n * The functions allow you to find elements that match a given string\n * specification.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { logError } from \"@lisn/utils/log\";\n\n/**\n * Get the element that matches the given reference specification.\n *\n * The specification is of the form:\n *\n * ```\n * <FullSpec> ::=\n *     <Relation> \".\" <ClassName>  |\n *     <Relation> [\"-\" <ReferenceName>] |\n *     #<DOM_ID>\n *\n * <Relation> :==\n *     \"next\"  |\n *     \"prev\"  |\n *     \"this\"  |\n *     \"first\" |\n *     \"last\"\n * ```\n *\n * - `<DOM_ID>` is the unique ID of the element\n * - `<ClassName>` is a CSS class on the element\n * - `<ReferenceName>` is the value of the `data-lisn-ref` attribute on the\n *   element you are targeting. If not given, defaults to the value of the\n *   `data-lisn-ref` attribute on `thisElement`.\n *\n * There now follows an explanation of how \"next\", \"prev\", \"this\", \"first\" and\n * \"last\" search the DOM:\n * - \"next\": the tree is search in document order (depth first, then breadth),\n *   so the returned element could be a descendant of `thisElement`\n * - \"prev\": the tree is search in document order (depth first, then breadth),\n *   but excluding ancestors of `thisElement`, so the returned element is\n *   guaranteed to _not_ be an ancestor or descendant of `thisElement`.\n * - \"this\": if the given element itself matches the specification, it is\n *   returned, otherwise the closest ancestor of the given element that matches\n *   the specification\n * - \"first\": the first element matching; the tree is search in document order\n *   (depth first, then breadth).\n * - \"last\": the last element matching; the tree is search in document order\n *   (depth first, then breadth).\n *\n * @category DOM: Searching for reference elements\n *\n * @param thisElement The element to search relative to\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                        If the specification is invalid or if thisElement is\n *                        not given for a specification of \"next\", \"prev\" or \"this\"\n */\nexport const getReferenceElement = (\n  spec: string,\n  thisElement: Element,\n): Element | null => {\n  if (!spec) {\n    return thisElement;\n  }\n\n  if (spec[0] === \"#\") {\n    // element ID\n    const referenceElement = MH.getElementById(spec.slice(1));\n    if (!referenceElement) {\n      return null;\n    }\n    return referenceElement;\n  }\n\n  const relation = [\"next\", \"prev\", \"this\", \"first\", \"last\"].find(\n    (p) => spec.startsWith(`${p}.`) || spec.startsWith(`${p}-`) || spec === p,\n  );\n\n  if (!relation) {\n    throw MH.usageError(`Invalid search specification '${spec}'`);\n  }\n\n  const rest = spec.slice(MH.lengthOf(relation));\n  const matchOp = rest.slice(0, 1);\n  let refOrCls = rest.slice(1);\n\n  let selector: string;\n  if (matchOp === \".\") {\n    selector = matchOp + refOrCls;\n  } else {\n    if (!refOrCls) {\n      refOrCls = getData(thisElement, PREFIX_REF) ?? \"\";\n    }\n\n    if (!refOrCls) {\n      throw MH.usageError(`No reference name in '${spec}'`);\n    }\n\n    selector = `[${DATA_REF}=\"${refOrCls}\"]`;\n  }\n\n  let referenceElement;\n  if (relation === \"first\") {\n    referenceElement = getFirstReferenceElement(selector);\n  } else if (relation === \"last\") {\n    referenceElement = getLastReferenceElement(selector);\n  } else {\n    if (relation === \"this\") {\n      referenceElement = getThisReferenceElement(selector, thisElement);\n    } else if (relation === \"next\") {\n      referenceElement = getNextReferenceElement(selector, thisElement);\n    } else if (relation === \"prev\") {\n      referenceElement = getPrevReferenceElement(selector, thisElement);\n    } else {\n      /* istanbul ignore next */ {\n        logError(MH.bugError(`Unhandled relation case ${relation}`));\n        return null;\n      }\n    }\n  }\n\n  if (!referenceElement) {\n    return null;\n  }\n\n  return referenceElement;\n};\n\n/**\n * Like {@link getReferenceElement} excepts if no element matches the\n * specification if will wait for at most the given time for such an element.\n *\n * @category DOM: Searching for reference elements\n */\nexport const waitForReferenceElement = (\n  spec: string,\n  thisElement: Element,\n  timeout = 200,\n) => waitForElement(() => getReferenceElement(spec, thisElement), timeout);\n\n// ----------------------------------------\n\nconst PREFIX_REF = MH.prefixName(\"ref\");\nconst DATA_REF = MH.prefixData(PREFIX_REF);\n\nconst getAllReferenceElements = (\n  selector: string,\n): NodeListOf<Element> | null => MH.docQuerySelectorAll(selector);\n\nconst getFirstReferenceElement = (selector: string): Element | null =>\n  MH.docQuerySelector(selector);\n\nconst getLastReferenceElement = (selector: string): Element | null => {\n  const allRefs = getAllReferenceElements(selector);\n  return (allRefs && allRefs[MH.lengthOf(allRefs) - 1]) || null;\n};\n\nconst getThisReferenceElement = (\n  selector: string,\n  thisElement: Element,\n): Element | null => thisElement.closest(selector);\n\nconst getNextReferenceElement = (selector: string, thisElement: Element) =>\n  getNextOrPrevReferenceElement(selector, thisElement, false);\n\nconst getPrevReferenceElement = (selector: string, thisElement: Element) =>\n  getNextOrPrevReferenceElement(selector, thisElement, true);\n\nconst getNextOrPrevReferenceElement = (\n  selector: string,\n  thisElement: Element,\n  goBackward: boolean,\n): Element | null => {\n  thisElement = getThisReferenceElement(selector, thisElement) ?? thisElement;\n\n  if (!MH.getDoc().contains(thisElement)) {\n    return null;\n  }\n\n  const allRefs = getAllReferenceElements(selector);\n  if (!allRefs) {\n    return null;\n  }\n\n  const numRefs = MH.lengthOf(allRefs);\n  let refIndex = goBackward ? numRefs - 1 : -1;\n  for (let i = 0; i < numRefs; i++) {\n    const currentIsAfter = MH.isNodeBAfterA(thisElement, allRefs[i]);\n\n    // As soon as we find either the starting element or the first element\n    // that follows it, stop iteration.\n    // - If we're looking for the previous reference, then take the previous\n    //   element in the iteration.\n    // - Otherwise, if the current element in the iteration is the same as the\n    //   starting one, then take either the next element in the iteration.\n    //   - Otherwise, (if the current element follows the starting one, as\n    //     would happen if the starting element was not in the list of matched\n    //     elements, take the current element in the iteration.\n    if (allRefs[i] === thisElement || currentIsAfter) {\n      refIndex = i + (goBackward ? -1 : currentIsAfter ? 0 : 1);\n      break;\n    }\n  }\n\n  return allRefs[refIndex] ?? null;\n};\n","/**\n * ## Specification for the HTML API for triggers\n *\n * The following describes the general syntax when using the HTML API and\n * automatic widgets\n * ({@link Settings.settings.autoWidgets | settings.autoWidgets} is true)\n * specifically for triggers and actions.\n *\n * A trigger specification should be given as a\n * `data-lisn-on-<TriggerName>=\"<TriggerSpecList>\"` attribute.\n * A fallback option of using a CSS class of the form\n * `lisn-on-<TriggerName>--<TriggerSpec>` is also supported but not recommended.\n *\n * The general specification for a trigger is of the form:\n *\n * ```\n * <TriggerSpecList> ::= <TriggerSpec> { \";\" <TriggerSpec> }\n *\n * <TriggerSpec> ::= [ <TriggerArg> { \",\" <TriggerArg> } ]\n *                   \"@\" <ActionSpec> { \"@\" <ActionSpec> }\n *                   { \"+\" <TriggerOption> }\n *\n * <TriggerOption> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n *\n * <ActionSpec> ::= <ActionName> [ \":\" <ActionArgOrOption> { \",\" <ActionArgOrOption> } ]\n *\n * <ActionArgOrOption> ::= <ActionArg> | <OptionName> \"=\" <OptionValue>\n * ```\n *\n * where `<TriggerArg>` is the particular trigger's main argument, which could\n * be required or optional (and not all triggers accept an argument). See each\n * trigger's specification for their arguments and options.\n *\n * Also refer to each action for their accepted arguments and/or options if any.\n *\n * **NOTE:**\n *\n * There can be 0 or more spaces around any of the separator characters.\n *\n * At least one action (with a preceding \"@\" character) is always required.\n *\n * The characters \";\", \",\", \"=\", \"@\", \"+\" and \":\" are reserved separators and\n * cannot be used literally as part of an argument or option value.\n *\n * @module Triggers\n *\n * @categoryDescription Manual run\n * {@link Trigger} is the base trigger class that you can extend when building\n * custom triggers and it also registers a trigger that needs to be run\n * manually (by e.g. the {@link Actions.Run | Run} action).\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString, randId, splitOn } from \"@lisn/utils/text\";\nimport {\n  validateString,\n  validateNumber,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { Action, fetchAction } from \"@lisn/actions/action\";\n\nimport {\n  Widget,\n  WidgetConfigValidator,\n  WidgetConfigValidatorFunc,\n  WidgetConfigAsyncValidatorObject,\n  registerWidget,\n  fetchWidgetConfig,\n} from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link Trigger} is the base trigger class that you can extend when building\n * custom triggers and it also registers a trigger that needs to be run\n * manually (by e.g. the {@link Actions.Run | Run} action).\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * @example\n * Show the element 1000ms after the first time the trigger is run.\n *\n * ```html\n * <div data-lisn-on-run=\"@show +once +delay=1000\"></div>\n * ```\n *\n * @category Manual run\n */\nexport class Trigger extends Widget {\n  /**\n   * \"Do\"es all the {@link Action}s linked to the trigger.\n   */\n  readonly run: () => Promise<void>;\n\n  /**\n   * \"Undo\"es all the {@link Action}s linked to the trigger.\n   */\n  readonly reverse: () => Promise<void>;\n\n  /**\n   * \"Toggle\"s all the {@link Action}s linked to the trigger.\n   */\n  readonly toggle: () => Promise<void>;\n\n  /**\n   * Returns the trigger's actions.\n   */\n  readonly getActions: () => Action[];\n\n  /**\n   * Returns the trigger config.\n   */\n  readonly getConfig: () => TriggerConfig;\n\n  static get(element: Element, id: string): Trigger | null {\n    const instance = super.get(element, id);\n    if (MH.isInstanceOf(instance, Trigger)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerTrigger(\n      \"run\",\n      (element, a, actions, config) => new Trigger(element, actions, config),\n      {},\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config?: TriggerConfig) {\n    super(element, config);\n\n    const logger = debug\n      ? new debug.Logger({\n          name: `Trigger-${formatAsString(element)}`,\n          logAtCreation: { actions, config },\n        })\n      : null;\n\n    const once = config?.once ?? false;\n    const oneWay = config?.oneWay ?? false;\n    const delay = config?.delay ?? 0;\n    const doDelay = config?.doDelay ?? delay;\n    const undoDelay = config?.undoDelay ?? delay;\n\n    let lastCallId: string;\n    // false if next should be do; true if next should be undo.\n    // Used for determining delays only.\n    let toggleState = false;\n\n    const callActions = async (\n      delay: number,\n      callFn: (action: Action) => void,\n      newToggleState: boolean,\n    ) => {\n      if (this.isDisabled()) {\n        return;\n      }\n\n      const myCallId = randId();\n      lastCallId = myCallId;\n      debug: logger?.debug10(\n        `callActions [${myCallId}] (new toggle state ${newToggleState})`,\n        callFn,\n      );\n\n      if (delay) {\n        await waitForDelay(delay);\n        if (lastCallId !== myCallId) {\n          // overriden by subsequent call\n          debug: logger?.debug10(\n            `callActions [${myCallId}]: overriden by ${lastCallId}`,\n          );\n          return;\n        }\n      }\n\n      for (const action of actions) {\n        debug: logger?.debug10(`callActions [${myCallId}]`, action);\n        callFn(action);\n      }\n\n      toggleState = newToggleState;\n\n      if (toggleState && once) {\n        this.destroy();\n      }\n    };\n\n    const run = wrapCallback(() => {\n      callActions(\n        doDelay,\n        (action) => {\n          action.do();\n        },\n        true,\n      ); // don't await\n    });\n\n    const reverse = wrapCallback(() => {\n      if (!oneWay) {\n        callActions(\n          undoDelay,\n          (action) => {\n            action.undo();\n          },\n          false,\n        ); // don't await\n      }\n    });\n\n    const toggle = wrapCallback(() => {\n      callActions(\n        toggleState ? undoDelay : doDelay,\n        (action) => {\n          action[MC.S_TOGGLE]();\n        },\n        !toggleState,\n      ); // don't await\n    });\n\n    // ----------\n\n    this.onDestroy(() => {\n      debug: logger?.debug5(\"Removing callbacks\");\n      MH.remove(run);\n      MH.remove(reverse);\n      MH.remove(toggle);\n    });\n\n    this.run = run.invoke;\n    this.reverse = reverse.invoke;\n    this[MC.S_TOGGLE] = oneWay ? run.invoke : toggle.invoke;\n    this.getActions = () => [...actions]; // copy\n    this.getConfig = () => MH.copyObject(config);\n  }\n}\n\n/**\n * @interface\n */\nexport type TriggerConfig = {\n  /**\n   * An ID for the trigger so that it can be looked up by ID. It has to be\n   * unique for each element, but you can use the same ID on different\n   * elements.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * If true, the trigger will run at most once. This will result in the `run`\n   * or `toggle` methods removing all three of `run`, `reverse` and `toggle`\n   * when called, so that the actions are done at most once.\n   *\n   * @defaultValue false\n   */\n  once?: boolean;\n\n  /**\n   * If true, then the `reverse` method of the trigger will do nothing and the\n   * `toggle` method will always do the actions, i.e. will be equivalent to\n   * `run`.\n   *\n   * @defaultValue false\n   */\n  oneWay?: boolean;\n\n  /**\n   * Delay in milliseconds before doing, undoing or toggling actions.\n   *\n   * @defaultValue 0\n   */\n  delay?: number;\n\n  /**\n   * Delay in milliseconds before doing actions.\n   *\n   * @defaultValue {@link TriggerConfig.delay}\n   */\n  doDelay?: number;\n\n  /**\n   * Delay in milliseconds before undoing actions.\n   *\n   * @defaultValue {@link TriggerConfig.delay}\n   */\n  undoDelay?: number;\n\n  /**\n   * The element to instantiate all actions on this trigger for.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  actOn?: Element;\n};\n\nexport type TriggerCreateFn<Config extends TriggerConfig> = (\n  element: Element,\n  args: string[],\n  actions: Action[],\n  config: Config,\n) => Trigger | Promise<Trigger>;\n\n/**\n * Registers the given trigger as a widget to be automatically configured for\n * all elements that have a trigger specification with the given name.\n *\n * A trigger specification can be given as a\n * `data-lisn-on-<TriggerName>=\"<TriggerSpec> { \";\" <TriggerSpec> }\"` attribute\n * or as one or more `lisn-on-<TriggerName>--<TriggerSpec>` classes.\n *\n * See the top of the {@link Triggers} page for an explanation of `<TriggerSpec>`.\n *\n * Using classes instead of attributes is not recommended and only available as\n * a fallback option.\n *\n * **IMPORTANT:** If a trigger by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param name       The name of the trigger. Should be in kebab-case.\n * @param newTrigger Called for every trigger specification on any element\n *                   that has one or more trigger specifications.\n * @param configValidator\n *                   A validator object, or a function that returns such an\n *                   object, for all options that are specific to the\n *                   trigger. Base options (in {@link TriggerConfig}) will\n *                   be parsed automatically and don't need to be handled by\n *                   `configValidator`.\n *                   If the parameter is a function, it will be called with\n *                   the element on which the trigger is being defined.\n *\n * @see {@link registerWidget}\n */\nexport const registerTrigger = <Config extends TriggerConfig = TriggerConfig>(\n  name: string,\n  newTrigger: TriggerCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  const clsPref = MH.prefixName(`on-${name}`);\n\n  const newWidget = async (element: Element) => {\n    const widgets: Widget[] = [];\n    const baseConfigValidator = newBaseConfigValidator(element);\n    const thisConfigValidator = MH.isFunction(configValidator)\n      ? await configValidator(element)\n      : configValidator;\n\n    const allSpecs = splitOn(\n      getData(element, MH.prefixName(`on-${name}`)) ?? \"\",\n      TRIGGER_SEP,\n      true,\n    );\n\n    for (const cls of MH.classList(element)) {\n      if (cls.startsWith(`${clsPref}--`)) {\n        allSpecs.push(cls.slice(MH.lengthOf(clsPref) + 2));\n      }\n    }\n\n    for (const spec of allSpecs) {\n      const [tmp, configSpec] = splitOn(spec, OPTION_PREF_CHAR, true, 1);\n      const [argSpec, allActionSpecs] = splitOn(tmp, ACTION_PREF_CHAR, true, 1);\n\n      const args = MH.filterBlank(splitOn(argSpec, \",\", true)) || [];\n\n      const config = await fetchWidgetConfig(\n        configSpec,\n        MH.assign(\n          baseConfigValidator,\n          thisConfigValidator,\n        ) as WidgetConfigAsyncValidatorObject<Required<TriggerConfig> & Config>,\n        OPTION_PREF_CHAR,\n      );\n\n      const actionTarget = config.actOn ?? element;\n\n      const actions = [];\n      for (const actionSpec of splitOn(\n        allActionSpecs ?? \"\",\n        ACTION_PREF_CHAR,\n        true,\n      )) {\n        const [name, actionArgsAndOptions] = splitOn(\n          actionSpec,\n          ACTION_ARGS_PREF_CHAR,\n          true,\n          1,\n        );\n\n        try {\n          actions.push(\n            await fetchAction(actionTarget, name, actionArgsAndOptions ?? \"\"),\n          );\n        } catch (err) {\n          if (MH.isInstanceOf(err, LisnUsageError)) {\n            // fetchAction would have logged an error\n            continue;\n          }\n\n          throw err;\n        }\n      }\n\n      widgets.push(await newTrigger(element, args, actions, config));\n    }\n\n    return widgets;\n  };\n\n  registerWidget(name, newWidget, null, {\n    selector: `[class^=\"${clsPref}--\"],[class*=\" ${clsPref}--\"],[data-${clsPref}]`,\n  });\n};\n\n// --------------------\n\nconst TRIGGER_SEP = \";\";\nconst OPTION_PREF_CHAR = \"+\";\nconst ACTION_PREF_CHAR = \"@\";\nconst ACTION_ARGS_PREF_CHAR = \":\";\n\nconst newBaseConfigValidator: WidgetConfigValidatorFunc<TriggerConfig> = (\n  element,\n) => {\n  return {\n    id: validateString,\n    once: validateBoolean,\n    oneWay: validateBoolean,\n    delay: validateNumber,\n    doDelay: validateNumber,\n    undoDelay: validateNumber,\n    actOn: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling triggers\n * {@link Enable} and {@link Disable} enable or disable a list of triggers\n * defined on the given element.\n *\n * {@link Run} runs or reverses a list of triggers defined on the given\n * element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logWarn } from \"@lisn/utils/log\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString } from \"@lisn/utils/text\";\n\nimport { Trigger } from \"@lisn/triggers/trigger\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Enables or disables a list of triggers defined on the given element.\n *\n * **IMPORTANT:** When constructed, it disables all given triggers as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"enable\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button id=\"btn\">Enable/disable</button>\n * <button data-lisn-on-click=\"\n *         @enable=triggerA,triggerB +target=#btn\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-click=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Enable implements Action {\n  /**\n   * Enables the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Disables the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the enabled state on each trigger given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"enable\", (element, ids) => new Enable(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _enable, _disable, _toggleEnable } = getMethods(element, ids);\n    _disable(); // initial state\n\n    this.do = _enable;\n    this.undo = _disable;\n    this[MC.S_TOGGLE] = _toggleEnable;\n  }\n}\n\n/**\n * Disables or enables a list of triggers defined on the given element.\n *\n * **IMPORTANT:** When constructed, it enables all given triggers as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"disable\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button id=\"btn\">Enable/disable</button>\n * <button data-lisn-on-click=\"\n *         @disable=triggerA,triggerB +target=#btn\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-click=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Disable implements Action {\n  /**\n   * Disables the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Enables the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the enabled state on each trigger given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"disable\", (element, ids) => new Disable(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _enable, _disable, _toggleEnable } = getMethods(element, ids);\n    _enable(); // initial state\n\n    this.do = _disable;\n    this.undo = _enable;\n    this[MC.S_TOGGLE] = _toggleEnable;\n  }\n}\n\n/**\n * Runs or reverses a list of triggers defined on the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"run\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button data-lisn-on-click=\"\n *         @run=triggerA,triggerB\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-run=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Run implements Action {\n  /**\n   * Runs the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Reverses the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the triggers with IDs given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"run\", (element, ids) => new Run(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _run, _reverse, _toggle } = getMethods(element, ids);\n\n    this.do = _run;\n    this.undo = _reverse;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element, ids: string[]) => {\n  const triggerPromises = getTriggers(element, ids);\n  const call = async (\n    method:\n      | \"enable\"\n      | \"disable\"\n      | \"toggleEnable\"\n      | \"run\"\n      | \"reverse\"\n      | \"toggle\",\n  ) => {\n    const triggers = await triggerPromises;\n    for (const trigger of triggers) {\n      trigger[method]();\n    }\n  };\n\n  return {\n    _enable: () => call(\"enable\"),\n    _disable: () => call(\"disable\"),\n    _toggleEnable: () => call(\"toggleEnable\"),\n    _run: () => call(\"run\"),\n    _reverse: () => call(\"reverse\"),\n    _toggle: () => call(MC.S_TOGGLE),\n  };\n};\n\nconst getTriggers = async (element: Element, ids: string[]) => {\n  const triggers: Trigger[] = [];\n  if (!MH.lengthOf(ids)) {\n    logWarn(\"At least 1 ID is required for enable action\");\n    return triggers;\n  }\n\n  for (const id of ids) {\n    let trigger = Trigger.get(element, id);\n    if (!trigger) {\n      await waitForDelay(0); // in case it's being processed now\n      trigger = Trigger.get(element, id);\n\n      if (!trigger) {\n        logWarn(\n          `No trigger with ID ${id} for element ${formatAsString(element)}`,\n        );\n        continue;\n      }\n    }\n\n    triggers.push(trigger);\n  }\n\n  return triggers;\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Scrolling\n * {@link ScrollTo} scrolls to the given element or to the previous scroll\n * position.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { CoordinateOffset } from \"@lisn/globals/types\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport { validateNumber } from \"@lisn/utils/validation\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * Scrolls to the given element or to the previous scroll position.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"scroll-to\".\n * - Accepted string arguments: none\n * - Accepted options:\n *   - `offsetX`: A number.\n *   - `offsetY`: A number.\n *   - `duration`: A number.\n *   - `scrollable`: A string element specification for an element (see\n *     {@link Utils.getReferenceElement | getReferenceElement}). Note that,\n *     unless it's a DOM ID, the specification is parsed relative to the\n *     element being acted on and not the element the trigger is defined on (in\n *     case you've used the `act-on` trigger option).\n *\n * **NOTE:** Do not place a + sign in front of the offset values (just omit it\n * if you want a positive offset). Otherwise it will be interpreted as a\n * trigger option.\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position +10px down:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to: offsetY=10 +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position 10px _down_ and 50px _left_, with a duration of 200ms:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to: offsetY=10, offsetX=-50, duration=200 +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the closest parent element with\n * class `scrollable` to the element's position:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div class=\"scrollable\">\n *   <div data-lisn-on-click=\"@scroll-to: scrollable=this.scrollable +target=#btn\"></div>\n * </div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-ref=\"scrollable\">\n *   <div data-lisn-on-click=\"@scroll-to: scrollable=this-scrollable +target=#btn\"></div>\n * </div>\n * ```\n *\n * @category Scrolling\n */\nexport class ScrollTo implements Action {\n  /**\n   * Scrolls the main scrolling element to the element's position.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Scrolls the main scrolling element to the last scroll position before the\n   * action was {@link do}ne. If the action had never been done, does nothing.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Scrolls the main scrolling element to the element's position, if it's not\n   * already there, or otherwise scrolls the main scrolling element to the\n   * previous saved scroll position.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"scroll-to\",\n      (element, args, config) => {\n        const offset = config\n          ? {\n              left: config.offsetX,\n              top: config.offsetY,\n            }\n          : undefined;\n\n        return new ScrollTo(element, {\n          offset,\n          duration: config?.duration,\n          scrollable: config?.scrollable,\n        });\n      },\n      newConfigValidator,\n    );\n  }\n\n  constructor(element: Element, config?: ScrollToConfig) {\n    const watcher = ScrollWatcher.reuse();\n    const { scrollable } = config ?? {};\n    let prevScrollTop = -1,\n      prevScrollLeft = -1;\n\n    this.do = async () => {\n      const current = await watcher.fetchCurrentScroll(scrollable);\n      prevScrollTop = current[MC.S_SCROLL_TOP];\n      prevScrollLeft = current[MC.S_SCROLL_LEFT];\n\n      const action = await watcher.scrollTo(element, config);\n      await action?.waitFor();\n    };\n\n    this.undo = async () => {\n      if (prevScrollTop !== -1) {\n        const action = await watcher.scrollTo(\n          {\n            top: prevScrollTop,\n            left: prevScrollLeft,\n          },\n          omitKeys(config ?? {}, { offset: true }), // no offset when undoing\n        );\n        await action?.waitFor();\n      }\n    };\n\n    this[MC.S_TOGGLE] = async () => {\n      const start = await watcher.fetchCurrentScroll(scrollable);\n\n      const canReverse = prevScrollTop !== -1;\n      let hasReversed = false;\n\n      // Try to scroll to the element, but if we're already close to it, then\n      // reverse to previous position if any.\n      const altTarget = {\n        top: () => {\n          hasReversed = true; // detect if we have reversed\n          return prevScrollTop;\n        },\n        left: prevScrollLeft,\n      };\n\n      const action = await watcher.scrollTo(\n        element,\n        MH.merge(\n          config,\n          canReverse\n            ? { altTarget } // no altOffset when reversing\n            : {},\n        ),\n      );\n      await action?.waitFor();\n\n      if (!hasReversed) {\n        // We've scrolled to the element, so save the starting position as the\n        // previous one.\n        prevScrollTop = start[MC.S_SCROLL_TOP];\n        prevScrollLeft = start[MC.S_SCROLL_LEFT];\n      }\n    };\n  }\n}\n\n/**\n * @interface\n * @category Scrolling\n */\nexport type ScrollToConfig = {\n  /**\n   * See {@link Utils.ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined // none\n   */\n  offset?: CoordinateOffset;\n\n  /**\n   * The duration in milliseconds of the scroll animation.\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  duration?: number;\n\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  scrollable?: Element;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<{\n  offsetX: number;\n  offsetY: number;\n  duration: number | undefined;\n  scrollable?: Element;\n}> = (element) => {\n  return {\n    offsetX: (key, value) => validateNumber(key, value) ?? 0,\n    offsetY: (key, value) => validateNumber(key, value) ?? 0,\n    duration: (key, value) => validateNumber(key, value),\n    scrollable: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Setting/deleting attributes\n * {@link SetAttribute} sets or deletes an attribute on the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { camelToKebabCase } from \"@lisn/utils/text\";\nimport { validateString } from \"@lisn/utils/validation\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport { WidgetConfigValidatorObject } from \"@lisn/widgets/widget\";\n\n/**\n * Either sets or deletes an attribute, or toggles between two values of an\n * attribute, on the given element.\n *\n * **IMPORTANT:** When constructed, it sets all given attributes on the\n * element to their _OFF_ (undone) state as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"set-attribute\".\n * - Accepted string arguments: name of attribute\n * - Accepted options:\n *   - `on`: A string value for the attribute. Can be blank. Omit this option\n *     in order to have the attribute deleted when the action is done.\n *   - `off`: A string value for the attribute. Can be blank. Omit this option\n *     in order to have the attribute deleted when the action is undone.\n *\n * Note that with the HTML API you can only specify one attribute per action.\n * But of course you can add the same action multiple times per trigger. See\n * examples below.\n *\n * @example\n * This is an overview of the various combinations that you can use to set an\n * attribute to a non-empty value, a blank value or delete the attribute when\n * the action is either done or undone:\n *\n * | Specification                         | Value when done | Value when undone |\n * | ------------------------------------- | --------------- | ----------------- |\n * | @set-attr: attr, on=onVal, off=offVal | \"onVal\"         | \"offVal\"          |\n * | @set-attr: attr, on=value             | \"value\"         | _deleted_         |\n * | @set-attr: attr, off=value            | _deleted_       | \"value\"           |\n * | @set-attr: attr, on=                  | \"\"              | _deleted_         |\n * | @set-attr: attr, off=                 | _deleted_       | \"\"                |\n * | @set-attr: attr, on=value, off=       | \"value\"         | \"\"                |\n * | @set-attr: attr, on= , off=value      | \"\"              | \"value\"           |\n *\n * @example\n * This will set attribute `attrA` to `valueA-ON` and `attrB` to `valueB-ON`\n * when the element enters the viewport and set `attrA` to `valueA-OFF` and\n * `attrB` to `valueB-OFF` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attrA, on=valueA-ON, off=valueA-OFF\n *                         @set-attribute: attrB, on=valueB-ON, off=valueB-OFF\"\n * ></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to `value` when the element enters the\n * viewport and _delete_ the attribute when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=value\"></div>\n * ```\n *\n * @example\n * This will _delete_ attribute `attr` when the element enters the viewport and\n * set it to `value` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, off=value\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to a blank value when the element enters the\n * viewport and _delete_ the attribute when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=\"></div>\n * ```\n *\n * @example\n * This will _delete_ attribute `attr` when the element enters the viewport and\n * set it to a blank value when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, off=\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to `value` when the element enters the\n * viewport and set it to a blank value when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=value, off=\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to a blank value when the element enters the\n * viewport and set it to `value` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=, off=value\"></div>\n * ```\n *\n * @category Setting/deleting attributes\n */\nexport class SetAttribute implements Action {\n  /**\n   * Sets the attribute to its \"ON\" value, or deletes it if that value is null.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Sets the attribute to its \"OFF\" value, or deletes it if that value is null.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the attribute from its \"ON\" to \"OFF\" value or vice versa.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"set-attribute\",\n      (element, args, config) => {\n        return new SetAttribute(element, { [args[0]]: config ?? {} });\n      },\n      configValidator,\n    );\n  }\n\n  constructor(element: Element, attributes: Attributes) {\n    if (!attributes) {\n      throw MH.usageError(\"Attributes are required\");\n    }\n\n    let isOn = false;\n\n    const setAttrs = async (on: boolean) => {\n      isOn = on;\n\n      await waitForMutateTime();\n\n      for (const attr in attributes) {\n        const value = attributes[attr][on ? \"on\" : \"off\"];\n        const attrName = camelToKebabCase(attr);\n\n        if (MH.isNullish(value)) {\n          MH.delAttr(element, attrName);\n        } else {\n          MH.setAttr(element, attrName, value);\n        }\n      }\n    };\n\n    this.do = () => setAttrs(true);\n\n    this.undo = () => setAttrs(false);\n\n    this[MC.S_TOGGLE] = () => setAttrs(!isOn);\n\n    this.undo(); // initial state\n  }\n}\n\n/**\n * Each key in the object is an attribute name. The `on` value is set when the\n * action is done and the `off` value is set when the action is undone. To set\n * the attribute to an empty value, use an empty string. To _delete_ the\n * attribute, use `null` as the value or simply omit the relevant `on` or `off`\n * key.\n *\n * **IMPORTANT:** Attribute names in camelCase are converted to kebab-case.\n * E.g. `dataFooBar` will translate to `data-foo-bar`.\n *\n * @category Setting/deleting attributes\n */\nexport type Attributes = Record<\n  string,\n  { on?: string | null; off?: string | null }\n>;\n\n// --------------------\n\nconst configValidator: WidgetConfigValidatorObject<Attributes[string]> = {\n  on: validateString,\n  off: validateString,\n};\n","/**\n * @module Actions\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  showElement,\n  hideElement,\n  toggleShowElement,\n  disableInitialTransition,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Shows or hides the given element with a smooth fading transition.\n *\n * **IMPORTANT:** When constructed, it will hide the element as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"show\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Show/hide</button>\n * <div data-lisn-on-click=\"@show +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Show implements Action {\n  /**\n   * Shows the element with a smooth fade in transition.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Hides the element with a smooth fade out transition.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Shows the element if it is hidden, hides it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"show\", (element) => new Show(element));\n  }\n\n  constructor(element: Element) {\n    disableInitialTransition(element);\n    hideElement(element); // initial state\n\n    const { _show, _hide, _toggle } = getMethods(element);\n    this.do = _show;\n    this.undo = _hide;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Hides or shows the given element with a smooth fading transition.\n *\n * **IMPORTANT:** When constructed, it will remove any `lisn-hide` class from\n * the element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"hide\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Show/hide</button>\n * <div data-lisn-on-click=\"@hide +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Hide implements Action {\n  /**\n   * Hides the element with a smooth fade out transition.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Shows the element with a smooth fade in transition.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Shows the element if it is hidden, hides it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"hide\", (element) => new Hide(element));\n  }\n\n  constructor(element: Element) {\n    disableInitialTransition(element);\n    showElement(element); // initial state\n\n    const { _show, _hide, _toggle } = getMethods(element);\n    this.do = _hide;\n    this.undo = _show;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  return {\n    _show: async () => {\n      await showElement(element); // ignore return val\n    },\n\n    _hide: async () => {\n      await hideElement(element); // ignore return val\n    },\n\n    _toggle: async () => {\n      await toggleShowElement(element); // ignore return val\n    },\n  };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Position } from \"@lisn/globals/types\";\n\n/**\n * @category Validation\n */\nexport const isValidPosition = (position: string): position is Position =>\n  MH.includes(POSITIONS as readonly string[], position);\n\n/**\n * @category Validation\n */\nexport const isValidTwoFoldPosition = (\n  position: string,\n): position is `${Position}-${Position}` =>\n  position.match(TWO_FOLD_POSITION_REGEX) !== null;\n\n/**\n * @ignore\n * @internal\n */\nexport const POSITIONS = [\n  MC.S_TOP,\n  MC.S_BOTTOM,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n// --------------------\n\nconst POSITIONS_OPTIONS_STR = \"(\" + POSITIONS.join(\"|\") + \")\";\n\nconst TWO_FOLD_POSITION_REGEX = RegExp(\n  `^${POSITIONS_OPTIONS_STR}-${POSITIONS_OPTIONS_STR}$`,\n);\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { XYDirection, Position } from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  hasClass,\n  addClasses,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n  getData,\n  getBooleanData,\n  setData,\n  setDataNow,\n  setBooleanData,\n  setBooleanDataNow,\n  unsetBooleanData,\n  unsetBooleanDataNow,\n  delData,\n  delDataNow,\n  setHasModal,\n  delHasModal,\n  getStyleProp,\n  setStyleProp,\n  delStyleProp,\n  getComputedStyleProp,\n  getMaxTransitionDuration,\n} from \"@lisn/utils/css-alter\";\nimport {\n  wrapElement,\n  wrapElementNow,\n  moveElement,\n  moveElementNow,\n  replaceElementNow,\n  getOrAssignID,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { keyWithMaxVal } from \"@lisn/utils/math\";\nimport { toBoolean, toArrayIfSingle } from \"@lisn/utils/misc\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { isValidPosition, isValidTwoFoldPosition } from \"@lisn/utils/position\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport {\n  validateStrList,\n  validateBoolean,\n  validateBooleanOrString,\n  validateString,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\nimport { ViewWatcher, ViewData } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetHandler,\n  WidgetCallback,\n  WidgetConfigValidator,\n  WidgetConfigValidatorObject,\n  registerWidget,\n  getWidgetConfig,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/* ********************\n * Base Openable\n * ********************/\n\nexport type OpenableCreateFn<Config extends Record<string, unknown>> = (\n  element: HTMLElement,\n  config?: Config,\n) => Openable;\n\n/**\n * Enables automatic setting up of an {@link Openable} widget from an\n * elements matching its content element selector (`[data-lisn-<name>]` or\n * `.lisn-<name>`).\n *\n * The name you specify here should generally be the same name you pass in\n * {@link OpenableProperties.name | options.name} to the\n * {@link Openable.constructor} but it does not need to be the same.\n *\n * @param name            The name of the openable. Should be in kebab-case.\n * @param newOpenable     Called for every element matching the selector.\n * @param configValidator A validator object, or a function that returns such\n *                        an object, for all options supported by the widget.\n *\n * @see {@link registerWidget}\n */\nexport const registerOpenable = <Config extends Record<string, unknown>>(\n  name: string,\n  newOpenable: OpenableCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  registerWidget(\n    name,\n    (element, config) => {\n      if (MH.isHTMLElement(element)) {\n        if (!Openable.get(element)) {\n          return newOpenable(element, config);\n        }\n      } else {\n        logError(MH.usageError(\"Openable widget supports only HTMLElement\"));\n      }\n\n      return null;\n    },\n    configValidator,\n  );\n};\n\n/**\n * {@link Openable} is an abstract base class. You should not directly\n * instantiate it but can inherit it to create your own custom openable widget.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * @see {@link registerOpenable}\n */\nexport abstract class Openable extends Widget {\n  /**\n   * Opens the widget unless it is disabled.\n   */\n  readonly open: () => Promise<void>;\n\n  /**\n   * Closes the widget.\n   */\n  readonly close: () => Promise<void>;\n\n  /**\n   * Closes the widget if it is open, or opens it if it is closed (unless\n   * it is disabled).\n   */\n  readonly toggle: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is open.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onOpen: (handler: WidgetHandler) => void;\n\n  /**\n   * The given handler will be called when the widget is closed.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onClose: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is currently open.\n   */\n  readonly isOpen: () => boolean;\n\n  /**\n   * Returns the root element created by us that wraps the original content\n   * element passed to the constructor. It is located in the content element's\n   * original place.\n   */\n  readonly getRoot: () => HTMLElement;\n\n  /**\n   * Returns the element that was found to be the container. It is the closest\n   * ancestor that has a `lisn-collapsible-container` class, or if no such\n   * ancestor then the immediate parent of the content element.\n   */\n  readonly getContainer: () => HTMLElement | null;\n\n  /**\n   * Returns the trigger elements, if any. Note that these may be wrappers\n   * around the original triggers passed.\n   */\n  readonly getTriggers: () => Element[];\n\n  /**\n   * Returns the trigger elements along with their configuration.\n   */\n  readonly getTriggerConfigs: () => Map<Element, OpenableTriggerConfig>;\n\n  /**\n   * Retrieve an existing widget by its content element or any of its triggers.\n   *\n   * If the element is already part of a configured {@link Openable} widget,\n   * the widget instance is returned. Otherwise `null`.\n   *\n   * Note that trigger elements are not guaranteed to be unique among openable\n   * widgets as the same element can be a trigger for multiple such widgets. If\n   * the element you pass is a trigger, then the last openable widget that was\n   * created for it will be returned.\n   */\n  static get(element: Element): Openable | null {\n    // We manage the instances here since we also map associated elements and\n    // not just the main content element that created the widget.\n    return instances.get(element) ?? null;\n  }\n\n  constructor(element: HTMLElement, properties: OpenableProperties) {\n    super(element);\n\n    const { isModal, isOffcanvas } = properties;\n\n    const openCallbacks = MH.newSet<WidgetCallback>();\n    const closeCallbacks = MH.newSet<WidgetCallback>();\n\n    let isOpen = false;\n\n    // ----------\n\n    const open = async () => {\n      if (this.isDisabled() || isOpen) {\n        return;\n      }\n\n      isOpen = true;\n\n      for (const callback of openCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        setHasModal();\n      }\n\n      await setBooleanData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const close = async () => {\n      if (this.isDisabled() || !isOpen) {\n        return;\n      }\n\n      isOpen = false;\n\n      for (const callback of closeCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        delHasModal();\n      }\n\n      if (isOffcanvas) {\n        scrollWrapperToTop(); // no need to await\n      }\n\n      await unsetBooleanData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const scrollWrapperToTop = async () => {\n      // Wait a bit before scrolling since the hiding of the element is animated.\n      // Assume no more than 1s animation time.\n      await waitForDelay(1000);\n      await waitForMeasureTime();\n      MH.elScrollTo(outerWrapper, {\n        top: 0,\n        left: 0,\n      });\n    };\n\n    // --------------------\n\n    this.open = open;\n    this.close = close;\n    this[MC.S_TOGGLE] = () => (isOpen ? close() : open());\n    this.onOpen = (handler) => openCallbacks.add(wrapCallback(handler));\n    this.onClose = (handler) => closeCallbacks.add(wrapCallback(handler));\n    this.isOpen = () => isOpen;\n    this.getRoot = () => root;\n    this.getContainer = () => container;\n    this.getTriggers = () => [...triggers.keys()];\n    this.getTriggerConfigs = () => MH.newMap([...triggers.entries()]);\n\n    this.onDestroy(() => {\n      openCallbacks.clear();\n      closeCallbacks.clear();\n    });\n\n    const { root, container, triggers, outerWrapper } = setupElements(\n      this,\n      element,\n      properties,\n    );\n  }\n}\n\n/**\n * Per-trigger based configuration. Can either be given as an object as the\n * value of the {@link OpenableProperties.triggers} map, or it can be set as a\n * string configuration in the `data-lisn-<name>-trigger` data attribute. See\n * {@link getWidgetConfig} for the syntax.\n *\n * @example\n * ```html\n * <div data-lisn-collapsible-trigger=\"auto-close\n *                                     | icon=right\n *                                     | icon-closed=arrow-down\n *                                     | icon-open=x\"\n * ></div>\n * ```\n *\n * @interface\n */\nexport type OpenableTriggerConfig = {\n  /**\n   * The DOM ID to set on the trigger. Will result in the trigger element, which\n   * could be a wrapper around the original element (as in the case of {@link\n   * Collapsible} you passed, getting this ID.\n   *\n   * **IMPORTANT:** If the trigger element already has an ID and is not being\n   * wrapped, then this will override the ID and it _won't_ be restored on destroy.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) for the trigger. Will result in the trigger element, which\n   * could be a wrapper around the original element you passed, getting these\n   * classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Override the widget's {@link OpenableProperties.autoClose} for this trigger.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  autoClose?: boolean;\n\n  /**\n   * Open the openable when this trigger is hovered.\n   *\n   * If the device is touch and {@link OpenableProperties.autoClose} is enabled,\n   * the widget will be closed shortly after the pointer leaves both the\n   * trigger and the root element.\n   *\n   * @defaultValue false\n   */\n  hover?: boolean;\n\n  /**\n   * Whether to prevent default click action.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.icon} for this trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  icon?: false | Position;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconClosed} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconOpen} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/**\n * @interface\n */\nexport type OpenableProperties = {\n  /**\n   * The name of the _type_ of the openable. Will set the class prefix to\n   * `lisn-<name>`.\n   */\n  name: string;\n\n  /**\n   * The DOM ID to set on the openable. Will result in the top-level root\n   * element that's created by us getting this ID.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names to set on the openable. Will result\n   * in the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Whether to auto-close the widget on clicking outside the content element\n   * or on pressing Escape key. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * This is true by default for {@link Popup}, {@link Modal} and {@link Offcanvas}.\n   */\n  autoClose: boolean;\n\n  /**\n   * If true, then while the widget is open, the `document.body` will be set to\n   * `overflow: hidden`.\n   *\n   * This is true for {@link Modal}.\n   */\n  isModal: boolean;\n\n  /**\n   * If true, then the content element is assumed to be possibly scrollable and\n   * will be scrolled back to its top after the widget is closed.\n   *\n   * This is true for {@link Modal} and {@link Offcanvas}.\n   */\n  isOffcanvas: boolean;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * This is true by default for {@link Modal} and {@link Offcanvas}.\n   */\n  closeButton: boolean;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way (`<name>` is what is given as\n   * {@link name}):\n   * 1. If the content element has a `data-lisn-<name>-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-<name>-trigger` class or `data-lisn-<name>-trigger` attribute\n   *    and the same `data-lisn-<name>-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-<name>-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-<name>-trigger`\n   *    class or `data-lisn-<name>-trigger` attribute and that do _not_ have a\n   *    `data-lisn-<name>-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Whether to wrap each trigger in a new element.\n   *\n   * @defaultValue false\n   */\n  wrapTriggers?: boolean;\n\n  /**\n   * Hook to run once the widget is fully setup (which happens asynchronously).\n   *\n   * It is called during \"mutate time\". See {@link waitForMutateTime}.\n   *\n   * @defaultValue undefined\n   */\n  onSetup?: () => void;\n};\n\n/* ********************\n * Collapsible\n * ********************/\n\n/**\n * Configures the given element as a {@link Collapsible} widget.\n *\n * The Collapsible widget sets up the given element to be collapsed and\n * expanded upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link CollapsibleConfig.triggers | triggers}.\n *\n * **NOTE:** The Collapsible widget always wraps each trigger element in\n * another element in order to allow positioning the icon, if any.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-collapsible__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-reverse`: `\"true\"` or `\"false\"`\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-collapsible` class or `data-lisn-collapsible` attribute set on the\n *   element that holds the content of the collapsible\n * - `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     collapsible on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close\"` in order to have this trigger\n *     open the collapsible on hover but and override\n *     {@link CollapsibleConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-collapsible-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and the same `data-lisn-collapsible-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple collapsible with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-collapsible-trigger\">Expand</div>\n *   <div class=\"lisn-collapsible\">\n *     Some long content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a collapsible that is partially visible when collapsed, and\n * where the trigger is in a different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all other possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek=50px\n *                               | horizontal=false\n *                               | reverse=false\n *                               | auto-close\n *                               | icon=right\n *                               | icon-closed=arrow-up\"\n *                               | icon-open=arrow-down\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n */\nexport class Collapsible extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_COLLAPSIBLE,\n      (el, config) => new Collapsible(el, config),\n      collapsibleConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: CollapsibleConfig) {\n    const isHorizontal = config?.horizontal;\n    const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n\n    const onSetup = () => {\n      // The triggers here are wrappers around the original which will be\n      // replaced by the original on destroy, so no need to clean up this.\n      for (const [\n        trigger,\n        triggerConfig,\n      ] of this.getTriggerConfigs().entries()) {\n        insertCollapsibleIcon(trigger, triggerConfig, this, config);\n        setDataNow(trigger, MC.PREFIX_ORIENTATION, orientation);\n      }\n    };\n\n    super(element, {\n      name: WIDGET_NAME_COLLAPSIBLE,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? false,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: false,\n      triggers: config?.triggers,\n      wrapTriggers: true,\n      onSetup,\n    });\n\n    const root = this.getRoot();\n    const wrapper = MH.childrenOf(root)[0];\n\n    setData(root, MC.PREFIX_ORIENTATION, orientation);\n    setBooleanData(root, PREFIX_REVERSE, config?.reverse ?? false);\n\n    // -------------------- Transitions\n    disableInitialTransition(element, 100);\n    disableInitialTransition(root, 100);\n    disableInitialTransition(wrapper, 100);\n\n    let disableTransitionTimer: ReturnType<typeof setTimeout> | null = null;\n    const tempEnableTransition = async () => {\n      await removeClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n      await removeClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n\n      if (disableTransitionTimer) {\n        MH.clearTimer(disableTransitionTimer);\n      }\n\n      const transitionDuration = await getMaxTransitionDuration(root);\n      disableTransitionTimer = MH.setTimer(() => {\n        if (this.isOpen()) {\n          addClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n          addClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n          disableTransitionTimer = null;\n        }\n      }, transitionDuration);\n    };\n\n    // Disable transitions except during open/close, so that resizing the\n    // window for example doesn't result in lagging width/height transition.\n    this.onOpen(tempEnableTransition);\n    this.onClose(tempEnableTransition);\n\n    // -------------------- Peek\n    const peek = config?.peek;\n    if (peek) {\n      (async () => {\n        let peekSize: string | null = null;\n        if (MH.isString(peek)) {\n          peekSize = peek;\n        } else {\n          peekSize = await getStyleProp(element, VAR_PEEK_SIZE);\n        }\n\n        addClasses(root, PREFIX_PEEK);\n        if (peekSize) {\n          setStyleProp(root, VAR_PEEK_SIZE, peekSize);\n        }\n      })();\n    }\n\n    // -------------------- Width in horizontal mode\n    if (isHorizontal) {\n      const updateWidth = async () => {\n        const width = await getComputedStyleProp(root, MC.S_WIDTH);\n        await setStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH, width);\n      };\n\n      MH.setTimer(updateWidth);\n\n      // Save its current width so that if it contains text, it does not\n      // \"collapse\" and end up super tall.\n      this.onClose(updateWidth);\n\n      this.onOpen(async () => {\n        // Update the content width before opening.\n        await updateWidth();\n\n        // Delete the fixed width property soon after opening to allow it to\n        // resize again while it's open.\n        waitForDelay(2000).then(() => {\n          if (this.isOpen()) {\n            delStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH);\n          }\n        });\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type CollapsibleConfig = {\n  /**\n   * The DOM ID to set on the collapsible. Will result in the top-level root\n   * element that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the\n   * `data-lisn-collapsible-content-id` attribute used to link triggers to the\n   * collapsible.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names to set on the collapsible. Will\n   * result in the top-level root element that's created by us getting these\n   * classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-collapsible-content-id`\n   *    attribute, then it must be a unique (for the current page) ID. In this\n   *    case, the trigger elements will be any element in the document that\n   *    has a `lisn-collapsible-trigger` class or\n   *    `data-lisn-collapsible-trigger` attribute and the same\n   *    `data-lisn-collapsible-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n   *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Open sideways (to the right) instead of downwards (default).\n   *\n   * **IMPORTANT:** In horizontal mode the width of the content element should\n   * not be set (or be `auto`), but you can use `min-width` or `max-width` in\n   * your CSS if needed.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Open to the left if horizontal or upwards if vertical.\n   *\n   * @defaultValue false\n   */\n  reverse?: boolean;\n\n  /**\n   * If not false, part of the content will be visible when the collapsible is\n   * closed. The value can be any valid CSS width specification.\n   *\n   * If you set this to `true`, then the size of the peek window will be\n   * dictated by CSS. By default the size is 100px, but you can change this by\n   * setting `--lisn-peek-size` CSS property on the content element or any of\n   * its ancestors.\n   *\n   * Otherwise, if the value is a string, it must be a CSS length including units.\n   *\n   * @defaultValue false\n   */\n  peek?: boolean | string;\n\n  /**\n   * Automatically close the collapsible when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue false\n   */\n  autoClose?: boolean;\n\n  /**\n   * Add an icon to each trigger.\n   *\n   * If set to something other than `false`, then by default the icon in the\n   * closed state is a plus (+) and in the open state it's a minus (-), but\n   * this can be configured with {@link iconClosed} and {@link iconOpen}.\n   *\n   * @defaultValue false\n   */\n  icon?: false | Position;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the closed state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"plus\"\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the open state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"minus\";\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/* ********************\n * Popup\n * ********************/\n\n/**\n * Configures the given element as a {@link Popup} widget.\n *\n * The Popup widget sets up the given element to be hidden and open in a\n * floating popup upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link PopupConfig.triggers | triggers}.\n *\n * **IMPORTANT:** The popup is positioned absolutely in its container and the\n * position is relative to the container. The container gets `width:\n * fit-content` by default but you can override this in your CSS. The popup\n * also gets a configurable `min-width` set.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-popup__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position (top, bottom, left, top-left, etc)\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-popup` class or `data-lisn-popup` attribute set on the element that\n *   holds the content of the popup\n * - `lisn-popup-trigger` class or `data-lisn-popup-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     popup on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the popup on hover but and override\n *     {@link PopupConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-popup-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and the\n *    same `data-lisn-popup-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-popup-trigger` class or\n *    `data-lisn-popup-trigger` attribute and that do _not_ have a\n *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple popup with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-popup-trigger\">Open</div>\n *   <div class=\"lisn-popup\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a popup that has a close button, and where the trigger is in a\n * different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button | position=bottom | auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n * ```\n */\nexport class Popup extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_POPUP,\n      (el, config) => new Popup(el, config),\n      popupConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: PopupConfig) {\n    super(element, {\n      name: WIDGET_NAME_POPUP,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: config?.closeButton ?? false,\n      triggers: config?.triggers,\n    });\n\n    const root = this.getRoot();\n    const container = this.getContainer();\n\n    const position = config?.position || S_AUTO;\n    if (position !== S_AUTO) {\n      setData(root, MC.PREFIX_PLACE, position);\n    }\n\n    if (container && position === S_AUTO) {\n      // Automatic position\n      this.onOpen(async () => {\n        const [contentSize, containerView] = await MH.promiseAll([\n          SizeWatcher.reuse().fetchCurrentSize(element),\n          ViewWatcher.reuse().fetchCurrentView(container),\n        ]);\n\n        const placement = await fetchPopupPlacement(contentSize, containerView);\n        if (placement) {\n          await setData(root, MC.PREFIX_PLACE, placement);\n        }\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type PopupConfig = {\n  /**\n   * The DOM ID to set on the popup. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-popup-content-id`\n   * attribute used to link triggers to the popup.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names to set on the popup. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-popup-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and\n   *    the same `data-lisn-popup-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-popup-trigger`\n   *    class or `data-lisn-popup-trigger` attribute and that do _not_ have a\n   *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue false\n   */\n  closeButton?: boolean;\n\n  /**\n   * Specify the popup position _relative to its container_. Supported\n   * positions include `\"top\"`, `\"bottom\"`, `\"left\"`, `\"right\" `(which result\n   * on the popup being placed on top, bottom, etc, but center-aligned), or\n   * `\"top-left\"`, `\"left-top\"`, etc, as well as `\"auto\"`. If set to `\"auto\"`,\n   * then popup position will be based on the container position within the\n   * viewport at the time it's open.\n   *\n   * @defaultValue \"auto\"\n   */\n  position?: Position | `${Position}-${Position}` | \"auto\";\n\n  /**\n   * Automatically close the popup when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Modal\n * ********************/\n\n/**\n * Configures the given element as a {@link Modal} widget.\n *\n * The Modal widget sets up the given element to be hidden and open in a fixed\n * full-screen modal popup upon activation. Activation can be done manually by\n * calling {@link open} or when clicking on any of the given\n * {@link ModalConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-modal__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-modal` class or `data-lisn-modal` attribute set on the element that\n *   holds the content of the modal\n * - `lisn-modal-trigger` class or `data-lisn-modal-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     modal on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the modal on hover but and override\n *     {@link ModalConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-modal-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and the\n *    same `data-lisn-modal-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-modal-trigger` class or\n *    `data-lisn-modal-trigger` attribute and that do _not_ have a\n *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple modal with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-modal-trigger\">Open</div>\n *   <div class=\"lisn-modal\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a modal that doesn't automatically close on click outside or\n * Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Modal extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_MODAL,\n      (el, config) => new Modal(el, config),\n      modalConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: ModalConfig) {\n    super(element, {\n      name: WIDGET_NAME_MODAL,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: true,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type ModalConfig = {\n  /**\n   * The DOM ID to set on the modal. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-modal-content-id`\n   * attribute used to link triggers to the modal.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names to set on the modal. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-modal-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and\n   *    the same `data-lisn-modal-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-modal-trigger`\n   *    class or `data-lisn-modal-trigger` attribute and that do _not_ have a\n   *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the modal when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * If you set this to false, then you should ensure {@link closeButton} is\n   * enabled.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Offcanvas\n * ********************/\n\n/**\n * Configures the given element as a {@link Offcanvas} widget.\n *\n * The Offcanvas widget sets up the given element to be hidden and open in a\n * fixed overlay (non full-screen) upon activation. Activation can be done\n * manually by calling {@link open} or when clicking on any of the given\n * {@link OffcanvasConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-offcanvas__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position `\"top\"`, `\"bottom\"`, `\"left\"` or\n *   `\"right\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-offcanvas` class or `data-lisn-offcanvas` attribute set on the\n *   element that holds the content of the offcanvas\n * - `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     offcanvas on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the offcanvas on hover but and override\n *     {@link OffcanvasConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and the same `data-lisn-offcanvas-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and that do _not_ have a `data-lisn-offcanvas-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple offcanvas with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-offcanvas-trigger\">Open</div>\n *   <div class=\"lisn-offcanvas\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a offcanvas that doesn't automatically close on click outside\n * or Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"position=top | auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Offcanvas extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_OFFCANVAS,\n      (el, config) => new Offcanvas(el, config),\n      offcanvasConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: OffcanvasConfig) {\n    super(element, {\n      name: WIDGET_NAME_OFFCANVAS,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n\n    const position = config?.position || MC.S_RIGHT;\n    setData(this.getRoot(), MC.PREFIX_PLACE, position);\n  }\n}\n\n/**\n * @interface\n */\nexport type OffcanvasConfig = {\n  /**\n   * The DOM ID to set on the offcanvas. Will result in the top-level root\n   * element that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-offcanvas-content-id`\n   * attribute used to link triggers to the offcanvas.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names to set on the offcanvas. Will result\n   * in the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and the same `data-lisn-offcanvas-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and that do _not_ have a `data-lisn-offcanvas-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Specify the offcanvas position. Supported positions are top, bottom, left,\n   * right.\n   *\n   * @defaultValue \"right\"\n   */\n  position?: Position;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the offcanvas when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n// ------------------------------\n\ntype ElementsCollection = {\n  content: HTMLElement;\n  root: HTMLElement;\n  container: HTMLElement | null;\n  outerWrapper: HTMLElement;\n  triggers: Map<Element, OpenableTriggerConfig>;\n};\n\nconst instances = MH.newWeakMap<Element, Openable>();\n\nconst WIDGET_NAME_COLLAPSIBLE = \"collapsible\";\nconst WIDGET_NAME_POPUP = \"popup\";\nconst WIDGET_NAME_MODAL = \"modal\";\nconst WIDGET_NAME_OFFCANVAS = \"offcanvas\";\n\nconst PREFIX_CLOSE_BTN = MH.prefixName(\"close-button\");\nconst PREFIX_IS_OPEN = MH.prefixName(\"is-open\");\nconst PREFIX_REVERSE = MH.prefixName(MC.S_REVERSE);\nconst PREFIX_PEEK = MH.prefixName(\"peek\");\nconst PREFIX_OPENS_ON_HOVER = MH.prefixName(\"opens-on-hover\");\nconst PREFIX_LINE = MH.prefixName(\"line\");\nconst PREFIX_ICON_POSITION = MH.prefixName(\"icon-position\");\nconst PREFIX_TRIGGER_ICON = MH.prefixName(\"trigger-icon\");\nconst PREFIX_ICON_WRAPPER = MH.prefixName(\"icon-wrapper\");\nconst S_AUTO = \"auto\";\nconst S_ARIA_EXPANDED = MC.ARIA_PREFIX + \"expanded\";\nconst S_ARIA_MODAL = MC.ARIA_PREFIX + \"modal\";\nconst VAR_PEEK_SIZE = MH.prefixCssVar(\"peek-size\");\nconst VAR_JS_COLLAPSIBLE_WIDTH = MH.prefixCssJsVar(\"collapsible-width\");\nconst MIN_CLICK_TIME_AFTER_HOVER_OPEN = 1000;\nconst S_ARROW_UP =\n  `${MC.S_ARROW}-${MC.S_UP}` as `${typeof MC.S_ARROW}-${typeof MC.S_UP}`;\nconst S_ARROW_DOWN =\n  `${MC.S_ARROW}-${MC.S_DOWN}` as `${typeof MC.S_ARROW}-${typeof MC.S_DOWN}`;\nconst S_ARROW_LEFT =\n  `${MC.S_ARROW}-${MC.S_LEFT}` as `${typeof MC.S_ARROW}-${typeof MC.S_LEFT}`;\nconst S_ARROW_RIGHT =\n  `${MC.S_ARROW}-${MC.S_RIGHT}` as `${typeof MC.S_ARROW}-${typeof MC.S_RIGHT}`;\n\nconst ARROW_TYPES = [\n  S_ARROW_UP,\n  S_ARROW_DOWN,\n  S_ARROW_LEFT,\n  S_ARROW_RIGHT,\n] as const;\n\nconst ICON_CLOSED_TYPES = [\"plus\", ...ARROW_TYPES] as const;\nconst ICON_OPEN_TYPES = [\"minus\", \"x\", ...ARROW_TYPES] as const;\ntype IconCloseType = (typeof ICON_CLOSED_TYPES)[number];\ntype IconOpenType = (typeof ICON_OPEN_TYPES)[number];\n\nconst isValidIconClosed = (value: string): value is IconCloseType =>\n  MH.includes(ICON_CLOSED_TYPES, value);\n\nconst isValidIconOpen = (value: string): value is IconOpenType =>\n  MH.includes(ICON_OPEN_TYPES, value);\n\nconst triggerConfigValidator: WidgetConfigValidatorObject<OpenableTriggerConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      value && toBoolean(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n    hover: validateBoolean,\n  };\n\nconst collapsibleConfigValidator: WidgetConfigValidatorObject<CollapsibleConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    horizontal: validateBoolean,\n    reverse: validateBoolean,\n    peek: validateBooleanOrString,\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      toBoolean(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n  };\n\nconst popupConfigValidator: WidgetConfigValidatorObject<PopupConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) =>\n    validateString(\n      key,\n      value,\n      (v) => v === S_AUTO || isValidPosition(v) || isValidTwoFoldPosition(v),\n    ),\n  autoClose: validateBoolean,\n};\n\nconst modalConfigValidator: WidgetConfigValidatorObject<ModalConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  autoClose: validateBoolean,\n};\n\nconst offcanvasConfigValidator: WidgetConfigValidatorObject<OffcanvasConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) => validateString(key, value, isValidPosition),\n  autoClose: validateBoolean,\n};\n\nconst getPrefixedNames = (name: string) => {\n  const pref = MH.prefixName(name);\n  return {\n    _root: `${pref}__root`,\n    _overlay: `${pref}__overlay`, // only used for modal/offcanvas\n    _innerWrapper: `${pref}__inner-wrapper`,\n    _outerWrapper: `${pref}__outer-wrapper`,\n    _content: `${pref}__content`,\n    _container: `${pref}__container`,\n    _trigger: `${pref}__trigger`,\n    // Use different classes for styling to the ones used for auto-discovering\n    // elements, so that re-creating existing widgets can correctly find the\n    // elements to be used by the new widget synchronously before the current\n    // one is destroyed.\n    _containerForSelect: `${pref}-container`,\n    _triggerForSelect: `${pref}-trigger`,\n    _contentId: `${pref}-content-id`,\n  };\n};\n\nconst findContainer = (content: Element, cls: string) => {\n  const currWidget = instances.get(content);\n  // If there's an existing widget that we're about to destroy, the content\n  // element will be wrapped in several elements and won't be restored until\n  // the next mutate time. In that case, to correctly determine the container\n  // element, use the current widget's root element, which is located in the\n  // content element's original place.\n  let childRef = currWidget?.getRoot() ?? content;\n  if (!MH.parentOf(childRef)) {\n    // The current widget is not yet initialized (i.e. we are re-creating it\n    // immediately after it was constructed)\n    childRef = content;\n  }\n\n  // Find the content container\n  let container: HTMLElement | null = childRef.closest(`.${cls}`);\n  if (!container) {\n    container = MH.parentOf(childRef);\n  }\n\n  return container;\n};\n\nconst findTriggers = (\n  content: Element,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const container = findContainer(content, prefixedNames._containerForSelect);\n  // jsdom does not like the below selector when suffixed by [data-*] or :not()...\n  // const triggerSelector = `:is(.${prefixedNames._triggerForSelect},[data-${prefixedNames._triggerForSelect}])`;\n  // So use this:\n  const getTriggerSelector = (suffix: string) =>\n    `.${prefixedNames._triggerForSelect}${suffix},` +\n    `[data-${prefixedNames._triggerForSelect}]${suffix}`;\n\n  const contentId = getData(content, prefixedNames._contentId);\n  let triggers: Element[] = [];\n\n  if (contentId) {\n    triggers = [\n      ...MH.docQuerySelectorAll(\n        getTriggerSelector(`[data-${prefixedNames._contentId}=\"${contentId}\"]`),\n      ),\n    ];\n  } else if (container) {\n    triggers = [\n      ...MH.arrayFrom(\n        MH.querySelectorAll(\n          container,\n          getTriggerSelector(`:not([data-${prefixedNames._contentId}])`),\n        ),\n      ).filter((t) => !content.contains(t)),\n    ];\n  }\n\n  return triggers;\n};\n\nconst getTriggersFrom = (\n  content: Element,\n  inputTriggers:\n    | Element[]\n    | Map<Element, OpenableTriggerConfig | null>\n    | undefined,\n  wrapTriggers: boolean,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const triggerMap = MH.newMap<Element, OpenableTriggerConfig>();\n\n  inputTriggers = inputTriggers || findTriggers(content, prefixedNames);\n\n  const addTrigger = (\n    trigger: Element,\n    triggerConfig: OpenableTriggerConfig,\n  ) => {\n    if (wrapTriggers) {\n      const wrapper = MH.createElement(\n        isInlineTag(MH.tagName(trigger)) ? \"span\" : \"div\",\n      );\n      wrapElement(trigger, { wrapper, ignoreMove: true }); // no need to await\n      trigger = wrapper;\n    }\n\n    triggerMap.set(trigger, triggerConfig);\n  };\n\n  if (MH.isArray(inputTriggers)) {\n    for (const trigger of inputTriggers) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(\n          getData(trigger, prefixedNames._triggerForSelect),\n          triggerConfigValidator,\n        ),\n      );\n    }\n  } else if (MH.isInstanceOf(inputTriggers, Map)) {\n    for (const [trigger, triggerConfig] of inputTriggers.entries()) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(triggerConfig, triggerConfigValidator),\n      );\n    }\n  }\n\n  return triggerMap;\n};\n\nconst setupElements = (\n  widget: Openable,\n  content: HTMLElement,\n  properties: OpenableProperties,\n): ElementsCollection => {\n  const prefixedNames = getPrefixedNames(properties.name);\n  const container = findContainer(content, prefixedNames._containerForSelect);\n\n  const wrapTriggers = properties.wrapTriggers ?? false;\n  const triggers = getTriggersFrom(\n    content,\n    properties.triggers,\n    wrapTriggers,\n    prefixedNames,\n  );\n\n  // Create two wrappers\n  const innerWrapper = MH.createElement(\"div\");\n  addClasses(innerWrapper, prefixedNames._innerWrapper);\n\n  const outerWrapper = wrapElementNow(innerWrapper);\n\n  // Setup the root element.\n  // For off-canvas types we need another wrapper to serve as the root and we\n  // need a placeholder element to save the content's original position so it\n  // can be restored on destroy.\n  // Otherwise use outerWrapper for root and insert the root where the content\n  // was.\n  let root: HTMLElement;\n  let placeholder: HTMLElement;\n  if (properties.isOffcanvas) {\n    addClasses(outerWrapper, prefixedNames._outerWrapper);\n    root = wrapElementNow(outerWrapper);\n    placeholder = MH.createElement(\"div\");\n\n    const overlay = MH.createElement(\"div\");\n    addClasses(overlay, prefixedNames._overlay);\n    moveElement(overlay, { to: root });\n  } else {\n    // Otherwise use the outer wrapper as the root\n    root = placeholder = outerWrapper;\n  }\n\n  if (properties.id) {\n    root.id = properties.id;\n  }\n\n  if (properties.className) {\n    addClassesNow(root, ...toArrayIfSingle(properties.className));\n  }\n\n  unsetBooleanData(root, PREFIX_IS_OPEN);\n  const domID = getOrAssignID(root, properties.name);\n\n  if (properties.isModal) {\n    MH.setAttr(root, MC.S_ROLE, \"dialog\");\n    MH.setAttr(root, S_ARIA_MODAL);\n  }\n\n  addClasses(root, prefixedNames._root);\n  disableInitialTransition(root);\n\n  // Add a close button?\n  if (properties.closeButton) {\n    const closeBtn = MH.createButton(\"Close\");\n    addClasses(closeBtn, PREFIX_CLOSE_BTN);\n\n    // If autoClose is true, it will be closed on click anyway, because the\n    // close button is outside the content.\n    addEventListenerTo(closeBtn, MC.S_CLICK, () => {\n      widget.close();\n    });\n\n    moveElement(closeBtn, { to: properties.isOffcanvas ? root : innerWrapper });\n  }\n\n  // Transfer the relevant classes/data attrs from content to root element, so\n  // that our CSS can work without :has.\n  // This won't cause forced layout since the root is not yet attached to the\n  // DOM.\n  for (const cls of [\n    settings.lightThemeClassName,\n    settings.darkThemeClassName,\n  ]) {\n    if (hasClass(content, cls)) {\n      addClasses(root, cls);\n    }\n  }\n\n  const elements = {\n    content,\n    root,\n    container,\n    outerWrapper,\n    triggers,\n  };\n\n  // -------------------- Close / destroy hooks\n  widget.onClose(async () => {\n    for (const trigger of triggers.keys()) {\n      delData(trigger, PREFIX_OPENS_ON_HOVER);\n      MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n      await unsetBooleanData(trigger, PREFIX_IS_OPEN);\n    }\n  });\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n\n    replaceElementNow(placeholder, content, { ignoreMove: true });\n    moveElementNow(root); // remove\n    removeClassesNow(content, prefixedNames._content);\n\n    if (container) {\n      removeClassesNow(container, prefixedNames._container);\n    }\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      MH.delAttr(trigger, MC.S_ARIA_CONTROLS);\n      MH.delAttr(trigger, S_ARIA_EXPANDED);\n\n      delDataNow(trigger, PREFIX_OPENS_ON_HOVER);\n      delDataNow(trigger, PREFIX_IS_OPEN);\n\n      removeClassesNow(\n        trigger,\n        prefixedNames._trigger,\n        ...(triggerConfig?.className || []),\n      );\n\n      if (trigger.id === triggerConfig?.id) {\n        trigger.id = \"\";\n      }\n\n      if (wrapTriggers) {\n        replaceElementNow(trigger, MH.childrenOf(trigger)[0], {\n          ignoreMove: true,\n        });\n      }\n    }\n\n    triggers.clear();\n\n    for (const el of [content, ...triggers.keys()]) {\n      if (instances.get(el) === widget) {\n        MH.deleteKey(instances, el);\n      }\n    }\n  });\n\n  // -------------------- SETUP\n  // Save the elements so we can lookup the instance\n  const currWidget = instances.get(content);\n  for (const el of [content, ...triggers.keys()]) {\n    instances.set(el, widget);\n  }\n\n  // Wait for the DOMWatcher to be active, which may not be before interactive.\n  waitForInteractive()\n    .then(currWidget?.destroy)\n    .then(waitForMutateTime)\n    .then(() => {\n      if (widget.isDestroyed()) {\n        return;\n      }\n\n      addClassesNow(content, prefixedNames._content);\n\n      if (container) {\n        addClassesNow(container, prefixedNames._container);\n      }\n\n      if (properties.isOffcanvas) {\n        moveElementNow(root, {\n          to: MH.getBody(),\n          ignoreMove: true,\n        });\n      }\n\n      // Move the placeholder element to before the content and then move\n      // content into inner wrapper.\n      moveElementNow(placeholder, {\n        // for not-offcanvas it's also the root\n        to: content,\n        position: \"before\",\n        ignoreMove: true,\n      });\n\n      moveElementNow(content, { to: innerWrapper, ignoreMove: true });\n\n      // Setup the triggers\n      for (const [trigger, triggerConfig] of triggers.entries()) {\n        MH.setAttr(trigger, MC.S_ARIA_CONTROLS, domID);\n        MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n\n        setBooleanDataNow(\n          trigger,\n          PREFIX_OPENS_ON_HOVER,\n          triggerConfig[MC.S_HOVER],\n        );\n        unsetBooleanDataNow(trigger, PREFIX_IS_OPEN);\n\n        addClassesNow(\n          trigger,\n          prefixedNames._trigger,\n          ...(triggerConfig?.className || []),\n        );\n\n        if (triggerConfig?.id) {\n          trigger.id = triggerConfig.id;\n        }\n      }\n\n      setupListeners(widget, elements, properties, prefixedNames);\n\n      if (properties.onSetup) {\n        properties.onSetup();\n      }\n    });\n\n  return elements;\n};\n\nconst setupListeners = (\n  widget: Openable,\n  elements: ElementsCollection,\n  properties: OpenableProperties,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const { content, root, triggers } = elements;\n  const doc = MH.getDoc();\n\n  let hoverTimeOpened = 0;\n  let isPointerOver = false;\n  let activeTrigger: Element | null = null;\n\n  // ----------\n\n  const isTrigger = (element: Element) =>\n    MH.includes(\n      MH.arrayFrom(triggers.keys()),\n      element.closest(getDefaultWidgetSelector(prefixedNames._trigger)),\n    );\n\n  const shouldPreventDefault = (trigger: Element) =>\n    triggers.get(trigger)?.preventDefault ?? true;\n\n  const usesHover = (trigger: Element) => triggers.get(trigger)?.hover;\n\n  const usesAutoClose = (trigger: Element | null) =>\n    (trigger ? triggers.get(trigger)?.autoClose : null) ?? properties.autoClose;\n\n  // ----------\n\n  const toggleTrigger = (event: Event, openIt?: boolean) => {\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger)) {\n      if (shouldPreventDefault(trigger)) {\n        MH.preventDefault(event);\n      }\n\n      // If a click was fired shortly after opening on hover, ignore\n      if (\n        openIt !== false && // not explicitly asked to close\n        widget.isOpen() &&\n        MH.timeSince(hoverTimeOpened) < MIN_CLICK_TIME_AFTER_HOVER_OPEN\n      ) {\n        return;\n      }\n\n      if (openIt ?? !widget.isOpen()) {\n        // open it\n        activeTrigger = trigger;\n        MH.setAttr(trigger, S_ARIA_EXPANDED); // will be unset on close\n        setBooleanData(trigger, PREFIX_IS_OPEN); // will be unset on close\n\n        widget.open(); // no need to await\n\n        if (usesAutoClose(trigger)) {\n          if (usesHover(trigger)) {\n            addEventListenerTo(root, MC.S_POINTERENTER, setIsPointerOver);\n            addEventListenerTo(root, MC.S_POINTERLEAVE, pointerLeft);\n          }\n\n          // auto-close listeners setup by the onOpen handler below\n        }\n      } else {\n        widget.close(); // out onClose handler below will remove listeners\n      }\n    }\n  };\n\n  // ----------\n\n  const setIsPointerOver = () => {\n    isPointerOver = true;\n  };\n\n  // ----------\n\n  const unsetIsPointerOver = (event: Event) => {\n    // Keep it set to true if this is a touch pointer type; otherwise unset\n    isPointerOver = isPointerOver && MH.isTouchPointerEvent(event);\n  };\n\n  // ----------\n\n  const pointerEntered = (event: Event) => {\n    setIsPointerOver();\n    if (!widget.isOpen()) {\n      hoverTimeOpened = MH.timeNow();\n      toggleTrigger(event, true);\n    }\n  };\n\n  // ----------\n\n  const pointerLeft = (event: Event) => {\n    unsetIsPointerOver(event);\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger) && usesAutoClose(trigger)) {\n      MH.setTimer(\n        () => {\n          if (!isPointerOver) {\n            widget.close();\n          }\n        },\n        // use a delay that allows the mouse to move from trigger to content\n        // without closing it\n        // TODO make this user-configurable\n        properties.isOffcanvas ? 300 : 50,\n      );\n    }\n  };\n\n  // ----------\n\n  const closeIfEscape = (event: Event) => {\n    if ((event as KeyboardEvent).key === \"Escape\") {\n      widget.close(); // no need to await\n    }\n  };\n\n  // ----------\n\n  const closeIfClickOutside = (event: Event) => {\n    const target = MH.targetOf(event);\n    if (\n      target === doc ||\n      (MH.isElement(target) &&\n        !content.contains(target) && // outside content\n        !isTrigger(target)) // handled by pointer watcher\n    ) {\n      widget.close();\n    }\n  };\n\n  // ----------\n\n  const maybeSetupAutoCloseListeners = (\n    trigger: Element | null,\n    remove: boolean,\n  ) => {\n    if (usesAutoClose(trigger)) {\n      const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n      addOrRemove(doc, \"keyup\", closeIfEscape);\n\n      // Add a short delay so that we don't catch the bubbling of the click event\n      // that opened the widget.\n      MH.setTimer(() => addOrRemove(doc, MC.S_CLICK, closeIfClickOutside), 100);\n\n      if (trigger && usesHover(trigger)) {\n        addOrRemove(trigger, MC.S_POINTERLEAVE, pointerLeft);\n      }\n    }\n  };\n\n  // ----------\n\n  const setupOrCleanup = (remove: boolean) => {\n    const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      // Always setup click listeners\n      addOrRemove(trigger, MC.S_CLICK, toggleTrigger);\n\n      if (triggerConfig[MC.S_HOVER]) {\n        addOrRemove(trigger, MC.S_POINTERENTER, pointerEntered);\n      }\n    }\n  };\n\n  // ----------\n\n  setupOrCleanup(false);\n\n  widget.onOpen(() => {\n    maybeSetupAutoCloseListeners(activeTrigger, false); // setup listeners if relevant\n  });\n\n  widget.onClose(() => {\n    hoverTimeOpened = 0;\n    isPointerOver = false;\n\n    removeEventListenerFrom(root, MC.S_POINTERENTER, setIsPointerOver);\n    removeEventListenerFrom(root, MC.S_POINTERLEAVE, pointerLeft);\n\n    maybeSetupAutoCloseListeners(activeTrigger, true); // remove listeners if any\n    activeTrigger = null;\n  });\n\n  widget.onDestroy(() => {\n    setupOrCleanup(true); // remove\n  });\n};\n\n// COLLAPSIBLE ------------------------------\n\nconst insertCollapsibleIcon = (\n  trigger: Element,\n  triggerConfig: OpenableTriggerConfig,\n  widget: Collapsible,\n  widgetConfig: CollapsibleConfig | undefined,\n) => {\n  const iconPosition = triggerConfig.icon ?? widgetConfig?.icon;\n  const iconClosed =\n    (triggerConfig.iconClosed ?? widgetConfig?.iconClosed) || \"plus\";\n  const iconOpen =\n    (triggerConfig.iconOpen ?? widgetConfig?.iconOpen) || \"minus\";\n\n  if (iconPosition) {\n    addClasses(trigger, PREFIX_ICON_WRAPPER);\n    setData(trigger, PREFIX_ICON_POSITION, iconPosition);\n\n    const icon = MH.createElement(\"span\");\n    setDataNow(icon, PREFIX_TRIGGER_ICON, iconClosed);\n\n    for (let l = 0; l < 2; l++) {\n      const line = MH.createElement(\"span\");\n      addClassesNow(line, PREFIX_LINE);\n      moveElementNow(line, { to: icon });\n    }\n\n    moveElement(icon, { to: trigger, ignoreMove: true });\n\n    widget.onOpen(() => {\n      if (getBooleanData(trigger, PREFIX_IS_OPEN)) {\n        setData(icon, PREFIX_TRIGGER_ICON, iconOpen);\n      }\n    });\n\n    widget.onClose(() => {\n      setData(icon, PREFIX_TRIGGER_ICON, iconClosed);\n    });\n  }\n};\n\n// POPUP ------------------------------\n\nconst fetchPopupPlacement = async (\n  contentSize: SizeData,\n  containerView: ViewData,\n) => {\n  const containerPosition = containerView.relative;\n  const containerTop = containerPosition[MC.S_TOP];\n  const containerBottom = containerPosition[MC.S_BOTTOM];\n  const containerLeft = containerPosition[MC.S_LEFT];\n  const containerRight = containerPosition[MC.S_RIGHT];\n  const containerHMiddle = containerPosition.hMiddle;\n  const containerVMiddle = containerPosition.vMiddle;\n  const vpSize = await fetchViewportSize();\n  const popupWidth = contentSize.border[MC.S_WIDTH] / vpSize[MC.S_WIDTH];\n  const popupHeight = contentSize.border[MC.S_HEIGHT] / vpSize[MC.S_HEIGHT];\n\n  // - Find the maximum of these quantities:\n  //   - containerTop - popupHeight:\n  //     the space on top if placed on top-(left|right|)\n  //   - 1 - (containerBottom + popupHeight):\n  //     the space on bottom be if placed on bottom-(left|right|)\n  //   - containerLeft - popupWidth:\n  //     the space on left if placed on left-(top|bottom|)\n  //   - 1 - (containerRight + popupWidth):\n  //     the space on right if placed on right-(top|bottom|)\n  //\n  // This determines the main placement: top|bottom|left|right\n\n  // Then to determine secondary alignment:\n  // - For top/bottom placement, determine horizontal alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerLeft + popupWidth):\n  //       the space on right if left-aligned\n  //     - containerRight - popupWidth:\n  //       the space on left if right-aligned\n  //     - min(\n  //           containerHMiddle - popupWidth / 2,\n  //           1 - (containerHMiddle + popupWidth / 2),\n  //       ):\n  //       the minimum of the space on either left or right if center-aligned\n  //\n  // - For left/right placement, determine vertical alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerTop + popupHeight):\n  //       the space on bottom if top-aligned\n  //     - containerBottom - popupHeight:\n  //       the space on top if bottom-aligned\n  //     - min(\n  //           containerVMiddle - popupHeight / 2,\n  //           1 - (containerVMiddle + popupHeight / 2),\n  //       ):\n  //       the minimum of the space on either top or bottom if center-aligned\n\n  const placementVars = {\n    top: containerTop - popupHeight,\n    bottom: 1 - (containerBottom + popupHeight),\n    left: containerLeft - popupWidth,\n    right: 1 - (containerRight + popupWidth),\n  };\n\n  const placement = keyWithMaxVal(placementVars);\n  if (placement === undefined) {\n    // container must be out-view and so left/right are NaN\n    return;\n  }\n  let finalPlacement = placement;\n\n  let alignmentVars;\n  switch (placement) {\n    case MC.S_TOP:\n    case MC.S_BOTTOM:\n      alignmentVars = {\n        left: 1 - (containerLeft + popupWidth),\n        right: containerRight - popupWidth,\n        middle: MH.min(\n          containerHMiddle - popupWidth / 2,\n          1 - (containerHMiddle + popupWidth / 2),\n        ),\n      };\n      break;\n\n    case MC.S_LEFT:\n    case MC.S_RIGHT:\n      alignmentVars = {\n        top: 1 - (containerTop + popupHeight),\n        bottom: containerBottom - popupHeight,\n        middle: MH.min(\n          containerVMiddle - popupHeight / 2,\n          1 - (containerVMiddle + popupHeight / 2),\n        ),\n      };\n      break;\n\n    default:\n      return;\n  }\n\n  const alignment = keyWithMaxVal(alignmentVars);\n  if (alignment !== \"middle\") {\n    finalPlacement += \"-\" + alignment;\n  }\n\n  return finalPlacement;\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling openables\n * {@link Open} opens or closes the {@link Openable} widget setup for the given\n * element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { Openable } from \"@lisn/widgets/openable\";\nimport { fetchUniqueWidget } from \"@lisn/widgets/widget\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Opens or closes the {@link Openable} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"open\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-modal\" data-lisn-on-view=\"@open +reference=top:50%\"></div>\n * ```\n *\n * @category Controlling openables\n */\nexport class Open implements Action {\n  /**\n   * Opens the Openable widget setup for the element.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Closes the Openable widget setup for the element.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the Openable widget setup for the element.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"open\", (element) => new Open(element));\n  }\n\n  constructor(element: Element) {\n    const open = (widget: Openable | null) => widget?.open();\n    const close = (widget: Openable | null) => widget?.close();\n    const toggle = (widget: Openable | null) => widget?.toggle();\n\n    const widgetPromise = fetchUniqueWidget(\"openable\", element, Openable);\n\n    this.do = () => widgetPromise.then(open);\n    this.undo = () => widgetPromise.then(close);\n    this[MC.S_TOGGLE] = () => widgetPromise.then(toggle);\n  }\n}\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  addClasses,\n  removeClassesNow,\n  getData,\n  setData,\n  setBooleanData,\n  delDataNow,\n  getComputedStyleProp,\n  setStyleProp,\n  delStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { isValidInputDevice } from \"@lisn/utils/gesture\";\nimport { toInt } from \"@lisn/utils/math\";\nimport { toBoolean } from \"@lisn/utils/misc\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateNumber,\n  validateString,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport {\n  GestureWatcher,\n  OnGestureOptions,\n  GestureData,\n} from \"@lisn/watchers/gesture-watcher\";\nimport { ScrollWatcher, ScrollOptions } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  WidgetCallback,\n  WidgetHandler,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * Configures the given element as a {@link Pager} widget.\n *\n * The Pager widget sets up the elements that make up its pages to be overlayed\n * on top of each other with only one of them visible at a time. When a user\n * performs a scroll-like gesture (see {@link GestureWatcher}), the pages are\n * flicked through: gestures, whose direction is down (or left) result in the\n * next page being shown, otherwise the previous.\n *\n * The widget should have more than one page.\n *\n * Optionally, the widget can have a set of \"switch\" elements and a set of\n * \"toggle\" elements which correspond one-to-one to each page. Switches go to\n * the given page and toggles toggle the enabled/disabled state of the page.\n *\n * **IMPORTANT:** Unless the {@link PagerConfig.style} is set to \"carousel\", the\n * page elements will be positioned absolutely, and therefore the pager likely\n * needs to have an explicit height. If you enable\n * {@link PagerConfig.fullscreen}, then the element will get `height: 100vh`\n * set. Otherwise, you need to set its height in your CSS.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Pager}\n * widget on a given element. Use {@link Pager.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the pager element:\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n * - `data-lisn-use-parallax`: `\"true\"` or `\"false\"`\n * - `data-lisn-total-pages`: the number of pages\n * - `data-lisn-visible-pages`: **for carousel only** the number of visible pages;\n *   can be fractional if {@link PagerConfig.peek} is enabled\n * - `data-lisn-current-page`: the current page number\n * - `data-lisn-current-page-is-last`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-first-enabled`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-last-enabled`: `\"true\"` or `\"false\"`\n *\n * The following dynamic CSS properties are also set on the pager element's style:\n * - `--lisn-js--total-pages`: the number of pages\n * - `--lisn-js--visible-pages`: **for carousel only** the number of visible pages\n * - `--lisn-js--current-page`: the current page number\n *\n * The following dynamic attributes are set on each page, toggle or switch element:\n * - `data-lisn-page-state`: `\"current\"`, `\"next\"`, `\"covered\"` or `\"disabled\"`\n * - `data-lisn-page-number`: the corresponding page's number\n *\n * The following analogous dynamic CSS properties are also set on each page,\n * toggle or switch element's style:\n * - `--lisn-js--page-number`: the corresponding page's number\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-pager` class or `data-lisn-pager` attribute set on the container\n *   element that constitutes the pager\n * - `lisn-pager-page` class or `data-lisn-pager-page` attribute set on\n *   elements that should act as the pages.\n * - `lisn-pager-toggle` class or `data-lisn-pager-toggle` attribute set on\n *   elements that should act as the toggles.\n * - `lisn-pager-switch` class or `data-lisn-pager-switch` attribute set on\n *   elements that should act as the switches.\n *\n * When using auto-widgets, the elements that will be used as pages are\n * discovered in the following way:\n * 1. The top-level element that constitutes the widget is searched for any\n *    elements that contain the `lisn-pager-page` class or\n *    `data-lisn-pager-page` attribute. They do not have to be immediate\n *    children of the root element, but they **should** all be siblings.\n * 2. If there are no such elements, all of the immediate children of the\n *    widget element except any `script` or `style` elements are taken as the\n *    pages.\n *\n * The toggles and switches are descendants of the top-level element that\n * constitutes the widget, that contain the\n * `lisn-pager-toggle`/`lisn-pager-switch` class or `data-lisn-pager-toggle`/\n * `data-lisn-pager-switch` attribute. They do not have to be immediate\n * children of the root element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple pager with default settings.\n *\n * ```html\n * <div class=\"lisn-pager\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * As above but with all settings explicitly set to their default (`false`).\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen=false | parallax=false | horizontal=false\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>Horizontal: Page 1</div>\n *   <div>Horizontal: Page 2</div>\n *   <div>Horizontal: Page 3</div>\n *   <div>Horizontal: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings, as well as toggle and switch buttons.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>\n *     <div data-lisn-pager-page>Horizontal: Page 1</div>\n *     <div data-lisn-pager-page>Horizontal: Page 2</div>\n *     <div data-lisn-pager-page>Horizontal: Page 3</div>\n *     <div data-lisn-pager-page>Horizontal: Page 4</div>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-toggle>Toggle page 1</button>\n *     <button data-lisn-pager-toggle>Toggle page 2</button>\n *     <button data-lisn-pager-toggle>Toggle page 3</button>\n *     <button data-lisn-pager-toggle>Toggle page 4</button>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-switch>Go to page 1</button>\n *     <button data-lisn-pager-switch>Go to page 2</button>\n *     <button data-lisn-pager-switch>Go to page 3</button>\n *     <button data-lisn-pager-switch>Go to page 4</button>\n *   </div>\n * </div>\n * ```\n */\nexport class Pager extends Widget {\n  /**\n   * Advances the widget's page by 1. If the current page is the last one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled down/right\n   * (depending on the gesture direction).\n   */\n  readonly nextPage: () => Promise<void>;\n\n  /**\n   * Reverses the widget's page by 1. If the current page is the first one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled up/left\n   * (depending on the gesture direction).\n   */\n  readonly prevPage: () => Promise<void>;\n\n  /**\n   * Advances the widget to the given page. Note that page numbers start at 1.\n   *\n   * If this page is disabled, nothing is done.\n   */\n  readonly goToPage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Disables the given page number. Note that page numbers start at 1.\n   *\n   * The page will be skipped during transitioning to previous/next.\n   *\n   * If the page is the current one, then the current page will be switched to\n   * the previous one (that's not disabled), or if this is the first enabled\n   * page, then it will switch to the next one that's not disabled.\n   *\n   * If this is the last enabled page, nothing is done.\n   */\n  readonly disablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page number. Note that page numbers start at 1.\n   */\n  readonly enablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page if it is disabled, otherwise disables it. Note\n   * that page numbers start at 1.\n   */\n  readonly togglePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Returns true if the given page number is disabled. Note that page\n   * numbers start at 1.\n   */\n  readonly isPageDisabled: (pageNum: number) => boolean;\n\n  /**\n   * Returns the current page.\n   */\n  readonly getCurrentPage: () => Element;\n\n  /**\n   * Returns the previous page, before the last transition.\n   *\n   * If there has been no change of page, returns the first page, same as\n   * {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPage: () => Element;\n\n  /**\n   * Returns the number of the current page. Note that numbers start at 1.\n   */\n  readonly getCurrentPageNum: () => number;\n\n  /**\n   * Returns the number of the previous page, before the last transition. Note\n   * that numbers start at 1.\n   *\n   * If there has been no change of page, returns the number of the first page,\n   * same as {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPageNum: () => number;\n\n  /**\n   * The given handler will be called whenever there is a change of page. It\n   * will be called after the current page number is updated internally (so\n   * {@link getPreviousPageNum} and {@link getCurrentPageNum} will return the\n   * updated numbers), but before the page transition styles are updated.\n   *\n   * If the handler returns a promise, it will be awaited upon.\n   */\n  readonly onTransition: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns the page elements.\n   */\n  readonly getPages: () => Element[];\n\n  /**\n   * Returns the toggle elements if any.\n   */\n  readonly getToggles: () => Element[];\n\n  /**\n   * Returns the switch elements if any.\n   */\n  readonly getSwitches: () => Element[];\n\n  static get(element: Element): Pager | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Pager)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!Pager.get(element)) {\n          return new Pager(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If there are less than 2 pages given or found, or if any\n   *                page is not a descendant of the main pager element.\n   */\n  constructor(element: Element, config?: PagerConfig) {\n    const destroyPromise = Pager.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const pages = config?.pages || [];\n    const toggles = config?.toggles || [];\n    const switches = config?.switches || [];\n    const nextPrevSwitch = {\n      _next: config?.nextSwitch ?? null,\n      _prev: config?.prevSwitch ?? null,\n    };\n\n    const pageSelector = getDefaultWidgetSelector(PREFIX_PAGE__FOR_SELECT);\n    const toggleSelector = getDefaultWidgetSelector(PREFIX_TOGGLE__FOR_SELECT);\n    const switchSelector = getDefaultWidgetSelector(PREFIX_SWITCH__FOR_SELECT);\n    const nextSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_NEXT_SWITCH__FOR_SELECT,\n    );\n    const prevSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_PREV_SWITCH__FOR_SELECT,\n    );\n\n    if (!MH.lengthOf(pages)) {\n      pages.push(...MH.querySelectorAll(element, pageSelector));\n\n      if (!MH.lengthOf(pages)) {\n        pages.push(\n          ...getVisibleContentChildren(element).filter(\n            (e) => !e.matches(switchSelector),\n          ),\n        );\n      }\n    }\n\n    if (!MH.lengthOf(toggles)) {\n      toggles.push(...MH.querySelectorAll(element, toggleSelector));\n    }\n\n    if (!MH.lengthOf(switches)) {\n      switches.push(...MH.querySelectorAll(element, switchSelector));\n    }\n\n    if (!nextPrevSwitch._next) {\n      nextPrevSwitch._next = MH.querySelector(element, nextSwitchSelector);\n    }\n\n    if (!nextPrevSwitch._prev) {\n      nextPrevSwitch._prev = MH.querySelector(element, prevSwitchSelector);\n    }\n\n    const numPages = MH.lengthOf(pages);\n    if (numPages < 2) {\n      throw MH.usageError(\"Pager must have more than 1 page\");\n    }\n\n    for (const page of pages) {\n      if (!element.contains(page) || page === element) {\n        throw MH.usageError(\"Pager's pages must be its descendants\");\n      }\n    }\n\n    const components = {\n      _pages: pages,\n      _toggles: toggles,\n      _switches: switches,\n      _nextPrevSwitch: nextPrevSwitch,\n    };\n\n    const methods = getMethods(this, components, element, config);\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, element, components, config, methods);\n    });\n\n    this.nextPage = () => methods._nextPage();\n    this.prevPage = () => methods._prevPage();\n    this.goToPage = (pageNum) => methods._goToPage(pageNum);\n    this.disablePage = methods._disablePage;\n    this.enablePage = methods._enablePage;\n    this.togglePage = methods._togglePage;\n    this.isPageDisabled = methods._isPageDisabled;\n    this.getCurrentPage = methods._getCurrentPage;\n    this.getPreviousPage = methods._getPreviousPage;\n    this.getCurrentPageNum = methods._getCurrentPageNum;\n    this.getPreviousPageNum = methods._getPreviousPageNum;\n    this.onTransition = methods._onTransition;\n\n    this.getPages = () => [...pages];\n    this.getSwitches = () => [...switches];\n    this.getToggles = () => [...toggles];\n  }\n}\n\n/**\n * @interface\n */\nexport type PagerConfig = {\n  /**\n   * The elements that will make up the pages.\n   *\n   * They do not have to be immediate children of the root element, but they\n   * should all be siblings.\n   *\n   * The widget should have more than one page.\n   *\n   * If this is not specified, then\n   * 1. The top-level element that constitutes the widget is searched for any\n   *    elements that contain the `lisn-pager-page` class or the\n   *    `data-lisn-pager-page` attribute, and these are used as pages.\n   * 2. If there are no such elements, all of the immediate children of the\n   *    widget element (other than `script` and `style` elements) are taken as\n   *    the pages.\n   *\n   * **IMPORTANT:** Unless the {@link style} is set to \"carousel\", the page\n   * elements will be positioned absolutely, and therefore the pager likely\n   * needs to have an explicit height. If you enable {@link fullscreen}, then\n   * the element will get `height: 100vh` set. Otherwise, you need to set its\n   * height in your CSS.\n   *\n   * @defaultValue undefined\n   */\n  pages?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that toggles the\n   * enabled/disabled state of the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-toggle`\n   * class or the `data-lisn-pager-toggle` attribute, and these are used as\n   * toggles.\n   *\n   * @defaultValue undefined\n   */\n  toggles?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that switches the\n   * pager to the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-switch`\n   * class or the `data-lisn-pager-switch` attribute, and these are used as\n   * switches.\n   *\n   * @defaultValue undefined\n   */\n  switches?: Element[];\n\n  /**\n   * This element will be assigned a click listener that goes to the next page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-next-switch` class or the `data-lisn-pager-next-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  nextSwitch?: Element;\n\n  /**\n   * This element will be assigned a click listener that goes to the previous\n   * page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-prev-switch` class or the `data-lisn-pager-prev-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  prevSwitch?: Element;\n\n  /**\n   * Set the initial page number.\n   *\n   * @defaultValue 1\n   */\n  initialPage?: number;\n\n  /**\n   * Set the style of the widget. This determines the basic CSS applied.\n   *\n   * When importing the stylesheets in your project, if not using the full\n   * stylesheet (lisn.css) you can import either pager.css which contains all\n   * three pager styles, or only `pager-<style>.css`.\n   *\n   * **NOTE:** The base css only includes the minimum required for positioning\n   * and transitioning pages. The switches and toggles are intentionally not\n   * styled for flexibility. You should style those in your CSS.\n   *\n   * **IMPORTANT:** Unless the {@link style} is set to \"carousel\", the page\n   * elements will be positioned absolutely, and therefore the pager likely\n   * needs to have an explicit height. If you enable {@link fullscreen}, then\n   * the element will get `height: 100vh` set. Otherwise, you need to set its\n   * height in your CSS.\n   *\n   * @since v1.1.0\n   *\n   * @defaultValue \"slider\"\n   */\n  style?: \"slider\" | \"carousel\" | \"tabs\";\n\n  /**\n   * Only relevant is {@link style} is \"carousel\".\n   *\n   * The *minimum* page height (or width in {@link horizontal} mode) in pixels.\n   * This will determine the number of visible slides at any one width of the\n   * pager. Pages will still grow to fill the size of the carousel itself.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue 300\n   */\n  pageSize?: number;\n\n  /**\n   * Only relevant is {@link style} is \"carousel\".\n   *\n   * Whether to show a bit of the upcoming and/or previous pages that are\n   * hidden when not all fit.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue false\n   */\n  peek?: boolean;\n\n  /**\n   * If true, then:\n   * - if the pager {@link style} is \"slider\", the pager's height will be set\n   *   to the viewport height (100vh)\n   * - the pager's scrolling ancestor will be scrolled to the top of the pager\n   *   when 30% of it is in view\n   * - scrolling beyond the first or last page will initiate scroll up/left or\n   *   down/right the pager's scrolling ancestor in order to allow \"leaving\"\n   *   the pager\n   *\n   * Note that except in \"carousel\" {@link style} the pager's pages will be\n   * positioned absolutely, and so if you do _not_ enable this option, you will\n   * need to manually set the height of the page parent element via CSS.\n   *\n   * @defaultValue false\n   */\n  fullscreen?: boolean;\n\n  /**\n   * Only relevant is {@link style} is \"slider\" (default) or \"carousel\".\n   *\n   * Use a parallax effect for switching pages.\n   *\n   * @defaultValue false\n   */\n  parallax?: boolean;\n\n  /**\n   * Only relevant is {@link style} is \"slider\" (default) or \"carousel\".\n   *\n   * Transition pages sideways instead of vertically.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Transition pages upon user scroll-like and drag-like gestures via the\n   * given {@link GestureDevice}s. If set to true, then gestures using all\n   * device types are supported.\n   *\n   * Note that drag gesture is only supported by the \"pointer\" device and also\n   * the \"pointer\" device only supports drag gestures, so if you want to\n   * disable drag gestures, simply pass \"wheel,key,touch\" as this option.\n   *\n   * @defaultValue true\n   */\n  useGestures?: boolean | CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If true, then pages will be advanced backwards/forwards regardless if the\n   * gesture direction is horizontal or vertical.\n   *\n   * If false then, a gesture will go to the next page only if its direction is\n   * down if {@link horizontal} is false/right if {@link horizontal} is true,\n   * and to the previous page only if the gesture direction is up if\n   * {@link horizontal} is false/left if {@link horizontal} is true.\n   *\n   * **IMPORTANT:**\n   * If {@link fullscreen}, {@link preventDefault} and\n   * {@link alignGestureDirection} are all true, then the pager's scrollable\n   * parent must be scrollable in the same direction as the pager orientation,\n   * otherwise automatic scroll beyond the last/first page won't work.\n   *\n   * @defaultValue false\n   */\n  alignGestureDirection?: boolean;\n\n  /**\n   * Whether to prevent the default action for events that would result in\n   * gestures.\n   *\n   * **NOTE:**\n   * If true (default), then all events that originate from a device given in\n   * {@link useGestures} and that could result in a gesture will be prevented\n   * regardless of their direction and whether {@link alignGestureDirection} is\n   * true.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n};\n\n// --------------------\n\ntype Components = {\n  _pages: Element[];\n  _toggles: Element[];\n  _switches: Element[];\n  _nextPrevSwitch: { _next: Element | null; _prev: Element | null };\n};\n\n// Swiping on some trackpads results in \"trailing\" wheel events sent for some\n// while which results in multiple pages being advanced in a short while. So we\n// limit how often pages can be advanced.\nconst MIN_TIME_BETWEEN_WHEEL = 1000;\n\nconst S_CURRENT = \"current\";\nconst S_ARIA_CURRENT = MC.ARIA_PREFIX + S_CURRENT;\nconst S_COVERED = \"covered\";\nconst S_NEXT = \"next\";\nconst S_TOTAL_PAGES = \"total-pages\";\nconst S_VISIBLE_PAGES = \"visible-pages\";\nconst S_CURRENT_PAGE = \"current-page\";\nconst S_PAGE_NUMBER = \"page-number\";\nconst WIDGET_NAME = \"pager\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_PAGE_CONTAINER = `${PREFIXED_NAME}__page-container`;\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_PAGE = `${PREFIXED_NAME}__page`;\nconst PREFIX_PAGE__FOR_SELECT = `${PREFIXED_NAME}-page`;\nconst PREFIX_TOGGLE__FOR_SELECT = `${PREFIXED_NAME}-toggle`;\nconst PREFIX_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-switch`;\nconst PREFIX_NEXT_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-next-switch`;\nconst PREFIX_PREV_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-prev-switch`;\n\nconst PREFIX_STYLE = `${PREFIXED_NAME}-style`;\nconst PREFIX_IS_FULLSCREEN = MH.prefixName(\"is-fullscreen\");\nconst PREFIX_USE_PARALLAX = MH.prefixName(\"use-parallax\");\nconst PREFIX_TOTAL_PAGES = MH.prefixName(S_TOTAL_PAGES);\nconst PREFIX_VISIBLE_PAGES = MH.prefixName(S_VISIBLE_PAGES);\nconst PREFIX_CURRENT_PAGE = MH.prefixName(S_CURRENT_PAGE);\nconst PREFIX_CURRENT_PAGE_IS_LAST = `${PREFIX_CURRENT_PAGE}-is-last`;\nconst PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED = `${PREFIX_CURRENT_PAGE}-is-first-enabled`;\nconst PREFIX_CURRENT_PAGE_IS_LAST_ENABLED = `${PREFIX_CURRENT_PAGE_IS_LAST}-enabled`;\nconst PREFIX_PAGE_STATE = MH.prefixName(\"page-state\");\nconst PREFIX_PAGE_NUMBER = MH.prefixName(S_PAGE_NUMBER);\nconst VAR_CURRENT_PAGE = MH.prefixCssJsVar(S_CURRENT_PAGE);\nconst VAR_TOTAL_PAGES = MH.prefixCssJsVar(S_TOTAL_PAGES);\nconst VAR_VISIBLE_PAGES = MH.prefixCssJsVar(S_VISIBLE_PAGES);\nconst VAR_VISIBLE_GAPS = MH.prefixCssJsVar(\"visible-gaps\");\nconst VAR_TRANSLATED_PAGES = MH.prefixCssJsVar(\"translated-pages\");\nconst VAR_TRANSLATED_GAPS = MH.prefixCssJsVar(\"translated-gaps\");\nconst VAR_PAGE_NUMBER = MH.prefixCssJsVar(S_PAGE_NUMBER);\n\n// Only one Pager widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\nconst SUPPORTED_STYLES = [\"slider\", \"carousel\", \"tabs\"] as const;\ntype PagerStyle = (typeof SUPPORTED_STYLES)[number];\n\nconst isValidStyle = (value: string): value is PagerStyle =>\n  MH.includes(SUPPORTED_STYLES, value);\n\nconst configValidator: WidgetConfigValidatorObject<PagerConfig> = {\n  initialPage: validateNumber,\n  style: (key, value) => validateString(key, value, isValidStyle),\n  pageSize: validateNumber,\n  peek: validateBoolean,\n  fullscreen: validateBoolean,\n  parallax: validateBoolean,\n  horizontal: validateBoolean,\n  useGestures: (key, value) => {\n    if (MH.isNullish(value)) {\n      return undefined;\n    }\n\n    const bool = toBoolean(value);\n    if (bool !== null) {\n      return bool;\n    }\n\n    return (\n      validateStrList(\n        \"useGestures\",\n        validateString(key, value),\n        isValidInputDevice,\n      ) || true\n    );\n  },\n  alignGestureDirection: validateBoolean,\n  preventDefault: validateBoolean,\n};\n\nconst fetchClosestScrollable = (element: Element) =>\n  waitForMeasureTime().then(\n    () => getClosestScrollable(element, { active: true }) ?? undefined,\n  );\n\nconst setPageNumber = (components: Components, pageNum: number) => {\n  let lastPromise: Promise<void> = MH.promiseResolve();\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      setData(el, PREFIX_PAGE_NUMBER, pageNum + \"\");\n      lastPromise = setStyleProp(el, VAR_PAGE_NUMBER, pageNum + \"\");\n    }\n  }\n\n  return lastPromise;\n};\n\nconst setPageState = async (\n  components: Components,\n  pageNum: number,\n  state: string,\n) => {\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      await setData(el, PREFIX_PAGE_STATE, state);\n    }\n  }\n};\n\nconst setCurrentPage = (\n  pagerEl: Element,\n  pageNumbers: {\n    _current: number;\n    _total: number;\n  },\n  isPageDisabled: (pageNum: number) => boolean,\n) => {\n  let isFirstEnabled = true;\n  let isLastEnabled = true;\n  for (let n = 1; n <= pageNumbers._total; n++) {\n    if (!isPageDisabled(n)) {\n      if (n < pageNumbers._current) {\n        isFirstEnabled = false;\n      } else if (n > pageNumbers._current) {\n        isLastEnabled = false;\n      }\n    }\n  }\n\n  setStyleProp(pagerEl, VAR_CURRENT_PAGE, pageNumbers._current + \"\");\n  setData(pagerEl, PREFIX_CURRENT_PAGE, pageNumbers._current + \"\");\n  setBooleanData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST,\n    pageNumbers._current === pageNumbers._total,\n  );\n  setBooleanData(pagerEl, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED, isFirstEnabled);\n  return setBooleanData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST_ENABLED,\n    isLastEnabled,\n  );\n};\n\nconst init = (\n  widget: Pager,\n  element: Element,\n  components: Components,\n  config: PagerConfig | undefined,\n  methods: ReturnType<typeof getMethods>,\n) => {\n  const logger = debug\n    ? new debug.Logger({\n        name: `Pager-${formatAsString(element)}`,\n        logAtCreation: config,\n      })\n    : null;\n\n  const pages = components._pages;\n  const toggles = components._toggles;\n  const switches = components._switches;\n  const nextSwitch = components._nextPrevSwitch._next;\n  const prevSwitch = components._nextPrevSwitch._prev;\n  const pageContainer = MH.parentOf(pages[0]);\n\n  let initialPage = toInt(config?.initialPage ?? 1);\n  const pagerStyle = config?.style || \"slider\";\n  const isCarousel = pagerStyle === \"carousel\";\n  const minPageSize = config?.pageSize ?? 300;\n  const enablePeek = config?.peek ?? false;\n  const isFullscreen = config?.fullscreen ?? false;\n  const isParallax = config?.parallax ?? false;\n  const isHorizontal = config?.horizontal ?? false;\n  const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n  const useGestures = config?.useGestures ?? true;\n  const alignGestureDirection = config?.alignGestureDirection ?? false;\n  const preventDefault = config?.preventDefault ?? true;\n\n  const scrollWatcher = ScrollWatcher.reuse();\n  const sizeWatcher = isCarousel\n    ? SizeWatcher.reuse({ resizeThreshold: 10 })\n    : null;\n  const gestureWatcher = useGestures ? GestureWatcher.reuse() : null;\n  const viewWatcher = isFullscreen\n    ? ViewWatcher.reuse({ rootMargin: \"0px\", threshold: 0.3 })\n    : null;\n\n  const recalculateCarouselProps = async (t?: Element, data?: SizeData) => {\n    if (data) {\n      // there's been a resize\n      const gap =\n        MH.parseFloat(await getComputedStyleProp(element, \"gap\")) || 0;\n      const containerSize =\n        data.content[isHorizontal ? MC.S_WIDTH : MC.S_HEIGHT];\n\n      const getNumVisiblePages = (addPeek = false) =>\n        (numVisiblePages = MH.max(\n          1, // at least 1\n          MH.min(\n            MH.floor(\n              (containerSize + gap - (addPeek ? 0.5 * minPageSize : 0)) /\n                (minPageSize + gap),\n            ),\n            numPages, // and at most total number\n          ),\n        ));\n\n      numVisiblePages = getNumVisiblePages();\n      if (enablePeek && numVisiblePages < numPages) {\n        // Not all pages fit now and we will add a \"peek\" from the pages on the\n        // edge.\n        // Re-calculate with peek added in case the resultant page size when we\n        // add the \"peek\" will make it smaller than the min.\n        numVisiblePages = getNumVisiblePages(true);\n      }\n\n      debug: logger?.debug8(\"Pager resized\", {\n        gap,\n        containerSize,\n        numVisiblePages,\n      });\n    } // otherwise just a page transition\n\n    const currPageNum = widget.getCurrentPageNum();\n    const prevPageNum = widget.getPreviousPageNum();\n    const numHidden = numPages - numVisiblePages;\n    const hasPeek = enablePeek && numVisiblePages < numPages;\n\n    // centre the current page as much as possible\n    let visibleStart = currPageNum - (numVisiblePages - 1) / 2;\n    let isAtEdge = false;\n\n    if (visibleStart >= numHidden + 1) {\n      visibleStart = numHidden + 1;\n      isAtEdge = true;\n    } else if (visibleStart <= 1) {\n      visibleStart = 1;\n      isAtEdge = true;\n    }\n\n    let numTranslated = 0;\n    if (hasPeek) {\n      numTranslated = MH.max(0, visibleStart - 1 - (isAtEdge ? 0.5 : 0.25));\n    } else {\n      numTranslated =\n        (prevPageNum > currPageNum ? MH.floor : MH.ceil)(visibleStart) - 1;\n    }\n\n    const numVisibleGaps = !hasPeek\n      ? numVisiblePages - 1\n      : isAtEdge || numVisiblePages % 2 === 0\n        ? numVisiblePages\n        : numVisiblePages + 1;\n\n    const fractionalNumVisiblePages = hasPeek\n      ? numVisiblePages + 0.5\n      : numVisiblePages;\n\n    debug: logger?.debug8(\"Carousel calculations\", {\n      currPageNum,\n      prevPageNum,\n      visibleStart,\n      isAtEdge,\n      numVisiblePages,\n      numVisibleGaps,\n      numTranslated,\n    });\n\n    setData(element, PREFIX_VISIBLE_PAGES, fractionalNumVisiblePages + \"\");\n    setStyleProp(element, VAR_VISIBLE_PAGES, fractionalNumVisiblePages + \"\");\n    setStyleProp(element, VAR_VISIBLE_GAPS, numVisibleGaps + \"\");\n    setStyleProp(element, VAR_TRANSLATED_PAGES, numTranslated + \"\");\n    setStyleProp(element, VAR_TRANSLATED_GAPS, MH.floor(numTranslated) + \"\");\n  };\n\n  const getGestureOptions = (\n    directions: Direction | Direction[] | undefined,\n  ): OnGestureOptions => {\n    return {\n      devices: MH.isBoolean(useGestures) // i.e. true; if it's false, then gestureWatcher is null\n        ? undefined // all devices\n        : useGestures,\n      intents: [MC.S_DRAG, MC.S_SCROLL],\n      directions,\n      deltaThreshold: 25,\n      preventDefault,\n    };\n  };\n\n  const scrollToPager = async () => {\n    scrollWatcher.scrollTo(element, {\n      scrollable: await fetchClosestScrollable(element),\n    });\n  };\n\n  const transitionOnGesture = (target: EventTarget, data: GestureData) => {\n    const swapDirection = data.intent === MC.S_DRAG;\n\n    if (MH.includes([MC.S_LEFT, MC.S_UP], data.direction)) {\n      (swapDirection ? methods._nextPage : methods._prevPage)(data);\n    } else {\n      (swapDirection ? methods._prevPage : methods._nextPage)(data);\n    }\n  };\n\n  const addWatchers = () => {\n    gestureWatcher?.onGesture(\n      element,\n      transitionOnGesture,\n      getGestureOptions(\n        alignGestureDirection\n          ? isHorizontal\n            ? [MC.S_LEFT, MC.S_RIGHT]\n            : [MC.S_UP, MC.S_DOWN]\n          : undefined, // all directions\n      ),\n    );\n\n    sizeWatcher?.onResize(recalculateCarouselProps, { target: element });\n    viewWatcher?.onView(element, scrollToPager, { views: \"at\" });\n  };\n\n  const removeWatchers = () => {\n    gestureWatcher?.offGesture(element, transitionOnGesture);\n    sizeWatcher?.offResize(recalculateCarouselProps, element);\n    viewWatcher?.offView(element, scrollToPager);\n  };\n\n  const getPageNumForEvent = (event: Event) => {\n    const target = MH.currentTargetOf(event);\n    return MH.isElement(target)\n      ? toInt(getData(target, PREFIX_PAGE_NUMBER))\n      : 0;\n  };\n\n  const toggleClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._togglePage(pageNum);\n  };\n\n  const switchClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._goToPage(pageNum);\n  };\n\n  const nextSwitchClickListener = () => methods._nextPage();\n  const prevSwitchClickListener = () => methods._prevPage();\n\n  // SETUP ------------------------------\n\n  widget.onDisable(removeWatchers);\n  widget.onEnable(addWatchers);\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n    delDataNow(element, MC.PREFIX_ORIENTATION);\n    delDataNow(element, PREFIX_STYLE);\n    delDataNow(element, PREFIX_IS_FULLSCREEN);\n    delDataNow(element, PREFIX_USE_PARALLAX);\n    delDataNow(element, PREFIX_CURRENT_PAGE);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST_ENABLED);\n    delDataNow(element, PREFIX_TOTAL_PAGES);\n    delDataNow(element, PREFIX_VISIBLE_PAGES);\n    delStylePropNow(element, VAR_CURRENT_PAGE);\n    delStylePropNow(element, VAR_TOTAL_PAGES);\n    delStylePropNow(element, VAR_VISIBLE_PAGES);\n    delStylePropNow(element, VAR_VISIBLE_GAPS);\n    delStylePropNow(element, VAR_TRANSLATED_PAGES);\n    delStylePropNow(element, VAR_TRANSLATED_GAPS);\n\n    for (let idx = 0; idx < MH.lengthOf(pages); idx++) {\n      removeClassesNow(pages[idx], PREFIX_PAGE);\n\n      for (const [el, listener] of [\n        [pages[idx], null],\n        [toggles[idx], toggleClickListener],\n        [switches[idx], switchClickListener],\n      ] as const) {\n        if (el) {\n          delDataNow(el, PREFIX_PAGE_STATE);\n          delDataNow(el, PREFIX_PAGE_NUMBER);\n          delStylePropNow(el, VAR_PAGE_NUMBER);\n          if (listener) {\n            removeEventListenerFrom(el, MC.S_CLICK, listener);\n          }\n        }\n      }\n\n      MH.delAttr(pages[idx], S_ARIA_CURRENT);\n    }\n\n    if (nextSwitch) {\n      removeEventListenerFrom(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n    }\n\n    if (prevSwitch) {\n      removeEventListenerFrom(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n    }\n\n    removeClassesNow(element, PREFIX_ROOT);\n    if (pageContainer) {\n      removeClassesNow(pageContainer, PREFIX_PAGE_CONTAINER);\n    }\n  });\n\n  if (isCarousel) {\n    widget.onTransition(() => recalculateCarouselProps());\n  }\n\n  addWatchers();\n  addClasses(element, PREFIX_ROOT);\n  if (pageContainer) {\n    addClasses(pageContainer, PREFIX_PAGE_CONTAINER);\n  }\n\n  const numPages = MH.lengthOf(pages);\n  let numVisiblePages = numPages;\n\n  setData(element, MC.PREFIX_ORIENTATION, orientation);\n  setData(element, PREFIX_STYLE, pagerStyle);\n  setBooleanData(element, PREFIX_IS_FULLSCREEN, isFullscreen);\n  setBooleanData(element, PREFIX_USE_PARALLAX, isParallax);\n  setData(element, PREFIX_TOTAL_PAGES, numPages + \"\");\n  setStyleProp(element, VAR_TOTAL_PAGES, (numPages || 1) + \"\");\n\n  for (const page of pages) {\n    disableInitialTransition(page);\n    addClasses(page, PREFIX_PAGE);\n  }\n\n  for (let idx = 0; idx < numPages; idx++) {\n    setPageNumber(components, idx + 1);\n    setPageState(components, idx + 1, S_NEXT);\n\n    for (const [el, listener] of [\n      [toggles[idx], toggleClickListener],\n      [switches[idx], switchClickListener],\n    ] as const) {\n      if (el) {\n        addEventListenerTo(el, MC.S_CLICK, listener);\n      }\n    }\n  }\n\n  if (nextSwitch) {\n    addEventListenerTo(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n  }\n\n  if (prevSwitch) {\n    addEventListenerTo(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n  }\n\n  if (initialPage < 1 || initialPage > numPages) {\n    initialPage = 1;\n  }\n  methods._goToPage(initialPage);\n};\n\nconst getMethods = (\n  widget: Pager,\n  components: Components,\n  element: Element,\n  config: PagerConfig | undefined,\n) => {\n  const pages = components._pages;\n  const scrollWatcher = ScrollWatcher.reuse();\n  const isFullscreen = config?.fullscreen;\n  const disabledPages: Record<number, boolean> = {};\n  const callbacks = MH.newSet<WidgetCallback>();\n\n  const fetchScrollOptions = async (): Promise<ScrollOptions> => ({\n    scrollable: await fetchClosestScrollable(element),\n    // default amount is already 100%\n    asFractionOf: \"visible\",\n    weCanInterrupt: true,\n  });\n\n  let currPageNum = -1;\n  let lastPageNum = -1;\n  let lastTransition = 0;\n\n  const canTransition = (gestureData?: GestureData) => {\n    if (widget.isDisabled()) {\n      return false;\n    }\n\n    if (gestureData?.device !== MC.S_WHEEL) {\n      return true;\n    }\n\n    const timeNow = MH.timeNow();\n    if (timeNow - lastTransition > MIN_TIME_BETWEEN_WHEEL) {\n      lastTransition = timeNow;\n      return true;\n    }\n\n    return false;\n  };\n\n  const goToPage = async (pageNum: number, gestureData?: GestureData) => {\n    pageNum = toInt(pageNum, -1);\n    if (pageNum === currPageNum || !canTransition(gestureData)) {\n      return;\n    }\n\n    const numPages = MH.lengthOf(pages);\n\n    if (\n      (currPageNum === 1 && pageNum === 0) ||\n      (currPageNum === numPages && pageNum === numPages + 1)\n    ) {\n      // next/prev page beyond last/first\n      if (isFullscreen) {\n        scrollWatcher.scroll(\n          pageNum\n            ? gestureData?.direction === MC.S_RIGHT\n              ? MC.S_RIGHT\n              : MC.S_DOWN\n            : gestureData?.direction === MC.S_LEFT\n              ? MC.S_LEFT\n              : MC.S_UP,\n          await fetchScrollOptions(),\n        ); // no need to await\n      }\n\n      return;\n    }\n\n    if (isPageDisabled(pageNum) || pageNum < 1 || pageNum > numPages) {\n      // invalid or disabled\n      return;\n    }\n\n    lastPageNum = currPageNum > 0 ? currPageNum : pageNum;\n    currPageNum = pageNum;\n\n    for (const callback of callbacks) {\n      await callback.invoke(widget);\n    }\n\n    MH.delAttr(pages[lastPageNum - 1], S_ARIA_CURRENT);\n    for (\n      let n = lastPageNum;\n      n !== currPageNum;\n      currPageNum < lastPageNum ? n-- : n++\n    ) {\n      if (!isPageDisabled(n)) {\n        setPageState(\n          components,\n          n,\n          currPageNum < lastPageNum ? S_NEXT : S_COVERED,\n        );\n      }\n    }\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: numPages },\n      isPageDisabled,\n    );\n    MH.setAttr(pages[currPageNum - 1], S_ARIA_CURRENT);\n    await setPageState(components, currPageNum, S_CURRENT);\n  };\n\n  const nextPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum + 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage++;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const prevPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum - 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage--;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const isPageDisabled = (pageNum: number) => disabledPages[pageNum] === true;\n\n  const disablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || pageNum < 1 || pageNum > MH.lengthOf(pages)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = true;\n\n    if (pageNum === currPageNum) {\n      await prevPage();\n\n      if (pageNum === currPageNum) {\n        // was the first enabled one\n        await nextPage();\n\n        if (pageNum === currPageNum) {\n          // was the only enabled one\n          disabledPages[pageNum] = false;\n          return;\n        }\n      }\n    }\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: MH.lengthOf(pages) },\n      isPageDisabled,\n    );\n    await setPageState(components, pageNum, MC.S_DISABLED);\n  };\n\n  const enablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || !isPageDisabled(pageNum)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = false;\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: MH.lengthOf(pages) },\n      isPageDisabled,\n    );\n    await setPageState(\n      components,\n      pageNum,\n      pageNum < currPageNum ? S_COVERED : S_NEXT,\n    );\n  };\n\n  const togglePage = (pageNum: number) =>\n    isPageDisabled(pageNum) ? enablePage(pageNum) : disablePage(pageNum);\n\n  const onTransition = (handler: WidgetHandler) =>\n    callbacks.add(wrapCallback(handler));\n\n  return {\n    _nextPage: nextPage,\n    _prevPage: prevPage,\n    _goToPage: goToPage,\n    _disablePage: disablePage,\n    _enablePage: enablePage,\n    _togglePage: togglePage,\n    _isPageDisabled: isPageDisabled,\n    _getCurrentPage: () => pages[currPageNum - 1],\n    _getPreviousPage: () => pages[lastPageNum - 1],\n    _getCurrentPageNum: () => (MH.lengthOf(pages) > 0 ? currPageNum : 0),\n    _getPreviousPageNum: () => (MH.lengthOf(pages) > 0 ? lastPageNum : 0),\n    _onTransition: onTransition,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling pagers\n * {@link NextPage} and {@link PrevPage} advance or reverse the {@link Pager}\n * widget setup for the given element.\n *\n * {@link GoToPage} sets the {@link Pager} to the given page or toggles to the\n * last saved one.\n *\n * {@link EnablePage} and {@link DisablePage} enable or disable the given page\n * of the {@link Pager} widget setup for the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { toInt } from \"@lisn/utils/math\";\n\nimport { Pager } from \"@lisn/widgets/pager\";\nimport { fetchUniqueWidget } from \"@lisn/widgets/widget\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Advances or reverses the {@link Pager} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"next-page\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@next-page +target=#myNextButton\"></div>\n * <button id=\"myNextButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class NextPage implements Action {\n  /**\n   * Advances the pager by one page.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Reverses the pager by one page.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Undoes the last action: reverses the pager if {@link do} was last called\n   * or advances it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"next-page\", (element) => new NextPage(element));\n  }\n\n  constructor(element: Element) {\n    let toggleState = false;\n    const { _nextPage, _prevPage } = getMethods(element);\n\n    this.do = () => {\n      toggleState = true;\n      return _nextPage();\n    };\n\n    this.undo = () => {\n      toggleState = false;\n      return _prevPage();\n    };\n\n    this[MC.S_TOGGLE] = () => {\n      const method = toggleState ? _prevPage : _nextPage;\n      toggleState = !toggleState;\n      return method();\n    };\n  }\n}\n\n/**\n * Reverses or advances the {@link Pager} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"prev-page\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@prev-page +target=#myPrevButton\"></div>\n * <button id=\"myPrevButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class PrevPage implements Action {\n  /**\n   * Reverses the pager by one page.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Advances the pager by one page.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Undoes the last action: advances the pager if {@link do} was last called\n   * or reverses it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"prev-page\", (element) => new PrevPage(element));\n  }\n\n  constructor(element: Element) {\n    let toggleState = false;\n    const { _nextPage, _prevPage } = getMethods(element);\n\n    this.do = () => {\n      toggleState = true;\n      return _prevPage();\n    };\n\n    this.undo = () => {\n      toggleState = false;\n      return _nextPage();\n    };\n\n    this[MC.S_TOGGLE] = () => {\n      const method = toggleState ? _nextPage : _prevPage;\n      toggleState = !toggleState;\n      return method();\n    };\n  }\n}\n\n/**\n * Goes to a given page, or to the last one beforehand, of the {@link Pager}\n * widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"go-to-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@go-to-page:2 +target=#myGoToButton\"></div>\n * <button id=\"myGoToButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class GoToPage implements Action {\n  /**\n   * Goes to the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Goes to the last saved page number before the action was {@link do}ne. If\n   * the action had never been done, does nothing.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Goes to the page number given to the constructor, or if already at this\n   * number, goes to the last saved page if any. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"go-to-page\",\n      (element, args) => new GoToPage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page is required\");\n    }\n\n    const { _goToPage } = getMethods(element);\n\n    this.do = () => _goToPage(pageNum);\n    this.undo = () => _goToPage(-1);\n    this[MC.S_TOGGLE] = () => _goToPage(pageNum, -1);\n  }\n}\n\n/**\n * Enables or disables the given page of the {@link Pager} widget setup for the\n * given element.\n *\n * **IMPORTANT:** When constructed, it disables the given page as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"enable-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@enable-page:2 +target=#myEnableButton\"></div>\n * <button id=\"myEnableButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class EnablePage implements Action {\n  /**\n   * Enables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Disables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Enables the page number given to the constructor, if it is disabled,\n   * otherwise disables it. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"enable-page\",\n      (element, args) => new EnablePage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page number is required\");\n    }\n\n    const { _enablePage, _disablePage, _togglePage } = getMethods(element);\n    _disablePage(pageNum); // initial state\n\n    this.do = () => _enablePage(pageNum);\n    this.undo = () => _disablePage(pageNum);\n    this[MC.S_TOGGLE] = () => _togglePage(pageNum);\n  }\n}\n\n/**\n * Disables or enables the given page of the {@link Pager} widget setup for the\n * given element.\n *\n * **IMPORTANT:** When constructed, it enables the given page as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"disable-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"myDisableButton\"></button>\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@disable-page:2 +target=#myDisableButton\"></div>\n * ```\n *\n * @category Controlling pagers\n */\nexport class DisablePage implements Action {\n  /**\n   * Disables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Enables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Disables the page number given to the constructor, if it is enabled,\n   * otherwise enables it. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"disable-page\",\n      (element, args) => new DisablePage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page number is required\");\n    }\n\n    const { _enablePage, _disablePage, _togglePage } = getMethods(element);\n    _enablePage(pageNum); // initial state\n\n    this.do = () => _disablePage(pageNum);\n    this.undo = () => _enablePage(pageNum);\n    this[MC.S_TOGGLE] = () => _togglePage(pageNum);\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  let lastPageNum: number | null | undefined = null;\n\n  const nextPage = (widget: Pager | null) => widget?.nextPage();\n  const prevPage = (widget: Pager | null) => widget?.prevPage();\n\n  const goToPage = async (\n    widget: Pager | null,\n    pageNum: number,\n    altPageNum: number | null,\n  ) => {\n    const currentNum = widget?.getCurrentPageNum();\n    let targetNum: number | null | undefined =\n      currentNum === pageNum ? altPageNum : pageNum;\n    if (targetNum === -1) {\n      targetNum = lastPageNum;\n    }\n\n    if (targetNum) {\n      if (pageNum !== -1) {\n        // save the current number unless this is \"undo\"\n        lastPageNum = currentNum;\n      }\n\n      await widget?.goToPage(targetNum);\n    }\n  };\n\n  const enablePage = (widget: Pager | null, pageNum: number) =>\n    widget?.enablePage(pageNum);\n  const disablePage = (widget: Pager | null, pageNum: number) =>\n    widget?.disablePage(pageNum);\n  const togglePage = (widget: Pager | null, pageNum: number) =>\n    widget?.togglePage(pageNum);\n\n  const widgetPromise = fetchUniqueWidget(\"pager\", element, Pager);\n\n  return {\n    _nextPage: () => widgetPromise.then(nextPage),\n    _prevPage: () => widgetPromise.then(prevPage),\n\n    _goToPage: (pageNum: number, altPageNum: number | null = null) =>\n      widgetPromise.then((w) => goToPage(w, pageNum, altPageNum)),\n\n    _enablePage: (pageNum: number) =>\n      widgetPromise.then((w) => enablePage(w, pageNum)),\n    _disablePage: (pageNum: number) =>\n      widgetPromise.then((w) => disablePage(w, pageNum)),\n    _togglePage: (pageNum: number) =>\n      widgetPromise.then((w) => togglePage(w, pageNum)),\n  };\n};\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nexport * from \"@lisn/actions/add-class\";\nexport * from \"@lisn/actions/animate\";\nexport * from \"@lisn/actions/animate-play\";\nexport * from \"@lisn/actions/display\";\nexport * from \"@lisn/actions/trigger\";\nexport * from \"@lisn/actions/scroll-to\";\nexport * from \"@lisn/actions/set-attribute\";\nexport * from \"@lisn/actions/show\";\nexport * from \"@lisn/actions/open\";\nexport * from \"@lisn/actions/pager\";\n\nexport * from \"@lisn/actions/action\";\n","/**\n * @module Triggers\n *\n * @categoryDescription Input\n * {@link CheckTrigger} allows you to run actions when the user checks a target\n * checkbox input element, and undo those actions when they uncheck the checkbox.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link CheckTrigger} allows you to run actions when the user checks a target\n * checkbox input element, and undo those actions when they uncheck the checkbox.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *\n * @example\n * Add classes `active` and `checked` when the user checks the checkbox,\n * remove them when unchecked.\n *\n * ```html\n * <input type=\"checkbox\" data-lisn-on-check=\"@add-class=active,checked\"/>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <input type=\"checkbox\" class=\"lisn-on-check--@add-class=active,checked\"/>\n * ```\n *\n * @example\n * Play the animations on the element each time the user checks the next\n * element with class `checkbox` (do nothing when it's unchecked).\n *\n * ```html\n * <div data-lisn-on-check=\"@animate +one-way +target=next.checkbox\"></div>\n * <input type=\"checkbox\" class=\"checkbox\"/>\n * ```\n *\n * @example\n * Add class `used` the first time the user checks the next element with class\n * `checkbox`, and play or reverse the animations 200ms after each time the\n * user toggles the reference checkbox.\n *\n * ```html\n * <div data-lisn-on-check=\"@add-class=used +once ;\n *                          @animate +delay=200 +target=next.checkbox\"\n * ></div>\n * <input type=\"checkbox\" class=\"checkbox\"/>\n * ```\n *\n * @example\n * When the user checks the next element with class `checkbox` then add classes `c1`\n * and `c2` to the element (that the trigger is defined on) and enable trigger\n * `my-trigger` defined on this same element; undo all of that when the user unchecks\n * the reference checkbox.\n *\n * ```html\n * <div data-lisn-on-check=\"@add-class=c1,c2 @enable=my-trigger +target=next.checkbox\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <input type=\"checkbox\" class=\"checkbox\"/>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-check=\"@add-class=c1,c2 @enable=my-trigger +target=next-checkbox\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <input type=\"checkbox\" data-lisn-ref=\"checkbox\"/>\n * ```\n *\n * @category Input\n */\nexport class CheckTrigger extends Trigger {\n  readonly getConfig: () => CheckTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"check\",\n      (element, args, actions, config) =>\n        new CheckTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config?: CheckTriggerConfig,\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const target = MH.targetOf(config) ?? element;\n\n    if (!MH.isInstanceOf(target, HTMLInputElement)) {\n      return;\n    }\n\n    const onToggle = () => (target.checked ? this.run() : this.reverse());\n\n    addEventListenerTo(target, \"change\", onToggle);\n\n    this.onDestroy(() => {\n      removeEventListenerFrom(target, \"change\", onToggle);\n    });\n  }\n}\n\n/**\n * @category Input\n * @interface\n */\nexport type CheckTriggerConfig = TriggerConfig & {\n  /**\n   * The target to use for the hover action.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  target?: Element;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<CheckTriggerConfig> = (\n  element,\n) => {\n  return {\n    target: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Pointer\n * {@link ClickTrigger} allows you to run actions when a user clicks a target\n * element (first time and every other time, i.e. odd number of click), and undo\n * those actions when a user clicks the target element again (or every even\n * number of clicks). It always acts as a toggle.\n *\n * {@link PressTrigger} allows you to run actions when the user presses and\n * holds a pointing device (or their finger) on a target element, and undo those\n * actions when they release their pointing device or lift their finger off.\n *\n * {@link HoverTrigger} allows you to run actions when the user hovers overs a\n * target element, and undo those actions when their pointing device moves off\n * the target. On touch devices it acts just like {@link PressTrigger}.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport { validateBoolean } from \"@lisn/utils/validation\";\n\nimport {\n  PointerWatcher,\n  OnPointerHandler,\n} from \"@lisn/watchers/pointer-watcher\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link ClickTrigger} allows you to run actions when a user clicks a target\n * element (first time and every other time, i.e. odd number of click), and\n * undo them when a user clicks the target element again (or every even number\n * of clicks). It always acts as a toggle.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: A boolean.\n *   - `prevent-select`: A boolean.\n *\n * @example\n * Add classes `active` and `toggled-on` when the user clicks the element\n * (first time and every other time, i.e. odd number of click), remove them\n * when clicked again (or even number of click);\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=active,toggled-on\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-click--@add-class=active,toggled-on\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * clicks it.\n *\n * ```html\n * <div data-lisn-on-click=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `visited` the first time the user clicks the element, and play or\n * reverse the animations on the element 1000ms after each time the user clicks\n * it.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=visited +once ;\n *                          @animate +delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * When the user clicks the next element with class `box` then add classes `c1`\n * and `c2` to the element (that the trigger is defined on) and enable trigger\n * `my-trigger` defined on this same element; undo all of that on even number\n * of clicks on the reference box element.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class ClickTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_CLICK,\n      (element, args, actions, config) =>\n        new ClickTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config?: PointerTriggerConfig,\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_CLICK);\n  }\n}\n\n/**\n * {@link PressTrigger} allows you to run actions when the user presses and\n * holds a pointing device (or their finger) on a target element, and undo\n * those actions when they release their pointing device or lift their finger\n * off.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: boolean\n *   - `prevent-select`: boolean\n *\n * @example\n * Add classes `active` and `pressed` when the user presses and holds (with\n * mouse, finger or any pointer) the element, remove them when they release\n * the mouse.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=active,pressed\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-press--@add-class=active,pressed\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * presses on the element it.\n *\n * ```html\n * <div data-lisn-on-press=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `pressed` the first time the user presses on the element, and\n * play the animations on the element while the user is pressing on the element\n * with a delay of 100ms, reverse the animations as soon as the user releases\n * the mouse.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=pressed +once ;\n *                          @animate +do-delay=100\"\n * ></div>\n * ```\n *\n * @example\n * When the user presses and holds the next element with class `box` then add\n * classes `c1` and `c2` to the element (that the trigger is defined on) and\n * enable trigger `my-trigger` defined on this same element; undo all of that\n * when they release the mouse (or lift their finger/pointer device) from the\n * reference box element.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class PressTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_PRESS,\n      (element, args, actions, config) =>\n        new PressTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config?: PointerTriggerConfig,\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_PRESS);\n  }\n}\n\n/**\n * {@link HoverTrigger} allows you to run actions when the user hovers overs\n * a target element, and undo those actions when their pointing device moves\n * off the target. On touch devices it acts just like {@link PressTrigger}.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: boolean\n *   - `prevent-select`: boolean\n *\n * @example\n * Add classes `active` and `hovered` when the user hovers over the element,\n * remove them otherwise.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=active,hovered\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-press--@add-class=active,hovered\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * hovers over the element it.\n *\n * ```html\n * <div data-lisn-on-hover=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `hovered` the first time the user hovers over the element, and\n * play the animations on the element while the user is hovering over the\n * element with a delay of 100ms, reverse the animations as soon as the user\n * mouse leaves the element.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=hovered +once ;\n *                          @animate +do-delay=100\"\n * ></div>\n * ```\n *\n * @example\n * When the user hovers over the next element with class `box` then add classes\n * `c1` and `c2` to the element (that the trigger is defined on) and enable\n * trigger `my-trigger` defined on this same element; undo all of that when\n * their pointing device (or finger) moves off the reference element.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class HoverTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_HOVER,\n      (element, args, actions, config) =>\n        new HoverTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config?: PointerTriggerConfig,\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_HOVER);\n  }\n}\n\n/**\n * @category Pointer\n * @interface\n */\nexport type PointerTriggerConfig = TriggerConfig & {\n  /**\n   * The target to use for the hover action.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  target?: Element;\n\n  /**\n   * See {@link Watchers/PointerWatcher.OnPointerOptions | OnPointerOptions}.\n   *\n   * @defaultValue {@link PointerWatcher} default, false\n   */\n  preventDefault?: boolean;\n\n  /**\n   * See {@link Watchers/PointerWatcher.OnPointerOptions | OnPointerOptions}.\n   *\n   * @defaultValue {@link PointerWatcher} default, true\n   */\n  preventSelect?: boolean;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<PointerTriggerConfig> = (\n  element,\n) => {\n  return {\n    target: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    preventDefault: validateBoolean,\n    preventSelect: validateBoolean,\n  };\n};\n\nconst setupWatcher = (\n  widget: ClickTrigger | HoverTrigger | PressTrigger,\n  element: Element,\n  actions: Action[],\n  config: PointerTriggerConfig | undefined,\n  action: \"click\" | \"hover\" | \"press\",\n) => {\n  if (!MH.lengthOf(actions)) {\n    return;\n  }\n\n  config ??= {};\n  const target = MH.targetOf(config) ?? element;\n\n  // For clicks use the trigger's own toggle function so that it remembers ITS\n  // state rather than the odd/even clicks. Otherwise if the trigger is\n  // disabled, then clicking will \"swap\" the state.\n  let startHandler: OnPointerHandler;\n  let endHandler: OnPointerHandler;\n  if (action === MC.S_CLICK) {\n    startHandler = endHandler = widget[MC.S_TOGGLE];\n  } else {\n    startHandler = widget.run;\n    endHandler = widget.reverse;\n  }\n\n  PointerWatcher.reuse().onPointer(\n    target,\n    startHandler,\n    endHandler,\n    MH.merge(\n      {\n        actions: action,\n      },\n      omitKeys(config, { target: null }),\n    ),\n  );\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Layout\n * {@link LayoutTrigger} allows you to run actions when the viewport or a\n * target element's width or aspect ratio matches a given specification, and\n * undo those actions when the target's width or aspect ratio no longer\n * matches.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport {\n  isValidDeviceList,\n  isValidAspectRatioList,\n  getOtherDevices,\n  getOtherAspectRatios,\n} from \"@lisn/utils/layout\";\nimport { validateStringRequired } from \"@lisn/utils/validation\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport { LayoutWatcher } from \"@lisn/watchers/layout-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link LayoutTrigger} allows you to run actions when the viewport or a\n * target element's width or aspect ratio matches a given specification, and\n * undo those actions when the target's width or aspect ratio no longer\n * matches.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (required): A single {@link DeviceSpec} or\n *   {@link AspectRatioSpec}. In this case you can use a dash (\"-\") instead of\n *   space if needed (for example if using CSS classes instead of data\n *   attributes), e.g. \"min-tablet\" instead of \"min tablet\".\n *\n * - Additional trigger options:\n *   - `root`: A string element specification. See\n *     {@link Utils.getReferenceElement | getReferenceElement}.\n *\n * @example\n * Show the element when the window width matches \"tablet\" breakpoint, hide\n * otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"tablet @show\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-layout--tablet@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the window width matches \"tablet\" breakpoint,\n * hide otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"tablet @show +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `tablet` when the window width is at least \"tablet\", hide\n * otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"min tablet @add-class=tablet\"></div>\n * ```\n *\n * @example\n * Add class `mobile` when the window width is \"mobile\" or mobile-wide, add\n * class `tablet`, when it's \"tablet\" and so on; undo that otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"max mobile-wide @add-class=mobile ;\n *                           tablet @add-class=tablet ;\n *                           desktop @add-class=desktop\"\n * ></div>\n * ```\n *\n * @example\n * Show the element when window width is at least \"mobile-wide\" and at most\n * \"tablet\", hide otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"mobile-wide to tablet @show\"></div>\n * ```\n *\n * @example\n * When the aspect ratio of the next element with class `box` is square, then\n * add classes `c1` and `c2` to the element (that the trigger is defined on) and\n * enable trigger `my-trigger` defined on this same element; undo all of that\n * otherwise (on other aspect ratios of the reference root):\n *\n * ```html\n * <div data-lisn-on-layout=\"square @add-class=c1,c2 @enable=my-trigger +root=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-layout=\"square @add-class=c1,c2 @enable=my-trigger +root=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n *\n * @category Layout\n */\nexport class LayoutTrigger extends Trigger {\n  readonly getConfig: () => LayoutTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"layout\",\n      (element, args, actions, config) => {\n        return new LayoutTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            layout: validateStringRequired(\n              \"layout\",\n              MH.strReplace(\n                MH.strReplace(args[0] ?? \"\", /(min|max)-/g, \"$1 \"),\n                /-to-/g,\n                \" to \",\n              ),\n              (value) =>\n                isValidDeviceList(value) || isValidAspectRatioList(value),\n            ),\n          }),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: LayoutTriggerConfig,\n  ) {\n    const layout = config?.layout ?? \"\";\n    if (!layout) {\n      throw MH.usageError(\"'layout' is required\");\n    }\n\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    let devices: DeviceSpec | Device[] = [];\n    let aspectRatios: AspectRatioSpec | AspectRatio[] = [];\n    let otherDevices: Device[] = [];\n    let otherAspectRatios: AspectRatio[] = [];\n\n    if (isValidDeviceList(layout)) {\n      devices = layout;\n      otherDevices = getOtherDevices(layout);\n    } else {\n      aspectRatios = layout;\n      otherAspectRatios = getOtherAspectRatios(layout);\n    }\n\n    const root = config.root;\n    const watcher = LayoutWatcher.reuse({ root });\n\n    watcher.onLayout(this.run, { devices, aspectRatios });\n\n    if (MH.lengthOf(otherDevices) || MH.lengthOf(otherAspectRatios)) {\n      watcher.onLayout(this.reverse, {\n        devices: otherDevices,\n        aspectRatios: otherAspectRatios,\n      });\n    }\n  }\n}\n\n/**\n * @category Layout\n * @interface\n */\nexport type LayoutTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link DeviceSpec} or {@link AspectRatioSpec} to use. Required.\n   * See {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for\n   * accepted formats.\n   *\n   * Actions will be \"done\" when the layout of the root matches the given spec\n   * and \"undone\" otherwise.\n   */\n  layout: DeviceSpec | Device[] | AspectRatioSpec | AspectRatio[];\n\n  /**\n   * The root to use for the {@link LayoutWatcher}.\n   * See {@link Watchers/LayoutWatcher.LayoutWatcherConfig | LayoutWatcherConfig}\n   *\n   * @defaultValue {@link LayoutWatcher} default, the viewport\n   */\n  root?: HTMLElement | null;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<LayoutTriggerConfig, \"layout\">\n> = (element) => {\n  return {\n    root: async (key, value) => {\n      const root = MH.isLiteralString(value)\n        ? await waitForReferenceElement(value, element)\n        : undefined;\n      if (root && !MH.isHTMLElement(root)) {\n        throw MH.usageError(\"root must be HTMLElement\");\n      }\n      return root;\n    },\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Load\n * {@link LoadTrigger} allows you to run actions once when the page is loaded.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForPageReady } from \"@lisn/utils/dom-events\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\n/**\n * {@link LoadTrigger} allows you to run actions one when the page is loaded.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *\n * @example\n * Scroll to the given element when the page is loaded:\n *\n * ```html\n * <div data-lisn-on-load=\":scroll-to\"></div>\n * ```\n *\n * @example\n * Scroll to 100px above the given element 500ms after the page is loaded:\n *\n * ```html\n * <div data-lisn-on-load=\"@scroll-to=0,-100 +delay=500\"></div>\n * ```\n *\n * @example\n * Scroll to 100px above the given element 500ms after the page is loaded, and\n * play animations defined on it 500ms later (1000ms after it's loaded):\n *\n * ```html\n * <div data-lisn-on-load=\"@scroll-to=0,-100 +delay=500 ;\n *                         @animate +delay=1000\"\n * ></div>\n * ```\n *\n * @category Load\n */\nexport class LoadTrigger extends Trigger {\n  readonly getConfig: () => TriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"load\",\n      (element, args, actions, config) =>\n        new LoadTrigger(element, actions, config),\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config: TriggerConfig) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    waitForPageReady().then(this.run);\n  }\n}\n","/**\n * @module Triggers\n *\n * @categoryDescription Scroll\n * {@link ScrollTrigger} allows you to run actions when the user scrolls a\n * target element (or the main scrollable element) in a given direction, and\n * undo those actions when they scroll in the opposite direction.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  XYDirection,\n  CommaSeparatedStr,\n  ScrollTarget,\n} from \"@lisn/globals/types\";\n\nimport {\n  getOppositeXYDirections,\n  isValidXYDirection,\n} from \"@lisn/utils/directions\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { validateStrList, validateNumber } from \"@lisn/utils/validation\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link ScrollTrigger} allows you to run actions when the user scrolls a\n * target element (or the main scrollable element) in a given direction, and\n * undo those actions when they scroll in the opposite direction.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (optional): One or more (comma-separated) scroll directions.\n *   Note that if you do not specify any directions, then the trigger will just\n *   run once, on any scroll.\n * - Additional trigger options:\n *   - `scrollable`: A string element specification.\n *      See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `threshold`: A number.\n *\n * @example\n * Show the element when the user scrolls the page up, hide when scrolling\n * down. User scrolling left or right not trigger the action. See\n * {@link getOppositeXYDirections}:\n *\n * ```html\n * <div data-lisn-on-scroll=\"up @show\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-scroll--up@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the first time the user scrolls the page up:\n *\n * ```html\n * <div data-lisn-on-scroll=\"up @show +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `scrolled` the first time the user scrolls the page in any\n * direction (note that the `once` option is implied here), and show the\n * element 1000ms after each time the user scrolls the page up, hide it as soon\n * as they scroll down:\n *\n * ```html\n * <div data-lisn-on-scroll=\"@add-class=scrolled ;\n *                           up @show +do-delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * When the user scrolls up or down the closest ancestor with class `section`,\n * then add classes `c1` and `c2` and enable trigger `my-trigger` defined on\n * this same element; undo all of that when scrolling right or left:\n *\n * ```html\n * <div class=\"section\">\n *   <div data-lisn-on-scroll=\"up,down @add-class=c1,c2 @enable=my-trigger +scrollable=this.section\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n *   ></div>\n *</div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-ref=\"section\">\n *   <div data-lisn-on-scroll=\"up,down @add-class=c1,c2 @enable=my-trigger +scrollable=this-section\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n *   ></div>\n *</div>\n * ```\n *\n * @category Scroll\n */\nexport class ScrollTrigger extends Trigger {\n  readonly getConfig: () => ScrollTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_SCROLL,\n      (element, args, actions, config) => {\n        return new ScrollTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            directions: validateStrList(\"directions\", args, isValidXYDirection),\n          }),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config?: ScrollTriggerConfig,\n  ) {\n    config ??= {};\n\n    let directions = config.directions;\n    if (!directions) {\n      config.once = true;\n      directions = [MC.S_UP, MC.S_DOWN, MC.S_LEFT, MC.S_RIGHT];\n    }\n\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const watcher = ScrollWatcher.reuse();\n    const scrollable = config.scrollable;\n    const threshold = config.threshold;\n\n    const oppositeDirections = directions\n      ? getOppositeXYDirections(directions)\n      : [];\n\n    watcher.onScroll(this.run, {\n      directions,\n      scrollable,\n      threshold,\n    });\n\n    if (MH.lengthOf(oppositeDirections)) {\n      watcher.onScroll(this.reverse, {\n        directions: oppositeDirections,\n        scrollable,\n        threshold,\n      });\n    }\n  }\n}\n\n/**\n * @category Scroll\n * @interface\n */\nexport type ScrollTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link XYDirection}s to use as the trigger.\n   * See also {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * Actions will be \"done\" when the scroll direction is one of the given ones\n   * and \"undone\" when it's the opposite direction. E.g. for \"up\" the opposite\n   * is \"down\".\n   */\n  directions?: CommaSeparatedStr<XYDirection> | XYDirection[];\n\n  /**\n   * The scrolling element target to use for the ScrollWatcher.\n   * See {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * @defaultValue {@link ScrollWatcher} default, the main scrolling element\n   */\n  scrollable?: ScrollTarget;\n\n  /**\n   * The scroll threshold to pass to the {@link ScrollWatcher}.\n   * See also {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  threshold?: number;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<ScrollTriggerConfig, \"directions\">\n> = (element) => {\n  return {\n    scrollable: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    threshold: validateNumber,\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription View\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { ViewTarget, View, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { hasClass } from \"@lisn/utils/css-alter\";\nimport { insertGhostClone, tryWrap } from \"@lisn/utils/dom-alter\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateString,\n  validateNumList,\n} from \"@lisn/utils/validation\";\nimport {\n  getOppositeViews,\n  isValidView,\n  isValidScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport { Action } from \"@lisn/actions/action\";\nimport { Animate } from \"@lisn/actions/animate\";\nimport { AnimatePlay } from \"@lisn/actions/animate-play\";\n\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (optional): One or more (comma-separated) {@link View}s.\n *   Default is \"at\".\n * - Additional trigger options:\n *   - `target`: A string element specification for an element (see\n *     {@link Utils.getReferenceElement | getReferenceElement}) or a\n *     {@link Types.ScrollOffset | ScrollOffset}.\n *   - `root`: A string element specification. See\n *     {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `rootMargin`: A string.\n *   - `threshold`: A number or list (comma-separated) of numbers.\n *\n * @example\n * Show the element when it's in the viewport, hide otherwise.\n *\n * ```html\n * <div data-lisn-on-view=\"at @show\"></div>\n * ```\n *\n * @example\n * Same as above. \"views\" is optional and defaults to \"at\".\n *\n * ```html\n * <div data-lisn-on-view=\"@show\"></div>\n * ```\n *\n * @example\n * As above but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-view--@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the first time it enters the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@show +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `seen` the first time the element enters the viewport, and play\n * the animations defined on it 1000ms after each time it enters the viewport,\n * reverse the animations as soon as it goes out of view.\n *\n * ```html\n * <div data-lisn-on-view=\"@add-class=seen +once ;\n *                         @animate +do-delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * Add class `seen` when the viewport is at or below the element (element\n * above viewport), remove it when the viewport is above the element.\n * Element going to the left or right of the viewport will not trigger the\n * action. See {@link getOppositeViews}:\n *\n * ```html\n * <div data-lisn-on-view=\"at,below @add-class=seen\"></div>\n * ```\n *\n * @example\n * Add class `cls` when the viewport is above or to the left the element\n * (element below or to the right of the viewport), remove it when the\n * viewport is either at, below or to the right of the element.\n *\n * ```html\n * <div data-lisn-on-view=\"above,left @add-class=cls\"></div>\n * ```\n *\n * @example\n * Hide the element when the viewport is above the next element with class\n * `section`, show it when the viewport is below or at the target element.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next.section\"></div>\n * <div class=\"section\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next-section\"></div>\n * <div data-lisn-ref=\"section\"></div>\n * ```\n *\n * @example\n * Open the {@link Widgets.Openable | Openable} widget configured for this\n * element when the viewport is 75% down from the top of the page.\n *\n * ```html\n * <div data-lisn-on-view=\"@open +target=top:75%\"></div>\n * ```\n *\n * @category View\n */\nexport class ViewTrigger extends Trigger {\n  readonly getConfig: () => ViewTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"view\",\n      (element, args, actions, config) => {\n        return new ViewTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            views: validateStrList(\"views\", args, isValidView),\n          } as const),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config?: ViewTriggerConfig) {\n    super(element, actions, config);\n\n    const logger = debug\n      ? new debug.Logger({\n          name: `ViewTrigger-${formatAsString(element)}`,\n        })\n      : null;\n\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const watcher = ViewWatcher.reuse({\n      root: config?.root,\n      rootMargin: config?.rootMargin?.replace(/,/g, \" \"),\n      threshold: config?.threshold,\n    });\n\n    const target = config?.target ?? element;\n    const views = config?.views || MC.S_AT;\n    const oppositeViews = getOppositeViews(views);\n\n    const setupWatcher = (target: ViewTarget) => {\n      if (!MH.lengthOf(oppositeViews)) {\n        debug: logger?.debug6(\"Trigger can never be reversed, running now\");\n        // The action is never undone\n        this.run();\n      } else {\n        debug: logger?.debug6(\"Setting up trigger\", views, oppositeViews);\n        watcher.onView(target, this.run, { views });\n        watcher.onView(target, this.reverse, { views: oppositeViews });\n      }\n    };\n\n    // See comment in globals/settings under contentWrappingAllowed\n    let willAnimate = false;\n    for (const action of actions) {\n      if (\n        MH.isInstanceOf(action, Animate) ||\n        MH.isInstanceOf(action, AnimatePlay)\n      ) {\n        willAnimate = true;\n        break;\n      }\n    }\n\n    if (willAnimate) {\n      setupRepresentative(element).then(setupWatcher);\n    } else {\n      setupWatcher(target);\n    }\n  }\n}\n\n/**\n * @category View\n * @interface\n */\nexport type ViewTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link View} to use as the trigger.\n   * See also {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * Actions will be \"done\" when the view matches the given spec and \"undone\"\n   * otherwise. What the opposite views are depends on the given view. E.g. for\n   * \"at\", opposites are all the other ones;  for \"above\", the opposite ones\n   * are \"at\" and \"below\"; for \"at,above\" opposite is \"below\", etc.\n   *\n   * @defaultValue \"at\"\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * The target to use for the ViewWatcher. It can be a string offset\n   * specification.\n   * See {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * @defaultValue The element on which the {@link ViewTrigger} is defined\n   */\n  target?: ViewTarget;\n\n  /**\n   * The root to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  root?: Element | null;\n\n  /**\n   * The root margin to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * It can be either space-separated or comma-separated.\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  threshold?: number | number[];\n};\n\n// ----------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<ViewTriggerConfig, \"views\">\n> = (element) => {\n  return {\n    target: (key, value) =>\n      MH.isLiteralString(value) && isValidScrollOffset(value)\n        ? value\n        : ((MH.isLiteralString(value)\n            ? waitForReferenceElement(value, element)\n            : null) ?? undefined),\n    root: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    rootMargin: validateString,\n    threshold: (key, value) => validateNumList(key, value),\n  };\n};\n\nconst setupRepresentative = async (element: Element): Promise<Element> => {\n  let target: Element | null = await tryWrap(element);\n  if (!target) {\n    // Not allowed to wrap. Create a dummy hidden clone that's not animated and\n    // position it absolutely in a wrapper of size 0 that's inserted just\n    // before the actual element, so that the hidden clone overlaps the actual\n    // element's regular (pre-transformed) position.\n\n    const prev = element.previousElementSibling;\n    const prevChild = MH.childrenOf(prev)[0];\n    if (\n      prev &&\n      hasClass(prev, MC.PREFIX_WRAPPER) &&\n      prevChild &&\n      hasClass(prevChild, MC.PREFIX_GHOST)\n    ) {\n      // Already cloned by a previous animate action?\n      target = prevChild;\n    } else {\n      target = (await insertGhostClone(element))._clone;\n    }\n  }\n\n  return target;\n};\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nexport * from \"@lisn/triggers/check-trigger\";\nexport * from \"@lisn/triggers/pointer-trigger\";\nexport * from \"@lisn/triggers/layout-trigger\";\nexport * from \"@lisn/triggers/load-trigger\";\nexport * from \"@lisn/triggers/scroll-trigger\";\nexport * from \"@lisn/triggers/trigger\";\nexport * from \"@lisn/triggers/view-trigger\";\n\nexport * from \"@lisn/triggers/trigger\";\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport \"@lisn/bundle-essentials\"; // side effects\n\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport * as _actions from \"@lisn/actions/index\";\nimport * as triggers from \"@lisn/triggers/index\";\n\nexport * from \"@lisn/bundle-essentials\";\n\n// --- remove widget specific actions\nexport const actions = omitKeys(_actions, {\n  Open: true,\n  NextPage: true,\n  PrevPage: true,\n  GoToPage: true,\n  EnablePage: true,\n  DisablePage: true,\n} as const);\n\nexport * as triggers from \"@lisn/triggers/index\";\n\nactions.AddClass.register();\nactions.RemoveClass.register();\nactions.AnimatePlay.register();\nactions.AnimatePause.register();\nactions.Animate.register();\nactions.Display.register();\nactions.Undisplay.register();\nactions.ScrollTo.register();\nactions.SetAttribute.register();\nactions.Show.register();\nactions.Hide.register();\nactions.Enable.register();\nactions.Disable.register();\nactions.Run.register();\n\ntriggers.LayoutTrigger.register();\ntriggers.LoadTrigger.register();\ntriggers.CheckTrigger.register();\ntriggers.ClickTrigger.register();\ntriggers.PressTrigger.register();\ntriggers.HoverTrigger.register();\ntriggers.ScrollTrigger.register();\ntriggers.Trigger.register();\ntriggers.ViewTrigger.register();\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { hideElement } from \"@lisn/utils/css-alter\";\nimport { hideAndRemoveElement } from \"@lisn/utils/dom-alter\";\nimport { waitForPageReady } from \"@lisn/utils/dom-events\";\nimport { validateString, validateNumber } from \"@lisn/utils/validation\";\n\nimport { DOMWatcher, OnMutationOptions } from \"@lisn/watchers/dom-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as an {@link AutoHide} widget.\n *\n * The AutoHide widget automatically hides (and optionally removes) the given\n * element, or children of it that match a given selector, after a certain\n * delay.\n *\n * It executes these actions every time the matching element(s) have a change\n * of attribute or appear (are inserted) into the DOM.\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-auto-hide` class or `data-lisn-auto-hide` attribute\n * - `lisn-auto-remove` class or `data-lisn-auto-remove` attribute (enables\n *   {@link AutoHideConfig.remove})\n *\n * **NOTE:** This widget supports multiple instances per element, you can\n * specify multiple widget configurations, separated with \";\".\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This will automatically hide (with class `lisn-hide`) the element 3 seconds\n * (default delay) after it is inserted into the DOM or after it gets any\n * attributes changed on it (for example that might show it again).\n *\n * ```html\n * <div class=\"lisn-auto-hide\">\n *   Automatically hidden in 3s.\n * </div>\n * ```\n *\n * @example\n * This will automatically hide and then remove the element 3 seconds (default\n * delay) after it is inserted into the DOM.\n *\n * ```html\n * <div class=\"lisn-auto-remove\">\n *   Automatically hidden and removed in 3s.\n * </div>\n * ```\n *\n * @example\n * This will automatically\n * - hide `p` elements with class `message` 2 seconds after they are inserted\n *   or changed\n * - hide `p` elements with class `warning` 5 seconds after they are inserted\n *   or changed; and it will save that particular {@link AutoHide} widget with\n *   ID `myID` so that it can be looked up using {@link AutoHide.get}\n * - remove `p` elements with class `disposable` 3 seconds (default delay)\n *   after they are inserted or changed\n *\n * ```html\n * <div data-lisn-auto-hide=\"selector=p.message delay=2000 ;\n *                           selector=p.warning delay=5000 id=myID\"\n *      data-lisn-auto-remove=\"selector=p.disposable\">\n *   <p>Some text, this will stay.</p>\n *   <p class=\"message\">\n *     Automatically hidden in 2s.\n *   </p>\n *   <p class=\"warning\">\n *     Automatically hidden in 5s.\n *   </p>\n *   <p class=\"disposable\">\n *     Automatically hidden and removed in 3s.\n *   </p>\n * </div>\n * ```\n */\nexport class AutoHide extends Widget {\n  static get(element: Element, id: string): AutoHide | null {\n    const instance = super.get(element, id);\n    if (MH.isInstanceOf(instance, AutoHide)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    for (const [name, remove] of [\n      [WIDGET_NAME_HIDE, false],\n      [WIDGET_NAME_REMOVE, true],\n    ] as const) {\n      registerWidget(\n        name,\n        (element, config) => {\n          return new AutoHide(element, config);\n        },\n        newConfigValidator(remove),\n        { supportsMultiple: true },\n      );\n    }\n  }\n\n  constructor(element: Element, config?: AutoHideConfig) {\n    super(element, config);\n\n    const selector = config?.selector;\n\n    const watcher = DOMWatcher.create({\n      root: element,\n      subtree: selector ? true : false,\n    });\n\n    // Watch for attribute change on this element, and for relevant children\n    // being added/changed\n    const watcherOptions: OnMutationOptions = selector\n      ? {\n          selector: selector,\n          categories: [MC.S_ADDED, MC.S_ATTRIBUTE],\n          [MC.S_SKIP_INITIAL]: true,\n        }\n      : {\n          categories: [MC.S_ATTRIBUTE],\n          [MC.S_SKIP_INITIAL]: true,\n        };\n\n    const hideOrRemoveEl = config?.remove ? hideAndRemoveElement : hideElement;\n\n    const hideRelevant = () => {\n      if (this.isDisabled()) {\n        return;\n      }\n\n      const targetElements = selector\n        ? MH.querySelectorAll(element, selector)\n        : [element];\n\n      for (const elem of targetElements) {\n        hideOrRemoveEl(elem, config?.delay ?? DEFAULT_DELAY);\n      }\n    };\n\n    const addWatcher = () => watcher.onMutation(hideRelevant, watcherOptions);\n\n    const removeWatcher = () => watcher.offMutation(hideRelevant);\n\n    // ------------------------------\n\n    // Don't hide/remove before the page is loaded\n    waitForPageReady().then(() => {\n      // Hide initially\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      hideRelevant();\n      addWatcher();\n    });\n\n    this.onDisable(removeWatcher);\n    this.onEnable(() => {\n      hideRelevant();\n      addWatcher();\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type AutoHideConfig = {\n  /**\n   * An ID for the widget so that it can be looked up by element and ID using\n   * {@link AutoHide.get}. It has to be unique for each element, but you can\n   * use the same ID on different elements.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * If true, the matched elements are removed from the DOM instead of just\n   * hidden.\n   *\n   * @defaultValue false\n   */\n  remove?: boolean;\n\n  /**\n   * If given, then the elements to be hidden/removed are selected using the\n   * given `selector` starting at the container element. If not given, then\n   * the container element itself is the target to be hidden/removed.\n   *\n   * E.g. if `selector` is `p.message`, then any newly added/changed `<p>`\n   * elements with class `message` nested under the container element will be\n   * auto-hidden/removed.\n   *\n   * @defaultValue undefined\n   */\n  selector?: string;\n\n  /**\n   * How long to wait before hiding or removing the matched elements.\n   *\n   * @defaultValue 3000\n   */\n  delay?: number;\n};\n\n// ------------------------------\n\nconst WIDGET_NAME_HIDE = \"auto-hide\";\nconst WIDGET_NAME_REMOVE = \"auto-remove\";\n\nconst DEFAULT_DELAY = 3000;\n\nconst newConfigValidator = (\n  autoRemove: boolean,\n): WidgetConfigValidatorObject<AutoHideConfig> => {\n  return {\n    id: validateString,\n    remove: () => autoRemove,\n    selector: validateString,\n    delay: validateNumber,\n  };\n};\n","/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  displayElement,\n  undisplayElement,\n  addClasses,\n  removeClasses,\n  setHasModal,\n  delHasModal,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, hideAndRemoveElement } from \"@lisn/utils/dom-alter\";\nimport { waitForElement, waitForPageReady } from \"@lisn/utils/dom-events\";\nimport { validateBoolean } from \"@lisn/utils/validation\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as a {@link PageLoader} widget.\n *\n * The page loader is a full-page spinner. You would almost certainly use this\n * only once, to hide the page before it's loaded.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link PageLoader}\n * widget on a given element. Use {@link PageLoader.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-page-loader` class or `data-lisn-page-loader` attribute set on\n *   the element that constitutes the widget. The element should be empty.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This will create a page loader using the JavaScript API.\n *\n * This will work even if\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}) is false\n *\n * ```html\n * <!-- LISN should be loaded beforehand -->\n * <script>\n *   LISN.widgets.PageLoader.enableMain();\n * </script>\n * ```\n *\n * @example\n * This will create a page loader using an existing element with default\n * {@link PageLoaderConfig}.\n *\n * ```html\n * <div class=\"lisn-page-loader\"></div>\n * ```\n *\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <div data-lisn-page-loader=\"auto-remove=false\"></div>\n * ```\n */\nexport class PageLoader extends Widget {\n  /**\n   * If element is omitted, returns the instance created by {@link enableMain}\n   * if any.\n   */\n  static get(element?: Element): PageLoader | null {\n    if (!element) {\n      return mainWidget;\n    }\n\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, PageLoader)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!PageLoader.get(element)) {\n          return new PageLoader(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * Creates a new element, inserts it into the document body and configures it\n   * as a {@link PageLoader}.\n   */\n  static enableMain(config?: PageLoaderConfig) {\n    const loader = MH.createElement(\"div\");\n    const widget = new PageLoader(loader, config);\n    widget.onDestroy(() => {\n      if (mainWidget === widget) {\n        mainWidget = null;\n      }\n      return moveElement(loader);\n    });\n\n    waitForElement(MH.getBody).then((body) => {\n      if (!widget.isDestroyed()) {\n        moveElement(loader, { to: body });\n      }\n    });\n\n    mainWidget = widget;\n    return widget;\n  }\n\n  constructor(element: Element, config?: PageLoaderConfig) {\n    const destroyPromise = PageLoader.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      addClasses(element, PREFIX_ROOT);\n\n      const spinner = MH.createElement(\"div\");\n      addClasses(spinner, PREFIX_SPINNER);\n\n      moveElement(spinner, { to: element });\n      waitForElement(MH.getBody).then(setHasModal); // we could be init before body\n\n      if (config?.autoRemove ?? true) {\n        waitForPageReady()\n          .then(() => hideAndRemoveElement(element))\n          .then(this.destroy);\n      }\n\n      this.onDisable(() => {\n        undisplayElement(element);\n        if (!MH.docQuerySelector(`.${PREFIX_ROOT}`)) {\n          delHasModal();\n        }\n      });\n\n      this.onEnable(async () => {\n        await displayElement(element);\n      });\n\n      this.onDestroy(async () => {\n        moveElement(spinner); // remove\n        await removeClasses(element, PREFIX_ROOT);\n        await displayElement(element); // revert undisplay by onDisable\n      });\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type PageLoaderConfig = {\n  /**\n   * Whether to automatically hide and remove the loader when the page is\n   * ready (see {@link waitForPageReady}.\n   *\n   * @defaultValue true\n   */\n  autoRemove?: boolean;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"page-loader\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_SPINNER = MH.prefixName(\"spinner\");\n// Only one PageLoader widget per element is allowed, but Widget requires a\n// non-blank ID.\n// In fact, it doesn't make much sense to have more than 1 page loader on the\n// whole page, but we support it, hence use a class rather than a DOM ID.\nconst DUMMY_ID = PREFIXED_NAME;\nlet mainWidget: PageLoader | null = null;\n\nconst configValidator: WidgetConfigValidatorObject<PageLoaderConfig> = {\n  autoRemove: validateBoolean,\n};\n","/**\n * @module Widgets\n */\n\n// This widget finds optimal widths of flexbox children so that their heights\n// are equal or as close as possible to each other. It takes into account\n// whether they contain text (and possibly other elements, but not images) or\n// images.\n//\n// NOTE:\n//  - We assume that a given flexbox child is either a \"text container\" and\n//    contains only text and other non-image elements (such as buttons), or is\n//    an \"image container\" and contains only images.\n//  - We also assume that all the text inside a text container is the same\n//    font size as the font size of the text container.\n//\n// ~~~~~~ BACKGROUND: analysis for one text container and one image container ~~~~~~\n//\n// A text box has a fixed area, its height decreasing as width increases.\n// Whereas an image has a fixed aspect ratio, its height increasing as width\n// increases.\n//\n// We want to find an optimal configuration at which the text container (which\n// can include other elements apart from text) and image heights are equal, or\n// if not possible, at which they are as close as possible to each other while\n// satisfying as best as possible these \"guidelines\" (constraints that are not\n// enforced), based on visual appeal:\n//   - minGap, minimum gap between each item\n//   - maxWidthR, maximum ratio between the width of the widest child and the\n//     narrowest child\n//   - maxFreeR, maximum free space in the container as a percentage of its\n//     total width\n//\n// Then we set flex-basis as the optimal width (making sure this is disabled\n// when the flex direction is column). This allows for fluid width if the user\n// to configure shrink or wrap on the flexbox using CSS.\n//\n// ~~~~~~ FORMULAE: text and image width as a function of their height ~~~~~~\n//\n// For a given height, h, the widths of the text and image are:\n//\n//                 txtArea\n//   txtW(h) =  —————————————\n//              h - txtExtraH\n//\n//   imgW(h) = imgAspectR * h\n//\n// where txtExtraH comes from buttons and other non-text elements inside the\n// text container, whose height is treated as fixed (not changing with width).\n//\n// ~~~~~~ PLOT: total width as a function of height ~~~~~~\n//\n// The sum of the widths of image and text varies with their height, h, as:\n//\n//   w(h) = txtW(h) + imgW(h)\n//\n//              txtArea\n//        =  —————————————  +  imgAspectR * h\n//           h - txtExtraH\n//\n//\n//       w(h)\n//        ^\n//        | |              .\n//        | .             .\n//        |  .           .\n// flexW  +   .         .\n//        |    .       .\n//        |     .    .\n//        |       -\n//        |\n//        |———|———|—————|———————————> h\n//            h1  h0    h2\n//\n//\n// ~~~~~~ FORMULAE: height at which total width is minimum ~~~~~~\n//\n// The minimum of the function w(h) is at h = h0\n//\n//            ⌈   txtArea  ⌉\n//   h0 = sqrt| —————————— | + txtExtraH\n//            ⌊ imgAspectR ⌋\n//\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// The widths of image and text container at height = h0 are:\n//\n//   txtW(h0) = sqrt( txtArea * imgAspectR )\n//\n//   imgW(h0) = sqrt( txtArea * imgAspectR ) + imgAspectR * txtExtraH\n//            = txtW(h0) + imgAspectR * txtExtraH\n//\n// - NOTE: at if txtExtraH is 0 (i.e. the container has only text), then\n//   their widths are equal at h0; otherwise the image is wider\n//\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// There are zero, one or two values of h at which w(h) equals the flexbox\n// width, flexW. Labelled h1 and h2 above.\n//\n// ~~~~~~ FORMULAE: height at which total width is equal to flexbox width ~~~~~~\n//\n// The heights at which the sum of the widths, w(h) equals exactly flexW are:\n//\n//          -b ± sqrt( b^2 - 4ac )\n//   h2/1 = ——————————————————————\n//                  2a\n//\n// where:\n// a = imgAspectR\n// b = - ( (imgAspectR * txtExtraH) + flexW )\n// c = txtArea + (txtExtraH * flexW)\n//\n// If h1 and h2 are real, then h1 <= h0 <= h2, as shown in plot above.\n//\n// ~~~~~~ SCENARIOS: free space or overflow in the flexbox ~~~~~~\n//\n// Whether there is a solution to the above equation, i.e. whether h1 and h2\n// are real, depends on which scenario we have:\n//\n// 1. If flexW = w(h0), then h1 = h2 = h0\n// 2. If flexW < w(h0), then there is no exact solution, i.e. it's impossible\n//    to fit the text and image inside the flexbox and have them equal heights;\n//    there is overflow even at h0\n// 3. If flexW > w(h0) (as in the graph above), then at h0 there is free space\n//    in the flexbox and we can choose any height between h1 and h2\n//\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// The widths h0, h1 and h2 represent the following visual configuration:\n//   - h0: intermediate height, maximum free space in the container;\n//   - h1: minimum height (i.e. wide text and small image), no free space in\n//     the container;\n//   - h2: maximum height (i.e. narrow text and large image), no free space in\n//     the container;\n//\n// ~~~~~~ THEREFORE: approach ~~~~~~\n//\n// 1. If flexW = w(h0), i.e. h1 = h2 = h0:\n//    => we choose h0 as the height\n// 2. If flexW < w(h0), i.e. it's impossible to fit the text and image inside\n//    the flexbox and have them equal heights:\n//    => we still choose h0 as the height as that gives the least amount of\n//       overflow; user-defined CSS can control whether the items will be\n//       shrunk, the flexbox will wrap or overflow\n// 3. If flexW > w(h0), i.e. at h0 there is free space in the flexbox:\n//    => choose a height between h1 and h2 that best fits with the guidelines\n//       maxWidthR and maxFreeR\n//\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// In scenario 3 we can look at the guidelines, maxWidthR and maxFreeR.\n//\n// ~~~~~~ GUIDELINE: maxWidthR ~~~~~~\n//\n// ~~~~~~ FORMULAE: height at which text and image width are equal ~~~~~~\n//\n// The width of the text and image container are equal at height hR0:\n//\n//         txtExtraH + sqrt( txtExtraH^2  +  4 * (h0 - txtExtraH)^2 )\n// hR0  =  ——————————————————————————————————————————————————————————\n//                                    2\n//\n// ~~~~~~ FORMULAE: height at which text to image width is maxWidthR ~~~~~~\n//\n// For heights < hR0, i.e. text becomes wider than the image, at some point the\n// ratio of text width to image width becomes maxWidthR. This happens at hR1.\n//\n//                         ⌈                 4 * (h0 - txtExtraH)^2 ⌉\n//         txtExtraH + sqrt| txtExtraH^2  +  —————————————————————— |\n//                         ⌊                        maxWidthR       ⌋\n// hR1  =  ——————————————————————————————————————————————————————————\n//                                    2\n//\n// ~~~~~~ FORMULAE: height at which image to text width is maxWidthR ~~~~~~\n//\n// For heights > hR0, i.e. text becomes narrower than the image, at some point\n// the ratio of image width to text width becomes maxWidthR. This happens at hR2.\n//\n//         txtExtraH + sqrt( txtExtraH^2  +  4 * maxWidthR * (h0 - txtExtraH)^2 )\n// hR2  =  ——————————————————————————————————————————————————————————————————————\n//                                        2\n//\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// NOTE:\n// - hR1 <= hR0 <= hR2 && hR0 <= h0\n// - hR0, hR1 and hR2 are the first (larger) roots of the quadratic equation\n//   with coefficients:\n//     a = imgAspectR * R\n//     b = - imgAspectR * txtExtraH * R\n//     c = - textArea\n//   where R = 1 gives hR0, R = maxWidthR gives hR1 and R = 1 / maxWidthR gives hR2\n// - The smaller roots of the equation should be negative, so we ignore them\n//\n// ~~~~~~ GUIDELINE: maxFreeR ~~~~~~\n//\n// ~~~~~~ FORMULAE: free space in flexbox relative to its width ~~~~~~\n//\n// The percentage of free space in the container is:\n//\n//           flexW - w(h)\n// freeR  =  ————————————\n//              flexW\n//\n//\n//                             txtArea\n//                flexW  -  —————————————  - imgAspectR * h\n//                          h - txtExtraH\n//             =  —————————————————————————————————————————\n//                                flexW\n//\n// ~~~~~~ FORMULAE: height at which relative free space is maxFreeR ~~~~~~\n//\n// This would be equal to maxFreeR at hF1 and hF2:\n//\n//          -b ± sqrt( b^2 - 4ac )\n//   hF2/1 = ——————————————————————\n//                  2a\n//\n// where:\n// a = imgAspectR\n// b = - ( (imgAspectR * txtExtraH) + ( flexW * (1 - maxFreeR) ) )\n// c = txtArea + ( txtExtraH * flexW * (1 - maxFreeR) )\n//\n// If hF1 and hF2 are real, then h1 < hF1 <= h0 <= hF2 < h2.\n//\n// ~~~~~~ THEREFORE: choosing a height in scenario 3 ~~~~~~\n//\n// So in scenario 3 we can choose any height h between\n//\n//   max(h1, hR1, hF1)  and  min(h2, hR2, hF2)\n//\n// Note, it's possible that max(h1, hR1, hF1) is greater than min(h2, hR2, hF2),\n// e.g. if hF1 > hR2 or hR1 > hF2.\n//\n// This will make the text and image equal height, fitting in the flexbox, and\n// if possible, satisfying both maxFreeR and maxWidthR.\n//\n// Here we choose the smallest height possible, which would result in the\n// larger ratio between text width and image width, but it will satisfy the\n// constraints maxFreeR and maxWidthR, so that is ok.\n//\n// ~~~~~~ GENERALISING: for more than one text and/or image container ~~~~~~\n//\n// We can generalise the above in order to find an approximate solution for the\n// case of multiple text or image containers (an exact solution would require\n// solving a polynomial of degree equal to the number of elements).\n//\n// If we imaging putting all text in one container and all images in another\n// container we are back at the above exact solutions for a single text and\n// image container.\n//\n// We can solve for the following parameters:\n// - txtArea:    total text area\n//               = sum_i(txtArea_i)\n//\n// - txtExtraH:  weighted average extra height\n//               = sum_i(txtExtraH_i * txtArea_i) / txtArea\n//\n// - imgAspectR: total image aspect ratio (for horizontally laid out image\n//               containers)\n//               = sum_i(imgAspectR_i)\n//\n// ~~~~~~ CASE 1: only images containers ~~~~~~\n// If we have only image containers, we solve for the optimal height as follows:\n//\n//   flexW = imgAspectR * h\n//\n//                   flexW\n//   => hIdeal  =  ——————————\n//                 imgAspectR\n//\n// ~~~~~~ CASE 2: only text containers ~~~~~~\n// If we have only text containers, we solve for the optimal height as follows:\n//\n//                  txtArea\n//   flexW  =  ——————————————————\n//             hIdeal - txtExtraH\n//\n//                 txtArea\n//   => hIdeal  =  ———————  +  txtExtraH\n//                  flexW\n//\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Once we've found the optimal height h, we calculate the individual widths of\n// the flexbox children as:\n//\n//                  txtArea_i\n//   txtW_i(h) =  —————————————\n//                h - txtExtraH_i\n//\n//   imgW_i(h) = imgAspectR_i * h\n//\n// ~~~~~~ IMPLEMENTATION ~~~~~~\n//\n// We go through the flexbox children and determine whether a child is a \"text\n// container\" or an \"image container\".\n//\n// For image containers, we measure the width and height and calculate the\n// aspect ratio using these.\n//\n// For text containers, we measure their width and height. We calculate the\n// text area by measuring the size of all children of the text container that\n// are deemed to contain only text (or if the entire text container is deemed\n// to contain only text, then we take its size). Then we sum the areas of\n// all such text-only boxes.\n//\n// To determine the extra height in the text container, we take the total\n// height of all text-only boxes inside it, and we subtract that from its\n// measured height.\n//\n// NOTE:\n// - This does not work if the flexbox children are set to align stretch,\n//   because in such cases there would be free vertical space in the container\n//   that shouldn't be counted.\n// - If the flexbox children or any of their descendants have paddings and\n//   margins, then this calculation would only work if the paddings/margins\n//   inside text containers are absolute and only on top and bottom, and\n//   paddings/margins inside image containers are in percentages and only on\n//   descendants of the image container. Otherwise the image aspect ratio and the\n//   extra text height would not be constant, and there may be extra width in\n//   the text container. It is very tricky to take all of this into account. So\n//   we ignore such cases and assume constant image aspect ratio and constant\n//   text area and text container extra height.\n//\n// We use resize observers to get the size of relevant elements and\n// re-calculate as needed.\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  addClasses,\n  removeClasses,\n  getData,\n  setData,\n  delData,\n  setNumericStyleJsVars,\n  getComputedStyleProp,\n} from \"@lisn/utils/css-alter\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport { logError } from \"@lisn/utils/log\";\nimport { isValidNum, toNumWithBounds, quadraticRoots } from \"@lisn/utils/math\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport { validateNumber } from \"@lisn/utils/validation\";\n\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\nimport { LoggerInterface } from \"@lisn/debug/types\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * Configures the given element as a {@link SameHeight} widget.\n *\n * The SameHeight widget sets up the given element as a flexbox and sets the\n * flex basis of its components so that their heights are as close as possible\n * to each other. It tracks their size (see {@link SizeWatcher}) and\n * continually updates the basis as needed.\n *\n * When calculating the best flex basis that would result in equal heights,\n * SameHeight determines whether a flex child is mostly text or mostly images\n * since the height of these scales in opposite manner with their width.\n * Therefore, the components of the widget should contain either mostly text or\n * mostly images.\n *\n * The widget should have more than one item and the items must be immediate\n * children of the container element.\n *\n * SameHeight tries to automatically determine if an item is mostly text or\n * mostly images based on the total display text content, but you can override\n * this in two ways:\n * 1. By passing a map of elements as {@link SameHeightConfig.items | items}\n *    instead of an array, and setting the value for each to either `\"text\"` or\n *    `\"image\"`\n * 2. By setting the `data-lisn-same-height-item` attribute to `\"text\"` or\n *   `\"image\"` on the children. **NOTE** however that when auto-discovering the\n *   items (i.e. when you have not explicitly passed a list/map of items), if\n *   you set the `data-lisn-same-height-item` attribute on _any_ child you must\n *   also add this attribute to all other children that are to be used by the\n *   widget. Other children (that don't have this attribute) will be ignored\n *   and assumed to be either zero-size or position absolute/fixed.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link SameHeight}\n * widget on a given element. Use {@link SameHeight.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * **IMPORTANT:** The element you pass will be set to `display: flex` and its\n * children will get `box-sizing: border-box` and continually updated\n * `flex-basis` style. You can add additional CSS to the element or its\n * children if you wish. For example you may wish to set `flex-wrap: wrap` on\n * the element and a `min-width` on the children.\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see {@link settings.autoWidgets}), the\n * following CSS classes or data attributes are recognized:\n * - `lisn-same-height` class or `data-lisn-same-height` attribute set on the\n *   container element that constitutes the widget\n *\n * When using auto-widgets, the elements that will be used as items are\n * discovered in the following way:\n * 1. The immediate children of the top-level element that constitutes the\n *    widget that have the `lisn-same-height-item` class or\n *    `data-lisn-same-height-item` attribute are taken.\n * 2. If none of the root's children have this class or attribute, then all of\n *    the immediate children of the widget element except any `script` or\n *    `style` elements are taken as the items.\n *\n * See below examples for what values you can use set for the data attribute\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple SameHeight widget with one text and one image child.\n *\n * ```html\n * <div class=\"lisn-same-height\">\n *   <div>\n *     <p>\n *       Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n *       eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n *       minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n *       aliquip ex ea commodo consequat. Duis aute irure dolor in\n *       reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n *       pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n *       culpa qui officia deserunt mollit anim id est laborum.\n *     </p>\n *   </div>\n *\n *   <div>\n *     <img\n *       src=\"https://www.wikipedia.org/portal/wikipedia.org/assets/img/Wikipedia-logo-v2@1.5x.png\"\n *     />\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a SameHeight widget with the flexbox children specified\n * explicitly (and one ignored), as well as having all custom settings.\n *\n * ```html\n * <div data-lisn-same-height=\"diff-tolerance=20\n *                             | resize-threshold=10\n *                             | debounce-window=50\n *                             | min-gap=50\n *                             | max-free-r=0.2\n *                             | max-width-r=3.2\">\n *   <div>Example ignored child</div>\n *\n *   <div data-lisn-same-height-item><!-- Will be detected as text anyway -->\n *     <p>\n *       Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n *       eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n *       minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n *       aliquip ex ea commodo consequat. Duis aute irure dolor in\n *       reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n *       pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n *       culpa qui officia deserunt mollit anim id est laborum.\n *     </p>\n *   </div>\n *\n *   <!-- Explicitly set to image type, though it will be detected as such -->\n *   <div data-lisn-same-height-item=\"image\">\n *     <img\n *       src=\"https://www.wikipedia.org/portal/wikipedia.org/assets/img/Wikipedia-logo-v2@1.5x.png\"\n *     />\n *   </div>\n *\n *   <!-- Explicitly set to text type, because it will NOT be detected as such (text too short). -->\n *   <div data-lisn-same-height-item=\"text\">\n *     <p>\n *       Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n *     </p>\n *   </div>\n * </div>\n * ```\n */\nexport class SameHeight extends Widget {\n  /**\n   * Switches the flexbox to vertical (column) mode.\n   *\n   * You can alternatively do this by setting the\n   * `data-lisn-orientation=\"vertical\"` attribute on the element at any time.\n   *\n   * You can do this for example as part of a trigger:\n   *\n   * @example\n   * ```html\n   * <div class=\"lisn-same-height\"\n   *      data-lisn-on-layout=\"max-mobile-wide:set-attribute=data-lisn-orientation#vertical\">\n   *      <!-- ... children -->\n   * </div>\n   * ```\n   */\n  readonly toColumn: () => Promise<void>;\n\n  /**\n   * Switches the flexbox back to horizontal (row) mode, which is the default.\n   *\n   * You can alternatively do this by deleting the\n   * `data-lisn-orientation` attribute on the element, or setting it to\n   * `\"horizontal\"` at any time.\n   */\n  readonly toRow: () => Promise<void>;\n\n  /**\n   * Returns the elements used as the flex children.\n   */\n  readonly getItems: () => Element[];\n\n  /**\n   * Returns a map of the elements used as the flex children with their type.\n   */\n  readonly getItemConfigs: () => Map<Element, \"text\" | \"image\">;\n\n  /**\n   * If the element is already configured as a SameHeight widget, the widget\n   * instance is returned. Otherwise null.\n   */\n  static get(containerElement: Element): SameHeight | null {\n    const instance = super.get(containerElement, DUMMY_ID);\n    if (MH.isInstanceOf(instance, SameHeight)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (MH.isHTMLElement(element)) {\n          if (!SameHeight.get(element)) {\n            return new SameHeight(element, config);\n          }\n        } else {\n          logError(\n            MH.usageError(\n              \"Only HTMLElement is supported for SameHeight widget\",\n            ),\n          );\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  constructor(containerElement: HTMLElement, config?: SameHeightConfig) {\n    const destroyPromise = SameHeight.get(containerElement)?.destroy();\n    super(containerElement, { id: DUMMY_ID });\n\n    const items = getItemsFrom(containerElement, config?.items);\n\n    if (MH.sizeOf(items) < 2) {\n      throw MH.usageError(\"SameHeight must have more than 1 item\");\n    }\n\n    for (const item of items.keys()) {\n      if (MH.parentOf(item) !== containerElement) {\n        throw MH.usageError(\n          \"SameHeight's items must be its immediate children\",\n        );\n      }\n    }\n\n    fetchConfig(containerElement, config).then((fullConfig) => {\n      (destroyPromise || MH.promiseResolve()).then(() => {\n        if (this.isDestroyed()) {\n          return;\n        }\n\n        init(this, containerElement, items, fullConfig);\n      });\n    });\n\n    this.toColumn = () =>\n      setData(containerElement, MC.PREFIX_ORIENTATION, MC.S_VERTICAL);\n\n    this.toRow = () => delData(containerElement, MC.PREFIX_ORIENTATION);\n\n    this.getItems = () => [...items.keys()];\n    this.getItemConfigs = () => MH.newMap([...items.entries()]);\n  }\n}\n\n/**\n * @interface\n */\nexport type SameHeightConfig = {\n  /**\n   * The elements that will make up the items. They **MUST** be immediate\n   * children of the container element.\n   *\n   * The widget should have more than one item.\n   *\n   * If this is not specified, then\n   * 1. The immediate children of the top-level element that constitutes the\n   *    widget that have the `lisn-same-height-item` class or\n   *    `data-lisn-same-height-item` attribute are taken.\n   * 2. If none of the root's children have this class or attribute, then all of\n   *    the immediate children of the widget element except any `script` or\n   *    `style` elements are taken as the items.\n   */\n  items?: Element[] | Map<Element, \"image\" | \"text\">;\n\n  /**\n   * After setting the flex basis of the children and their size updates, in\n   * case the resultant height differs from the predicted calculated one by\n   * `diffTolerance` in pixels, then the calculations are re-run using the new\n   * sizes. Calculations are re-run at most once only.\n   *\n   * Differences between the predicted and resultant height would happen if the\n   * children contain a mixture of text and images or if there are margins or\n   * paddings that don't scale in the same way as the content.\n   *\n   * @defaultValue {@link settings.sameHeightDiffTolerance}\n   */\n  diffTolerance?: number;\n\n  /**\n   * The `resizeThreshold` to pass to the {@link SizeWatcher}.\n   *\n   * @defaultValue {@link settings.sameHeightResizeThreshold}\n   */\n  resizeThreshold?: number;\n\n  /**\n   * The `debounceWindow` to pass to the {@link SizeWatcher}.\n   *\n   * @defaultValue {@link settings.sameHeightDebounceWindow}\n   */\n  debounceWindow?: number;\n\n  /**\n   * Minimum gap between the flex items. Note that setting this to 0 while at\n   * the same time setting `flex-wrap` to `wrap` (or `wrap-reverse`) on the\n   * element may lead to premature/unnecessary wrapping.\n   *\n   * Note that this is not strictly enforced, and is only used in finding\n   * optimal height based on other constraints. If you want to enforce this gap,\n   * set it as a `column-gap` CSS rule.\n   *\n   * @defaultValue The effective `column-gap` on the container element style or\n   *               if none, {@link settings.sameHeightMinGap}\n   */\n  minGap?: number;\n\n  /**\n   * Maximum ratio between the free space in the flex container and its total\n   * width. You can set this to a negative number to disable this restriction.\n   *\n   * It has to be < 1. Otherwise it is invalid and disables this restriction.\n   *\n   * Note that this is not strictly enforced, and is only used in finding\n   * optimal height based on other constraints.\n   *\n   * @defaultValue {@link settings.sameHeightMaxFreeR}\n   */\n  maxFreeR?: number;\n\n  /**\n   * Maximum ratio between the width of the widest item and the narrowest item.\n   * You can set this to 0 or a negative number to disable this restriction.\n   *\n   * It has to be >= 1. Otherwise it is invalid and disables this restriction.\n   *\n   * Note that this is not strictly enforced, and is only used in finding\n   * optimal height based on other constraints.\n   *\n   * @defaultValue {@link settings.sameHeightMaxWidthR}\n   */\n  maxWidthR?: number;\n};\n\n// ------------------------------\n\ntype SameHeightConfigInternal = {\n  _minGap: number;\n  _diffTolerance: number;\n  _resizeThreshold: number;\n  _debounceWindow: number;\n  _maxFreeR: number;\n  _maxWidthR: number;\n};\n\ntype ItemProperties = {\n  _type: \"\" | \"image\" | \"text\";\n  _width: number;\n  _height: number;\n  _aspectR: number;\n  _area: number;\n  _extraH: number;\n  _components: Element[];\n};\n\ntype AverageMeasurements = {\n  _tArea: number;\n  _tExtraH: number;\n  _imgAR: number;\n  _flexW: number;\n  _nItems: number;\n};\n\nconst WIDGET_NAME = \"same-height\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_ITEM = `${PREFIXED_NAME}__item`;\nconst PREFIX_ITEM__FOR_SELECT = `${PREFIXED_NAME}-item`;\n\nconst S_TEXT = \"text\";\nconst S_IMAGE = \"image\";\n\n// Only one SameHeight widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\n// We consider elements that have text content of at least <MIN_CHARS_FOR_TEXT>\n// characters to be text.\nconst MIN_CHARS_FOR_TEXT = 100;\n\nconst configValidator: WidgetConfigValidatorObject<SameHeightConfig> = {\n  diffTolerance: validateNumber,\n  resizeThreshold: validateNumber,\n  [MC.S_DEBOUNCE_WINDOW]: validateNumber,\n  minGap: validateNumber,\n  maxFreeR: validateNumber,\n  maxWidthR: validateNumber,\n};\n\nconst isText = (element: Element) =>\n  getData(element, PREFIX_ITEM__FOR_SELECT) === S_TEXT ||\n  (getData(element, PREFIX_ITEM__FOR_SELECT) !== S_IMAGE &&\n    MH.isHTMLElement(element) &&\n    MH.lengthOf(element.innerText) >= MIN_CHARS_FOR_TEXT);\n\nconst areImagesLoaded = (element: Element) => {\n  for (const img of element.querySelectorAll(\"img\")) {\n    // Don't rely on img.complete since sometimes this returns false even\n    // though the image is loaded and has a size. Just check the size.\n    if (\n      img.naturalWidth === 0 ||\n      img.width === 0 ||\n      img.naturalHeight === 0 ||\n      img.height === 0\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst fetchConfig = async (\n  containerElement: HTMLElement,\n  userConfig: SameHeightConfig | undefined,\n): Promise<SameHeightConfigInternal> => {\n  const colGapStr = await getComputedStyleProp(containerElement, \"column-gap\");\n  const minGap = getNumValue(\n    MH.strReplace(colGapStr, /px$/, \"\"),\n    settings.sameHeightMinGap,\n  );\n\n  return {\n    _minGap: toNumWithBounds(userConfig?.minGap ?? minGap, { min: 0 }, 10),\n    _maxFreeR: toNumWithBounds(\n      userConfig?.maxFreeR ?? settings.sameHeightMaxFreeR,\n      { min: 0, max: 0.9 },\n      -1,\n    ),\n    _maxWidthR: toNumWithBounds(\n      userConfig?.maxWidthR ?? settings.sameHeightMaxWidthR,\n      { min: 1 },\n      -1,\n    ),\n    _diffTolerance:\n      userConfig?.diffTolerance ?? settings.sameHeightDiffTolerance,\n    _resizeThreshold:\n      userConfig?.resizeThreshold ?? settings.sameHeightResizeThreshold,\n    _debounceWindow:\n      userConfig?.debounceWindow ?? settings.sameHeightDebounceWindow,\n  };\n};\n\nconst getNumValue = (strValue: string | null, defaultValue: number): number => {\n  const num = strValue ? MH.parseFloat(strValue) : NaN;\n  return MH.isNaN(num) ? defaultValue : num;\n};\n\nconst findItems = (containerElement: HTMLElement) => {\n  const items = [\n    ...MH.querySelectorAll(\n      containerElement,\n      getDefaultWidgetSelector(PREFIX_ITEM__FOR_SELECT),\n    ),\n  ];\n\n  if (!MH.lengthOf(items)) {\n    items.push(...getVisibleContentChildren(containerElement));\n  }\n\n  return items;\n};\n\nconst getItemsFrom = (\n  containerElement: HTMLElement,\n  inputItems: Element[] | Map<Element, \"image\" | \"text\"> | undefined,\n) => {\n  const itemMap = MH.newMap<Element, \"image\" | \"text\">();\n\n  inputItems = inputItems || findItems(containerElement);\n\n  const addItem = (item: Element, itemType?: \"text\" | \"image\") => {\n    itemType = itemType || (isText(item) ? S_TEXT : S_IMAGE);\n    itemMap.set(item, itemType);\n  };\n\n  if (MH.isArray(inputItems)) {\n    for (const item of inputItems) {\n      addItem(item);\n    }\n  } else if (MH.isInstanceOf(inputItems, Map)) {\n    for (const [item, itemType] of inputItems.entries()) {\n      addItem(item, itemType);\n    }\n  }\n\n  return itemMap;\n};\n\nconst init = (\n  widget: SameHeight,\n  containerElement: HTMLElement,\n  items: Map<Element, \"image\" | \"text\">,\n  config: SameHeightConfigInternal,\n) => {\n  const logger = debug\n    ? new debug.Logger({\n        name: `SameHeight-${formatAsString(containerElement)}`,\n      })\n    : null;\n\n  const diffTolerance = config._diffTolerance;\n  const debounceWindow = config._debounceWindow;\n\n  const sizeWatcher = SizeWatcher.reuse({\n    [MC.S_DEBOUNCE_WINDOW]: debounceWindow,\n    resizeThreshold: config._resizeThreshold,\n  });\n\n  const allItems = MH.newMap<Element, ItemProperties>();\n\n  let callCounter = 0;\n  let isFirstTime = true;\n  let lastOptimalHeight = 0;\n  let hasScheduledReset = false;\n  let counterTimeout: ReturnType<typeof setTimeout> | null = null;\n\n  // ----------\n\n  const resizeHandler = (element: Element, sizeData: SizeData) => {\n    // Since the SizeWatcher calls us once for every element, we batch the\n    // re-calculations so they are done once in every cycle.\n    // Allow the queue of ResizeObserverEntry in the SizeWatcher to be\n    // emptied, and therefore to ensure we have the latest size for all\n    // elements.\n    if (!hasScheduledReset) {\n      debug: logger?.debug7(\"Scheduling calculations\", callCounter);\n      hasScheduledReset = true;\n\n      MH.setTimer(() => {\n        hasScheduledReset = false;\n\n        if (callCounter > 1) {\n          debug: logger?.debug7(\"Already re-calculated once, skipping\");\n          callCounter = 0;\n          return;\n        }\n\n        callCounter++;\n        if (counterTimeout) {\n          MH.clearTimer(counterTimeout);\n        }\n\n        const measurements = calculateMeasurements(\n          containerElement,\n          allItems,\n          isFirstTime,\n          logger,\n        );\n\n        const height = measurements\n          ? getOptimalHeight(measurements, config, logger)\n          : null;\n\n        if (height && MH.abs(lastOptimalHeight - height) > diffTolerance) {\n          // Re-set widths again. We may be called again in the next cycle if\n          // the change in size exceeds the resizeThreshold.\n          lastOptimalHeight = height;\n          isFirstTime = false;\n          setWidths(height); // no need to await\n\n          // If we are _not_ called again in the next cycle (just after\n          // debounceWindow), then reset the counter. It means the resultant\n          // change in size did not exceed the SizeWatcher threshold.\n          counterTimeout = MH.setTimer(() => {\n            callCounter = 0;\n          }, debounceWindow + 50);\n        } else {\n          // Done, until the next time elements are resized\n          callCounter = 0;\n        }\n      }, 0);\n    }\n\n    // Save the size of the item\n    const properties = allItems.get(element);\n    if (!properties) {\n      logError(MH.bugError(\"Got SizeWatcher call for unknown element\"));\n      return;\n    }\n\n    properties._width =\n      sizeData.border[MC.S_WIDTH] || sizeData.content[MC.S_WIDTH];\n    properties._height =\n      sizeData.border[MC.S_HEIGHT] || sizeData.content[MC.S_HEIGHT];\n\n    debug: logger?.debug7(\"Got size\", element, properties);\n  };\n\n  // ----------\n\n  const observeAll = () => {\n    isFirstTime = true;\n\n    for (const element of allItems.keys()) {\n      sizeWatcher.onResize(resizeHandler, { target: element });\n    }\n  };\n\n  // ----------\n\n  const unobserveAll = () => {\n    for (const element of allItems.keys()) {\n      sizeWatcher.offResize(resizeHandler, element);\n    }\n  };\n\n  // ----------\n\n  const setWidths = (height: number) => {\n    for (const [element, properties] of allItems.entries()) {\n      if (MH.parentOf(element) === containerElement) {\n        const width = getWidthAtH(element, properties, height);\n        debug: logger?.debug9(\n          \"Setting width property\",\n          element,\n          properties,\n          width,\n        );\n        setNumericStyleJsVars(\n          element,\n          { sameHeightW: width },\n          { _units: \"px\" },\n        );\n      }\n    }\n  };\n\n  // SETUP ------------------------------\n\n  widget.onDisable(unobserveAll);\n  widget.onEnable(observeAll);\n\n  widget.onDestroy(async () => {\n    for (const element of allItems.keys()) {\n      if (MH.parentOf(element) === containerElement) {\n        // delete the property and attribute\n        await setNumericStyleJsVars(element, { sameHeightW: NaN });\n        await removeClasses(element, PREFIX_ITEM);\n      }\n    }\n\n    allItems.clear();\n\n    await removeClasses(containerElement, PREFIX_ROOT);\n  });\n\n  // Find all relevant items: the container, its direct children and the\n  // top-level text only elements.\n  const getProperties = (itemType: \"\" | \"image\" | \"text\"): ItemProperties => {\n    return {\n      _type: itemType,\n      _width: NaN,\n      _height: NaN,\n      _aspectR: NaN,\n      _area: NaN,\n      _extraH: NaN,\n      _components: [],\n    };\n  };\n\n  allItems.set(containerElement, getProperties(\"\"));\n\n  for (const [item, itemType] of items.entries()) {\n    addClasses(item, PREFIX_ITEM);\n\n    const properties: ItemProperties = getProperties(itemType);\n    allItems.set(item, properties);\n\n    if (itemType === S_TEXT) {\n      properties._components = getTextComponents(item);\n      for (const child of properties._components) {\n        allItems.set(child, getProperties(\"\"));\n      }\n    }\n  }\n\n  addClasses(containerElement, PREFIX_ROOT);\n  observeAll();\n};\n\n/**\n * Find the top-level text-only elements that are descendants of the given one.\n */\nconst getTextComponents = (element: Element): Element[] => {\n  const components: Element[] = [];\n  for (const child of getVisibleContentChildren(element)) {\n    if (isText(child)) {\n      components.push(child);\n    } else {\n      components.push(...getTextComponents(child));\n    }\n  }\n\n  return components;\n};\n\nconst calculateMeasurements = (\n  containerElement: HTMLElement,\n  allItems: Map<Element, ItemProperties>,\n  isFirstTime: boolean,\n  logger: LoggerInterface | null,\n): AverageMeasurements | null => {\n  if (getData(containerElement, MC.PREFIX_ORIENTATION) === MC.S_VERTICAL) {\n    debug: logger?.debug8(\"In vertical mode\");\n    return null;\n  }\n\n  debug: logger?.debug7(\"Calculating measurements\");\n  // initial values\n  let tArea = NaN,\n    tExtraH = 0,\n    imgAR = NaN,\n    flexW = NaN,\n    nItems = 0;\n\n  for (const [element, properties] of allItems.entries()) {\n    const width = properties._width;\n    const height = properties._height;\n\n    if (element === containerElement) {\n      flexW = width;\n      nItems = MH.lengthOf(getVisibleContentChildren(element));\n\n      //\n    } else if (properties._type === S_TEXT) {\n      let thisTxtArea = 0,\n        thisTxtExtraH = 0;\n      const components = properties._components;\n\n      if (MH.lengthOf(components)) {\n        for (const component of properties._components) {\n          const cmpProps = allItems.get(component);\n          if (cmpProps) {\n            thisTxtArea += cmpProps._width * cmpProps._height;\n          } else {\n            logError(MH.bugError(\"Text component not observed\"));\n          }\n        }\n        thisTxtExtraH = height - thisTxtArea / width;\n      } else {\n        thisTxtArea = width * height;\n      }\n\n      properties._area = thisTxtArea;\n      properties._extraH = thisTxtExtraH;\n\n      tArea = (tArea || 0) + thisTxtArea;\n      tExtraH += thisTxtExtraH;\n\n      //\n    } else if (properties._type === S_IMAGE) {\n      if (isFirstTime && !areImagesLoaded(element)) {\n        debug: logger?.debug8(\"Images not loaded\");\n        return null;\n      }\n\n      const thisAspectR = width / height;\n      imgAR = (imgAR || 0) + thisAspectR;\n      properties._aspectR = thisAspectR;\n\n      //\n    } else {\n      // skip grandchildren (text components), here\n      continue;\n    }\n\n    debug: logger?.debug8(\"Examined\", properties, {\n      tArea,\n      tExtraH,\n      imgAR,\n      flexW,\n    });\n  }\n\n  return {\n    _tArea: tArea,\n    _tExtraH: tExtraH,\n    _imgAR: imgAR,\n    _flexW: flexW,\n    _nItems: nItems,\n  };\n};\n\nconst getWidthAtH = (\n  element: Element,\n  properties: ItemProperties,\n  targetHeight: number,\n): number =>\n  properties._type === S_TEXT\n    ? properties._area / (targetHeight - (properties._extraH || 0))\n    : properties._aspectR * targetHeight;\n\nconst getOptimalHeight = (\n  measurements: AverageMeasurements,\n  config: SameHeightConfigInternal,\n  logger: LoggerInterface | null,\n) => {\n  const tArea = measurements._tArea;\n  const tExtraH = measurements._tExtraH;\n  const imgAR = measurements._imgAR;\n  const flexW =\n    measurements._flexW - (measurements._nItems - 1) * config._minGap;\n  const maxFreeR = config._maxFreeR;\n  const maxWidthR = config._maxWidthR;\n\n  debug: logger?.debug8(\"Getting optimal height\", measurements, config);\n\n  // CASE 1: No text items\n  if (MH.isNaN(tArea)) {\n    debug: logger?.debug8(\"No text items\");\n    if (!imgAR) {\n      debug: logger?.debug8(\"Images not loaded\");\n      return NaN;\n    }\n\n    return flexW / imgAR;\n  }\n\n  // CASE 2: No images\n  if (MH.isNaN(imgAR)) {\n    debug: logger?.debug8(\"No images\");\n    return tArea / flexW + tExtraH;\n  }\n\n  if (!imgAR || !tArea) {\n    debug: logger?.debug8(\n      \"Expected both images and text, but no imgAR or tArea\",\n    );\n    return NaN;\n  }\n\n  const h0 = MH.sqrt(tArea / imgAR) + tExtraH;\n\n  // heights satisfying w(h) === flexW\n  const [h2, h1] = quadraticRoots(\n    imgAR,\n    -(imgAR * tExtraH + flexW),\n    tArea + tExtraH * flexW,\n  );\n\n  // heights satisfying maxWidthR\n  let hR0 = NaN,\n    hR1 = NaN,\n    hR2 = NaN;\n  if (maxWidthR > 0) {\n    hR0 = quadraticRoots(imgAR, -imgAR * tExtraH, -tArea)[0];\n\n    hR1 = quadraticRoots(\n      imgAR * maxWidthR,\n\n      -imgAR * tExtraH * maxWidthR,\n      -tArea,\n    )[0];\n\n    hR2 = quadraticRoots(\n      imgAR / maxWidthR,\n      (-imgAR * tExtraH) / maxWidthR,\n      -tArea,\n    )[0];\n  }\n\n  // heights satisfying maxFreeR\n  let hF2 = NaN,\n    hF1 = NaN;\n  if (maxFreeR >= 0) {\n    [hF2, hF1] = quadraticRoots(\n      imgAR,\n      -(imgAR * tExtraH + flexW * (1 - maxFreeR)),\n      tArea + tExtraH * flexW * (1 - maxFreeR),\n    );\n  }\n\n  // limits on constraints\n  const hConstr1 = MH.max(...MH.filter([h1, hR1, hF1], (v) => isValidNum(v)));\n  const hConstr2 = MH.min(...MH.filter([h2, hR2, hF2], (v) => isValidNum(v)));\n\n  // text and image widths at h0\n  const tw0 = tArea / (h0 - tExtraH);\n  const iw0 = h0 * imgAR;\n\n  // free space at h0\n  const freeSpace0 = flexW - tw0 - iw0;\n\n  debug: logger?.debug8(\"Optimal height calculations\", config, measurements, {\n    h0,\n    h1,\n    h2,\n    hR0,\n    hR1,\n    hR2,\n    hF1,\n    hF2,\n    hConstr1,\n    hConstr2,\n    tw0,\n    iw0,\n    freeSpace0,\n  });\n\n  // ~~~~ Some sanity checks\n  // If any of then is NaN, the comparison would be false, so we don't need to\n  // check.\n  // Also, we round the difference to 0.1 pixels to account for rounding\n  // errors during calculations.\n  if (!h0 || h0 <= 0) {\n    debug: logger?.debug1(\"Invalid calculation: Invalid h0\");\n  } else if (isValidNum(h1) !== isValidNum(h2)) {\n    debug: logger?.debug1(\n      \"Invalid calculation: One and only one of h1 or h2 is real\",\n    );\n  } else if (isValidNum(hR1) !== isValidNum(hR2)) {\n    debug: logger?.debug1(\n      \"Invalid calculation: One and only one of hR1 or hR2 is real\",\n    );\n  } else if (isValidNum(hF1) !== isValidNum(hF2)) {\n    debug: logger?.debug1(\n      \"Invalid calculation: One and only one of hF1 or hF2 is real\",\n    );\n  } else if (h1 - h0 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: h1 > h0\");\n  } else if (h0 - h2 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: h0 > h2\");\n  } else if (hR0 - h0 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: hR0 > h0\");\n  } else if (hR1 - hR0 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: hR1 > hR0\");\n  } else if (hR0 - hR2 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: hR0 > hR2\");\n  } else if (hF1 - hF2 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: hF1 > hF2\");\n  } else if (h1 - hF1 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: h1 > hF1\");\n  } else if (hF2 - h2 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: hF2 > h2\");\n  } else {\n    // Choose a height\n    if (freeSpace0 <= 0) {\n      // scenario 1 or 2\n      return h0;\n    } else {\n      // scenario 3\n      return MH.min(hConstr1, hConstr2);\n    }\n  }\n\n  logError(\n    MH.bugError(\"Invalid SameHeight calculations\"),\n    measurements,\n    config,\n  );\n  return NaN; // sanity checks failed\n};\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nexport const isTouchScreen = () =>\n  MH.hasDOM() ? matchMedia(\"(any-pointer: coarse)\").matches : false;\n\n/**\n * @since v1.2.0\n */\nexport const supportsSticky = () =>\n  MH.hasDOM()\n    ? typeof CSS !== \"undefined\" && CSS.supports(\"position\", \"sticky\")\n    : false;\n\n/**\n * @since v1.2.0\n */\nexport const isInQuirksMode = () =>\n  MH.hasDOM() ? document.compatMode === \"BackCompat\" : false;\n\n/**\n * @since v1.2.0\n */\nexport const isMobile = () =>\n  MH.hasDOM()\n    ? MH.userAgent.match(\n        /Mobile|Android|Silk\\/|Kindle|BlackBerry|Opera Mini|Opera Mobi/,\n      ) !== null\n    : false;\n","/**\n * @module Widgets\n */\n\n// [TODO v2]: Instead of wrapping children and changing which element is the\n// actual scrollable (and having to mapScrollable, etc), use the provided\n// element as the scrolling one but wrap IT (not its children) and insert the\n// scrollbars before it. Then remove, \"id\" and \"className\" config options.\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { Position } from \"@lisn/globals/types\";\n\nimport { supportsSticky, isMobile, isInQuirksMode } from \"@lisn/utils/browser\";\nimport {\n  showElement,\n  hideElement,\n  displayElement,\n  undisplayElement,\n  hasClass,\n  addClasses,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n  getData,\n  setData,\n  setBooleanData,\n  setBooleanDataNow,\n  setDataNow,\n  delData,\n  delDataNow,\n  getComputedStyleProp,\n  getComputedStylePropNow,\n  setStyleProp,\n  setNumericStyleJsVars,\n} from \"@lisn/utils/css-alter\";\nimport {\n  moveElementNow,\n  moveElement,\n  isAllowedToWrap,\n  getContentWrapper,\n  wrapChildren,\n  unwrapContentNow,\n  getOrAssignID,\n} from \"@lisn/utils/dom-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n} from \"@lisn/utils/event\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { toArrayIfSingle } from \"@lisn/utils/misc\";\nimport {\n  isScrollable,\n  getDefaultScrollingElement,\n  getClientWidthNow,\n  getClientHeightNow,\n  mapScrollable,\n  unmapScrollable,\n  tryGetMainScrollableElement,\n  ScrollAction,\n} from \"@lisn/utils/scroll\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateNumber,\n  validateBoolean,\n  validateString,\n} from \"@lisn/utils/validation\";\n\nimport { ScrollWatcher, ScrollData } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * Configures the given element, which must be scrollable, to use a\n * {@link Scrollbar}.\n *\n * The Scrollbar widget is a customizable alternative to the native\n * scrollbars (vertical and horizontal). You can position each of the two\n * scrollbars on any of the four sides of the element, make them automatically\n * hide after certain time of inactivity, style them as a traditional handle\n * scrollbar or a percentage fill progress bar and so on.\n *\n * It is also itself draggable/clickable so it _can_ be used to scroll the\n * element similar to the native scrollbar. The drag/click functionality can be\n * disabled too.\n *\n * **NOTE:** If you have disabled the {@link Widgets.PageLoader | PageLoader}\n * and have left {@link ScrollbarConfig.hideNative} ON, but are seeing the\n * native scrollbars just for a fraction of a second at the beginning of the\n * page load, you may want to manually add `lisn-hide-scroll` class on the\n * scrollable element to make sure the scrollbars are hidden as soon as\n * possible (before the scrollbar widget has time to initialize.\n *\n * **IMPORTANT:** If you are using the Scrollbar on an element other than the\n * main scrollable element, it's highly recommended to\n * {@link settings.contentWrappingAllowed | enable content wrapping} (it is\n * enabled by default). Otherwise, Scrollbar will rely on position: sticky. If\n * you want to instead manually create the wrappers yourself, ensure your\n * structure is as follows:\n * ```html\n * <div class=\"scrollable\"><!-- Element you instantiate as Scrollbar -->\n *   <div class=\"lisn-scrollbar__content\"><!-- Optional wrapper to avoid relying on sticky -->\n *     <div class=\"lisn-wrapper\"><!-- Optional wrapper to enable efficient scroll tracking -->\n *       <!-- YOUR CONTENT -->\n *     </div>\n *   </div>\n * </div>\n * ```\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Scrollbar}\n * widget on a given element. Use {@link Scrollbar.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the element:\n * - `data-lisn-has-scrollbar-top`: `\"true\"` or `\"false\"`\n * - `data-lisn-has-scrollbar-bottom`: `\"true\"` or `\"false\"`\n * - `data-lisn-has-scrollbar-left`: `\"true\"` or `\"false\"`\n * - `data-lisn-has-scrollbar-right`: `\"true\"` or `\"false\"`\n *\n * The following dynamic attributes are set on each progressbar element:\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n * - `data-lisn-place`: `\"top\"`, `\"bottom\"`, `\"left\"` or `\"right\"`\n * - `data-lisn-draggable`: `\"true\"` or `\"false\"`\n * - `data-lisn-clickable`: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see {@link settings.autoWidgets}), the\n * following CSS classes or data attributes are recognized:\n * - `lisn-scrollbar` class or `data-lisn-scrollbar` attribute set on the\n *   scrollable element that you want to enable custom scrollbars for\n *\n * See below examples for what values you can use set for the data attribute\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This will create custom scrollbars for\n * {@link settings.mainScrollableElementSelector | the main scrolling element}.\n *\n * This will work even if {@link settings.autoWidgets}) is false\n *\n * ```html\n * <!-- LISN should be loaded beforehand -->\n * <script>\n *   // You can also just customise global default settings:\n *   // LISN.settings.scrollbarPositionV = \"top\";\n *   // LISN.settings.scrollbarAutoHide = 3000;\n *   // LISN.settings.scrollbarUseHandle = true;\n *\n *   LISN.widgets.Scrollbar.enableMain({\n *     position: \"top\",\n *     autoHide: 3000,\n *     useHandle: true\n *   });\n * </script>\n * ```\n *\n * @example\n * This will create custom scrollbars for a custom scrolling element (i.e. one\n * with overflow \"auto\" or \"scroll\").\n *\n * ```html\n * <div class=\"scrolling lisn-scrollbar\">\n *   <!-- content here... -->\n * </div>\n * ```\n *\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <div\n *   class=\"scrolling\"\n *   data-lisn-scrollbar=\"hide-native=false\n *                        | positionH=top\n *                        | positionV=left\n *                        | auto-hide=2000\n *                        | click-scroll=false\n *                        | drag-scroll=false\n *                        | use-handle=false\n *                        \">\n *   <!-- content here... -->\n * </div>\n * ```\n */\nexport class Scrollbar extends Widget {\n  /**\n   * Returns the actual scrollable element us which, unless the scrollable you\n   * passed to the constructor is the\n   * {@link settings.mainScrollableElementSelector | the main scrolling element}\n   * or unless\n   * {@link settings.contentWrappingAllowed | you've disabled content wrapping},\n   * this will be a new element created by us that is a descendant of the\n   * original element you passed.\n   */\n  readonly getScrollable: () => Element;\n\n  /**\n   * If element is omitted, returns the instance created by {@link enableMain}\n   * if any.\n   */\n  static get(scrollable?: Element): Scrollbar | null {\n    if (!scrollable) {\n      return mainWidget;\n    }\n\n    if (scrollable === MH.getDocElement()) {\n      scrollable = MH.getBody();\n    }\n\n    const instance = super.get(scrollable, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Scrollbar)) {\n      return instance;\n    }\n    return null;\n  }\n\n  /**\n   * Enables scrollbars on the\n   * {@link settings.mainScrollableElementSelector | the main scrolling element}.\n   *\n   * **NOTE:** It returns a Promise to a widget because it will wait for the\n   * main scrollable element to be present in the DOM if not already.\n   */\n  static async enableMain(config?: ScrollbarConfig) {\n    // [TODO v2]: enableMain should be synchronous and the constructor should\n    // wait for the scrollable, allowing users who want to use the main\n    // scrollable to just pass null/undefined/window. Then getScrollable should\n    // return null or the actual scrollable if available + add fetchScrollable\n    // to return a Promise.\n    const scrollable = await ScrollWatcher.fetchMainScrollableElement();\n    const widget = new Scrollbar(scrollable, config);\n    widget.onDestroy(() => {\n      if (mainWidget === widget) {\n        mainWidget = null;\n      }\n    });\n\n    mainWidget = widget;\n    return widget;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (MH.isHTMLElement(element)) {\n          if (!Scrollbar.get(element)) {\n            return new Scrollbar(element, config);\n          }\n        } else {\n          logError(\n            MH.usageError(\"Only HTMLElement is supported for Scrollbar widget\"),\n          );\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * Note that passing `document.body` is considered equivalent to\n   * `document.documentElement`.\n   */\n  constructor(scrollable: HTMLElement, config?: ScrollbarConfig) {\n    if (scrollable === MH.getDocElement()) {\n      scrollable = MH.getBody();\n    }\n\n    const destroyPromise = Scrollbar.get(scrollable)?.destroy();\n    super(scrollable, { id: DUMMY_ID });\n\n    const props = getScrollableProps(scrollable);\n    const ourScrollable = props.scrollable;\n\n    (destroyPromise || MH.promiseResolve()).then(async () => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, scrollable, props, config);\n    });\n\n    this.getScrollable = () => ourScrollable;\n  }\n}\n\n/**\n * @interface\n */\nexport type ScrollbarConfig = {\n  /**\n   * The DOM ID to set on the\n   * {@link Scrollbar.getScrollable | scrollable element}. Will result in the\n   * scrollable element getting this ID. This is useful if the scrollable is a\n   * wrapper created by us and you want it to be assigned an ID.\n   *\n   * **IMPORTANT:** If the scrollable is the\n   * {@link settings.mainScrollableElementSelector | the main scrolling element}\n   * or {@link settings.contentWrappingAllowed | if you've disabled content wrapping},\n   * then the scrollable element provided as the widget element will _not_ have\n   * its content wrapped and will remain the actual scrollable. In this case,\n   * its ID will be set to this, so if it already has an ID, it will be\n   * overridden with this value.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * A class name or a list of class names to set on the\n   * {@link Scrollbar.getScrollable | scrollable element}. Will result in the\n   * scrollable element getting these classes. This is useful if the scrollable\n   * is a wrapper created by us and you want it to be assigned classes.\n   *\n   * See explanation for {@link id}.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Hide the native scroll bar.\n   *\n   * Note that the LISN scrollbar is itself draggable/clickable so it\n   * _can_ be used to scroll the element similar to the native scrollbar.\n   *\n   * @defaultValue {@link settings.scrollbarHideNative}\n   */\n  hideNative?: boolean;\n\n  /**\n   * Whether to enable also on mobile and tablet devices. Detection is based on\n   * user agent.\n   *\n   * @defaultValue {@link settings.scrollbarOnMobile}\n   */\n  onMobile?: boolean;\n\n  /**\n   * Where to place the scrollbar that tracks the horizontal scroll.\n   *\n   * It does not need to be a horizontal position; it can for example be \"left\"\n   * or \"right\".\n   *\n   * @defaultValue {@link settings.scrollbarPositionH}\n   */\n  positionH?: Position;\n\n  /**\n   * Where to place the scrollbar that tracks the vertical scroll.\n   *\n   * It does not need to be a vertical position; it can for example be \"top\"\n   * or \"bottom\".\n   *\n   * @defaultValue {@link settings.scrollbarPositionV}\n   */\n  positionV?: Position;\n\n  /**\n   * Auto-hide the scrollbar when there's no scrolling happening for the given\n   * number of milliseconds.\n   *\n   * Set to 0 or a negative value to disable hiding.\n   *\n   * @defaultValue {@link settings.scrollbarAutoHide}\n   */\n  autoHide?: number;\n\n  /**\n   * Whether to scroll the element when a user clicks anywhere on the\n   * scrollbar.\n   *\n   * @defaultValue {@link settings.scrollbarClickScroll}\n   */\n  clickScroll?: boolean;\n\n  /**\n   * Whether to scroll the element when a user drags the handle (if\n   * {@link useHandle}) or drags along anywhere on the scrollbar (if _not_\n   * {@link useHandle}).\n   *\n   * @defaultValue {@link settings.scrollbarDragScroll}\n   */\n  dragScroll?: boolean;\n\n  /**\n   * Whether to use a traditional fixed-length handle (like the native\n   * scrollbar) to indicate the position or the default style of a fill (that\n   * starts at the beginning and ends at the scroll fraction).\n   *\n   * @defaultValue {@link settings.scrollbarUseHandle}\n   */\n  useHandle?: boolean;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"scrollbar\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\n// Only one Scrollbar widget per element is allowed, but Widget\n// requires a non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_CONTAINER = `${PREFIXED_NAME}__container`;\nconst PREFIX_CONTENT = `${PREFIXED_NAME}__content`;\nconst PREFIX_BAR = `${PREFIXED_NAME}__bar`;\nconst PREFIX_WRAPPER = `${PREFIXED_NAME}__wrapper`;\nconst PREFIX_FILL = `${PREFIXED_NAME}__fill`;\nconst PREFIX_SPACER = `${PREFIXED_NAME}__spacer`;\nconst PREFIX_HANDLE = `${PREFIXED_NAME}__handle`;\nconst PREFIX_DRAGGABLE = MH.prefixName(\"draggable\");\nconst PREFIX_CLICKABLE = MH.prefixName(\"clickable\");\nconst PREFIX_HAS_WRAPPER = MH.prefixName(\"has-wrapper\");\nconst PREFIX_ALLOW_COLLAPSE = MH.prefixName(\"allow-collapse\");\nconst PREFIX_HAS_V_SCROLL = MH.prefixName(\"has-v-scroll\");\nconst PREFIX_HAS_SCROLLBAR = MH.prefixName(\"has-scrollbar\");\nconst PREFIX_HIDE_SCROLL = MH.prefixName(\"hide-scroll\");\n\nconst S_SET_POINTER_CAPTURE = \"setPointerCapture\";\nconst S_RELEASE_POINTER_CAPTURE = \"releasePointerCapture\";\nconst S_ARIA_VALUENOW = MC.ARIA_PREFIX + \"valuenow\";\nconst S_SCROLLBAR = \"scrollbar\";\n\nlet mainWidget: Scrollbar | null = null;\n\nconst configValidator: WidgetConfigValidatorObject<ScrollbarConfig> = {\n  id: validateString,\n  className: validateStrList,\n  hideNative: validateBoolean,\n  onMobile: validateBoolean,\n  positionH: validateString,\n  positionV: validateString,\n  autoHide: validateNumber,\n  clickScroll: validateBoolean,\n  dragScroll: validateBoolean,\n  useHandle: validateBoolean,\n};\n\nconst getScrollableProps = (containerElement: HTMLElement) => {\n  // If main scrollable element doesn't exist yet, then the containerElement\n  // passed can't be it anyway, so no need to use fetchMainScrollableElement.\n  const mainScrollableElement = tryGetMainScrollableElement();\n\n  const body = MH.getBody();\n  const defaultScrollable = getDefaultScrollingElement();\n\n  const isBody = containerElement === body;\n  const isMainScrollable =\n    (isBody ? defaultScrollable : containerElement) === mainScrollableElement;\n\n  const root: HTMLElement = isMainScrollable\n    ? mainScrollableElement\n    : isBody\n      ? defaultScrollable\n      : containerElement;\n\n  // check if we're using body in quirks mode\n  const isBodyInQuirks = isBody && isInQuirksMode();\n\n  const allowedToWrap = isAllowedToWrap(containerElement);\n  const barParent = isMainScrollable ? body : containerElement;\n  const hasVScroll = isScrollable(root, { axis: \"y\" });\n\n  let contentWrapper: HTMLElement | null = null;\n  let supported = true;\n  let hasExistingWrapper = true;\n\n  if (!isMainScrollable && !isBody) {\n    // we need to wrap if possible\n    contentWrapper = getContentWrapper(containerElement, {\n      _classNames: [PREFIX_CONTENT],\n    });\n    hasExistingWrapper = !MH.isNullish(contentWrapper);\n\n    if (!contentWrapper) {\n      const warnMsgPrefix =\n        \"Scrollbar on elements other than \" +\n        \"the main scrollable when content wrapping is \" +\n        \"disabled relies on position: sticky\";\n\n      if (allowedToWrap) {\n        // we'll wrap later, but create the wrapper now as it will be the actual\n        // scrollable\n        contentWrapper = MH.createElement(\"div\");\n      } else if (supportsSticky()) {\n        logWarn(`${warnMsgPrefix}, is experimental and may not work properly.`);\n      } else {\n        logError(`${warnMsgPrefix}, but this browser does not support sticky.`);\n        supported = false;\n      }\n    }\n  }\n\n  const needsSticky =\n    !isMainScrollable && !allowedToWrap && !hasExistingWrapper;\n\n  return {\n    supported,\n    isMainScrollable,\n    isBody,\n    isBodyInQuirks,\n    root,\n    scrollable: contentWrapper ?? root,\n    barParent,\n    contentWrapper,\n    hasExistingWrapper,\n    needsSticky,\n    hasVScroll,\n  };\n};\n\nconst init = (\n  widget: Scrollbar,\n  containerElement: HTMLElement,\n  props: ReturnType<typeof getScrollableProps>,\n  config: ScrollbarConfig | undefined,\n) => {\n  const {\n    supported,\n    isMainScrollable,\n    isBody,\n    isBodyInQuirks,\n    root,\n    scrollable,\n    barParent,\n    contentWrapper,\n    hasExistingWrapper,\n    needsSticky,\n    hasVScroll,\n  } = props;\n\n  const logger = debug\n    ? new debug.Logger({\n        name: `Scrollbar-${formatAsString(root)}`,\n        logAtCreation: { props, config },\n      })\n    : null;\n\n  // config\n  const onMobile = config?.onMobile ?? settings.scrollbarOnMobile ?? false;\n  const hideNative =\n    config?.hideNative ?? settings.scrollbarHideNative ?? false;\n  const positionH = config?.positionH || settings.scrollbarPositionH;\n  const positionV = config?.positionV || settings.scrollbarPositionV;\n  const autoHideDelay = config?.autoHide ?? settings.scrollbarAutoHide;\n  const clickScroll = config?.clickScroll ?? settings.scrollbarClickScroll;\n  const dragScroll =\n    config?.dragScroll ?? settings.scrollbarDragScroll ?? false;\n  const useHandle = config?.useHandle ?? settings.scrollbarUseHandle ?? false;\n\n  if (isMobile() && !onMobile) {\n    return;\n  }\n\n  // Ensure scroll tracking that will be setup on the original element uses the\n  // new scrollable we create.\n  // XXX TODO But this still breaks any existing scroll tracking\n  mapScrollable(root, scrollable);\n\n  // ----------\n\n  const newScrollbar = (wrapper: Element, position: string) => {\n    const barIsHorizontal = position === MC.S_TOP || position === MC.S_BOTTOM;\n\n    const scrollbar = MH.createElement(\"div\");\n    addClassesNow(scrollbar, PREFIX_BAR);\n    setDataNow(\n      scrollbar,\n      MC.PREFIX_ORIENTATION,\n      barIsHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL,\n    );\n    setDataNow(scrollbar, MC.PREFIX_PLACE, position);\n\n    if (clickScroll || dragScroll) {\n      MH.setAttr(scrollbar, MC.S_ROLE, S_SCROLLBAR);\n      MH.setAttr(scrollbar, MC.S_ARIA_CONTROLS, scrollDomID);\n    }\n\n    const fill = MH.createElement(\"div\");\n    addClassesNow(fill, useHandle ? PREFIX_SPACER : PREFIX_FILL);\n\n    let handle: Element | null = null;\n    if (useHandle) {\n      handle = MH.createElement(\"div\");\n      addClassesNow(handle, PREFIX_HANDLE);\n      setBooleanDataNow(handle, PREFIX_DRAGGABLE, dragScroll);\n    }\n\n    setBooleanDataNow(scrollbar, PREFIX_DRAGGABLE, dragScroll && !useHandle);\n    setBooleanDataNow(scrollbar, PREFIX_CLICKABLE, clickScroll);\n\n    moveElementNow(fill, { to: scrollbar });\n\n    if (handle) {\n      moveElementNow(handle, { to: scrollbar });\n    }\n    moveElementNow(scrollbar, { to: wrapper });\n\n    return {\n      _bar: scrollbar,\n      _handle: handle,\n      _fill: fill,\n    };\n  };\n\n  // ----------\n\n  const setProgress = async (scrollData: ScrollData, tracksH: boolean) => {\n    const scrollbar = tracksH ? scrollbarH : scrollbarV;\n    const hasBarPrefix = `${PREFIX_HAS_SCROLLBAR}-${tracksH ? positionH : positionV}`;\n\n    const completeFraction = tracksH\n      ? scrollData[MC.S_SCROLL_LEFT_FRACTION]\n      : scrollData[MC.S_SCROLL_TOP_FRACTION];\n\n    const viewFraction = tracksH\n      ? scrollData[MC.S_CLIENT_WIDTH] / scrollData[MC.S_SCROLL_WIDTH]\n      : scrollData[MC.S_CLIENT_HEIGHT] / scrollData[MC.S_SCROLL_HEIGHT];\n\n    debug: logger?.debug9(\"Updating progress\", {\n      tracksH,\n      completeFraction,\n      viewFraction,\n    });\n\n    MH.setAttr(\n      scrollbar,\n      S_ARIA_VALUENOW,\n      MH.round(completeFraction * 100) + \"\",\n    );\n\n    setNumericStyleJsVars(\n      scrollbar,\n      { viewFr: viewFraction, completeFr: completeFraction },\n      { _numDecimal: 4 },\n    );\n\n    const scrollAxis = tracksH ? \"x\" : \"y\";\n    if (isScrollable(scrollable, { axis: scrollAxis }) && viewFraction < 1) {\n      setBooleanData(containerElement, hasBarPrefix);\n      displayElement(scrollbar);\n    } else {\n      delData(containerElement, hasBarPrefix);\n      undisplayElement(scrollbar);\n    }\n  };\n\n  // ----------\n\n  const updateProgress = (target: Element, scrollData: ScrollData) => {\n    setProgress(scrollData, true);\n    setProgress(scrollData, false);\n\n    if (!isMainScrollable && !isBody) {\n      setBoxMeasureProps(containerElement);\n    }\n\n    if (autoHideDelay > 0) {\n      showElement(wrapper).then(() => hideElement(wrapper, autoHideDelay));\n    }\n  };\n\n  const updatePropsOnResize = (target: Element, sizeData: SizeData) => {\n    setBoxMeasureProps(containerElement);\n    setNumericStyleJsVars(\n      containerElement,\n      { barHeight: sizeData.border[MC.S_HEIGHT] },\n      { _units: \"px\", _numDecimal: 2 },\n    );\n  };\n\n  // ----------\n\n  let isDragging = false;\n  let lastOffset = 0;\n  let lastTargetFraction = 0;\n  let scrollAction: ScrollAction | null;\n\n  const onClickOrDrag = async (event: Event, tracksH: boolean) => {\n    MH.preventDefault(event);\n    const scrollbar = tracksH ? scrollbarH : scrollbarV;\n    const handle = tracksH ? handleH : handleV;\n\n    const target = MH.targetOf(event);\n    if (!MH.isMouseEvent(event) || !MH.isHTMLElement(target)) {\n      return;\n    }\n\n    const eventType = event.type;\n\n    const isClick =\n      eventType === MC.S_POINTERDOWN || eventType === MC.S_MOUSEDOWN;\n    const isHandleClick =\n      isClick && useHandle && hasClass(target, PREFIX_HANDLE);\n    const startsDrag = isClick && dragScroll && (isHandleClick || !useHandle);\n\n    if (startsDrag) {\n      isDragging = true;\n      setOrReleasePointerCapture(event, scrollbar, S_SET_POINTER_CAPTURE);\n    }\n\n    debug: logger?.debug10(\"Click or drag\", {\n      eventType,\n      isClick,\n      isHandleClick,\n      isDragging,\n      startsDrag,\n    });\n\n    if ((!isClick && !isDragging) || (isClick && !startsDrag && !clickScroll)) {\n      // - Either moving pointer when no drag scroll has been started OR\n      // - Clicking when no drag is allowed in the context of the click and no\n      //   click scroll is allowed either\n      return;\n    }\n\n    await waitForMeasureTime();\n    const barIsHorizontal = isHorizontal(scrollbar);\n\n    const barLength = barIsHorizontal\n      ? scrollbar[MC.S_CLIENT_WIDTH]\n      : scrollbar[MC.S_CLIENT_HEIGHT];\n\n    const currScrollOffset = tracksH\n      ? scrollable[MC.S_SCROLL_LEFT]\n      : scrollable[MC.S_SCROLL_TOP];\n\n    const maxScrollOffset = tracksH\n      ? scrollable[MC.S_SCROLL_WIDTH] - getClientWidthNow(scrollable)\n      : scrollable[MC.S_SCROLL_HEIGHT] - getClientHeightNow(scrollable);\n\n    // Get click offset relative to the scrollbar regardless of what the\n    // event target is and what transforms is has applied.\n    const rect = MH.getBoundingClientRect(scrollbar);\n    const offset = barIsHorizontal\n      ? event.clientX - rect.left\n      : event.clientY - rect.top;\n\n    debug: logger?.debug10(\"Pointer offset\", offset);\n\n    if (offset === lastOffset) {\n      return;\n    }\n\n    const deltaOffset = isClick ? offset : offset - lastOffset;\n    lastOffset = offset;\n\n    if (!isClick && useHandle) {\n      // Dragging the handle\n      const handleLength = handle\n        ? MH.parseFloat(\n            getComputedStylePropNow(\n              handle,\n              barIsHorizontal ? MC.S_WIDTH : MC.S_HEIGHT,\n            ),\n          )\n        : 0;\n\n      lastTargetFraction =\n        lastTargetFraction + deltaOffset / (barLength - (handleLength || 0));\n    } else if (isHandleClick) {\n      // Starting a handle drag\n      lastTargetFraction = currScrollOffset / maxScrollOffset;\n    } else {\n      // Clicking or dragging on the bar -> scroll to the offset under the pointer\n      lastTargetFraction = offset / barLength;\n    }\n\n    if (isHandleClick || (isClick && !clickScroll)) {\n      return;\n    }\n\n    const targetScrollOffset = lastTargetFraction * maxScrollOffset;\n    const targetCoordinates = tracksH\n      ? { left: targetScrollOffset }\n      : { top: targetScrollOffset };\n\n    debug: logger?.debug10(\"Scroll target offset\", {\n      lastTargetFraction,\n      targetCoordinates,\n    });\n\n    if (isClick) {\n      // smooth scroll\n      scrollAction = await scrollWatcher.scrollTo(targetCoordinates, {\n        scrollable,\n        weCanInterrupt: true,\n      });\n    } else {\n      scrollAction?.cancel();\n      scrollAction = null;\n      MH.elScrollTo(scrollable, targetCoordinates);\n    }\n  };\n\n  // ----------\n\n  const onRelease = (event: Event, tracksH: boolean) => {\n    const scrollbar = tracksH ? scrollbarH : scrollbarV;\n    setOrReleasePointerCapture(event, scrollbar, S_RELEASE_POINTER_CAPTURE);\n\n    isDragging = false;\n    scrollAction = null;\n  };\n\n  const onClickOrDragH = (event: Event) => onClickOrDrag(event, true);\n  const onClickOrDragV = (event: Event) => onClickOrDrag(event, false);\n  const onReleaseH = (event: Event) => onRelease(event, true);\n  const onReleaseV = (event: Event) => onRelease(event, false);\n\n  // ----------\n\n  const maybeSetNativeHidden = () => {\n    if (hideNative) {\n      addClasses(scrollable, PREFIX_HIDE_SCROLL);\n      if (isBodyInQuirks) {\n        addClasses(MH.getDocElement(), PREFIX_HIDE_SCROLL);\n      }\n    }\n  };\n\n  const setNativeShown = () => {\n    removeClasses(scrollable, PREFIX_HIDE_SCROLL);\n    if (isBodyInQuirks) {\n      removeClasses(MH.getDocElement(), PREFIX_HIDE_SCROLL);\n    }\n  };\n\n  // ----------\n\n  const addWatchers = () => {\n    // Track scroll in any direction as well as changes in border or content size\n    // of the element and its contents.\n    scrollWatcher.trackScroll(updateProgress, {\n      threshold: 0,\n      scrollable,\n    });\n\n    // Track changes in content or border size of the container element which\n    // would also detect changes in its padding.\n    sizeWatcher.onResize(updatePropsOnResize, {\n      target: containerElement,\n      threshold: 0,\n    });\n  };\n\n  const removeWatchers = () => {\n    scrollWatcher.noTrackScroll(updateProgress, scrollable);\n    sizeWatcher.offResize(updatePropsOnResize, containerElement);\n  };\n\n  // SETUP ------------------------------\n\n  if (!supported) {\n    setNativeShown();\n    return;\n  }\n\n  const scrollWatcher = ScrollWatcher.reuse({ [MC.S_DEBOUNCE_WINDOW]: 0 });\n  const sizeWatcher = SizeWatcher.reuse({ [MC.S_DEBOUNCE_WINDOW]: 0 });\n\n  if (!isMainScrollable && !isBody) {\n    addClasses(containerElement, PREFIX_CONTAINER);\n  }\n\n  setBooleanData(containerElement, PREFIX_ALLOW_COLLAPSE, !isMobile());\n  setBooleanData(containerElement, PREFIX_HAS_WRAPPER, !!contentWrapper);\n  setBooleanData(\n    containerElement,\n    PREFIX_HAS_V_SCROLL,\n    !!contentWrapper && hasVScroll,\n  );\n\n  // Wrap children if needed\n  if (contentWrapper && !hasExistingWrapper) {\n    wrapChildren(containerElement, {\n      wrapper: contentWrapper,\n      ignoreMove: true,\n    }); // no need to await here\n    addClasses(contentWrapper, PREFIX_CONTENT);\n  }\n\n  maybeSetNativeHidden();\n\n  const origDomID = scrollable.id;\n  if (config?.id) {\n    scrollable.id = config.id;\n  }\n\n  if (config?.className) {\n    addClasses(scrollable, ...toArrayIfSingle(config.className));\n  }\n\n  const scrollDomID = // for ARIA\n    clickScroll || dragScroll ? getOrAssignID(scrollable, S_SCROLLBAR) : \"\";\n\n  addClasses(barParent, PREFIX_ROOT);\n\n  const wrapper = MH.createElement(\"div\");\n  preventSelect(wrapper);\n  addClasses(wrapper, MC.PREFIX_NO_TOUCH_ACTION);\n  addClasses(wrapper, PREFIX_WRAPPER);\n\n  if (isBody || isMainScrollable) {\n    setData(wrapper, MC.PREFIX_POSITION, MC.S_FIXED);\n  } else if (needsSticky) {\n    setData(wrapper, MC.PREFIX_POSITION, MC.S_STICKY);\n  }\n\n  const { _bar: scrollbarH, _handle: handleH } = newScrollbar(\n    wrapper,\n    positionH,\n  );\n  const { _bar: scrollbarV, _handle: handleV } = newScrollbar(\n    wrapper,\n    positionV,\n  );\n\n  moveElement(wrapper, {\n    to: barParent,\n    position: \"prepend\",\n  });\n\n  addWatchers();\n\n  // Track clicking and dragging on the two scrollbars\n  if (dragScroll) {\n    addEventListenerTo(scrollbarH, MC.S_POINTERMOVE, onClickOrDragH);\n    addEventListenerTo(scrollbarV, MC.S_POINTERMOVE, onClickOrDragV);\n\n    addEventListenerTo(scrollbarH, MC.S_POINTERUP, onReleaseH);\n    addEventListenerTo(scrollbarV, MC.S_POINTERUP, onReleaseV);\n  }\n\n  if (dragScroll || clickScroll) {\n    addEventListenerTo(scrollbarH, MC.S_POINTERDOWN, onClickOrDragH);\n    addEventListenerTo(scrollbarV, MC.S_POINTERDOWN, onClickOrDragV);\n  }\n\n  widget.onDisable(() => {\n    removeWatchers();\n    undisplayElement(scrollbarH);\n    undisplayElement(scrollbarV);\n    setNativeShown();\n  });\n\n  widget.onEnable(() => {\n    addWatchers();\n    displayElement(scrollbarH);\n    displayElement(scrollbarV);\n    maybeSetNativeHidden();\n  });\n\n  widget.onDestroy(async () => {\n    unmapScrollable(root);\n\n    scrollable.id = origDomID;\n    if (config?.className) {\n      removeClasses(scrollable, ...toArrayIfSingle(config.className));\n    }\n\n    await waitForMutateTime();\n    if (contentWrapper && !hasExistingWrapper) {\n      unwrapContentNow(contentWrapper, [PREFIX_CONTENT]);\n    }\n\n    moveElementNow(wrapper); // remove\n\n    if (dragScroll) {\n      removeEventListenerFrom(scrollbarH, MC.S_POINTERMOVE, onClickOrDragH);\n      removeEventListenerFrom(scrollbarV, MC.S_POINTERMOVE, onClickOrDragV);\n\n      removeEventListenerFrom(scrollbarH, MC.S_POINTERUP, onReleaseH);\n      removeEventListenerFrom(scrollbarV, MC.S_POINTERUP, onReleaseV);\n    }\n\n    if (dragScroll || clickScroll) {\n      removeEventListenerFrom(scrollbarH, MC.S_POINTERDOWN, onClickOrDragH);\n      removeEventListenerFrom(scrollbarV, MC.S_POINTERDOWN, onClickOrDragV);\n    }\n\n    removeClassesNow(barParent, PREFIX_ROOT);\n    removeClassesNow(containerElement, PREFIX_CONTAINER);\n\n    for (const position of [MC.S_TOP, MC.S_BOTTOM, MC.S_LEFT, MC.S_RIGHT]) {\n      delDataNow(containerElement, `${PREFIX_HAS_SCROLLBAR}-${position}`);\n    }\n\n    delDataNow(containerElement, PREFIX_ALLOW_COLLAPSE);\n    delDataNow(containerElement, PREFIX_HAS_WRAPPER);\n    delDataNow(containerElement, PREFIX_HAS_V_SCROLL);\n  });\n};\n\nconst isHorizontal = (scrollbar: Element) =>\n  getData(scrollbar, MC.PREFIX_ORIENTATION) === MC.S_HORIZONTAL;\n\nconst setBoxMeasureProps = async (element: HTMLElement) => {\n  for (const side of [MC.S_TOP, MC.S_RIGHT, MC.S_BOTTOM, MC.S_LEFT]) {\n    for (const key of [`padding-${side}`, `border-${side}-width`]) {\n      const padding = await getComputedStyleProp(element, key);\n      setStyleProp(element, MH.prefixCssJsVar(key), padding);\n    }\n  }\n};\n\nconst setOrReleasePointerCapture = (\n  event: Event,\n  scrollbar: Element,\n  method: \"setPointerCapture\" | \"releasePointerCapture\",\n) => {\n  if (MH.isPointerEvent(event) && method in scrollbar) {\n    scrollbar[method](event.pointerId);\n  }\n};\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { ScrollOffset } from \"@lisn/globals/types\";\n\nimport {\n  showElement,\n  hideElement,\n  displayElement,\n  displayElementNow,\n  undisplayElement,\n  disableInitialTransition,\n  addClassesNow,\n  removeClassesNow,\n  setDataNow,\n  setBooleanDataNow,\n  delDataNow,\n  getParentFlexDirection,\n} from \"@lisn/utils/css-alter\";\nimport {\n  replaceElementNow,\n  wrapElementNow,\n  moveElement,\n  moveElementNow,\n  insertArrow,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { validateString } from \"@lisn/utils/validation\";\nimport { isValidScrollOffset } from \"@lisn/utils/views\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorFunc,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as a {@link ScrollToTop} widget.\n *\n * The ScrollToTop widget adds a scroll-to-top button in the lower right corder\n * of the screen (can be changed to bottom left) which scrolls smoothly (and\n * more slowly than the native scroll) back to the top.\n *\n * The button is only shown when the scroll offset from the top is more than a\n * given configurable amount.\n *\n * **IMPORTANT:** When configuring an existing element as the button (i.e. using\n * `new ScrollToTop` or auto-widgets, rather than {@link ScrollToTop.enableMain}):\n * - if using\n *   {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}\n *   as the scrollable, the button element will have it's CSS position set to `fixed`;\n * - otherwise, if using a custom scrollable element, the button element may be\n *   moved in the DOM tree in order to position it on top of the scrollable\n * If you don't want the button element changed in any way, then consider using\n * the {@link Triggers.ClickTrigger | ClickTrigger} with a\n * {@link Actions.ScrollTo | ScrollTo} action.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link ScrollToTop}\n * widget on a given element. Use {@link ScrollToTop.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the element:\n * - `data-lisn-place`: `\"left\"` or `\"right\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-scroll-to-top` class or `data-lisn-scroll-to-top` attribute set on\n *   the element that constitutes the widget. The element should be empty.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This will create a scroll-to-top button using the JavaScript API.\n *\n * This will work even if\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}) is false.\n *\n * ```html\n * <!-- LISN should be loaded beforehand -->\n * <script>\n *   LISN.widgets.ScrollToTop.enableMain({\n *     position: \"left\",\n *     offset: \"top: 300vh\"\n *   });\n * </script>\n * ```\n *\n * You can customise the offset show/hide trigger via CSS as well as long as\n * {@link ScrollToTopConfig.offset} is left at its default value which uses\n * this CSS property:\n *\n * ```html\n * <style type=\"text/css\" media=\"screen\">\n *   :root {\n *     --lisn-scroll-to-top--offset: 300vh;\n *   }\n * </style>\n * ```\n *\n * @example\n * This will configure the given element as a scroll-to-top button for the main\n * scrolling element using an existing element for the button with default\n * {@link ScrollToTopConfig}.\n *\n * ```html\n * <button class=\"lisn-scroll-to-top\"></button>\n * ```\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <button data-lisn-scroll-to-top=\"position=left | offset=top:300vh\"></button>\n * ```\n *\n * @example\n * This will configure the given element as a scroll-to-top button for a custom\n * scrolling element (i.e. one with overflow \"auto\" or \"scroll\").\n *\n * ```html\n * <div id=\"scrollable\">\n *   <!-- content here... -->\n * </div>\n * <button data-lisn-scroll-to-top=\"scrollable=#scrollable\"></button>\n * ```\n *\n * @example\n * As above, but using a reference specification with a class name to find the\n * scrollable.\n *\n * ```html\n * <div class=\"scrollable\">\n *   <!-- content here... -->\n * </div>\n * <button data-lisn-scroll-to-top=\"scrollable=prev.scrollable\"></button>\n * ```\n *\n * @example\n * As above but with all custom settings.\n *\n * ```html\n * <div class=\"scrollable\">\n *   <!-- content here... -->\n * </div>\n * <button data-lisn-scroll-to-top=\"scrollable=prev.scrollable\n *                               | position=left\n *                               | offset=top:300vh\n * \"></button>\n * ```\n */\nexport class ScrollToTop extends Widget {\n  /**\n   * If element is omitted, returns the instance created by {@link enableMain}\n   * if any.\n   */\n  static get(element?: Element): ScrollToTop | null {\n    if (!element) {\n      return mainWidget;\n    }\n\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, ScrollToTop)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!ScrollToTop.get(element)) {\n          return new ScrollToTop(element, config);\n        }\n        return null;\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * Creates a new button element, inserts it into the document body and\n   * configures it as a {@link ScrollToTop}.\n   */\n  static enableMain(config?: ScrollToTopConfig) {\n    const button = MH.createButton(\"Back to top\");\n    const widget = new ScrollToTop(button, config);\n    widget.onDestroy(() => {\n      if (mainWidget === widget) {\n        mainWidget = null;\n      }\n      return moveElement(button);\n    });\n\n    waitForElement(MH.getBody).then((body) => {\n      if (!widget.isDestroyed()) {\n        moveElement(button, { to: body });\n      }\n    });\n\n    mainWidget = widget;\n    return widget;\n  }\n\n  constructor(element: Element, config?: ScrollToTopConfig) {\n    const destroyPromise = ScrollToTop.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const offset: ScrollOffset =\n      config?.offset ||\n      `${MC.S_TOP}: var(${MH.prefixCssVar(\"scroll-to-top--offset\")}, 200vh)`;\n    const position: \"left\" | \"right\" = config?.position || MC.S_RIGHT;\n    const scrollable = config?.scrollable;\n    const hasCustomScrollable =\n      scrollable &&\n      scrollable !== MH.getDocElement() &&\n      scrollable !== MH.getBody();\n\n    const scrollWatcher = ScrollWatcher.reuse();\n    const viewWatcher = ViewWatcher.reuse(\n      hasCustomScrollable ? { root: scrollable } : {},\n    );\n\n    const clickListener = () =>\n      scrollWatcher.scrollTo({ top: 0, left: 0 }, { scrollable });\n\n    let arrow: Element;\n    let placeholder: Element;\n    let root = element;\n\n    const showIt = () => {\n      showElement(root);\n    };\n\n    const hideIt = () => {\n      hideElement(root);\n    };\n\n    // SETUP ------------------------------\n\n    (destroyPromise || MH.promiseResolve()).then(async () => {\n      const flexDirection = scrollable\n        ? await getParentFlexDirection(scrollable)\n        : null;\n\n      await waitForMutateTime();\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      if (hasCustomScrollable) {\n        // Add a placeholder to restore its position on destroy.\n        placeholder = MH.createElement(\"div\");\n        moveElementNow(placeholder, {\n          to: element,\n          position: \"before\",\n          ignoreMove: true,\n        });\n\n        // Then move it to immediately after the scrollable.\n        // If the parent is a horizontal flexbox and position is left, then\n        // we need to insert it before the scrollable.\n        const shouldInsertBefore =\n          flexDirection === \"column-reverse\" ||\n          (position === MC.S_LEFT && flexDirection === \"row\") ||\n          (position === MC.S_RIGHT && flexDirection === \"row-reverse\");\n\n        moveElementNow(element, {\n          to: scrollable,\n          position: shouldInsertBefore ? \"before\" : \"after\",\n          ignoreMove: true,\n        });\n\n        // Wrap the button.\n        root = wrapElementNow(element, { wrapper: \"div\", ignoreMove: true });\n      }\n\n      disableInitialTransition(root);\n      addClassesNow(root, PREFIX_ROOT);\n      addClassesNow(element, PREFIX_BTN);\n      setBooleanDataNow(root, PREFIX_FIXED, !hasCustomScrollable);\n      setDataNow(root, MC.PREFIX_PLACE, position);\n\n      arrow = insertArrow(element, MC.S_UP);\n\n      hideIt(); // initial\n\n      addEventListenerTo(element, MC.S_CLICK, clickListener);\n\n      viewWatcher.onView(offset, showIt, {\n        views: [MC.S_AT, MC.S_BELOW],\n      });\n\n      viewWatcher.onView(offset, hideIt, {\n        views: [MC.S_ABOVE],\n      });\n\n      this.onDisable(() => {\n        undisplayElement(root);\n      });\n\n      this.onEnable(() => {\n        displayElement(root);\n      });\n\n      this.onDestroy(async () => {\n        await waitForMutateTime();\n        removeEventListenerFrom(element, MC.S_CLICK, clickListener);\n\n        removeClassesNow(root, PREFIX_ROOT);\n        removeClassesNow(element, PREFIX_BTN);\n        delDataNow(root, PREFIX_FIXED);\n        delDataNow(root, MC.PREFIX_PLACE);\n        displayElementNow(root); // revert undisplay by onDisable\n\n        if (arrow) {\n          moveElementNow(arrow); // remove\n        }\n\n        if (root !== element) {\n          // Unwrap the button.\n          replaceElementNow(root, element, { ignoreMove: true });\n        }\n\n        if (placeholder) {\n          // Move it back into its original position.\n          replaceElementNow(placeholder, element, { ignoreMove: true });\n        }\n\n        viewWatcher.offView(offset, showIt);\n        viewWatcher.offView(offset, hideIt);\n      });\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type ScrollToTopConfig = {\n  /**\n   * The button will be shown when the scroll top offset of the page is below\n   * the given value, and hidden otherwise. Accepts a colon-separated key:value\n   * string where the key is \"top\" or \"bottom\" (or if your page scrolls\n   * horizontally, then use \"left\" or \"right\"), and the value can be any valid\n   * CSS length specification, e.g. \"top: 200vh\" or \"top: var(--offset, 50%)\".\n   *\n   * Alternatively, you set the `--lisn-scroll-to-top--offset` CSS variable on\n   * the document root, which is used by the default value.\n   *\n   * @defaultValue \"top: var(--lisn-scroll-to-top--offset, 200vh)\"\n   */\n  offset?: ScrollOffset;\n\n  /**\n   * The horizontal position of the scroll-to-top button.\n   *\n   * @defaultValue \"right\"\n   */\n  position?: \"left\" | \"right\";\n\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  scrollable?: Element;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"scroll-to-top\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\n// Only one ScrollToTop widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_BTN = `${PREFIXED_NAME}__btn`;\nconst PREFIX_FIXED = MH.prefixName(\"fixed\");\n\nlet mainWidget: ScrollToTop | null = null;\n\nconst newConfigValidator: WidgetConfigValidatorFunc<ScrollToTopConfig> = (\n  element,\n) => {\n  return {\n    offset: (key, value) => validateString(key, value, isValidScrollOffset),\n    position: (key, value) =>\n      validateString(key, value, (v) => v === MC.S_LEFT || v === MC.S_RIGHT),\n    scrollable: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  addClasses,\n  removeClasses,\n  getBooleanData,\n  setBooleanData,\n  unsetBooleanData,\n  delData,\n  copyStyle,\n  setNumericStyleJsVars,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, swapElements, cloneElement } from \"@lisn/utils/dom-alter\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { toInt } from \"@lisn/utils/math\";\nimport { validateString } from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  WidgetCallback,\n  WidgetHandler,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as a {@link Sortable} widget.\n *\n * The Sortable widget allows the user to reorder elements by dragging and\n * dropping. It works on touch devices as well. However, it does not yet\n * support automatic scrolling when dragging beyond edge of screen on mobile\n * devices. For this, you may want to use\n * {@link https://github.com/SortableJS/Sortable | SortableJS} instead.\n *\n * The widget should have more than one draggable item.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Sortable}\n * widget on a given element. Use {@link Sortable.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on each item element:\n * - `data-lisn-is-draggable`: `\"true\"` or `\"false\"` (false if the item is disabled)\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-sortable` class or `data-lisn-sortable` attribute set on the\n *   container element that constitutes the sortable container\n * - `lisn-sortable-item` class or `data-lisn-sortable-item` attribute set on\n *   elements that should act as the items.\n *\n * When using auto-widgets, the elements that will be used as items are\n * discovered in the following way:\n * 1. The top-level element that constitutes the widget is searched for any\n *    elements that contain the `lisn-sortable-item` class or\n *    `data-lisn-sortable-item` attribute. They do not have to be immediate\n *    children of the root element.\n * 2. If there are no such elements, all of the immediate children of the\n *    widget element (other than `script` and `style` elements) are taken as\n *    the items.\n *\n * @example\n * ```html\n * <div class=\"lisn-sortable\">\n *   <div class=\"box\">Item 1</div>\n *   <div class=\"box\">Item 2</div>\n *   <div class=\"box\">Item 3</div>\n *   <div class=\"box\">Item 4</div>\n * </div>\n * ```\n */\nexport class Sortable extends Widget {\n  /**\n   * Disables the given item number. Note that item numbers start at 1.\n   *\n   * @param currentOrder If false (default), the item numbers refer to the\n   *                     original order. If true, they refer to the current\n   *                     document order.\n   */\n  readonly disableItem: (\n    itemNum: number,\n    currentOrder?: boolean,\n  ) => Promise<void>;\n\n  /**\n   * Re-enables the given item number. Note that item numbers start at 1.\n   *\n   * @param currentOrder If false (default), the item numbers refer to the\n   *                     original order. If true, they refer to the current\n   *                     document order.\n   */\n  readonly enableItem: (\n    itemNum: number,\n    currentOrder?: boolean,\n  ) => Promise<void>;\n\n  /**\n   * Re-enables the given item number if it is disabled, otherwise disables it.\n   * Note that item numbers start at 1.\n   *\n   * @param currentOrder If false (default), the item numbers refer to the\n   *                     original order. If true, they refer to the current\n   *                     document order.\n   */\n  readonly toggleItem: (\n    itemNum: number,\n    currentOrder?: boolean,\n  ) => Promise<void>;\n\n  /**\n   * Returns true if the given item number is disabled. Note that item numbers\n   * start at 1.\n   *\n   * @param currentOrder If false (default), the item numbers refer to the\n   *                     original order. If true, they refer to the current\n   *                     document order.\n   */\n  readonly isItemDisabled: (itemNum: number, currentOrder?: boolean) => boolean;\n\n  /**\n   * The given handler will be called whenever the user moves an item to\n   * another position. It will be called after the item is moved so\n   * {@link getItems} called with `currentOrder = true` will return the updated\n   * order.\n   *\n   * If the handler returns a promise, it will be awaited upon.\n   */\n  readonly onMove: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns the item elements.\n   *\n   * @param currentOrder If false (default), returns the items in the\n   *                     original order. If true, they are returned in the\n   *                     current document order.\n   */\n  readonly getItems: (currentOrder?: boolean) => Element[];\n\n  static get(element: Element): Sortable | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Sortable)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!Sortable.get(element)) {\n          return new Sortable(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If there are less than 2 items given or found.\n   */\n  constructor(element: Element, config?: SortableConfig) {\n    const destroyPromise = Sortable.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const items = config?.items || [];\n    if (!MH.lengthOf(items)) {\n      items.push(\n        ...MH.querySelectorAll(\n          element,\n          getDefaultWidgetSelector(PREFIX_ITEM__FOR_SELECT),\n        ),\n      );\n\n      if (!MH.lengthOf(items)) {\n        items.push(...MH.querySelectorAll(element, `[${MC.S_DRAGGABLE}]`));\n\n        if (!MH.lengthOf(items)) {\n          items.push(...getVisibleContentChildren(element));\n        }\n      }\n    }\n\n    if (MH.lengthOf(items) < 2) {\n      throw MH.usageError(\"Sortable must have more than 1 item\");\n    }\n\n    const methods = getMethods(this, items, config);\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, element, items, methods);\n    });\n\n    this.disableItem = methods._disableItem;\n    this.enableItem = methods._enableItem;\n    this.toggleItem = methods._toggleItem;\n    this.isItemDisabled = methods._isItemDisabled;\n    this.onMove = methods._onMove;\n\n    this.getItems = (currentOrder = false) =>\n      currentOrder ? methods._getSortedItems() : [...items];\n  }\n}\n\n/**\n * @interface\n */\nexport type SortableConfig = {\n  /**\n   * The elements that will be used as the draggable items.\n   *\n   * The widget should have more than one draggable item.\n   *\n   * If this is not specified, then\n   * 1. The top-level element that constitutes the widget is searched for any\n   *    elements that contain the class `lisn-sortable-item`. They do not\n   *    have to be immediate children of the root element.\n   * 2. If there are no such elements, all of the immediate children of the\n   *    widget element (other than `script` and `style` elements) are taken as\n   *    the items.\n   */\n  items?: Element[];\n\n  /**\n   * Whether to move the dragged item to before/after the drop target, or swap\n   * it with the drop target.\n   *\n   * Note that the moving/swapping action is being done as the user is dragging\n   * as soon as they drag over another item, so in order to achieve a swap\n   * effect, the user needs to be able to drag an item from one location to\n   * another without the path of the mouse crossing over all in-between items.\n   *\n   * @defaultValue \"move\";\n   */\n  mode?: \"move\" | \"swap\";\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"sortable\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_IS_DRAGGABLE = MH.prefixName(\"is-draggable\");\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_ITEM = `${PREFIXED_NAME}__item`;\nconst PREFIX_ITEM__FOR_SELECT = `${PREFIXED_NAME}-item`;\n\nconst PREFIX_FLOATING_CLONE = `${PREFIXED_NAME}__ghost`;\n\n// Only one Sortable widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<SortableConfig> = {\n  mode: (key, value) =>\n    validateString(key, value, (v) => v === \"swap\" || v === \"move\"),\n};\n\nconst touchMoveOptions = { passive: false, capture: true };\n\nconst isItemDraggable = (item: Element) =>\n  getBooleanData(item, PREFIX_IS_DRAGGABLE);\n\nconst init = (\n  widget: Sortable,\n  element: Element,\n  items: Element[],\n  methods: ReturnType<typeof getMethods>,\n) => {\n  let currentDraggedItem: Element | null = null;\n  let floatingClone: Element | null = null;\n  let ignoreCancel = false;\n  let grabOffset = [0, 0];\n\n  const setIgnoreCancel = () => (ignoreCancel = true);\n\n  const onDragStart = (event: Event) => {\n    const currTarget = MH.currentTargetOf(event);\n\n    if (\n      MH.isElement(currTarget) &&\n      isItemDraggable(currTarget) &&\n      MH.isMouseEvent(event)\n    ) {\n      currentDraggedItem = currTarget;\n      MH.setAttr(currTarget, MC.S_DRAGGABLE);\n\n      if (MH.isTouchPointerEvent(event)) {\n        const target = MH.targetOf(event);\n        if (MH.isElement(target)) {\n          target.releasePointerCapture(event.pointerId);\n        }\n      }\n\n      addEventListenerTo(\n        MH.getDoc(),\n        MC.S_TOUCHMOVE,\n        onTouchMove,\n        touchMoveOptions,\n      );\n\n      waitForMeasureTime().then(() => {\n        // Get pointer offset relative to the current item being dragged\n        // regardless of what the event target is and what transforms is has\n        // applied.\n        const rect = MH.getBoundingClientRect(currTarget);\n        grabOffset = [event.clientX - rect.left, event.clientY - rect.top];\n      });\n    }\n  };\n\n  const onDragEnd = (event: Event) => {\n    if (ignoreCancel && event.type === MC.S_POINTERCANCEL) {\n      ignoreCancel = false;\n      return;\n    }\n\n    if (currentDraggedItem) {\n      MH.unsetAttr(currentDraggedItem, MC.S_DRAGGABLE);\n      currentDraggedItem = null;\n\n      removeEventListenerFrom(\n        MH.getDoc(),\n        MC.S_TOUCHMOVE,\n        onTouchMove,\n        touchMoveOptions,\n      );\n\n      if (floatingClone) {\n        moveElement(floatingClone);\n        floatingClone = null;\n      }\n    }\n  };\n\n  const onTouchMove = (event: Event) => {\n    if (MH.isTouchEvent(event) && MH.lengthOf(event.touches) === 1) {\n      const parentEl = MH.parentOf(currentDraggedItem);\n      if (parentEl && currentDraggedItem) {\n        MH.preventDefault(event);\n\n        const touch = event.touches[0];\n        const clientX = touch.clientX;\n        const clientY = touch.clientY;\n\n        if (!floatingClone) {\n          floatingClone = cloneElement(currentDraggedItem);\n          addClasses(floatingClone, PREFIX_FLOATING_CLONE);\n          copyStyle(currentDraggedItem, floatingClone, [\n            \"width\",\n            \"height\",\n          ]).then(() => {\n            if (floatingClone) {\n              moveElement(floatingClone, { to: parentEl });\n            }\n          });\n        }\n\n        if (floatingClone) {\n          setNumericStyleJsVars(\n            floatingClone,\n            {\n              clientX: clientX - grabOffset[0],\n              clientY: clientY - grabOffset[1],\n            },\n            { _units: \"px\" },\n          );\n        }\n      }\n    }\n  };\n\n  const onDragEnter = (event: Event) => {\n    const currTarget = MH.currentTargetOf(event);\n    const dragged = currentDraggedItem;\n\n    if (\n      (MH.isTouchPointerEvent(event) || event.type === MC.S_DRAGENTER) &&\n      dragged &&\n      MH.isElement(currTarget) &&\n      currTarget !== dragged\n    ) {\n      methods._dragItemOnto(dragged, currTarget); // no need to await\n    }\n  };\n\n  const setupEvents = () => {\n    for (const item of items) {\n      preventSelect(item);\n\n      addEventListenerTo(item, MC.S_POINTERDOWN, onDragStart);\n\n      addEventListenerTo(item, MC.S_DRAGSTART, setIgnoreCancel); // non-touch\n\n      addEventListenerTo(item, MC.S_POINTERENTER, onDragEnter); // touch\n      addEventListenerTo(item, MC.S_DRAGENTER, onDragEnter); // non-touch\n\n      addEventListenerTo(item, MC.S_DRAGOVER, MH.preventDefault); // non-touch\n\n      addEventListenerTo(item, MC.S_DRAGEND, onDragEnd); // non-touch\n      addEventListenerTo(item, MC.S_DROP, onDragEnd); // non-touch\n\n      addEventListenerTo(MH.getDoc(), MC.S_POINTERUP, onDragEnd);\n      addEventListenerTo(MH.getDoc(), MC.S_POINTERCANCEL, onDragEnd);\n    }\n  };\n\n  // SETUP ------------------------------\n\n  for (const item of items) {\n    addClasses(item, PREFIX_ITEM);\n    setBooleanData(item, PREFIX_IS_DRAGGABLE);\n  }\n\n  widget.onEnable(setupEvents);\n\n  widget.onDisable(() => {\n    for (const item of items) {\n      undoPreventSelect(item);\n\n      removeEventListenerFrom(item, MC.S_POINTERDOWN, onDragStart);\n\n      removeEventListenerFrom(item, MC.S_DRAGSTART, setIgnoreCancel);\n\n      removeEventListenerFrom(item, MC.S_POINTERENTER, onDragEnter);\n      removeEventListenerFrom(item, MC.S_DRAGENTER, onDragEnter);\n\n      removeEventListenerFrom(item, MC.S_DRAGOVER, MH.preventDefault);\n\n      removeEventListenerFrom(item, MC.S_POINTERUP, onDragEnd);\n      removeEventListenerFrom(item, MC.S_POINTERCANCEL, onDragEnd);\n      removeEventListenerFrom(item, MC.S_DRAGEND, onDragEnd);\n      removeEventListenerFrom(item, MC.S_DROP, onDragEnd);\n    }\n  });\n\n  widget.onDestroy(async () => {\n    for (const item of items) {\n      await removeClasses(item, PREFIX_ITEM);\n      await delData(item, PREFIX_IS_DRAGGABLE);\n    }\n  });\n\n  setupEvents();\n};\n\nconst getMethods = (\n  widget: Sortable,\n  items: Element[],\n  config: SortableConfig | undefined,\n) => {\n  const doSwap = config?.mode === \"swap\";\n\n  const disabledItems: Record<number, boolean> = {};\n  const callbacks = MH.newSet<WidgetCallback>();\n\n  const getSortedItems = () =>\n    [...items].sort((a, b) => (MH.isNodeBAfterA(a, b) ? -1 : 1));\n\n  const getOrigItemNumber = (itemNum: number, currentOrder = false) =>\n    currentOrder ? items.indexOf(getSortedItems()[itemNum - 1]) + 1 : itemNum;\n\n  const isItemDisabled = (itemNum: number, currentOrder = false) =>\n    disabledItems[getOrigItemNumber(itemNum, currentOrder)] === true;\n\n  const disableItem = async (itemNum: number, currentOrder = false) => {\n    itemNum = getOrigItemNumber(toInt(itemNum), currentOrder);\n    if (widget.isDisabled() || itemNum < 1 || itemNum > MH.lengthOf(items)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledItems[itemNum] = true;\n    await unsetBooleanData(items[itemNum - 1], PREFIX_IS_DRAGGABLE);\n  };\n\n  const enableItem = async (itemNum: number, currentOrder = false) => {\n    itemNum = getOrigItemNumber(toInt(itemNum), currentOrder);\n    if (widget.isDisabled() || !isItemDisabled(itemNum)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledItems[itemNum] = false;\n    await setBooleanData(items[itemNum - 1], PREFIX_IS_DRAGGABLE);\n  };\n\n  const toggleItem = (itemNum: number, currentOrder = false) =>\n    isItemDisabled(itemNum, currentOrder)\n      ? enableItem(itemNum, currentOrder)\n      : disableItem(itemNum, currentOrder);\n\n  const onMove = (handler: WidgetHandler) =>\n    callbacks.add(wrapCallback(handler));\n\n  // This is internal only for now...\n  const dragItemOnto = async (dragged: Element, draggedOver: Element) => {\n    if (doSwap) {\n      await swapElements(dragged, draggedOver, { ignoreMove: true });\n    } else {\n      await moveElement(dragged, {\n        to: draggedOver,\n        position: MH.isNodeBAfterA(dragged, draggedOver) ? \"after\" : \"before\",\n        ignoreMove: true,\n      });\n    }\n\n    for (const callback of callbacks) {\n      await callback.invoke(widget);\n    }\n  };\n\n  return {\n    _getSortedItems: getSortedItems,\n    _disableItem: disableItem,\n    _enableItem: enableItem,\n    _toggleItem: toggleItem,\n    _isItemDisabled: isItemDisabled,\n    _onMove: onMove,\n    _dragItemOnto: dragItemOnto,\n  };\n};\n","/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { validateBoolean, validateNumber } from \"@lisn/utils/validation\";\n\nimport { GestureWatcher } from \"@lisn/watchers/gesture-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * This is a simple wrapper around the {@link GestureWatcher}. If you are using\n * the JavaScript API, you should use the {@link GestureWatcher} directly. The\n * purpose of this widget is to expose the watcher's ability to track gestures\n * and set relevant CSS properties via the HTML API. See\n * {@link GestureWatcher.trackGesture}.\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-track-gesture` class or `data-lisn-track-gesture` attribute set on\n *   the element that constitutes the widget.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This will track user gestures over this element and set the relevant CSS\n * properties. It will use the default {@link GestureWatcher} options.\n *\n * ```html\n * <div class=\"lisn-track-gesture\"></div>\n * ```\n *\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <div data-lisn-track-gesture=\"prevent-default=false\n *                               | min-delta-x=-100\n *                               | max-delta-x=100\n *                               | min-delta-y=-100\n *                               | max-delta-y=100\n *                               | min-delta-z=0.5\n *                               | max-delta-z=2\"\n * ></div>\n * ```\n */\nexport class TrackGesture extends Widget {\n  static get(element: Element): TrackGesture | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, TrackGesture)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!TrackGesture.get(element)) {\n          return new TrackGesture(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  constructor(element: Element, config?: TrackGestureConfig) {\n    super(element, { id: DUMMY_ID });\n\n    GestureWatcher.reuse().trackGesture(element, null, {\n      preventDefault: config?.preventDefault,\n      minTotalDeltaX: config?.minDeltaX,\n      maxTotalDeltaX: config?.maxDeltaX,\n      minTotalDeltaY: config?.minDeltaY,\n      maxTotalDeltaY: config?.maxDeltaY,\n      minTotalDeltaZ: config?.minDeltaZ,\n      maxTotalDeltaZ: config?.maxDeltaZ,\n    });\n\n    this.onDestroy(() => GestureWatcher.reuse().noTrackGesture(element));\n  }\n}\n\n/**\n * @interface\n */\nexport type TrackGestureConfig = {\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.preventDefault | OnGestureOptions.preventDefault}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  preventDefault?: boolean;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.minTotalDeltaX | OnGestureOptions.minTotalDeltaX}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  minDeltaX?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.maxTotalDeltaX | OnGestureOptions.maxTotalDeltaX}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  maxDeltaX?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.minTotalDeltaY | OnGestureOptions.minTotalDeltaY}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  minDeltaY?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.maxTotalDeltaY | OnGestureOptions.maxTotalDeltaY}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  maxDeltaY?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.minTotalDeltaZ | OnGestureOptions.minTotalDeltaZ}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  minDeltaZ?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.maxTotalDeltaZ | OnGestureOptions.maxTotalDeltaZ}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  maxDeltaZ?: number;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"track-gesture\";\n// Only one TrackGesture widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = WIDGET_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<TrackGestureConfig> = {\n  preventDefault: validateBoolean,\n  minDeltaX: validateNumber,\n  maxDeltaX: validateNumber,\n  minDeltaY: validateNumber,\n  maxDeltaY: validateNumber,\n  minDeltaZ: validateNumber,\n  maxDeltaZ: validateNumber,\n};\n","/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { validateNumber } from \"@lisn/utils/validation\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * This is a simple wrapper around the {@link ScrollWatcher}. If you are using\n * the JavaScript API, you should use the {@link ScrollWatcher} directly. The\n * purpose of this widget is to expose the watcher's ability to track scroll\n * and set relevant CSS properties via the HTML API. See\n * {@link ScrollWatcher.trackScroll}.\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-track-scroll` class or `data-lisn-track-scroll` attribute set on\n *   the element that constitutes the widget.\n *\n * @example\n * This will track scroll on this element and set the relevant CSS properties.\n *\n * ```html\n * <div class=\"lisn-track-scroll\"></div>\n * ```\n *\n * @example\n * As above but with custom options\n *\n * ```html\n * <div data-lisn-track-scroll=\"threshold=0 | debounce-window=0\"></div>\n * ```\n */\nexport class TrackScroll extends Widget {\n  static get(element: Element): TrackScroll | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, TrackScroll)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!TrackScroll.get(element)) {\n          return new TrackScroll(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  constructor(element: Element, config?: TrackScrollConfig) {\n    super(element, { id: DUMMY_ID });\n\n    ScrollWatcher.reuse().trackScroll(\n      null,\n      MH.assign(\n        {\n          scrollable: element,\n        },\n        config,\n      ),\n    );\n\n    this.onDestroy(() => ScrollWatcher.reuse().noTrackScroll(null, element));\n  }\n}\n\n/**\n * @interface\n */\nexport type TrackScrollConfig = {\n  /**\n   * Corresponds to\n   * {@link Watchers/ScrollWatcher.OnScrollOptions.threshold | OnScrollOptions.threshold}.\n   *\n   * @defaultValue undefined // ScrollWatcher default\n   */\n  threshold?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ScrollWatcher.OnScrollOptions.debounceWindow | OnScrollOptions.debounceWindow}.\n   *\n   * @defaultValue undefined // ScrollWatcher default\n   */\n  debounceWindow?: number;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"track-scroll\";\n// Only one TrackScroll widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = WIDGET_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<TrackScrollConfig> = {\n  threshold: validateNumber,\n  debounceWindow: validateNumber,\n};\n","/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { validateNumber } from \"@lisn/utils/validation\";\n\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * This is a simple wrapper around the {@link SizeWatcher}. If you are using\n * the JavaScript API, you should use the {@link SizeWatcher} directly. The\n * purpose of this widget is to expose the watcher's ability to track size\n * and set relevant CSS properties via the HTML API. See\n * {@link SizeWatcher.trackSize}.\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-track-size` class or `data-lisn-track-size` attribute set on\n *   the element that constitutes the widget.\n *\n * This widget does not support configuration and uses the default\n * {@link SizeWatcher} configuration except for resize threshold equal to 0.\n *\n * @example\n * This will track the size of this element and set the relevant CSS\n * properties. It will use the default {@link SizeWatcher} options and resize\n * threshold of 0.\n *\n * ```html\n * <div class=\"lisn-track-size\"></div>\n * ```\n *\n * @example\n * As above but with custom options\n *\n * ```html\n * <div data-lisn-track-size=\"threshold=0 | debounce-window=0\"></div>\n * ```\n */\nexport class TrackSize extends Widget {\n  static get(element: Element): TrackSize | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, TrackSize)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!TrackSize.get(element)) {\n          return new TrackSize(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  constructor(element: Element, config?: TrackSizeConfig) {\n    super(element, { id: DUMMY_ID });\n\n    SizeWatcher.reuse().trackSize(\n      null,\n      MH.assign(\n        {\n          target: element,\n        },\n        config,\n      ),\n    );\n\n    this.onDestroy(() => SizeWatcher.reuse().noTrackSize(null, element));\n  }\n}\n\n/**\n * @interface\n *\n * @since v1.2.0\n */\nexport type TrackSizeConfig = {\n  /**\n   * Corresponds to\n   * {@link Watchers/SizeWatcher.OnResizeOptions.threshold | OnResizeOptions.threshold}.\n   *\n   * @defaultValue undefined // SizeWatcher default\n   */\n  threshold?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/SizeWatcher.OnResizeOptions.debounceWindow | OnResizeOptions.debounceWindow}.\n   *\n   * @defaultValue undefined // SizeWatcher default\n   */\n  debounceWindow?: number;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"track-size\";\n// Only one TrackSize widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = WIDGET_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<TrackSizeConfig> = {\n  threshold: validateNumber,\n  debounceWindow: validateNumber,\n};\n","/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport {\n  validateNumber,\n  validateString,\n  validateNumList,\n} from \"@lisn/utils/validation\";\n\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorFunc,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * This is a simple wrapper around the {@link ViewWatcher}. If you are using\n * the JavaScript API, you should use the {@link ViewWatcher} directly. The\n * purpose of this widget is to expose the watcher's ability to track an\n * element's position across the viewport (or a given root element) and set\n * relevant CSS properties via the HTML API. See {@link ViewWatcher.trackView}.\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-track-view` class or `data-lisn-track-view` attribute set on\n *   the element that constitutes the widget.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * Note that the root margin value can either be comma-separated or\n * space-separated.\n *\n * @example\n * This will track the element across the viewport and set the relevant CSS\n * properties.\n *\n * ```html\n * <div class=\"lisn-track-view\"></div>\n * ```\n *\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <div id=\"myRoot\"></div>\n * <div data-lisn-track-view=\"root=#myRoot\n *                            | root-margin=100px,50px\n *                            | threshold=0,0.5\n *                            | debounce-window=0\n *                            | resize-threshold=0\n *                            | scroll-threshold=0\"\n * ></div>\n * ```\n */\nexport class TrackView extends Widget {\n  static get(element: Element): TrackView | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, TrackView)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!TrackView.get(element)) {\n          return new TrackView(element, config);\n        }\n        return null;\n      },\n      newConfigValidator,\n    );\n  }\n\n  constructor(element: Element, config?: TrackViewConfig) {\n    super(element, { id: DUMMY_ID });\n\n    const watcher = ViewWatcher.reuse({\n      root: config?.root,\n      rootMargin: config?.rootMargin?.replace(/,/g, \" \"),\n      threshold: config?.threshold,\n    });\n\n    watcher.trackView(element, null, config);\n\n    this.onDestroy(() => watcher.noTrackView(element));\n  }\n}\n\n/**\n * @interface\n */\nexport type TrackViewConfig = {\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.ViewWatcherConfig.root | ViewWatcherConfig.root}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  root?: Element | null;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.ViewWatcherConfig.rootMargin | ViewWatcherConfig.rootMargin}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  rootMargin?: string;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.ViewWatcherConfig.threshold | ViewWatcherConfig.threshold}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  threshold?: number | number[];\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.TrackViewOptions.debounceWindow | TrackViewOptions.debounceWindow}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  debounceWindow?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.TrackViewOptions.resizeThreshold | TrackViewOptions.resizeThreshold}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  resizeThreshold?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.TrackViewOptions.scrollThreshold | TrackViewOptions.scrollThreshold}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  scrollThreshold?: number;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"track-view\";\n// Only one TrackView widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = WIDGET_NAME;\n\nconst newConfigValidator: WidgetConfigValidatorFunc<TrackViewConfig> = (\n  element: Element,\n) => {\n  return {\n    root: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    rootMargin: validateString,\n    threshold: (key, value) => validateNumList(key, value),\n    debounceWindow: validateNumber,\n    resizeThreshold: validateNumber,\n    scrollThreshold: validateNumber,\n  };\n};\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nexport * from \"@lisn/widgets/auto-hide\";\nexport * from \"@lisn/widgets/openable\";\nexport * from \"@lisn/widgets/page-loader\";\nexport * from \"@lisn/widgets/pager\";\nexport * from \"@lisn/widgets/same-height\";\nexport * from \"@lisn/widgets/scrollbar\";\nexport * from \"@lisn/widgets/scroll-to-top\";\n// export * from \"@lisn/widgets/smooth-scroll\";\nexport * from \"@lisn/widgets/sortable\";\nexport * from \"@lisn/widgets/track-gesture\";\nexport * from \"@lisn/widgets/track-scroll\";\nexport * from \"@lisn/widgets/track-size\";\nexport * from \"@lisn/widgets/track-view\";\n\nexport * from \"@lisn/widgets/widget\";\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport \"@lisn/bundle-slim\"; // side effects\n\nimport * as actions from \"@lisn/actions/index\";\nimport * as triggers from \"@lisn/triggers/index\";\nimport * as widgets from \"@lisn/widgets/index\";\n\nexport * from \"@lisn/bundle-essentials\";\nexport * as actions from \"@lisn/actions/index\";\nexport * as triggers from \"@lisn/triggers/index\";\nexport * as widgets from \"@lisn/widgets/index\";\n\nactions.AddClass.register();\nactions.RemoveClass.register();\nactions.AnimatePlay.register();\nactions.AnimatePause.register();\nactions.Animate.register();\nactions.Display.register();\nactions.Undisplay.register();\nactions.Open.register();\nactions.NextPage.register();\nactions.PrevPage.register();\nactions.GoToPage.register();\nactions.EnablePage.register();\nactions.DisablePage.register();\nactions.ScrollTo.register();\nactions.SetAttribute.register();\nactions.Show.register();\nactions.Hide.register();\nactions.Enable.register();\nactions.Disable.register();\nactions.Run.register();\n\ntriggers.LayoutTrigger.register();\ntriggers.LoadTrigger.register();\ntriggers.CheckTrigger.register();\ntriggers.ClickTrigger.register();\ntriggers.PressTrigger.register();\ntriggers.HoverTrigger.register();\ntriggers.ScrollTrigger.register();\ntriggers.Trigger.register();\ntriggers.ViewTrigger.register();\n\nwidgets.AutoHide.register();\nwidgets.Collapsible.register();\nwidgets.Popup.register();\nwidgets.Modal.register();\nwidgets.Offcanvas.register();\nwidgets.PageLoader.register();\nwidgets.Pager.register();\nwidgets.SameHeight.register();\nwidgets.Scrollbar.register();\nwidgets.ScrollToTop.register();\n// widgets.SmoothScroll.register();\nwidgets.Sortable.register();\nwidgets.TrackGesture.register();\nwidgets.TrackScroll.register();\nwidgets.TrackSize.register();\nwidgets.TrackView.register();\n"],"names":["PREFIX","LOG_PREFIX","OBJECT","Object","SYMBOL","Symbol","ARRAY","Array","STRING","String","FUNCTION","Function","MATH","Math","NUMBER","Number","PROMISE","Promise","PI","INFINITY","Infinity","S_ABSOLUTE","S_FIXED","S_STICKY","S_WIDTH","S_HEIGHT","S_TOP","S_BOTTOM","S_UP","S_DOWN","S_LEFT","S_RIGHT","S_AT","S_ABOVE","S_BELOW","S_IN","S_OUT","S_NONE","S_AMBIGUOUS","S_ADDED","S_REMOVED","S_ATTRIBUTE","S_KEY","S_MOUSE","S_POINTER","S_TOUCH","S_WHEEL","S_CLICK","S_HOVER","S_PRESS","S_SCROLL","S_ZOOM","S_DRAG","S_UNKNOWN","S_SCROLL_TOP","S_SCROLL_LEFT","S_SCROLL_WIDTH","S_SCROLL_HEIGHT","S_CLIENT_WIDTH","S_CLIENT_HEIGHT","S_SCROLL_TOP_FRACTION","S_SCROLL_LEFT_FRACTION","S_HORIZONTAL","S_VERTICAL","S_SKIP_INITIAL","S_DEBOUNCE_WINDOW","S_TOGGLE","S_CANCEL","S_KEYDOWN","S_MOUSEUP","S_MOUSEDOWN","S_POINTERUP","S_POINTERDOWN","S_POINTERENTER","S_POINTERLEAVE","S_POINTERMOVE","S_POINTERCANCEL","S_TOUCHSTART","S_TOUCHEND","S_TOUCHMOVE","S_TOUCHCANCEL","S_DRAGSTART","S_DRAGEND","S_DRAGENTER","S_DRAGOVER","S_DROP","S_SELECTSTART","S_ATTRIBUTES","S_CHILD_LIST","S_REVERSE","S_DRAGGABLE","S_DISABLED","S_ARROW","S_ROLE","ARIA_PREFIX","S_ARIA_CONTROLS","PREFIX_WRAPPER","PREFIX_INLINE_WRAPPER","PREFIX_TRANSITION","PREFIX_TRANSITION_DISABLE","PREFIX_HIDE","PREFIX_SHOW","PREFIX_DISPLAY","PREFIX_UNDISPLAY","PREFIX_PLACE","PREFIX_ORIENTATION","PREFIX_POSITION","PREFIX_GHOST","PREFIX_NO_SELECT","PREFIX_NO_TOUCH_ACTION","PREFIX_NO_WRAP","S_ANIMATE","ANIMATE_PREFIX","PREFIX_ANIMATE_DISABLE","PREFIX_ANIMATE_PAUSE","PREFIX_ANIMATE_REVERSE","LisnError","Error","LisnUsageError","constructor","message","name","LisnBugError","root","self","global","userAgent","navigator","kebabToCamelCase","str","replace","m","toUpperCase","charAt","camelToKebabCase","toLowerCase","prefixName","MC","prefixCssVar","prefixCssJsVar","prefixData","s","timeNow","Date","now","bind","timeSince","startTime","hasDOM","document","getWindow","window","getDoc","getDocElement","documentElement","getDocScrollingElement","scrollingElement","getBody","body","getReadyState","readyState","getPointerType","event","isPointerEvent","pointerType","isMouseEvent","onAnimationFrame","callback","requestAnimationFrame","createElement","tagName","options","createButton","label","tag","btn","setTabIndex","setAttr","isNullish","v","undefined","isEmpty","isIterableObject","isNonPrimitive","iterator","isArray","isInstanceOf","isObject","typeOf","isNumber","isString","isLiteralString","isBoolean","isFunction","isDoc","target","MouseEvent","PointerEvent","isTouchPointerEvent","isWheelEvent","WheelEvent","isKeyboardEvent","KeyboardEvent","isTouchEvent","TouchEvent","isElement","Element","isHTMLElement","HTMLElement","isNodeBAfterA","nodeA","nodeB","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","strReplace","match","replacement","setTimer","setTimeout","clearTimer","clearTimeout","getBoundingClientRect","element","copyBoundingRectProps","rect","x","left","right","y","top","bottom","querySelector","selector","querySelectorAll","docQuerySelector","docQuerySelectorAll","getElementById","id","getAttr","getAttribute","value","setAttribute","unsetAttr","delAttr","removeAttribute","includes","arr","startAt","indexOf","some","array","predicate","filter","filterFn","filterBlank","result","lengthOf","sizeOf","obj","_obj$size","size","_obj$length","length","lastOf","a","slice","hasTagName","preventDefault","arrayFrom","from","keysOf","keys","defineProperty","merge","assign","copyObject","promiseResolve","resolve","promiseAll","all","freeze","hasOwnProp","o","prop","prototype","hasOwnProperty","call","preventExtensions","stringify","JSON","floor","ceil","log2","sqrt","max","min","abs","round","pow","exp","parseFloat","isNaN","Class","constructorOf","typeOrClassOf","_constructorOf","parentOf","_element$parentElemen","parentElement","childrenOf","children","targetOf","currentTargetOf","currentTarget","classList","S_TABINDEX","getTabIndex","index","unsetTabIndex","remove","deleteObjKey","key","deleteKey","map","delete","elScrollTo","coords","behavior","scrollTo","newPromise","executor","newMap","entries","Map","newWeakMap","WeakMap","newSet","values","Set","newWeakSet","WeakSet","newIntersectionObserver","IntersectionObserver","newResizeObserver","ResizeObserver","newMutationObserver","MutationObserver","usageError","msg","bugError","illegalConstructorError","useWhat","CONSOLE","console","debug","log","info","consoleWarn","warn","consoleError","error","settings","MH","mainScrollableElementSelector","contentWrappingAllowed","pageLoadTimeout","autoWidgets","scrollbarHideNative","scrollbarOnMobile","scrollbarPositionH","scrollbarPositionV","scrollbarAutoHide","scrollbarClickScroll","scrollbarDragScroll","scrollbarUseHandle","sameHeightDiffTolerance","sameHeightResizeThreshold","sameHeightDebounceWindow","sameHeightMinGap","sameHeightMaxFreeR","sameHeightMaxWidthR","deviceBreakpoints","mobile","tablet","desktop","aspectRatioBreakpoints","tall","square","wide","lightThemeClassName","darkThemeClassName","deltaLineHeight","deltaPageWidth","deltaPageHeight","verbosityLevel","remoteLoggerURL","remoteLoggerOnMobileOnly","roundNumTo","numDecimal","multiplicationFactor","isValidNum","isFinite","toNum","defaultValue","numValue","toInt","toNonNegNum","toPosNum","toNumWithBounds","limits","_limits$min","_limits$max","isDefaultGiven","_ref","maxAbs","havingMaxAbs","sort","b","hAngle","normalizeAngle","atan2","degToRad","areParallel","vA","vB","angleDiffThreshold","angleA","angleB","areAntiParallel","distanceBetween","ptA","ptB","quadraticRoots","c","z","criticallyDamped","lTarget","precision","lag","N","w0","l","dt","A","B","e","sortedKeysByVal","descending","keyWithMaxVal","getBitmask","start","end","copyExistingKeys","fromObj","toObj","omitKeys","keysToRm","res","compareValuesIn","objA","objB","roundTo","valA","valB","toArrayIfSingle","toBoolean","formatAsString","maxLen","maybeConvertToString","joinAsString","separator","args","join","splitOn","input","trim","limit","output","addEntry","push","matchIndex","matchLength","_match$index","exec","randId","nChars","segment","random","toString","toMargins","absoluteSize","_parts$","_parts$2","_parts$3","toPxValue","strValue","margin","parts","margins","objToStrKey","flattenForSorting","k","stringifyReplacer","nested","classStr","stack","validateStrList","checkFn","_toArray","toArray","_validateString","validateNumList","_toArray2","_validateNumber","validateNumber","validateBoolean","_validateBoolean","validateString","validateStringRequired","validateBooleanOrString","stringCheckFn","_validateBooleanOrString","typeDescription","numVal","boolVal","BitSpaces","counter","newCounter","create","propNames","newBitSpace","get","_nBits","_bitmask","newBitSpaces","createBitSpace","spaces","bitmask","space","bit","has","p","bitmaskFor","pStart","pEnd","thisStart","thisEnd","nameOf","val","_propNames","enumerable","DOM_CATEGORIES_SPACE","scheduleHighPriorityTask","task","scheduler","postTask","priority","channel","MessageChannel","port1","onmessage","close","port2","postMessage","getDebouncedHandler","debounceWindow","handler","timer","lastArgs","waitForDelay","delay","wrapCallback","handlerOrCallback","isRemoved","callablesMap","invoke","wrapper","Callback","onRemove","rmFn","CallbackScheduler","_clear","fn","add","reject","_push","err","REMOVE","set","_defineProperty","queues","flush","queue","_running","_task","shift","item","_onRemove","logWarn","isMessageSeen","logError","discardMessages","isSeen","waitForMutateTime","scheduleDOMTask","scheduledDOMMutations","waitForMeasureTime","scheduledDOMMeasurements","waitForSubsequentMutateTime","then","waitForSubsequentMeasureTime","asyncMutatorFor","func","asyncMeasurerFor","hasScheduledDOMTasks","runAllDOMTasks","runDOMTaskQueue","getVisibleContentChildren","ch","isVisibleContentTag","isInlineTag","inlineTags","isDOMElement","SVGElement","MathMLElement","transitionElementNow","fromCls","toCls","cancelCSSTransitions","didChange","hasClass","removeClassesNow","addClassesNow","transitionElement","thisTransition","scheduleCSSTransition","_isCancelled","_finish","transitionDuration","getMaxTransitionDuration","displayElementNow","displayElement","undisplayElementNow","undisplayElement","showElement","hideElement","toggleDisplayElement","isElementUndisplayed","toggleShowElement","isElementHidden","className","contains","hasAnyClass","classNames","addClasses","removeClasses","toggleClassNow","force","toggle","toggleClassesNow","cls","toggleClasses","getData","getBooleanData","setDataNow","setData","setBooleanDataNow","setBooleanData","unsetBooleanDataNow","unsetBooleanData","delDataNow","delData","getComputedStylePropNow","getComputedStyle","getPropertyValue","getComputedStyleProp","getStylePropNow","_style","style","getStyleProp","setStylePropNow","_style2","setProperty","setStyleProp","delStylePropNow","_style3","removeProperty","delStyleProp","getFlexDirection","displayStyle","getParentFlexDirection","parent","propVal","duration","disableInitialTransition","setHasModal","PREFIX_HAS_MODAL","delHasModal","copyStyle","fromElement","toElement","includeComputedProps","props","setNumericStyleJsVarsNow","_options$_prefix","varPrefix","_prefix","cssPropSuffix","varName","_options$_numDecimal","thisNumDecimal","_numDecimal","_options$_units","_units","setNumericStyleJsVars","scheduledCSSTransitions","toClasses","scheduledTransitions","scheduledTransition","_cancel","isCancelled","wrapElementNow","createWrapperFor","ignoreMove","to","replaceWith","append","wrapElement","wrapChildrenNow","moveChildrenNow","moveElementNow","wrapChildren","replaceElementNow","newElement","swapElementsNow","elementA","elementB","temp","swapElements","oldParent","newParent","child","_options$to","parentEl","position","moveElement","hideAndRemoveElement","getOrAssignID","prefix","domID","isAllowedToWrap","getWrapper","_tagName","_classNames","getContentWrapper","firstChild","tryWrapNow","_tryWrapNow","tryWrap","tryWrapContentNow","tryWrapContent","unwrapContentNow","cloneElement","clone","cloneNode","insertGhostCloneNow","insertBefore","_required","_wrapper","_clone","insertGhostClone","_options$from","_options$to2","recordsToSkipOnce","getIgnoreMove","_recordsToSkipOnce$ge","clearIgnoreMove","insertArrow","direction","arrow","wrapContent","_ignoreMove","required","_requiredBy","requiredBy","getWrapperFn","wrapFn","allowedToWrap","waitForElement","timeout","callFn","observer","disconnect","observe","childList","subtree","waitForElementOrInteractive","isInteractive","waitForInteractive","INTERACTIVE","COMPLETE","addEventListener","waitForComplete","waitForPageReady","pageIsReady","dispatchReady","isPageReady","newXMap","getDefaultV","XMap","newXMapGetter","newXWeakMap","XWeakMap","newXWeakMapGetter","XMapBase","sGet","prune","sk","rest","clear","DOMWatcher","config","getConfig","CONSTRUCTOR_KEY","reuse","_instances$get","myConfig","configStrKey","_root","instance","instances","buffer","t","_target","_categoryBitmask","_attributes","_addedTo","_removedFrom","allCallbacks","mutationHandler","records","record","recType","type","addedNodes","operation","ADDED_BIT","removedNodes","REMOVED_BIT","attributeName","ATTRIBUTE_BIT","shouldSkipOperation","processOperation","observers","_observer","_isActive","createCallback","_allCallbacks$get","_callback","deleteHandler","_options","setupOnMutation","userOptions","_config$_root","getOptions","activateObserver","skipInitial","_selector","childQueue","takeRecords","matches","initOperation","bufferedOperation","diffOperation","getDiffOperation","invokeCallback","activeCategories","entry","deactivateObserver","categoryBitmask","currentTargets","mutationType","_subtree","_config$_root2","requestToSkip","removedFrom","addedTo","requestFrom","requestTo","onMutation","offMutation","_allCallbacks$get2","_config$root","_config$subtree","CATEGORIES_BITS","_options$selector","_options$target","categories","cat","operationA","operationB","attributes","attr","catch","getMaxDeltaDirection","deltaX","deltaY","getVectorDirection","vector","getOppositeDirection","OPPOSITE_DIRECTIONS","getOppositeXYDirections","directions","directionList","isValidXYDirection","opposites","opposite","XY_DIRECTIONS","isValidDirection","DIRECTIONS","Z_DIRECTIONS","SCROLL_DIRECTIONS","callEventListener","_event$currentTarget","_event$currentTarget2","handleEvent","addEventListenerTo","eventType","transformEventType","getEventHandlerData","thirdArg","wrappedHandler","supports","getBrowserSupport","_optionsArg","_options$capture","capture","once","removeEventListenerFrom","setEventHandlerData","_wrappedHandler","_thirdArg","data","removeEventListener","deleteEventHandlerData","preventSelect","undoPreventSelect","browserEventSupport","_pointer","passive","signal","optTest","opt","thisOpt","AbortController","dummyHandler","dummyElement","e__ignored","registeredEventHandlerData","getEventOptionsStr","finalOptions","_registeredEventHandl","optionsStr","_registeredEventHandl2","startsWith","isValidInputDevice","device","DEVICES","isValidIntent","intent","INTENTS","addDeltaZ","current","increment","MIN_DELTA_Z","getKeyGestureFragment","events","_options$scrollHeight","LINE","PAGE","CONTENT","scrollHeight","deltasUp","amount","deltasDown","deltasLeft","deltasRight","deltasIn","deltasOut","deltaZ","_deltasForKey$event$k","deltasForKey","SK_UP","SK_ARROWUP","SK_PAGEUP","Home","SK_DOWN","SK_ARROWDOWN","SK_PAGEDOWN","End","SK_LEFT","SK_ARROWLEFT","SK_RIGHT","SK_ARROWRIGHT","shiftKey","ctrlKey","theseDeltas","thisDeltaX","thisDeltaY","thisDeltaZ","thisIntent","SK_PAGE","SK_ARROW","getPointerGestureFragment","pointerEventClass","pointerUpType","filteredEvents","eType","buttons","numEvents","firstEvent","lastEvent","clientX","clientY","getTouchGestureFragment","_options$dragHoldTime","_options$dragNumFinge","moves","getTouchDiff","deltaThreshold","numMoves","holdTime","getHoldTime","canBeDrag","dragHoldTime","dragNumFingers","d","isSignificant","vectorA","vectorB","startDistance","startX","startY","endDistance","endX","endY","deltaSign","reverseScroll","isFirst","thisDirection","lastTouchEvent","touches","groupedTouches","touch","identifier","touchList","nTouches","firstTouch","lastTouch","firstStart","findIndex","firstMove","timeStamp","normalizeWheel","spinX","spinY","pixelX","pixelY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","deltaMode","getWheelGestureFragment","maxDelta","percentage","GestureWatcher","allListeners","getCallbackAndWrapper","setupOnGesture","_options$_devices","_devices","_allListeners$get","listeners","setupListeners","_nCallbacks","_preventDefault","_nPreventDefault","_options$_devices2","_allListeners$get2","_remove","invokeCallbacks","_allListeners$get$get","_allListeners$get3","isTerminated","intents","_intents","hasAddedTabIndex","hasPreventedSelect","addOrRemoveListeners","action","listener","eventTypes","method","addInitialListener","initialListener","initiatingEvents","removeInitialListener","addOngoingListener","processEvent","ongoingEvents","removeOngoingListener","trackGesture","setGestureCssProps","totalDeltaX","totalDeltaY","totalDeltaZ","noTrackGesture","offGesture","onGesture","_allCallbacks$get3","_config$preventDefaul","_config$naturalTouchS","_config$touchDragHold","_config$touchDragNumF","_debounceWindow","_deltaThreshold","_angleDiffThreshold","_naturalTouchScroll","naturalTouchScroll","_touchDragHoldTime","touchDragHoldTime","_touchDragNumFingers","touchDragNumFingers","pointer","wheel","fragmentGetters","_validateStrList","_validateStrList2","_validateStrList3","_options$minTotalDelt","_options$maxTotalDelt","_options$minTotalDelt2","_options$maxTotalDelt2","_options$minTotalDelt3","_options$maxTotalDelt3","_options$preventDefau","_options$naturalTouch","_options$touchDragHol","_options$touchDragNum","devices","_directions","_minTotalDeltaX","minTotalDeltaX","_maxTotalDeltaX","maxTotalDeltaX","_minTotalDeltaY","minTotalDeltaY","_maxTotalDeltaY","maxTotalDeltaY","_minTotalDeltaZ","minTotalDeltaZ","_maxTotalDeltaZ","maxTotalDeltaZ","logger","preventNextClick","eventQueue","debouncedWrapper","fragment","eventQueueCopy","_eventQueueCopy","_eventQueueCopy$","clearEventQueue","newTotalDeltaX","newTotalDeltaY","newTotalDeltaZ","time","preventDefaultActionFor","keepLastEvent","splice","isActualGesture","isPointerDown","focus","preventScroll","isValidDeviceList","isValidForType","S_DEVICES","ORDERED_DEVICES","isValidAspectRatioList","aspectR","S_ASPECTRS_CAMEL","ORDERED_ASPECTR","getOtherDevices","getOtherLayouts","getOtherAspectRatios","getLayoutBitmask","layoutBitmask","getBitmaskFromSpec","aspectRatios","ORDERED_DEVICE_NAMES","ORDERED_ASPECTR_NAMES","bitSpaces","NUM_LAYOUTS","LAYOUT_RANGE_REGEX","RegExp","getLayoutsFromBitmask","keyName","bitSpace","layouts","spec","oppositeBitmask","singleKeyName","rangeMatch","minLayout","maxLayout","lt","waitForAnimationFrame","newAnimationFrameIterator","_x","_newAnimationFrameIterator","apply","arguments","_wrapAsyncGenerator","elapsed","previousTimeStamp","total","totalSeed","sinceLast","sinceLastSeed","step","totalElapsed","elapsedSinceLast","iterateAnimations","webAnimationCallback","legacyCallback","realtime","animation","getAnimations","resetCssAnimationsNow","isScrollable","axis","active","noCache","_isScrollableCache$ge","cachedResult","isScrollableCache","offset","canScroll","dimension","hasOverflow","overflowProp","IS_SCROLLABLE_CACHE_TIMEOUT","getClosestScrollable","ancestor","getCurrentScrollAction","scrollable","toScrollableOrDefault","currentScrollInfos","_action","_scrollable","cancel","cancelFn","_weCanInterrupt","scrollEvents","preventScrollHandler","_userCanInterrupt","thisInfo","waitFor","scrollActionPromise","cleanup","_currentScrollInfos$g","initiateScroll","updateCurrentScrollInfo","isValidScrollDirection","mapScrollable","original","actualScrollable","mappedScrollables","unmapScrollable","getClientWidthNow","isScrollableBodyInQuirks","offsetWidth","getBorderWidth","getClientHeightNow","offsetHeight","fetchMainContentElement","init","mainContentElement","tryGetMainScrollableElement","mainScrollableElement","fetchMainScrollableElement","getDefaultScrollingElement","_MH$getDocScrollingEl","fetchScrollableElement","toScrollableOrMain","DIFF_THRESHOLD","arePositionsDifferent","threshold","side","getMain","_mappedScrollables$ge","_options$offset","_options$altOffset","_options$duration","_options$weCanInterru","_options$userCanInter","getTargetCoordinates","altTarget","_offset","_altTarget","_altOffset","altOffset","_duration","weCanInterrupt","userCanInterrupt","newInfo","_newInfo$_action","existingScrollInfo","isDocScrollingElement","targetEl","getStartEndPosition","applyOffset","_offset$top","_offset$left","getEndPosition","_start","_end","startPosition","targetCoordinates","endPosition","scrollH","scrollW","clientH","clientW","_existingScrollInfo$_","_existingScrollInfo$_2","currentPosition","_position","currentVelocity","_velocity","_elapsed","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_asyncIterator","_step","next","done","deltaTime","debug8","isDone","return","initPromise","contentElement","createOverlay","fetchOverlayOptions","canReuse","_id","_overlays$get2","existingOverlay","overlays","_parent","_overlayKey","overlay","createOnlyOverlay","isPercentageHOffset","isPercentageVOffset","needsContentWrapping","_userOptions$data2","_userOptions$id2","getCssProperties","fetchParent","_data","getOverlayKey","finalCssProperties","userSuppliedParent","getEntryContentBox","contentBoxSize","getSizeFromInlineBlock","contentRect","getEntryBorderBox","fallbackToContent","borderBoxSize","NaN","isValidBox","box","ALL_BOXES","isValidDimension","ALL_DIMENSIONS","tryGetViewportOverlay","viewportOverlay","fetchViewportOverlay","fetchViewportSize","_root$clientWidth","_root$clientHeight","clientWidth","clientHeight","S_INLINE_SIZE","S_BLOCK_SIZE","XResizeObserver","targetsToSkip","observedTargets","resizeHandler","skipNum","borderObserver","contentObserver","observeTarget","targets","observeLater","unobserve","SizeWatcher","allSizeData","processEntry","xObserver","fetchCurrentSize","fetchElement","sizeData","getSizeData","border","content","fetchOptions","_options$box","_options$dimension","_options$MC$S_DEBOUNC","_element","_box","_dimension","_threshold","_resizeThreshold","setupOnResize","removeOnResize","currEntry","setSizeCssProps","latestData","thresholdsExceeded","hasExceededThreshold","trackSize","noTrackSize","onResize","offResize","resizeThreshold","lastThresholdData","dim","diff","borderBox","contentBox","borderWidth","borderHeight","contentWidth","contentHeight","LayoutWatcher","nonIntersectingBitmask","currentLayoutData","aspectRatio","fetchCurrentLayout","readyPromise","setupOverlays","createOverlays","_deviceBreakpoints","_aspectRatioBreakpoints","isReady","intersectionHandler","numEntries","getNonIntersecting","processLayoutChange","observeOptions","rootMargin","triggerOverlay","_layoutBitmask","setupOnLayout","layoutData","changeMatches","skipCallbacks","deviceBit","aspectRatioBit","onLayout","offLayout","VAR_BORDER_HEIGHT","PREFIX_DEVICE","PREFIX_ASPECTR","overlayPromises","overlayParent","parentHeightCss","getOverlayLayout","layout","thisLayoutData","prevLayoutData","isIntersecting","isValidPointerAction","POINTER_ACTIONS","PointerWatcher","setupOnPointer","startHandler","endHandler","startCallback","endCallback","_actions","listenerSetupFn","onPointer","offPointer","_config$preventSelect","_preventSelect","_options$preventSelec","actions","setupClickListener","toggleState","state","setupPointerListeners","startEventSuff","endEventSuff","startEvent","endEvent","startListener","endListener","click","hover","press","actionData","ScrollWatcher","allScrollData","activeListeners","fetchCurrentScroll","isScrollEvent","previousEventData","fetchScrollData","trackType","_trackType","setupOnScroll","fetchOnScrollOptions","eventTarget","_eventTarget","scrollData","TRACK_FULL","setupSizeTrack","listenerOptions","_nRealtime","scrollHandler","directionMatches","removeOnScroll","setScrollCssProps","scrollCallback","doc","docScrollingElement","resizeCallback","sizeWatcher","observedElements","domWatcher","onAddedCallback","_activeListeners$get$","_activeListeners$get","scroll","_options$amount","isVertical","sign","targetCoordinate","asFractionOf","el","_scrollDuration","fetchCurrentScrollAction","stopUserScrolling","stopScroll","immediate","trackScroll","noTrackScroll","onScroll","TRACK_REGULAR","offScroll","_scrollThreshold","scrollThreshold","scrollDuration","getEventTarget","userDirections","latestDirection","topDiff","leftDiff","checkTop","checkLeft","_previousEventData$sc","_previousEventData$sc2","scrollTop","scrollLeft","scrollWidth","scrollTopFraction","scrollLeftFraction","prevScrollTop","prevScrollLeft","isValidScrollOffset","OFFSET_REGEX","isValidView","view","VIEWS","getOppositeViews","views","getViewsBitmask","VIEWS_SPACE","at","above","below","getViewsFromBitmask","viewsStr","viewsBitmask","parseScrollOffset","reference","XIntersectionObserver","selectedEntries","thresholds","ViewWatcher","allViewData","_rootMargin","fetchCurrentView","fetchData","entryOrElement","intersection","fetchIntersectionData","fetchViewData","promise","setupOnView","viewData","rootBounds","setupInviewTrack","viewsToBitmask","_viewsBitmask","removeOnView","setViewCssProps","viewCallback","scrollWatcher","isInview","removeTrackCallback","scrollableAncestors","fetchScrollableAncestors","addTrackCallback","trackCallback","prevData","changed","viewChanged","enterOrLeaveCallback","target__ignored","trackView","noTrackView","onView","offView","_config$rootMargin","_config$threshold","targetBounds","relative","entryOrTarget","vpSize","rootMargins","isCrossOrigin","IntersectionObserverEntry","boundingClientRect","fetchBounds","_targetBounds","_rootMargins","_rootBounds","_isIntersecting","_isCrossOrigin","width","height","_intersection$_isInte","vpHeight","vpWidth","fetchViews","hMiddle","vMiddle","useScrollingAncestor","delta","_left","_right","_top","_bottom","xView","yView","scrollingAncestor","_viewData$relative","overlayOptions","getOverlayOptions","ovrDimension","Widget","_instances$get$get","_instances$get2","destroy","isDisabled","isDestroyed","destroyPromise","enableCallbacks","disableCallbacks","destroyCallbacks","disable","enable","toggleEnable","onDisable","onEnable","elInstances","onDestroy","getElement","registerWidget","newWidget","configValidator","registeredWidgets","prefixedName","getDefaultWidgetSelector","thisConfigValidator","widgets","configSpecs","dataAttr","supportsMultiple","fetchWidgetConfig","theseWidgets","w","getWidgetConfig","validator","toOptionsObject","configPromises","fetchUniqueWidget","Type","widget","registerAction","newAction","registeredActions","newActionFromSpec","argsAndOptions","fetchAction","AddClass","register","_add","_toggle","getMethods","do","undo","RemoveClass","Animate","animate","GO_FORWARD","GO_BACKWARD","GO_TOGGLE","isInitial","setupAnimation","setupAnimationLegacy","pauseTillReady","isBackward","playbackRate","reverse","playState","play","pause","CSSAnimation","cancelHandler","onAnimationCancel","Animation","effect","KeyframeEffect","newAnimation","_MH$targetOf","animationName","isPaused","goBackwards","doPause","AnimatePlay","_play","_pause","PAUSE","AnimatePause","PLAY","TOGGLE","Display","_display","_undisplay","Undisplay","getReferenceElement","thisElement","referenceElement","relation","find","matchOp","refOrCls","_getData","PREFIX_REF","DATA_REF","getFirstReferenceElement","getLastReferenceElement","getThisReferenceElement","getNextReferenceElement","getPrevReferenceElement","waitForReferenceElement","getAllReferenceElements","allRefs","closest","getNextOrPrevReferenceElement","goBackward","_getThisReferenceElem","_allRefs$refIndex","numRefs","refIndex","i","currentIsAfter","Trigger","registerTrigger","_config$once","_config$oneWay","_config$delay","_config$doDelay","_config$undoDelay","oneWay","doDelay","undoDelay","lastCallId","callActions","newToggleState","myCallId","run","getActions","newTrigger","clsPref","baseConfigValidator","newBaseConfigValidator","allSpecs","TRIGGER_SEP","_config$actOn","tmp","configSpec","OPTION_PREF_CHAR","argSpec","allActionSpecs","ACTION_PREF_CHAR","actionTarget","actOn","actionSpec","actionArgsAndOptions","ACTION_ARGS_PREF_CHAR","Enable","ids","_enable","_disable","_toggleEnable","Disable","Run","_run","_reverse","triggerPromises","getTriggers","triggers","trigger","ScrollTo","offsetX","offsetY","newConfigValidator","watcher","canReverse","hasReversed","_validateNumber2","SetAttribute","isOn","setAttrs","on","attrName","off","Show","_show","_hide","Hide","isValidPosition","POSITIONS","isValidTwoFoldPosition","TWO_FOLD_POSITION_REGEX","POSITIONS_OPTIONS_STR","registerOpenable","newOpenable","Openable","properties","isModal","isOffcanvas","openCallbacks","closeCallbacks","isOpen","open","PREFIX_IS_OPEN","scrollWrapperToTop","outerWrapper","onOpen","onClose","getRoot","getContainer","container","getTriggerConfigs","setupElements","Collapsible","WIDGET_NAME_COLLAPSIBLE","collapsibleConfigValidator","_config$autoClose","_config$reverse","isHorizontal","horizontal","orientation","onSetup","triggerConfig","insertCollapsibleIcon","autoClose","closeButton","wrapTriggers","PREFIX_REVERSE","disableTransitionTimer","tempEnableTransition","peek","peekSize","VAR_PEEK_SIZE","PREFIX_PEEK","updateWidth","VAR_JS_COLLAPSIBLE_WIDTH","Popup","WIDGET_NAME_POPUP","popupConfigValidator","_config$autoClose2","_config$closeButton","S_AUTO","contentSize","containerView","placement","fetchPopupPlacement","Modal","WIDGET_NAME_MODAL","modalConfigValidator","_config$autoClose3","_config$closeButton2","Offcanvas","WIDGET_NAME_OFFCANVAS","offcanvasConfigValidator","_config$autoClose4","_config$closeButton3","PREFIX_CLOSE_BTN","PREFIX_OPENS_ON_HOVER","PREFIX_LINE","PREFIX_ICON_POSITION","PREFIX_TRIGGER_ICON","PREFIX_ICON_WRAPPER","S_ARIA_EXPANDED","S_ARIA_MODAL","MIN_CLICK_TIME_AFTER_HOVER_OPEN","S_ARROW_UP","S_ARROW_DOWN","S_ARROW_LEFT","S_ARROW_RIGHT","ARROW_TYPES","ICON_CLOSED_TYPES","ICON_OPEN_TYPES","isValidIconClosed","isValidIconOpen","triggerConfigValidator","icon","iconClosed","iconOpen","getPrefixedNames","pref","_overlay","_innerWrapper","_outerWrapper","_content","_container","_trigger","_containerForSelect","_triggerForSelect","_contentId","findContainer","_currWidget$getRoot","currWidget","childRef","findTriggers","prefixedNames","getTriggerSelector","suffix","contentId","getTriggersFrom","inputTriggers","triggerMap","addTrigger","_properties$wrapTrigg","innerWrapper","placeholder","closeBtn","elements","hoverTimeOpened","isPointerOver","activeTrigger","isTrigger","shouldPreventDefault","_triggers$get$prevent","_triggers$get","usesHover","_triggers$get2","usesAutoClose","_triggers$get3","toggleTrigger","openIt","setIsPointerOver","pointerLeft","unsetIsPointerOver","pointerEntered","closeIfEscape","closeIfClickOutside","maybeSetupAutoCloseListeners","addOrRemove","setupOrCleanup","widgetConfig","_triggerConfig$icon","_triggerConfig$iconCl","_triggerConfig$iconOp","iconPosition","line","containerPosition","containerTop","containerBottom","containerLeft","containerRight","containerHMiddle","containerVMiddle","popupWidth","popupHeight","placementVars","finalPlacement","alignmentVars","middle","alignment","Open","widgetPromise","Pager","DUMMY_ID","WIDGET_NAME","_Pager$get","_config$nextSwitch","_config$prevSwitch","pages","toggles","switches","nextPrevSwitch","_next","nextSwitch","_prev","prevSwitch","pageSelector","PREFIX_PAGE__FOR_SELECT","toggleSelector","PREFIX_TOGGLE__FOR_SELECT","switchSelector","PREFIX_SWITCH__FOR_SELECT","nextSwitchSelector","PREFIX_NEXT_SWITCH__FOR_SELECT","prevSwitchSelector","PREFIX_PREV_SWITCH__FOR_SELECT","numPages","page","components","_pages","_toggles","_switches","_nextPrevSwitch","methods","nextPage","_nextPage","prevPage","_prevPage","goToPage","pageNum","_goToPage","disablePage","_disablePage","enablePage","_enablePage","togglePage","_togglePage","isPageDisabled","_isPageDisabled","getCurrentPage","_getCurrentPage","getPreviousPage","_getPreviousPage","getCurrentPageNum","_getCurrentPageNum","getPreviousPageNum","_getPreviousPageNum","onTransition","_onTransition","getPages","getSwitches","getToggles","MIN_TIME_BETWEEN_WHEEL","S_CURRENT","S_ARIA_CURRENT","S_COVERED","S_NEXT","S_TOTAL_PAGES","S_VISIBLE_PAGES","S_CURRENT_PAGE","S_PAGE_NUMBER","PREFIXED_NAME","PREFIX_ROOT","PREFIX_PAGE_CONTAINER","PREFIX_PAGE","PREFIX_STYLE","PREFIX_IS_FULLSCREEN","PREFIX_USE_PARALLAX","PREFIX_TOTAL_PAGES","PREFIX_VISIBLE_PAGES","PREFIX_CURRENT_PAGE","PREFIX_CURRENT_PAGE_IS_LAST","PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED","PREFIX_CURRENT_PAGE_IS_LAST_ENABLED","PREFIX_PAGE_STATE","PREFIX_PAGE_NUMBER","VAR_CURRENT_PAGE","VAR_TOTAL_PAGES","VAR_VISIBLE_PAGES","VAR_VISIBLE_GAPS","VAR_TRANSLATED_PAGES","VAR_TRANSLATED_GAPS","VAR_PAGE_NUMBER","SUPPORTED_STYLES","isValidStyle","initialPage","pageSize","fullscreen","parallax","useGestures","bool","alignGestureDirection","fetchClosestScrollable","_getClosestScrollable","setPageNumber","lastPromise","setPageState","setCurrentPage","pagerEl","pageNumbers","isFirstEnabled","isLastEnabled","n","_total","_current","_config$initialPage","_config$pageSize","_config$peek","_config$fullscreen","_config$parallax","_config$horizontal","_config$useGestures","_config$alignGestureD","pageContainer","pagerStyle","isCarousel","minPageSize","enablePeek","isFullscreen","isParallax","gestureWatcher","viewWatcher","recalculateCarouselProps","gap","containerSize","getNumVisiblePages","addPeek","numVisiblePages","currPageNum","prevPageNum","numHidden","hasPeek","visibleStart","isAtEdge","numTranslated","numVisibleGaps","fractionalNumVisiblePages","getGestureOptions","scrollToPager","transitionOnGesture","swapDirection","addWatchers","removeWatchers","getPageNumForEvent","toggleClickListener","switchClickListener","nextSwitchClickListener","prevSwitchClickListener","idx","disabledPages","callbacks","fetchScrollOptions","lastPageNum","lastTransition","canTransition","gestureData","targetPage","NextPage","PrevPage","GoToPage","EnablePage","DisablePage","altPageNum","currentNum","targetNum","CheckTrigger","HTMLInputElement","onToggle","checked","ClickTrigger","setupWatcher","PressTrigger","HoverTrigger","LayoutTrigger","_args$","_config$layout","otherDevices","otherAspectRatios","LoadTrigger","ScrollTrigger","oppositeDirections","ViewTrigger","_config$target","oppositeViews","willAnimate","setupRepresentative","_ref2","prev","previousElementSibling","prevChild","AutoHide","WIDGET_NAME_HIDE","WIDGET_NAME_REMOVE","watcherOptions","hideOrRemoveEl","hideRelevant","targetElements","elem","DEFAULT_DELAY","addWatcher","removeWatcher","autoRemove","PageLoader","mainWidget","enableMain","loader","_PageLoader$get","_config$autoRemove","spinner","PREFIX_SPINNER","SameHeight","containerElement","_SameHeight$get","items","getItemsFrom","fetchConfig","fullConfig","toColumn","toRow","getItems","getItemConfigs","PREFIX_ITEM","PREFIX_ITEM__FOR_SELECT","S_TEXT","S_IMAGE","MIN_CHARS_FOR_TEXT","diffTolerance","minGap","maxFreeR","maxWidthR","isText","innerText","areImagesLoaded","img","naturalWidth","naturalHeight","userConfig","_userConfig$minGap","_userConfig$maxFreeR","_userConfig$maxWidthR","_userConfig$diffToler","_userConfig$resizeThr","_userConfig$debounceW","colGapStr","getNumValue","_minGap","_maxFreeR","_maxWidthR","_diffTolerance","num","findItems","inputItems","itemMap","addItem","itemType","allItems","callCounter","isFirstTime","lastOptimalHeight","hasScheduledReset","counterTimeout","measurements","calculateMeasurements","getOptimalHeight","setWidths","_width","_height","observeAll","unobserveAll","getWidthAtH","sameHeightW","getProperties","_type","_aspectR","_area","_extraH","_components","getTextComponents","tArea","tExtraH","imgAR","flexW","nItems","thisTxtArea","thisTxtExtraH","component","cmpProps","thisAspectR","_tArea","_tExtraH","_imgAR","_flexW","_nItems","targetHeight","h0","h2","h1","hR0","hR1","hR2","hF2","hF1","hConstr1","hConstr2","tw0","iw0","freeSpace0","supportsSticky","CSS","isInQuirksMode","compatMode","isMobile","Scrollbar","_Scrollbar$get","getScrollableProps","ourScrollable","getScrollable","PREFIX_CONTAINER","PREFIX_CONTENT","PREFIX_BAR","PREFIX_FILL","PREFIX_SPACER","PREFIX_HANDLE","PREFIX_DRAGGABLE","PREFIX_CLICKABLE","PREFIX_HAS_WRAPPER","PREFIX_ALLOW_COLLAPSE","PREFIX_HAS_V_SCROLL","PREFIX_HAS_SCROLLBAR","PREFIX_HIDE_SCROLL","S_SET_POINTER_CAPTURE","S_RELEASE_POINTER_CAPTURE","S_ARIA_VALUENOW","S_SCROLLBAR","hideNative","onMobile","positionH","positionV","autoHide","clickScroll","dragScroll","useHandle","defaultScrollable","isBody","isMainScrollable","isBodyInQuirks","barParent","hasVScroll","contentWrapper","supported","hasExistingWrapper","warnMsgPrefix","needsSticky","_config$onMobile","_config$hideNative","_config$autoHide","_config$clickScroll","_ref3","_config$dragScroll","_ref4","_config$useHandle","autoHideDelay","newScrollbar","barIsHorizontal","scrollbar","scrollDomID","fill","handle","_bar","_handle","_fill","setProgress","tracksH","scrollbarH","scrollbarV","hasBarPrefix","completeFraction","viewFraction","viewFr","completeFr","scrollAxis","updateProgress","setBoxMeasureProps","updatePropsOnResize","barHeight","isDragging","lastOffset","lastTargetFraction","scrollAction","onClickOrDrag","handleH","handleV","isClick","isHandleClick","startsDrag","setOrReleasePointerCapture","barLength","currScrollOffset","maxScrollOffset","deltaOffset","handleLength","targetScrollOffset","_scrollAction","onRelease","onClickOrDragH","onClickOrDragV","onReleaseH","onReleaseV","maybeSetNativeHidden","setNativeShown","origDomID","padding","pointerId","ScrollToTop","button","_ScrollToTop$get","hasCustomScrollable","clickListener","showIt","hideIt","flexDirection","shouldInsertBefore","PREFIX_BTN","PREFIX_FIXED","Sortable","_Sortable$get","disableItem","_disableItem","enableItem","_enableItem","toggleItem","_toggleItem","isItemDisabled","_isItemDisabled","onMove","_onMove","currentOrder","_getSortedItems","PREFIX_IS_DRAGGABLE","PREFIX_FLOATING_CLONE","mode","touchMoveOptions","isItemDraggable","currentDraggedItem","floatingClone","ignoreCancel","grabOffset","setIgnoreCancel","onDragStart","currTarget","releasePointerCapture","onTouchMove","onDragEnd","onDragEnter","dragged","_dragItemOnto","setupEvents","doSwap","disabledItems","getSortedItems","getOrigItemNumber","itemNum","dragItemOnto","draggedOver","TrackGesture","minDeltaX","maxDeltaX","minDeltaY","maxDeltaY","minDeltaZ","maxDeltaZ","TrackScroll","TrackSize","TrackView"],"mappings":"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D,MAAME,uBAAuB,GAAIC,OAAe,IACrDJ,UAAU,CAAC,CAAA,yBAAA,EAA4BI,OAAO,CAAA,CAAA,CAAG,CAAC;AAEpD,MAAMC,OAAO,GAAGC,OAAO;AACKD,OAAO,CAACE,KAAK,CAAClN,IAAI,CAACgN,OAAO;AAE5BA,OAAO,CAACG,GAAG,CAACnN,IAAI,CAACgN,OAAO;AAEvBA,OAAO,CAACI,IAAI,CAACpN,IAAI,CAACgN,OAAO;AAE7C,MAAMK,WAAW,GAAGL,OAAO,CAACM,IAAI,CAACtN,IAAI,CAACgN,OAAO,CAAC;AAE9C,MAAMO,YAAY,GAAGP,OAAO,CAACQ,KAAK,CAACxN,IAAI,CAACgN,OAAO,CAAC;;AAEvD;;ACpcA;AACA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACaS,QAAQ,GAAGC,iBAAoB,CAAC;AAC3C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,6BAA6B,EAAE,IAAqB;AAEpD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,sBAAsB,EAAE,IAAI;AAC5B;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE,IAAI;AAErB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,EAAE,KAAK;AAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,IAAI;AAEzB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,iBAAiB,EAAE,KAAK;AAExB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAE,QAAQ;AAE5B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAE,OAAO;AAE3B;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,iBAAiB,EAAE,EAAE;AAErB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,oBAAoB,EAAE,IAAI;AAE1B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,IAAI;AAEzB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAE,KAAK;AAEzB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,uBAAuB,EAAE,EAAE;AAE3B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,yBAAyB,EAAE,CAAC;AAE5B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,wBAAwB,EAAE,GAAG;AAE7B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,gBAAgB,EAAE,EAAE;AAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAE,GAAG;AAEvB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,GAAG;AAExB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,iBAAiB,EAAE;AACjB;AACJ;AACA;AACA;AACA;AACA;AACIC,IAAAA,MAAM,EAAE,CAAC;AAET;AACJ;AACA;AACA;AACA;AACA;AACI,IAAA,aAAa,EAAE,GAAG;AAElB;AACJ;AACA;AACA;AACA;AACA;AACIC,IAAAA,MAAM,EAAE,GAAG;AAAE;;AAEb;AACJ;AACA;AACA;AACA;IACIC,OAAO,EAAE,GAAG;GACb;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,sBAAsB,EAAE;AACtB;AACJ;AACA;AACA;AACA;AACA;AACI,IAAA,WAAW,EAAE,CAAC;AAAE;;AAEhB;AACJ;AACA;AACA;AACA;AACA;IACIC,IAAI,EAAE,CAAC,GAAG,EAAE;AAAE;;AAEd;AACJ;AACA;AACA;AACA;AACA;IACIC,MAAM,EAAE,CAAC,GAAG,CAAC;AAAE;;AAEf;AACJ;AACA;AACA;AACA;AACA;IACIC,IAAI,EAAE,CAAC,GAAG,CAAC;AAAE;;AAEb;AACJ;AACA;AACA;AACA;AACI,IAAA,WAAW,EAAE,EAAE,GAAG,CAAC;GACpB;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,aAAa;AAElC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAE,YAAY;AAEhC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE,EAAE;AAEnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,cAAc,EAAE,IAAI;AAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE,GAAG;AAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,cAAc,EAAE,CAAC;AAEjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE,IAAqB;AAEtC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,wBA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C7SD;AACA;AACA;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACO,MAAMsC,kBAAkB,GAAIC,MAAc,IAC/C5lB,QAAW,CAAC6lB,OAAO,EAAED,MAAM,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACO,MAAME,aAAa,GAAIC,MAAc,IAC1C/lB,QAAW,CAACgmB,OAAO,EAAED,MAAM,CAAC;;AAoB9B;AACA;AACA;AACA;AACO,MAAME,SAAS,GAAGA,CAACC,OAAe,EAAEC,SAAiB,KAC1DnmB,GAAM,CAAComB,WAAW,EAAEF,OAAO,GAAGC,SAAS,CAAC;;AAE1C;AACA;AACA;AACA;AACO,MAAMN,OAAwB,GAAG,CACtC/zB,KAAQ,EACRA,SAAY,EACZA,OAAU,EACVA,OAAU,CACF;;AAEV;AACA;AACA;AACA;AACO,MAAMk0B,OAAwB,GAAG,CACtCl0B,QAAW,EACXA,MAAS,EACTA,MAAS,EACTA,SAAY,CACJ;;AAEV;AACA,MAAMs0B,WAAW,GAAG,GAAG;;ACxGvB;AACA;AACA;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,qBAAqB,GAAGA,CACnCC,MAAgC,EAChCtyB,OAGC,KAC2B;AAAA,EAAA,IAAAuyB,qBAAA;AAC5B,EAAA,IAAI,CAACvmB,gBAAmB,CAACsmB,MAAM,CAAC,EAAE;IAChCA,MAAM,GAAG,CAACA,MAAM,CAAC;AACnB,EAAA;AAEA,EAAA,MAAME,IAAI,GAAGzmB,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A,CAAC,CAAC8Y,IAAI,KAAKnsB,WAAc,CAAC;AACpE,EAAA,IAAI25B,UAAU,GAAG,CAAC,IAAIE,SAAS,GAAG,CAAC,EAAE;AACnC,IAAA,OAAO,CAAC;AACV,EAAA;AAEA,EAAA,OAAOrF,MAAM,CAACqF,SAAS,CAAC,CAACC,SAAS,GAAGtF,MAAM,CAACmF,UAAU,CAAC,CAACG,SAAS;AACnE,CAAC;;AC/RD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,cAAc,GAAIt4B,KAAuB,IAAgB;EACpE,IAAIu4B,KAAK,GAAG,CAAC;AACXC,IAAAA,KAAK,GAAG,CAAC;IACTC,MAAM,GAAGz4B,KAAK,CAACwuB,MAAM;IACrBkK,MAAM,GAAG14B,KAAK,CAACyuB,MAAM;AAEvB,EAAA,MAAMwE,IAAI,GAAGzmB,QAA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AAI8rC,OAAO,EAAE;AAC5BthC,QAAAA,SAAY,CAACghC,eAAe,EAAExrC,MAAM,CAAC;AACrCqlB,QAAAA,QAAQ,CAAC2mB,SAAS,CAAChsC,MAAM,CAAC;AAC5B,MAAA;IACF,CAAC;IAED,IAAI,CAACslB,UAAU,GAAG,MAAM;AACtBkmB,MAAAA,eAAe,GAAGhhC,UAAa,EAAE;MACjC6a,QAAQ,CAACC,UAAU,EAAE;IACvB,CAAC;IAED,IAAI,CAAC6E,WAAW,GAAG,MAAM9E,QAAQ,CAAC8E,WAAW,EAAE;AACjD,EAAA;AACF;;ACrIA;AACA;AACA;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMkuB,WAAW,CAAC;AACvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOE;AACF;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOE;AACF;AACA;AACA;AACA;AACA;;AAME;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAME;AACF;AACA;AACA;EACE,OAAOvjC,MAAMA,CAACqS,MAA0B,EAAE;IACxC,OAAO,IAAIkxB,WAAW,CAACjxB,SAAS,CAACD,MAAM,CAAC,EAAEE,eAAe,CAAC;AAC5D,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,OAAOC,KAAKA,CAACH,MAA0B,EAAE;AAAA,IAAA,IAAAI,cAAA;AACvC,IAAA,MAAMC,QAAQ,GAAGJ,SAAS,CAACD,MAAM,CAAC;AAClC,IAAA,MAAMM,YAAY,GAAGxU,WAAW,CAAC5C,QAAQ,CAACmX,QAA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1C,OAAO,CAAC;AACxB,EAAA;AAEA,EAAA,OAAOD,QAAQ;AACjB,CAAC;;AC/OD;AACA;AACA;AACA;AACA;AACA;AACA;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAME,QAAQ,CAAmB;AACtC;AACF;AACA;;AAGE;AACF;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;;EAGE,OAAOvH,QAAQA,GAAG;IAChBP,cAAc,CACZ,WAAW,EACX,CAACx9C,OAAO,EAAEyP,IAAI,EAAE8V,MAAM,KAAK;MACzB,MAAMya,MAAM,GAAGza,MAAM,GACjB;QACEnlB,IAAI,EAAEmlB,MAAM,CAACggC,OAAO;QACpBhlD,GAAG,EAAEglB,MAAM,CAACigC;AACd,OAAC,GACDnoD,SAAS;AAEb,MAAA,OAAO,IAAIioD,QAAQ,CAACtlD,OAAO,EAAE;QAC3BggC,MAAM;AACNziB,QAAAA,QAAQ,EAAEgI,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEhI,QAAQ;AAC1BkjB,QAAAA,UAAU,EAAElb,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEkb;AACtB,OAAC,CAAC;IACJ,CAAC,EACDglB,oBACF,CAAC;AACH,EAAA;AAEAjsD,EAAAA,WAAWA,CAACwG,OAAgB,EAAEulB,MAAuB,EAAE;AACrD,IAAA,MAAMmgC,OAAO,GAAGzU,aAAa,CAACvrB,KAAK,EAAE;IACrC,MAAM;AAAE+a,MAAAA;KAA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gD,KAAK,EAAElB,OAAO,CAAC,GACvC,IAAI,cAAA+L,IAAA,KAAA,MAAA,GAAAA,IAAA,GAAK1O,SAAS;AAAA,IAAA;GACzB;AACH,CAAC;;ACpPD;AACA;AACA;AACA;AACA;AACA;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMyoD,YAAY,CAAmB;AAC1C;AACF;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;;EAGE,OAAO/H,QAAQA,GAAG;IAChBP,cAAc,CACZ,eAAe,EACf,CAACx9C,OAAO,EAAEyP,IAAI,EAAE8V,MAAM,KAAK;AACzB,MAAA,OAAO,IAAIugC,YAAY,CAAC9lD,OAAO,EAAE;QAAE,CAACyP,IAAI,CAAC,CAAC,CAAC,GAAG8V,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAANA,MAAM,GAAI;AAAG,OAAC,CAAC;IAC/D,CAAC,EACD82B,iBACF,CAAC;AACH,EAAA;AAEA7iD,EAAAA,WAAWA,CAACwG,OAAgB,EAAEuqB,UAAsB,EAAE;IACpD,IAAI,CAACA,UAAU,EAAE;AACf,MAAA,MAAM3hB,UAAa,CAAC,yBAAyB,CAAC;AAChD,IAAA;IAEA,IAAIm9C,IAAI,GAAG,KAAK;AAEhB,IAAA,MAAMC,QAAQ,GAAG,MAAOC,EAAW,IAAK;AACtCF,MAAA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAME,KAAK,SAASnD,QAAQ,CAAC;EAClC,OAAOhJ,QAAQA,GAAG;AAChB8I,IAAAA,gBAAgB,CACdsD,iBAAiB,EACjB,CAAC5W,EAAE,EAAEhuB,MAAM,KAAK,IAAI2kC,KAAK,CAAC3W,EAAE,EAAEhuB,MAAM,CAAC,EACrC6kC,oBACF,CAAC;AACH,EAAA;AAEA5wD,EAAAA,WAAWA,CAACwG,OAAoB,EAAEulB,MAAoB,EAAE;IAAA,IAAA8kC,kBAAA,EAAAC,oBAAA;IACtD,KAAK,CAACtqD,OAAO,EAAE;AACbtG,MAAAA,IAAI,EAAEywD,iBAAiB;AACvBppD,MAAAA,EAAE,EAAEwkB,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAExkB,EAAE;AACd6Z,MAAAA,SAAS,EAAE2K,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE3K,SAAS;AAC5BguC,MAAAA,SAAS,EAAA,CAAAyB,kBAAA,GAAE9kC,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEqjC,SAAS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AA,GAAA,MAAA,GAANA,MAAM,CAAEniC,MAAM,EAAE;IAE5D,MAAMs1C,aAAa,GAAGrT,iBAAiB,CAAC,UAAU,EAAEr9C,OAAO,EAAE+mD,QAAQ,CAAC;IAEtE,IAAI,CAAC5I,EAAE,GAAG,MAAMuS,aAAa,CAACv4C,IAAI,CAACmvC,IAAI,CAAC;IACxC,IAAI,CAAClJ,IAAI,GAAG,MAAMsS,aAAa,CAACv4C,IAAI,CAAChD,KAAK,CAAC;AAC3C,IAAA,IAAI,CAACza,QAAW,CAAC,GAAG,MAAMg2D,aAAa,CAACv4C,IAAI,CAACiD,MAAM,CAAC;AACtD,EAAA;AACF;;AC/DA;AACA;AACA;;;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMu1C,KAAK,SAAS1V,MAAM,CAAC;AAChC;AACF;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;AACA;;AAGE;AACF;AACA;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;;EAGE,OAAO5nC,GAAGA,CAACrT,OAAgB,EAAgB;IACzC,MAAM+lB,QAAQ,GAAG,KAAK,CAAC1S,GAAG,CAACrT,OAAO,EAAE4wD,UAAQ,CAAC;IAC7C,IAAIhoD,YAAe,CAACmd,QAAQ,EAAE4qC,KAAK,CAAC,EAAE;AACpC,MAAA,OAAO5qC,QAAQ;AACjB,IAAA;AACA,IAAA,OAAO,IAAI;AACb,EAAA;EAEA,OAAOg4B,QAAQA,GAAG;AAChB5B,IAAAA,cAAc,CACZ0U,aAAW,EACX,CAAC7wD,OAAO,EAAEulB,MAAM,KAAK;AACnB,MAAA,IAAI,CAACorC,KAAK,CAACt9C,GAAG,CAACrT,OAAO,CAAC,EAAE;AACvB,QAAA,OAAO,IAAI2wD,KAAK,CAAC3wD,OAAO,EAAEulB,MAAM,CAAC;AACnC,MAAA;AACA,MAAA,OAAO,IAAI;KACZ,EACD82B,iBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACE7iD,EAAAA,WAAWA,CAACwG,OAAgB,EAAEulB,MAAoB,EAAE;AAAA,IAAA,IAAAurC,UAAA,EAAAC,kBAAA,EAAAC,kBAAA;AAClD,IAAA,MAAMzV,cAAc,GAAA,CAAAuV,UAAA,GAAGH,KAAK,CAACt9C,GAAG,CAACrT,OAAO,CAAC,cAAA8wD,UAAA,KAAA,MAAA,GAAA,MAAA,GAAlBA,UAAA,CAAoB1V,OAAO,EAAE;IACpD,KAAK,CAACp7C,OAAO,EAAE;AAAEe,MAAAA,EAAE,EAAE6vD;AAAS,KAAC,CAAC;IAEhC,MAAMK,KAAK,GAAG,CAAA1rC,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE0rC,KAAK,KAAI,EAAE;IACjC,MAAMC,OAAO,GAAG,CAAA3rC,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE2rC,OAAO,KAAI,EAAE;IACrC,MAAMC,QAAQ,GAAG,CAAA5rC,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE4rC,QAAQ,KAAI,EAAE;AACvC,IAAA,MAAMC,cAAc,GAAG;AACrBC,MAAAA,KAAK,EAAA,CAAAN,kBAAA,GAAExrC,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE+rC,UAAU,MAAA,IAAA,IAAAP,kBAAA,KAAA,MAAA,GAAAA,kBAAA,GAAI,IAAI;AACjCQ,MAAAA,KAAK,EAAA,CAAAP,kBAAA,GAAEzrC,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEisC,UAAU,MAAA,IAAA,IAAAR,kBAAA,KAAA,MAAA,GAAAA,kBAAA,GAAI;KAC9B;AAED,IAAA,MAAMS,YAAY,GAAGjV,wBAAwB,CAACkV,uBAAuB,CAAC;AACtE,IAAA,MAAMC,cAAc,GAAGnV,wBAAwB,CAACoV,yBAAyB,CAAC;AAC1E,IAAA,MAAMC,cAAc,GAAGrV,wBAAwB,CAACsV,yBAAyB,CAAC;AAC1E,IAAA,MAAMC,kBAAkB,GAAGvV,wBAAwB,CACjDwV,8BACF,CAAC;AACD,IAAA,MAAMC,kBAAkB,GAAGzV,wBAAwB,CACjD0V,8BACF,CAAC;AAED,IAAA,IAAI,CAACtpD,QAAW,CAACqoD,KAAK,CAAC,EAAE;AACvBA,MAAAA,KAAK,CAAChhD,IAAI,CAAC,GAAGrH,gBAAmB,CAAC5I,OAAO,EAAEyxD,YAAY,CAAC,CAAC;AAEzD,MAAA,IAAI,CAAC7oD,QAAW,CAACqoD,KAAK,CAAC,EAAE;QACvBA,KAAK,CAAChhD,IAAI,CACR,GAAG0I,yBAAyB,CAAC3Y,OAAO,CAAC,CAAC8B,MAAM,CACzCiM,CAAC,IAAK,CAACA,CAAC,CAACya,OAAO,CAACqpC,cAAc,CAClC,CACF,CAAC;AACH,MAAA;AACF,IAAA;AAEA,IAAA,IAAI,CAACjpD,QAAW,CAACsoD,OAAO,CAAC,EAAE;AACzBA,MAAAA,OAAO,CAACjhD,IAAI,CAAC,GAAGrH,gBAAmB,CAAC5I,OAAO,EAAE2xD,cAAc,CAAC,CAAC;AAC/D,IAAA;AAEA,IAAA,IAAI,CAAC/oD,QAAW,CAACuoD,QAAQ,CAAC,EAAE;AAC1BA,MAAAA,QAAQ,CAAClhD,IAAI,CAAC,GAAGrH,gBAAmB,CAAC5I,OAAO,EAAE6xD,cAAc,CAAC,CAAC;AAChE,IAAA;AAEA,IAAA,IAAI,CAACT,cAAc,CAACC,KAAK,EAAE;MACzBD,cAAc,CAACC,KAAK,GAAGzoD,aAAgB,CAAC5I,OAAO,EAAE+xD,kBAAkB,CAAC;AACtE,IAAA;AAEA,IAAA,IAAI,CAACX,cAAc,CAACG,KAAK,EAAE;MACzBH,cAAc,CAACG,KAAK,GAAG3oD,aAAgB,CAAC5I,OAAO,EAAEiyD,kBAAkB,CAAC;AACtE,IAAA;AAEA,IAAA,MAAME,QAAQ,GAAGvpD,QAAW,CAACqoD,KAAK,CAAC;IACnC,IAAIkB,QAAQ,GAAG,CAAC,EAAE;AAChB,MAAA,MAAMvpD,UAAa,CAAC,kCAAkC,CAAC;AACzD,IAAA;AAEA,IAAA,KAAK,MAAMwpD,IAAI,IAAInB,KAAK,EAAE;MACxB,IAAI,CAACjxD,OAAO,CAAC6a,QAAQ,CAACu3C,IAAI,CAAC,IAAIA,IAAI,KAAKpyD,OAAO,EAAE;AAC/C,QAAA,MAAM4I,UAAa,CAAC,uCAAuC,CAAC;AAC9D,MAAA;AACF,IAAA;AAEA,IAAA,MAAMypD,UAAU,GAAG;AACjBC,MAAAA,MAAM,EAAErB,KAAK;AACbsB,MAAAA,QAAQ,EAAErB,OAAO;AACjBsB,MAAAA,SAAS,EAAErB,QAAQ;AACnBsB,MAAAA,eAAe,EAAErB;KAClB;IAED,MAAMsB,OAAO,GAAGxU,YAAU,CAAC,IAAI,EAAEmU,UAAU,EAAEryD,OAAO,EAAEulB,MAAM,CAAC;IAE7D,CAACg2B,cAAc,IAAI3yC,cAAiB,EAAE,EAAEuP,IAAI,CAAC,MAAM;AACjD,MAAA,IAAI,IAAI,CAACmjC,WAAW,EAAE,EAAE;AACtB,QAAA;AACF,MAAA;MAEA9Y,MAAI,CAAC,IAAI,EAAExiC,OAAO,EAAEqyD,UAAU,EAAE9sC,MAAM,EAAEmtC,OAAO,CAAC;AAClD,IAAA,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,GAAG,MAAMD,OAAO,CAACE,SAAS,EAAE;IACzC,IAAI,CAACC,QAAQ,GAAG,MAAMH,OAAO,CAACI,SAAS,EAAE;IACzC,IAAI,CAACC,QAAQ,GAAIC,OAAO,IAAKN,OAAO,CAACO,SAAS,CAACD,OAAO,CAAC;AACvD,IAAA,IAAI,CAACE,WAAW,GAAGR,OAAO,CAACS,YAAY;AACvC,IAAA,IAAI,CAACC,UAAU,GAAGV,OAAO,CAACW,WAAW;AACrC,IAAA,IAAI,CAACC,UAAU,GAAGZ,OAAO,CAACa,WAAW;AACrC,IAAA,IAAI,CAACC,cAAc,GAAGd,OAAO,CAACe,eAAe;AAC7C,IAAA,IAAI,CAACC,cAAc,GAAGhB,OAAO,CAACiB,eAAe;AAC7C,IAAA,IAAI,CAACC,eAAe,GAAGlB,OAAO,CAACmB,gBAAgB;AAC/C,IAAA,IAAI,CAACC,iBAAiB,GAAGpB,OAAO,CAACqB,kBAAkB;AACnD,IAAA,IAAI,CAACC,kBAAkB,GAAGtB,OAAO,CAACuB,mBAAmB;AACrD,IAAA,IAAI,CAACC,YAAY,GAAGxB,OAAO,CAACyB,aAAa;AAEzC,IAAA,IAAI,CAACC,QAAQ,GAAG,MAAM,CAAC,GAAGnD,KAAK,CAAC;AAChC,IAAA,IAAI,CAACoD,WAAW,GAAG,MAAM,CAAC,GAAGlD,QAAQ,CAAC;AACtC,IAAA,IAAI,CAACmD,UAAU,GAAG,MAAM,CAAC,GAAGpD,OAAO,CAAC;AACtC,EAAA;AACF;;AAEA;AACA;AACA;;AA6NA;;AASA;AACA;AACA;AACA,MAAMqD,sBAAsB,GAAG,IAAI;AAEnC,MAAMC,SAAS,GAAG,SAAS;AAC3B,MAAMC,cAAc,GAAG/5D,WAAc,GAAG85D,SAAS;AACjD,MAAME,SAAS,GAAG,SAAS;AAC3B,MAAMC,MAAM,GAAG,MAAM;AACrB,MAAMC,aAAa,GAAG,aAAa;AACnC,MAAMC,eAAe,GAAG,eAAe;AACvC,MAAMC,cAAc,GAAG,cAAc;AACrC,MAAMC,aAAa,GAAG,aAAa;AACnC,MAAMlE,aAAW,GAAG,OAAO;AAC3B,MAAMmE,eAAa,GAAGpsD,UAAa,CAACioD,aAAW,CAAC;AAChD,MAAMoE,aAAW,GAAG,CAAA,EAAGD,eAAa,CAAA,MAAA,CAAQ;AAC5C,MAAME,qBAAqB,GAAG,CAAA,EAAGF,eAAa,CAAA,gBAAA,CAAkB;;AAEhE;AACA;AACA;AACA,MAAMG,WAAW,GAAG,CAAA,EAAGH,eAAa,CAAA,MAAA,CAAQ;AAC5C,MAAMtD,uBAAuB,GAAG,CAAA,EAAGsD,eAAa,CAAA,KAAA,CAAO;AACvD,MAAMpD,yBAAyB,GAAG,CAAA,EAAGoD,eAAa,CAAA,OAAA,CAAS;AAC3D,MAAMlD,yBAAyB,GAAG,CAAA,EAAGkD,eAAa,CAAA,OAAA,CAAS;AAC3D,MAAMhD,8BAA8B,GAAG,CAAA,EAAGgD,eAAa,CAAA,YAAA,CAAc;AACrE,MAAM9C,8BAA8B,GAAG,CAAA,EAAG8C,eAAa,CAAA,YAAA,CAAc;AAErE,MAAMI,YAAY,GAAG,CAAA,EAAGJ,eAAa,CAAA,MAAA,CAAQ;AAC7C,MAAMK,oBAAoB,GAAGzsD,UAAa,CAAC,eAAe,CAAC;AAC3D,MAAM0sD,mBAAmB,GAAG1sD,UAAa,CAAC,cAAc,CAAC;AACzD,MAAM2sD,kBAAkB,GAAG3sD,UAAa,CAACgsD,aAAa,CAAC;AACvD,MAAMY,oBAAoB,GAAG5sD,UAAa,CAACisD,eAAe,CAAC;AAC3D,MAAMY,mBAAmB,GAAG7sD,UAAa,CAACksD,cAAc,CAAC;AACzD,MAAMY,2BAA2B,GAAG,CAAA,EAAGD,mBAAmB,CAAA,QAAA,CAAU;AACpE,MAAME,oCAAoC,GAAG,CAAA,EAAGF,mBAAmB,CAAA,iBAAA,CAAmB;AACtF,MAAMG,mCAAmC,GAAG,CAAA,EAAGF,2BAA2B,CAAA,QAAA,CAAU;AACpF,MAAMG,iBAAiB,GAAGjtD,UAAa,CAAC,YAAY,CAAC;AACrD,MAAMktD,kBAAkB,GAAGltD,UAAa,CAACmsD,aAAa,CAAC;AACvD,MAAMgB,gBAAgB,GAAGntD,cAAiB,CAACksD,cAAc,CAAC;AAC1D,MAAMkB,eAAe,GAAGptD,cAAiB,CAACgsD,aAAa,CAAC;AACxD,MAAMqB,iBAAiB,GAAGrtD,cAAiB,CAACisD,eAAe,CAAC;AAC5D,MAAMqB,gBAAgB,GAAGttD,cAAiB,CAAC,cAAc,CAAC;AAC1D,MAAMutD,oBAAoB,GAAGvtD,cAAiB,CAAC,kBAAkB,CAAC;AAClE,MAAMwtD,mBAAmB,GAAGxtD,cAAiB,CAAC,iBAAiB,CAAC;AAChE,MAAMytD,eAAe,GAAGztD,cAAiB,CAACmsD,aAAa,CAAC;;AAExD;AACA;AACA,MAAMnE,UAAQ,GAAGoE,eAAa;AAE9B,MAAMsB,gBAAgB,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAU;AAGhE,MAAMC,YAAY,GAAIr1D,KAAa,IACjC0H,QAAW,CAAC0tD,gBAAgB,EAAEp1D,KAAK,CAAC;AAEtC,MAAMm7C,iBAAyD,GAAG;AAChEma,EAAAA,WAAW,EAAEpkD,cAAc;AAC3BoK,EAAAA,KAAK,EAAEA,CAACrW,GAAG,EAAEjF,KAAK,KAAKqR,cAAc,CAACpM,GAAG,EAAEjF,KAAK,EAAEq1D,YAAY,CAAC;AAC/DE,EAAAA,QAAQ,EAAErkD,cAAc;AACxB82C,EAAAA,IAAI,EAAE72C,eAAe;AACrBqkD,EAAAA,UAAU,EAAErkD,eAAe;AAC3BskD,EAAAA,QAAQ,EAAEtkD,eAAe;AACzBk2C,EAAAA,UAAU,EAAEl2C,eAAe;AAC3BukD,EAAAA,WAAW,EAAEA,CAACzwD,GAAG,EAAEjF,KAAK,KAAK;AAC3B,IAAA,IAAI0H,SAAY,CAAC1H,KAAK,CAAC,EAAE;AACvB,MAAA,OAAO7D,SAAS;AAClB,IAAA;AAEA,IAAA,MAAMw5D,IAAI,GAAG1nD,SAAS,CAACjO,KAAK,CAAC;IAC7B,IAAI21D,IAAI,KAAK,IAAI,EAAE;AACjB,MAAA,OAAOA,IAAI;AACb,IAAA;AAEA,IAAA,OACEjlD,eAAe,CACb,aAAa,EACbW,cAAc,CAACpM,GAAG,EAAEjF,KAAK,CAAC,EAC1BqtB,kBACF,CAAC,IAAI,IAAI;GAEZ;AACDuoC,EAAAA,qBAAqB,EAAEzkD,eAAe;AACtCxP,EAAAA,cAAc,EAAEwP;AAClB,CAAC;AAED,MAAM0kD,sBAAsB,GAAI/2D,OAAgB,IAC9CgY,kBAAkB,EAAE,CAACG,IAAI,CACvB,MAAA;AAAA,EAAA,IAAA6+C,qBAAA;AAAA,EAAA,OAAA,CAAAA,qBAAA,GAAM12B,oBAAoB,CAACtgC,OAAO,EAAE;AAAE2/B,IAAAA,MAAM,EAAE;AAAK,GAAC,CAAC,MAAA,IAAA,IAAAq3B,qBAAA,KAAA,MAAA,GAAAA,qBAAA,GAAI35D,SAAS;AAAA,CACpE,CAAC;AAEH,MAAM45D,aAAa,GAAGA,CAAC5E,UAAsB,EAAEW,OAAe,KAAK;AACjE,EAAA,IAAIkE,WAA0B,GAAGtuD,cAAiB,EAAE;AACpD,EAAA,KAAK,MAAM2qC,EAAE,IAAI,CACf8e,UAAU,CAACC,MAAM,CAACU,OAAO,GAAG,CAAC,CAAC,EAC9BX,UAAU,CAACE,QAAQ,CAACS,OAAO,GAAG,CAAC,CAAC,EAChCX,UAAU,CAACG,SAAS,CAACQ,OAAO,GAAG,CAAC,CAAC,CAClC,EAAW;AACV,IAAA,IAAIzf,EAAE,EAAE;MACN53B,OAAO,CAAC43B,EAAE,EAAEuiB,kBAAkB,EAAE9C,OAAO,GAAG,EAAE,CAAC;MAC7CkE,WAAW,GAAGr6C,YAAY,CAAC02B,EAAE,EAAE8iB,eAAe,EAAErD,OAAO,GAAG,EAAE,CAAC;AAC/D,IAAA;AACF,EAAA;AAEA,EAAA,OAAOkE,WAAW;AACpB,CAAC;AAED,MAAMC,YAAY,GAAG,OACnB9E,UAAsB,EACtBW,OAAe,EACf3iB,KAAa,KACV;AACH,EAAA,KAAK,MAAMkD,EAAE,IAAI,CACf8e,UAAU,CAACC,MAAM,CAACU,OAAO,GAAG,CAAC,CAAC,EAC9BX,UAAU,CAACE,QAAQ,CAACS,OAAO,GAAG,CAAC,CAAC,EAChCX,UAAU,CAACG,SAAS,CAACQ,OAAO,GAAG,CAAC,CAAC,CAClC,EAAW;AACV,IAAA,IAAIzf,EAAE,EAAE;AACN,MAAA,MAAM53B,OAAO,CAAC43B,EAAE,EAAEsiB,iBAAiB,EAAExlB,KAAK,CAAC;AAC7C,IAAA;AACF,EAAA;AACF,CAAC;AAED,MAAM+mB,cAAc,GAAGA,CACrBC,OAAgB,EAChBC,WAGC,EACD9D,cAA4C,KACzC;EACH,IAAI+D,cAAc,GAAG,IAAI;EACzB,IAAIC,aAAa,GAAG,IAAI;AACxB,EAAA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIH,WAAW,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;AAC5C,IAAA,IAAI,CAACjE,cAAc,CAACiE,CAAC,CAAC,EAAE;AACtB,MAAA,IAAIA,CAAC,GAAGH,WAAW,CAACK,QAAQ,EAAE;AAC5BJ,QAAAA,cAAc,GAAG,KAAK;AACxB,MAAA,CAAC,MAAM,IAAIE,CAAC,GAAGH,WAAW,CAACK,QAAQ,EAAE;AACnCH,QAAAA,aAAa,GAAG,KAAK;AACvB,MAAA;AACF,IAAA;AACF,EAAA;EAEA36C,YAAY,CAACw6C,OAAO,EAAEtB,gBAAgB,EAAEuB,WAAW,CAACK,QAAQ,GAAG,EAAE,CAAC;EAClEh8C,OAAO,CAAC07C,OAAO,EAAE5B,mBAAmB,EAAE6B,WAAW,CAACK,QAAQ,GAAG,EAAE,CAAC;AAChE97C,EAAAA,cAAc,CACZw7C,OAAO,EACP3B,2BAA2B,EAC3B4B,WAAW,CAACK,QAAQ,KAAKL,WAAW,CAACI,MACvC,CAAC;AACD77C,EAAAA,cAAc,CAACw7C,OAAO,EAAE1B,oCAAoC,EAAE4B,cAAc,CAAC;AAC7E,EAAA,OAAO17C,cAAc,CACnBw7C,OAAO,EACPzB,mCAAmC,EACnC4B,aACF,CAAC;AACH,CAAC;AAED,MAAMh1B,MAAI,GAAGA,CACX+a,MAAa,EACbv9C,OAAgB,EAChBqyD,UAAsB,EACtB9sC,MAA+B,EAC/BmtC,OAAsC,KACnC;AAAA,EAAA,IAAAkF,mBAAA,EAAAC,gBAAA,EAAAC,YAAA,EAAAC,kBAAA,EAAAC,gBAAA,EAAAC,kBAAA,EAAAC,mBAAA,EAAAC,qBAAA,EAAAhgC,qBAAA;AAQH,EAAA,MAAM84B,KAAK,GAAGoB,UAAU,CAACC,MAAM;AAC/B,EAAA,MAAMpB,OAAO,GAAGmB,UAAU,CAACE,QAAQ;AACnC,EAAA,MAAMpB,QAAQ,GAAGkB,UAAU,CAACG,SAAS;AACrC,EAAA,MAAMlB,UAAU,GAAGe,UAAU,CAACI,eAAe,CAACpB,KAAK;AACnD,EAAA,MAAMG,UAAU,GAAGa,UAAU,CAACI,eAAe,CAAClB,KAAK;EACnD,MAAM6G,aAAa,GAAGxvD,QAAW,CAACqoD,KAAK,CAAC,CAAC,CAAC,CAAC;AAE3C,EAAA,IAAIuF,WAAW,GAAGjrD,KAAK,EAAAqsD,mBAAA,GAACryC,MAAM,KAAA,IAAA,IAANA,MAAM,uBAANA,MAAM,CAAEixC,WAAW,MAAA,IAAA,IAAAoB,mBAAA,cAAAA,mBAAA,GAAI,CAAC,CAAC;EACjD,MAAMS,UAAU,GAAG,CAAA9yC,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE/I,KAAK,KAAI,QAAQ;AAC5C,EAAA,MAAM87C,UAAU,GAAGD,UAAU,KAAK,UAAU;AAC5C,EAAA,MAAME,WAAW,GAAA,CAAAV,gBAAA,GAAGtyC,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEkxC,QAAQ,MAAA,IAAA,IAAAoB,gBAAA,KAAA,MAAA,GAAAA,gBAAA,GAAI,GAAG;AAC3C,EAAA,MAAMW,UAAU,GAAA,CAAAV,YAAA,GAAGvyC,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE2jC,IAAI,MAAA,IAAA,IAAA4O,YAAA,KAAA,MAAA,GAAAA,YAAA,GAAI,KAAK;AACxC,EAAA,MAAMW,YAAY,GAAA,CAAAV,kBAAA,GAAGxyC,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEmxC,UAAU,MAAA,IAAA,IAAAqB,kBAAA,KAAA,MAAA,GAAAA,kBAAA,GAAI,KAAK;AAChD,EAAA,MAAMW,UAAU,GAAA,CAAAV,gBAAA,GAAGzyC,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEoxC,QAAQ,MAAA,IAAA,IAAAqB,gBAAA,KAAA,MAAA,GAAAA,gBAAA,GAAI,KAAK;AAC5C,EAAA,MAAM1P,YAAY,GAAA,CAAA2P,kBAAA,GAAG1yC,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEgjC,UAAU,MAAA,IAAA,IAAA0P,kBAAA,KAAA,MAAA,GAAAA,kBAAA,GAAI,KAAK;EAChD,MAAMzP,WAAW,GAAGF,YAAY,GAAG5tD,YAAe,GAAGA,UAAa;AAClE,EAAA,MAAMk8D,WAAW,GAAA,CAAAsB,mBAAA,GAAG3yC,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEqxC,WAAW,MAAA,IAAA,IAAAsB,mBAAA,KAAA,MAAA,GAAAA,mBAAA,GAAI,IAAI;AAC/C,EAAA,MAAMpB,qBAAqB,GAAA,CAAAqB,qBAAA,GAAG5yC,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEuxC,qBAAqB,MAAA,IAAA,IAAAqB,qBAAA,KAAA,MAAA,GAAAA,qBAAA,GAAI,KAAK;AACpE,EAAA,MAAMt1D,cAAc,GAAA,CAAAs1B,qBAAA,GAAG5S,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE1iB,cAAc,MAAA,IAAA,IAAAs1B,qBAAA,KAAA,MAAA,GAAAA,qBAAA,GAAI,IAAI;AAErD,EAAA,MAAMyf,aAAa,GAAG3G,aAAa,CAACvrB,KAAK,EAAE;AAC3C,EAAA,MAAMitB,WAAW,GAAG2lB,UAAU,GAC1BjuB,WAAW,CAAC3kB,KAAK,CAAC;AAAEymB,IAAAA,eAAe,EAAE;GAAI,CAAC,GAC1C,IAAI;EACR,MAAMwsB,cAAc,GAAG/B,WAAW,GAAGthC,cAAc,CAAC5P,KAAK,EAAE,GAAG,IAAI;AAClE,EAAA,MAAMkzC,WAAW,GAAGH,YAAY,GAC5BhiB,WAAW,CAAC/wB,KAAK,CAAC;AAAEmoB,IAAAA,UAAU,EAAE,KAAK;AAAE1K,IAAAA,SAAS,EAAE;GAAK,CAAC,GACxD,IAAI;AAER,EAAA,MAAM01B,wBAAwB,GAAG,OAAO3yC,CAAW,EAAE8G,IAAe,KAAK;AACvE,IAAA,IAAIA,IAAI,EAAE;AACR;AACA,MAAA,MAAM8rC,GAAG,GACPlwD,UAAa,CAAC,MAAMyT,oBAAoB,CAACrc,OAAO,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC;AAChE,MAAA,MAAM+4D,aAAa,GACjB/rC,IAAI,CAAC8d,OAAO,CAACwd,YAAY,GAAG5tD,OAAU,GAAGA,QAAW,CAAC;AAEvD,MAAA,MAAMs+D,kBAAkB,GAAGA,CAACC,OAAO,GAAG,KAAK,KACxCC,eAAe,GAAGtwD,GAAM,CACvB,CAAC;AAAE;AACHA,MAAAA,GAAM,CACJA,KAAQ,CACN,CAACmwD,aAAa,GAAGD,GAAG,IAAIG,OAAO,GAAG,GAAG,GAAGV,WAAW,GAAG,CAAC,CAAC,KACrDA,WAAW,GAAGO,GAAG,CACtB,CAAC,EACD3G,QAAQ;AACV,OACF,CAAE;MAEJ+G,eAAe,GAAGF,kBAAkB,EAAE;AACtC,MAAA,IAAIR,UAAU,IAAIU,eAAe,GAAG/G,QAAQ,EAAE;AAC5C;AACA;AACA;AACA;AACA+G,QAAAA,eAAe,GAAGF,kBAAkB,CAAC,IAAI,CAAC;AAC5C,MAAA;AAOF,IAAA,CAAC;;AAED,IAAA,MAAMG,WAAW,GAAG5b,MAAM,CAACuW,iBAAiB,EAAE;AAC9C,IAAA,MAAMsF,WAAW,GAAG7b,MAAM,CAACyW,kBAAkB,EAAE;AAC/C,IAAA,MAAMqF,SAAS,GAAGlH,QAAQ,GAAG+G,eAAe;AAC5C,IAAA,MAAMI,OAAO,GAAGd,UAAU,IAAIU,eAAe,GAAG/G,QAAQ;;AAExD;IACA,IAAIoH,YAAY,GAAGJ,WAAW,GAAG,CAACD,eAAe,GAAG,CAAC,IAAI,CAAC;IAC1D,IAAIM,QAAQ,GAAG,KAAK;AAEpB,IAAA,IAAID,YAAY,IAAIF,SAAS,GAAG,CAAC,EAAE;MACjCE,YAAY,GAAGF,SAAS,GAAG,CAAC;AAC5BG,MAAAA,QAAQ,GAAG,IAAI;AACjB,IAAA,CAAC,MAAM,IAAID,YAAY,IAAI,CAAC,EAAE;AAC5BA,MAAAA,YAAY,GAAG,CAAC;AAChBC,MAAAA,QAAQ,GAAG,IAAI;AACjB,IAAA;IAEA,IAAIC,aAAa,GAAG,CAAC;AACrB,IAAA,IAAIH,OAAO,EAAE;AACXG,MAAAA,aAAa,GAAG7wD,GAAM,CAAC,CAAC,EAAE2wD,YAAY,GAAG,CAAC,IAAIC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;AACvE,IAAA,CAAC,MAAM;AACLC,MAAAA,aAAa,GACX,CAACL,WAAW,GAAGD,WAAW,GAAGvwD,KAAQ,GAAGA,IAAO,EAAE2wD,YAAY,CAAC,GAAG,CAAC;AACtE,IAAA;IAEA,MAAMG,cAAc,GAAG,CAACJ,OAAO,GAC3BJ,eAAe,GAAG,CAAC,GACnBM,QAAQ,IAAIN,eAAe,GAAG,CAAC,KAAK,CAAC,GACnCA,eAAe,GACfA,eAAe,GAAG,CAAC;IAEzB,MAAMS,yBAAyB,GAAGL,OAAO,GACrCJ,eAAe,GAAG,GAAG,GACrBA,eAAe;IAYnBv9C,OAAO,CAAC3b,OAAO,EAAEw1D,oBAAoB,EAAEmE,yBAAyB,GAAG,EAAE,CAAC;IACtE98C,YAAY,CAAC7c,OAAO,EAAEi2D,iBAAiB,EAAE0D,yBAAyB,GAAG,EAAE,CAAC;IACxE98C,YAAY,CAAC7c,OAAO,EAAEk2D,gBAAgB,EAAEwD,cAAc,GAAG,EAAE,CAAC;IAC5D78C,YAAY,CAAC7c,OAAO,EAAEm2D,oBAAoB,EAAEsD,aAAa,GAAG,EAAE,CAAC;AAC/D58C,IAAAA,YAAY,CAAC7c,OAAO,EAAEo2D,mBAAmB,EAAExtD,KAAQ,CAAC6wD,aAAa,CAAC,GAAG,EAAE,CAAC;GACzE;EAED,MAAMG,iBAAiB,GACrB1uC,UAA+C,IAC1B;IACrB,OAAO;AACL8O,MAAAA,OAAO,EAAEpxB,SAAY,CAACguD,WAAW,CAAC;AAAC,QAC/Bv5D,SAAS;AAAC,QACVu5D,WAAW;MACfngC,OAAO,EAAE,CAAC/7B,MAAS,EAAEA,QAAW,CAAC;MACjCwwB,UAAU;AACVqH,MAAAA,cAAc,EAAE,EAAE;AAClB1vB,MAAAA;KACD;GACF;AAED,EAAA,MAAMg3D,aAAa,GAAG,YAAY;AAChCjiB,IAAAA,aAAa,CAAClxC,QAAQ,CAAC1G,OAAO,EAAE;AAC9BygC,MAAAA,UAAU,EAAE,MAAMs2B,sBAAsB,CAAC/2D,OAAO;AAClD,KAAC,CAAC;GACH;AAED,EAAA,MAAM85D,mBAAmB,GAAGA,CAAC17D,MAAmB,EAAE4uB,IAAiB,KAAK;IACtE,MAAM+sC,aAAa,GAAG/sC,IAAI,CAAC2B,MAAM,KAAKj0B,MAAS;AAE/C,IAAA,IAAIkO,QAAW,CAAC,CAAClO,MAAS,EAAEA,IAAO,CAAC,EAAEsyB,IAAI,CAACpK,SAAS,CAAC,EAAE;MACrD,CAACm3C,aAAa,GAAGrH,OAAO,CAACE,SAAS,GAAGF,OAAO,CAACI,SAAS,EAAE9lC,IAAI,CAAC;AAC/D,IAAA,CAAC,MAAM;MACL,CAAC+sC,aAAa,GAAGrH,OAAO,CAACI,SAAS,GAAGJ,OAAO,CAACE,SAAS,EAAE5lC,IAAI,CAAC;AAC/D,IAAA;GACD;EAED,MAAMgtC,WAAW,GAAGA,MAAM;AACxBrB,IAAAA,cAAc,aAAdA,cAAc,KAAA,MAAA,IAAdA,cAAc,CAAE1gC,SAAS,CACvBj4B,OAAO,EACP85D,mBAAmB,EACnBF,iBAAiB,CACf9C,qBAAqB,GACjBxO,YAAY,GACV,CAAC5tD,MAAS,EAAEA,OAAU,CAAC,GACvB,CAACA,IAAO,EAAEA,MAAS,CAAC,GACtB2C,SAAS;AACf,KACF,CAAC;IAEDs1C,WAAW,KAAA,IAAA,IAAXA,WAAW,KAAA,MAAA,IAAXA,WAAW,CAAE1G,QAAQ,CAAC4sB,wBAAwB,EAAE;AAAEz6D,MAAAA,MAAM,EAAE4B;AAAQ,KAAC,CAAC;IACpE44D,WAAW,KAAA,IAAA,IAAXA,WAAW,KAAA,MAAA,IAAXA,WAAW,CAAElgB,MAAM,CAAC14C,OAAO,EAAE65D,aAAa,EAAE;AAAElkB,MAAAA,KAAK,EAAE;AAAK,KAAC,CAAC;GAC7D;EAED,MAAMskB,cAAc,GAAGA,MAAM;IAC3BtB,cAAc,KAAA,IAAA,IAAdA,cAAc,KAAA,MAAA,IAAdA,cAAc,CAAE3gC,UAAU,CAACh4B,OAAO,EAAE85D,mBAAmB,CAAC;IACxDnnB,WAAW,KAAA,IAAA,IAAXA,WAAW,KAAA,MAAA,IAAXA,WAAW,CAAEzG,SAAS,CAAC2sB,wBAAwB,EAAE74D,OAAO,CAAC;IACzD44D,WAAW,KAAA,IAAA,IAAXA,WAAW,KAAA,MAAA,IAAXA,WAAW,CAAEjgB,OAAO,CAAC34C,OAAO,EAAE65D,aAAa,CAAC;GAC7C;EAED,MAAMK,kBAAkB,GAAI/9D,KAAY,IAAK;AAC3C,IAAA,MAAMiC,MAAM,GAAGwK,eAAkB,CAACzM,KAAK,CAAC;AACxC,IAAA,OAAOyM,SAAY,CAACxK,MAAM,CAAC,GACvBmN,KAAK,CAACiQ,OAAO,CAACpd,MAAM,EAAE03D,kBAAkB,CAAC,CAAC,GAC1C,CAAC;GACN;EAED,MAAMqE,mBAAmB,GAAIh+D,KAAY,IAAK;AAC5C,IAAA,MAAM62D,OAAO,GAAGkH,kBAAkB,CAAC/9D,KAAK,CAAC;AACzCu2D,IAAAA,OAAO,CAACa,WAAW,CAACP,OAAO,CAAC;GAC7B;EAED,MAAMoH,mBAAmB,GAAIj+D,KAAY,IAAK;AAC5C,IAAA,MAAM62D,OAAO,GAAGkH,kBAAkB,CAAC/9D,KAAK,CAAC;AACzCu2D,IAAAA,OAAO,CAACO,SAAS,CAACD,OAAO,CAAC;GAC3B;EAED,MAAMqH,uBAAuB,GAAGA,MAAM3H,OAAO,CAACE,SAAS,EAAE;EACzD,MAAM0H,uBAAuB,GAAGA,MAAM5H,OAAO,CAACI,SAAS,EAAE;;AAEzD;;AAEAvV,EAAAA,MAAM,CAACzB,SAAS,CAACme,cAAc,CAAC;AAChC1c,EAAAA,MAAM,CAACxB,QAAQ,CAACie,WAAW,CAAC;EAE5Bzc,MAAM,CAACtB,SAAS,CAAC,YAAY;IAC3B,MAAMpkC,iBAAiB,EAAE;AACzBmE,IAAAA,UAAU,CAAChc,OAAO,EAAEtF,kBAAqB,CAAC;AAC1CshB,IAAAA,UAAU,CAAChc,OAAO,EAAEo1D,YAAY,CAAC;AACjCp5C,IAAAA,UAAU,CAAChc,OAAO,EAAEq1D,oBAAoB,CAAC;AACzCr5C,IAAAA,UAAU,CAAChc,OAAO,EAAEs1D,mBAAmB,CAAC;AACxCt5C,IAAAA,UAAU,CAAChc,OAAO,EAAEy1D,mBAAmB,CAAC;AACxCz5C,IAAAA,UAAU,CAAChc,OAAO,EAAE01D,2BAA2B,CAAC;AAChD15C,IAAAA,UAAU,CAAChc,OAAO,EAAE21D,oCAAoC,CAAC;AACzD35C,IAAAA,UAAU,CAAChc,OAAO,EAAE41D,mCAAmC,CAAC;AACxD55C,IAAAA,UAAU,CAAChc,OAAO,EAAEu1D,kBAAkB,CAAC;AACvCv5C,IAAAA,UAAU,CAAChc,OAAO,EAAEw1D,oBAAoB,CAAC;AACzC14C,IAAAA,eAAe,CAAC9c,OAAO,EAAE+1D,gBAAgB,CAAC;AAC1Cj5C,IAAAA,eAAe,CAAC9c,OAAO,EAAEg2D,eAAe,CAAC;AACzCl5C,IAAAA,eAAe,CAAC9c,OAAO,EAAEi2D,iBAAiB,CAAC;AAC3Cn5C,IAAAA,eAAe,CAAC9c,OAAO,EAAEk2D,gBAAgB,CAAC;AAC1Cp5C,IAAAA,eAAe,CAAC9c,OAAO,EAAEm2D,oBAAoB,CAAC;AAC9Cr5C,IAAAA,eAAe,CAAC9c,OAAO,EAAEo2D,mBAAmB,CAAC;AAE7C,IAAA,KAAK,IAAImE,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG3xD,QAAW,CAACqoD,KAAK,CAAC,EAAEsJ,GAAG,EAAE,EAAE;AACjD9gD,MAAAA,gBAAgB,CAACw3C,KAAK,CAACsJ,GAAG,CAAC,EAAEpF,WAAW,CAAC;AAEzC,MAAA,KAAK,MAAM,CAAC5hB,EAAE,EAAExc,QAAQ,CAAC,IAAI,CAC3B,CAACk6B,KAAK,CAACsJ,GAAG,CAAC,EAAE,IAAI,CAAC,EAClB,CAACrJ,OAAO,CAACqJ,GAAG,CAAC,EAAEJ,mBAAmB,CAAC,EACnC,CAAChJ,QAAQ,CAACoJ,GAAG,CAAC,EAAEH,mBAAmB,CAAC,CACrC,EAAW;AACV,QAAA,IAAI7mB,EAAE,EAAE;AACNv3B,UAAAA,UAAU,CAACu3B,EAAE,EAAEsiB,iBAAiB,CAAC;AACjC75C,UAAAA,UAAU,CAACu3B,EAAE,EAAEuiB,kBAAkB,CAAC;AAClCh5C,UAAAA,eAAe,CAACy2B,EAAE,EAAE8iB,eAAe,CAAC;AACpC,UAAA,IAAIt/B,QAAQ,EAAE;YACZnK,uBAAuB,CAAC2mB,EAAE,EAAE74C,OAAU,EAAEq8B,QAAQ,CAAC;AACnD,UAAA;AACF,QAAA;AACF,MAAA;MAEAnuB,OAAU,CAACqoD,KAAK,CAACsJ,GAAG,CAAC,EAAE9F,cAAc,CAAC;AACxC,IAAA;AAEA,IAAA,IAAInD,UAAU,EAAE;MACd1kC,uBAAuB,CAAC0kC,UAAU,EAAE52D,OAAU,EAAE2/D,uBAAuB,CAAC;AAC1E,IAAA;AAEA,IAAA,IAAI7I,UAAU,EAAE;MACd5kC,uBAAuB,CAAC4kC,UAAU,EAAE92D,OAAU,EAAE4/D,uBAAuB,CAAC;AAC1E,IAAA;AAEA7gD,IAAAA,gBAAgB,CAACzZ,OAAO,EAAEi1D,aAAW,CAAC;AACtC,IAAA,IAAImD,aAAa,EAAE;AACjB3+C,MAAAA,gBAAgB,CAAC2+C,aAAa,EAAElD,qBAAqB,CAAC;AACxD,IAAA;AACF,EAAA,CAAC,CAAC;AAEF,EAAA,IAAIoD,UAAU,EAAE;AACd/a,IAAAA,MAAM,CAAC2W,YAAY,CAAC,MAAM2E,wBAAwB,EAAE,CAAC;AACvD,EAAA;AAEAmB,EAAAA,WAAW,EAAE;AACbh/C,EAAAA,UAAU,CAAChb,OAAO,EAAEi1D,aAAW,CAAC;AAChC,EAAA,IAAImD,aAAa,EAAE;AACjBp9C,IAAAA,UAAU,CAACo9C,aAAa,EAAElD,qBAAqB,CAAC;AAClD,EAAA;AAEA,EAAA,MAAM/C,QAAQ,GAAGvpD,QAAW,CAACqoD,KAAK,CAAC;EACnC,IAAIiI,eAAe,GAAG/G,QAAQ;EAE9Bx2C,OAAO,CAAC3b,OAAO,EAAEtF,kBAAqB,EAAE8tD,WAAW,CAAC;AACpD7sC,EAAAA,OAAO,CAAC3b,OAAO,EAAEo1D,YAAY,EAAEiD,UAAU,CAAC;AAC1Cx8C,EAAAA,cAAc,CAAC7b,OAAO,EAAEq1D,oBAAoB,EAAEoD,YAAY,CAAC;AAC3D58C,EAAAA,cAAc,CAAC7b,OAAO,EAAEs1D,mBAAmB,EAAEoD,UAAU,CAAC;EACxD/8C,OAAO,CAAC3b,OAAO,EAAEu1D,kBAAkB,EAAEpD,QAAQ,GAAG,EAAE,CAAC;EACnDt1C,YAAY,CAAC7c,OAAO,EAAEg2D,eAAe,EAAE,CAAC7D,QAAQ,IAAI,CAAC,IAAI,EAAE,CAAC;AAE5D,EAAA,KAAK,MAAMC,IAAI,IAAInB,KAAK,EAAE;IACxBzzC,wBAAwB,CAAC40C,IAAI,CAAC;AAC9Bp3C,IAAAA,UAAU,CAACo3C,IAAI,EAAE+C,WAAW,CAAC;AAC/B,EAAA;EAEA,KAAK,IAAIoF,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGpI,QAAQ,EAAEoI,GAAG,EAAE,EAAE;AACvCtD,IAAAA,aAAa,CAAC5E,UAAU,EAAEkI,GAAG,GAAG,CAAC,CAAC;IAClCpD,YAAY,CAAC9E,UAAU,EAAEkI,GAAG,GAAG,CAAC,EAAE5F,MAAM,CAAC;IAEzC,KAAK,MAAM,CAACphB,EAAE,EAAExc,QAAQ,CAAC,IAAI,CAC3B,CAACm6B,OAAO,CAACqJ,GAAG,CAAC,EAAEJ,mBAAmB,CAAC,EACnC,CAAChJ,QAAQ,CAACoJ,GAAG,CAAC,EAAEH,mBAAmB,CAAC,CACrC,EAAW;AACV,MAAA,IAAI7mB,EAAE,EAAE;QACNvnB,kBAAkB,CAACunB,EAAE,EAAE74C,OAAU,EAAEq8B,QAAQ,CAAC;AAC9C,MAAA;AACF,IAAA;AACF,EAAA;AAEA,EAAA,IAAIu6B,UAAU,EAAE;IACdtlC,kBAAkB,CAACslC,UAAU,EAAE52D,OAAU,EAAE2/D,uBAAuB,CAAC;AACrE,EAAA;AAEA,EAAA,IAAI7I,UAAU,EAAE;IACdxlC,kBAAkB,CAACwlC,UAAU,EAAE92D,OAAU,EAAE4/D,uBAAuB,CAAC;AACrE,EAAA;AAEA,EAAA,IAAI9D,WAAW,GAAG,CAAC,IAAIA,WAAW,GAAGrE,QAAQ,EAAE;AAC7CqE,IAAAA,WAAW,GAAG,CAAC;AACjB,EAAA;AACA9D,EAAAA,OAAO,CAACO,SAAS,CAACuD,WAAW,CAAC;AAChC,CAAC;AAED,MAAMtY,YAAU,GAAGA,CACjBX,MAAa,EACb8U,UAAsB,EACtBryD,OAAgB,EAChBulB,MAA+B,KAC5B;AACH,EAAA,MAAM0rC,KAAK,GAAGoB,UAAU,CAACC,MAAM;AAC/B,EAAA,MAAM1a,aAAa,GAAG3G,aAAa,CAACvrB,KAAK,EAAE;EAC3C,MAAM+yC,YAAY,GAAGlzC,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEmxC,UAAU;EACvC,MAAM8D,aAAsC,GAAG,EAAE;AACjD,EAAA,MAAMC,SAAS,GAAG7xD,MAAS,EAAkB;AAE7C,EAAA,MAAM8xD,kBAAkB,GAAG,aAAqC;AAC9Dj6B,IAAAA,UAAU,EAAE,MAAMs2B,sBAAsB,CAAC/2D,OAAO,CAAC;AACjD;AACAszC,IAAAA,YAAY,EAAE,SAAS;AACvBnP,IAAAA,cAAc,EAAE;AAClB,GAAC,CAAC;EAEF,IAAIg1B,WAAW,GAAG,EAAE;EACpB,IAAIwB,WAAW,GAAG,EAAE;EACpB,IAAIC,cAAc,GAAG,CAAC;EAEtB,MAAMC,aAAa,GAAIC,WAAyB,IAAK;AACnD,IAAA,IAAIvd,MAAM,CAAClC,UAAU,EAAE,EAAE;AACvB,MAAA,OAAO,KAAK;AACd,IAAA;AAEA,IAAA,IAAI,CAAAyf,WAAW,KAAA,IAAA,IAAXA,WAAW,KAAA,MAAA,GAAA,MAAA,GAAXA,WAAW,CAAEtsC,MAAM,MAAK9zB,OAAU,EAAE;AACtC,MAAA,OAAO,IAAI;AACb,IAAA;AAEA,IAAA,MAAMK,SAAO,GAAG6N,OAAU,EAAE;AAC5B,IAAA,IAAI7N,SAAO,GAAG6/D,cAAc,GAAGrG,sBAAsB,EAAE;AACrDqG,MAAAA,cAAc,GAAG7/D,SAAO;AACxB,MAAA,OAAO,IAAI;AACb,IAAA;AAEA,IAAA,OAAO,KAAK;GACb;AAED,EAAA,MAAMg4D,QAAQ,GAAG,OAAOC,OAAe,EAAE8H,WAAyB,KAAK;AACrE9H,IAAAA,OAAO,GAAGznD,KAAK,CAACynD,OAAO,EAAE,EAAE,CAAC;IAC5B,IAAIA,OAAO,KAAKmG,WAAW,IAAI,CAAC0B,aAAa,CAACC,WAAW,CAAC,EAAE;AAC1D,MAAA;AACF,IAAA;AAEA,IAAA,MAAM3I,QAAQ,GAAGvpD,QAAW,CAACqoD,KAAK,CAAC;AAEnC,IAAA,IACGkI,WAAW,KAAK,CAAC,IAAInG,OAAO,KAAK,CAAC,IAClCmG,WAAW,KAAKhH,QAAQ,IAAIa,OAAO,KAAKb,QAAQ,GAAG,CAAE,EACtD;AACA;AACA,MAAA,IAAIsG,YAAY,EAAE;QAChB7gB,aAAa,CAAC3E,MAAM,CAClB+f,OAAO,GACH,CAAA8H,WAAW,KAAA,IAAA,IAAXA,WAAW,KAAA,MAAA,GAAA,MAAA,GAAXA,WAAW,CAAEl4C,SAAS,MAAKloB,OAAU,GACnCA,OAAU,GACVA,MAAS,GACX,CAAAogE,WAAW,KAAA,IAAA,IAAXA,WAAW,KAAA,MAAA,GAAA,MAAA,GAAXA,WAAW,CAAEl4C,SAAS,MAAKloB,MAAS,GAClCA,MAAS,GACTA,IAAO,EACb,MAAMggE,kBAAkB,EAC1B,CAAC,CAAC;AACJ,MAAA;AAEA,MAAA;AACF,IAAA;AAEA,IAAA,IAAIlH,cAAc,CAACR,OAAO,CAAC,IAAIA,OAAO,GAAG,CAAC,IAAIA,OAAO,GAAGb,QAAQ,EAAE;AAChE;AACA,MAAA;AACF,IAAA;AAEAwI,IAAAA,WAAW,GAAGxB,WAAW,GAAG,CAAC,GAAGA,WAAW,GAAGnG,OAAO;AACrDmG,IAAAA,WAAW,GAAGnG,OAAO;AAErB,IAAA,KAAK,MAAMx2D,QAAQ,IAAIi+D,SAAS,EAAE;AAChC,MAAA,MAAMj+D,QAAQ,CAACyZ,MAAM,CAACsnC,MAAM,CAAC;AAC/B,IAAA;IAEA30C,OAAU,CAACqoD,KAAK,CAAC0J,WAAW,GAAG,CAAC,CAAC,EAAElG,cAAc,CAAC;AAClD,IAAA,KACE,IAAIgD,CAAC,GAAGkD,WAAW,EACnBlD,CAAC,KAAK0B,WAAW,EACjBA,WAAW,GAAGwB,WAAW,GAAGlD,CAAC,EAAE,GAAGA,CAAC,EAAE,EACrC;AACA,MAAA,IAAI,CAACjE,cAAc,CAACiE,CAAC,CAAC,EAAE;AACtBN,QAAAA,YAAY,CACV9E,UAAU,EACVoF,CAAC,EACD0B,WAAW,GAAGwB,WAAW,GAAGhG,MAAM,GAAGD,SACvC,CAAC;AACH,MAAA;AACF,IAAA;IAEA0C,cAAc,CACZp3D,OAAO,EACP;AAAE23D,MAAAA,QAAQ,EAAEwB,WAAW;AAAEzB,MAAAA,MAAM,EAAEvF;KAAU,EAC3CqB,cACF,CAAC;IACD5qD,OAAU,CAACqoD,KAAK,CAACkI,WAAW,GAAG,CAAC,CAAC,EAAE1E,cAAc,CAAC;AAClD,IAAA,MAAM0C,YAAY,CAAC9E,UAAU,EAAE8G,WAAW,EAAE3E,SAAS,CAAC;GACvD;AAED,EAAA,MAAM7B,QAAQ,GAAG,MAAOmI,WAAyB,IAAK;AACpD,IAAA,IAAIC,UAAU,GAAG5B,WAAW,GAAG,CAAC;AAChC,IAAA,OAAO3F,cAAc,CAACuH,UAAU,CAAC,EAAE;AACjCA,MAAAA,UAAU,EAAE;AACd,IAAA;AAEA,IAAA,OAAOhI,QAAQ,CAACgI,UAAU,EAAED,WAAW,CAAC;GACzC;AAED,EAAA,MAAMjI,QAAQ,GAAG,MAAOiI,WAAyB,IAAK;AACpD,IAAA,IAAIC,UAAU,GAAG5B,WAAW,GAAG,CAAC;AAChC,IAAA,OAAO3F,cAAc,CAACuH,UAAU,CAAC,EAAE;AACjCA,MAAAA,UAAU,EAAE;AACd,IAAA;AAEA,IAAA,OAAOhI,QAAQ,CAACgI,UAAU,EAAED,WAAW,CAAC;GACzC;EAED,MAAMtH,cAAc,GAAIR,OAAe,IAAKwH,aAAa,CAACxH,OAAO,CAAC,KAAK,IAAI;AAE3E,EAAA,MAAME,WAAW,GAAG,MAAOF,OAAe,IAAK;AAC7CA,IAAAA,OAAO,GAAGznD,KAAK,CAACynD,OAAO,CAAC;AACxB,IAAA,IAAIzV,MAAM,CAAClC,UAAU,EAAE,IAAI2X,OAAO,GAAG,CAAC,IAAIA,OAAO,GAAGpqD,QAAW,CAACqoD,KAAK,CAAC,EAAE;AACtE,MAAA;AACF,IAAA;;AAEA;AACAuJ,IAAAA,aAAa,CAACxH,OAAO,CAAC,GAAG,IAAI;IAE7B,IAAIA,OAAO,KAAKmG,WAAW,EAAE;MAC3B,MAAMtG,QAAQ,EAAE;MAEhB,IAAIG,OAAO,KAAKmG,WAAW,EAAE;AAC3B;QACA,MAAMxG,QAAQ,EAAE;QAEhB,IAAIK,OAAO,KAAKmG,WAAW,EAAE;AAC3B;AACAqB,UAAAA,aAAa,CAACxH,OAAO,CAAC,GAAG,KAAK;AAC9B,UAAA;AACF,QAAA;AACF,MAAA;AACF,IAAA;IAEAoE,cAAc,CACZp3D,OAAO,EACP;AAAE23D,MAAAA,QAAQ,EAAEwB,WAAW;AAAEzB,MAAAA,MAAM,EAAE9uD,QAAW,CAACqoD,KAAK;KAAG,EACrDuC,cACF,CAAC;IACD,MAAM2D,YAAY,CAAC9E,UAAU,EAAEW,OAAO,EAAEt4D,UAAa,CAAC;GACvD;AAED,EAAA,MAAM04D,UAAU,GAAG,MAAOJ,OAAe,IAAK;AAC5CA,IAAAA,OAAO,GAAGznD,KAAK,CAACynD,OAAO,CAAC;IACxB,IAAIzV,MAAM,CAAClC,UAAU,EAAE,IAAI,CAACmY,cAAc,CAACR,OAAO,CAAC,EAAE;AACnD,MAAA;AACF,IAAA;;AAEA;AACAwH,IAAAA,aAAa,CAACxH,OAAO,CAAC,GAAG,KAAK;IAE9BoE,cAAc,CACZp3D,OAAO,EACP;AAAE23D,MAAAA,QAAQ,EAAEwB,WAAW;AAAEzB,MAAAA,MAAM,EAAE9uD,QAAW,CAACqoD,KAAK;KAAG,EACrDuC,cACF,CAAC;AACD,IAAA,MAAM2D,YAAY,CAChB9E,UAAU,EACVW,OAAO,EACPA,OAAO,GAAGmG,WAAW,GAAGzE,SAAS,GAAGC,MACtC,CAAC;GACF;AAED,EAAA,MAAMrB,UAAU,GAAIN,OAAe,IACjCQ,cAAc,CAACR,OAAO,CAAC,GAAGI,UAAU,CAACJ,OAAO,CAAC,GAAGE,WAAW,CAACF,OAAO,CAAC;AAEtE,EAAA,MAAMkB,YAAY,GAAI1+C,OAAsB,IAC1CilD,SAAS,CAAChkD,GAAG,CAACZ,YAAY,CAACL,OAAO,CAAC,CAAC;EAEtC,OAAO;AACLo9C,IAAAA,SAAS,EAAED,QAAQ;AACnBG,IAAAA,SAAS,EAAED,QAAQ;AACnBI,IAAAA,SAAS,EAAEF,QAAQ;AACnBI,IAAAA,YAAY,EAAED,WAAW;AACzBG,IAAAA,WAAW,EAAED,UAAU;AACvBG,IAAAA,WAAW,EAAED,UAAU;AACvBG,IAAAA,eAAe,EAAED,cAAc;IAC/BG,eAAe,EAAEA,MAAM1C,KAAK,CAACkI,WAAW,GAAG,CAAC,CAAC;IAC7CtF,gBAAgB,EAAEA,MAAM5C,KAAK,CAAC0J,WAAW,GAAG,CAAC,CAAC;AAC9C5G,IAAAA,kBAAkB,EAAEA,MAAOnrD,QAAW,CAACqoD,KAAK,CAAC,GAAG,CAAC,GAAGkI,WAAW,GAAG,CAAE;AACpElF,IAAAA,mBAAmB,EAAEA,MAAOrrD,QAAW,CAACqoD,KAAK,CAAC,GAAG,CAAC,GAAG0J,WAAW,GAAG,CAAE;AACrExG,IAAAA,aAAa,EAAED;GAChB;AACH,CAAC;;ACv0CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM8G,QAAQ,CAAmB;AACtC;AACF;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;AACA;;EAGE,OAAOjd,QAAQA,GAAG;IAChBP,cAAc,CAAC,WAAW,EAAGx9C,OAAO,IAAK,IAAIg7D,QAAQ,CAACh7D,OAAO,CAAC,CAAC;AACjE,EAAA;EAEAxG,WAAWA,CAACwG,OAAgB,EAAE;IAC5B,IAAIowC,WAAW,GAAG,KAAK;IACvB,MAAM;MAAEwiB,SAAS;AAAEE,MAAAA;AAAU,KAAC,GAAG5U,YAAU,CAACl+C,OAAO,CAAC;IAEpD,IAAI,CAACm+C,EAAE,GAAG,MAAM;AACd/N,MAAAA,WAAW,GAAG,IAAI;MAClB,OAAOwiB,SAAS,EAAE;IACpB,CAAC;IAED,IAAI,CAACxU,IAAI,GAAG,MAAM;AAChBhO,MAAAA,WAAW,GAAG,KAAK;MACnB,OAAO0iB,SAAS,EAAE;IACpB,CAAC;AAED,IAAA,IAAI,CAACp4D,QAAW,CAAC,GAAG,MAAM;AACxB,MAAA,MAAMu8B,MAAM,GAAGmZ,WAAW,GAAG0iB,SAAS,GAAGF,SAAS;MAClDxiB,WAAW,GAAG,CAACA,WAAW;MAC1B,OAAOnZ,MAAM,EAAE;IACjB,CAAC;AACH,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMgkC,QAAQ,CAAmB;AACtC;AACF;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;AACA;;EAGE,OAAOld,QAAQA,GAAG;IAChBP,cAAc,CAAC,WAAW,EAAGx9C,OAAO,IAAK,IAAIi7D,QAAQ,CAACj7D,OAAO,CAAC,CAAC;AACjE,EAAA;EAEAxG,WAAWA,CAACwG,OAAgB,EAAE;IAC5B,IAAIowC,WAAW,GAAG,KAAK;IACvB,MAAM;MAAEwiB,SAAS;AAAEE,MAAAA;AAAU,KAAC,GAAG5U,YAAU,CAACl+C,OAAO,CAAC;IAEpD,IAAI,CAACm+C,EAAE,GAAG,MAAM;AACd/N,MAAAA,WAAW,GAAG,IAAI;MAClB,OAAO0iB,SAAS,EAAE;IACpB,CAAC;IAED,IAAI,CAAC1U,IAAI,GAAG,MAAM;AAChBhO,MAAAA,WAAW,GAAG,KAAK;MACnB,OAAOwiB,SAAS,EAAE;IACpB,CAAC;AAED,IAAA,IAAI,CAACl4D,QAAW,CAAC,GAAG,MAAM;AACxB,MAAA,MAAMu8B,MAAM,GAAGmZ,WAAW,GAAGwiB,SAAS,GAAGE,SAAS;MAClD1iB,WAAW,GAAG,CAACA,WAAW;MAC1B,OAAOnZ,MAAM,EAAE;IACjB,CAAC;AACH,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMikC,QAAQ,CAAmB;AACtC;AACF;AACA;;AAGE;AACF;AACA;AACA;;AAGE;AACF;AACA;AACA;;EAGE,OAAOnd,QAAQA,GAAG;IAChBP,cAAc,CACZ,YAAY,EACZ,CAACx9C,OAAO,EAAEyP,IAAI,KAAK,IAAIyrD,QAAQ,CAACl7D,OAAO,EAAEuL,KAAK,CAACkE,IAAI,CAAC,CAAC,CAAC,CAAC,CACzD,CAAC;AACH,EAAA;AAEAjW,EAAAA,WAAWA,CAACwG,OAAgB,EAAEgzD,OAAe,EAAE;IAC7C,IAAI,CAACA,OAAO,EAAE;AACZ,MAAA,MAAMpqD,UAAa,CAAC,yBAAyB,CAAC;AAChD,IAAA;IAEA,MAAM;AAAEqqD,MAAAA;AAAU,KAAC,GAAG/U,YAAU,CAACl+C,OAAO,CAAC;AAEzC,IAAA,IAAI,CAACm+C,EAAE,GAAG,MAAM8U,SAAS,CAACD,OAAO,CAAC;IAClC,IAAI,CAAC5U,IAAI,GAAG,MAAM6U,SAAS,CAAC,EAAE,CAAC;AAC/B,IAAA,IAAI,CAACv4D,QAAW,CAAC,GAAG,MAAMu4D,SAAS,CAACD,OAAO,EAAE,EAAE,CAAC;AAClD,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMmI,UAAU,CAAmB;AACxC;AACF;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;AACA;;EAGE,OAAOpd,QAAQA,GAAG;IAChBP,cAAc,CACZ,aAAa,EACb,CAACx9C,OAAO,EAAEyP,IAAI,KAAK,IAAI0rD,UAAU,CAACn7D,OAAO,EAAEuL,KAAK,CAACkE,IAAI,CAAC,CAAC,CAAC,CAAC,CAC3D,CAAC;AACH,EAAA;AAEAjW,EAAAA,WAAWA,CAACwG,OAAgB,EAAEgzD,OAAe,EAAE;IAC7C,IAAI,CAACA,OAAO,EAAE;AACZ,MAAA,MAAMpqD,UAAa,CAAC,gCAAgC,CAAC;AACvD,IAAA;IAEA,MAAM;MAAEyqD,WAAW;MAAEF,YAAY;AAAEI,MAAAA;AAAY,KAAC,GAAGrV,YAAU,CAACl+C,OAAO,CAAC;AACtEmzD,IAAAA,YAAY,CAACH,OAAO,CAAC,CAAC;;AAEtB,IAAA,IAAI,CAAC7U,EAAE,GAAG,MAAMkV,WAAW,CAACL,OAAO,CAAC;AACpC,IAAA,IAAI,CAAC5U,IAAI,GAAG,MAAM+U,YAAY,CAACH,OAAO,CAAC;IACvC,IAAI,CAACt4D,QAAW,CAAC,GAAG,MAAM64D,WAAW,CAACP,OAAO,CAAC;AAChD,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMoI,WAAW,CAAmB;AACzC;AACF;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;AACA;;EAGE,OAAOrd,QAAQA,GAAG;IAChBP,cAAc,CACZ,cAAc,EACd,CAACx9C,OAAO,EAAEyP,IAAI,KAAK,IAAI2rD,WAAW,CAACp7D,OAAO,EAAEuL,KAAK,CAACkE,IAAI,CAAC,CAAC,CAAC,CAAC,CAC5D,CAAC;AACH,EAAA;AAEAjW,EAAAA,WAAWA,CAACwG,OAAgB,EAAEgzD,OAAe,EAAE;IAC7C,IAAI,CAACA,OAAO,EAAE;AACZ,MAAA,MAAMpqD,UAAa,CAAC,gCAAgC,CAAC;AACvD,IAAA;IAEA,MAAM;MAAEyqD,WAAW;MAAEF,YAAY;AAAEI,MAAAA;AAAY,KAAC,GAAGrV,YAAU,CAACl+C,OAAO,CAAC;AACtEqzD,IAAAA,WAAW,CAACL,OAAO,CAAC,CAAC;;AAErB,IAAA,IAAI,CAAC7U,EAAE,GAAG,MAAMgV,YAAY,CAACH,OAAO,CAAC;AACrC,IAAA,IAAI,CAAC5U,IAAI,GAAG,MAAMiV,WAAW,CAACL,OAAO,CAAC;IACtC,IAAI,CAACt4D,QAAW,CAAC,GAAG,MAAM64D,WAAW,CAACP,OAAO,CAAC;AAChD,EAAA;AACF;;AAEA;;AAEA,MAAM9U,YAAU,GAAIl+C,OAAgB,IAAK;EACvC,IAAI26D,WAAsC,GAAG,IAAI;AAEjD,EAAA,MAAMhI,QAAQ,GAAIpV,MAAoB,IAAKA,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEoV,QAAQ,EAAE;AAC7D,EAAA,MAAME,QAAQ,GAAItV,MAAoB,IAAKA,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEsV,QAAQ,EAAE;EAE7D,MAAME,QAAQ,GAAG,OACfxV,MAAoB,EACpByV,OAAe,EACfqI,UAAyB,KACtB;IACH,MAAMC,UAAU,GAAG/d,MAAM,KAAA,IAAA,IAANA,MAAM,uBAANA,MAAM,CAAEuW,iBAAiB,EAAE;IAC9C,IAAIyH,SAAoC,GACtCD,UAAU,KAAKtI,OAAO,GAAGqI,UAAU,GAAGrI,OAAO;AAC/C,IAAA,IAAIuI,SAAS,KAAK,EAAE,EAAE;AACpBA,MAAAA,SAAS,GAAGZ,WAAW;AACzB,IAAA;AAEA,IAAA,IAAIY,SAAS,EAAE;AACb,MAAA,IAAIvI,OAAO,KAAK,EAAE,EAAE;AAClB;AACA2H,QAAAA,WAAW,GAAGW,UAAU;AAC1B,MAAA;MAEA,OAAM/d,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEwV,QAAQ,CAACwI,SAAS,CAAC,CAAA;AACnC,IAAA;EACF,CAAC;AAED,EAAA,MAAMnI,UAAU,GAAGA,CAAC7V,MAAoB,EAAEyV,OAAe,KACvDzV,MAAM,KAAA,IAAA,IAANA,MAAM,uBAANA,MAAM,CAAE6V,UAAU,CAACJ,OAAO,CAAC;AAC7B,EAAA,MAAME,WAAW,GAAGA,CAAC3V,MAAoB,EAAEyV,OAAe,KACxDzV,MAAM,KAAA,IAAA,IAANA,MAAM,uBAANA,MAAM,CAAE2V,WAAW,CAACF,OAAO,CAAC;AAC9B,EAAA,MAAMM,UAAU,GAAGA,CAAC/V,MAAoB,EAAEyV,OAAe,KACvDzV,MAAM,KAAA,IAAA,IAANA,MAAM,uBAANA,MAAM,CAAE+V,UAAU,CAACN,OAAO,CAAC;EAE7B,MAAMtC,aAAa,GAAGrT,iBAAiB,CAAC,OAAO,EAAEr9C,OAAO,EAAE2wD,KAAK,CAAC;EAEhE,OAAO;IACLiC,SAAS,EAAEA,MAAMlC,aAAa,CAACv4C,IAAI,CAACw6C,QAAQ,CAAC;IAC7CG,SAAS,EAAEA,MAAMpC,aAAa,CAACv4C,IAAI,CAAC06C,QAAQ,CAAC;IAE7CI,SAAS,EAAEA,CAACD,OAAe,EAAEqI,UAAyB,GAAG,IAAI,KAC3D3K,aAAa,CAACv4C,IAAI,CAAE6kC,CAAC,IAAK+V,QAAQ,CAAC/V,CAAC,EAAEgW,OAAO,EAAEqI,UAAU,CAAC,CAAC;AAE7DhI,IAAAA,WAAW,EAAGL,OAAe,IAC3BtC,aAAa,CAACv4C,IAAI,CAAE6kC,CAAC,IAAKoW,UAAU,CAACpW,CAAC,EAAEgW,OAAO,CAAC,CAAC;AACnDG,IAAAA,YAAY,EAAGH,OAAe,IAC5BtC,aAAa,CAACv4C,IAAI,CAAE6kC,CAAC,IAAKkW,WAAW,CAAClW,CAAC,EAAEgW,OAAO,CAAC,CAAC;AACpDO,IAAAA,WAAW,EAAGP,OAAe,IAC3BtC,aAAa,CAACv4C,IAAI,CAAE6kC,CAAC,IAAKsW,UAAU,CAACtW,CAAC,EAAEgW,OAAO,CAAC;GACnD;AACH,CAAC;;ACxXD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMwI,YAAY,SAASjZ,OAAO,CAAC;EAGxC,OAAOxE,QAAQA,GAAG;IAChByE,eAAe,CACb,OAAO,EACP,CAACxiD,OAAO,EAAEyP,IAAI,EAAEygC,OAAO,EAAE3qB,MAAM,KAC7B,IAAIi2C,YAAY,CAACx7D,OAAO,EAAEkwC,OAAO,EAAE3qB,MAAM,CAAC,EAC5CkgC,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEjsD,EAAAA,WAAWA,CACTwG,OAAgB,EAChBkwC,OAAiB,EACjB3qB,MAA2B,EAC3B;AAAA,IAAA,IAAAq6B,YAAA;AACA,IAAA,KAAK,CAAC5/C,OAAO,EAAEkwC,OAAO,EAAE3qB,MAAM,CAAC;IAC/B,IAAI,CAACC,SAAS,GAAG,MAAM5c,UAAa,CAAC2c,MAAM,CAAC;AAE5C,IAAA,IAAI,CAAC3c,QAAW,CAACsnC,OAAO,CAAC,EAAE;AACzB,MAAA;AACF,IAAA;AAEA,IAAA,MAAM9xC,MAAM,GAAA,CAAAwhD,YAAA,GAAGh3C,QAAW,CAAC2c,MAAM,CAAC,MAAA,IAAA,IAAAq6B,YAAA,KAAA,MAAA,GAAAA,YAAA,GAAI5/C,OAAO;IAE7C,IAAI,CAAC4I,YAAe,CAACxK,MAAM,EAAEq9D,gBAAgB,CAAC,EAAE;AAC9C,MAAA;AACF,IAAA;AAEA,IAAA,MAAMC,QAAQ,GAAGA,MAAOt9D,MAAM,CAACu9D,OAAO,GAAG,IAAI,CAACtY,GAAG,EAAE,GAAG,IAAI,CAACpE,OAAO,EAAG;AAErEjzB,IAAAA,kBAAkB,CAAC5tB,MAAM,EAAE,QAAQ,EAAEs9D,QAAQ,CAAC;IAE9C,IAAI,CAACzf,SAAS,CAAC,MAAM;AACnBrvB,MAAAA,uBAAuB,CAACxuB,MAAM,EAAE,QAAQ,EAAEs9D,QAAQ,CAAC;AACrD,IAAA,CAAC,CAAC;AACJ,EAAA;AACF;;AAEA;AACA;AACA;AACA;;AAUA;;AAEA,MAAMjW,oBAAiE,GACrEzlD,OAAO,IACJ;EACH,OAAO;AACL5B,IAAAA,MAAM,EAAEA,CAAC+H,GAAG,EAAEjF,KAAK,KAAA;AAAA,MAAA,IAAA6K,IAAA;MAAA,OAAA,CAAAA,IAAA,GAChBnD,eAAkB,CAAC1H,KAAK,CAAC,GACtBygD,uBAAuB,CAACzgD,KAAK,EAAElB,OAAO,CAAC,GACvC,IAAI,cAAA+L,IAAA,KAAA,MAAA,GAAAA,IAAA,GAAK1O,SAAS;AAAA,IAAA;GACzB;AACH,CAAC;;ACxKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMu+D,YAAY,SAASrZ,OAAO,CAAC;EAGxC,OAAOxE,QAAQA,GAAG;IAChByE,eAAe,CACb9nD,OAAU,EACV,CAACsF,OAAO,EAAEyP,IAAI,EAAEygC,OAAO,EAAE3qB,MAAM,KAC7B,IAAIq2C,YAAY,CAAC57D,OAAO,EAAEkwC,OAAO,EAAE3qB,MAAM,CAAC,EAC5CkgC,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEjsD,EAAAA,WAAWA,CACTwG,OAAgB,EAChBkwC,OAAiB,EACjB3qB,MAA6B,EAC7B;AACA,IAAA,KAAK,CAACvlB,OAAO,EAAEkwC,OAAO,EAAE3qB,MAAM,CAAC;IAC/B,IAAI,CAACC,SAAS,GAAG,MAAM5c,UAAa,CAAC2c,MAAM,CAAC;AAE5Cs2C,IAAAA,YAAY,CAAC,IAAI,EAAE77D,OAAO,EAAEkwC,OAAO,EAAE3qB,MAAM,EAAE7qB,OAAU,CAAC;AAC1D,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMohE,YAAY,SAASvZ,OAAO,CAAC;EAGxC,OAAOxE,QAAQA,GAAG;IAChByE,eAAe,CACb9nD,OAAU,EACV,CAACsF,OAAO,EAAEyP,IAAI,EAAEygC,OAAO,EAAE3qB,MAAM,KAC7B,IAAIu2C,YAAY,CAAC97D,OAAO,EAAEkwC,OAAO,EAAE3qB,MAAM,CAAC,EAC5CkgC,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEjsD,EAAAA,WAAWA,CACTwG,OAAgB,EAChBkwC,OAAiB,EACjB3qB,MAA6B,EAC7B;AACA,IAAA,KAAK,CAACvlB,OAAO,EAAEkwC,OAAO,EAAE3qB,MAAM,CAAC;IAC/B,IAAI,CAACC,SAAS,GAAG,MAAM5c,UAAa,CAAC2c,MAAM,CAAC;AAE5Cs2C,IAAAA,YAAY,CAAC,IAAI,EAAE77D,OAAO,EAAEkwC,OAAO,EAAE3qB,MAAM,EAAE7qB,OAAU,CAAC;AAC1D,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMqhE,YAAY,SAASxZ,OAAO,CAAC;EAGxC,OAAOxE,QAAQA,GAAG;IAChByE,eAAe,CACb9nD,OAAU,EACV,CAACsF,OAAO,EAAEyP,IAAI,EAAEygC,OAAO,EAAE3qB,MAAM,KAC7B,IAAIw2C,YAAY,CAAC/7D,OAAO,EAAEkwC,OAAO,EAAE3qB,MAAM,CAAC,EAC5CkgC,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEjsD,EAAAA,WAAWA,CACTwG,OAAgB,EAChBkwC,OAAiB,EACjB3qB,MAA6B,EAC7B;AACA,IAAA,KAAK,CAACvlB,OAAO,EAAEkwC,OAAO,EAAE3qB,MAAM,CAAC;IAC/B,IAAI,CAACC,SAAS,GAAG,MAAM5c,UAAa,CAAC2c,MAAM,CAAC;AAE5Cs2C,IAAAA,YAAY,CAAC,IAAI,EAAE77D,OAAO,EAAEkwC,OAAO,EAAE3qB,MAAM,EAAE7qB,OAAU,CAAC;AAC1D,EAAA;AACF;;AAEA;AACA;AACA;AACA;;AAwBA;;AAEA,MAAM+qD,oBAAmE,GACvEzlD,OAAO,IACJ;EACH,OAAO;AACL5B,IAAAA,MAAM,EAAEA,CAAC+H,GAAG,EAAEjF,KAAK,KAAA;AAAA,MAAA,IAAA6K,IAAA;MAAA,OAAA,CAAAA,IAAA,GAChBnD,eAAkB,CAAC1H,KAAK,CAAC,GACtBygD,uBAAuB,CAACzgD,KAAK,EAAElB,OAAO,CAAC,GACvC,IAAI,cAAA+L,IAAA,KAAA,MAAA,GAAAA,IAAA,GAAK1O,SAAS;AAAA,IAAA,CAAA;AACxBwF,IAAAA,cAAc,EAAEwP,eAAe;AAC/B8a,IAAAA,aAAa,EAAE9a;GAChB;AACH,CAAC;AAED,MAAMwpD,YAAY,GAAGA,CACnBte,MAAkD,EAClDv9C,OAAgB,EAChBkwC,OAAiB,EACjB3qB,MAAwC,EACxCuR,MAAmC,KAChC;AAAA,EAAA,IAAA8oB,YAAA;AACH,EAAA,IAAI,CAACh3C,QAAW,CAACsnC,OAAO,CAAC,EAAE;AACzB,IAAA;AACF,EAAA;EAEA3qB,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAANA,MAAM,GAANA,MAAM,GAAK,EAAE;AACb,EAAA,MAAMnnB,MAAM,GAAA,CAAAwhD,YAAA,GAAGh3C,QAAW,CAAC2c,MAAM,CAAC,MAAA,IAAA,IAAAq6B,YAAA,KAAA,MAAA,GAAAA,YAAA,GAAI5/C,OAAO;;AAE7C;AACA;AACA;AACA,EAAA,IAAIuvC,YAA8B;AAClC,EAAA,IAAIC,UAA4B;AAChC,EAAA,IAAI1Y,MAAM,KAAKp8B,OAAU,EAAE;IACzB60C,YAAY,GAAGC,UAAU,GAAG+N,MAAM,CAAC7iD,QAAW,CAAC;AACjD,EAAA,CAAC,MAAM;IACL60C,YAAY,GAAGgO,MAAM,CAAC8F,GAAG;IACzB7T,UAAU,GAAG+N,MAAM,CAAC0B,OAAO;AAC7B,EAAA;AAEA5P,EAAAA,cAAc,CAAC3pB,KAAK,EAAE,CAACmqB,SAAS,CAC9BzxC,MAAM,EACNmxC,YAAY,EACZC,UAAU,EACV5mC,KAAQ,CACN;AACEsnC,IAAAA,OAAO,EAAEpZ;AACX,GAAC,EACDroB,QAAQ,CAAC8W,MAAM,EAAE;AAAEnnB,IAAAA,MAAM,EAAE;GAAM,CACnC,CACF,CAAC;AACH,CAAC;;AC5bD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM49D,aAAa,SAASzZ,OAAO,CAAC;EAGzC,OAAOxE,QAAQA,GAAG;IAChByE,eAAe,CACb,QAAQ,EACR,CAACxiD,OAAO,EAAEyP,IAAI,EAAEygC,OAAO,EAAE3qB,MAAM,KAAK;AAAA,MAAA,IAAA02C,MAAA;AAClC,MAAA,OAAO,IAAID,aAAa,CACtBh8D,OAAO,EACPkwC,OAAO,EACPtnC,MAAS,CAAC2c,MAAM,EAAE;QAChBwpB,MAAM,EAAEv8B,sBAAsB,CAC5B,QAAQ,EACR5J,UAAa,CACXA,UAAa,CAAA,CAAAqzD,MAAA,GAACxsD,IAAI,CAAC,CAAC,CAAC,MAAA,IAAA,IAAAwsD,MAAA,KAAA,MAAA,GAAAA,MAAA,GAAI,EAAE,EAAE,aAAa,EAAE,KAAK,CAAC,EAClD,OAAO,EACP,MACF,CAAC,EACA/6D,KAAK,IACJg7B,iBAAiB,CAACh7B,K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EAAE3qB,MAAqB,EAAE;AACtE,IAAA,KAAK,CAACvlB,OAAO,EAAEkwC,OAAO,EAAE3qB,MAAM,CAAC;IAC/B,IAAI,CAACC,SAAS,GAAG,MAAM5c,UAAa,CAAC2c,MAAM,CAAC;AAE5C,IAAA,IAAI,CAAC3c,QAAW,CAACsnC,OAAO,CAAC,EAAE;AACzB,MAAA;AACF,IAAA;IAEA7rB,gBAAgB,EAAE,CAAClM,IAAI,CAAC,IAAI,CAACkrC,GAAG,CAAC;AACnC,EAAA;AACF;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMiZ,aAAa,SAAS/Z,OAAO,CAAC;EAGzC,OAAOxE,QAAQA,GAAG;AAChByE,IAAAA,eAAe,CACb9nD,QAAW,EACX,CAACsF,OAAO,EAAEyP,IAAI,EAAEygC,OAAO,EAAE3qB,MAAM,KAAK;AAClC,MAAA,OAAO,IAAI+2C,aAAa,CACtBt8D,OAAO,EACPkwC,OAAO,EACPtnC,MAAS,CAAC2c,MAAM,EAAE;AAChB2F,QAAAA,UAAU,EAAEtZ,eAAe,CAAC,YAAY,EAAEnC,IAAI,EAAE2b,kBAAkB;AACpE,OAAC,CACH,CAAC;IACH,CAAC,EACDq6B,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEjsD,EAAAA,WAAWA,CACTwG,OAAgB,EAChBkwC,OAAiB,EACjB3qB,MAA4B,EAC5B;IACAA,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAANA,MAAM,GAANA,MAAM,GAAK,EAAE;AAEb,IAAA,IAAI2F,UAAU,GAAG3F,MAAM,CAAC2F,UAAU;IAClC,IAAI,CAACA,UAAU,EAAE;MACf3F,MAAM,CAACoH,IAAI,GAAG,IAAI;AAClBzB,MAAAA,UAAU,GAAG,CAACxwB,IAAO,EAAEA,MAAS,EAAEA,MAAS,EAAEA,OAAU,CAAC;AAC1D,IAAA;AAEA,IAAA,KAAK,CAACsF,OAAO,EAAEkwC,OAAO,EAAE3qB,MAAM,CAAC;IAC/B,IAAI,CAACC,SAAS,GAAG,MAAM5c,UAAa,CAAC2c,MAAM,CAAC;AAE5C,IAAA,IAAI,CAAC3c,QAAW,CAACsnC,OAAO,CAAC,EAAE;AACzB,MAAA;AACF,IAAA;AAEA,IAAA,MAAMwV,OAAO,GAAGzU,aAAa,CAACvrB,KAAK,EAAE;AACrC,IAAA,MAAM+a,UAAU,GAAGlb,MAAM,CAACkb,UAAU;AACpC,IAAA,MAAM0C,SAAS,GAAG5d,MAAM,CAAC4d,SAAS;IAElC,MAAMo5B,kBAAkB,GAAGrxC,UAAU,GACjCD,uBAAuB,CAACC,UAAU,CAAC,GACnC,EAAE;AAENw6B,IAAAA,OAAO,CAAC3R,QAAQ,CAAC,IAAI,CAACsP,GAAG,EAAE;MACzBn4B,UAAU;MACVuV,UAAU;AACV0C,MAAAA;AACF,KAAC,CAAC;AAEF,IAAA,IAAIv6B,QAAW,CAAC2zD,kBAAkB,CAAC,EAAE;AACnC7W,MAAAA,OAAO,CAAC3R,QAAQ,CAAC,IAAI,CAACkL,OAAO,EAAE;AAC7B/zB,QAAAA,UAAU,EAAEqxC,kBAAkB;QAC9B97B,UAAU;AACV0C,QAAAA;AACF,OAAC,CAAC;AACJ,IAAA;AACF,EAAA;AACF;;AAEA;AACA;AACA;AACA;;AA6BA;;AAEA,MAAMsiB,oBAEL,GAAIzlD,OAAO,IAAK;EACf,OAAO;AACLygC,IAAAA,UAAU,EAAEA,CAACt6B,GAAG,EAAEjF,KAAK,KAAA;AAAA,MAAA,IAAA6K,IAAA;MAAA,OAAA,CAAAA,IAAA,GACpBnD,eAAkB,CAAC1H,KAAK,CAAC,GACtBygD,uBAAuB,CAACzgD,KAAK,EAAElB,OAAO,CAAC,GACvC,IAAI,cAAA+L,IAAA,KAAA,MAAA,GAAAA,IAAA,GAAK1O,SAAS;AAAA,IAAA,CAAA;AACxB8lC,IAAAA,SAAS,EAAE/wB;GACZ;AACH,CAAC;;ACrOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAsoqD,WAAW,SAASja,OAAO,CAAC;EAGvC,OAAOxE,QAAQA,GAAG;IAChByE,eAAe,CACb,MAAM,EACN,CAACxiD,OAAO,EAAEyP,IAAI,EAAEygC,OAAO,EAAE3qB,MAAM,KAAK;AAClC,MAAA,OAAO,IAAIi3C,WAAW,CACpBx8D,OAAO,EACPkwC,OAAO,EACPtnC,MAAS,CAAC2c,MAAM,EAAE;AAChBowB,QAAAA,KAAK,EAAE/jC,eAAe,CAAC,OAAO,EAAEnC,IAAI,EAAE8lC,WAAW;AACnD,OAAU,CACZ,CAAC;KACF,EACDkQ,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEjsD,EAAAA,WAAWA,CAACwG,OAAgB,EAAEkwC,OAAiB,EAAE3qB,MAA0B,EAAE;IAAA,IAAAqzB,kBAAA,EAAA6jB,cAAA;AAC3E,IAAA,KAAK,CAACz8D,OAAO,EAAEkwC,OAAO,EAAE3qB,MAAM,CAAC;IAQ/B,IAAI,CAACC,SAAS,GAAG,MAAM5c,UAAa,CAAC2c,MAAM,CAAC;AAE5C,IAAA,IAAI,CAAC3c,QAAW,CAACsnC,OAAO,CAAC,EAAE;AACzB,MAAA;AACF,IAAA;AAEA,IAAA,MAAMwV,OAAO,GAAGjP,WAAW,CAAC/wB,KAAK,CAAC;AAChC9rB,MAAAA,IAAI,EAAE2rB,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE3rB,IAAI;MAClBi0C,UAAU,EAAEtoB,MAAM,KAAA,IAAA,IAANA,MAAM,gBAAAqzB,kBAAA,GAANrzB,MAAM,CAAEsoB,UAAU,cAAA+K,kBAAA,KAAA,MAAA,GAAA,MAAA,GAAlBA,kBAAA,CAAoBz+C,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;AAClDgpC,MAAAA,SAAS,EAAE5d,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE4d;AACrB,KAAC,CAAC;AAEF,IAAA,MAAM/kC,MAAM,GAAA,CAAAq+D,cAAA,GAAGl3C,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEnnB,MAAM,MAAA,IAAA,IAAAq+D,cAAA,KAAA,MAAA,GAAAA,cAAA,GAAIz8D,OAAO;AACxC,IAAA,MAAM21C,KAAK,GAAG,CAAApwB,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEowB,KAAK,KAAIj7C,IAAO;AACtC,IAAA,MAAMgiE,aAAa,GAAGhnB,gBAAgB,CAACC,KAAK,CAAC;IAE7C,MAAMkmB,YAAY,GAAIz9D,MAAkB,IAAK;AAC3C,MAAA,IAAI,CAACwK,QAAW,CAAC8zD,aAAa,CAAC,EAAE;AAE/B;QACA,IAAI,CAACrZ,GAAG,EAAE;AACZ,MAAA,CAAC,MAAM;QAELqC,OAAO,CAAChN,MAAM,CAACt6C,MAAM,EAAE,IAAI,CAACilD,GAAG,EAAE;AAAE1N,UAAAA;AAAM,SAAC,CAAC;QAC3C+P,OAAO,CAAChN,MAAM,CAACt6C,MAAM,EAAE,IAAI,CAAC6gD,OAAO,EAAE;AAAEtJ,UAAAA,KAAK,EAAE+mB;AAAc,SAAC,CAAC;AAChE,MAAA;KACD;;AAED;IACA,IAAIC,WAAW,GAAG,KAAK;AACvB,IAAA,KAAK,MAAM7lC,MAAM,IAAIoZ,OAAO,EAAE;AAC5B,MAAA,IACEtnC,YAAe,CAACkuB,MAAM,EAAEwnB,OAAO,CAAC,IAChC11C,YAAe,CAACkuB,MAAM,EAAEmpB,WAAW,CAAC,EACpC;AACA0c,QAAAA,WAAW,GAAG,IAAI;AAClB,QAAA;AACF,MAAA;AACF,IAAA;AAEA,IAAA,IAAIA,WAAW,EAAE;AACfC,MAAAA,mBAAmB,CAAC58D,OAAO,CAAC,CAACmY,IAAI,CAAC0jD,YAAY,CAAC;AACjD,IAAA,CAAC,MAAM;MACLA,YAAY,CAACz9D,MAAM,CAAC;AACtB,IAAA;AACF,EAAA;AACF;;AAEA;AACA;AACA;AACA;;AAmDA;;AAEA,MAAMqnD,oBAEL,GAAIzlD,OAAO,IAAK;EACf,OAAO;AACL5B,IAAAA,MAAM,EAAEA,CAAC+H,GAAG,EAAEjF,KAAK,KAAA;AAAA,MAAA,IAAA6K,IAAA;AAAA,MAAA,OACjBnD,eAAkB,CAAC1H,KAAK,CAAC,IAAIm0C,mBAAmB,CAACn0C,KAAK,CAAC,GACnDA,KAAK,GAAA,CAAA6K,IAAA,GACHnD,eAAkB,CAAC1H,KAAK,CAAC,GACvBygD,uBAAuB,CAACzgD,KAAK,EAAElB,OAAO,CAAC,GACvC,IAAI,MAAA,IAAA,IAAA+L,IAAA,KAAA,MAAA,GAAAA,IAAA,GAAK1O,SAAU;AAAA,IAAA,CAAA;AAC7BzD,IAAAA,IAAI,EAAEA,CAACuM,GAAG,EAAEjF,KAAK,KAAA;AAAA,MAAA,IAAA27D,KAAA;MAAA,OAAA,CAAAA,KAAA,GACdj0D,eAAkB,CAAC1H,KAAK,CAAC,GACtBygD,uBAAuB,CAACzgD,KAAK,EAAElB,OAAO,CAAC,GACvC,IAAI,cAAA68D,KAAA,KAAA,MAAA,GAAAA,KAAA,GAAKx/D,SAAS;AAAA,IAAA,CAAA;AACxBwwC,IAAAA,UAAU,EAAEt7B,cAAc;IAC1B4wB,SAAS,EAAEA,CAACh9B,GAAG,EAAEjF,KAAK,KAAK+Q,eAAe,CAAC9L,GAAG,EAAEjF,KAAK;GACtD;AACH,CAAC;AAED,MAAM07D,mBAAmB,GAAG,MAAO58D,OAAgB,IAAuB;AACxE,EAAA,IAAI5B,MAAsB,GAAG,MAAMojB,OAAO,CAACxhB,OAAO,CAAC;EACnD,IAAI,CAAC5B,MAAM,EAAE;AACX;AACA;AACA;AACA;;AAEA,IAAA,MAAM0+D,IAAI,GAAG98D,OAAO,CAAC+8D,sBAAsB;IAC3C,MAAMC,SAAS,GAAGp0D,UAAa,CAACk0D,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,IACEA,IAAI,IACJtjD,QAAQ,CAACsjD,IAAI,EAAEpiE,gBAAiB,CAAC,IACjCsiE,SAAS,IACTxjD,QAAQ,CAACwjD,SAAS,EAAEtiE,YAAe,CAAC,EACpC;AACA;AACA0D,MAAAA,MAAM,GAAG4+D,SAAS;AACpB,IAAA,CAAC,MAAM;MACL5+D,MAAM,GAAG,CAAC,MAAMgkB,gBAAgB,CAACpiB,OAAO,CAAC,EAAEmiB,MAAM;AACnD,IAAA;AACF,EAAA;AAEA,EAAA,OAAO/jB,MAAM;AACf,CAAC;;AC9UD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;AAUA;AACO,MAAM8xC,OAAO,GAAGzhC,QAAQ,CAACkhC,QAAQ,EAAE;AACxC8gB,EAAAA,IAAI,EAAE,IAAI;AACVuK,EAAAA,QAAQ,EAAE,IAAI;AACdC,EAAAA,QAAQ,EAAE,IAAI;AACdC,EAAAA,QAAQ,EAAE,IAAI;AACdC,EAAAA,UAAU,EAAE,IAAI;AAChBC,EAAAA,WAAW,EAAE;AACf,CAAU,CAAC;AAIXlrB,OAAO,CAAC4N,QAAQ,CAACC,QAAQ,EAAE;AAC3B7N,OAAO,CAACmO,WAAW,CAACN,QAAQ,EAAE;AAC9B7N,OAAO,CAAC+P,WAAW,CAAClC,QAAQ,EAAE;AAC9B7N,OAAO,CAACmQ,YAAY,CAACtC,QAAQ,EAAE;AAC/B7N,OAAO,CAACoO,OAAO,CAACP,QAAQ,EAAE;AAC1B7N,OAAO,CAACsQ,OAAO,CAACzC,QAAQ,EAAE;AAC1B7N,OAAO,CAACyQ,SAAS,CAAC5C,QAAQ,EAAE;AAC5B7N,OAAO,CAACoV,QAAQ,CAACvH,QAAQ,EAAE;AAC3B7N,OAAO,CAAC4V,YAAY,CAAC/H,QAAQ,EAAE;AAC/B7N,OAAO,CAACkW,IAAI,CAACrI,QAAQ,EAAE;AACvB7N,OAAO,CAACqW,IAAI,CAACxI,QAAQ,EAAE;AACvB7N,OAAO,CAACuU,MAAM,CAAC1G,QAAQ,EAAE;AACzB7N,OAAO,CAAC4U,OAAO,CAAC/G,QAAQ,EAAE;AAC1B7N,OAAO,CAAC6U,GAAG,CAAChH,QAAQ,EAAE;AAEtBqH,aAAsB,CAACrH,QAAQ,EAAE;AACjCqH,WAAoB,CAACrH,QAAQ,EAAE;AAC/BqH,YAAqB,CAACrH,QAAQ,EAAE;AAChCqH,YAAqB,CAACrH,QAAQ,EAAE;AAChCqH,YAAqB,CAACrH,QAAQ,EAAE;AAChCqH,YAAqB,CAACrH,QAAQ,EAAE;AAChCqH,aAAsB,CAACrH,QAAQ,EAAE;AACjCqH,OAAgB,CAACrH,QAAQ,EAAE;AAC3BqH,WAAoB,CAACrH,QAAQ,EAAE;;ACjD/B;AACA;AACA;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMkf,QAAQ,SAAShiB,MAAM,CAAC;AACnC,EAAA,OAAO5nC,GAAGA,CAACrT,OAAgB,EAAEe,EAAU,EAAmB;IACxD,MAAMglB,QAAQ,GAAG,KAAK,CAAC1S,GAAG,CAACrT,OAAO,EAAEe,EAAE,CAAC;IACvC,IAAI6H,YAAe,CAACmd,QAAQ,EAAEk3C,QAAQ,CAAC,EAAE;AACvC,MAAA,OAAOl3C,QAAQ;AACjB,IAAA;AACA,IAAA,OAAO,IAAI;AACb,EAAA;EAEA,OAAOg4B,QAAQA,GAAG;IAChB,KAAK,MAAM,CAACrkD,IAAI,EAAEuM,MAAM,CAAC,IAAI,CAC3B,CAACi3D,gBAAgB,EAAE,KAAK,CAAC,EACzB,CAACC,kBAAkB,EAAE,IAAI,CAAC,CAC3B,EAAW;AACVhhB,MAAAA,cAAc,CACZziD,IAAI,EACJ,CAACsG,OAAO,EAAEulB,MAAM,KAAK;AACnB,QAAA,OAAO,IAAI03C,QAAQ,CAACj9D,OAAO,EAAEulB,MAAM,CAAC;AACtC,MAAA,CAAC,EACDkgC,oBAAkB,CAACx/C,MAAM,CAAC,EAC1B;AAAE42C,QAAAA,gBAAgB,EAAE;AAAK,OAC3B,CAAC;AACH,IAAA;AACF,EAAA;AAEArjD,EAAAA,WAAWA,CAACwG,OAAgB,EAAEulB,MAAuB,EAAE;AACrD,IAAA,KAAK,CAACvlB,OAAO,EAAEulB,MAAM,CAAC;IAEtB,MAAM7kB,QAAQ,GAAG6kB,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE7kB,QAAQ;AAEjC,IAAA,MAAMglD,OAAO,GAAGpgC,UAAU,CAACpS,MAAM,CAAC;AAChCtZ,MAAAA,IAAI,EAAEoG,OAAO;AACb6jB,MAAAA,OAAO,EAAEnjB,QAAQ,GAAG,IAAI,GAAG;AAC7B,KAAC,CAAC;;AAEF;AACA;IACA,MAAM08D,cAAiC,GAAG18D,QAAQ,GAC9C;AACEA,MAAAA,QAAQ,EAAEA,QAAQ;MAClBypB,UAAU,EAAE,CAACzvB,OAAU,EAAEA,WAAc,CAAC;MACxC,CAACA,cAAiB,GAAG;AACvB,KAAC,GACD;AACEyvB,MAAAA,UAAU,EAAE,CAACzvB,WAAc,CAAC;MAC5B,CAACA,cAAiB,GAAG;KACtB;AAEL,IAAA,MAAM2iE,cAAc,GAAG93C,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,IAANA,MAAM,CAAEtf,MAAM,GAAG2a,oBAAoB,GAAGrG,WAAW;IAE1E,MAAM+iD,YAAY,GAAGA,MAAM;AACzB,MAAA,IAAI,IAAI,CAACjiB,UAAU,EAAE,EAAE;AACrB,QAAA;AACF,MAAA;AAEA,MAAA,MAAMkiB,cAAc,GAAG78D,QAAQ,GAC3BkI,gBAAmB,CAAC5I,OAAO,EAAEU,QAAQ,CAAC,GACtC,CAACV,OAAO,CAAC;AAEb,MAAA,KAAK,MAAMw9D,IAAI,IAAID,cAAc,EAAE;AAAA,QAAA,IAAA5a,aAAA;AACjC0a,QAAAA,cAAc,CAACG,IAAI,EAAA,CAAA7a,aAAA,GAAEp9B,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE3P,KAAK,MAAA,IAAA,IAAA+sC,aAAA,cAAAA,aAAA,GAAI8a,aAAa,CAAC;AACtD,MAAA;IACF,CAAC;IAED,MAAMC,UAAU,GAAGA,MAAMhY,OAAO,CAAC/7B,UAAU,CAAC2zC,YAAY,EAAEF,cAAc,CAAC;IAEzE,MAAMO,aAAa,GAAGA,MAAMjY,OAAO,CAAC97B,WAAW,CAAC0zC,YAAY,CAAC;;AAE7D;;AAEA;AACAj5C,IAAAA,gBAAgB,EAAE,CAAClM,IAAI,CAAC,MAAM;AAC5B;AACA,MAAA,IAAI,IAAI,CAACmjC,WAAW,EAAE,EAAE;AACtB,QAAA;AACF,MAAA;AAEAgiB,MAAAA,YAAY,EAAE;AACdI,MAAAA,UAAU,EAAE;AACd,IAAA,CAAC,CAAC;AAEF,IAAA,IAAI,CAAC5hB,SAAS,CAAC6hB,aAAa,CAAC;IAC7B,IAAI,CAAC5hB,QAAQ,CAAC,MAAM;AAClBuhB,MAAAA,YAAY,EAAE;AACdI,MAAAA,UAAU,EAAE;AACd,IAAA,CAAC,CAAC;AACJ,EAAA;AACF;;AAEA;AACA;AACA;;AAwCA;;AAEA,MAAMR,gBAAgB,GAAG,WAAW;AACpC,MAAMC,kBAAkB,GAAG,aAAa;AAExC,MAAMM,aAAa,GAAG,IAAI;AAE1B,MAAMhY,oBAAkB,GACtBmY,UAAmB,IAC6B;EAChD,OAAO;AACL78D,IAAAA,EAAE,EAAEwR,cAAc;IAClBtM,MAAM,EAAEA,MAAM23D,UAAU;AACxBl9D,IAAAA,QAAQ,EAAE6R,cAAc;AACxBqD,IAAAA,KAAK,EAAExD;GACR;AACH,CAAC;;AC9OD;AACA;AACA;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMyrD,UAAU,SAAS5iB,MAAM,CAAC;AACrC;AACF;AACA;AACA;EACE,OAAO5nC,GAAGA,CAACrT,OAAiB,EAAqB;IAC/C,IAAI,CAACA,OAAO,EAAE;AACZ,MAAA,OAAO89D,YAAU;AACnB,IAAA;IAEA,MAAM/3C,QAAQ,GAAG,KAAK,CAAC1S,GAAG,CAACrT,OAAO,EAAE4wD,UAAQ,CAAC;IAC7C,IAAIhoD,YAAe,CAACmd,QAAQ,EAAE83C,UAAU,CAAC,EAAE;AACzC,MAAA,OAAO93C,QAAQ;AACjB,IAAA;AACA,IAAA,OAAO,IAAI;AACb,EAAA;EAEA,OAAOg4B,QAAQA,GAAG;AAChB5B,IAAAA,cAAc,CACZ0U,aAAW,EACX,CAAC7wD,OAAO,EAAEulB,MAAM,KAAK;AACnB,MAAA,IAAI,CAACs4C,UAAU,CAACxqD,GAAG,CAACrT,OAAO,CAAC,EAAE;AAC5B,QAAA,OAAO,IAAI69D,UAAU,CAAC79D,OAAO,EAAEulB,MAAM,CAAC;AACxC,MAAA;AACA,MAAA,OAAO,IAAI;IACb,CAAC,EACD82B,iBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;EACE,OAAO0hB,UAAUA,CAACx4C,MAAyB,EAAE;AAC3C,IAAA,MAAMy4C,MAAM,GAAGp1D,aAAgB,CAAC,KAAK,CAAC;IACtC,MAAM20C,MAAM,GAAG,IAAIsgB,UAAU,CAACG,MAAM,EAAEz4C,MAAM,CAAC;IAC7Cg4B,MAAM,CAACtB,SAAS,CAAC,MAAM;MACrB,IAAI6hB,YAAU,KAAKvgB,MAAM,EAAE;AACzBugB,QAAAA,YAAU,GAAG,IAAI;AACnB,MAAA;MACA,OAAOn9C,WAAW,CAACq9C,MAAM,CAAC;AAC5B,IAAA,CAAC,CAAC;IAEF16C,cAAc,CAAC1a,OAAU,CAAC,CAACuP,IAAI,CAAEpc,IAAI,IAAK;AACxC,MAAA,IAAI,CAACwhD,MAAM,CAACjC,WAAW,EAAE,EAAE;QACzB36B,WAAW,CAACq9C,MAAM,EAAE;AAAE1+C,UAAAA,EAAE,EAAEvjB;AAAK,SAAC,CAAC;AACnC,MAAA;AACF,IAAA,CAAC,CAAC;AAEF+hE,IAAAA,YAAU,GAAGvgB,MAAM;AACnB,IAAA,OAAOA,MAAM;AACf,EAAA;AAEA/jD,EAAAA,WAAWA,CAACwG,OAAgB,EAAEulB,MAAyB,EAAE;AAAA,IAAA,IAAA04C,eAAA;AACvD,IAAA,MAAM1iB,cAAc,GAAA,CAAA0iB,eAAA,GAAGJ,UAAU,CAACxqD,GAAG,CAACrT,OAAO,CAAC,cAAAi+D,eAAA,KAAA,MAAA,GAAA,MAAA,GAAvBA,eAAA,CAAyB7iB,OAAO,EAAE;IACzD,KAAK,CAACp7C,OAAO,EAAE;AAAEe,MAAAA,EAAE,EAAE6vD;AAAS,KAAC,CAAC;IAEhC,CAACrV,cAAc,IAAI3yC,cAAiB,EAAE,EAAEuP,IAAI,CAAC,MAAM;AAAA,MAAA,IAAA+lD,kBAAA;AACjD,MAAA,IAAI,IAAI,CAAC5iB,WAAW,EAAE,EAAE;AACtB,QAAA;AACF,MAAA;AAEAtgC,MAAAA,UAAU,CAAChb,OAAO,EAAEi1D,aAAW,CAAC;AAEhC,MAAA,MAAMkJ,OAAO,GAAGv1D,aAAgB,CAAC,KAAK,CAAC;AACvCoS,MAAAA,UAAU,CAACmjD,OAAO,EAAEC,cAAc,CAAC;MAEnCz9C,WAAW,CAACw9C,OAAO,EAAE;AAAE7+C,QAAAA,EAAE,EAAEtf;AAAQ,OAAC,CAAC;MACrCsjB,cAAc,CAAC1a,OAAU,CAAC,CAACuP,IAAI,CAACsF,WAAW,CAAC,CAAC;;AAE7C,MAAA,IAAA,CAAAygD,kBAAA,GAAI34C,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEq4C,UAAU,cAAAM,kBAAA,KAAA,MAAA,GAAAA,kBAAA,GAAI,IAAI,EAAE;AAC9B75C,QAAAA,gBAAgB,EAAE,CACflM,IAAI,CAAC,MAAMyI,oBAAoB,CAAC5gB,OAAO,CAAC,CAAC,CACzCmY,IAAI,CAAC,IAAI,CAACijC,OAAO,CAAC;AACvB,MAAA;MAEA,IAAI,CAACU,SAAS,CAAC,MAAM;QACnBzhC,gBAAgB,CAACra,OAAO,CAAC;QACzB,IAAI,CAAC4I,gBAAmB,CAAC,CAAA,CAAA,EAAIqsD,aAAW,CAAA,CAAE,CAAC,EAAE;AAC3Ct3C,UAAAA,WAAW,EAAE;AACf,QAAA;AACF,MAAA,CAAC,CAAC;MAEF,IAAI,CAACo+B,QAAQ,CAAC,YAAY;QACxB,MAAM5hC,cAAc,CAACna,OAAO,CAAC;AAC/B,MAAA,CAAC,CAAC;MAEF,IAAI,CAACi8C,SAAS,CAAC,YAAY;AACzBt7B,QAAAA,WAAW,CAACw9C,OAAO,CAAC,CAAC;AACrB,QAAA,MAAMljD,aAAa,CAACjb,OAAO,EAAEi1D,aAAW,CAAC;AACzC,QAAA,MAAM96C,cAAc,CAACna,OAAO,CAAC,CAAC;AAChC,MAAA,CAAC,CAAC;AACJ,IAAA,CAAC,CAAC;AACJ,EAAA;AACF;;AAEA;AACA;AACA;;AAWA;;AAEA,MAAM6wD,aAAW,GAAG,aAAa;AACjC,MAAMmE,eAAa,GAAGpsD,UAAa,CAACioD,aAAW,CAAC;AAChD,MAAMoE,aAAW,GAAG,CAAA,EAAGD,eAAa,CAAA,MAAA,CAAQ;AAC5C,MAAMoJ,cAAc,GAAGx1D,UAAa,CAAC,SAAS,CAAC;AAC/C;AACA;AACA;AACA;AACA,MAAMgoD,UAAQ,GAAGoE,eAAa;AAC9B,IAAI8I,YAA6B,GAAG,IAAI;AAExC,MAAMzhB,iBAA8D,GAAG;AACrEuhB,EAAAA,UAAU,EAAEvrD;AACd,CAAC;;ACtMD;AACA;AACA;;;AAwWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMgsD,UAAU,SAASpjB,MAAM,CAAC;AACrC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;AACA;EACE,OAAO5nC,GAAGA,CAACirD,gBAAyB,EAAqB;IACvD,MAAMv4C,QAAQ,GAAG,KAAK,CAAC1S,GAAG,CAACirD,gBAAgB,EAAE1N,UAAQ,CAAC;IACtD,IAAIhoD,YAAe,CAACmd,QAAQ,EAAEs4C,UAAU,CAAC,EAAE;AACzC,MAAA,OAAOt4C,QAAQ;AACjB,IAAA;AACA,IAAA,OAAO,IAAI;AACb,EAAA;EAEA,OAAOg4B,QAAQA,GAAG;AAChB5B,IAAAA,cAAc,CACZ0U,aAAW,EACX,CAAC7wD,OAAO,EAAEulB,MAAM,KAAK;AACnB,MAAA,IAAI3c,aAAgB,CAAC5I,OAAO,CAAC,EAAE;AAC7B,QAAA,IAAI,CAACq+D,UAAU,CAAChrD,GAAG,CAACrT,OAAO,CAAC,EAAE;AAC5B,UAAA,OAAO,IAAIq+D,UAAU,CAACr+D,OAAO,EAAEulB,MAAM,CAAC;AACxC,QAAA;AACF,MAAA,CAAC,MAAM;AACL7N,QAAAA,QAAQ,CACN9O,UAAa,CACX,qDACF,CACF,CAAC;AACH,MAAA;AACA,MAAA,OAAO,IAAI;KACZ,EACDyzC,iBACF,CAAC;AACH,EAAA;AAEA7iD,EAAAA,WAAWA,CAAC8kE,gBAA6B,EAAE/4C,MAAyB,EAAE;AAAA,IAAA,IAAAg5C,eAAA;AACpE,IAAA,MAAMhjB,cAAc,GAAA,CAAAgjB,eAAA,GAAGF,UAAU,CAAChrD,GAAG,CAACirD,gBAAgB,CAAC,cAAAC,eAAA,KAAA,MAAA,GAAA,MAAA,GAAhCA,eAAA,CAAkCnjB,OAAO,EAAE;IAClE,KAAK,CAACkjB,gBAAgB,EAAE;AAAEv9D,MAAAA,EAAE,EAAE6vD;AAAS,KAAC,CAAC;AAEzC,IAAA,MAAM4N,KAAK,GAAGC,YAAY,CAACH,gBAAgB,EAAE/4C,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEi5C,KAAK,CAAC;IAE3D,IAAI51D,MAAS,CAAC41D,KAAK,CAAC,GAAG,CAAC,EAAE;AACxB,MAAA,MAAM51D,UAAa,CAAC,uCAAuC,CAAC;AAC9D,IAAA;IAEA,KAAK,MAAM0O,IAAI,IAAIknD,KAAK,CAACv7D,IAAI,EAAE,EAAE;MAC/B,IAAI2F,QAAW,CAAC0O,IAAI,CAAC,KAAKgnD,gBAAgB,EAAE;AAC1C,QAAA,MAAM11D,UAAa,CACjB,mDACF,CAAC;AACH,MAAA;AACF,IAAA;IAEA81D,WAAW,CAACJ,gBAAgB,EAAE/4C,MAAM,CAAC,CAACpN,IAAI,CAAEwmD,UAAU,IAAK;MACzD,CAACpjB,cAAc,IAAI3yC,cAAiB,EAAE,EAAEuP,IAAI,CAAC,MAAM;AACjD,QAAA,IAAI,IAAI,CAACmjC,WAAW,EAAE,EAAE;AACtB,UAAA;AACF,QAAA;QAEA9Y,MAAI,CAAC,IAAI,EAAE87B,gBAAgB,EAAEE,KAAK,EAAEG,UAAU,CAAC;AACjD,MAAA,CAAC,CAAC;AACJ,IAAA,CAAC,CAAC;AAEF,IAAA,IAAI,CAACC,QAAQ,GAAG,MACdjjD,OAAO,CAAC2iD,gBAAgB,EAAE5jE,kBAAqB,EAAEA,UAAa,CAAC;IAEjE,IAAI,CAACmkE,KAAK,GAAG,MAAM5iD,OAAO,CAACqiD,gBAAgB,EAAE5jE,kBAAqB,CAAC;IAEnE,IAAI,CAACokE,QAAQ,GAAG,MAAM,CAAC,GAAGN,KAAK,CAACv7D,IAAI,EAAE,CAAC;AACvC,IAAA,IAAI,CAAC87D,cAAc,GAAG,MAAMn2D,MAAS,CAAC,CAAC,GAAG41D,KAAK,CAAC13D,OAAO,EAAE,CAAC,CAAC;AAC7D,EAAA;AACF;;AAEA;AACA;AACA;;AAuFA;;AA6BA,MAAM+pD,aAAW,GAAG,aAAa;AACjC,MAAMmE,eAAa,GAAGpsD,UAAa,CAACioD,aAAW,CAAC;AAChD,MAAMoE,aAAW,GAAG,CAAA,EAAGD,eAAa,CAAA,MAAA,CAAQ;;AAE5C;AACA;AACA;AACA,MAAMgK,aAAW,GAAG,CAAA,EAAGhK,eAAa,CAAA,MAAA,CAAQ;AAC5C,MAAMiK,yBAAuB,GAAG,CAAA,EAAGjK,eAAa,CAAA,KAAA,CAAO;AAEvD,MAAMkK,MAAM,GAAG,MAAM;AACrB,MAAMC,OAAO,GAAG,OAAO;;AAEvB;AACA;AACA,MAAMvO,UAAQ,GAAGoE,eAAa;;AAE9B;AACA;AACA,MAAMoK,kBAAkB,GAAG,GAAG;AAE9B,MAAM/iB,iBAA8D,GAAG;AACrEgjB,EAAAA,aAAa,EAAEjtD,cAAc;AAC7B+5B,EAAAA,eAAe,EAAE/5B,cAAc;AAC/B,EAAA,CAAC1X,iBAAoB,GAAG0X,cAAc;AACtCktD,EAAAA,MAAM,EAAEltD,cAAc;AACtBmtD,EAAAA,QAAQ,EAAEntD,cAAc;AACxBotD,EAAAA,SAAS,EAAEptD;AACb,CAAC;AAED,MAAMqtD,MAAM,GAAIz/D,OAAgB,IAC9Bwb,OAAO,CAACxb,OAAO,EAAEi/D,yBAAuB,CAAC,KAAKC,MAAM,IACnD1jD,OAAO,CAACxb,OAAO,EAAEi/D,yBAAuB,CAAC,KAAKE,OAAO,IACpDv2D,aAAgB,CAAC5I,OAAO,CAAC,IACzB4I,QAAW,CAAC5I,OAAO,CAAC0/D,SAAS,CAAC,IAAIN,kBAAmB;AAEzD,MAAMO,eAAe,GAAI3/D,OAAgB,IAAK;EAC5C,KAAK,MAAM4/D,GAAG,IAAI5/D,OAAO,CAACW,gBAAgB,CAAC,KAAK,CAAC,EAAE;AACjD;AACA;IACA,IACEi/D,GAAG,CAACC,YAAY,KAAK,CAAC,IACtBD,GAAG,CAAChmB,KAAK,KAAK,CAAC,IACfgmB,GAAG,CAACE,aAAa,KAAK,CAAC,IACvBF,GAAG,CAAC/lB,MAAM,KAAK,CAAC,EAChB;AACA,MAAA,OAAO,KAAK;AACd,IAAA;AACF,EAAA;AAEA,EAAA,OAAO,IAAI;AACb,CAAC;AAED,MAAM6kB,WAAW,GAAG,OAClBJ,gBAA6B,EAC7ByB,UAAwC,KACF;EAAA,IAAAC,kBAAA,EAAAC,oBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA;EACtC,MAAMC,SAAS,GAAG,MAAMjkD,oBAAoB,CAACiiD,gBAAgB,EAAE,YAAY,CAAC;AAC5E,EAAA,MAAMgB,MAAM,GAAGiB,WAAW,CACxB33D,UAAa,CAAC03D,SAAS,EAAE,KAAK,EAAE,EAAE,CAAC,EACnC33D,QAAQ,CAACiB,gBACX,CAAC;EAED,OAAO;AACL42D,IAAAA,OAAO,EAAE90D,eAAe,CAAA,CAAAs0D,kBAAA,GAACD,UAAU,aAAVA,UAAU,KAAA,MAAA,GAAA,MAAA,GAAVA,UAAU,CAAET,MAAM,MAAA,IAAA,IAAAU,kBAAA,cAAAA,kBAAA,GAAIV,MAAM,EAAE;AAAE76D,MAAAA,GAAG,EAAE;KAAG,EAAE,EAAE,CAAC;IACtEg8D,SAAS,EAAE/0D,eAAe,CAAA,CAAAu0D,oBAAA,GACxBF,UAAU,KAAA,IAAA,IAAVA,UAAU,KAAA,MAAA,GAAA,MAAA,GAAVA,UAAU,CAAER,QAAQ,MAAA,IAAA,IAAAU,oBAAA,KAAA,MAAA,GAAAA,oBAAA,GAAIt3D,QAAQ,CAACkB,kBAAkB,EACnD;AAAEpF,MAAAA,GAAG,EAAE,CAAC;AAAED,MAAAA,GAAG,EAAE;KAAK,EACpB,EACF,CAAC;IACDk8D,UAAU,EAAEh1D,eAAe,CAAA,CAAAw0D,qBAAA,GACzBH,UAAU,KAAA,IAAA,IAAVA,UAAU,KAAA,MAAA,GAAA,MAAA,GAAVA,UAAU,CAAEP,SAAS,MAAA,IAAA,IAAAU,qBAAA,KAAA,MAAA,GAAAA,qBAAA,GAAIv3D,QAAQ,CAACmB,mBAAmB,EACrD;AAAErF,MAAAA,GAAG,EAAE;KAAG,EACV,EACF,CAAC;AACDk8D,IAAAA,cAAc,GAAAR,qBAAA,GACZJ,UAAU,KAAA,IAAA,IAAVA,UAAU,KAAA,MAAA,GAAA,MAAA,GAAVA,UAAU,CAAEV,aAAa,cAAAc,qBAAA,KAAA,MAAA,GAAAA,qBAAA,GAAIx3D,QAAQ,CAACc,uBAAuB;AAC/D8hC,IAAAA,gBAAgB,GAAA60B,qBAAA,GACdL,UAAU,KAAA,IAAA,IAAVA,UAAU,KAAA,MAAA,GAAA,MAAA,GAAVA,UAAU,CAAE5zB,eAAe,cAAAi0B,qBAAA,KAAA,MAAA,GAAAA,qBAAA,GAAIz3D,QAAQ,CAACe,yBAAyB;AACnE6uB,IAAAA,eAAe,GAAA8nC,qBAAA,GACbN,UAAU,KAAA,IAAA,IAAVA,UAAU,KAAA,MAAA,GAAA,MAAA,GAAVA,UAAU,CAAExqD,cAAc,cAAA8qD,qBAAA,KAAA,MAAA,GAAAA,qBAAA,GAAI13D,QAAQ,CAACgB;GAC1C;AACH,CAAC;AAED,MAAM42D,WAAW,GAAGA,CAACtvD,QAAuB,EAAE5F,YAAoB,KAAa;EAC7E,MAAMu1D,GAAG,GAAG3vD,QAAQ,GAAGrI,UAAa,CAACqI,QAAQ,CAAC,GAAGy3B,GAAG;EACpD,OAAO9/B,KAAQ,CAACg4D,GAAG,CAAC,GAAGv1D,YAAY,GAAGu1D,GAAG;AAC3C,CAAC;AAED,MAAMC,SAAS,GAAIvC,gBAA6B,IAAK;AACnD,EAAA,MAAME,KAAK,GAAG,CACZ,GAAG51D,gBAAmB,CACpB01D,gBAAgB,EAChB9hB,wBAAwB,CAACyiB,yBAAuB,CAClD,CAAC,CACF;AAED,EAAA,IAAI,CAACr2D,QAAW,CAAC41D,KAAK,CAAC,EAAE;IACvBA,KAAK,CAACvuD,IAAI,CAAC,GAAG0I,yBAAyB,CAAC2lD,gBAAgB,CAAC,CAAC;AAC5D,EAAA;AAEA,EAAA,OAAOE,KAAK;AACd,CAAC;AAED,MAAMC,YAAY,GAAGA,CACnBH,gBAA6B,EAC7BwC,UAAkE,KAC/D;AACH,EAAA,MAAMC,OAAO,GAAGn4D,MAAS,EAA6B;AAEtDk4D,EAAAA,UAAU,GAAGA,UAAU,IAAID,SAAS,CAACvC,gBAAgB,CAAC;AAEtD,EAAA,MAAM0C,OAAO,GAAGA,CAAC1pD,IAAa,EAAE2pD,QAA2B,KAAK;IAC9DA,QAAQ,GAAGA,QAAQ,KAAKxB,MAAM,CAACnoD,IAAI,CAAC,GAAG4nD,MAAM,GAAGC,OAAO,CAAC;AACxD4B,IAAAA,OAAO,CAACjqD,GAAG,CAACQ,IAAI,EAAE2pD,QAAQ,CAAC;GAC5B;AAED,EAAA,IAAIr4D,OAAU,CAACk4D,UAAU,CAAC,EAAE;AAC1B,IAAA,KAAK,MAAMxpD,IAAI,IAAIwpD,UAAU,EAAE;MAC7BE,OAAO,CAAC1pD,IAAI,CAAC;AACf,IAAA;GACD,MAAM,IAAI1O,YAAe,CAACk4D,UAAU,EAAE/5D,GAAG,CAAC,EAAE;AAC3C,IAAA,KAAK,MAAM,CAACuQ,IAAI,EAAE2pD,QAAQ,CAAC,IAAIH,UAAU,CAACh6D,OAAO,EAAE,EAAE;AACnDk6D,MAAAA,OAAO,CAAC1pD,IAAI,EAAE2pD,QAAQ,CAAC;AACzB,IAAA;AACF,EAAA;AAEA,EAAA,OAAOF,OAAO;AAChB,CAAC;AAED,MAAMv+B,MAAI,GAAGA,CACX+a,MAAkB,EAClB+gB,gBAA6B,EAC7BE,KAAqC,EACrCj5C,MAAgC,KAC7B;AAOH,EAAA,MAAM85C,aAAa,GAAG95C,MAAM,CAACo7C,cAAc;AAC3C,EAAA,MAAMprD,cAAc,GAAGgQ,MAAM,CAACgT,eAAe;AAE7C,EAAA,MAAMoa,WAAW,GAAGtI,WAAW,CAAC3kB,KAAK,CAAC;AACpC,IAAA,CAAChrB,iBAAoB,GAAG6a,cAAc;IACtC42B,eAAe,EAAE5mB,MAAM,CAACgmB;AAC1B,GAAC,CAAC;AAEF,EAAA,MAAM21B,QAAQ,GAAGt4D,MAAS,EAA2B;EAErD,IAAIu4D,WAAW,GAAG,CAAC;EACnB,IAAIC,WAAW,GAAG,IAAI;EACtB,IAAIC,iBAAiB,GAAG,CAAC;EACzB,IAAIC,iBAAiB,GAAG,KAAK;EAC7B,IAAIC,cAAoD,GAAG,IAAI;;AAE/D;;AAEA,EAAA,MAAM13B,aAAa,GAAGA,CAAC7pC,OAAgB,EAAE2qC,QAAkB,KAAK;AAC9D;AACA;AACA;AACA;AACA;IACA,IAAI,CAAC22B,iBAAiB,EAAE;AAEtBA,MAAAA,iBAAiB,GAAG,IAAI;MAExB14D,QAAW,CAAC,MAAM;AAChB04D,QAAAA,iBAAiB,GAAG,KAAK;QAEzB,IAAIH,WAAW,GAAG,CAAC,EAAE;AAEnBA,UAAAA,WAAW,GAAG,CAAC;AACf,UAAA;AACF,QAAA;AAEAA,QAAAA,WAAW,EAAE;AACb,QAAA,IAAII,cAAc,EAAE;AAClB34D,UAAAA,UAAa,CAAC24D,cAAc,CAAC;AAC/B,QAAA;QAEA,MAAMC,YAAY,GAAGC,qBAAqB,CACxCnD,gBAAgB,EAChB4C,QAAQ,EACRE,WAEF,CAAC;AAED,QAAA,MAAMvnB,MAAM,GAAG2nB,YAAY,GACvBE,gBAAgB,CAACF,YAAY,EAAEj8C,MAAc,CAAC,GAC9C,IAAI;AAER,QAAA,IAAIs0B,MAAM,IAAIjxC,GAAM,CAACy4D,iBAAiB,GAAGxnB,MAAM,CAAC,GAAGwlB,aAAa,EAAE;AAChE;AACA;AACAgC,UAAAA,iBAAiB,GAAGxnB,MAAM;AAC1BunB,UAAAA,WAAW,GAAG,KAAK;AACnBO,UAAAA,SAAS,CAAC9nB,MAAM,CAAC,CAAC;;AAElB;AACA;AACA;AACA0nB,UAAAA,cAAc,GAAG34D,QAAW,CAAC,MAAM;AACjCu4D,YAAAA,WAAW,GAAG,CAAC;AACjB,UAAA,CAAC,EAAE5rD,cAAc,GAAG,EAAE,CAAC;AACzB,QAAA,CAAC,MAAM;AACL;AACA4rD,UAAAA,WAAW,GAAG,CAAC;AACjB,QAAA;OACD,EAAE,CAAC,CAAC;AACP,IAAA;;AAEA;AACA,IAAA,MAAMna,UAAU,GAAGka,QAAQ,CAAC7tD,GAAG,CAACrT,OAAO,CAAC;IACxC,IAAI,CAACgnD,UAAU,EAAE;AACftvC,MAAAA,QAAQ,CAAC9O,QAAW,CAAC,0CAA0C,CAAC,CAAC;AACjE,MAAA;AACF,IAAA;AAEAo+C,IAAAA,UAAU,CAAC4a,MAAM,GACfj3B,QAAQ,CAACE,MAAM,CAACnwC,OAAU,CAAC,IAAIiwC,QAAQ,CAACG,OAAO,CAACpwC,OAAU,CAAC;AAC7DssD,IAAAA,UAAU,CAAC6a,OAAO,GAChBl3B,QAAQ,CAACE,MAAM,CAACnwC,QAAW,CAAC,IAAIiwC,QAAQ,CAACG,OAAO,CAACpwC,QAAW,CAAC;GAGhE;;AAED;;EAEA,MAAMonE,UAAU,GAAGA,MAAM;AACvBV,IAAAA,WAAW,GAAG,IAAI;IAElB,KAAK,MAAMphE,OAAO,IAAIkhE,QAAQ,CAACj+D,IAAI,EAAE,EAAE;AACrC0vC,MAAAA,WAAW,CAAC1G,QAAQ,CAACpC,aAAa,EAAE;AAAEzrC,QAAAA,MAAM,EAAE4B;AAAQ,OAAC,CAAC;AAC1D,IAAA;GACD;;AAED;;EAEA,MAAM+hE,YAAY,GAAGA,MAAM;IACzB,KAAK,MAAM/hE,OAAO,IAAIkhE,QAAQ,CAACj+D,IAAI,EAAE,EAAE;AACrC0vC,MAAAA,WAAW,CAACzG,SAAS,CAACrC,aAAa,EAAE7pC,OAAO,CAAC;AAC/C,IAAA;GACD;;AAED;;EAEA,MAAM2hE,SAAS,GAAI9nB,MAAc,IAAK;AACpC,IAAA,KAAK,MAAM,CAAC75C,OAAO,EAAEgnD,UAAU,CAAC,IAAIka,QAAQ,CAACp6D,OAAO,EAAE,EAAE;MACtD,IAAI8B,QAAW,CAAC5I,OAAO,CAAC,KAAKs+D,gBAAgB,EAAE;QAC7C,MAAM1kB,KAAK,GAAGooB,WAAW,CAAChiE,OAAO,EAAEgnD,UAAU,EAAEnN,MAAM,CAAC;QAOtDj7B,qBAAqB,CACnB5e,OAAO,EACP;AAAEiiE,UAAAA,WAAW,EAAEroB;AAAM,SAAC,EACtB;AAAEj7B,UAAAA,MAAM,EAAE;AAAK,SACjB,CAAC;AACH,MAAA;AACF,IAAA;GACD;;AAED;;AAEA4+B,EAAAA,MAAM,CAACzB,SAAS,CAACimB,YAAY,CAAC;AAC9BxkB,EAAAA,MAAM,CAACxB,QAAQ,CAAC+lB,UAAU,CAAC;EAE3BvkB,MAAM,CAACtB,SAAS,CAAC,YAAY;IAC3B,KAAK,MAAMj8C,OAAO,IAAIkhE,QAAQ,CAACj+D,IAAI,EAAE,EAAE;MACrC,IAAI2F,QAAW,CAAC5I,OAAO,CAAC,KAAKs+D,gBAAgB,EAAE;AAC7C;QACA,MAAM1/C,qBAAqB,CAAC5e,OAAO,EAAE;AAAEiiE,UAAAA,WAAW,EAAEv5B;AAAI,SAAC,CAAC;AAC1D,QAAA,MAAMztB,aAAa,CAACjb,OAAO,EAAEg/D,aAAW,CAAC;AAC3C,MAAA;AACF,IAAA;IAEAkC,QAAQ,CAAC77C,KAAK,EAAE;AAEhB,IAAA,MAAMpK,aAAa,CAACqjD,gBAAgB,EAAErJ,aAAW,CAAC;AACpD,EAAA,CAAC,CAAC;;AAEF;AACA;EACA,MAAMiN,aAAa,GAAIjB,QAA+B,IAAqB;IACzE,OAAO;AACLkB,MAAAA,KAAK,EAAElB,QAAQ;AACfW,MAAAA,MAAM,EAAEl5B,GAAG;AACXm5B,MAAAA,OAAO,EAAEn5B,GAAG;AACZ05B,MAAAA,QAAQ,EAAE15B,GAAG;AACb25B,MAAAA,KAAK,EAAE35B,GAAG;AACV45B,MAAAA,OAAO,EAAE55B,GAAG;AACZ65B,MAAAA,WAAW,EAAE;KACd;GACF;EAEDrB,QAAQ,CAACpqD,GAAG,CAACwnD,gBAAgB,EAAE4D,aAAa,CAAC,EAAE,CAAC,CAAC;AAEjD,EAAA,KAAK,MAAM,CAAC5qD,IAAI,EAAE2pD,QAAQ,CAAC,IAAIzC,KAAK,CAAC13D,OAAO,EAAE,EAAE;AAC9CkU,IAAAA,UAAU,CAAC1D,IAAI,EAAE0nD,aAAW,CAAC;AAE7B,IAAA,MAAMhY,UAA0B,GAAGkb,aAAa,CAACjB,QAAQ,CAAC;AAC1DC,IAAAA,QAAQ,CAACpqD,GAAG,CAACQ,IAAI,EAAE0vC,UAAU,CAAC;IAE9B,IAAIia,QAAQ,KAAK/B,MAAM,EAAE;AACvBlY,MAAAA,UAAU,CAACub,WAAW,GAAGC,iBAAiB,CAAClrD,IAAI,CAAC;AAChD,MAAA,KAAK,MAAMiJ,KAAK,IAAIymC,UAAU,CAACub,WAAW,EAAE;QAC1CrB,QAAQ,CAACpqD,GAAG,CAACyJ,KAAK,EAAE2hD,aAAa,CAAC,EAAE,CAAC,CAAC;AACxC,MAAA;AACF,IAAA;AACF,EAAA;AAEAlnD,EAAAA,UAAU,CAACsjD,gBAAgB,EAAErJ,aAAW,CAAC;AACzC6M,EAAAA,UAAU,EAAE;AACd,CAAC;;AAED;AACA;AACA;AACA,MAAMU,iBAAiB,GAAIxiE,OAAgB,IAAgB;EACzD,MAAMqyD,UAAqB,GAAG,EAAE;AAChC,EAAA,KAAK,MAAM9xC,KAAK,IAAI5H,yBAAyB,CAAC3Y,OAAO,CAAC,EAAE;AACtD,IAAA,IAAIy/D,MAAM,CAACl/C,KAAK,CAAC,EAAE;AACjB8xC,MAAAA,UAAU,CAACpiD,IAAI,CAACsQ,KAAK,CAAC;AACxB,IAAA,CAAC,MAAM;MACL8xC,UAAU,CAACpiD,IAAI,CAAC,GAAGuyD,iBAAiB,CAACjiD,KAAK,CAAC,CAAC;AAC9C,IAAA;AACF,EAAA;AAEA,EAAA,OAAO8xC,UAAU;AACnB,CAAC;AAED,MAAMoP,qBAAqB,GAAGA,CAC5BnD,gBAA6B,EAC7B4C,QAAsC,EACtCE,WAAoB,EACpBtmC,MAA8B,KACC;AAC/B,EAAA,IAAItf,OAAO,CAAC8iD,gBAAgB,EAAE5jE,kBAAqB,CAAC,KAAKA,UAAa,EAAE;AAEtE,IAAA,OAAO,IAAI;AACb,EAAA;AAGA;EACA,IAAI+nE,KAAK,GAAG/5B,GAAG;AACbg6B,IAAAA,OAAO,GAAG,CAAC;AACXC,IAAAA,KAAK,GAAGj6B,GAAG;AACXk6B,IAAAA,KAAK,GAAGl6B,GAAG;AACXm6B,IAAAA,MAAM,GAAG,CAAC;AAEZ,EAAA,KAAK,MAAM,CAAC7iE,OAAO,EAAEgnD,UAAU,CAAC,IAAIka,QAAQ,CAACp6D,OAAO,EAAE,EAAE;AACtD,IAAA,MAAM8yC,KAAK,GAAGoN,UAAU,CAAC4a,MAAM;AAC/B,IAAA,MAAM/nB,MAAM,GAAGmN,UAAU,CAAC6a,OAAO;IAEjC,IAAI7hE,OAAO,KAAKs+D,gBAAgB,EAAE;AAChCsE,MAAAA,KAAK,GAAGhpB,KAAK;MACbipB,MAAM,GAAGj6D,QAAW,CAAC+P,yBAAyB,CAAC3Y,OAAO,CAAC,CAAC;;AAExD;AACF,IAAA,CAAC,MAAM,IAAIgnD,UAAU,CAACmb,KAAK,KAAKjD,MAAM,EAAE;MACtC,IAAI4D,WAAW,GAAG,CAAC;AACjBC,QAAAA,aAAa,GAAG,CAAC;AACnB,MAAA,MAAM1Q,UAAU,GAAGrL,UAAU,CAACub,WAAW;AAEzC,MAAA,IAAI35D,QAAW,CAACypD,UAAU,CAAC,EAAE;AAC3B,QAAA,KAAK,MAAM2Q,SAAS,IAAIhc,UAAU,CAACub,WAAW,EAAE;AAC9C,UAAA,MAAMU,QAAQ,GAAG/B,QAAQ,CAAC7tD,GAAG,CAAC2vD,SAAS,CAAC;AACxC,UAAA,IAAIC,QAAQ,EAAE;AACZH,YAAAA,WAAW,IAAIG,QAAQ,CAACrB,MAAM,GAAGqB,QAAQ,CAACpB,OAAO;AACnD,UAAA,CAAC,MAAM;AACLnqD,YAAAA,QAAQ,CAAC9O,QAAW,CAAC,6BAA6B,CAAC,CAAC;AACtD,UAAA;AACF,QAAA;AACAm6D,QAAAA,aAAa,GAAGlpB,MAAM,GAAGipB,WAAW,GAAGlpB,KAAK;AAC9C,MAAA,CAAC,MAAM;QACLkpB,WAAW,GAAGlpB,KAAK,GAAGC,MAAM;AAC9B,MAAA;MAEAmN,UAAU,CAACqb,KAAK,GAAGS,WAAW;MAC9B9b,UAAU,CAACsb,OAAO,GAAGS,aAAa;AAElCN,MAAAA,KAAK,GAAG,CAACA,KAAK,IAAI,CAAC,IAAIK,WAAW;AAClCJ,MAAAA,OAAO,IAAIK,aAAa;;AAExB;AACF,IAAA,CAAC,MAAM,IAAI/b,UAAU,CAACmb,KAAK,KAAKhD,OAAO,EAAE;AACvC,MAAA,IAAIiC,WAAW,IAAI,CAACzB,eAAe,CAAC3/D,OAAO,CAAC,EAAE;AAE5C,QAAA,OAAO,IAAI;AACb,MAAA;AAEA,MAAA,MAAMkjE,WAAW,GAAGtpB,KAAK,GAAGC,MAAM;AAClC8oB,MAAAA,KAAK,GAAG,CAACA,KAAK,IAAI,CAAC,IAAIO,WAAW;MAClClc,UAAU,CAACob,QAAQ,GAAGc,WAAW;;AAEjC;AACF,IAAA,CAAC,MAAM;AACL;AACA,MAAA;AACF,IAAA;AAQF,EAAA;EAEA,OAAO;AACLC,IAAAA,MAAM,EAAEV,KAAK;AACbW,IAAAA,QAAQ,EAAEV,OAAO;AACjBW,IAAAA,MAAM,EAAEV,KAAK;AACbW,IAAAA,MAAM,EAAEV,KAAK;AACbW,IAAAA,OAAO,EAAEV;GACV;AACH,CAAC;AAED,MAAMb,WAAW,GAAGA,CAClBhiE,OAAgB,EAChBgnD,UAA0B,EAC1Bwc,YAAoB,KAEpBxc,UAAU,CAACmb,KAAK,KAAKjD,MAAM,GACvBlY,UAAU,CAACqb,KAAK,IAAImB,YAAY,IAAIxc,UAAU,CAACsb,OAAO,IAAI,CAAC,CAAC,CAAC,GAC7Dtb,UAAU,CAACob,QAAQ,GAAGoB,YAAY;AAExC,MAAM9B,gBAAgB,GAAGA,CACvBF,YAAiC,EACjCj8C,MAAgC,EAChCuV,MAA8B,KAC3B;AACH,EAAA,MAAM2nC,KAAK,GAAGjB,YAAY,CAAC2B,MAAM;AACjC,EAAA,MAAMT,OAAO,GAAGlB,YAAY,CAAC4B,QAAQ;AACrC,EAAA,MAAMT,KAAK,GAAGnB,YAAY,CAAC6B,MAAM;AACjC,EAAA,MAAMT,KAAK,GACTpB,YAAY,CAAC8B,MAAM,GAAG,CAAC9B,YAAY,CAAC+B,OAAO,GAAG,CAAC,IAAIh+C,MAAM,CAACi7C,OAAO;AACnE,EAAA,MAAMjB,QAAQ,GAAGh6C,MAAM,CAACk7C,SAAS;AACjC,EAAA,MAAMjB,SAAS,GAAGj6C,MAAM,CAACm7C,UAAU;;AAInC;AACA,EAAA,IAAI93D,KAAQ,CAAC65D,KAAK,CAAC,EAAE;IAEnB,IAAI,CAACE,KAAK,EAAE;AAEV,MAAA,OAAOj6B,GAAG;AACZ,IAAA;IAEA,OAAOk6B,KAAK,GAAGD,KAAK;AACtB,EAAA;;AAEA;AACA,EAAA,IAAI/5D,KAAQ,CAAC+5D,KAAK,CAAC,EAAE;AAEnB,IAAA,OAAOF,KAAK,GAAGG,KAAK,GAAGF,OAAO;AAChC,EAAA;AAEA,EAAA,IAAI,CAACC,KAAK,IAAI,CAACF,KAAK,EAAE;AAIpB,IAAA,OAAO/5B,GAAG;AACZ,EAAA;EAEA,MAAM+6B,EAAE,GAAG76D,IAAO,CAAC65D,KAAK,GAAGE,KAAK,CAAC,GAAGD,OAAO;;AAE3C;EACA,MAAM,CAACgB,EAAE,EAAEC,EAAE,CAAC,GAAGz2D,cAAc,CAC7By1D,KAAK,EACL,EAAEA,KAAK,GAAGD,OAAO,GAAGE,KAAK,CAAC,EAC1BH,KAAK,GAAGC,OAAO,GAAGE,KACpB,CAAC;;AAED;EACA,IAAIgB,GAAG,GAAGl7B,GAAG;AACXm7B,IAAAA,GAAG,GAAGn7B,GAAG;AACTo7B,IAAAA,GAAG,GAAGp7B,GAAG;EACX,IAAI82B,SAAS,GAAG,CAAC,EAAE;AACjBoE,IAAAA,GAAG,GAAG12D,cAAc,CAACy1D,KAAK,EAAE,CAACA,KAAK,GAAGD,OAAO,EAAE,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;AAExDoB,IAAAA,GAAG,GAAG32D,cAAc,CAClBy1D,KAAK,GAAGnD,SAAS,EAEjB,CAACmD,KAAK,GAAGD,OAAO,GAAGlD,SAAS,EAC5B,CAACiD,KACH,CAAC,CAAC,CAAC,CAAC;AAEJqB,IAAAA,GAAG,GAAG52D,cAAc,CAClBy1D,KAAK,GAAGnD,SAAS,EAChB,CAACmD,KAAK,GAAGD,OAAO,GAAIlD,SAAS,EAC9B,CAACiD,KACH,CAAC,CAAC,CAAC,CAAC;AACN,EAAA;;AAEA;EACA,IAAIsB,GAAG,GAAGr7B,GAAG;AACXs7B,IAAAA,GAAG,GAAGt7B,GAAG;EACX,IAAI62B,QAAQ,IAAI,CAAC,EAAE;AACjB,IAAA,CAACwE,GAAG,EAAEC,GAAG,CAAC,GAAG92D,cAAc,CACzBy1D,KAAK,EACL,EAAEA,KAAK,GAAGD,OAAO,GAAGE,KAAK,IAAI,CAAC,GAAGrD,QAAQ,CAAC,CAAC,EAC3CkD,KAAK,GAAGC,OAAO,GAAGE,KAAK,IAAI,CAAC,GAAGrD,QAAQ,CACzC,CAAC;AACH,EAAA;;AAEA;EACA,MAAM0E,QAAQ,GAAGr7D,GAAM,CAAC,GAAGA,MAAS,CAAC,CAAC+6D,EAAE,EAAEE,GAAG,EAAEG,GAAG,CAAC,EAAG5mE,CAAC,IAAK8N,UAAU,CAAC9N,CAAC,CAAC,CAAC,CAAC;EAC3E,MAAM8mE,QAAQ,GAAGt7D,GAAM,CAAC,GAAGA,MAAS,CAAC,CAAC86D,EAAE,EAAEI,GAAG,EAAEC,GAAG,CAAC,EAAG3mE,CAAC,IAAK8N,UAAU,CAAC9N,CAAC,CAAC,CAAC,CAAC;;AAE3E;AACA,EAAA,MAAM+mE,GAAG,GAAG1B,KAAK,IAAIgB,EAAE,GAAGf,OAAO,CAAC;AAClC,EAAA,MAAM0B,GAAG,GAAGX,EAAE,GAAGd,KAAK;;AAEtB;AACA,EAAA,MAAM0B,UAAU,GAAGzB,KAAK,GAAGuB,GAAG,GAAGC,GAAG;;AAkBpC;AACA;AACA;AACA;AACA;AACA,EAAA,IAAI,CAACX,EAAE,IAAIA,EAAE,IAAI,CAAC,EAAE,CAEnB,MAAM,IAAIv4D,UAAU,CAACy4D,EAAE,CAAC,KAAKz4D,UAAU,CAACw4D,EAAE,CAAC,EAAE,CAI7C,MAAM,IAAIx4D,UAAU,CAAC24D,GAAG,CAAC,KAAK34D,UAAU,CAAC44D,GAAG,CAAC,EAAE,CAI/C,MAAM,IAAI54D,UAAU,CAAC84D,GAAG,CAAC,KAAK94D,UAAU,CAAC64D,GAAG,CAAC,EAAE,CAI/C,MAAM,IAAIJ,EAAE,GAAGF,EAAE,GAAG,GAAG,EAAE,CAEzB,MAAM,IAAIA,EAAE,GAAGC,EAAE,GAAG,GAAG,EAAE,CAEzB,MAAM,IAAIE,GAAG,GAAGH,EAAE,GAAG,GAAG,EAAE,CAE1B,MAAM,IAAII,GAAG,GAAGD,GAAG,GAAG,GAAG,EAAE,CAE3B,MAAM,IAAIA,GAAG,GAAGE,GAAG,GAAG,GAAG,EAAE,CAE3B,MAAM,IAAIE,GAAG,GAAGD,GAAG,GAAG,GAAG,EAAE,CAE3B,MAAM,IAAIJ,EAAE,GAAGK,GAAG,GAAG,GAAG,EAAE,CAE1B,MAAM,IAAID,GAAG,GAAGL,EAAE,GAAG,GAAG,EAAE,CAE1B,MAAM;AACL;IACA,IAAIW,UAAU,IAAI,CAAC,EAAE;AACnB;AACA,MAAA,OAAOZ,EAAE;AACX,IAAA,CAAC,MAAM;AACL;AACA,MAAA,OAAO76D,GAAM,CAACq7D,QAAQ,EAAEC,QAAQ,CAAC;AACnC,IAAA;AACF,EAAA;EAEAxsD,QAAQ,CACN9O,QAAW,CAAC,iCAAiC,CAAC,EAC9C44D,YAAY,EACZj8C,MACF,CAAC;EACD,OAAOmjB,GAAG,CAAC;AACb,CAAC;;AC5xCD;AACA;AACA;AACA;AACA;;;AAOA;AACA;AACA;AACO,MAAM47B,cAAc,GAAGA,MAC5B17D,MAAS,EAAE,GACP,OAAO27D,GAAG,KAAK,WAAW,IAAIA,GAAG,CAACj4C,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,GAChE,KAAK;;AAEX;AACA;AACA;AACO,MAAMk4C,cAAc,GAAGA,MAC5B57D,MAAS,EAAE,GAAGtN,QAAQ,CAACmpE,UAAU,KAAK,YAAY,GAAG,KAAK;;AAE5D;AACA;AACA;AACO,MAAMC,QAAQ,GAAGA,MACtB97D,MAAS,EAAE,GACPA,SAAY,CAACnJ,KAAK,CAChB,+DACF,CAAC,KAAK,IAAI,GACV,KAAK;;ACjCX;AACA;AACA;;;AAsklE,SAAS,SAAS1pB,MAAM,CAAC;AACpC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;EACE,OAAO5nC,GAAGA,CAACotB,UAAoB,EAAoB;IACjD,IAAI,CAACA,UAAU,EAAE;AACf,MAAA,OAAOq9B,YAAU;AACnB,IAAA;AAEA,IAAA,IAAIr9B,UAAU,KAAK73B,aAAgB,EAAE,EAAE;AACrC63B,MAAAA,UAAU,GAAG73B,OAAU,EAAE;AAC3B,IAAA;IAEA,MAAMmd,QAAQ,GAAG,KAAK,CAAC1S,GAAG,CAACotB,UAAU,EAAEmwB,UAAQ,CAAC;IAChD,IAAIhoD,YAAe,CAACmd,QAAQ,EAAE4+C,SAAS,CAAC,EAAE;AACxC,MAAA,OAAO5+C,QAAQ;AACjB,IAAA;AACA,IAAA,OAAO,IAAI;AACb,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,aAAag4C,UAAUA,CAACx4C,MAAwB,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA,IAAA,MAAMkb,UAAU,GAAG,MAAMwQ,aAAa,CAACrO,0BAA0B,EAAE;IACnE,MAAM2a,MAAM,GAAG,IAAIonB,SAAS,CAAClkC,UAAU,EAAElb,MAAM,CAAC;IAChDg4B,MAAM,CAACtB,SAAS,CAAC,MAAM;MACrB,IAAI6hB,YAAU,KAAKvgB,MAAM,EAAE;AACzBugB,QAAAA,YAAU,GAAG,IAAI;AACnB,MAAA;AACF,IAAA,CAAC,CAAC;AAEFA,IAAAA,YAAU,GAAGvgB,MAAM;AACnB,IAAA,OAAOA,MAAM;AACf,EAAA;EAEA,OAAOQ,QAAQA,GAAG;AAChB5B,IAAAA,cAAc,CACZ0U,aAAW,EACX,CAAC7wD,OAAO,EAAEulB,MAAM,KAAK;AACnB,MAAA,IAAI3c,aAAgB,CAAC5I,OAAO,CAAC,EAAE;AAC7B,QAAA,IAAI,CAAC2kE,SAAS,CAACtxD,GAAG,CAACrT,OAAO,CAAC,EAAE;AAC3B,UAAA,OAAO,IAAI2kE,SAAS,CAAC3kE,OAAO,EAAEulB,MAAM,CAAC;AACvC,QAAA;AACF,MAAA,CAAC,MAAM;AACL7N,QAAAA,QAAQ,CACN9O,UAAa,CAAC,oDAAoD,CACpE,CAAC;AACH,MAAA;AACA,MAAA,OAAO,IAAI;KACZ,EACDyzC,iBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACE7iD,EAAAA,WAAWA,CAACinC,UAAuB,EAAElb,MAAwB,EAAE;AAAA,IAAA,IAAAq/C,cAAA;AAC7D,IAAA,IAAInkC,UAAU,KAAK73B,aAAgB,EAAE,EAAE;AACrC63B,MAAAA,UAAU,GAAG73B,OAAU,EAAE;AAC3B,IAAA;AAEA,IAAA,MAAM2yC,cAAc,GAAA,CAAAqpB,cAAA,GAAGD,SAAS,CAACtxD,GAAG,CAACotB,UAAU,CAAC,cAAAmkC,cAAA,KAAA,MAAA,GAAA,MAAA,GAAzBA,cAAA,CAA2BxpB,OAAO,EAAE;IAC3D,KAAK,CAAC3a,UAAU,EAAE;AAAE1/B,MAAAA,EAAE,EAAE6vD;AAAS,KAAC,CAAC;AAEnC,IAAA,MAAM5yC,KAAK,GAAG6mD,kBAAkB,CAACpkC,UAAU,CAAC;AAC5C,IAAA,MAAMqkC,aAAa,GAAG9mD,KAAK,CAACyiB,UAAU;IAEtC,CAAC8a,cAAc,IAAI3yC,cAAiB,EAAE,EAAEuP,IAAI,CAAC,YAAY;AACvD,MAAA,IAAI,IAAI,CAACmjC,WAAW,EAAE,EAAE;AACtB,QAAA;AACF,MAAA;MAEA9Y,MAAI,CAAC,IAAI,EAAE/B,UAAU,EAAEziB,KAAK,EAAEuH,MAAM,CAAC;AACvC,IAAA,CAAC,CAAC;AAEF,IAAA,IAAI,CAACw/C,aAAa,GAAG,MAAMD,aAAa;AAC1C,EAAA;AACF;;AAEA;AACA;AACA;;AA2GA;;AAEA,MAAMjU,aAAW,GAAG,WAAW;AAC/B,MAAMmE,eAAa,GAAGpsD,UAAa,CAACioD,aAAW,CAAC;AAChD;AACA;AACA,MAAMD,UAAQ,GAAGoE,eAAa;AAC9B,MAAMC,aAAW,GAAG,CAAA,EAAGD,eAAa,CAAA,MAAA,CAAQ;AAC5C,MAAMgQ,gBAAgB,GAAG,CAAA,EAAGhQ,eAAa,CAAA,WAAA,CAAa;AACtD,MAAMiQ,cAAc,GAAG,CAAA,EAAGjQ,eAAa,CAAA,SAAA,CAAW;AAClD,MAAMkQ,UAAU,GAAG,CAAA,EAAGlQ,eAAa,CAAA,KAAA,CAAO;AAC1C,MAAM/8D,cAAc,GAAG,CAAA,EAAG+8D,eAAa,CAAA,SAAA,CAAW;AAClD,MAAMmQ,WAAW,GAAG,CAAA,EAAGnQ,eAAa,CAAA,MAAA,CAAQ;AAC5C,MAAMoQ,aAAa,GAAG,CAAA,EAAGpQ,eAAa,CAAA,QAAA,CAAU;AAChD,MAAMqQ,aAAa,GAAG,CAAA,EAAGrQ,eAAa,CAAA,QAAA,CAAU;AAChD,MAAMsQ,gBAAgB,GAAG18D,UAAa,CAAC,WAAW,CAAC;AACnD,MAAM28D,gBAAgB,GAAG38D,UAAa,CAAC,WAAW,CAAC;AACnD,MAAM48D,kBAAkB,GAAG58D,UAAa,CAAC,aAAa,CAAC;AACvD,MAAM68D,qBAAqB,GAAG78D,UAAa,CAAC,gBAAgB,CAAC;AAC7D,MAAM88D,mBAAmB,GAAG98D,UAAa,CAAC,cAAc,CAAC;AACzD,MAAM+8D,oBAAoB,GAAG/8D,UAAa,CAAC,eAAe,CAAC;AAC3D,MAAMg9D,kBAAkB,GAAGh9D,UAAa,CAAC,aAAa,CAAC;AAEvD,MAAMi9D,qBAAqB,GAAG,mBAAmB;AACjD,MAAMC,yBAAyB,GAAG,uBAAuB;AACzD,MAAMC,eAAe,GAAGrrE,WAAc,GAAG,UAAU;AACnD,MAAMsrE,WAAW,GAAG,WAAW;AAE/B,IAAIlI,YAA4B,GAAG,IAAI;AAEvC,MAAMzhB,iBAA6D,GAAG;AACpEt7C,EAAAA,EAAE,EAAEwR,cAAc;AAClBqI,EAAAA,SAAS,EAAEhJ,eAAe;AAC1Bq0D,EAAAA,UAAU,EAAE5zD,eAAe;AAC3B6zD,EAAAA,QAAQ,EAAE7zD,eAAe;AACzB8zD,EAAAA,SAAS,EAAE5zD,cAAc;AACzB6zD,EAAAA,SAAS,EAAE7zD,cAAc;AACzB8zD,EAAAA,QAAQ,EAAEj0D,cAAc;AACxBk0D,EAAAA,WAAW,EAAEj0D,eAAe;AAC5Bk0D,EAAAA,UAAU,EAAEl0D,eAAe;AAC3Bm0D,EAAAA,SAAS,EAAEn0D;AACb,CAAC;AAED,MAAMwyD,kBAAkB,GAAIvG,gBAA6B,IAAK;AAC5D;AACA;AACA,EAAA,MAAM37B,qBAAqB,GAAGD,2BAA2B,EAAE;AAE3D,EAAA,MAAM3mC,IAAI,GAAG6M,OAAU,EAAE;AACzB,EAAA,MAAM69D,iBAAiB,GAAG5jC,0BAA0B,EAAE;AAEtD,EAAA,MAAM6jC,MAAM,GAAGpI,gBAAgB,KAAKviE,IAAI;EACxC,MAAM4qE,gBAAgB,GACpB,CAACD,MAAM,GAAGD,iBAAiB,GAAGnI,gBAAgB,MAAM37B,qBAAqB;EAE3E,MAAM/oC,IAAiB,GAAG+sE,gBAAgB,GACtChkC,qBAAqB,GACrB+jC,MAAM,GACJD,iBAAiB,GACjBnI,gBAAgB;;AAEtB;AACA,EAAA,MAAMsI,cAAc,GAAGF,MAAM,IAAIlC,cAAc,EAAE;AAEjD,EAAA,MAAMnhD,aAAa,GAAGrC,eAAe,CAACs9C,gBAAgB,CAAC;AACvD,EAAA,MAAMuI,SAAS,GAAGF,gBAAgB,GAAG5qE,IAAI,GAAGuiE,gBAAgB;AAC5D,EAAA,MAAMwI,UAAU,GAAGrnC,YAAY,CAAC7lC,IAAI,EAAE;AAAE8lC,IAAAA,IAAI,EAAE;AAAI,GAAC,CAAC;EAEpD,IAAIqnC,cAAkC,GAAG,IAAI;EAC7C,IAAIC,SAAS,GAAG,IAAI;EACpB,IAAIC,kBAAkB,GAAG,IAAI;AAE7B,EAAA,IAAI,CAACN,gBAAgB,IAAI,CAACD,MAAM,EAAE;AAChC;AACAK,IAAAA,cAAc,GAAG3lD,iBAAiB,CAACk9C,gBAAgB,EAAE;MACnDn9C,WAAW,EAAE,CAAC8jD,cAAc;AAC9B,KAAC,CAAC;AACFgC,IAAAA,kBAAkB,GAAG,CAACr+D,SAAY,CAACm+D,cAAc,CAAC;IAElD,IAAI,CAACA,cAAc,EAAE;AACnB,MAAA,MAAMG,aAAa,GACjB,mCAAmC,GACnC,+CAA+C,GAC/C,qCAAqC;AAEvC,MAAA,IAAI7jD,aAAa,EAAE;AACjB;AACA;AACA0jD,QAAAA,cAAc,GAAGn+D,aAAgB,CAAC,KAAK,CAAC;AAC1C,MAAA,CAAC,MAAM,IAAI07D,cAAc,EAAE,EAAE;AAC3B9sD,QAAAA,OAAO,CAAC,CAAA,EAAG0vD,aAAa,CAAA,4CAAA,CAA8C,CAAC;AACzE,MAAA,CAAC,MAAM;AACLxvD,QAAAA,QAAQ,CAAC,CAAA,EAAGwvD,aAAa,CAAA,2CAAA,CAA6C,CAAC;AACvEF,QAAAA,SAAS,GAAG,KAAK;AACnB,MAAA;AACF,IAAA;AACF,EAAA;EAEA,MAAMG,WAAW,GACf,CAACR,gBAAgB,IAAI,CAACtjD,aAAa,IAAI,CAAC4jD,kBAAkB;EAE5D,OAAO;IACLD,SAAS;IACTL,gBAAgB;IAChBD,MAAM;IACNE,cAAc;IACdhtE,IAAI;AACJ6mC,IAAAA,UAAU,EAAEsmC,cAAc,KAAA,IAAA,IAAdA,cAAc,KAAA,MAAA,GAAdA,cAAc,GAAIntE,IAAI;IAClCitE,SAAS;IACTE,cAAc;IACdE,kBAAkB;IAClBE,WAAW;AACXL,IAAAA;GACD;AACH,CAAC;AAED,MAAMtkC,MAAI,GAAGA,CACX+a,MAAiB,EACjB+gB,gBAA6B,EAC7BtgD,KAA4C,EAC5CuH,MAAmC,KAChC;AAAA,EAAA,IAAAxZ,IAAA,EAAAq7D,gBAAA,EAAAvK,KAAA,EAAAwK,kBAAA,EAAAC,gBAAA,EAAAC,mBAAA,EAAAC,KAAA,EAAAC,kBAAA,EAAAC,KAAA,EAAAC,iBAAA;EACH,MAAM;IACJX,SAAS;IACTL,gBAAgB;IAChBD,MAAM;IACNE,cAAc;IACdhtE,IAAI;IACJ6mC,UAAU;IACVomC,SAAS;IACTE,cAAc;IACdE,kBAAkB;IAClBE,WAAW;AACXL,IAAAA;AACF,GAAC,GAAG9oD,KAAK;;AAST;EACA,MAAMkoD,QAAQ,GAAA,CAAAn6D,IAAA,GAAA,CAAAq7D,gBAAA,GAAG7hD,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE2gD,QAAQ,cAAAkB,gBAAA,KAAA,MAAA,GAAAA,gBAAA,GAAIz+D,QAAQ,CAACO,iBAAiB,MAAA,IAAA,IAAA6C,IAAA,KAAA,MAAA,GAAAA,IAAA,GAAI,KAAK;EACxE,MAAMk6D,UAAU,GAAA,CAAApJ,KAAA,GAAA,CAAAwK,kBAAA,GACd9hD,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE0gD,UAAU,cAAAoB,kBAAA,KAAA,MAAA,GAAAA,kBAAA,GAAI1+D,QAAQ,CAACM,mBAAmB,MAAA,IAAA,IAAA4zD,KAAA,KAAA,MAAA,GAAAA,KAAA,GAAI,KAAK;AAC7D,EAAA,MAAMsJ,SAAS,GAAG,CAAA5gD,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE4gD,SAAS,KAAIx9D,QAAQ,CAACQ,kBAAkB;AAClE,EAAA,MAAMi9D,SAAS,GAAG,CAAA7gD,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE6gD,SAAS,KAAIz9D,QAAQ,CAACS,kBAAkB;AAClE,EAAA,MAAMw+D,aAAa,GAAA,CAAAN,gBAAA,GAAG/hD,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE8gD,QAAQ,cAAAiB,gBAAA,KAAA,MAAA,GAAAA,gBAAA,GAAI3+D,QAAQ,CAACU,iBAAiB;AACpE,EAAA,MAAMi9D,WAAW,GAAA,CAAAiB,mBAAA,GAAGhiD,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE+gD,WAAW,cAAAiB,mBAAA,KAAA,MAAA,GAAAA,mBAAA,GAAI5+D,QAAQ,CAACW,oBAAoB;EACxE,MAAMi9D,UAAU,GAAA,CAAAiB,KAAA,GAAA,CAAAC,kBAAA,GACdliD,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEghD,UAAU,cAAAkB,kBAAA,KAAA,MAAA,GAAAA,kBAAA,GAAI9+D,QAAQ,CAACY,mBAAmB,MAAA,IAAA,IAAAi+D,KAAA,KAAA,MAAA,GAAAA,KAAA,GAAI,KAAK;EAC7D,MAAMhB,SAAS,GAAA,CAAAkB,KAAA,GAAA,CAAAC,iBAAA,GAAGpiD,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEihD,SAAS,cAAAmB,iBAAA,KAAA,MAAA,GAAAA,iBAAA,GAAIh/D,QAAQ,CAACa,kBAAkB,MAAA,IAAA,IAAAk+D,KAAA,KAAA,MAAA,GAAAA,KAAA,GAAI,KAAK;AAE3E,EAAA,IAAIhD,QAAQ,EAAE,IAAI,CAACwB,QAAQ,EAAE;AAC3B,IAAA;AACF,EAAA;;AAEA;AACA;AACA;AACAtkC,EAAAA,aAAa,CAAChoC,IAAI,EAAE6mC,UAAU,CAAC;;AAE/B;;AAEA,EAAA,MAAMonC,YAAY,GAAGA,CAAC3xD,OAAgB,EAAEwK,QAAgB,KAAK;AAC3D,IAAA,MAAMonD,eAAe,GAAGpnD,QAAQ,KAAKhmB,KAAQ,IAAIgmB,QAAQ,KAAKhmB,QAAW;AAEzE,IAAA,MAAMqtE,SAAS,GAAGn/D,aAAgB,CAAC,KAAK,CAAC;AACzC8Q,IAAAA,aAAa,CAACquD,SAAS,EAAE7C,UAAU,CAAC;AACpCxpD,IAAAA,UAAU,CACRqsD,SAAS,EACTrtE,kBAAqB,EACrBotE,eAAe,GAAGptE,YAAe,GAAGA,UACtC,CAAC;IACDghB,UAAU,CAACqsD,SAAS,EAAErtE,YAAe,EAAEgmB,QAAQ,CAAC;IAEhD,IAAI4lD,WAAW,IAAIC,UAAU,EAAE;MAC7B39D,OAAU,CAACm/D,SAAS,EAAErtE,MAAS,EAAEsrE,WAAW,CAAC;MAC7Cp9D,OAAU,CAACm/D,SAAS,EAAErtE,eAAkB,EAAEstE,WAAW,CAAC;AACxD,IAAA;AAEA,IAAA,MAAMC,IAAI,GAAGr/D,aAAgB,CAAC,KAAK,CAAC;IACpC8Q,aAAa,CAACuuD,IAAI,EAAEzB,SAAS,GAAGpB,aAAa,GAAGD,WAAW,CAAC;IAE5D,IAAI+C,MAAsB,GAAG,IAAI;AACjC,IAAA,IAAI1B,SAAS,EAAE;AACb0B,MAAAA,MAAM,GAAGt/D,aAAgB,CAAC,KAAK,CAAC;AAChC8Q,MAAAA,aAAa,CAACwuD,MAAM,EAAE7C,aAAa,CAAC;AACpCzpD,MAAAA,iBAAiB,CAACssD,MAAM,EAAE5C,gBAAgB,EAAEiB,UAAU,CAAC;AACzD,IAAA;IAEA3qD,iBAAiB,CAACmsD,SAAS,EAAEzC,gBAAgB,EAAEiB,UAAU,IAAI,CAACC,SAAS,CAAC;AACxE5qD,IAAAA,iBAAiB,CAACmsD,SAAS,EAAExC,gBAAgB,EAAEe,WAAW,CAAC;IAE3D1mD,cAAc,CAACqoD,IAAI,EAAE;AAAE3oD,MAAAA,EAAE,EAAEyoD;AAAU,KAAC,CAAC;AAEvC,IAAA,IAAIG,MAAM,EAAE;MACVtoD,cAAc,CAACsoD,MAAM,EAAE;AAAE5oD,QAAAA,EAAE,EAAEyoD;AAAU,OAAC,CAAC;AAC3C,IAAA;IACAnoD,cAAc,CAACmoD,SAAS,EAAE;AAAEzoD,MAAAA,EAAE,EAAEpJ;AAAQ,KAAC,CAAC;IAE1C,OAAO;AACLiyD,MAAAA,IAAI,EAAEJ,SAAS;AACfK,MAAAA,OAAO,EAAEF,MAAM;AACfG,MAAAA,KAAK,EAAEJ;KACR;GACF;;AAED;;AAEA,EAAA,MAAMK,WAAW,GAAG,OAAOx2B,UAAsB,EAAEy2B,OAAgB,KAAK;AACtE,IAAA,MAAMR,SAAS,GAAGQ,OAAO,GAAGC,UAAU,GAAGC,UAAU;IACnD,MAAMC,YAAY,GAAG,CAAA,EAAG/C,oBAAoB,CAAA,CAAA,EAAI4C,OAAO,GAAGpC,SAAS,GAAGC,SAAS,CAAA,CAAE;AAEjF,IAAA,MAAMuC,gBAAgB,GAAGJ,OAAO,GAC5Bz2B,UAAU,CAACp3C,sBAAyB,CAAC,GACrCo3C,UAAU,CAACp3C,qBAAwB,CAAC;AAExC,IAAA,MAAMkuE,YAAY,GAAGL,OAAO,GACxBz2B,UAAU,CAACp3C,cAAiB,CAAC,GAAGo3C,UAAU,CAACp3C,cAAiB,CAAC,GAC7Do3C,UAAU,CAACp3C,eAAkB,CAAC,GAAGo3C,UAAU,CAACp3C,eAAkB,CAAC;AAQnEkO,IAAAA,OAAU,CACRm/D,SAAS,EACThC,eAAe,EACfn9D,KAAQ,CAAC+/D,gBAAgB,GAAG,GAAG,CAAC,GAAG,EACrC,CAAC;IAED/pD,qBAAqB,CACnBmpD,SAAS,EACT;AAAEc,MAAAA,MAAM,EAAED,YAAY;AAAEE,MAAAA,UAAU,EAAEH;AAAiB,KAAC,EACtD;AAAElqD,MAAAA,WAAW,EAAE;AAAE,KACnB,CAAC;AAED,IAAA,MAAMsqD,UAAU,GAAGR,OAAO,GAAG,GAAG,GAAG,GAAG;IACtC,IAAI9oC,YAAY,CAACgB,UAAU,EAAE;AAAEf,MAAAA,IAAI,EAAEqpC;AAAW,KAAC,CAAC,IAAIH,YAAY,GAAG,CAAC,EAAE;AACtE/sD,MAAAA,cAAc,CAACyiD,gBAAgB,EAAEoK,YAAY,CAAC;MAC9CvuD,cAAc,CAAC4tD,SAAS,CAAC;AAC3B,IAAA,CAAC,MAAM;AACL9rD,MAAAA,OAAO,CAACqiD,gBAAgB,EAAEoK,YAAY,CAAC;MACvCruD,gBAAgB,CAAC0tD,SAAS,CAAC;AAC7B,IAAA;GACD;;AAED;;AAEA,EAAA,MAAMiB,cAAc,GAAGA,CAAC5qE,MAAe,EAAE0zC,UAAsB,KAAK;AAClEw2B,IAAAA,WAAW,CAACx2B,UAAU,EAAE,IAAI,CAAC;AAC7Bw2B,IAAAA,WAAW,CAACx2B,UAAU,EAAE,KAAK,CAAC;AAE9B,IAAA,IAAI,CAAC60B,gBAAgB,IAAI,CAACD,MAAM,EAAE;MAChCuC,kBAAkB,CAAC3K,gBAAgB,CAAC;AACtC,IAAA;IAEA,IAAIsJ,aAAa,GAAG,CAAC,EAAE;AACrBttD,MAAAA,WAAW,CAACpE,OAAO,CAAC,CAACiC,IAAI,CAAC,MAAMoC,WAAW,CAACrE,OAAO,EAAE0xD,aAAa,CAAC,CAAC;AACtE,IAAA;GACD;AAED,EAAA,MAAMsB,mBAAmB,GAAGA,CAAC9qE,MAAe,EAAEusC,QAAkB,KAAK;IACnEs+B,kBAAkB,CAAC3K,gBAAgB,CAAC;IACpC1/C,qBAAqB,CACnB0/C,gBAAgB,EAChB;AAAE6K,MAAAA,SAAS,EAAEx+B,QAAQ,CAACE,MAAM,CAACnwC,QAAW;AAAE,KAAC,EAC3C;AAAEikB,MAAAA,MAAM,EAAE,IAAI;AAAEF,MAAAA,WAAW,EAAE;AAAE,KACjC,CAAC;GACF;;AAED;;EAEA,IAAI2qD,UAAU,GAAG,KAAK;EACtB,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIC,kBAAkB,GAAG,CAAC;AAC1B,EAAA,IAAIC,YAAiC;AAErC,EAAA,MAAMC,aAAa,GAAG,OAAOrtE,KAAY,EAAEosE,OAAgB,KAAK;AAC9D3/D,IAAAA,cAAiB,CAACzM,KAAK,CAAC;AACxB,IAAA,MAAM4rE,SAAS,GAAGQ,OAAO,GAAGC,UAAU,GAAGC,UAAU;AACnD,IAAA,MAAMP,MAAM,GAAGK,OAAO,GAAGkB,OAAO,GAAGC,OAAO;AAE1C,IAAA,MAAMtrE,MAAM,GAAGwK,QAAW,CAACzM,KAAK,CAAC;AACjC,IAAA,IAAI,CAACyM,YAAe,CAACzM,KAAK,CAAC,IAAI,CAACyM,aAAgB,CAACxK,MAAM,CAAC,EAAE;AACxD,MAAA;AACF,IAAA;AAEA,IAAA,MAAM6tB,SAAS,GAAG9vB,KAAK,CAAC0qB,IAAI;AAE5B,IAAA,MAAM8iD,OAAO,GACX19C,SAAS,KAAKvxB,aAAgB,IAAIuxB,SAAS,KAAKvxB,WAAc;IAChE,MAAMkvE,aAAa,GACjBD,OAAO,IAAInD,SAAS,IAAIhtD,QAAQ,CAACpb,MAAM,EAAEinE,aAAa,CAAC;IACzD,MAAMwE,UAAU,GAAGF,OAAO,IAAIpD,UAAU,KAAKqD,aAAa,IAAI,CAACpD,SAAS,CAAC;AAEzE,IAAA,IAAIqD,UAAU,EAAE;AACdT,MAAAA,UAAU,GAAG,IAAI;AACjBU,MAAAA,0BAA0B,CAAC3tE,KAAK,EAAE4rE,SAAS,EAAElC,qBAAqB,CAAC;AACrE,IAAA;AAUA,IAAA,IAAK,CAAC8D,OAAO,IAAI,CAACP,UAAU,IAAMO,OAAO,IAAI,CAACE,UAAU,IAAI,CAACvD,WAAY,EAAE;AACzE;AACA;AACA;AACA,MAAA;AACF,IAAA;IAEA,MAAMtuD,kBAAkB,EAAE;AAC1B,IAAA,MAAM8vD,eAAe,GAAGxf,YAAY,CAACyf,SAAS,CAAC;AAE/C,IAAA,MAAMgC,SAAS,GAAGjC,eAAe,GAC7BC,SAAS,CAACrtE,cAAiB,CAAC,GAC5BqtE,SAAS,CAACrtE,eAAkB,CAAC;AAEjC,IAAA,MAAMsvE,gBAAgB,GAAGzB,OAAO,GAC5B9nC,UAAU,CAAC/lC,aAAgB,CAAC,GAC5B+lC,UAAU,CAAC/lC,YAAe,CAAC;IAE/B,MAAMuvE,eAAe,GAAG1B,OAAO,GAC3B9nC,UAAU,CAAC/lC,cAAiB,CAAC,GAAGunC,iBAAiB,CAACxB,UAAU,CAAC,GAC7DA,UAAU,CAAC/lC,eAAkB,CAAC,GAAG2nC,kBAAkB,CAAC5B,UAAU,CAAC;;AAEnE;AACA;AACA,IAAA,MAAMvgC,IAAI,GAAG0I,qBAAwB,CAACm/D,SAAS,CAAC;AAChD,IAAA,MAAM/nC,MAAM,GAAG8nC,eAAe,GAC1B3rE,KAAK,CAAC61B,OAAO,GAAG9xB,IAAI,CAACE,IAAI,GACzBjE,KAAK,CAAC81B,OAAO,GAAG/xB,IAAI,CAACK,GAAG;IAI5B,IAAIy/B,MAAM,KAAKqpC,UAAU,EAAE;AACzB,MAAA;AACF,IAAA;IAEA,MAAMa,WAAW,GAAGP,OAAO,GAAG3pC,MAAM,GAAGA,MAAM,GAAGqpC,UAAU;AAC1DA,IAAAA,UAAU,GAAGrpC,MAAM;AAEnB,IAAA,IAAI,CAAC2pC,OAAO,IAAInD,SAAS,EAAE;AACzB;MACA,MAAM2D,YAAY,GAAGjC,MAAM,GACvBt/D,UAAa,CACXsT,uBAAuB,CACrBgsD,MAAM,EACNJ,eAAe,GAAGptE,OAAU,GAAGA,QACjC,CACF,CAAC,GACD,CAAC;MAEL4uE,kBAAkB,GAChBA,kBAAkB,GAAGY,WAAW,IAAIH,SAAS,IAAII,YAAY,IAAI,CAAC,CAAC,CAAC;KACvE,MAAM,IAAIP,aAAa,EAAE;AACxB;MACAN,kBAAkB,GAAGU,gBAAgB,GAAGC,eAAe;AACzD,IAAA,CAAC,MAAM;AACL;MACAX,kBAAkB,GAAGtpC,MAAM,GAAG+pC,SAAS;AACzC,IAAA;AAEA,IAAA,IAAIH,aAAa,IAAKD,OAAO,IAAI,CAACrD,WAAY,EAAE;AAC9C,MAAA;AACF,IAAA;AAEA,IAAA,MAAM8D,kBAAkB,GAAGd,kBAAkB,GAAGW,eAAe;IAC/D,MAAM/kC,iBAAiB,GAAGqjC,OAAO,GAC7B;AAAEnoE,MAAAA,IAAI,EAAEgqE;AAAmB,KAAC,GAC5B;AAAE7pE,MAAAA,GAAG,EAAE6pE;KAAoB;AAO/B,IAAA,IAAIT,OAAO,EAAE;AACX;AACAJ,MAAAA,YAAY,GAAG,MAAM3xB,aAAa,CAAClxC,QAAQ,CAACw+B,iBAAiB,EAAE;QAC7DzE,UAAU;AACV0D,QAAAA,cAAc,EAAE;AAClB,OAAC,CAAC;AACJ,IAAA,CAAC,MAAM;AAAA,MAAA,IAAAkmC,aAAA;MACL,CAAAA,aAAA,GAAAd,YAAY,MAAA,IAAA,IAAAc,aAAA,eAAZA,aAAA,CAAcvpC,MAAM,EAAE;AACtByoC,MAAAA,YAAY,GAAG,IAAI;AACnB3gE,MAAAA,UAAa,CAAC63B,UAAU,EAAEyE,iBAAiB,CAAC;AAC9C,IAAA;GACD;;AAED;;AAEA,EAAA,MAAMolC,SAAS,GAAGA,CAACnuE,KAAY,EAAEosE,OAAgB,KAAK;AACpD,IAAA,MAAMR,SAAS,GAAGQ,OAAO,GAAGC,UAAU,GAAGC,UAAU;AACnDqB,IAAAA,0BAA0B,CAAC3tE,KAAK,EAAE4rE,SAAS,EAAEjC,yBAAyB,CAAC;AAEvEsD,IAAAA,UAAU,GAAG,KAAK;AAClBG,IAAAA,YAAY,GAAG,IAAI;GACpB;EAED,MAAMgB,cAAc,GAAIpuE,KAAY,IAAKqtE,aAAa,CAACrtE,KAAK,EAAE,IAAI,CAAC;EACnE,MAAMquE,cAAc,GAAIruE,KAAY,IAAKqtE,aAAa,CAACrtE,KAAK,EAAE,KAAK,CAAC;EACpE,MAAMsuE,UAAU,GAAItuE,KAAY,IAAKmuE,SAAS,CAACnuE,KAAK,EAAE,IAAI,CAAC;EAC3D,MAAMuuE,UAAU,GAAIvuE,KAAY,IAAKmuE,SAAS,CAACnuE,KAAK,EAAE,KAAK,CAAC;;AAE5D;;EAEA,MAAMwuE,oBAAoB,GAAGA,MAAM;AACjC,IAAA,IAAI1E,UAAU,EAAE;AACdjrD,MAAAA,UAAU,CAACylB,UAAU,EAAEmlC,kBAAkB,CAAC;AAC1C,MAAA,IAAIgB,cAAc,EAAE;QAClB5rD,UAAU,CAACpS,aAAgB,EAAE,EAAEg9D,kBAAkB,CAAC;AACpD,MAAA;AACF,IAAA;GACD;EAED,MAAMgF,cAAc,GAAGA,MAAM;AAC3B3vD,IAAAA,aAAa,CAACwlB,UAAU,EAAEmlC,kBAAkB,CAAC;AAC7C,IAAA,IAAIgB,cAAc,EAAE;MAClB3rD,aAAa,CAACrS,aAAgB,EAAE,EAAEg9D,kBAAkB,CAAC;AACvD,IAAA;GACD;;AAED;;EAEA,MAAM5L,WAAW,GAAGA,MAAM;AACxB;AACA;AACApiB,IAAAA,aAAa,CAAC/D,WAAW,CAACm1B,cAAc,EAAE;AACxC7lC,MAAAA,SAAS,EAAE,CAAC;AACZ1C,MAAAA;AACF,KAAC,CAAC;;AAEF;AACA;AACAkS,IAAAA,WAAW,CAAC1G,QAAQ,CAACi9B,mBAAmB,EAAE;AACxC9qE,MAAAA,MAAM,EAAEkgE,gBAAgB;AACxBn7B,MAAAA,SAAS,EAAE;AACb,KAAC,CAAC;GACH;EAED,MAAM82B,cAAc,GAAGA,MAAM;AAC3BriB,IAAAA,aAAa,CAAC9D,aAAa,CAACk1B,cAAc,EAAEvoC,UAAU,CAAC;AACvDkS,IAAAA,WAAW,CAACzG,SAAS,CAACg9B,mBAAmB,EAAE5K,gBAAgB,CAAC;GAC7D;;AAED;;EAEA,IAAI,CAAC0I,SAAS,EAAE;AACd4D,IAAAA,cAAc,EAAE;AAChB,IAAA;AACF,EAAA;AAEA,EAAA,MAAMhzB,aAAa,GAAG3G,aAAa,CAACvrB,KAAK,CAAC;IAAE,CAAChrB,iBAAoB,GAAG;AAAE,GAAC,CAAC;AACxE,EAAA,MAAMi4C,WAAW,GAAGtI,WAAW,CAAC3kB,KAAK,CAAC;IAAE,CAAChrB,iBAAoB,GAAG;AAAE,GAAC,CAAC;AAEpE,EAAA,IAAI,CAACisE,gBAAgB,IAAI,CAACD,MAAM,EAAE;AAChC1rD,IAAAA,UAAU,CAACsjD,gBAAgB,EAAE0G,gBAAgB,CAAC;AAChD,EAAA;EAEAnpD,cAAc,CAACyiD,gBAAgB,EAAEmH,qBAAqB,EAAE,CAACf,QAAQ,EAAE,CAAC;EACpE7oD,cAAc,CAACyiD,gBAAgB,EAAEkH,kBAAkB,EAAE,CAAC,CAACuB,cAAc,CAAC;EACtElrD,cAAc,CACZyiD,gBAAgB,EAChBoH,mBAAmB,EACnB,CAAC,CAACqB,cAAc,IAAID,UACtB,CAAC;;AAED;AACA,EAAA,IAAIC,cAAc,IAAI,CAACE,kBAAkB,EAAE;IACzCpnD,YAAY,CAACy+C,gBAAgB,EAAE;AAC7BpoD,MAAAA,OAAO,EAAE6wD,cAAc;AACvB1nD,MAAAA,UAAU,EAAE;KACb,CAAC,CAAC;AACHrE,IAAAA,UAAU,CAAC+rD,cAAc,EAAE9B,cAAc,CAAC;AAC5C,EAAA;AAEA0F,EAAAA,oBAAoB,EAAE;AAEtB,EAAA,MAAME,SAAS,GAAGpqC,UAAU,CAAC1/B,EAAE;AAC/B,EAAA,IAAIwkB,MAAM,KAAA,IAAA,IAANA,MAAM,eAANA,MAAM,CAAExkB,EAAE,EAAE;AACd0/B,IAAAA,UAAU,CAAC1/B,EAAE,GAAGwkB,MAAM,CAACxkB,EAAE;AAC3B,EAAA;AAEA,EAAA,IAAIwkB,MAAM,KAAA,IAAA,IAANA,MAAM,eAANA,MAAM,CAAE3K,SAAS,EAAE;IACrBI,UAAU,CAACylB,UAAU,EAAE,GAAGvxB,eAAe,CAACqW,MAAM,CAAC3K,SAAS,CAAC,CAAC;AAC9D,EAAA;AAEA,EAAA,MAAMotD,WAAW;AAAG;EAClB1B,WAAW,IAAIC,UAAU,GAAG1lD,aAAa,CAAC4f,UAAU,EAAEulC,WAAW,CAAC,GAAG,EAAE;AAEzEhrD,EAAAA,UAAU,CAAC6rD,SAAS,EAAE5R,aAAW,CAAC;AAElC,EAAA,MAAM/+C,OAAO,GAAGtN,aAAgB,CAAC,KAAK,CAAC;EACvCukB,aAAa,CAACjX,OAAO,CAAC;AACtB8E,EAAAA,UAAU,CAAC9E,OAAO,EAAExb,sBAAyB,CAAC;AAC9CsgB,EAAAA,UAAU,CAAC9E,OAAO,EAAEje,cAAc,CAAC;EAEnC,IAAIyuE,MAAM,IAAIC,gBAAgB,EAAE;IAC9BhrD,OAAO,CAACzF,OAAO,EAAExb,eAAkB,EAAEA,OAAU,CAAC;GACjD,MAAM,IAAIysE,WAAW,EAAE;IACtBxrD,OAAO,CAACzF,OAAO,EAAExb,eAAkB,EAAEA,QAAW,CAAC;AACnD,EAAA;EAEA,MAAM;AAAEytE,IAAAA,IAAI,EAAEK,UAAU;AAAEJ,IAAAA,OAAO,EAAEqB;AAAQ,GAAC,GAAG5B,YAAY,CACzD3xD,OAAO,EACPiwD,SACF,CAAC;EACD,MAAM;AAAEgC,IAAAA,IAAI,EAAEM,UAAU;AAAEL,IAAAA,OAAO,EAAEsB;AAAQ,GAAC,GAAG7B,YAAY,CACzD3xD,OAAO,EACPkwD,SACF,CAAC;EAEDzlD,WAAW,CAACzK,OAAO,EAAE;AACnBoJ,IAAAA,EAAE,EAAEunD,SAAS;AACbnmD,IAAAA,QAAQ,EAAE;AACZ,GAAC,CAAC;AAEFs5C,EAAAA,WAAW,EAAE;;AAEb;AACA,EAAA,IAAIuM,UAAU,EAAE;IACdv6C,kBAAkB,CAACw8C,UAAU,EAAE9tE,aAAgB,EAAE6vE,cAAc,CAAC;IAChEv+C,kBAAkB,CAACy8C,UAAU,EAAE/tE,aAAgB,EAAE8vE,cAAc,CAAC;IAEhEx+C,kBAAkB,CAACw8C,UAAU,EAAE9tE,WAAc,EAAE+vE,UAAU,CAAC;IAC1Dz+C,kBAAkB,CAACy8C,UAAU,EAAE/tE,WAAc,EAAEgwE,UAAU,CAAC;AAC5D,EAAA;EAEA,IAAInE,UAAU,IAAID,WAAW,EAAE;IAC7Bt6C,kBAAkB,CAACw8C,UAAU,EAAE9tE,aAAgB,EAAE6vE,cAAc,CAAC;IAChEv+C,kBAAkB,CAACy8C,UAAU,EAAE/tE,aAAgB,EAAE8vE,cAAc,CAAC;AAClE,EAAA;EAEAjtB,MAAM,CAACzB,SAAS,CAAC,MAAM;AACrBme,IAAAA,cAAc,EAAE;IAChB5/C,gBAAgB,CAACmuD,UAAU,CAAC;IAC5BnuD,gBAAgB,CAACouD,UAAU,CAAC;AAC5BmC,IAAAA,cAAc,EAAE;AAClB,EAAA,CAAC,CAAC;EAEFrtB,MAAM,CAACxB,QAAQ,CAAC,MAAM;AACpBie,IAAAA,WAAW,EAAE;IACb7/C,cAAc,CAACquD,UAAU,CAAC;IAC1BruD,cAAc,CAACsuD,UAAU,CAAC;AAC1BkC,IAAAA,oBAAoB,EAAE;AACxB,EAAA,CAAC,CAAC;EAEFptB,MAAM,CAACtB,SAAS,CAAC,YAAY;IAC3Bja,eAAe,CAACpoC,IAAI,CAAC;IAErB6mC,UAAU,CAAC1/B,EAAE,GAAG8pE,SAAS;AACzB,IAAA,IAAItlD,MAAM,KAAA,IAAA,IAANA,MAAM,eAANA,MAAM,CAAE3K,SAAS,EAAE;MACrBK,aAAa,CAACwlB,UAAU,EAAE,GAAGvxB,eAAe,CAACqW,MAAM,CAAC3K,SAAS,CAAC,CAAC;AACjE,IAAA;IAEA,MAAM/C,iBAAiB,EAAE;AACzB,IAAA,IAAIkvD,cAAc,IAAI,CAACE,kBAAkB,EAAE;AACzCtlD,MAAAA,gBAAgB,CAAColD,cAAc,EAAE,CAAC9B,cAAc,CAAC,CAAC;AACpD,IAAA;AAEArlD,IAAAA,cAAc,CAAC1J,OAAO,CAAC,CAAC;;AAExB,IAAA,IAAIqwD,UAAU,EAAE;MACd35C,uBAAuB,CAAC47C,UAAU,EAAE9tE,aAAgB,EAAE6vE,cAAc,CAAC;MACrE39C,uBAAuB,CAAC67C,UAAU,EAAE/tE,aAAgB,EAAE8vE,cAAc,CAAC;MAErE59C,uBAAuB,CAAC47C,UAAU,EAAE9tE,WAAc,EAAE+vE,UAAU,CAAC;MAC/D79C,uBAAuB,CAAC67C,UAAU,EAAE/tE,WAAc,EAAEgwE,UAAU,CAAC;AACjE,IAAA;IAEA,IAAInE,UAAU,IAAID,WAAW,EAAE;MAC7B15C,uBAAuB,CAAC47C,UAAU,EAAE9tE,aAAgB,EAAE6vE,cAAc,CAAC;MACrE39C,uBAAuB,CAAC67C,UAAU,EAAE/tE,aAAgB,EAAE8vE,cAAc,CAAC;AACvE,IAAA;AAEA/wD,IAAAA,gBAAgB,CAACotD,SAAS,EAAE5R,aAAW,CAAC;AACxCx7C,IAAAA,gBAAgB,CAAC6kD,gBAAgB,EAAE0G,gBAAgB,CAAC;IAEpD,KAAK,MAAMtkD,QAAQ,IAAI,CAAChmB,KAAQ,EAAEA,QAAW,EAAEA,MAAS,EAAEA,OAAU,CAAC,EAAE;MACrEshB,UAAU,CAACsiD,gBAAgB,EAAE,CAAA,EAAGqH,oBAAoB,CAAA,CAAA,EAAIjlD,QAAQ,EAAE,CAAC;AACrE,IAAA;AAEA1E,IAAAA,UAAU,CAACsiD,gBAAgB,EAAEmH,qBAAqB,CAAC;AACnDzpD,IAAAA,UAAU,CAACsiD,gBAAgB,EAAEkH,kBAAkB,CAAC;AAChDxpD,IAAAA,UAAU,CAACsiD,gBAAgB,EAAEoH,mBAAmB,CAAC;AACnD,EAAA,CAAC,CAAC;AACJ,CAAC;AAED,MAAMpd,YAAY,GAAIyf,SAAkB,IACtCvsD,OAAO,CAACusD,SAAS,EAAErtE,kBAAqB,CAAC,KAAKA,YAAe;AAE/D,MAAMuuE,kBAAkB,GAAG,MAAOjpE,OAAoB,IAAK;EACzD,KAAK,MAAMojC,IAAI,IAAI,CAAC1oC,KAAQ,EAAEA,OAAU,EAAEA,QAAW,EAAEA,MAAS,CAAC,EAAE;AACjE,IAAA,KAAK,MAAMyL,GAAG,IAAI,CAAC,CAAA,QAAA,EAAWi9B,IAAI,CAAA,CAAE,EAAE,CAAA,OAAA,EAAUA,IAAI,CAAA,MAAA,CAAQ,CAAC,EAAE;MAC7D,MAAM0nC,OAAO,GAAG,MAAMzuD,oBAAoB,CAACrc,OAAO,EAAEmG,GAAG,CAAC;MACxD0W,YAAY,CAAC7c,OAAO,EAAE4I,cAAiB,CAACzC,GAAG,CAAC,EAAE2kE,OAAO,CAAC;AACxD,IAAA;AACF,EAAA;AACF,CAAC;AAED,MAAMhB,0BAA0B,GAAGA,CACjC3tE,KAAY,EACZ4rE,SAAkB,EAClB9wC,MAAqD,KAClD;EACH,IAAIruB,cAAiB,CAACzM,KAAK,CAAC,IAAI86B,MAAM,IAAI8wC,SAAS,EAAE;AACnDA,IAAAA,SAAS,CAAC9wC,MAAM,CAAC,CAAC96B,KAAK,CAAC4uE,SAAS,CAAC;AACpC,EAAA;AACF,CAAC;;AC7gvB,MAAM,CAAC;AACtC;AACF;AACA;AACA;EACE,OAAO5nC,GAAGA,CAACrT,OAAiB,EAAsB;IAChD,IAAI,CAACA,OAAO,EAAE;AACZ,MAAA,OAAO89D,UAAU;AACnB,IAAA;IAEA,MAAM/3C,QAAQ,GAAG,KAAK,CAAC1S,GAAG,CAACrT,OAAO,EAAE4wD,UAAQ,CAAC;IAC7C,IAAIhoD,YAAe,CAACmd,QAAQ,EAAEilD,WAAW,CAAC,EAAE;AAC1C,MAAA,OAAOjlD,QAAQ;AACjB,IAAA;AACA,IAAA,OAAO,IAAI;AACb,EAAA;EAEA,OAAOg4B,QAAQA,GAAG;AAChB5B,IAAAA,cAAc,CACZ0U,aAAW,EACX,CAAC7wD,OAAO,EAAEulB,MAAM,KAAK;AACnB,MAAA,IAAI,CAACylD,WAAW,CAAC33D,GAAG,CAACrT,OAAO,CAAC,EAAE;AAC7B,QAAA,OAAO,IAAIgrE,WAAW,CAAChrE,OAAO,EAAEulB,MAAM,CAAC;AACzC,MAAA;AACA,MAAA,OAAO,IAAI;IACb,CAAC,EACDkgC,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;EACE,OAAOsY,UAAUA,CAACx4C,MAA0B,EAAE;AAC5C,IAAA,MAAM0lD,MAAM,GAAGriE,YAAe,CAAC,aAAa,CAAC;IAC7C,MAAM20C,MAAM,GAAG,IAAIytB,WAAW,CAACC,MAAM,EAAE1lD,MAAM,CAAC;IAC9Cg4B,MAAM,CAACtB,SAAS,CAAC,MAAM;MACrB,IAAI6hB,UAAU,KAAKvgB,MAAM,EAAE;AACzBugB,QAAAA,UAAU,GAAG,IAAI;AACnB,MAAA;MACA,OAAOn9C,WAAW,CAACsqD,MAAM,CAAC;AAC5B,IAAA,CAAC,CAAC;IAEF3nD,cAAc,CAAC1a,OAAU,CAAC,CAACuP,IAAI,CAAEpc,IAAI,IAAK;AACxC,MAAA,IAAI,CAACwhD,MAAM,CAACjC,WAAW,EAAE,EAAE;QACzB36B,WAAW,CAACsqD,MAAM,EAAE;AAAE3rD,UAAAA,EAAE,EAAEvjB;AAAK,SAAC,CAAC;AACnC,MAAA;AACF,IAAA,CAAC,CAAC;AAEF+hE,IAAAA,UAAU,GAAGvgB,MAAM;AACnB,IAAA,OAAOA,MAAM;AACf,EAAA;AAEA/jD,EAAAA,WAAWA,CAACwG,OAAgB,EAAEulB,MAA0B,EAAE;AAAA,IAAA,IAAA2lD,gBAAA;AACxD,IAAA,MAAM3vB,cAAc,GAAA,CAAA2vB,gBAAA,GAAGF,WAAW,CAAC33D,GAAG,CAACrT,OAAO,CAAC,cAAAkrE,gBAAA,KAAA,MAAA,GAAA,MAAA,GAAxBA,gBAAA,CAA0B9vB,OAAO,EAAE;IAC1D,KAAK,CAACp7C,OAAO,EAAE;AAAEe,MAAAA,EAAE,EAAE6vD;AAAS,KAAC,CAAC;IAEhC,MAAM5wB,MAAoB,GACxB,CAAAza,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEya,MAAM,KACd,GAAGtlC,KAAQ,CAAA,MAAA,EAASkO,YAAe,CAAC,uBAAuB,CAAC,CAAA,QAAA,CAAU;AACxE,IAAA,MAAM8X,QAA0B,GAAG,CAAA6E,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE7E,QAAQ,KAAIhmB,OAAU;IACjE,MAAM+lC,UAAU,GAAGlb,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEkb,UAAU;AACrC,IAAA,MAAM0qC,mBAAmB,GACvB1qC,UAAU,IACVA,UAAU,KAAK73B,aAAgB,EAAE,IACjC63B,UAAU,KAAK73B,OAAU,EAAE;AAE7B,IAAA,MAAMgvC,aAAa,GAAG3G,aAAa,CAACvrB,KAAK,EAAE;AAC3C,IAAA,MAAMkzC,WAAW,GAAGniB,WAAW,CAAC/wB,KAAK,CACnCylD,mBAAmB,GAAG;AAAEvxE,MAAAA,IAAI,EAAE6mC;KAAY,GAAG,EAC/C,CAAC;AAED,IAAA,MAAM2qC,aAAa,GAAGA,MACpBxzB,aAAa,CAAClxC,QAAQ,CAAC;AAAEnG,MAAAA,GAAG,EAAE,CAAC;AAAEH,MAAAA,IAAI,EAAE;AAAE,KAAC,EAAE;AAAEqgC,MAAAA;AAAW,KAAC,CAAC;AAE7D,IAAA,IAAI5d,KAAc;AAClB,IAAA,IAAI+qC,WAAoB;IACxB,IAAIh0D,IAAI,GAAGoG,OAAO;IAElB,MAAMqrE,MAAM,GAAGA,MAAM;MACnB/wD,WAAW,CAAC1gB,IAAI,CAAC;IACnB,CAAC;IAED,MAAM0xE,MAAM,GAAGA,MAAM;MACnB/wD,WAAW,CAAC3gB,IAAI,CAAC;IACnB,CAAC;;AAED;;IAEA,CAAC2hD,cAAc,IAAI3yC,cAAiB,EAAE,EAAEuP,IAAI,CAAC,YAAY;MACvD,MAAMozD,aAAa,GAAG9qC,UAAU,GAC5B,MAAMrjB,sBAAsB,CAACqjB,UAAU,CAAC,GACxC,IAAI;MAER,MAAM5oB,iBAAiB,EAAE;AACzB,MAAA,IAAI,IAAI,CAACyjC,WAAW,EAAE,EAAE;AACtB,QAAA;AACF,MAAA;AAEA,MAAA,IAAI6vB,mBAAmB,EAAE;AACvB;AACAvd,QAAAA,WAAW,GAAGhlD,aAAgB,CAAC,KAAK,CAAC;QACrCgX,cAAc,CAACguC,WAAW,EAAE;AAC1BtuC,UAAAA,EAAE,EAAEtf,OAAO;AACX0gB,UAAAA,QAAQ,EAAE,QAAQ;AAClBrB,UAAAA,UAAU,EAAE;AACd,SAAC,CAAC;;AAEF;AACA;AACA;QACA,MAAMmsD,kBAAkB,GACtBD,aAAa,KAAK,gBAAgB,IACjC7qD,QAAQ,KAAKhmB,MAAS,IAAI6wE,aAAa,KAAK,KAAM,IAClD7qD,QAAQ,KAAKhmB,OAAU,IAAI6wE,aAAa,KAAK,aAAc;QAE9D3rD,cAAc,CAAC5f,OAAO,EAAE;AACtBsf,UAAAA,EAAE,EAAEmhB,UAAU;AACd/f,UAAAA,QAAQ,EAAE8qD,kBAAkB,GAAG,QAAQ,GAAG,OAAO;AACjDnsD,UAAAA,UAAU,EAAE;AACd,SAAC,CAAC;;AAEF;AACAzlB,QAAAA,IAAI,GAAGulB,cAAc,CAACnf,OAAO,EAAE;AAAEkW,UAAAA,OAAO,EAAE,KAAK;AAAEmJ,UAAAA,UAAU,EAAE;AAAK,SAAC,CAAC;AACtE,MAAA;MAEA7B,wBAAwB,CAAC5jB,IAAI,CAAC;AAC9B8f,MAAAA,aAAa,CAAC9f,IAAI,EAAEq7D,WAAW,CAAC;AAChCv7C,MAAAA,aAAa,CAAC1Z,OAAO,EAAEyrE,UAAU,CAAC;AAClC7vD,MAAAA,iBAAiB,CAAChiB,IAAI,EAAE8xE,YAAY,EAAE,CAACP,mBAAmB,CAAC;MAC3DzvD,UAAU,CAAC9hB,IAAI,EAAEc,YAAe,EAAEgmB,QAAQ,CAAC;MAE3CmC,KAAK,GAAGF,WAAW,CAAC3iB,OAAO,EAAEtF,IAAO,CAAC;MAErC4wE,MAAM,EAAE,CAAC;;MAETt/C,kBAAkB,CAAChsB,OAAO,EAAEtF,OAAU,EAAE0wE,aAAa,CAAC;AAEtDxS,MAAAA,WAAW,CAAClgB,MAAM,CAAC1Y,MAAM,EAAEqrC,MAAM,EAAE;QACjC11B,KAAK,EAAE,CAACj7C,IAAO,EAAEA,OAAU;AAC7B,OAAC,CAAC;AAEFk+D,MAAAA,WAAW,CAAClgB,MAAM,CAAC1Y,MAAM,EAAEsrC,MAAM,EAAE;AACjC31B,QAAAA,KAAK,EAAE,CAACj7C,OAAU;AACpB,OAAC,CAAC;MAEF,IAAI,CAACohD,SAAS,CAAC,MAAM;QACnBzhC,gBAAgB,CAACzgB,IAAI,CAAC;AACxB,MAAA,CAAC,CAAC;MAEF,IAAI,CAACmiD,QAAQ,CAAC,MAAM;QAClB5hC,cAAc,CAACvgB,IAAI,CAAC;AACtB,MAAA,CAAC,CAAC;MAEF,IAAI,CAACqiD,SAAS,CAAC,YAAY;QACzB,MAAMpkC,iBAAiB,EAAE;QACzB+U,uBAAuB,CAAC5sB,OAAO,EAAEtF,OAAU,EAAE0wE,aAAa,CAAC;AAE3D3xD,QAAAA,gBAAgB,CAAC7f,IAAI,EAAEq7D,WAAW,CAAC;AACnCx7C,QAAAA,gBAAgB,CAACzZ,OAAO,EAAEyrE,UAAU,CAAC;AACrCzvD,QAAAA,UAAU,CAACpiB,IAAI,EAAE8xE,YAAY,CAAC;AAC9B1vD,QAAAA,UAAU,CAACpiB,IAAI,EAAEc,YAAe,CAAC;AACjCwf,QAAAA,iBAAiB,CAACtgB,IAAI,CAAC,CAAC;;AAExB,QAAA,IAAIipB,KAAK,EAAE;AACTjD,UAAAA,cAAc,CAACiD,KAAK,CAAC,CAAC;AACxB,QAAA;QAEA,IAAIjpB,IAAI,KAAKoG,OAAO,EAAE;AACpB;AACA8f,UAAAA,iBAAiB,CAAClmB,IAAI,EAAEoG,OAAO,EAAE;AAAEqf,YAAAA,UAAU,EAAE;AAAK,WAAC,CAAC;AACxD,QAAA;AAEA,QAAA,IAAIuuC,WAAW,EAAE;AACf;AACA9tC,UAAAA,iBAAiB,CAAC8tC,WAAW,EAAE5tD,OAAO,EAAE;AAAEqf,YAAAA,UAAU,EAAE;AAAK,WAAC,CAAC;AAC/D,QAAA;AAEAu5C,QAAAA,WAAW,CAACjgB,OAAO,CAAC3Y,MAAM,EAAEqrC,MAAM,CAAC;AACnCzS,QAAAA,WAAW,CAACjgB,OAAO,CAAC3Y,MAAM,EAAEsrC,MAAM,CAAC;AACrC,MAAA,CAAC,CAAC;AACJ,IAAA,CAAC,CAAC;AACJ,EAAA;AACF;;AAEA;AACA;AACA;;AA+BA;;AAEA,MAAMza,aAAW,GAAG,eAAe;AACnC,MAAMmE,eAAa,GAAGpsD,UAAa,CAACioD,aAAW,CAAC;AAChD;AACA;AACA,MAAMD,UAAQ,GAAGoE,eAAa;AAC9B,MAAMC,WAAW,GAAG,CAAA,EAAGD,eAAa,CAAA,MAAA,CAAQ;AAC5C,MAAMyW,UAAU,GAAG,CAAA,EAAGzW,eAAa,CAAA,KAAA,CAAO;AAC1C,MAAM0W,YAAY,GAAG9iE,UAAa,CAAC,OAAO,CAAC;AAE3C,IAAIk1D,UAA8B,GAAG,IAAI;AAEzC,MAAMrY,oBAAgE,GACpEzlD,OAAO,IACJ;EACH,OAAO;AACLggC,IAAAA,MAAM,EAAEA,CAAC75B,GAAG,EAAEjF,KAAK,KAAKqR,cAAc,CAACpM,GAAG,EAAEjF,KAAK,EAAEm0C,mBAAmB,CAAC;IACvE30B,QAAQ,EAAEA,CAACva,GAAG,EAAEjF,KAAK,KACnBqR,cAAc,CAACpM,GAAG,EAAEjF,KAAK,EAAG9D,CAAC,IAAKA,CAAC,KAAK1C,MAAS,IAAI0C,CAAC,KAAK1C,OAAU,CAAC;AACxE+lC,IAAAA,UAAU,EAAEA,CAACt6B,GAAG,EAAEjF,KAAK,KAAA;AAAA,MAAA,IAAA6K,IAAA;MAAA,OAAA,CAAAA,IAAA,GACpBnD,eAAkB,CAAC1H,KAAK,CAAC,GACtBygD,uBAAuB,CAACzgD,KAAK,EAAElB,OAAO,CAAC,GACvC,IAAI,cAAA+L,IAAA,KAAA,MAAA,GAAAA,IAAA,GAAK1O,SAAS;AAAA,IAAA;GACzB;AACH,CAAC;;AC5ZD;AACA;AACA;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMsuE,QAAQ,SAAS1wB,MAAM,CAAC;AACnC;AACF;AACA;AACA;AACA;AACA;AACA;;AAME;AACF;AACA;AACA;AACA;AACA;AACA;;AAME;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAME;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;;EAGE,OAAO5nC,GAAGA,CAACrT,OAAgB,EAAmB;IAC5C,MAAM+lB,QAAQ,GAAG,KAAK,CAAC1S,GAAG,CAACr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"}