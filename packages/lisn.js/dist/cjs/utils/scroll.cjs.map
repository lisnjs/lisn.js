{"version":3,"file":"scroll.cjs","names":["MC","_interopRequireWildcard","require","MH","_settings","_cssAlter","_directions","_domEvents","_domOptimize","_event","_log","_math","_validation","_xMap","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","value","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","toString","from","test","_defineProperty","_toPropertyKey","_toPrimitive","toPrimitive","String","Number","isScrollable","exports","element","options","_ref","axis","active","noCache","_isScrollableCache$ge","cachedResult","isScrollableCache","isNullish","offset","result","doCache","concat","elScrollTo","toLowerCase","canScroll","dimension","sGet","setTimer","deleteKey","prune","IS_SCROLLABLE_CACHE_TIMEOUT","getClosestScrollable","ancestor","parentOf","getCurrentScrollAction","scrollable","toScrollableOrDefault","action","currentScrollAction","copyObject","scrollTo","to","userOptions","getOptions","_scrollable","currentScroll","cancel","isCancelled","cancelFn","_weCanInterrupt","scrollEvents","preventScrollHandler","_userCanInterrupt","_iterator","_step","eventType","addEventListenerTo","once","err","preventDefault","_iterator2","_step2","passive","promise","initiateScroll","thisScrollAction","waitFor","cleanup","_i","_scrollEvents","removeEventListenerFrom","isValidScrollDirection","direction","includes","SCROLL_DIRECTIONS","isValidScrollDirectionList","directions","isValidStrList","mapScrollable","original","actualScrollable","mappedScrollables","unmapScrollable","getClientWidthNow","isScrollableBodyInQuirks","offsetWidth","getBorderWidth","S_LEFT","S_RIGHT","S_CLIENT_WIDTH","getClientHeightNow","offsetHeight","S_TOP","S_BOTTOM","S_CLIENT_HEIGHT","tryGetMainContentElement","mainContentElement","fetchMainContentElement","_ref2","_callee","_callee$","_context","init","tryGetMainScrollableElement","mainScrollableElement","fetchMainScrollableElement","_ref3","_callee2","_callee2$","_context2","getDefaultScrollingElement","body","getBody","getDocScrollingElement","tryGetScrollableElement","target","toScrollableOrMain","fetchScrollableElement","_ref4","_callee3","_callee3$","_context3","_x","newXMap","newMap","DIFF_THRESHOLD","arePositionsDifferent","start","end","maxAbs","top","left","getMain","isElement","getWindow","getDoc","usageError","_options$weCanInterru","_options$userCanInter","getTargetCoordinates","altTarget","_target","_offset","_altTarget","_altOffset","altOffset","_duration","duration","weCanInterrupt","userCanInterrupt","docScrollingElement","contains","S_SCROLL_TOP","getBoundingClientRect","S_SCROLL_LEFT","isString","targetEl","docQuerySelector","isObject","getStartEndPosition","_ref5","_callee4","applyOffset","_callee4$","_context4","waitForMeasureTime","position","getEndPosition","_x2","startPosition","targetCoordinates","endPosition","isFunction","scrollH","S_SCROLL_HEIGHT","scrollW","S_SCROLL_WIDTH","clientH","clientW","min","max","_ref6","_callee6","startTime","previousTimeStamp","currentPosition","_step3","_callee6$","_context6","step","_ref7","_callee5","timeStamp","elapsed","progress","_callee5$","_context5","waitForMutateTime","timeNow","easeInOutQuad","_x3","_x4","side","ceil","parseFloat","getComputedStylePropNow","initPromise","_callee7","mainScrollableElementSelector","contentElement","_callee7$","_context7","settings","waitForElementOrInteractive","logError","isHTMLElement","logWarn","hasDOM","waitForInteractive"],"sources":["../../../src/ts/utils/scroll.ts"],"sourcesContent":["/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  ScrollDirection,\n  ScrollTarget,\n  TargetCoordinates,\n  CoordinateOffset,\n  ScrollPosition,\n  Offset,\n} from \"@lisn/globals/types\";\n\nimport { getComputedStylePropNow } from \"@lisn/utils/css-alter\";\nimport { SCROLL_DIRECTIONS } from \"@lisn/utils/directions\";\nimport {\n  waitForInteractive,\n  waitForElementOrInteractive,\n} from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { maxAbs, easeInOutQuad } from \"@lisn/utils/math\";\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Scrolling\n */\nexport type ScrollAction = {\n  cancel: () => boolean;\n\n  /**\n   * Will reject if the scroll is cancelled.\n   */\n  waitFor: () => Promise<ScrollPosition>;\n};\n\n/**\n * @category Scrolling\n * @interface\n */\nexport type ScrollToOptions = {\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue If `document.body` is scrollable, will use that; otherwise `document.scrollingElement`\n   */\n  scrollable?: Element;\n\n  /**\n   * Offset the target coordinates by the given amount(s).\n   *\n   * E.g. if the final target coordinates are computed to be\n   * `{top: 100, left: 0}` and you specify offset as `{top: 10, left: 20}`, it\n   * will scroll to  `{top: 110, left: 20}`.\n   *\n   * @defaultValue undefined\n   */\n  offset?: CoordinateOffset;\n\n  // TODO maybe support fixed velocity as an alternative to fixed duration?\n  /**\n   * The duration of the scroll animation. If not given, it is instant.\n   *\n   * @defaultValue 0\n   */\n  duration?: number;\n\n  /**\n   * Whether another request to us to scroll the same target can interrupt this\n   * scroll before it finishes.\n   *\n   * @defaultValue false\n   */\n  weCanInterrupt?: boolean;\n\n  /**\n   * Whether a user attempt to scroll the target can interrupt this before it\n   * finishes.\n   *\n   * @defaultValue false\n   */\n  userCanInterrupt?: boolean;\n\n  /**\n   * If the scrolling element is already at the given coordinates (or strictly\n   * speaking we allow for 5 pixels difference), then if `altTarget` is given,\n   * this will become the target to scroll to.\n   *\n   * @defaultValue undefined\n   */\n  altTarget?: TargetCoordinates | Element | string;\n\n  /**\n   * Offset the target coordinates by the given amount(s) when `altTarget` is used.\n   *\n   * See {@link ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined\n   */\n  altOffset?: CoordinateOffset;\n};\n\n// ----------\n\n/**\n * Returns true if the given element is scrollable in the given direction, or\n * in either direction (if `axis` is not given).\n *\n * **IMPORTANT:** If you enable `active` then be aware that:\n * 1. It may attempt to scroll the target in order to determine whether it's\n *    scrollable in a more reliable way than the default method of comparing\n *    clientWidth/Height to scrollWidth/Height. If there is currently any\n *    ongoing scroll on the target, this will stop it, so never use that inside\n *    scroll-triggered handlers.\n * 2. If the layout has been invalidated and not yet recalculated,\n *    this will cause a forced layout, so always {@link waitForMeasureTime}\n *    before calling this function when possible.\n *\n * @param {} [options.axis]    One of \"x\" or \"y\" for horizontal or vertical\n *                             scroll respectively. If not given, it checks\n *                             both.\n * @param {} [options.active]  If true, then if the target's current scroll\n *                             offset is 0, it will attempt to scroll it rather\n *                             than looking at the clientWidth/Height to\n *                             scrollWidth/Height. This is more reliable but can\n *                             cause issues, see note above.\n * @param {} [options.noCache] By default the result of a check is cached for\n *                             1s and if there's already a cached result for\n *                             this element, it is returns. Set this to true to\n *                             disable checking the cache and also saving the\n *                             result into the cache.\n *\n * @category Scrolling\n */\nexport const isScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n): boolean => {\n  const { axis, active, noCache } = options || {};\n  if (!axis) {\n    return (\n      isScrollable(element, { axis: \"y\", active, noCache }) ||\n      isScrollable(element, { axis: \"x\", active, noCache })\n    );\n  }\n\n  if (!noCache) {\n    const cachedResult = isScrollableCache.get(element)?.get(axis);\n    if (!MH.isNullish(cachedResult)) {\n      return cachedResult;\n    }\n  }\n\n  const offset = axis === \"x\" ? \"Left\" : \"Top\";\n  let result = false;\n  let doCache = !noCache;\n\n  if (element[`scroll${offset}`]) {\n    result = true;\n  } else if (active) {\n    // Use scrollTo with explicit behavior set to instant instead of setting\n    // the scrollTop/Left properties since the latter doesn't work with\n    // scroll-behavior smooth.\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 1 });\n    const canScroll = element[`scroll${offset}`] > 0;\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 0 });\n    result = canScroll;\n  } else {\n    const dimension = axis === \"x\" ? \"Width\" : \"Height\";\n    result = element[`scroll${dimension}`] > element[`client${dimension}`];\n    // No need to cache a passive check.\n    doCache = false;\n  }\n\n  if (doCache) {\n    isScrollableCache.sGet(element).set(axis, result);\n    MH.setTimer(() => {\n      MH.deleteKey(isScrollableCache.get(element), axis);\n      isScrollableCache.prune(element);\n    }, IS_SCROLLABLE_CACHE_TIMEOUT);\n  }\n\n  return result;\n};\n\n/**\n * Returns the closest scrollable ancestor of the given element, _not including\n * it_.\n *\n * @param {} options See {@link isScrollable}\n *\n * @return {} `null` if no scrollable ancestors are found.\n *\n * @category Scrolling\n */\nexport const getClosestScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n) => {\n  // Walk up the tree, starting at the element in question but excluding it.\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = MH.parentOf(ancestor))) {\n    if (isScrollable(ancestor, options)) {\n      return ancestor;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Returns the current {@link ScrollAction} if any.\n *\n * @category Scrolling\n */\nexport const getCurrentScrollAction = (\n  scrollable?: Element,\n): ScrollAction | null => {\n  scrollable = toScrollableOrDefault(scrollable);\n  const action = currentScrollAction.get(scrollable);\n  if (action) {\n    return MH.copyObject(action);\n  }\n  return null;\n};\n\n/**\n * Scrolls the given scrollable element to the given `to` target.\n *\n * Returns `null` if there's an ongoing scroll that is not cancellable.\n *\n * Note that if `to` is an element or a selector, then it _must_ be a\n * descendant of the scrollable element.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *               If the target coordinates are invalid.\n *\n * @param {} to  If this is an element, then its top-left position is used as\n *               the target coordinates. If it is a string, then it is treated\n *               as a selector for an element using `querySelector`.\n *\n * @return {} `null` if there's an ongoing scroll that is not cancellable,\n * otherwise a {@link ScrollAction}.\n *\n * @category Scrolling\n */\nexport const scrollTo = (\n  to: TargetCoordinates | Element | string,\n  userOptions?: ScrollToOptions,\n): ScrollAction | null => {\n  const options = getOptions(to, userOptions);\n  const scrollable = options._scrollable;\n\n  // cancel current scroll action if any\n  const currentScroll = currentScrollAction.get(scrollable);\n  if (currentScroll) {\n    if (!currentScroll.cancel()) {\n      // current scroll action is not cancellable by us\n      return null;\n    }\n  }\n\n  let isCancelled = false;\n\n  const cancelFn = options._weCanInterrupt\n    ? () => (isCancelled = true)\n    : () => false;\n\n  const scrollEvents = [\"touchmove\", \"wheel\"]; // don't bother with keyboard\n  let preventScrollHandler: EventListener | null = null;\n\n  if (options._userCanInterrupt) {\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(\n        scrollable,\n        eventType,\n        () => {\n          isCancelled = true;\n        },\n        { once: true },\n      );\n    }\n  } else {\n    preventScrollHandler = MH.preventDefault;\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(scrollable, eventType, preventScrollHandler, {\n        passive: false,\n      });\n    }\n  }\n\n  const promise = initiateScroll(options, () => isCancelled);\n\n  const thisScrollAction: ScrollAction = {\n    waitFor: () => promise,\n    cancel: cancelFn,\n  };\n\n  const cleanup = () => {\n    if (currentScrollAction.get(scrollable) === thisScrollAction) {\n      MH.deleteKey(currentScrollAction, scrollable);\n    }\n\n    if (preventScrollHandler) {\n      for (const eventType of scrollEvents) {\n        removeEventListenerFrom(scrollable, eventType, preventScrollHandler, {\n          passive: false,\n        });\n      }\n    }\n  };\n\n  thisScrollAction.waitFor().then(cleanup).catch(cleanup);\n\n  currentScrollAction.set(scrollable, thisScrollAction);\n  return thisScrollAction;\n};\n\n/**\n * Returns true if the given string is a valid scroll direction.\n *\n * @category Validation\n */\nexport const isValidScrollDirection = (\n  direction: string,\n): direction is ScrollDirection => MH.includes(SCROLL_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid scroll\n * directions.\n *\n * @category Validation\n */\nexport const isValidScrollDirectionList = (directions: string | string[]) =>\n  isValidStrList(directions, isValidScrollDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const mapScrollable = (original: Element, actualScrollable: Element) =>\n  mappedScrollables.set(original, actualScrollable);\n\n/**\n * @ignore\n * @internal\n */\nexport const unmapScrollable = (original: Element) =>\n  MH.deleteKey(mappedScrollables, original);\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientWidthNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetWidth -\n      getBorderWidth(element, MC.S_LEFT) -\n      getBorderWidth(element, MC.S_RIGHT)\n    : element[MC.S_CLIENT_WIDTH];\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientHeightNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetHeight -\n      getBorderWidth(element, MC.S_TOP) -\n      getBorderWidth(element, MC.S_BOTTOM)\n    : element[MC.S_CLIENT_HEIGHT];\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainContentElement = (): HTMLElement | null =>\n  mainContentElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainContentElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainContentElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainScrollableElement = (): HTMLElement | null =>\n  mainScrollableElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainScrollableElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainScrollableElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultScrollingElement = () => {\n  const body = MH.getBody();\n  return isScrollable(body) ? body : MH.getDocScrollingElement() || body;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetScrollableElement = (\n  target: ScrollTarget | null | undefined,\n): Element | null => toScrollableOrMain(target, tryGetMainScrollableElement);\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchScrollableElement = async (\n  target: ScrollTarget | null | undefined,\n): Promise<Element> => toScrollableOrMain(target, fetchMainScrollableElement);\n\n// ----------------------------------------\n\ntype ScrollToOptionsInternal = {\n  _target: TargetCoordinates;\n  _offset: CoordinateOffset | null;\n  _altTarget: TargetCoordinates | null;\n  _altOffset: CoordinateOffset | null;\n  _scrollable: Element;\n  _duration: number;\n  _weCanInterrupt: boolean;\n  _userCanInterrupt: boolean;\n};\n\nconst IS_SCROLLABLE_CACHE_TIMEOUT = 1000;\n\nconst isScrollableCache = newXMap<Element, Map<\"x\" | \"y\", boolean>>(() =>\n  MH.newMap(),\n);\n\nconst mappedScrollables = MH.newMap<Element, Element>();\n\nconst currentScrollAction = MH.newMap<Element, ScrollAction>();\n\nconst DIFF_THRESHOLD = 5;\nconst arePositionsDifferent = (start: ScrollPosition, end: ScrollPosition) =>\n  maxAbs(start.top - end.top, start.left - end.left) >= DIFF_THRESHOLD;\n\nconst toScrollableOrMain = <R>(\n  target: ScrollTarget | null | undefined,\n  getMain: () => R,\n): Element | R => {\n  if (MH.isElement(target)) {\n    return mappedScrollables.get(target) || target;\n  }\n\n  if (!target || target === MH.getWindow() || target === MH.getDoc()) {\n    return getMain();\n  }\n\n  throw MH.usageError(\"Unsupported scroll target\");\n};\n\nconst toScrollableOrDefault = (scrollable: Element | undefined): Element =>\n  scrollable ?? getDefaultScrollingElement();\n\nconst getOptions = (\n  to: TargetCoordinates | Element | string,\n  options: ScrollToOptions | undefined,\n): ScrollToOptionsInternal => {\n  const scrollable = toScrollableOrDefault(options?.scrollable);\n  const target = getTargetCoordinates(scrollable, to);\n  const altTarget = options?.altTarget\n    ? getTargetCoordinates(scrollable, options?.altTarget)\n    : null;\n\n  return {\n    _target: target,\n    _offset: options?.offset || null,\n    _altTarget: altTarget,\n    _altOffset: options?.altOffset || null,\n    _scrollable: scrollable,\n    _duration: options?.duration || 0,\n    _weCanInterrupt: options?.weCanInterrupt ?? false,\n    _userCanInterrupt: options?.userCanInterrupt ?? false,\n  };\n};\n\nconst getTargetCoordinates = (\n  scrollable: Element,\n  target: TargetCoordinates | Element | string,\n): TargetCoordinates => {\n  const docScrollingElement = MH.getDocScrollingElement();\n\n  if (MH.isElement(target)) {\n    if (scrollable === target || !scrollable.contains(target)) {\n      throw MH.usageError(\"Target must be a descendant of the scrollable one\");\n    }\n\n    return {\n      top: () =>\n        scrollable[MC.S_SCROLL_TOP] +\n        MH.getBoundingClientRect(target).top -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).top),\n      left: () =>\n        scrollable[MC.S_SCROLL_LEFT] +\n        MH.getBoundingClientRect(target).left -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).left),\n    };\n  }\n\n  if (MH.isString(target)) {\n    const targetEl = MH.docQuerySelector(target);\n    if (!targetEl) {\n      throw MH.usageError(`No match for '${target}'`);\n    }\n\n    return getTargetCoordinates(scrollable, targetEl);\n  }\n\n  if (!MH.isObject(target) || !(\"top\" in target || \"left\" in target)) {\n    throw MH.usageError(\"Invalid coordinates\");\n  }\n\n  return target;\n};\n\nconst getStartEndPosition = async (\n  options: ScrollToOptionsInternal,\n): Promise<{ start: ScrollPosition; end: ScrollPosition }> => {\n  await waitForMeasureTime();\n\n  const applyOffset = (\n    position: ScrollPosition,\n    offset: CoordinateOffset | null,\n  ) => {\n    position.top += offset?.top || 0;\n    position.left += offset?.left || 0;\n  };\n\n  const scrollable = options._scrollable;\n  const start = {\n    top: scrollable[MC.S_SCROLL_TOP],\n    left: scrollable[MC.S_SCROLL_LEFT],\n  };\n\n  let end = getEndPosition(scrollable, start, options._target);\n  applyOffset(end, options._offset);\n\n  if (!arePositionsDifferent(start, end) && options._altTarget) {\n    end = getEndPosition(scrollable, start, options._altTarget);\n    applyOffset(end, options._altOffset);\n  }\n\n  return { start, end };\n};\n\n// must be called in \"measure time\"\nconst getEndPosition = (\n  scrollable: Element,\n  startPosition: ScrollPosition,\n  targetCoordinates: TargetCoordinates,\n): ScrollPosition => {\n  // by default no change in scroll top or left\n  const endPosition = MH.copyObject(startPosition);\n\n  if (!MH.isNullish(targetCoordinates?.top)) {\n    if (MH.isFunction(targetCoordinates.top)) {\n      endPosition.top = targetCoordinates.top(scrollable);\n    } else {\n      endPosition.top = targetCoordinates.top;\n    }\n  }\n\n  if (!MH.isNullish(targetCoordinates?.left)) {\n    if (MH.isFunction(targetCoordinates.left)) {\n      endPosition.left = targetCoordinates.left(scrollable);\n    } else {\n      endPosition.left = targetCoordinates.left;\n    }\n  }\n\n  // Set boundaries\n  const scrollH = scrollable[MC.S_SCROLL_HEIGHT];\n  const scrollW = scrollable[MC.S_SCROLL_WIDTH];\n  const clientH = getClientHeightNow(scrollable);\n  const clientW = getClientWidthNow(scrollable);\n  endPosition.top = MH.min(scrollH - clientH, endPosition.top);\n  endPosition.top = MH.max(0, endPosition.top);\n\n  endPosition.left = MH.min(scrollW - clientW, endPosition.left);\n  endPosition.left = MH.max(0, endPosition.left);\n\n  return endPosition;\n};\n\nconst initiateScroll = async (\n  options: ScrollToOptionsInternal,\n  isCancelled: () => boolean,\n) => {\n  const position = await getStartEndPosition(options);\n  const duration = options._duration;\n  const scrollable = options._scrollable;\n\n  let startTime: number, previousTimeStamp: number;\n  let currentPosition: ScrollPosition = position.start;\n\n  const step = async () => {\n    await waitForMutateTime(); // effectively next animation frame\n    // Element.scrollTo equates to a measurement and needs to run after\n    // painting to avoid forced layout.\n    await waitForMeasureTime();\n    const timeStamp = MH.timeNow();\n\n    if (isCancelled()) {\n      // Reject the promise\n      throw currentPosition;\n    }\n\n    if (!startTime) {\n      // If it's very close to the target, no need to scroll smoothly\n      if (\n        duration === 0 ||\n        !arePositionsDifferent(currentPosition, position.end)\n      ) {\n        MH.elScrollTo(scrollable, position.end);\n        return position.end;\n      }\n\n      startTime = timeStamp;\n    }\n\n    if (startTime !== timeStamp && previousTimeStamp !== timeStamp) {\n      const elapsed = timeStamp - startTime;\n      const progress = easeInOutQuad(MH.min(1, elapsed / duration));\n\n      currentPosition = {\n        top:\n          position.start.top +\n          (position.end.top - position.start.top) * progress,\n        left:\n          position.start.left +\n          (position.end.left - position.start.left) * progress,\n      };\n\n      MH.elScrollTo(scrollable, currentPosition);\n\n      if (progress === 1) {\n        return currentPosition;\n      }\n    }\n\n    previousTimeStamp = timeStamp;\n    return step();\n  };\n\n  return step();\n};\n\nconst isScrollableBodyInQuirks = (element: Element): element is HTMLElement =>\n  element === MH.getBody() && MH.getDocScrollingElement() === null;\n\n// must be called in \"measure time\"\nconst getBorderWidth = (element: Element, side: Offset) =>\n  MH.ceil(MH.parseFloat(getComputedStylePropNow(element, `border-${side}`)));\n\n// ------------------------------\n\nlet mainContentElement: HTMLElement;\nlet mainScrollableElement: HTMLElement;\n\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      const mainScrollableElementSelector =\n        settings.mainScrollableElementSelector;\n\n      const contentElement = await waitForElementOrInteractive(() => {\n        return mainScrollableElementSelector\n          ? MH.docQuerySelector(mainScrollableElementSelector)\n          : MH.getBody(); // default if no selector\n      });\n\n      // defaults\n      mainScrollableElement = getDefaultScrollingElement();\n      mainContentElement = MH.getBody();\n\n      if (!contentElement) {\n        logError(\n          MH.usageError(\n            `No match for '${mainScrollableElementSelector}'. ` +\n              \"Scroll tracking/capturing may not work as intended.\",\n          ),\n        );\n      } else if (!MH.isHTMLElement(contentElement)) {\n        logWarn(\"mainScrollableElementSelector should point to an HTMLElement\");\n      } else if (contentElement !== mainContentElement) {\n        mainScrollableElement = mainContentElement = contentElement;\n      }\n    })();\n  }\n\n  return initPromise;\n};\n\n// Try to find the main scrollable/content elements asap so that tryGetMain*\n// can return them if called before fetchMain*\nif (MH.hasDOM()) {\n  waitForInteractive().then(init);\n}\n"],"mappings":"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","ignoreList":[]}