{"version":3,"file":"log.cjs","names":["MC","_interopRequireWildcard","require","MH","_text","_callback","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","Symbol","iterator","isArray","length","logInfo","exports","_len","arguments","args","_key","isMessageSeen","consoleInfo","apply","LOG_PREFIX","concat","logWarn","_len2","_key2","consoleWarn","logError","_len3","_key3","lengthOf","Callback","REMOVE","consoleError","discardMessages","newSet","msg","joinAsString","isSeen","add"],"sources":["../../../src/ts/utils/log.ts"],"sourcesContent":["/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LogFunction } from \"@lisn/globals/types\";\n\nimport { joinAsString } from \"@lisn/utils/text\";\n\nimport { Callback } from \"@lisn/modules/callback\";\n\n/**\n * Like `console.info` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logInfo: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleInfo(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.warn` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logWarn: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleWarn(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.error` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logError: LogFunction = (...args) => {\n  if (\n    (MH.lengthOf(args) > 1 || args[0] !== Callback.REMOVE) &&\n    !isMessageSeen(args)\n  ) {\n    MH.consoleError(MC.LOG_PREFIX, ...args);\n  }\n};\n\nconst discardMessages = MH.newSet<string>();\nconst isMessageSeen = (args: unknown[]) => {\n  const msg = joinAsString(\" \", ...args);\n  const isSeen = discardMessages.has(msg);\n  discardMessages.add(msg);\n  return isSeen;\n};\n"],"mappings":"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","ignoreList":[]}