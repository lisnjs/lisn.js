{"version":3,"file":"view-trigger.js","names":["MC","MH","hasClass","insertGhostClone","tryWrap","waitForReferenceElement","formatAsString","validateStrList","validateString","validateNumList","getOppositeViews","isValidView","isValidScrollOffset","Animate","AnimatePlay","ViewWatcher","registerTrigger","Trigger","debug","ViewTrigger","register","element","args","actions","config","assign","views","newConfigValidator","constructor","_config$rootMargin","_defineProperty","logger","Logger","name","getConfig","copyObject","lengthOf","watcher","reuse","root","rootMargin","replace","threshold","target","S_AT","oppositeViews","setupWatcher","debug6","run","onView","reverse","willAnimate","action","isInstanceOf","setupRepresentative","then","key","value","_ref","isLiteralString","undefined","_ref2","prev","previousElementSibling","prevChild","childrenOf","PREFIX_WRAPPER","PREFIX_GHOST","_clone"],"sources":["../../../src/ts/triggers/view-trigger.ts"],"sourcesContent":["/**\n * @module Triggers\n *\n * @categoryDescription View\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { ViewTarget, View, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { hasClass } from \"@lisn/utils/css-alter\";\nimport { insertGhostClone, tryWrap } from \"@lisn/utils/dom-alter\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateString,\n  validateNumList,\n} from \"@lisn/utils/validation\";\nimport {\n  getOppositeViews,\n  isValidView,\n  isValidScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport { Action } from \"@lisn/actions/action\";\nimport { Animate } from \"@lisn/actions/animate\";\nimport { AnimatePlay } from \"@lisn/actions/animate-play\";\n\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (optional): One or more (comma-separated) {@link View}s.\n *   Default is \"at\".\n * - Additional trigger options:\n *   - `target`: A string element specification for an element (see\n *     {@link Utils.getReferenceElement | getReferenceElement}) or a\n *     {@link Types.ScrollOffset | ScrollOffset}.\n *   - `root`: A string element specification. See\n *     {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `rootMargin`: A string.\n *   - `threshold`: A number or list (comma-separated) of numbers.\n *\n * @example\n * Show the element when it's in the viewport, hide otherwise.\n *\n * ```html\n * <div data-lisn-on-view=\"at @show\"></div>\n * ```\n *\n * @example\n * Same as above. \"views\" is optional and defaults to \"at\".\n *\n * ```html\n * <div data-lisn-on-view=\"@show\"></div>\n * ```\n *\n * @example\n * As above but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-view--@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the first time it enters the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@show +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `seen` the first time the element enters the viewport, and play\n * the animations defined on it 1000ms after each time it enters the viewport,\n * reverse the animations as soon as it goes out of view.\n *\n * ```html\n * <div data-lisn-on-view=\"@add-class=seen +once ;\n *                         @animate +do-delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * Add class `seen` when the viewport is at or below the element (element\n * above viewport), remove it when the viewport is above the element.\n * Element going to the left or right of the viewport will not trigger the\n * action. See {@link getOppositeViews}:\n *\n * ```html\n * <div data-lisn-on-view=\"at,below @add-class=seen\"></div>\n * ```\n *\n * @example\n * Add class `cls` when the viewport is above or to the left the element\n * (element below or to the right of the viewport), remove it when the\n * viewport is either at, below or to the right of the element.\n *\n * ```html\n * <div data-lisn-on-view=\"above,left @add-class=cls\"></div>\n * ```\n *\n * @example\n * Hide the element when the viewport is above the next element with class\n * `section`, show it when the viewport is below or at the target element.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next.section\"></div>\n * <div class=\"section\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next-section\"></div>\n * <div data-lisn-ref=\"section\"></div>\n * ```\n *\n * @example\n * Open the {@link Widgets.Openable | Openable} widget configured for this\n * element when the viewport is 75% down from the top of the page.\n *\n * ```html\n * <div data-lisn-on-view=\"@open +target=top:75%\"></div>\n * ```\n *\n * @category View\n */\nexport class ViewTrigger extends Trigger {\n  readonly getConfig: () => ViewTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"view\",\n      (element, args, actions, config) => {\n        return new ViewTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            views: validateStrList(\"views\", args, isValidView),\n          } as const),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config?: ViewTriggerConfig) {\n    super(element, actions, config);\n\n    const logger = debug\n      ? new debug.Logger({\n          name: `ViewTrigger-${formatAsString(element)}`,\n        })\n      : null;\n\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const watcher = ViewWatcher.reuse({\n      root: config?.root,\n      rootMargin: config?.rootMargin?.replace(/,/g, \" \"),\n      threshold: config?.threshold,\n    });\n\n    const target = config?.target || element;\n    const views = config?.views || MC.S_AT;\n    const oppositeViews = getOppositeViews(views);\n\n    const setupWatcher = (target: ViewTarget) => {\n      if (!MH.lengthOf(oppositeViews)) {\n        debug: logger?.debug6(\"Trigger can never be reversed, running now\");\n        // The action is never undone\n        this.run();\n      } else {\n        debug: logger?.debug6(\"Setting up trigger\", views, oppositeViews);\n        watcher.onView(target, this.run, { views });\n        watcher.onView(target, this.reverse, { views: oppositeViews });\n      }\n    };\n\n    // See comment in globals/settings under contentWrappingAllowed\n    let willAnimate = false;\n    for (const action of actions) {\n      if (\n        MH.isInstanceOf(action, Animate) ||\n        MH.isInstanceOf(action, AnimatePlay)\n      ) {\n        willAnimate = true;\n        break;\n      }\n    }\n\n    if (willAnimate) {\n      setupRepresentative(element).then(setupWatcher);\n    } else {\n      setupWatcher(target);\n    }\n  }\n}\n\n/**\n * @category View\n * @interface\n */\nexport type ViewTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link View} to use as the trigger.\n   * See also {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * Actions will be \"done\" when the view matches the given spec and \"undone\"\n   * otherwise. What the opposite views are depends on the given view. E.g. for\n   * \"at\", opposites are all the other ones;  for \"above\", the opposite ones\n   * are \"at\" and \"below\"; for \"at,above\" opposite is \"below\", etc.\n   *\n   * @defaultValue \"at\"\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * The target to use for the ViewWatcher. It can be a string offset\n   * specification.\n   * See {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * @defaultValue The element on which the {@link ViewTrigger} is defined\n   */\n  target?: ViewTarget;\n\n  /**\n   * The root to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  root?: Element | null;\n\n  /**\n   * The root margin to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * It can be either space-separated or comma-separated.\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  threshold?: number | number[];\n};\n\n// ----------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<ViewTriggerConfig, \"views\">\n> = (element) => {\n  return {\n    target: (key, value) =>\n      MH.isLiteralString(value) && isValidScrollOffset(value)\n        ? value\n        : ((MH.isLiteralString(value)\n            ? waitForReferenceElement(value, element)\n            : null) ?? undefined),\n    root: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    rootMargin: validateString,\n    threshold: (key, value) => validateNumList(key, value),\n  };\n};\n\nconst setupRepresentative = async (element: Element): Promise<Element> => {\n  let target: Element | null = await tryWrap(element);\n  if (!target) {\n    // Not allowed to wrap. Create a dummy hidden clone that's not animated and\n    // position it absolutely in a wrapper of size 0 that's inserted just\n    // before the actual element, so that the hidden clone overlaps the actual\n    // element's regular (pre-transformed) position.\n\n    const prev = element.previousElementSibling;\n    const prevChild = MH.childrenOf(prev)[0];\n    if (\n      prev &&\n      hasClass(prev, MC.PREFIX_WRAPPER) &&\n      prevChild &&\n      hasClass(prevChild, MC.PREFIX_GHOST)\n    ) {\n      // Already cloned by a previous animate action?\n      target = prevChild;\n    } else {\n      target = (await insertGhostClone(element))._clone;\n    }\n  }\n\n  return target;\n};\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,EAAE;AACd,OAAO,KAAKC,EAAE;AAId,SAASC,QAAQ;AACjB,SAASC,gBAAgB,EAAEC,OAAO;AAClC,SAASC,uBAAuB;AAChC,SAASC,cAAc;AACvB,SACEC,eAAe,EACfC,cAAc,EACdC,eAAe;AAEjB,SACEC,gBAAgB,EAChBC,WAAW,EACXC,mBAAmB;AAIrB,SAASC,OAAO;AAChB,SAASC,WAAW;AAEpB,SAASC,WAAW;AAEpB,SACEC,eAAe,EACfC,OAAO;AAMT,OAAOC,KAAK;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,SAASF,OAAO,CAAC;EAGvC,OAAOG,QAAQA,CAAA,EAAG;IAChBJ,eAAe,CACb,MAAM,EACN,CAACK,OAAO,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,KAAK;MAClC,OAAO,IAAIL,WAAW,CACpBE,OAAO,EACPE,OAAO,EACPtB,EAAE,CAACwB,MAAM,CAACD,MAAM,EAAE;QAChBE,KAAK,EAAEnB,eAAe,CAAC,OAAO,EAAEe,IAAI,EAAEX,WAAW;MACnD,CAAU,CACZ,CAAC;IACH,CAAC,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","ignoreList":[]}