{"version":3,"file":"open.js","names":["MC","Openable","fetchUniqueWidget","registerAction","Open","register","element","constructor","_defineProperty","open","widget","close","toggle","widgetPromise","do","then","undo","S_TOGGLE"],"sources":["../../../src/ts/actions/open.ts"],"sourcesContent":["/**\n * @module Actions\n *\n * @categoryDescription Controlling openables\n * {@link Open} opens or closes the {@link Openable} widget setup for the given\n * element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { Openable } from \"@lisn/widgets/openable\";\nimport { fetchUniqueWidget } from \"@lisn/widgets/widget\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Opens or closes the {@link Openable} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"open\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-modal\" data-lisn-on-view=\"@open +reference=top:50%\"></div>\n * ```\n *\n * @category Controlling openables\n */\nexport class Open implements Action {\n  /**\n   * Opens the Openable widget setup for the element.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Closes the Openable widget setup for the element.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the Openable widget setup for the element.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"open\", (element) => new Open(element));\n  }\n\n  constructor(element: Element) {\n    const open = (widget: Openable | null) => widget?.open();\n    const close = (widget: Openable | null) => widget?.close();\n    const toggle = (widget: Openable | null) => widget?.toggle();\n\n    const widgetPromise = fetchUniqueWidget(\"openable\", element, Openable);\n\n    this.do = () => widgetPromise.then(open);\n    this.undo = () => widgetPromise.then(close);\n    this[MC.S_TOGGLE] = () => widgetPromise.then(toggle);\n  }\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,EAAE;AAEd,SAASC,QAAQ;AACjB,SAASC,iBAAiB;AAE1B,SAAiBC,cAAc;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,IAAI,CAAmB;EAgBlC,OAAOC,QAAQA,CAAA,EAAG;IAChBF,cAAc,CAAC,MAAM,EAAGG,OAAO,IAAK,IAAIF,IAAI,CAACE,OAAO,CAAC,CAAC;EACxD;EAEAC,WAAWA,CAACD,OAAgB,EAAE;IAnB9B;AACF;AACA;IAFEE,eAAA;IAKA;AACF;AACA;IAFEA,eAAA;IAKA;AACF;AACA;IAFEA,eAAA;IAUE,MAAMC,IAAI,GAAIC,MAAuB,IAAKA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAED,IAAI,CAAC,CAAC;IACxD,MAAME,KAAK,GAAID,MAAuB,IAAKA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,KAAK,CAAC,CAAC;IAC1D,MAAMC,MAAM,GAAIF,MAAuB,IAAKA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,MAAM,CAAC,CAAC;IAE5D,MAAMC,aAAa,GAAGX,iBAAiB,CAAC,UAAU,EAAEI,OAAO,EAAEL,QAAQ,CAAC;IAEtE,IAAI,CAACa,EAAE,GAAG,MAAMD,aAAa,CAACE,IAAI,CAACN,IAAI,CAAC;IACxC,IAAI,CAACO,IAAI,GAAG,MAAMH,aAAa,CAACE,IAAI,CAACJ,KAAK,CAAC;IAC3C,IAAI,CAACX,EAAE,CAACiB,QAAQ,CAAC,GAAG,MAAMJ,aAAa,CAACE,IAAI,CAACH,MAAM,CAAC;EACtD;AACF","ignoreList":[]}