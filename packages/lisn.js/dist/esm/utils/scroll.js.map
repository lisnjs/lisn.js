{"version":3,"file":"scroll.js","names":["MC","MH","settings","animationFrameIterator","getComputedStylePropNow","SCROLL_DIRECTIONS","waitForInteractive","waitForElementOrInteractive","waitForMeasureTime","addEventListenerTo","removeEventListenerFrom","logError","logWarn","maxAbs","easeInOutQuad","isValidStrList","newXMap","isScrollable","element","options","axis","active","noCache","_isScrollableCache$ge","cachedResult","isScrollableCache","get","isNullish","offset","result","elScrollTo","toLowerCase","canScroll","dimension","hasOverflow","overflowProp","includes","sGet","set","setTimer","deleteKey","prune","IS_SCROLLABLE_CACHE_TIMEOUT","getClosestScrollable","ancestor","parentOf","getCurrentScrollAction","scrollable","toScrollableOrDefault","action","currentScrollAction","copyObject","scrollTo","to","userOptions","getOptions","_scrollable","currentScroll","cancel","isCancelled","cancelFn","_weCanInterrupt","scrollEvents","preventScrollHandler","_userCanInterrupt","eventType","once","preventDefault","passive","promise","initiateScroll","thisScrollAction","waitFor","cleanup","then","catch","isValidScrollDirection","direction","isValidScrollDirectionList","directions","mapScrollable","original","actualScrollable","mappedScrollables","unmapScrollable","getClientWidthNow","isScrollableBodyInQuirks","offsetWidth","getBorderWidth","S_LEFT","S_RIGHT","S_CLIENT_WIDTH","getClientHeightNow","offsetHeight","S_TOP","S_BOTTOM","S_CLIENT_HEIGHT","tryGetMainContentElement","mainContentElement","fetchMainContentElement","init","tryGetMainScrollableElement","mainScrollableElement","fetchMainScrollableElement","getDefaultScrollingElement","body","getBody","getDocScrollingElement","tryGetScrollableElement","target","toScrollableOrMain","fetchScrollableElement","newMap","DIFF_THRESHOLD","arePositionsDifferent","start","end","top","left","getMain","isElement","getWindow","getDoc","usageError","_options$weCanInterru","_options$userCanInter","getTargetCoordinates","altTarget","_target","_offset","_altTarget","_altOffset","altOffset","_duration","duration","weCanInterrupt","userCanInterrupt","docScrollingElement","contains","S_SCROLL_TOP","getBoundingClientRect","S_SCROLL_LEFT","isString","targetEl","docQuerySelector","isObject","getStartEndPosition","applyOffset","position","getEndPosition","startPosition","targetCoordinates","endPosition","isFunction","scrollH","S_SCROLL_HEIGHT","scrollW","S_SCROLL_WIDTH","clientH","clientW","min","max","currentPosition","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_asyncIterator","_step","next","done","totalElapsed","elapsedSinceLast__ignored","value","progress","s","err","return","side","ceil","parseFloat","initPromise","mainScrollableElementSelector","contentElement","isHTMLElement","hasDOM"],"sources":["../../../src/ts/utils/scroll.ts"],"sourcesContent":["/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  ScrollDirection,\n  ScrollTarget,\n  TargetCoordinates,\n  CoordinateOffset,\n  ScrollPosition,\n  Offset,\n} from \"@lisn/globals/types\";\n\nimport { animationFrameIterator } from \"@lisn/utils/animations\";\nimport { getComputedStylePropNow } from \"@lisn/utils/css-alter\";\nimport { SCROLL_DIRECTIONS } from \"@lisn/utils/directions\";\nimport {\n  waitForInteractive,\n  waitForElementOrInteractive,\n} from \"@lisn/utils/dom-events\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { maxAbs, easeInOutQuad } from \"@lisn/utils/math\";\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Scrolling\n */\nexport type ScrollAction = {\n  cancel: () => boolean;\n\n  /**\n   * Will reject if the scroll is cancelled.\n   */\n  waitFor: () => Promise<ScrollPosition>;\n};\n\n/**\n * @category Scrolling\n * @interface\n */\nexport type ScrollToOptions = {\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue If `document.body` is scrollable, will use that; otherwise `document.scrollingElement`\n   */\n  scrollable?: Element;\n\n  /**\n   * Offset the target coordinates by the given amount(s).\n   *\n   * E.g. if the final target coordinates are computed to be\n   * `{top: 100, left: 0}` and you specify offset as `{top: 10, left: 20}`, it\n   * will scroll to  `{top: 110, left: 20}`.\n   *\n   * @defaultValue undefined\n   */\n  offset?: CoordinateOffset;\n\n  // TODO maybe support fixed velocity as an alternative to fixed duration?\n  /**\n   * The duration of the scroll animation. If not given, it is instant.\n   *\n   * @defaultValue 0\n   */\n  duration?: number;\n\n  /**\n   * Whether another request to us to scroll the same target can interrupt this\n   * scroll before it finishes.\n   *\n   * @defaultValue false\n   */\n  weCanInterrupt?: boolean;\n\n  /**\n   * Whether a user attempt to scroll the target can interrupt this before it\n   * finishes.\n   *\n   * @defaultValue false\n   */\n  userCanInterrupt?: boolean;\n\n  /**\n   * If the scrolling element is already at the given coordinates (or strictly\n   * speaking we allow for 5 pixels difference), then if `altTarget` is given,\n   * this will become the target to scroll to.\n   *\n   * @defaultValue undefined\n   */\n  altTarget?: TargetCoordinates | Element | string;\n\n  /**\n   * Offset the target coordinates by the given amount(s) when `altTarget` is used.\n   *\n   * See {@link ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined\n   */\n  altOffset?: CoordinateOffset;\n};\n\n// ----------\n\n/**\n * Returns true if the given element is scrollable in the given direction, or\n * in either direction (if `axis` is not given).\n *\n * It first checks whether the current scroll offset on the target along the\n * given axis is non-0, and if so returns true immediately. Otherwise it will\n * attempt to determine if it's scrollable using one of these methods\n * (controlled by `options.active`):\n * - passive check (default): Will examine `clientWidth/Height`,\n *   `scrollWidth/Height` as well as the computed `overflow` CSS property to try\n *   to determine if the target is scrollable. This is not 100% reliable but is\n *   safer than the active check\n * - active check: Will attempt to scroll the target by 1px and examine if the\n *   scroll offset had changed, then revert it back to 0. This is a more\n *   reliable check, however it can cause issues in certain contexts. In\n *   particular, if a scroll on the target had just been initiated (but it's\n *   scroll offset was still 0), the scroll may be cancelled. Never use that\n *   inside scroll-based handlers.\n *\n * **NOTE:** If the layout has been invalidated and not yet recalculated, this\n * will cause a forced layout, so always {@link waitForMeasureTime} before\n * calling this function when possible.\n *\n * @param [options.axis]    One of \"x\" or \"y\" for horizontal or vertical scroll\n *                          respectively. If not given, it checks both.\n * @param [options.active]  If true, then if the target's current scroll offset\n *                          is 0, it will attempt to scroll it rather than\n *                          looking at its overflow.\n * @param [options.noCache] By default the result of a check is cached for 1s\n *                          and if there's already a cached result for this\n *                          element, it is returned. Set this to true to disable\n *                          checking the cache and also saving the result into\n *                          the cache.\n *\n * @category Scrolling\n */\nexport const isScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n): boolean => {\n  const { axis, active, noCache } = options ?? {};\n  if (!axis) {\n    return (\n      isScrollable(element, { axis: \"y\", active, noCache }) ||\n      isScrollable(element, { axis: \"x\", active, noCache })\n    );\n  }\n\n  if (!noCache) {\n    const cachedResult = isScrollableCache.get(element)?.get(axis);\n    if (!MH.isNullish(cachedResult)) {\n      return cachedResult;\n    }\n  }\n\n  const offset = axis === \"x\" ? \"Left\" : \"Top\";\n  let result = false;\n\n  if (element[`scroll${offset}`]) {\n    result = true;\n  } else if (active) {\n    // Use scrollTo with explicit behavior set to instant instead of setting\n    // the scrollTop/Left properties since the latter doesn't work with\n    // scroll-behavior smooth.\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 1 });\n    const canScroll = element[`scroll${offset}`] > 0;\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 0 });\n    result = canScroll;\n  } else {\n    const dimension = axis === \"x\" ? \"Width\" : \"Height\";\n    const hasOverflow =\n      element[`scroll${dimension}`] > element[`client${dimension}`];\n    const overflowProp = getComputedStylePropNow(element, \"overflow\");\n    result = hasOverflow && MH.includes([\"scroll\", \"auto\"], overflowProp);\n  }\n\n  if (!noCache) {\n    isScrollableCache.sGet(element).set(axis, result);\n    MH.setTimer(() => {\n      MH.deleteKey(isScrollableCache.get(element), axis);\n      isScrollableCache.prune(element);\n    }, IS_SCROLLABLE_CACHE_TIMEOUT);\n  }\n\n  return result;\n};\n\n/**\n * Returns the closest scrollable ancestor of the given element, _not including\n * it_.\n *\n * @param options See {@link isScrollable}\n *\n * @returns `null` if no scrollable ancestors are found.\n *\n * @category Scrolling\n */\nexport const getClosestScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n) => {\n  // Walk up the tree, starting at the element in question but excluding it.\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = MH.parentOf(ancestor))) {\n    if (isScrollable(ancestor, options)) {\n      return ancestor;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Returns the current {@link ScrollAction} if any.\n *\n * @category Scrolling\n */\nexport const getCurrentScrollAction = (\n  scrollable?: Element,\n): ScrollAction | null => {\n  scrollable = toScrollableOrDefault(scrollable);\n  const action = currentScrollAction.get(scrollable);\n  if (action) {\n    return MH.copyObject(action);\n  }\n  return null;\n};\n\n/**\n * Scrolls the given scrollable element to the given `to` target.\n *\n * Returns `null` if there's an ongoing scroll that is not cancellable.\n *\n * Note that if `to` is an element or a selector, then it _must_ be a\n * descendant of the scrollable element.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *               If the target coordinates are invalid.\n *\n * @param to If this is an element, then its top-left position is used as\n *           the target coordinates. If it is a string, then it is treated\n *           as a selector for an element using `querySelector`.\n *\n * @returns `null` if there's an ongoing scroll that is not cancellable,\n * otherwise a {@link ScrollAction}.\n *\n * @category Scrolling\n */\nexport const scrollTo = (\n  to: TargetCoordinates | Element | string,\n  userOptions?: ScrollToOptions,\n): ScrollAction | null => {\n  const options = getOptions(to, userOptions);\n  const scrollable = options._scrollable;\n\n  // cancel current scroll action if any\n  const currentScroll = currentScrollAction.get(scrollable);\n  if (currentScroll) {\n    if (!currentScroll.cancel()) {\n      // current scroll action is not cancellable by us\n      return null;\n    }\n  }\n\n  let isCancelled = false;\n\n  const cancelFn = options._weCanInterrupt\n    ? () => (isCancelled = true)\n    : () => false;\n\n  const scrollEvents = [\"touchmove\", \"wheel\"]; // don't bother with keyboard\n  let preventScrollHandler: EventListener | null = null;\n\n  if (options._userCanInterrupt) {\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(\n        scrollable,\n        eventType,\n        () => {\n          isCancelled = true;\n        },\n        { once: true },\n      );\n    }\n  } else {\n    preventScrollHandler = MH.preventDefault;\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(scrollable, eventType, preventScrollHandler, {\n        passive: false,\n      });\n    }\n  }\n\n  const promise = initiateScroll(options, () => isCancelled);\n\n  const thisScrollAction: ScrollAction = {\n    waitFor: () => promise,\n    cancel: cancelFn,\n  };\n\n  const cleanup = () => {\n    if (currentScrollAction.get(scrollable) === thisScrollAction) {\n      MH.deleteKey(currentScrollAction, scrollable);\n    }\n\n    if (preventScrollHandler) {\n      for (const eventType of scrollEvents) {\n        removeEventListenerFrom(scrollable, eventType, preventScrollHandler, {\n          passive: false,\n        });\n      }\n    }\n  };\n\n  thisScrollAction.waitFor().then(cleanup).catch(cleanup);\n\n  currentScrollAction.set(scrollable, thisScrollAction);\n  return thisScrollAction;\n};\n\n/**\n * Returns true if the given string is a valid scroll direction.\n *\n * @category Validation\n */\nexport const isValidScrollDirection = (\n  direction: string,\n): direction is ScrollDirection => MH.includes(SCROLL_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid scroll\n * directions.\n *\n * @category Validation\n */\nexport const isValidScrollDirectionList = (directions: string | string[]) =>\n  isValidStrList(directions, isValidScrollDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const mapScrollable = (original: Element, actualScrollable: Element) =>\n  mappedScrollables.set(original, actualScrollable);\n\n/**\n * @ignore\n * @internal\n */\nexport const unmapScrollable = (original: Element) =>\n  MH.deleteKey(mappedScrollables, original);\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientWidthNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetWidth -\n      getBorderWidth(element, MC.S_LEFT) -\n      getBorderWidth(element, MC.S_RIGHT)\n    : element[MC.S_CLIENT_WIDTH];\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientHeightNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetHeight -\n      getBorderWidth(element, MC.S_TOP) -\n      getBorderWidth(element, MC.S_BOTTOM)\n    : element[MC.S_CLIENT_HEIGHT];\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainContentElement = (): HTMLElement | null =>\n  mainContentElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainContentElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainContentElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainScrollableElement = (): HTMLElement | null =>\n  mainScrollableElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainScrollableElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainScrollableElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultScrollingElement = () => {\n  const body = MH.getBody();\n  return isScrollable(body) ? body : MH.getDocScrollingElement() || body;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetScrollableElement = (\n  target: ScrollTarget | null | undefined,\n): Element | null => toScrollableOrMain(target, tryGetMainScrollableElement);\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchScrollableElement = async (\n  target: ScrollTarget | null | undefined,\n): Promise<Element> => toScrollableOrMain(target, fetchMainScrollableElement);\n\n// ----------------------------------------\n\ntype ScrollToOptionsInternal = {\n  _target: TargetCoordinates;\n  _offset: CoordinateOffset | null;\n  _altTarget: TargetCoordinates | null;\n  _altOffset: CoordinateOffset | null;\n  _scrollable: Element;\n  _duration: number;\n  _weCanInterrupt: boolean;\n  _userCanInterrupt: boolean;\n};\n\nconst IS_SCROLLABLE_CACHE_TIMEOUT = 1000;\n\nconst isScrollableCache = newXMap<Element, Map<\"x\" | \"y\", boolean>>(() =>\n  MH.newMap(),\n);\n\nconst mappedScrollables = MH.newMap<Element, Element>();\n\nconst currentScrollAction = MH.newMap<Element, ScrollAction>();\n\nconst DIFF_THRESHOLD = 5;\nconst arePositionsDifferent = (start: ScrollPosition, end: ScrollPosition) =>\n  maxAbs(start.top - end.top, start.left - end.left) >= DIFF_THRESHOLD;\n\nconst toScrollableOrMain = <R>(\n  target: ScrollTarget | null | undefined,\n  getMain: () => R,\n): Element | R => {\n  if (MH.isElement(target)) {\n    return mappedScrollables.get(target) || target;\n  }\n\n  if (!target || target === MH.getWindow() || target === MH.getDoc()) {\n    return getMain();\n  }\n\n  throw MH.usageError(\"Unsupported scroll target\");\n};\n\nconst toScrollableOrDefault = (scrollable: Element | undefined): Element =>\n  scrollable ?? getDefaultScrollingElement();\n\nconst getOptions = (\n  to: TargetCoordinates | Element | string,\n  options: ScrollToOptions | undefined,\n): ScrollToOptionsInternal => {\n  const scrollable = toScrollableOrDefault(options?.scrollable);\n  const target = getTargetCoordinates(scrollable, to);\n  const altTarget = options?.altTarget\n    ? getTargetCoordinates(scrollable, options?.altTarget)\n    : null;\n\n  return {\n    _target: target,\n    _offset: options?.offset || null,\n    _altTarget: altTarget,\n    _altOffset: options?.altOffset || null,\n    _scrollable: scrollable,\n    _duration: options?.duration || 0,\n    _weCanInterrupt: options?.weCanInterrupt ?? false,\n    _userCanInterrupt: options?.userCanInterrupt ?? false,\n  };\n};\n\nconst getTargetCoordinates = (\n  scrollable: Element,\n  target: TargetCoordinates | Element | string,\n): TargetCoordinates => {\n  const docScrollingElement = MH.getDocScrollingElement();\n\n  if (MH.isElement(target)) {\n    if (scrollable === target || !scrollable.contains(target)) {\n      throw MH.usageError(\"Target must be a descendant of the scrollable one\");\n    }\n\n    return {\n      top: () =>\n        scrollable[MC.S_SCROLL_TOP] +\n        MH.getBoundingClientRect(target).top -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).top),\n      left: () =>\n        scrollable[MC.S_SCROLL_LEFT] +\n        MH.getBoundingClientRect(target).left -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).left),\n    };\n  }\n\n  if (MH.isString(target)) {\n    const targetEl = MH.docQuerySelector(target);\n    if (!targetEl) {\n      throw MH.usageError(`No match for '${target}'`);\n    }\n\n    return getTargetCoordinates(scrollable, targetEl);\n  }\n\n  if (!MH.isObject(target) || !(\"top\" in target || \"left\" in target)) {\n    throw MH.usageError(\"Invalid coordinates\");\n  }\n\n  return target;\n};\n\nconst getStartEndPosition = async (\n  options: ScrollToOptionsInternal,\n): Promise<{ start: ScrollPosition; end: ScrollPosition }> => {\n  await waitForMeasureTime();\n\n  const applyOffset = (\n    position: ScrollPosition,\n    offset: CoordinateOffset | null,\n  ) => {\n    position.top += offset?.top || 0;\n    position.left += offset?.left || 0;\n  };\n\n  const scrollable = options._scrollable;\n  const start = {\n    top: scrollable[MC.S_SCROLL_TOP],\n    left: scrollable[MC.S_SCROLL_LEFT],\n  };\n\n  let end = getEndPosition(scrollable, start, options._target);\n  applyOffset(end, options._offset);\n\n  if (!arePositionsDifferent(start, end) && options._altTarget) {\n    end = getEndPosition(scrollable, start, options._altTarget);\n    applyOffset(end, options._altOffset);\n  }\n\n  return { start, end };\n};\n\n// must be called in \"measure time\"\nconst getEndPosition = (\n  scrollable: Element,\n  startPosition: ScrollPosition,\n  targetCoordinates: TargetCoordinates,\n): ScrollPosition => {\n  // by default no change in scroll top or left\n  const endPosition = MH.copyObject(startPosition);\n\n  if (!MH.isNullish(targetCoordinates?.top)) {\n    if (MH.isFunction(targetCoordinates.top)) {\n      endPosition.top = targetCoordinates.top(scrollable);\n    } else {\n      endPosition.top = targetCoordinates.top;\n    }\n  }\n\n  if (!MH.isNullish(targetCoordinates?.left)) {\n    if (MH.isFunction(targetCoordinates.left)) {\n      endPosition.left = targetCoordinates.left(scrollable);\n    } else {\n      endPosition.left = targetCoordinates.left;\n    }\n  }\n\n  // Set boundaries\n  const scrollH = scrollable[MC.S_SCROLL_HEIGHT];\n  const scrollW = scrollable[MC.S_SCROLL_WIDTH];\n  const clientH = getClientHeightNow(scrollable);\n  const clientW = getClientWidthNow(scrollable);\n  endPosition.top = MH.min(scrollH - clientH, endPosition.top);\n  endPosition.top = MH.max(0, endPosition.top);\n\n  endPosition.left = MH.min(scrollW - clientW, endPosition.left);\n  endPosition.left = MH.max(0, endPosition.left);\n\n  return endPosition;\n};\n\nconst initiateScroll = async (\n  options: ScrollToOptionsInternal,\n  isCancelled: () => boolean,\n) => {\n  const position = await getStartEndPosition(options);\n  const duration = options._duration;\n  const scrollable = options._scrollable;\n\n  const currentPosition: ScrollPosition = position.start;\n\n  for await (const [\n    totalElapsed,\n    elapsedSinceLast__ignored,\n  ] of animationFrameIterator()) {\n    // Element.scrollTo equates to a measurement and needs to run after\n    // painting to avoid forced layout.\n    await waitForMeasureTime();\n\n    if (isCancelled()) {\n      // Reject the promise\n      throw currentPosition;\n    }\n\n    if (totalElapsed === 0) {\n      // First frame\n      // If it's very close to the target, no need to scroll smoothly\n      if (\n        duration === 0 ||\n        !arePositionsDifferent(currentPosition, position.end)\n      ) {\n        MH.elScrollTo(scrollable, position.end);\n        return position.end;\n      }\n    } else {\n      const progress = easeInOutQuad(MH.min(1, totalElapsed / duration));\n\n      for (const s of [MC.S_LEFT, MC.S_TOP] as const) {\n        currentPosition[s] =\n          position.start[s] + (position.end[s] - position.start[s]) * progress;\n      }\n\n      MH.elScrollTo(scrollable, currentPosition);\n\n      if (progress === 1) {\n        // done\n        break;\n      }\n    }\n  }\n\n  return currentPosition;\n};\n\nconst isScrollableBodyInQuirks = (element: Element): element is HTMLElement =>\n  element === MH.getBody() && MH.getDocScrollingElement() === null;\n\n// must be called in \"measure time\"\nconst getBorderWidth = (element: Element, side: Offset) =>\n  MH.ceil(MH.parseFloat(getComputedStylePropNow(element, `border-${side}`)));\n\n// ------------------------------\n\nlet mainContentElement: HTMLElement;\nlet mainScrollableElement: HTMLElement;\n\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      const mainScrollableElementSelector =\n        settings.mainScrollableElementSelector;\n\n      const contentElement = await waitForElementOrInteractive(() => {\n        return mainScrollableElementSelector\n          ? MH.docQuerySelector(mainScrollableElementSelector)\n          : MH.getBody(); // default if no selector\n      });\n\n      // defaults\n      mainScrollableElement = getDefaultScrollingElement();\n      mainContentElement = MH.getBody();\n\n      if (!contentElement) {\n        logError(\n          MH.usageError(\n            `No match for '${mainScrollableElementSelector}'. ` +\n              \"Scroll tracking/capturing may not work as intended.\",\n          ),\n        );\n      } else if (!MH.isHTMLElement(contentElement)) {\n        logWarn(\"mainScrollableElementSelector should point to an HTMLElement\");\n      } else if (contentElement !== mainContentElement) {\n        mainScrollableElement = mainContentElement = contentElement;\n      }\n    })();\n  }\n\n  return initPromise;\n};\n\n// Try to find the main scrollable/content elements asap so that tryGetMain*\n// can return them if called before fetchMain*\nif (MH.hasDOM()) {\n  waitForInteractive().then(init);\n}\n"],"mappings":"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","ignoreList":[]}