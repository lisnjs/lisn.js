{"version":3,"file":"view-watcher.cjs","names":["MC","_interopRequireWildcard","require","MH","_cssAlter","_domEvents","_domOptimize","_log","_misc","_overlays","_scroll","_size","_text","_views","_callback","_xMap","_xIntersectionObserver","_domWatcher","_scrollWatcher","_sizeWatcher","_debug","_interopRequireDefault","e","__esModule","_getRequireWildcardCache","WeakMap","r","t","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","value","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","toString","from","test","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_defineProperty","_toPrimitive","toPrimitive","String","Number","ViewWatcher","exports","config","CONSTRUCTOR_KEY","illegalConstructorError","logger","debug","Logger","logAtCreation","allViewData","newWeakMap","allCallbacks","newXWeakMap","newMap","intersectionHandler","entries","debug9","concat","_iterator","_step","entry","processEntry","err","observeOptions","root","_root","threshold","_threshold","rootMargin","_rootMargin","xObserver","XIntersectionObserver","fetchCurrentView","element","realtime","undefined","fetchData","_ref","_callee","entryOrElement","intersection","data","_callee$","_context","fetchIntersectionData","fetchViewData","_x","newPromise","observer","newIntersectionObserver","promise","disconnect","observe","createCallback","handler","options","trackType","_allCallbacks$get","_element","remove","debug5","callback","wrapCallback","onRemove","deleteHandler","sGet","_trackType","_options","setupOnView","_ref2","_callee2","target","userOptions","viewData","_callee2$","_context2","fetchOptions","waitForInteractive","rootBounds","S_WIDTH","S_HEIGHT","waitForSubsequentMeasureTime","TRACK_FULL","setupInviewTrack","isRemoved","observeLater","skipInitial","viewsToBitmask","views","_viewsBitmask","invokeCallback","_x2","_x3","_x4","_x5","removeOnView","_ref3","_callee3","_allCallbacks$get2","currEntry","_callee3$","_context3","setViewCssProps","_x6","_x7","_x8","deleteKey","prune","debug4","unobserve","_ref4","_callee4","_allCallbacks$get3","latestData","viewsBitmask","_iterator2","_step2","_entry","_callee4$","_context4","targetOf","_x9","_ref5","_callee6","viewCallback","sizeWatcher","scrollWatcher","domWatcher","isInview","removeTrackCallback","scrollableAncestors","addTrackCallback","enterOrLeaveCallback","_callee6$","_context6","debug8","SizeWatcher","reuse","ScrollWatcher","_debounceWindow","DOMWatcher","subtree","fetchScrollableAncestors","_config$_root","trackCallback","_callee5","prevData","changed","_callee5$","_context5","viewChanged","onMutation","categories","S_ATTRIBUTE","S_SKIP_INITIAL","onResize","S_DEBOUNCE_WINDOW","_resizeThreshold","getWindow","_iterator3","_step3","ancestor","onScroll","scrollable","_scrollThreshold","target__ignored","S_AT","assign","VIEWS_SPACE","bitmask","TRACK_REGULAR","_x10","_x11","_x12","fetchElement","trackView","noTrackView","onView","offView","getConfig","_instances$get","myConfig","configStrKey","objToStrKey","omitKeys","instance","instances","SYMBOL","newXMap","_config$rootMargin","_ref7","_callee7","_callee7$","_context7","t0","t1","getViewsBitmask","t2","debounceWindow","t3","resizeThreshold","t4","scrollThreshold","_x13","_x14","_x15","_ref8","_callee8","_callee8$","_context8","waitForMeasureTime","getClosestScrollable","active","_x16","_x17","compareValuesIn","copyBoundingRectProps","targetBounds","relative","bit","_ref9","_callee9","entryOrTarget","vpSize","rootMargins","isIntersecting","isCrossOrigin","_args9","_callee9$","_context9","fetchViewportSize","toMargins","isInstanceOf","IntersectionObserverEntry","boundingClientRect","fetchBounds","_target","_targetBounds","_rootMargins","_rootBounds","_isIntersecting","_isCrossOrigin","_x18","_x19","_ref10","_callee10","rect","_yield$fetchViewportS","width","height","_callee10$","_context10","getBoundingClientRect","x","left","right","top","bottom","S_LEFT","S_RIGHT","S_TOP","S_BOTTOM","_x20","_x21","_x22","_ref11","_callee11","_intersection$_isInte","vpHeight","vpWidth","_args11","_callee11$","_context11","fetchViews","merge","hMiddle","NaN","vMiddle","_x23","_ref12","_callee12","useScrollingAncestor","delta","xView","yView","scrollingAncestor","_callee12$","_context12","_left","_right","_top","_bottom","S_BELOW","S_ABOVE","_x24","_x25","_x26","props","setNumericStyleProps","_prefix","_numDecimal","_ref13","_callee13","overlayOptions","_callee13$","_context13","isElement","isString","usageError","getOverlayOptions","createOverlay","_x27","_x28","_parseScrollOffset","parseScrollOffset","reference","ovrDimension","parent","isHTMLElement","style","copyObject","logError"],"sources":["../../../src/ts/watchers/view-watcher.ts"],"sourcesContent":["/**\n * @module Watchers/ViewWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  ViewTarget,\n  View,\n  BoundingRect,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { setNumericStyleProps } from \"@lisn/utils/css-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForSubsequentMeasureTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys, compareValuesIn } from \"@lisn/utils/misc\";\nimport { createOverlay, OverlayOptions } from \"@lisn/utils/overlays\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport { toMargins, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  VIEWS_SPACE,\n  getViewsBitmask,\n  parseScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap, newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XIntersectionObserver } from \"@lisn/modules/x-intersection-observer\";\n\nimport { DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewWatcher} monitors the position of a given target relative to the\n * given {@link ViewWatcherConfig.root | root} or the viewport.\n *\n * It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class ViewWatcher {\n  /**\n   * Call the given handler whenever the {@link ViewWatcherConfig.root | root}'s\n   * view relative to the target position changes, i.e. when the target enters\n   * or leaves the root.\n   *\n   * Unless {@link OnViewOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current view if it matches this\n   * set of options*.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking position across root\n   * using {@link trackView}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or the options are invalid.\n   */\n  readonly onView: (\n    target: ViewTarget,\n    handler: OnViewHandler,\n    options?: OnViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offView: (target: ViewTarget, handler: OnViewHandler) => void;\n\n  /**\n   * This does more than just {@link onView}. The difference is that in\n   * addition to a change of {@link View}, such as the target entering or\n   * leaving the ViewWatcher's {@link ViewWatcherConfig.root | root} (by\n   * default the viewport), the handler is also called each time the target's\n   * relative view changes _while inside the root_.\n   *\n   * A change of relative position happens when:\n   * - the target is resized\n   * - the root is resized\n   * - the any of the target's scrollable ancestors is scrolled\n   * - the target's attributes changed that resulted in a change of position\n   *\n   * All of the above are accounted for. Internally it uses\n   * {@link ScrollWatcher}, {@link DOMWatcher} and {@link SizeWatcher} to keep\n   * track of all of this.\n   *\n   * If the target is leaves the ViewWatcher's\n   * {@link ViewWatcherConfig.root | root}, the handler will be called with\n   * the {@link ViewData}, and the above events will stop being tracked until\n   * the target enters the watcher's root again.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates the following set of CSS variables on the target's style and\n   * represent its relative position:\n   *\n   * - `--lisn-js--r-top`\n   * - `--lisn-js--r-bottom`\n   * - `--lisn-js--r-left`\n   * - `--lisn-js--r-right`\n   * - `--lisn-js--r-width`\n   * - `--lisn-js--r-height`\n   * - `--lisn-js--r-h-middle`\n   * - `--lisn-js--r-v-middle`\n   *\n   * See {@link ViewData.relative} for an explanation of each.\n   *\n   * Note that only Element targets are supported here and not offsets.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or \"views\" are invalid.\n   */\n  readonly trackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n    options?: TrackViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackView}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n  ) => void;\n\n  /**\n   * Get the current view relative to the target. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param {} realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                    this only when doing realtime scroll-based animations\n   *                    as it may cause a forced layout.\n   */\n  readonly fetchCurrentView: (\n    target: ViewTarget,\n    realtime?: boolean,\n  ) => Promise<ViewData>;\n\n  /**\n   * Creates a new instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: ViewWatcherConfig = {}) {\n    return new ViewWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing  instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: ViewWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new ViewWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ViewWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ViewWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ViewWatcher\", logAtCreation: config })\n      : null;\n\n    const allViewData = MH.newWeakMap<Element, ViewData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<\n        OnViewHandler,\n        {\n          _callback: OnViewCallback;\n          _trackType: TrackType;\n          _options: OnViewOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      debug: logger?.debug9(`Got ${entries.length} new entries`, entries);\n\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    const observeOptions = {\n      root: config._root,\n      threshold: config._threshold,\n      rootMargin: config._rootMargin,\n    };\n\n    const xObserver = new XIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    // ----------\n\n    const fetchCurrentView = (\n      element: Element,\n      realtime = false,\n    ): Promise<ViewData> => {\n      const fetchData = async (\n        entryOrElement: IntersectionObserverEntry | Element,\n      ) => {\n        const intersection = await fetchIntersectionData(\n          config,\n          entryOrElement,\n          realtime,\n        );\n        const data = await fetchViewData(intersection, realtime);\n        return data;\n      };\n\n      if (realtime) {\n        return fetchData(element);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp IntersectionObserver\n        const observer = MH.newIntersectionObserver((entries) => {\n          const promise = fetchData(entries[0]);\n          observer.disconnect();\n          promise.then(resolve);\n        }, observeOptions);\n\n        observer.observe(element);\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n      trackType: TrackType,\n    ): OnViewCallback => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      allCallbacks.sGet(element).set(handler, {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      });\n\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      userOptions: (OnViewOptions & TrackViewOptions) | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOptions(config._root, target, userOptions);\n      const element = options._element;\n\n      const callback = createCallback(handler, options, trackType);\n\n      // View watcher should be used before the DOM is loaded since the initial\n      // size of the root may be 0 or close to 0 and would lead to premature\n      // triggering.\n      await waitForInteractive();\n\n      // Initial call doesn't need to be realtime, and best to use an actual\n      // IntersectionObserverEntry for that one.\n      let viewData = await fetchCurrentView(element);\n\n      if (\n        viewData.rootBounds[MC.S_WIDTH] === 0 &&\n        viewData.rootBounds[MC.S_HEIGHT] === 0\n      ) {\n        // Possibly the root is being setup now, wait for one AF\n        debug: logger?.debug5(\n          \"Got zero root size, deferring for a bit\",\n          config._root,\n        );\n        await waitForSubsequentMeasureTime();\n        viewData = await fetchCurrentView(element);\n      }\n\n      if (trackType === TRACK_FULL) {\n        // Detect resize or scroll\n        await setupInviewTrack(options, callback, viewData);\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      // Always use observeLater to skip the initial call from the\n      // IntersectionObserver, and call callbacks that have skipInitial: false\n      // here. Otherwise, we can't tell from inside the intersectionHandler whether\n      // a callback wants to skip its initial call or not.\n      //\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, viewData);\n        if (viewsToBitmask(viewData.views) & options._viewsBitmask) {\n          await invokeCallback(callback, element, viewData);\n        }\n      }\n    };\n\n    // ----------\n\n    const removeOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      trackType: TrackType,\n    ) => {\n      // For time sync, so that if called immediately after onView without\n      // awaiting, it will remove the callback that is about to be added.\n      // But if no such handler has been added we may unnecessarily\n      // create an overlay... TODO\n      const options = await fetchOptions(config._root, target, {});\n      const element = options._element;\n\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setViewCssProps) {\n          // delete the properties\n          setViewCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n    ) => {\n      const element = options._element;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n\n        xObserver.unobserve(element);\n        MH.deleteKey(allViewData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = async (entry: IntersectionObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      // This doesn't need to be \"realtime\", since IntersectionObserver alone\n      // introduces a delay.\n      const intersection = await fetchIntersectionData(config, entry);\n      const latestData = await fetchViewData(intersection);\n      debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n      const viewsBitmask = viewsToBitmask(latestData.views);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        if (viewsBitmask & entry._options._viewsBitmask) {\n          invokeCallback(entry._callback, element, latestData);\n        }\n      }\n    };\n\n    // ----------\n\n    const setupInviewTrack = async (\n      options: OnViewOptionsInternal,\n      viewCallback: OnViewCallback,\n      viewData: ViewData,\n    ) => {\n      const element = options._element;\n      debug: logger?.debug8(\n        \"Setting up size, scroll and attribute tracking\",\n        element,\n      );\n\n      const sizeWatcher = SizeWatcher.reuse();\n      const scrollWatcher = ScrollWatcher.reuse();\n      const realtime = options._debounceWindow === 0;\n\n      // Detect when target's class or style attribute change\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      // We need to remove the tracking callback when target leaves view and re-add\n      // it when it enters view. But the OnViewCallback that is associated may have\n      // already been added prior, by calling onView with this handler, so we can't\n      // always wrap around it, in order to detect when it's called with a change\n      // of view. So we setup another OnViewCallback tied to the tracking callback.\n      let isInview = false;\n\n      let removeTrackCallback: (() => void) | null = null;\n\n      // Finds any scrollable ancestors of the element and detect scroll on them.\n      const scrollableAncestors = await fetchScrollableAncestors(\n        element,\n        realtime,\n      );\n      if (viewCallback.isRemoved()) {\n        return;\n      }\n\n      const addTrackCallback = () => {\n        const trackCallback = wrapCallback(async () => {\n          const prevData = allViewData.get(element);\n\n          // Get the latest view data for the target\n          const latestData = await fetchCurrentView(element, realtime);\n          debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n          const changed = viewChanged(latestData, prevData);\n          if (changed) {\n            // When comparing for changes, we round the numbers to certain number\n            // of decimal places, and allViewData serves as a \"last threshold\"\n            // state, so only update it if there was a significant change.\n            // Otherwise very quick changes in small increments would get\n            // rejected as \"no change\".\n            allViewData.set(element, latestData);\n\n            if (isInview && !viewCallback.isRemoved()) {\n              // Could have been removed during the debounce window\n              await invokeCallback(viewCallback, element, latestData);\n            }\n          } else {\n            debug: logger?.debug9(\"ViewData same as last\");\n          }\n        });\n\n        // TODO Is there a better way to detect when it's moved?\n        viewCallback.onRemove(trackCallback.remove);\n        removeTrackCallback = trackCallback.remove;\n\n        // Detect when target's class or style attribute change\n        domWatcher.onMutation(trackCallback, {\n          categories: [MC.S_ATTRIBUTE],\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when target is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: element,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the root is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: config._root ?? MH.getWindow(),\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the target's scrollable ancestors are scrolled (this\n        // will almost certainly include the main scrollable element).\n        for (const ancestor of scrollableAncestors) {\n          scrollWatcher.onScroll(trackCallback, {\n            scrollable: ancestor,\n            [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n            threshold: options._scrollThreshold,\n            [MC.S_SKIP_INITIAL]: true,\n          });\n        }\n      };\n\n      const enterOrLeaveCallback = createCallback(\n        (target__ignored, viewData) => {\n          if (viewData.views[0] === MC.S_AT) {\n            if (!isInview) {\n              isInview = true;\n              addTrackCallback();\n            }\n          } else if (removeTrackCallback) {\n            isInview = false;\n            removeTrackCallback();\n            removeTrackCallback = null;\n          }\n        },\n        MH.assign(options, {\n          _viewsBitmask: VIEWS_SPACE.bitmask,\n        }),\n        TRACK_REGULAR,\n      );\n\n      viewCallback.onRemove(enterOrLeaveCallback.remove);\n\n      allViewData.set(element, viewData); // to avoid duplicate initial call\n      // Setup the track and the \"inView\" state\n      if (!enterOrLeaveCallback.isRemoved()) {\n        invokeCallback(enterOrLeaveCallback, element, viewData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentView = (target, realtime = false) =>\n      fetchElement(config._root, target).then((element) =>\n        fetchCurrentView(element, realtime),\n      );\n\n    // ----------\n\n    this.trackView = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      return setupOnView(element, handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackView = (element, handler?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      removeOnView(element, handler, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onView = (target, handler, options?) =>\n      setupOnView(target, handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offView = (target, handler) =>\n      removeOnView(target, handler, TRACK_REGULAR); // no need to await\n  }\n}\n\n/**\n * @interface\n */\nexport type ViewWatcherConfig = {\n  /**\n   * The root element to use for the IntersectionObserver.\n   *\n   * **NOTE:** If the target you want to observe (via\n   * {@link ViewWatcher.onView}) is inside a scrolling element, then you should\n   * probably set the watcher's root to be that scrolling element or a wrapper\n   * around it. However, even if you don't or can't do that, the watcher will\n   * try to be smart about that, and when the target is no longer intercepting\n   * because it's scrolled outside its scrolling container, and yet its\n   * bounding box is still inside the watcher root (e.g. the viewport) the\n   * watcher will determine the relative view based on the scrolling container\n   * and not the actual watcher root.\n   *\n   * @defaultValue null\n   */\n  root?: Element | null;\n\n  /**\n   * The rootMargin to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue \"0px 0px 0px 0px\"\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue 0\n   */\n  threshold?: number | number[];\n};\n\n/**\n * @interface\n */\nexport type OnViewOptions = {\n  /**\n   * Specifies a list of {@link View}s to target for.\n   *\n   * The handler will only be called if there is a change of view relative to\n   * the target that matches the given ones.\n   *\n   * It can be a comma-separated list of \"views\" or an array of such names.\n   *\n   * @defaultValue undefined\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * @interface\n */\nexport type TrackViewOptions = {\n  /**\n   * Use this debounce window for the {@link ScrollWatcher} and\n   * {@link SizeWatcher} involved in the view tracking.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts during scroll, but you probably need this when\n   * doing scroll-based animations.\n   *\n   * @defaultValue undefined // ScrollWatcher and SizeWatcher defaults\n   */\n  debounceWindow?: number;\n\n  /**\n   * Use this resize threshold for the {@link SizeWatcher} involved in the view\n   * tracking.\n   *\n   * @defaultValue undefined // SizeWatcher default\n   */\n  resizeThreshold?: number;\n\n  /**\n   * Use this scroll threshold for the {@link ScrollWatcher} involved in the\n   * view tracking.\n   *\n   * @defaultValue undefined // ScrollWatcher default\n   */\n  scrollThreshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - The element that is the target of the IntersectionObserver. If the call to\n *   {@link ViewWatcher.onView} specified an element as the target, it will be\n *   the same. If it specified an offset, then the element passed to the\n *   callback will be an absolutely positioned trigger overlay that's created\n *   as a result.\n * - the {@link ViewData} for relative to the target\n */\nexport type OnViewHandlerArgs = [Element, ViewData];\nexport type OnViewCallback = Callback<OnViewHandlerArgs>;\nexport type OnViewHandler = CallbackHandler<OnViewHandlerArgs> | OnViewCallback;\n\nexport type ViewData = {\n  isIntersecting: boolean;\n\n  targetBounds: BoundingRect;\n\n  rootBounds: BoundingRect;\n\n  /**\n   * The current view or views of the target. There would be two views given\n   * only if the target is _not_ in view and it's diagonally across from the\n   * root, e.g. both below and to the right.\n   */\n  views: [View, View?];\n\n  /**\n   * This is the target's position relative to the\n   * {@link ViewWatcherConfig.root | root} with values relative to the root\n   * size.\n   *\n   * It is like the {@link targetBounds} except that each quantity is scaled by\n   * the root's width or height, and having two additional computed values.\n   */\n  relative: {\n    x: number;\n    y: number;\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n    width: number;\n    height: number;\n\n    /**\n     * Average of the relative left and right.\n     */\n    hMiddle: number;\n\n    /**\n     * Average of the relative top and bottom.\n     */\n    vMiddle: number;\n  };\n};\n\n// ----------------------------------------\n\ntype ViewWatcherConfigInternal = {\n  _root: Element | null;\n  _rootMargin: string;\n  _threshold: number | number[];\n};\n\ntype OnViewOptionsInternal = {\n  _element: Element;\n  _viewsBitmask: number;\n  _debounceWindow: number | undefined;\n  _resizeThreshold: number | undefined;\n  _scrollThreshold: number | undefined;\n};\n\ntype IntersectionData = {\n  _target: Element;\n  _targetBounds: BoundingRect;\n  _root: Element | null;\n  _rootMargins: [number, number, number, number];\n  _rootBounds: BoundingRect;\n  _isIntersecting: boolean | null; // null means unknown, no IntersectionObserverEntry\n  _isCrossOrigin: boolean | null; // null means unknown, no IntersectionObserverEntry\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, ViewWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (\n  config: ViewWatcherConfig | undefined,\n): ViewWatcherConfigInternal => {\n  return {\n    _root: config?.root || null,\n    _rootMargin: config?.rootMargin ?? \"0px 0px 0px 0px\",\n    _threshold: config?.threshold || 0,\n  };\n};\n\nconst TRACK_REGULAR = 1; // only entering/leaving root\nconst TRACK_FULL = 2; // entering/leaving + moving across (fine-grained)\n\n// --------------------\n\nconst fetchOptions = async (\n  root: Element | null,\n  target: ViewTarget,\n  options: (OnViewOptions & TrackViewOptions) | undefined,\n): Promise<OnViewOptionsInternal> => {\n  return {\n    _element: await fetchElement(root, target),\n    _viewsBitmask: getViewsBitmask(options?.views),\n    _debounceWindow: options?.debounceWindow,\n    _resizeThreshold: options?.resizeThreshold,\n    _scrollThreshold: options?.scrollThreshold,\n  };\n};\n\nconst fetchScrollableAncestors = async (\n  element: Element,\n  realtime: boolean,\n) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollableAncestors = [];\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = getClosestScrollable(ancestor, { active: true }))) {\n    scrollableAncestors.push(ancestor);\n  }\n\n  return scrollableAncestors;\n};\n\nconst viewChanged = (latestData: ViewData, prevData: ViewData | undefined) =>\n  !prevData ||\n  viewsToBitmask(prevData.views) !== viewsToBitmask(latestData.views) ||\n  !compareValuesIn(\n    MH.copyBoundingRectProps(prevData.targetBounds),\n    MH.copyBoundingRectProps(latestData.targetBounds),\n  ) ||\n  !compareValuesIn(prevData.rootBounds, latestData.rootBounds) ||\n  !compareValuesIn(prevData.relative, latestData.relative);\n\nconst viewsToBitmask = (views: [View, View?]) =>\n  VIEWS_SPACE.bit[views[0]] | (views[1] ? VIEWS_SPACE.bit[views[1]] : 0);\n\nconst fetchIntersectionData = async (\n  config: ViewWatcherConfigInternal,\n  entryOrTarget: IntersectionObserverEntry | Element,\n  realtime = false,\n): Promise<IntersectionData> => {\n  const root = config._root;\n  const vpSize = await fetchViewportSize(realtime);\n  const rootMargins = toMargins(config._rootMargin, vpSize);\n\n  let target: Element;\n  let targetBounds: BoundingRect;\n  let rootBounds: BoundingRect | null = null;\n  let isIntersecting: boolean | null = null;\n  let isCrossOrigin: boolean | null = null;\n\n  if (MH.isInstanceOf(entryOrTarget, IntersectionObserverEntry)) {\n    target = entryOrTarget.target;\n    targetBounds = entryOrTarget.boundingClientRect;\n    rootBounds = entryOrTarget.rootBounds;\n    isIntersecting = entryOrTarget.isIntersecting;\n    isCrossOrigin = !entryOrTarget.rootBounds;\n  } else {\n    target = entryOrTarget;\n    targetBounds = await fetchBounds(target, realtime);\n  }\n\n  if (!rootBounds) {\n    rootBounds = await fetchBounds(root, realtime, rootMargins);\n  }\n\n  return {\n    _target: target,\n    _targetBounds: targetBounds,\n    _root: root,\n    _rootMargins: rootMargins,\n    _rootBounds: rootBounds,\n    _isIntersecting: isIntersecting,\n    _isCrossOrigin: isCrossOrigin,\n  };\n};\n\nconst fetchBounds = async (\n  root: Element | null,\n  realtime: boolean,\n  rootMargins?: [number, number, number, number],\n): Promise<BoundingRect> => {\n  let rect: BoundingRect;\n\n  if (root) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    rect = MH.copyBoundingRectProps(MH.getBoundingClientRect(root));\n  } else {\n    const { width, height } = await fetchViewportSize(realtime);\n    rect = {\n      x: 0,\n      left: 0,\n      right: width,\n      width,\n      y: 0,\n      top: 0,\n      bottom: height,\n      height,\n    };\n  }\n\n  if (rootMargins) {\n    rect.x = rect[MC.S_LEFT] -= rootMargins[3];\n    rect[MC.S_RIGHT] += rootMargins[1];\n    rect[MC.S_WIDTH] += rootMargins[1] + rootMargins[3];\n\n    rect.y = rect[MC.S_TOP] -= rootMargins[0];\n    rect[MC.S_BOTTOM] += rootMargins[2];\n    rect[MC.S_HEIGHT] += rootMargins[0] + rootMargins[2];\n  }\n\n  return rect;\n};\n\nconst fetchViewData = async (\n  intersection: IntersectionData,\n  realtime = false,\n): Promise<ViewData> => {\n  const vpSize = await fetchViewportSize(realtime);\n  const vpHeight = vpSize[MC.S_HEIGHT];\n  const vpWidth = vpSize[MC.S_WIDTH];\n\n  const views = await fetchViews(intersection, realtime);\n\n  const relative = MH.merge(\n    { hMiddle: NaN, vMiddle: NaN },\n    MH.copyBoundingRectProps(intersection._targetBounds),\n  );\n\n  relative.y /= vpHeight;\n  relative[MC.S_TOP] /= vpHeight;\n  relative[MC.S_BOTTOM] /= vpHeight;\n  relative[MC.S_HEIGHT] /= vpHeight;\n\n  relative.x /= vpWidth;\n  relative[MC.S_LEFT] /= vpWidth;\n  relative[MC.S_RIGHT] /= vpWidth;\n  relative[MC.S_WIDTH] /= vpWidth;\n\n  relative.hMiddle = (relative[MC.S_LEFT] + relative[MC.S_RIGHT]) / 2;\n  relative.vMiddle = (relative[MC.S_TOP] + relative[MC.S_BOTTOM]) / 2;\n\n  const viewData: ViewData = {\n    isIntersecting: intersection._isIntersecting ?? views[0] === MC.S_AT,\n    targetBounds: intersection._targetBounds,\n    rootBounds: intersection._rootBounds,\n    views,\n    relative,\n  };\n\n  return viewData;\n};\n\nconst fetchViews = async (\n  intersection: IntersectionData,\n  realtime: boolean,\n  useScrollingAncestor?: Element,\n): Promise<[View, View?]> => {\n  if (intersection._isIntersecting) {\n    return [MC.S_AT];\n  }\n\n  let rootBounds: BoundingRect;\n  if (useScrollingAncestor) {\n    rootBounds = await fetchBounds(\n      useScrollingAncestor,\n      realtime,\n      intersection._rootMargins,\n    );\n  } else {\n    rootBounds = intersection._rootBounds;\n  }\n\n  const targetBounds = intersection._targetBounds;\n  const delta = {\n    _left: rootBounds[MC.S_LEFT] - targetBounds[MC.S_LEFT],\n    _right: targetBounds[MC.S_RIGHT] - rootBounds[MC.S_RIGHT],\n    _top: rootBounds[MC.S_TOP] - targetBounds[MC.S_TOP],\n    _bottom: targetBounds[MC.S_BOTTOM] - rootBounds[MC.S_BOTTOM],\n  };\n\n  let xView: View | null = null;\n  let yView: View | null = null;\n  if (delta._left > 0 && delta._right > 0) {\n    // Target is wider than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    xView = delta._left > delta._right ? MC.S_RIGHT : MC.S_LEFT;\n  } else if (delta._left > 0) {\n    // Target is to the left of the root\n    xView = MC.S_RIGHT;\n  } else if (delta._right > 0) {\n    // Target is to the right of the root\n    xView = MC.S_LEFT;\n  } // else target is horizontally contained in root, see below\n\n  if (delta._top > 0 && delta._bottom > 0) {\n    // Target is taller than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    yView = delta._top > delta._bottom ? MC.S_BELOW : MC.S_ABOVE;\n  } else if (delta._top > 0) {\n    // Target is above the root\n    yView = MC.S_BELOW;\n  } else if (delta._bottom > 0) {\n    // Target is below the root\n    yView = MC.S_ABOVE;\n  } // else target is vertically contained in root, see below\n\n  if (xView && yView) {\n    // diagonally out of vide\n    return [xView, yView];\n  } else if (xView) {\n    // horizontally out of vide\n    return [xView];\n  } else if (yView) {\n    // vertically out of vide\n    return [yView];\n  }\n\n  // The target is contained in the root bounds and yet isIntersecting was\n  // not true. This means that either:\n  //\n  // 1. It may be intersecting, but we didn't get an actual\n  //    IntersectionObserverEntry and we don't know if it's intersecting\n  //    or not\n  // 2. The target is inside a scrolling element that is _not_ being used as\n  //    the observer root, and the target has scrolled out of the scrollable\n  //    bounds but still inside the viewport\n  // 3. We're inside a cross-origin iFrame and the iFrame is partially or\n  //    fully not-intersecting\n\n  if (!intersection._isCrossOrigin) {\n    // This is case 1. or 2. => get the views relative to the closest\n    // scrollable ancestor relative to which it is _not_ intersecting, if\n    // any. If it's nested inside several scrolling elements, we'll end up\n    // looping over each one until we find the one for which the target is\n    // outside its box.\n    //\n    // It is too risky to use active isScrollable check here since we could be\n    // inside an onScroll handler, so just use passive.\n    const scrollingAncestor = getClosestScrollable(\n      useScrollingAncestor ?? intersection._target,\n    );\n\n    if (scrollingAncestor) {\n      return fetchViews(intersection, realtime, scrollingAncestor);\n    }\n  }\n\n  // Either case 3. (cross-origin iframe outside the viewport) or case 1. and\n  // the target is actually intersecting the root. Either way, it's to be\n  // considered in-view of its root.\n  return [MC.S_AT];\n};\n\nconst setViewCssProps = (\n  element: Element,\n  viewData: ViewData | undefined | null,\n) => {\n  const relative: Record<string, number> = viewData?.relative || {};\n  const props = {\n    top: relative.top,\n    bottom: relative.bottom,\n    left: relative.left,\n    right: relative.right,\n    [MC.S_WIDTH]: relative[MC.S_WIDTH],\n    [MC.S_HEIGHT]: relative[MC.S_HEIGHT],\n    hMiddle: relative.hMiddle,\n    vMiddle: relative.vMiddle,\n  };\n  setNumericStyleProps(element, props, { _prefix: \"r-\", _numDecimal: 4 }); // don't await here\n};\n\nconst fetchElement = async (\n  root: Element | null,\n  target: ViewTarget,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  } else if (!MH.isString(target)) {\n    throw MH.usageError(\n      \"'target' must be an offset string or an HTMLElement | SVGElement | MathMLElement\",\n    );\n  }\n\n  const overlayOptions = getOverlayOptions(root, target);\n  return await createOverlay(overlayOptions);\n};\n\nconst getOverlayOptions = (\n  root: Element | null,\n  target: string,\n): OverlayOptions => {\n  const { reference, value } = parseScrollOffset(target);\n\n  let ovrDimension: \"width\" | \"height\";\n  if (reference === MC.S_TOP || reference === MC.S_BOTTOM) {\n    ovrDimension = MC.S_WIDTH;\n  } else if (reference === MC.S_LEFT || reference === MC.S_RIGHT) {\n    ovrDimension = MC.S_HEIGHT;\n  } else {\n    throw MH.usageError(`Invalid offset reference: '${reference}'`);\n  }\n\n  return {\n    parent: MH.isHTMLElement(root) ? root : undefined,\n    style: {\n      [reference]: value,\n      [ovrDimension]: \"100%\",\n    },\n  };\n};\n\nconst invokeCallback = (\n  callback: OnViewCallback,\n  element: Element,\n  viewData: ViewData,\n) => callback.invoke(element, MH.copyObject(viewData)).catch(logError);\n"],"mappings":";;;;;;AAIA,IAAAA,EAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,EAAA,GAAAF,uBAAA,CAAAC,OAAA;AASA,IAAAE,SAAA,GAAAF,OAAA;AACA,IAAAG,UAAA,GAAAH,OAAA;AACA,IAAAI,YAAA,GAAAJ,OAAA;AAIA,IAAAK,IAAA,GAAAL,OAAA;AACA,IAAAM,KAAA,GAAAN,OAAA;AACA,IAAAO,SAAA,GAAAP,OAAA;AACA,IAAAQ,OAAA,GAAAR,OAAA;AACA,IAAAS,KAAA,GAAAT,OAAA;AACA,IAAAU,KAAA,GAAAV,OAAA;AACA,IAAAW,MAAA,GAAAX,OAAA;AAMA,IAAAY,SAAA,GAAAZ,OAAA;AAKA,IAAAa,KAAA,GAAAb,OAAA;AACA,IAAAc,sBAAA,GAAAd,OAAA;AAEA,IAAAe,WAAA,GAAAf,OAAA;AACA,IAAAgB,cAAA,GAAAhB,OAAA;AACA,IAAAiB,YAAA,GAAAjB,OAAA;AAEA,IAAAkB,MAAA,GAAAC,sBAAA,CAAAnB,OAAA;AAAsC,SAAAmB,uBAAAC,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAAA,SAAAE,yBAAAF,CAAA,6BAAAG,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAD,wBAAA,YAAAA,yBAAAF,CAAA,WAAAA,CAAA,GAAAK,CAAA,GAAAD,CAAA,KAAAJ,CAAA;AAAA,SAAArB,wBAAAqB,CAAA,EAAAI,CAAA,SAAAA,CAAA,IAAAJ,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,gBAAAM,OAAA,CAAAN,CAAA,0BAAAA,CAAA,sBAAAA,CAAA,QAAAK,CAAA,GAAAH,wBAAA,CAAAE,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAE,GAAA,CAAAP,CAAA,UAAAK,CAAA,CAAAG,GAAA,CAAAR,CAAA,OAAAS,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAf,CAAA,oBAAAe,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,EAAAe,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAd,CAAA,EAAAe,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAf,CAAA,CAAAe,CAAA,YAAAN,CAAA,cAAAT,CAAA,EAAAK,CAAA,IAAAA,CAAA,CAAAc,GAAA,CAAAnB,CAAA,EAAAS,CAAA,GAAAA,CAAA;AAAA,SAAAH,QAAAc,CAAA,sCAAAd,OAAA,wBAAAe,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAG,SAAA,qBAAAJ,CAAA,KAAAd,OAAA,CAAAc,CAAA;AAAA,SAAAK,oBAAA,kBA3CtC,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAzB,CAAA,SAAAK,CAAA,EAAAL,CAAA,OAAAI,CAAA,GAAAQ,MAAA,CAAAY,SAAA,EAAAf,CAAA,GAAAL,CAAA,CAAAY,cAAA,EAAAI,CAAA,GAAAR,MAAA,CAAAC,cAAA,cAAAR,CAAA,EAAAL,CAAA,EAAAI,CAAA,IAAAC,CAAA,CAAAL,CAAA,IAAAI,CAAA,CAAAsB,KAAA,KAAAR,CAAA,wBAAAG,MAAA,GAAAA,MAAA,OAAAV,CAAA,GAAAO,CAAA,CAAAI,QAAA,kBAAAK,CAAA,GAAAT,CAAA,CAAAU,aAAA,uBAAAb,CAAA,GAAAG,CAAA,CAAAW,WAAA,8BAAAC,OAAAzB,CAAA,EAAAL,CAAA,EAAAI,CAAA,WAAAQ,MAAA,CAAAC,cAAA,CAAAR,CAAA,EAAAL,CAAA,IAAA0B,KAAA,EAAAtB,CAAA,EAAA2B,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAA5B,CAAA,CAAAL,CAAA,WAAA8B,MAAA,mBAAAzB,CAAA,IAAAyB,MAAA,YAAAA,OAAAzB,CAAA,EAAAL,CAAA,EAAAI,CAAA,WAAAC,CAAA,CAAAL,CAAA,IAAAI,CAAA,gBAAA8B,KAAA7B,CAAA,EAAAL,CAAA,EAAAI,CAAA,EAAAK,CAAA,QAAAS,CAAA,GAAAlB,CAAA,IAAAA,CAAA,CAAAwB,SAAA,YAAAW,SAAA,GAAAnC,CAAA,GAAAmC,SAAA,EAAAxB,CAAA,GAAAC,MAAA,CAAAwB,MAAA,CAAAlB,CAAA,CAAAM,SAAA,GAAAG,CAAA,OAAAU,OAAA,CAAA5B,CAAA,gBAAAW,CAAA,CAAAT,CAAA,eAAAe,KAAA,EAAAY,gBAAA,CAAAjC,CAAA,EAAAD,CAAA,EAAAuB,CAAA,MAAAhB,CAAA,aAAA4B,SAAAlC,CAAA,EAAAL,CAAA,EAAAI,CAAA,mBAAAoC,IAAA,YAAAC,GAAA,EAAApC,CAAA,CAAAY,IAAA,CAAAjB,CAAA,EAAAI,CAAA,cAAAC,CAAA,aAAAmC,IAAA,WAAAC,GAAA,EAAApC,CAAA,QAAAL,CAAA,CAAAkC,IAAA,GAAAA,IAAA,MAAAQ,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAX,UAAA,cAAAY,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAAnB,MAAA,CAAAmB,CAAA,EAAAtC,CAAA,qCAAAuC,CAAA,GAAAtC,MAAA,CAAAuC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAhD,CAAA,IAAAK,CAAA,CAAAQ,IAAA,CAAAmC,CAAA,EAAAzC,CAAA,MAAAsC,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAxB,SAAA,GAAAW,SAAA,CAAAX,SAAA,GAAAZ,MAAA,CAAAwB,MAAA,CAAAa,CAAA,YAAAM,sBAAAlD,CAAA,gCAAAmD,OAAA,WAAAxD,CAAA,IAAA8B,MAAA,CAAAzB,CAAA,EAAAL,CAAA,YAAAK,CAAA,gBAAAoD,OAAA,CAAAzD,CAAA,EAAAK,CAAA,sBAAAqD,cAAArD,CAAA,EAAAL,CAAA,aAAA2D,OAAAvD,CAAA,EAAAgB,CAAA,EAAAF,CAAA,EAAAP,CAAA,QAAAgB,CAAA,GAAAY,QAAA,CAAAlC,CAAA,CAAAD,CAAA,GAAAC,CAAA,EAAAe,CAAA,mBAAAO,CAAA,CAAAa,IAAA,QAAAzB,CAAA,GAAAY,CAAA,CAAAc,GAAA,EAAAC,CAAA,GAAA3B,CAAA,CAAAW,KAAA,SAAAgB,CAAA,gBAAApC,OAAA,CAAAoC,CAAA,KAAAjC,CAAA,CAAAQ,IAAA,CAAAyB,CAAA,eAAA1C,CAAA,CAAA4D,OAAA,CAAAlB,CAAA,CAAAmB,OAAA,EAAAC,IAAA,WAAAzD,CAAA,IAAAsD,MAAA,SAAAtD,CAAA,EAAAa,CAAA,EAAAP,CAAA,gBAAAN,CAAA,IAAAsD,MAAA,UAAAtD,CAAA,EAAAa,CAAA,EAAAP,CAAA,QAAAX,CAAA,CAAA4D,OAAA,CAAAlB,CAAA,EAAAoB,IAAA,WAAAzD,CAAA,IAAAU,CAAA,CAAAW,KAAA,GAAArB,CAAA,EAAAa,CAAA,CAAAH,CAAA,gBAAAV,CAAA,WAAAsD,MAAA,UAAAtD,CAAA,EAAAa,CAAA,EAAAP,CAAA,SAAAA,CAAA,CAAAgB,CAAA,CAAAc,GAAA,SAAArC,CAAA,EAAAgB,CAAA,oBAAAM,KAAA,WAAAA,MAAArB,CAAA,EAAAI,CAAA,aAAAsD,2BAAA,eAAA/D,CAAA,WAAAA,CAAA,EAAAI,CAAA,IAAAuD,MAAA,CAAAtD,CAAA,EAAAI,CAAA,EAAAT,CAAA,EAAAI,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAA0D,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAAzB,iBAAAtC,CAAA,EAAAI,CAAA,EAAAK,CAAA,QAAAW,CAAA,GAAAsB,CAAA,mBAAAxB,CAAA,EAAAP,CAAA,QAAAS,CAAA,KAAAwB,CAAA,QAAAoB,KAAA,sCAAA5C,CAAA,KAAAyB,CAAA,oBAAA3B,CAAA,QAAAP,CAAA,WAAAe,KAAA,EAAArB,CAAA,EAAA4D,IAAA,eAAAxD,CAAA,CAAAyD,MAAA,GAAAhD,CAAA,EAAAT,CAAA,CAAAgC,GAAA,GAAA9B,CAAA,UAAAgB,CAAA,GAAAlB,CAAA,CAAA0D,QAAA,MAAAxC,CAAA,QAAAZ,CAAA,GAAAqD,mBAAA,CAAAzC,CAAA,EAAAlB,CAAA,OAAAM,CAAA,QAAAA,CAAA,KAAA+B,CAAA,mBAAA/B,CAAA,qBAAAN,CAAA,CAAAyD,MAAA,EAAAzD,CAAA,CAAA4D,IAAA,GAAA5D,CAAA,CAAA6D,KAAA,GAAA7D,CAAA,CAAAgC,GAAA,sBAAAhC,CAAA,CAAAyD,MAAA,QAAA9C,CAAA,KAAAsB,CAAA,QAAAtB,CAAA,GAAAyB,CAAA,EAAApC,CAAA,CAAAgC,GAAA,EAAAhC,CAAA,CAAA8D,iBAAA,CAAA9D,CAAA,CAAAgC,GAAA,uBAAAhC,CAAA,CAAAyD,MAAA,IAAAzD,CAAA,CAAA+D,MAAA,WAAA/D,CAAA,CAAAgC,GAAA,GAAArB,CAAA,GAAAwB,CAAA,MAAAK,CAAA,GAAAV,QAAA,CAAAvC,CAAA,EAAAI,CAAA,EAAAK,CAAA,oBAAAwC,CAAA,CAAAT,IAAA,QAAApB,CAAA,GAAAX,CAAA,CAAAwD,IAAA,GAAApB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAR,GAAA,KAAAK,CAAA,qBAAApB,KAAA,EAAAuB,CAAA,CAAAR,GAAA,EAAAwB,IAAA,EAAAxD,CAAA,CAAAwD,IAAA,kBAAAhB,CAAA,CAAAT,IAAA,KAAApB,CAAA,GAAAyB,CAAA,EAAApC,CAAA,CAAAyD,MAAA,YAAAzD,CAAA,CAAAgC,GAAA,GAAAQ,CAAA,CAAAR,GAAA,mBAAA2B,oBAAApE,CAAA,EAAAI,CAAA,QAAAK,CAAA,GAAAL,CAAA,CAAA8D,MAAA,EAAA9C,CAAA,GAAApB,CAAA,CAAAsB,QAAA,CAAAb,CAAA,OAAAW,CAAA,KAAAf,CAAA,SAAAD,CAAA,CAAA+D,QAAA,qBAAA1D,CAAA,IAAAT,CAAA,CAAAsB,QAAA,eAAAlB,CAAA,CAAA8D,MAAA,aAAA9D,CAAA,CAAAqC,GAAA,GAAApC,CAAA,EAAA+D,mBAAA,CAAApE,CAAA,EAAAI,CAAA,eAAAA,CAAA,CAAA8D,MAAA,kBAAAzD,CAAA,KAAAL,CAAA,CAAA8D,MAAA,YAAA9D,CAAA,CAAAqC,GAAA,OAAAgC,SAAA,uCAAAhE,CAAA,iBAAAqC,CAAA,MAAA5B,CAAA,GAAAqB,QAAA,CAAAnB,CAAA,EAAApB,CAAA,CAAAsB,QAAA,EAAAlB,CAAA,CAAAqC,GAAA,mBAAAvB,CAAA,CAAAsB,IAAA,SAAApC,CAAA,CAAA8D,MAAA,YAAA9D,CAAA,CAAAqC,GAAA,GAAAvB,CAAA,CAAAuB,GAAA,EAAArC,CAAA,CAAA+D,QAAA,SAAArB,CAAA,MAAAnC,CAAA,GAAAO,CAAA,CAAAuB,GAAA,SAAA9B,CAAA,GAAAA,CAAA,CAAAsD,IAAA,IAAA7D,CAAA,CAAAJ,CAAA,CAAA0E,UAAA,IAAA/D,CAAA,CAAAe,KAAA,EAAAtB,CAAA,CAAAuE,IAAA,GAAA3E,CAAA,CAAA4E,OAAA,eAAAxE,CAAA,CAAA8D,MAAA,KAAA9D,CAAA,CAAA8D,MAAA,WAAA9D,CAAA,CAAAqC,GAAA,GAAApC,CAAA,GAAAD,CAAA,CAAA+D,QAAA,SAAArB,CAAA,IAAAnC,CAAA,IAAAP,CAAA,CAAA8D,MAAA,YAAA9D,CAAA,CAAAqC,GAAA,OAAAgC,SAAA,sCAAArE,CAAA,CAAA+D,QAAA,SAAArB,CAAA,cAAA+B,aAAAxE,CAAA,QAAAL,CAAA,KAAA8E,MAAA,EAAAzE,CAAA,YAAAA,CAAA,KAAAL,CAAA,CAAA+E,QAAA,GAAA1E,CAAA,WAAAA,CAAA,KAAAL,CAAA,CAAAgF,UAAA,GAAA3E,CAAA,KAAAL,CAAA,CAAAiF,QAAA,GAAA5E,CAAA,WAAA6E,UAAA,CAAAC,IAAA,CAAAnF,CAAA,cAAAoF,cAAA/E,CAAA,QAAAL,CAAA,GAAAK,CAAA,CAAAgF,UAAA,QAAArF,CAAA,CAAAwC,IAAA,oBAAAxC,CAAA,CAAAyC,GAAA,EAAApC,CAAA,CAAAgF,UAAA,GAAArF,CAAA,aAAAqC,QAAAhC,CAAA,SAAA6E,UAAA,MAAAJ,MAAA,aAAAzE,CAAA,CAAAmD,OAAA,CAAAqB,YAAA,cAAAS,KAAA,iBAAAjC,OAAArD,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAI,CAAA,GAAAJ,CAAA,CAAAW,CAAA,OAAAP,CAAA,SAAAA,CAAA,CAAAa,IAAA,CAAAjB,CAAA,4BAAAA,CAAA,CAAA2E,IAAA,SAAA3E,CAAA,OAAAuF,KAAA,CAAAvF,CAAA,CAAAwF,MAAA,SAAApE,CAAA,OAAAF,CAAA,YAAAyD,KAAA,aAAAvD,CAAA,GAAApB,CAAA,CAAAwF,MAAA,OAAA/E,CAAA,CAAAQ,IAAA,CAAAjB,CAAA,EAAAoB,CAAA,UAAAuD,IAAA,CAAAjD,KAAA,GAAA1B,CAAA,CAAAoB,CAAA,GAAAuD,IAAA,CAAAV,IAAA,OAAAU,IAAA,SAAAA,IAAA,CAAAjD,KAAA,GAAArB,CAAA,EAAAsE,IAAA,CAAAV,IAAA,OAAAU,IAAA,YAAAzD,CAAA,CAAAyD,IAAA,GAAAzD,CAAA,gBAAAuD,SAAA,CAAAnE,OAAA,CAAAN,CAAA,kCAAA+C,iBAAA,CAAAvB,SAAA,GAAAwB,0BAAA,EAAA5B,CAAA,CAAAkC,CAAA,mBAAA5B,KAAA,EAAAsB,0BAAA,EAAAhB,YAAA,SAAAZ,CAAA,CAAA4B,0BAAA,mBAAAtB,KAAA,EAAAqB,iBAAA,EAAAf,YAAA,SAAAe,iBAAA,CAAA0C,WAAA,GAAA3D,MAAA,CAAAkB,0BAAA,EAAAjC,CAAA,wBAAAf,CAAA,CAAA0F,mBAAA,aAAArF,CAAA,QAAAL,CAAA,wBAAAK,CAAA,IAAAA,CAAA,CAAAkB,WAAA,WAAAvB,CAAA,KAAAA,CAAA,KAAA+C,iBAAA,6BAAA/C,CAAA,CAAAyF,WAAA,IAAAzF,CAAA,CAAA2F,IAAA,OAAA3F,CAAA,CAAA4F,IAAA,aAAAvF,CAAA,WAAAO,MAAA,CAAAiF,cAAA,GAAAjF,MAAA,CAAAiF,cAAA,CAAAxF,CAAA,EAAA2C,0BAAA,KAAA3C,CAAA,CAAAK,SAAA,GAAAsC,0BAAA,EAAAlB,MAAA,CAAAzB,CAAA,EAAAU,CAAA,yBAAAV,CAAA,CAAAmB,SAAA,GAAAZ,MAAA,CAAAwB,MAAA,CAAAkB,CAAA,GAAAjD,CAAA,KAAAL,CAAA,CAAA8F,KAAA,aAAAzF,CAAA,aAAAwD,OAAA,EAAAxD,CAAA,OAAAkD,qBAAA,CAAAG,aAAA,CAAAlC,SAAA,GAAAM,MAAA,CAAA4B,aAAA,CAAAlC,SAAA,EAAAG,CAAA,iCAAA3B,CAAA,CAAA0D,aAAA,GAAAA,aAAA,EAAA1D,CAAA,CAAA+F,KAAA,aAAA1F,CAAA,EAAAD,CAAA,EAAAK,CAAA,EAAAW,CAAA,EAAAF,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA8E,OAAA,OAAArF,CAAA,OAAA+C,aAAA,CAAAxB,IAAA,CAAA7B,CAAA,EAAAD,CAAA,EAAAK,CAAA,EAAAW,CAAA,GAAAF,CAAA,UAAAlB,CAAA,CAAA0F,mBAAA,CAAAtF,CAAA,IAAAO,CAAA,GAAAA,CAAA,CAAAgE,IAAA,GAAAb,IAAA,WAAAzD,CAAA,WAAAA,CAAA,CAAA4D,IAAA,GAAA5D,CAAA,CAAAqB,KAAA,GAAAf,CAAA,CAAAgE,IAAA,WAAApB,qBAAA,CAAAD,CAAA,GAAAxB,MAAA,CAAAwB,CAAA,EAAAvC,CAAA,gBAAAe,MAAA,CAAAwB,CAAA,EAAA3C,CAAA,iCAAAmB,MAAA,CAAAwB,CAAA,6DAAAtD,CAAA,CAAAiG,IAAA,aAAA5F,CAAA,QAAAL,CAAA,GAAAY,MAAA,CAAAP,CAAA,GAAAD,CAAA,gBAAAK,CAAA,IAAAT,CAAA,EAAAI,CAAA,CAAA+E,IAAA,CAAA1E,CAAA,UAAAL,CAAA,CAAA8F,OAAA,aAAAvB,KAAA,WAAAvE,CAAA,CAAAoF,MAAA,SAAAnF,CAAA,GAAAD,CAAA,CAAA+F,GAAA,QAAA9F,CAAA,IAAAL,CAAA,SAAA2E,IAAA,CAAAjD,KAAA,GAAArB,CAAA,EAAAsE,IAAA,CAAAV,IAAA,OAAAU,IAAA,WAAAA,IAAA,CAAAV,IAAA,OAAAU,IAAA,QAAA3E,CAAA,CAAAqD,MAAA,GAAAA,MAAA,EAAAhB,OAAA,CAAAb,SAAA,KAAAD,WAAA,EAAAc,OAAA,EAAAiD,KAAA,WAAAA,MAAAtF,CAAA,aAAAoG,IAAA,WAAAzB,IAAA,WAAAN,IAAA,QAAAC,KAAA,GAAAjE,CAAA,OAAA4D,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAAzB,GAAA,GAAApC,CAAA,OAAA6E,UAAA,CAAA1B,OAAA,CAAA4B,aAAA,IAAApF,CAAA,WAAAI,CAAA,kBAAAA,CAAA,CAAAiG,MAAA,OAAA5F,CAAA,CAAAQ,IAAA,OAAAb,CAAA,MAAAmF,KAAA,EAAAnF,CAAA,CAAAkG,KAAA,cAAAlG,CAAA,IAAAC,CAAA,MAAAkG,IAAA,WAAAA,KAAA,SAAAtC,IAAA,WAAA5D,CAAA,QAAA6E,UAAA,IAAAG,UAAA,kBAAAhF,CAAA,CAAAmC,IAAA,QAAAnC,CAAA,CAAAoC,GAAA,cAAA+D,IAAA,KAAAjC,iBAAA,WAAAA,kBAAAvE,CAAA,aAAAiE,IAAA,QAAAjE,CAAA,MAAAI,CAAA,kBAAAqG,OAAAhG,CAAA,EAAAW,CAAA,WAAAT,CAAA,CAAA6B,IAAA,YAAA7B,CAAA,CAAA8B,GAAA,GAAAzC,CAAA,EAAAI,CAAA,CAAAuE,IAAA,GAAAlE,CAAA,EAAAW,CAAA,KAAAhB,CAAA,CAAA8D,MAAA,WAAA9D,CAAA,CAAAqC,GAAA,GAAApC,CAAA,KAAAe,CAAA,aAAAA,CAAA,QAAA8D,UAAA,CAAAM,MAAA,MAAApE,CAAA,SAAAA,CAAA,QAAAF,CAAA,QAAAgE,UAAA,CAAA9D,CAAA,GAAAT,CAAA,GAAAO,CAAA,CAAAmE,UAAA,iBAAAnE,CAAA,CAAA4D,MAAA,SAAA2B,MAAA,aAAAvF,CAAA,CAAA4D,MAAA,SAAAsB,IAAA,QAAAzE,CAAA,GAAAlB,CAAA,CAAAQ,IAAA,CAAAC,CAAA,eAAAH,CAAA,GAAAN,CAAA,CAAAQ,IAAA,CAAAC,CAAA,qBAAAS,CAAA,IAAAZ,CAAA,aAAAqF,IAAA,GAAAlF,CAAA,CAAA6D,QAAA,SAAA0B,MAAA,CAAAvF,CAAA,CAAA6D,QAAA,gBAAAqB,IAAA,GAAAlF,CAAA,CAAA8D,UAAA,SAAAyB,MAAA,CAAAvF,CAAA,CAAA8D,UAAA,cAAArD,CAAA,aAAAyE,IAAA,GAAAlF,CAAA,CAAA6D,QAAA,SAAA0B,MAAA,CAAAvF,CAAA,CAAA6D,QAAA,qBAAAhE,CAAA,QAAAiD,KAAA,qDAAAoC,IAAA,GAAAlF,CAAA,CAAA8D,UAAA,SAAAyB,MAAA,CAAAvF,CAAA,CAAA8D,UAAA,YAAAR,MAAA,WAAAA,OAAAnE,CAAA,EAAAL,CAAA,aAAAI,CAAA,QAAA8E,UAAA,CAAAM,MAAA,MAAApF,CAAA,SAAAA,CAAA,QAAAgB,CAAA,QAAA8D,UAAA,CAAA9E,CAAA,OAAAgB,CAAA,CAAA0D,MAAA,SAAAsB,IAAA,IAAA3F,CAAA,CAAAQ,IAAA,CAAAG,CAAA,wBAAAgF,IAAA,GAAAhF,CAAA,CAAA4D,UAAA,QAAA9D,CAAA,GAAAE,CAAA,aAAAF,CAAA,iBAAAb,CAAA,mBAAAA,CAAA,KAAAa,CAAA,CAAA4D,MAAA,IAAA9E,CAAA,IAAAA,CAAA,IAAAkB,CAAA,CAAA8D,UAAA,KAAA9D,CAAA,cAAAP,CAAA,GAAAO,CAAA,GAAAA,CAAA,CAAAmE,UAAA,cAAA1E,CAAA,CAAA6B,IAAA,GAAAnC,CAAA,EAAAM,CAAA,CAAA8B,GAAA,GAAAzC,CAAA,EAAAkB,CAAA,SAAAgD,MAAA,gBAAAS,IAAA,GAAAzD,CAAA,CAAA8D,UAAA,EAAAlC,CAAA,SAAA4D,QAAA,CAAA/F,CAAA,MAAA+F,QAAA,WAAAA,SAAArG,CAAA,EAAAL,CAAA,oBAAAK,CAAA,CAAAmC,IAAA,QAAAnC,CAAA,CAAAoC,GAAA,qBAAApC,CAAA,CAAAmC,IAAA,mBAAAnC,CAAA,CAAAmC,IAAA,QAAAmC,IAAA,GAAAtE,CAAA,CAAAoC,GAAA,gBAAApC,CAAA,CAAAmC,IAAA,SAAAgE,IAAA,QAAA/D,GAAA,GAAApC,CAAA,CAAAoC,GAAA,OAAAyB,MAAA,kBAAAS,IAAA,yBAAAtE,CAAA,CAAAmC,IAAA,IAAAxC,CAAA,UAAA2E,IAAA,GAAA3E,CAAA,GAAA8C,CAAA,KAAA6D,MAAA,WAAAA,OAAAtG,CAAA,aAAAL,CAAA,QAAAkF,UAAA,CAAAM,MAAA,MAAAxF,CAAA,SAAAA,CAAA,QAAAI,CAAA,QAAA8E,UAAA,CAAAlF,CAAA,OAAAI,CAAA,CAAA4E,UAAA,KAAA3E,CAAA,cAAAqG,QAAA,CAAAtG,CAAA,CAAAiF,UAAA,EAAAjF,CAAA,CAAA6E,QAAA,GAAAG,aAAA,CAAAhF,CAAA,GAAA0C,CAAA,yBAAA8D,OAAAvG,CAAA,aAAAL,CAAA,QAAAkF,UAAA,CAAAM,MAAA,MAAAxF,CAAA,SAAAA,CAAA,QAAAI,CAAA,QAAA8E,UAAA,CAAAlF,CAAA,OAAAI,CAAA,CAAA0E,MAAA,KAAAzE,CAAA,QAAAI,CAAA,GAAAL,CAAA,CAAAiF,UAAA,kBAAA5E,CAAA,CAAA+B,IAAA,QAAApB,CAAA,GAAAX,CAAA,CAAAgC,GAAA,EAAA2C,aAAA,CAAAhF,CAAA,YAAAgB,CAAA,YAAA4C,KAAA,8BAAA6C,aAAA,WAAAA,cAAA7G,CAAA,EAAAI,CAAA,EAAAK,CAAA,gBAAA0D,QAAA,KAAA7C,QAAA,EAAA+B,MAAA,CAAArD,CAAA,GAAA0E,UAAA,EAAAtE,CAAA,EAAAwE,OAAA,EAAAnE,CAAA,oBAAAyD,MAAA,UAAAzB,GAAA,GAAApC,CAAA,GAAAyC,CAAA,OAAA9C,CAAA;AAAA,SAAA8G,mBAAArG,CAAA,EAAAJ,CAAA,EAAAL,CAAA,EAAAI,CAAA,EAAAgB,CAAA,EAAAT,CAAA,EAAAgB,CAAA,cAAAT,CAAA,GAAAT,CAAA,CAAAE,CAAA,EAAAgB,CAAA,GAAAZ,CAAA,GAAAG,CAAA,CAAAQ,KAAA,WAAAjB,CAAA,gBAAAT,CAAA,CAAAS,CAAA,KAAAS,CAAA,CAAA+C,IAAA,GAAA5D,CAAA,CAAAU,CAAA,IAAAiF,OAAA,CAAApC,OAAA,CAAA7C,CAAA,EAAA+C,IAAA,CAAA1D,CAAA,EAAAgB,CAAA;AAAA,SAAA2F,kBAAAtG,CAAA,6BAAAJ,CAAA,SAAAL,CAAA,GAAAgH,SAAA,aAAAhB,OAAA,WAAA5F,CAAA,EAAAgB,CAAA,QAAAT,CAAA,GAAAF,CAAA,CAAAwG,KAAA,CAAA5G,CAAA,EAAAL,CAAA,YAAAkH,MAAAzG,CAAA,IAAAqG,kBAAA,CAAAnG,CAAA,EAAAP,CAAA,EAAAgB,CAAA,EAAA8F,KAAA,EAAAC,MAAA,UAAA1G,CAAA,cAAA0G,OAAA1G,CAAA,IAAAqG,kBAAA,CAAAnG,CAAA,EAAAP,CAAA,EAAAgB,CAAA,EAAA8F,KAAA,EAAAC,MAAA,WAAA1G,CAAA,KAAAyG,KAAA;AAAA,SAAAE,2BAAAhH,CAAA,EAAAJ,CAAA,QAAAK,CAAA,yBAAAgB,MAAA,IAAAjB,CAAA,CAAAiB,MAAA,CAAAC,QAAA,KAAAlB,CAAA,qBAAAC,CAAA,QAAAgH,KAAA,CAAAC,OAAA,CAAAlH,CAAA,MAAAC,CAAA,GAAAkH,2BAAA,CAAAnH,CAAA,MAAAJ,CAAA,IAAAI,CAAA,uBAAAA,CAAA,CAAAoF,MAAA,IAAAnF,CAAA,KAAAD,CAAA,GAAAC,CAAA,OAAAmH,EAAA,MAAAC,CAAA,YAAAA,EAAA,eAAA5E,CAAA,EAAA4E,CAAA,EAAAhH,CAAA,WAAAA,EAAA,WAAA+G,EAAA,IAAApH,CAAA,CAAAoF,MAAA,KAAAvB,IAAA,WAAAA,IAAA,MAAAvC,KAAA,EAAAtB,CAAA,CAAAoH,EAAA,UAAAxH,CAAA,WAAAA,EAAAI,CAAA,UAAAA,CAAA,KAAAwC,CAAA,EAAA6E,CAAA,gBAAAhD,SAAA,iJAAArD,CAAA,EAAAT,CAAA,OAAAI,CAAA,gBAAA8B,CAAA,WAAAA,EAAA,IAAAxC,CAAA,GAAAA,CAAA,CAAAY,IAAA,CAAAb,CAAA,MAAAK,CAAA,WAAAA,EAAA,QAAAL,CAAA,GAAAC,CAAA,CAAAsE,IAAA,WAAAhE,CAAA,GAAAP,CAAA,CAAA6D,IAAA,EAAA7D,CAAA,KAAAJ,CAAA,WAAAA,EAAAI,CAAA,IAAAW,CAAA,OAAAK,CAAA,GAAAhB,CAAA,KAAAwC,CAAA,WAAAA,EAAA,UAAAjC,CAAA,YAAAN,CAAA,cAAAA,CAAA,8BAAAU,CAAA,QAAAK,CAAA;AAAA,SAAAmG,4BAAAnH,CAAA,EAAAO,CAAA,QAAAP,CAAA,2BAAAA,CAAA,SAAAsH,iBAAA,CAAAtH,CAAA,EAAAO,CAAA,OAAAN,CAAA,MAAAsH,QAAA,CAAA1G,IAAA,CAAAb,CAAA,EAAAkG,KAAA,6BAAAjG,CAAA,IAAAD,CAAA,CAAAmB,WAAA,KAAAlB,CAAA,GAAAD,CAAA,CAAAmB,WAAA,CAAAoE,IAAA,aAAAtF,CAAA,cAAAA,CAAA,GAAAgH,KAAA,CAAAO,IAAA,CAAAxH,CAAA,oBAAAC,CAAA,+CAAAwH,IAAA,CAAAxH,CAAA,IAAAqH,iBAAA,CAAAtH,CAAA,EAAAO,CAAA;AAAA,SAAA+G,kBAAAtH,CAAA,EAAAO,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAP,CAAA,CAAAoF,MAAA,MAAA7E,CAAA,GAAAP,CAAA,CAAAoF,MAAA,YAAAxF,CAAA,MAAAS,CAAA,GAAA4G,KAAA,CAAA1G,CAAA,GAAAX,CAAA,GAAAW,CAAA,EAAAX,CAAA,IAAAS,CAAA,CAAAT,CAAA,IAAAI,CAAA,CAAAJ,CAAA,UAAAS,CAAA;AAAA,SAAAqH,gBAAAnH,CAAA,EAAAF,CAAA,UAAAE,CAAA,YAAAF,CAAA,aAAAgE,SAAA;AAAA,SAAAsD,kBAAA/H,CAAA,EAAAI,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAoF,MAAA,EAAAnF,CAAA,UAAAe,CAAA,GAAAhB,CAAA,CAAAC,CAAA,GAAAe,CAAA,CAAAW,UAAA,GAAAX,CAAA,CAAAW,UAAA,QAAAX,CAAA,CAAAY,YAAA,kBAAAZ,CAAA,KAAAA,CAAA,CAAAa,QAAA,QAAArB,MAAA,CAAAC,cAAA,CAAAb,CAAA,EAAAgI,cAAA,CAAA5G,CAAA,CAAA6G,GAAA,GAAA7G,CAAA;AAAA,SAAA8G,aAAAlI,CAAA,EAAAI,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAA2H,iBAAA,CAAA/H,CAAA,CAAAwB,SAAA,EAAApB,CAAA,GAAAC,CAAA,IAAA0H,iBAAA,CAAA/H,CAAA,EAAAK,CAAA,GAAAO,MAAA,CAAAC,cAAA,CAAAb,CAAA,iBAAAiC,QAAA,SAAAjC,CAAA;AAAA,SAAAmI,gBAAAnI,CAAA,EAAAI,CAAA,EAAAC,CAAA,YAAAD,CAAA,GAAA4H,cAAA,CAAA5H,CAAA,MAAAJ,CAAA,GAAAY,MAAA,CAAAC,cAAA,CAAAb,CAAA,EAAAI,CAAA,IAAAsB,KAAA,EAAArB,CAAA,EAAA0B,UAAA,MAAAC,YAAA,MAAAC,QAAA,UAAAjC,CAAA,CAAAI,CAAA,IAAAC,CAAA,EAAAL,CAAA;AAAA,SAAAgI,eAAA3H,CAAA,QAAAa,CAAA,GAAAkH,YAAA,CAAA/H,CAAA,gCAAAC,OAAA,CAAAY,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAkH,aAAA/H,CAAA,EAAAD,CAAA,oBAAAE,OAAA,CAAAD,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAL,CAAA,GAAAK,CAAA,CAAAgB,MAAA,CAAAgH,WAAA,kBAAArI,CAAA,QAAAkB,CAAA,GAAAlB,CAAA,CAAAiB,IAAA,CAAAZ,CAAA,EAAAD,CAAA,gCAAAE,OAAA,CAAAY,CAAA,UAAAA,CAAA,YAAAuD,SAAA,yEAAArE,CAAA,GAAAkI,MAAA,GAAAC,MAAA,EAAAlI,CAAA,KADA;AACA;AACA;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,IAUamI,WAAW,GAAAC,OAAA,CAAAD,WAAA;EA8ItB,SAAAA,YACEE,MAAiC,EACjCT,GAA2B,EAC3B;IAAAH,eAAA,OAAAU,WAAA;IAhJF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAlBEL,eAAA;IAyBA;AACF;AACA;AACA;AACA;AACA;IALEA,eAAA;IAQA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAjDEA,eAAA;IAwDA;AACF;AACA;AACA;AACA;AACA;IALEA,eAAA;IAWA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IAPEA,eAAA;IA6CE,IAAIF,GAAG,KAAKU,eAAe,EAAE;MAC3B,MAAM9J,EAAE,CAAC+J,uBAAuB,CAAC,oBAAoB,CAAC;IACxD;IAEA,IAAMC,MAAM,GAAGC,iBAAK,GAChB,IAAIA,iBAAK,CAACC,MAAM,CAAC;MAAEpD,IAAI,EAAE,aAAa;MAAEqD,aAAa,EAAEN;IAAO,CAAC,CAAC,GAChE,IAAI;IAER,IAAMO,WAAW,GAAGpK,EAAE,CAACqK,UAAU,CAAoB,CAAC;IAEtD,IAAMC,YAAY,GAAG,IAAAC,iBAAW,EAU9B;MAAA,OAAMvK,EAAE,CAACwK,MAAM,CAAC,CAAC;IA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","ignoreList":[]}