{"version":3,"file":"scroll-to-top.cjs","names":["MC","_interopRequireWildcard","require","MH","_cssAlter","_domAlter","_domEvents","_domSearch","_event","_validation","_views","_scrollWatcher","_viewWatcher","_widget","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ScrollToTop","Widget","element","mainWidget","instance","DUMMY_ID","isInstanceOf","register","registerWidget","WIDGET_NAME","config","newConfigValidator","enableMain","button","createButton","widget","onDestroy","moveElement","waitForElement","getBody","then","body","isDestroyed","to","constructor","_ScrollToTop$get","destroyPromise","destroy","id","offset","S_TOP","prefixCssVar","position","S_RIGHT","scrollable","hasCustomScrollable","getDocElement","scrollWatcher","ScrollWatcher","reuse","viewWatcher","ViewWatcher","root","clickListener","scrollTo","top","left","arrow","createElement","showIt","showElement","hideIt","hideElement","promiseResolve","replaceElement","ignoreMove","disableInitialTransition","addClasses","PREFIX_ROOT","PREFIX_BTN","setBooleanData","PREFIX_FIXED","setData","PREFIX_PLACE","insertArrow","S_UP","addEventListenerTo","S_CLICK","onView","views","S_AT","S_BELOW","S_ABOVE","onDisable","undisplayElement","onEnable","displayElement","removeEventListenerFrom","removeClasses","delData","offView","exports","PREFIXED_NAME","prefixName","key","value","validateString","isValidScrollOffset","v","S_LEFT","_ref","isLiteralString","waitForReferenceElement","undefined"],"sources":["../../../src/ts/widgets/scroll-to-top.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { ScrollOffset } from \"@lisn/globals/types\";\n\nimport {\n  showElement,\n  hideElement,\n  displayElement,\n  undisplayElement,\n  disableInitialTransition,\n  addClasses,\n  removeClasses,\n  setData,\n  setBooleanData,\n  delData,\n} from \"@lisn/utils/css-alter\";\nimport {\n  replaceElement,\n  moveElement,\n  insertArrow,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { validateString } from \"@lisn/utils/validation\";\nimport { isValidScrollOffset } from \"@lisn/utils/views\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorFunc,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as a {@link ScrollToTop} widget.\n *\n * The ScrollToTop widget adds a scroll-to-top button in the lower right corder\n * of the screen (can be changed to bottom left) which scrolls smoothly (and\n * more slowly than the native scroll) back to the top.\n *\n * The button is only shown when the scroll offset from the top is more than a\n * given configurable amount.\n *\n * **IMPORTANT:** When configuring an existing element as the button (i.e. using\n * `new ScrollToTop` or auto-widgets, rather than {@link ScrollToTop.enableMain}):\n * - if using {@link settings.mainScrollableElementSelector}, the button element\n *   will have it's CSS position set to `fixed`;\n * - otherwise, if using a custom scrollable element, the button element may be\n *   moved in the DOM tree in order to position it on top of the scrollable\n * If you don't want the button element changed in any way, then consider using\n * the {@link Triggers.ClickTrigger | ClickTrigger} with a\n * {@link Actions.ScrollTo | ScrollTo} action.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link ScrollToTop}\n * widget on a given element. Use {@link ScrollToTop.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the element:\n * - `data-lisn-place`: `\"left\"` or `\"right\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-scroll-to-top` class or `data-lisn-scroll-to-top` attribute set on\n *   the element that constitutes the widget. The element should be empty.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This will create a scroll-to-top button using the JavaScript API.\n *\n * This will work even if\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}) is false.\n *\n * ```html\n * <!-- LISN should be loaded beforehand -->\n * <script>\n *   LISN.widgets.ScrollToTop.enableMain({\n *     position: \"left\",\n *     offset: \"top: 300vh\"\n *   });\n * </script>\n * ```\n *\n * You can customise the offset show/hide trigger via CSS as well as long as\n * {@link ScrollToTopConfig.offset} is left at its default value which uses\n * this CSS property:\n *\n * ```html\n * <style type=\"text/css\" media=\"screen\">\n *   :root {\n *     --lisn-scroll-to-top--offset: 300vh;\n *   }\n * </style>\n * ```\n *\n * @example\n * This will configure the given element as a scroll-to-top button for the main\n * scrolling element using an existing element for the button with default\n * {@link ScrollToTopConfig}.\n *\n * ```html\n * <button class=\"lisn-scroll-to-top\"></button>\n * ```\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <button data-lisn-scroll-to-top=\"position=left | offset=top:300vh\"></button>\n * ```\n *\n * @example\n * This will configure the given element as a scroll-to-top button for a custom\n * scrolling element (i.e. one with overflow \"auto\" or \"scroll\").\n *\n * ```html\n * <div id=\"scrollable\">\n *   <!-- content here... -->\n * </div>\n * <button data-lisn-scroll-to-top=\"scrollable=#scrollable\"></button>\n * ```\n *\n * @example\n * As above, but using a reference specification with a class name to find the\n * scrollable.\n *\n * ```html\n * <div class=\"scrollable\">\n *   <!-- content here... -->\n * </div>\n * <button data-lisn-scroll-to-top=\"scrollable=prev.scrollable\"></button>\n * ```\n *\n * @example\n * As above but with all custom settings.\n *\n * ```html\n * <div class=\"scrollable\">\n *   <!-- content here... -->\n * </div>\n * <button data-lisn-scroll-to-top=\"scrollable=prev.scrollable\n *                               | position=left\n *                               | offset=top:300vh\n * \"></button>\n * ```\n */\nexport class ScrollToTop extends Widget {\n  /**\n   * If element is omitted, returns the instance created by {@link enableMain}\n   * if any.\n   */\n  static get(element?: Element): ScrollToTop | null {\n    if (!element) {\n      return mainWidget;\n    }\n\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, ScrollToTop)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!ScrollToTop.get(element)) {\n          return new ScrollToTop(element, config);\n        }\n        return null;\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * Creates a new button element, inserts it into the document body and\n   * configures it as a {@link ScrollToTop}.\n   */\n  static enableMain(config?: ScrollToTopConfig) {\n    const button = MH.createButton(\"Back to top\");\n    const widget = new ScrollToTop(button, config);\n    widget.onDestroy(() => {\n      if (mainWidget === widget) {\n        mainWidget = null;\n      }\n      return moveElement(button);\n    });\n\n    waitForElement(MH.getBody).then((body) => {\n      if (!widget.isDestroyed()) {\n        moveElement(button, { to: body });\n      }\n    });\n\n    mainWidget = widget;\n    return widget;\n  }\n\n  constructor(element: Element, config?: ScrollToTopConfig) {\n    const destroyPromise = ScrollToTop.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const offset: ScrollOffset =\n      config?.offset ||\n      `${MC.S_TOP}: var(${MH.prefixCssVar(\"scroll-to-top--offset\")}, 200vh)`;\n    const position: \"left\" | \"right\" = config?.position || MC.S_RIGHT;\n    const scrollable = config?.scrollable;\n    const hasCustomScrollable =\n      scrollable &&\n      scrollable !== MH.getDocElement() &&\n      scrollable !== MH.getBody();\n\n    const scrollWatcher = ScrollWatcher.reuse();\n    const viewWatcher = ViewWatcher.reuse(\n      hasCustomScrollable ? { root: scrollable } : {},\n    );\n\n    const clickListener = () =>\n      scrollWatcher.scrollTo({ top: 0, left: 0 }, { scrollable });\n\n    let arrow: Element;\n    const root = hasCustomScrollable ? MH.createElement(\"div\") : element;\n\n    const showIt = () => {\n      showElement(root);\n    };\n\n    const hideIt = () => {\n      hideElement(root);\n    };\n\n    // SETUP ------------------------------\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      if (root !== element) {\n        // wrap the button\n        replaceElement(element, root, { ignoreMove: true });\n        moveElement(element, { to: root, ignoreMove: true });\n      }\n      disableInitialTransition(root);\n      addClasses(root, PREFIX_ROOT);\n      addClasses(element, PREFIX_BTN);\n      setBooleanData(root, PREFIX_FIXED, !hasCustomScrollable);\n      setData(root, MC.PREFIX_PLACE, position);\n\n      arrow = insertArrow(element, MC.S_UP);\n\n      hideIt(); // initial\n\n      addEventListenerTo(element, MC.S_CLICK, clickListener);\n\n      viewWatcher.onView(offset, showIt, {\n        views: [MC.S_AT, MC.S_BELOW],\n      });\n\n      viewWatcher.onView(offset, hideIt, {\n        views: [MC.S_ABOVE],\n      });\n\n      this.onDisable(() => {\n        undisplayElement(root);\n      });\n\n      this.onEnable(() => {\n        displayElement(root);\n      });\n\n      this.onDestroy(async () => {\n        removeEventListenerFrom(element, MC.S_CLICK, clickListener);\n\n        await removeClasses(root, PREFIX_ROOT);\n        await removeClasses(element, PREFIX_BTN);\n        await delData(root, PREFIX_FIXED);\n        await delData(root, MC.PREFIX_PLACE);\n        await displayElement(root); // revert undisplay by onDisable\n\n        if (arrow) {\n          await moveElement(arrow); // remove\n        }\n        if (root !== element) {\n          // unwrap the button\n          replaceElement(root, element, { ignoreMove: true });\n        }\n\n        viewWatcher.offView(offset, showIt);\n        viewWatcher.offView(offset, hideIt);\n      });\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type ScrollToTopConfig = {\n  /**\n   * The button will be shown when the scroll top offset of the page is below\n   * the given value, and hidden otherwise. Accepts a colon-separated key:value\n   * string where the key is \"top\" or \"bottom\" (or if your page scrolls\n   * horizontally, then use \"left\" or \"right\"), and the value can be any valid\n   * CSS length specification, e.g. \"top: 200vh\" or \"top: var(--offset, 50%)\".\n   *\n   * Alternatively, you set the `--lisn-scroll-to-top--offset` CSS variable on\n   * the document root, which is used by the default value.\n   *\n   * @defaultValue \"top: var(--lisn-scroll-to-top--offset, 200vh)\"\n   */\n  offset?: ScrollOffset;\n\n  /**\n   * The horizontal position of the scroll-to-top button.\n   *\n   * @defaultValue \"right\"\n   */\n  position?: \"left\" | \"right\";\n\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  scrollable?: Element;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"scroll-to-top\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\n// Only one ScrollToTop widget per element is allowed, but Widget requires a\n// non-blank ID.\n// In fact, it doesn't make much sense to have more than 1 scroll-to-top button\n// on the whole page, but we support it, hence use a class rather than a DOM ID.\nconst DUMMY_ID = PREFIXED_NAME;\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_BTN = `${PREFIXED_NAME}__btn`;\nconst PREFIX_FIXED = MH.prefixName(\"fixed\");\n\nlet mainWidget: ScrollToTop | null = null;\n\nconst newConfigValidator: WidgetConfigValidatorFunc<ScrollToTopConfig> = (\n  element,\n) => {\n  return {\n    offset: (key, value) => validateString(key, value, isValidScrollOffset),\n    position: (key, value) =>\n      validateString(key, value, (v) => v === MC.S_LEFT || v === MC.S_RIGHT),\n    scrollable: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n"],"mappings":"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","ignoreList":[]}