{"version":3,"file":"lisn.slim.es.js","sources":["../../lisn.js/src/ts/globals/minification-constants.ts","../../lisn.js/src/ts/globals/errors.ts","../../lisn.js/src/ts/globals/minification-helpers.ts","../../lisn.js/src/ts/globals/settings.ts","../../lisn.js/src/ts/utils/math.ts","../../lisn.js/src/ts/utils/misc.ts","../../lisn.js/src/ts/utils/text.ts","../../lisn.js/src/ts/utils/validation.ts","../../lisn.js/src/ts/modules/bit-spaces.ts","../../lisn.js/src/ts/utils/dom.ts","../../lisn.js/src/ts/utils/tasks.ts","../../lisn.js/src/ts/modules/callback.ts","../../lisn.js/src/ts/utils/log.ts","../../lisn.js/src/ts/utils/dom-optimize.ts","../../lisn.js/src/ts/utils/dom-query.ts","../../lisn.js/src/ts/utils/css-alter.ts","../../lisn.js/src/ts/utils/dom-alter.ts","../../lisn.js/src/ts/utils/dom-events.ts","../../lisn.js/src/ts/modules/x-map.ts","../../lisn.js/src/ts/watchers/dom-watcher.ts","../../lisn.js/src/ts/utils/directions.ts","../../lisn.js/src/ts/utils/event.ts","../../lisn.js/src/ts/utils/gesture.ts","../../lisn.js/src/ts/utils/gesture-key.ts","../../lisn.js/src/ts/utils/gesture-pointer.ts","../../lisn.js/src/ts/utils/gesture-touch.ts","../../lisn.js/src/ts/utils/normalize-wheel.ts","../../lisn.js/src/ts/utils/gesture-wheel.ts","../../lisn.js/src/ts/watchers/gesture-watcher.ts","../../lisn.js/src/ts/utils/layout.ts","../../lisn.js/src/ts/utils/animations.ts","../../lisn.js/src/ts/utils/scroll.ts","../../lisn.js/src/ts/utils/overlays.ts","../../lisn.js/src/ts/utils/size.ts","../../lisn.js/src/ts/modules/x-resize-observer.ts","../../lisn.js/src/ts/watchers/size-watcher.ts","../../lisn.js/src/ts/watchers/layout-watcher.ts","../../lisn.js/src/ts/utils/pointer.ts","../../lisn.js/src/ts/watchers/pointer-watcher.ts","../../lisn.js/src/ts/watchers/scroll-watcher.ts","../../lisn.js/src/ts/utils/views.ts","../../lisn.js/src/ts/modules/x-intersection-observer.ts","../../lisn.js/src/ts/watchers/view-watcher.ts","../../lisn.js/src/ts/watchers/index.ts","../../lisn.js/src/ts/bundle-essentials.ts","../../lisn.js/src/ts/widgets/widget.ts","../../lisn.js/src/ts/actions/action.ts","../../lisn.js/src/ts/actions/add-class.ts","../../lisn.js/src/ts/actions/animate.ts","../../lisn.js/src/ts/actions/animate-play.ts","../../lisn.js/src/ts/actions/display.ts","../../lisn.js/src/ts/utils/dom-search.ts","../../lisn.js/src/ts/triggers/trigger.ts","../../lisn.js/src/ts/actions/trigger.ts","../../lisn.js/src/ts/actions/scroll-to.ts","../../lisn.js/src/ts/actions/set-attribute.ts","../../lisn.js/src/ts/actions/show.ts","../../lisn.js/src/ts/utils/position.ts","../../lisn.js/src/ts/widgets/openable.ts","../../lisn.js/src/ts/actions/open.ts","../../lisn.js/src/ts/widgets/pager.ts","../../lisn.js/src/ts/actions/pager.ts","../../lisn.js/src/ts/actions/index.ts","../../lisn.js/src/ts/triggers/check-trigger.ts","../../lisn.js/src/ts/triggers/pointer-trigger.ts","../../lisn.js/src/ts/triggers/layout-trigger.ts","../../lisn.js/src/ts/triggers/load-trigger.ts","../../lisn.js/src/ts/triggers/scroll-trigger.ts","../../lisn.js/src/ts/triggers/view-trigger.ts","../../lisn.js/src/ts/triggers/index.ts","../../lisn.js/src/ts/bundle-slim.ts"],"sourcesContent":["/**\n * For minification optimization.\n *\n * @module\n * @ignore\n * @internal\n */\n\nexport const PREFIX = \"lisn\";\nexport const LOG_PREFIX = \"[LISN.js]\";\n\nexport const OBJECT = Object;\nexport const SYMBOL = Symbol;\nexport const ARRAY = Array;\nexport const STRING = String;\nexport const FUNCTION = Function;\nexport const MATH = Math;\nexport const NUMBER = Number;\nexport const PROMISE = Promise;\n\nexport const PI = MATH.PI;\nexport const INFINITY = Infinity;\n\nexport const S_ABSOLUTE = \"absolute\";\nexport const S_FIXED = \"fixed\";\nexport const S_STICKY = \"sticky\";\n\nexport const S_WIDTH = \"width\";\nexport const S_HEIGHT = \"height\";\n\nexport const S_TOP = \"top\";\nexport const S_BOTTOM = \"bottom\";\n\nexport const S_UP = \"up\";\nexport const S_DOWN = \"down\";\n\nexport const S_LEFT = \"left\";\nexport const S_RIGHT = \"right\";\n\nexport const S_AT = \"at\";\nexport const S_ABOVE = \"above\";\nexport const S_BELOW = \"below\";\n\nexport const S_IN = \"in\";\nexport const S_OUT = \"out\";\n\nexport const S_NONE = \"none\";\nexport const S_AMBIGUOUS = \"ambiguous\";\n\nexport const S_ADDED = \"added\";\nexport const S_REMOVED = \"removed\";\nexport const S_ATTRIBUTE = \"attribute\";\n\nexport const S_KEY = \"key\";\nexport const S_MOUSE = \"mouse\";\nexport const S_POINTER = \"pointer\";\nexport const S_TOUCH = \"touch\";\nexport const S_WHEEL = \"wheel\";\nexport const S_CLICK = \"click\";\nexport const S_HOVER = \"hover\";\nexport const S_PRESS = \"press\";\n\nexport const S_SCROLL = \"scroll\";\nexport const S_ZOOM = \"zoom\";\nexport const S_DRAG = \"drag\";\nexport const S_UNKNOWN = \"unknown\";\n\nexport const S_SCROLL_TOP = `${S_SCROLL}Top`;\nexport const S_SCROLL_LEFT = `${S_SCROLL}Left`;\n\nexport const S_SCROLL_WIDTH = `${S_SCROLL}Width`;\nexport const S_SCROLL_HEIGHT = `${S_SCROLL}Height`;\n\nexport const S_CLIENT_WIDTH = \"clientWidth\";\nexport const S_CLIENT_HEIGHT = \"clientHeight\";\n\nexport const S_SCROLL_TOP_FRACTION = `${S_SCROLL}TopFraction`;\nexport const S_SCROLL_LEFT_FRACTION = `${S_SCROLL}LeftFraction`;\n\nexport const S_HORIZONTAL = \"horizontal\";\nexport const S_VERTICAL = \"vertical\";\nexport const S_SKIP_INITIAL = \"skipInitial\";\nexport const S_DEBOUNCE_WINDOW = \"debounceWindow\";\nexport const S_TOGGLE = \"toggle\";\n\nexport const S_CANCEL = \"cancel\";\n\nexport const S_KEYDOWN = `${S_KEY}${S_DOWN}`;\n\nexport const S_MOUSEUP = `${S_MOUSE}${S_UP}`;\nexport const S_MOUSEDOWN = `${S_MOUSE}${S_DOWN}`;\nexport const S_MOUSEMOVE = `${S_MOUSE}move`;\n\nexport const S_POINTERUP = `${S_POINTER}${S_UP}`;\nexport const S_POINTERDOWN = `${S_POINTER}${S_DOWN}`;\nexport const S_POINTERENTER = `${S_POINTER}enter`;\nexport const S_POINTERLEAVE = `${S_POINTER}leave`;\nexport const S_POINTERMOVE = `${S_POINTER}move`;\nexport const S_POINTERCANCEL = `${S_POINTER}${S_CANCEL}`;\n\nexport const S_TOUCHSTART = `${S_TOUCH}start`;\nexport const S_TOUCHEND = `${S_TOUCH}end`;\nexport const S_TOUCHMOVE = `${S_TOUCH}move`;\nexport const S_TOUCHCANCEL = `${S_TOUCH}${S_CANCEL}`;\n\nexport const S_DRAGSTART = `${S_DRAG}start`;\nexport const S_DRAGEND = `${S_DRAG}end`;\nexport const S_DRAGENTER = `${S_DRAG}enter`;\nexport const S_DRAGOVER = `${S_DRAG}over`;\nexport const S_DRAGLEAVE = `${S_DRAG}leave`;\nexport const S_DROP = \"drop\";\n\nexport const S_SELECTSTART = \"selectstart\";\n\nexport const S_ATTRIBUTES = \"attributes\";\nexport const S_CHILD_LIST = \"childList\";\n\nexport const S_REVERSE = \"reverse\";\nexport const S_DRAGGABLE = \"draggable\";\nexport const S_DISABLED = \"disabled\";\n\nexport const S_ARROW = \"arrow\";\n\nexport const S_ROLE = \"role\";\n\nexport const S_AUTO = \"auto\";\nexport const S_VISIBLE = \"visible\";\n\nexport const ARIA_PREFIX = \"aria-\";\nexport const S_ARIA_CONTROLS = ARIA_PREFIX + \"controls\";\n\nexport const PREFIX_WRAPPER = `${PREFIX}-wrapper`;\nexport const PREFIX_INLINE_WRAPPER = `${PREFIX_WRAPPER}-inline`;\nexport const PREFIX_TRANSITION = `${PREFIX}-transition`;\nexport const PREFIX_TRANSITION_DISABLE = `${PREFIX_TRANSITION}__disable`;\nexport const PREFIX_HIDE = `${PREFIX}-hide`;\nexport const PREFIX_SHOW = `${PREFIX}-show`;\nexport const PREFIX_DISPLAY = `${PREFIX}-display`;\nexport const PREFIX_UNDISPLAY = `${PREFIX}-undisplay`;\nexport const PREFIX_PLACE = `${PREFIX}-place`;\nexport const PREFIX_ORIENTATION = `${PREFIX}-orientation`;\nexport const PREFIX_POSITION = `${PREFIX}-position`;\nexport const PREFIX_GHOST = `${PREFIX}-ghost`;\nexport const PREFIX_BORDER_SIZE = `${PREFIX}-border-size`;\nexport const PREFIX_NO_SELECT = `${PREFIX}-no-select`;\nexport const PREFIX_NO_TOUCH_ACTION = `${PREFIX}-no-touch-action`;\nexport const PREFIX_NO_WRAP = `${PREFIX}-no-wrap`;\n\nexport const S_ANIMATE = \"animate\";\nexport const ANIMATE_PREFIX = `${PREFIX}-${S_ANIMATE}__`;\nexport const PREFIX_ANIMATE_DISABLE = `${ANIMATE_PREFIX}disable`;\nexport const PREFIX_ANIMATE_PAUSE = `${ANIMATE_PREFIX}pause`;\nexport const PREFIX_ANIMATE_REVERSE = `${ANIMATE_PREFIX}${S_REVERSE}`;\nexport const PREFIX_ANIMATE_INFINITE = `${ANIMATE_PREFIX}infinite`;\n","/**\n * @module Errors\n */\n\nimport { LOG_PREFIX } from \"@lisn/globals/minification-constants\";\n\n/**\n * Base error type emitted by LISN.\n */\nexport abstract class LisnError extends Error {}\n\n/**\n * Error type emitted for invalid input or incorrect usage of a function.\n */\nexport class LisnUsageError extends LisnError {\n  constructor(message = \"\") {\n    super(`${LOG_PREFIX} Incorrect usage: ${message}`);\n    this.name = \"LisnUsageError\";\n  }\n}\n\n/**\n * Error type emitted if an assertion is wrong => report bug.\n */\nexport class LisnBugError extends LisnError {\n  constructor(message = \"\") {\n    super(`${LOG_PREFIX} Please report a bug: ${message}`);\n    this.name = \"LisnBugError\";\n  }\n}\n","/**\n * For minification optimization\n *\n * @module\n * @ignore\n * @internal\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  BoundingRect,\n  IterableObject,\n  Constructor,\n  InstanceType,\n  MapBase,\n  SetBase,\n  Spread,\n} from \"@lisn/globals/types\";\n\nimport { LisnUsageError, LisnBugError } from \"@lisn/globals/errors\";\n\n// credit: underscore.js\nexport const root =\n  (typeof self === \"object\" && self.self === self && self) ||\n  (typeof global == \"object\" && global.global === global && global) ||\n  Function(\"return this\")() ||\n  {};\n\nexport const userAgent =\n  typeof navigator === \"undefined\" ? \"\" : navigator.userAgent;\n\nexport const kebabToCamelCase = (str: string) =>\n  str.replace(/-./g, (m) => toUpperCase(m.charAt(1)));\n\nexport const camelToKebabCase = (str: string) =>\n  str\n    .replace(/[A-Z][a-z]/g, (m) => \"-\" + toLowerCase(m))\n    .replace(/[A-Z]+/, (m) => \"-\" + toLowerCase(m));\n\nexport const prefixName = (name: string) => `${MC.PREFIX}-${name}`;\n\nexport const prefixCssVar = (name: string) => \"--\" + prefixName(name);\n\nexport const prefixCssJsVar = (name: string) => prefixCssVar(\"js--\" + name);\n\nexport const prefixData = (name: string) => `data-${camelToKebabCase(name)}`;\n\nexport const prefixLisnData = (name: string) => prefixData(prefixName(name));\n\nexport const toLowerCase = (s: string) => s.toLowerCase();\n\nexport const toUpperCase = (s: string) => s.toUpperCase();\n\nexport const timeNow = Date.now.bind(Date);\n\nexport const timeSince = (startTime: number) => timeNow() - startTime;\n\nexport const hasDOM = () => typeof document !== \"undefined\";\n\nexport const getWindow = () => window;\n\nexport const getDoc = () => document;\n\nexport const getDocElement = () => getDoc().documentElement;\n\nexport const getDocScrollingElement = () =>\n  getDoc().scrollingElement as HTMLElement | null;\n\nexport const getBody = () => getDoc().body;\n\nexport const getReadyState = () => getDoc().readyState;\n\nexport const getPointerType = (event: Event) =>\n  isPointerEvent(event)\n    ? event.pointerType\n    : isMouseEvent(event)\n      ? \"mouse\"\n      : null;\n\nexport const onAnimationFrame = (callback: FrameRequestCallback) =>\n  requestAnimationFrame(callback);\n\nexport const createElement = (\n  tagName: string,\n  options?: ElementCreationOptions,\n) => getDoc().createElement(tagName, options);\n\nexport const createButton = (label = \"\", tag = \"button\") => {\n  const btn = createElement(tag);\n  setTabIndex(btn);\n  setAttr(btn, MC.S_ROLE, \"button\");\n  setAttr(btn, MC.ARIA_PREFIX + \"label\", label);\n  return btn;\n};\n\nexport const isNullish = (v: unknown): v is null | undefined =>\n  v === undefined || v === null;\n\nexport const isEmpty = (v: unknown): v is null | undefined | \"\" =>\n  isNullish(v) || v === \"\";\n\nexport const isIterableObject = (v: unknown): v is IterableObject<unknown> =>\n  isNonPrimitive(v) && MC.SYMBOL.iterator in v;\n\nexport const isArray = (v: unknown) => isInstanceOf(v, MC.ARRAY);\n\nexport const isObject = (v: unknown) => isInstanceOf(v, MC.OBJECT);\n\nexport const isNonPrimitive = (v: unknown): v is object =>\n  v !== null && typeOf(v) === \"object\";\n\n// only primitive number\nexport const isNumber = (v: unknown): v is number => typeOf(v) === \"number\";\n\n/* eslint-disable-next-line @typescript-eslint/no-wrapper-object-types */\nexport const isString = (v: unknown): v is string | String =>\n  typeOf(v) === \"string\" || isInstanceOf(v, MC.STRING);\n\nexport const isLiteralString = (v: unknown): v is string =>\n  typeOf(v) === \"string\";\n\nexport const isBoolean = (v: unknown): v is boolean => typeOf(v) === \"boolean\";\n\n/* eslint-disable-next-line @typescript-eslint/no-unsafe-function-type */\nexport const isFunction = (v: unknown): v is Function =>\n  typeOf(v) === \"function\" || isInstanceOf(v, MC.FUNCTION);\n\nexport const isDoc = (target: unknown): target is Document =>\n  target === getDoc();\n\nexport const isMouseEvent = (event: Event): event is MouseEvent =>\n  isInstanceOf(event, MouseEvent);\n\nexport const isPointerEvent = (event: Event): event is PointerEvent =>\n  typeof PointerEvent !== \"undefined\" && isInstanceOf(event, PointerEvent);\n\nexport const isTouchPointerEvent = (event: Event): event is PointerEvent =>\n  isPointerEvent(event) && getPointerType(event) === MC.S_TOUCH;\n\nexport const isWheelEvent = (event: Event): event is WheelEvent =>\n  isInstanceOf(event, WheelEvent);\n\nexport const isKeyboardEvent = (event: Event): event is KeyboardEvent =>\n  isInstanceOf(event, KeyboardEvent);\n\nexport const isTouchEvent = (event: Event): event is TouchEvent =>\n  typeof TouchEvent !== \"undefined\" && isInstanceOf(event, TouchEvent);\n\nexport const isNode = (target: unknown) => isInstanceOf(target, Node);\n\nexport const isElement = (target: unknown) => isInstanceOf(target, Element);\n\nexport const isHTMLElement = (target: unknown) =>\n  isInstanceOf(target, HTMLElement);\n\nexport const isNodeBAfterA = (nodeA: Node, nodeB: Node) =>\n  (nodeA.compareDocumentPosition(nodeB) & Node.DOCUMENT_POSITION_FOLLOWING) !==\n  0;\n\nexport const strReplace = (\n  s: string,\n  match: string | RegExp,\n  replacement: string,\n) => s.replace(match, replacement);\n\nexport const setTimer = root.setTimeout.bind(root);\n\nexport const clearTimer = root.clearTimeout.bind(root);\n\nexport const getBoundingClientRect = (element: Element) =>\n  element.getBoundingClientRect();\n\n// Copy size properties explicitly to another object so they can be used with\n// the spread operator (DOMRect/DOMRectReadOnly's properties are not enumerable)\nexport const copyBoundingRectProps = (rect: BoundingRect): BoundingRect => {\n  return {\n    x: rect.x,\n    left: rect.left,\n    right: rect.right,\n    [MC.S_WIDTH]: rect[MC.S_WIDTH],\n    y: rect.y,\n    top: rect.top,\n    bottom: rect.bottom,\n    [MC.S_HEIGHT]: rect[MC.S_HEIGHT],\n  };\n};\n\nexport const querySelector = (root: Element | Document, selector: string) =>\n  root.querySelector(selector);\n\nexport const querySelectorAll = (root: Element | Document, selector: string) =>\n  root.querySelectorAll(selector);\n\nexport const docQuerySelector = (selector: string) =>\n  querySelector(getDoc(), selector);\n\nexport const docQuerySelectorAll = (selector: string) =>\n  querySelectorAll(getDoc(), selector);\n\nexport const getElementById = (id: string) => getDoc().getElementById(id);\n\nexport const getAttr = (element: Element, name: string) =>\n  element.getAttribute(name);\n\nexport const setAttr = (element: Element, name: string, value = \"true\") =>\n  element.setAttribute(name, value);\n\nexport const unsetAttr = (element: Element, name: string) =>\n  element.setAttribute(name, \"false\");\n\nexport const delAttr = (element: Element, name: string) =>\n  element.removeAttribute(name);\n\nexport const includes = (\n  arr: readonly unknown[] | string,\n  v: unknown,\n  startAt?: number,\n) => (arr.indexOf as (v: unknown, startAt?: number) => number)(v, startAt) >= 0;\n\nexport const every = <\n  A extends readonly unknown[],\n  C extends ArrayCallbackFn<A[number]>,\n>(\n  array: A,\n  predicate: C,\n) => array.every(predicate);\n\nexport const some = <\n  A extends readonly unknown[],\n  C extends ArrayCallbackFn<A[number]>,\n>(\n  array: A,\n  predicate: C,\n) => array.some(predicate);\n\nexport const filter = <\n  A extends readonly unknown[],\n  T extends A[number],\n  C extends ArrayCallbackFn<A[number]> | FilterFnTypeP<A[number], T>,\n>(\n  array: A,\n  filterFn: C,\n) => array.filter(filterFn) as FilteredType<C, A[number], T>[];\n\nexport const filterBlank = <A extends readonly unknown[]>(\n  array: A | null | undefined,\n) => {\n  const result = array\n    ? filter(array, (v): v is NonNullable<A[number]> => !isEmpty(v))\n    : undefined;\n\n  return lengthOf(result) ? result : undefined;\n};\n\nexport const sizeOf = (obj: { size: number } | null | undefined) =>\n  obj?.size ?? 0;\n\nexport const lengthOf = (obj: { length: number } | null | undefined) =>\n  obj?.length ?? 0;\n\nexport const lastOf = <A extends readonly unknown[]>(a: A | null | undefined) =>\n  a?.slice(-1)[0] as LastElement<A>;\n\nexport const firstOf = <A extends readonly unknown[]>(\n  a: A | null | undefined,\n) => a?.slice(0, 1)[0] as FirstElement<A>;\n\nexport const tagName = (element: Element) => element.tagName;\n\nexport const hasTagName = (element: Element, tag: string) =>\n  toLowerCase(tagName(element)) === toLowerCase(tag);\n\nexport const preventDefault = (event: Event) => event.preventDefault();\n\nexport const arrayFrom = MC.ARRAY.from.bind(MC.ARRAY);\n\nexport const keysOf = <T extends Record<string | symbol, unknown>>(\n  obj: T,\n): Array<keyof T & string> => MC.OBJECT.keys(obj);\n\nexport const defineProperty = MC.OBJECT.defineProperty.bind(MC.OBJECT);\n\n// use it in place of object spread\nexport const merge = <A extends readonly (object | null | undefined)[]>(\n  ...a: [...A]\n) => {\n  return MC.OBJECT.assign({}, ...a) as Spread<A>;\n};\n\nexport const copyObject = <T extends object | undefined>(obj: T) => merge(obj);\n\nexport const promiseResolve = MC.PROMISE.resolve.bind(MC.PROMISE);\n\nexport const promiseAll = MC.PROMISE.all.bind(MC.PROMISE);\n\nexport const assign = MC.OBJECT.assign.bind(MC.OBJECT);\n\nexport const freezeObj = MC.OBJECT.freeze.bind(MC.OBJECT);\n\nexport const hasOwnProp = (o: object, prop: string | symbol) =>\n  MC.OBJECT.prototype.hasOwnProperty.call(o, prop);\n\nexport const preventExtensions = MC.OBJECT.preventExtensions.bind(MC.OBJECT);\n\nexport const stringify = JSON.stringify.bind(JSON);\n\nexport const floor = MC.MATH.floor.bind(MC.MATH);\n\nexport const ceil = MC.MATH.ceil.bind(MC.MATH);\n\nexport const log2 = MC.MATH.log2.bind(MC.MATH);\n\nexport const sqrt = MC.MATH.sqrt.bind(MC.MATH);\n\nexport const max = MC.MATH.max.bind(MC.MATH);\n\nexport const min = MC.MATH.min.bind(MC.MATH);\n\nexport const abs = MC.MATH.abs.bind(MC.MATH);\n\nexport const round = MC.MATH.round.bind(MC.MATH);\n\nexport const pow = MC.MATH.pow.bind(MC.MATH);\n\nexport const exp = MC.MATH.exp.bind(MC.MATH);\n\nexport const parseFloat = MC.NUMBER.parseFloat.bind(MC.NUMBER);\n\nexport const isNaN = MC.NUMBER.isNaN.bind(MC.NUMBER);\n\nexport const isInstanceOf = <C extends Constructor<unknown>>(\n  value: unknown,\n  Class: C,\n): value is InstanceType<C> => value instanceof Class;\n\nexport const constructorOf = (obj: object) => obj.constructor;\n\nexport const typeOf = (obj: unknown) => typeof obj;\n\nexport const typeOrClassOf = (obj: unknown) =>\n  isObject(obj) ? constructorOf(obj)?.name : typeOf(obj);\n\nexport const parentOf = (element: Element | undefined | null) =>\n  element?.parentElement ?? null;\n\nexport const childrenOf = (element: Element | undefined | null) =>\n  element?.children || [];\n\nexport const targetOf = <O extends { target?: unknown } | null | undefined>(\n  obj: O,\n) =>\n  obj?.target as O extends { target: infer T }\n    ? T\n    : O extends { target?: infer T }\n      ? T | undefined\n      : undefined;\n\nexport const currentTargetOf = <\n  O extends { currentTarget?: unknown } | null | undefined,\n>(\n  obj: O,\n) =>\n  obj?.currentTarget as O extends { currentTarget: infer T }\n    ? T\n    : O extends { currentTarget?: infer T }\n      ? T | undefined\n      : undefined;\n\nexport const classList = <T extends Element | null | undefined>(element: T) =>\n  element?.classList as T extends Element ? DOMTokenList : undefined;\n\nconst S_TABINDEX = \"tabindex\";\nexport const getTabIndex = (element: Element) => getAttr(element, S_TABINDEX);\n\nexport const setTabIndex = (element: Element, index = \"0\") =>\n  setAttr(element, S_TABINDEX, index);\n\nexport const unsetTabIndex = (element: Element) => delAttr(element, S_TABINDEX);\n\nexport const remove = (obj: { remove: () => void } | null | undefined) =>\n  obj?.remove();\n\nexport const deleteObjKey = <O extends object>(obj: O, key: keyof O) =>\n  delete obj[key];\n\nexport const deleteKey = <K, V>(\n  map: MapBase<K, V> | SetBase<K> | null | undefined,\n  key: K,\n) => map?.delete(key);\n\nexport const elScrollTo = (\n  element: Element,\n  coords: { top?: number; left?: number },\n  behavior: ScrollBehavior = \"instant\",\n) => element.scrollTo(merge({ behavior }, coords));\n\nexport const elScrollBy = (\n  element: Element,\n  coords: { top?: number; left?: number },\n  behavior: ScrollBehavior = \"instant\",\n) => element.scrollBy(merge({ behavior }, coords));\n\nexport const newPromise = <T>(\n  executor: (\n    resolve: (value: T) => void,\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    reject: (reason?: any) => void,\n  ) => void,\n) => new Promise(executor);\n\nexport const newMap = <K, V>(entries?: readonly (readonly [K, V])[] | null) =>\n  new Map(entries);\n\nexport const newWeakMap = <K extends WeakKey, V>(\n  entries?: readonly (readonly [K, V])[] | null,\n) => new WeakMap(entries);\n\nexport const newSet = <T>(values?: readonly T[] | null) => new Set(values);\n\nexport const newWeakSet = <T extends WeakKey>(values?: readonly T[] | null) =>\n  new WeakSet(values);\n\nexport const newIntersectionObserver = (\n  callback: IntersectionObserverCallback,\n  options?: IntersectionObserverInit,\n) => new IntersectionObserver(callback, options);\n\nexport const newResizeObserver = (callback: ResizeObserverCallback) =>\n  typeof ResizeObserver === \"undefined\" ? null : new ResizeObserver(callback);\n\nexport const newMutationObserver = (callback: MutationCallback) =>\n  new MutationObserver(callback);\n\nexport const usageError = (msg: string) => new LisnUsageError(msg);\n\nexport const bugError = (msg: string) => new LisnBugError(msg);\n\nexport const illegalConstructorError = (useWhat: string) =>\n  usageError(`Illegal constructor. Use ${useWhat}.`);\n\nconst CONSOLE = console;\nexport const consoleDebug = CONSOLE.debug.bind(CONSOLE);\n\nexport const consoleLog = CONSOLE.log.bind(CONSOLE);\n\nexport const consoleInfo = CONSOLE.info.bind(CONSOLE);\n\nexport const consoleWarn = CONSOLE.warn.bind(CONSOLE);\n\nexport const consoleError = CONSOLE.error.bind(CONSOLE);\n\n// --------------------\n\ntype FirstElement<T extends readonly unknown[]> = T extends readonly [\n  infer Head,\n  ...infer Last__ignored,\n]\n  ? Head\n  : T[number] | undefined;\n\ntype LastElement<T extends readonly unknown[]> = T extends readonly [\n  ...infer Head__ignored,\n  infer Last,\n]\n  ? Last\n  : T[number] | undefined;\n\ntype ArrayCallbackFn<V> = (\n  value: V,\n  index: number,\n  array: readonly V[],\n) => unknown;\ntype FilterFnTypeP<V, T extends V> = (\n  value: V,\n  index: number,\n  array: readonly V[],\n) => value is T;\ntype FilteredType<\n  C extends ArrayCallbackFn<V> | FilterFnTypeP<V, T>,\n  V,\n  T extends V,\n> = C extends FilterFnTypeP<V, infer T> ? T : V;\n","/**\n * @module Settings\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\n/**\n * LISN's settings.\n * @readonly\n *\n * If you wish to modify them, then you need to do so immediately after loading\n * LISN before you instantiate any watchers, etc. For example:\n *\n * ```html\n * <!doctype html>\n * <html>\n *   <head>\n *     <meta charset=\"UTF-8\" />\n *     <meta name=\"viewport\" content=\"width=device-width\" />\n *     <script src=\"lisn.js\" charset=\"utf-8\"></script>\n *     <script charset=\"utf-8\">\n *       // modify LISN settings, for example:\n *       LISN.settings.deviceBreakpoints.desktop = 1024;\n *     </script>\n *   </head>\n *   <body>\n *   </body>\n * </html>\n * ```\n */\nexport const settings = MH.preventExtensions({\n  /**\n   * A unique selector (preferably `#some-id`) for the element that holds the\n   * main page content, if other than `document.body`.\n   *\n   * E.g. if your main content is inside a custom scrollable container, rather\n   * than directly in `document.body`, then pass a selector for it here.\n   *\n   * The element must be scrollable, i.e. have a fixed size and `overflow: scroll`.\n   *\n   * **IMPORTANT:** You must set this before initializing any watchers, widgets,\n   * etc. If you are using the HTML API, then you must set this before the\n   * document `readyState` becomes interactive.\n   *\n   * @defaultValue null // document.scrollingElement\n   * @category Generic\n   */\n  mainScrollableElementSelector: null as string | null,\n\n  /**\n   * This setting allows us to automatically wrap certain elements or groups of\n   * elements into a single `div` or `span` element to allow for more reliable\n   * or efficient working of certain features. In particular:\n   *\n   * 1. View tracking using relative offsets and a scrolling root **requires wrapping**\n   *\n   * When using view position tracking with a percentage offset specification\n   * (e.g. `top: 50%`) _and_ a custom root element that is scrollable_ (and\n   * obviously has a size smaller than the content), you **MUST** enable\n   * content wrapping, otherwise the trigger offset elements cannot be\n   * positioned relative to the scrolling _content size_.\n   *\n   * 2. Scroll tracking\n   *\n   * When using scroll tracking, including scrollbars, on a scrolling element\n   * (that obviously has a size smaller than the content), it's recommended for\n   * the content of the scrollable element to be wrapped in a single `div`\n   * container, to allow for more efficient and reliable detection of changes\n   * in the _scrollable content_ size.\n   *\n   * If content wrapping is disabled, when scroll tracking is used on a given\n   * element (other than the root of the document), each of the immediate\n   * children of the scrollable element have their sizes tracked, which could\n   * lead to more resource usage.\n   *\n   * 3. Scrollbars on custom elements\n   *\n   * When you setup a {@link Widgets.Scrollbar} widget for a custom\n   * scrollable element that may not be the main scrollable (and therefore\n   * won't take up the full viewport all the time), then to be able to position\n   * to scrollbar relative to the scrollable element, its content needs to be\n   * wrapped.\n   *\n   * If this setting is OFF, then the scrollbars on custom elements have to\n   * rely on position sticky which doesn't have as wide browser support as the\n   * default option.\n   *\n   * 4. Animating on viewport enter/leave\n   *\n   * For elements that have transforms applied as part of an animation or\n   * transition, if you wish to run or reverse the animation when the element\n   * enters or leaves the viewport, then the transform can interfere with the\n   * viewport tracking. For example, if undoing the animation as soon as the\n   * element leaves the viewport makes it enter it again (because it's moved),\n   * then this will result in a glitch.\n   *\n   * If content wrapping is disabled, then to get around such issues, a dummy\n   * element is positioned on top of the actual element and is the one tracked\n   * across the viewport instead. Either approach could cause issues depending\n   * on your CSS, so it's your choice which one is applied.\n   *\n   * ----------\n   *\n   * **IMPORTANT:** Certain widgets always require wrapping of elements or their\n   * children. This setting only applies in cases where wrapping is optional.\n   * If you can, it's recommended to leave this setting ON. You can still try to\n   * disable wrapping on a per-element basis by setting `data-lisn-no-wrap`\n   * attribute on it. Alternatively, if the elements that need wrapping are\n   * already wrapped in an element with a class `lisn-wrapper`, this will be\n   * used as the wrapper.\n   *\n   * @defaultValue true\n   * @category Generic\n   */\n  contentWrappingAllowed: true,\n  // [TODO v2] rename this setting\n\n  /**\n   * The timeout in milliseconds for waiting for the `document.readyState` to\n   * become `complete`. The timer begins _once the `readyState` becomes\n   * `interactive`_.\n   *\n   * The page will be considered \"ready\" either when the `readyState` becomes\n   * `complete` or this many milliseconds after it becomes `interactive`,\n   * whichever is first.\n   *\n   * Set to 0 or a negative number to disable timeout.\n   *\n   * @defaultValue 2000 // i.e. 2s\n   * @category Generic\n   */\n  pageLoadTimeout: 2000,\n\n  /**\n   * This enables LISN's HTML API. Then the page will be parsed (and watched\n   * for dynamically added elements at any time) for any elements matching a\n   * widget selector. Any element that has a matching CSS class or data\n   * attribute will be setup according to the relevant widget, which may wrap,\n   * clone or add attributes to the element.\n   *\n   * This is enabled by default for bundles, and disabled otherwise.\n   *\n   * **IMPORTANT:** You must set this before the document `readyState` becomes\n   * interactive.\n   *\n   * @defaultValue `false` in general, but `true` in browser bundles\n   * @category Widgets\n   */\n  autoWidgets: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.hideNative | ScrollbarConfig.hideNative}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarHideNative: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.onMobile | ScrollbarConfig.onMobile}.\n   *\n   * @defaultValue false\n   * @category Widgets/Scrollbar\n   */\n  scrollbarOnMobile: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.positionH | ScrollbarConfig.positionH}.\n   *\n   * @defaultValue \"bottom\"\n   * @category Widgets/Scrollbar\n   */\n  scrollbarPositionH: \"bottom\",\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.positionV | ScrollbarConfig.positionV}.\n   *\n   * @defaultValue \"right\"\n   * @category Widgets/Scrollbar\n   */\n  scrollbarPositionV: \"right\",\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.autoHide | ScrollbarConfig.autoHide}.\n   *\n   * @defaultValue -1\n   * @category Widgets/Scrollbar\n   */\n  scrollbarAutoHide: -1,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.clickScroll | ScrollbarConfig.clickScroll}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarClickScroll: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.dragScroll | ScrollbarConfig.dragScroll}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarDragScroll: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.useHandle | ScrollbarConfig.useHandle}.\n   *\n   * @defaultValue false\n   * @category Widgets/Scrollbar\n   */\n  scrollbarUseHandle: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.diffTolerance | SameHeightConfig.diffTolerance}.\n   *\n   * @defaultValue 15\n   * @category Widgets/SameHeight\n   */\n  sameHeightDiffTolerance: 15,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.resizeThreshold | SameHeightConfig.resizeThreshold}.\n   *\n   * @defaultValue 5\n   * @category Widgets/SameHeight\n   */\n  sameHeightResizeThreshold: 5,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.debounceWindow | SameHeightConfig.debounceWindow}.\n   *\n   * @defaultValue 100\n   * @category Widgets/SameHeight\n   */\n  sameHeightDebounceWindow: 100,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.minGap | SameHeightConfig.minGap}.\n   *\n   * @defaultValue 30\n   * @category Widgets/SameHeight\n   */\n  sameHeightMinGap: 30,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.maxFreeR | SameHeightConfig.maxFreeR}.\n   *\n   * @defaultValue 0.4\n   * @category Widgets/SameHeight\n   */\n  sameHeightMaxFreeR: 0.4,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.maxWidthR | SameHeightConfig.maxWidthR}.\n   *\n   * @defaultValue 1.7\n   * @category Widgets/SameHeight\n   */\n  sameHeightMaxWidthR: 1.7,\n\n  /**\n   * Set custom device breakpoints as width in pixels.\n   *\n   * The value of each sets its lower limit, i.e. it specifies a device whose\n   * width is larger than the given value (and up to the next larger one).\n   *\n   * If you specify only some of the below devices, then the other ones will\n   * keep their default breakpoint values.\n   *\n   * Adding device types, other than the ones listed below is not supported.\n   *\n   * @category Device layouts\n   */\n  deviceBreakpoints: {\n    /**\n     * This should be left as 0 as it's the catch-all for anything narrower\n     * than \"mobile-wide\".\n     *\n     * @defaultValue 0\n     */\n    mobile: 0,\n\n    /**\n     * Anything wider than the given value is \"mobile-wide\", up to the value of\n     * \"tablet\".\n     *\n     * @defaultValue 576\n     */\n    \"mobile-wide\": 576,\n\n    /**\n     * Anything wider than the given value is \"tablet\", up to the value of\n     * \"desktop\".\n     *\n     * @defaultValue 768\n     */\n    tablet: 768, // tablet is anything above this (up to desktop)\n\n    /**\n     * Anything wider than the given value is \"desktop\".\n     *\n     * @defaultValue 992\n     */\n    desktop: 992, // desktop is anything above this\n  },\n\n  /**\n   * Set custom aspect ratio breakpoints (as ratio of width to height).\n   *\n   * The value of each sets its lower limit, i.e. it specifies an aspect ratio\n   * that is wider than the given value (and up to the next wider one).\n   *\n   * If you specify only some of the below aspect ratios, then the other ones\n   * will keep their default breakpoint values.\n   *\n   * Adding aspect ratio types, other than the ones listed below is not\n   * supported.\n   *\n   * @category Device layouts\n   */\n  aspectRatioBreakpoints: {\n    /**\n     * This should be left as 0 as it's the catch-all for anything with\n     * a narrower aspect ratio than \"tall\".\n     *\n     * @defaultValue 0\n     */\n    \"very-tall\": 0, // very tall is up to 9:16\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"tall\", up to\n     * the value of \"square\".\n     *\n     * @defaultValue 9 / 16\n     */\n    tall: 9 / 16, // tall is between 9:16 and 3:4\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"square\", up\n     * to the value of \"wide\".\n     *\n     * @defaultValue 3 / 4\n     */\n    square: 3 / 4, // square is between 3:4 and 4:3\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"wide\", up to\n     * the value of \"very-wide\".\n     *\n     * @defaultValue 4 / 3\n     */\n    wide: 4 / 3, // wide is between 4:3 and 16:9\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"very-wide\".\n     *\n     * @defaultValue 16 / 9\n     */\n    \"very-wide\": 16 / 9, // very wide is above 16:9\n  },\n\n  /**\n   * The CSS class that enables light theme.\n   *\n   * **IMPORTANT:** If you change this, you should also change the\n   * `$light-theme-cls` variable in the SCSS configuration, or otherwise add the\n   * following to your CSS:\n   *\n   * :root,\n   * .custom-light-theme-cls {\n   *   --lisn-color-fg: some-dark-color;\n   *   --lisn-color-fg-t: some-dark-color-with-transparency;\n   *   --lisn-color-bg: some-light-color;\n   *   --lisn-color-bg-t: some-light-color-with-transparency;\n   * }\n   */\n  lightThemeClassName: \"light-theme\",\n\n  /**\n   * The CSS class that enables dark theme.\n   *\n   * **IMPORTANT:** If you change this, you should also change the\n   * `$dark-theme-cls` variable in the SCSS configuration, or otherwise add the\n   * following to your CSS:\n   *\n   * .custom-dark-theme-cls {\n   *   --lisn-color-fg: some-light-color;\n   *   --lisn-color-fg-t: some-light-color-with-transparency;\n   *   --lisn-color-bg: some-dark-color;\n   *   --lisn-color-bg-t: some-dark-color-with-transparency;\n   * }\n   */\n  darkThemeClassName: \"dark-theme\",\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some key (arrows) and wheel events (where the browser reports the delta\n   * mode to be LINE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 40\n   * @category Gestures\n   */\n  deltaLineHeight: 40,\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some wheel events (where the browser reports the delta mode to be PAGE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 1600\n   * @category Gestures\n   */\n  deltaPageWidth: 1600,\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some key (PageUp/PageDown/Space) and wheel events (where the browser\n   * reports the delta mode to be PAGE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 800\n   * @category Gestures\n   */\n  deltaPageHeight: 800,\n\n  /**\n   * Controls the debugging verbosity level. Values from 0 (none) to 10 (insane)\n   * are recognized.\n   *\n   * **Note:** Logging is not available in bundles except in the \"debug\" bundle.\n   *\n   * @defaultValue `0` except in the \"debug\" bundle where it defaults to 10\n   * @category Logging\n   */\n  verbosityLevel: 0,\n\n  /**\n   * The URL of the remote logger to connect to. LISN uses\n   * {@link https://socket.io/docs/v4/client-api/ | socket.io-client}\n   * to talk to the client and emits messages on the following namespaces:\n   *\n   * - `console.debug`\n   * - `console.log`\n   * - `console.info`\n   * - `console.warn`\n   * - `console.error`\n   *\n   * There is a simple logging server that ships with LISN, see the source\n   * code repository.\n   *\n   * You can always explicitly disable remote logging on a given page by\n   * setting `disableRemoteLog=1` query parameter in the URL.\n   *\n   * **Note:** Logging is not available in bundles (except in the `debug` bundle).\n   *\n   * @defaultValue null\n   * @category Logging\n   */\n  remoteLoggerURL: null as string | null,\n\n  /**\n   * Enable remote logging only on mobile devices.\n   *\n   * You can always disable remote logging for any page by setting\n   * `disableRemoteLog=1` URL query parameter.\n   *\n   * **Note:** Logging is not available in bundles (except in the `debug` bundle).\n   *\n   * @defaultValue false\n   * @category Logging\n   */\n  remoteLoggerOnMobileOnly: false,\n});\n\n// --------------------\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Point, Vector, AtLeastOne } from \"@lisn/globals/types\";\n\n/**\n * Round a number to the given decimal precision.\n *\n * @category Math\n */\nexport const roundNumTo = (value: number, numDecimal = 0) => {\n  const multiplicationFactor = MH.pow(10, numDecimal);\n  return MH.round(value * multiplicationFactor) / multiplicationFactor;\n};\n\n/**\n * Returns true if the given value is a valid _finite_ number.\n *\n * @category Validation\n */\nexport const isValidNum = (value: unknown): value is number =>\n  MH.isNumber(value) && MC.NUMBER.isFinite(value);\n\n/**\n * If the given value is a valid _finite_ number, it is returned, otherwise\n * the default is returned.\n *\n * @category Math\n */\nexport const toNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = MH.isLiteralString(value) ? MH.parseFloat(value) : value;\n\n  // parseFloat will strip trailing non-numeric characters, so we check that\n  // the parsed number is equal to the string, if it was a string, using loose\n  // equality, in order to make sure the entire string was a number.\n  return isValidNum(numValue) && numValue == value ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid _finite integer_ number, it is returned,\n * otherwise the default is returned.\n *\n * @category Math\n */\nexport const toInt = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  let numValue = toNum(value, null);\n  numValue = numValue === null ? numValue : MH.floor(numValue);\n\n  // Ensure that the parsed int equaled the original by loose equality.\n  return isValidNum(numValue) && numValue == value ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid non-negative _finite_ number, it is returned,\n * otherwise the default is returned.\n *\n * @category Math\n */\nexport const toNonNegNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = toNum(value, null);\n  return numValue !== null && numValue >= 0 ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid positive number, it is returned, otherwise the\n * default is returned.\n *\n * @category Math\n */\nexport const toPosNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = toNum(value, null);\n  return numValue !== null && numValue > 0 ? numValue : defaultValue;\n};\n\n/**\n * Returns the given number bound by min and/or max value.\n *\n * If the value is not a valid number, then `defaultValue` is returned if given\n * (_including if it is null_), otherwise `limits.min` if given and not null,\n * otherwise `limits.max` if given and not null, or finally 0.\n *\n * If the value is outside the bounds, then:\n * - if `defaultValue` is given, `defaultValue` is returned (_including if it\n *   is null_)\n * - otherwise, the min or the max value (whichever one is violated) is\n *   returned\n *\n * @category Math\n */\nexport const toNumWithBounds = <D extends number | false | null = number>(\n  value: unknown,\n  limits: AtLeastOne<{ min: number | null; max: number | null }>,\n  defaultValue?: D,\n): number | D => {\n  const isDefaultGiven = defaultValue !== undefined;\n  const numValue = toNum(value, null);\n  const min = limits?.min ?? null;\n  const max = limits?.max ?? null;\n\n  let result: number | D;\n  if (!isValidNum(numValue)) {\n    result = isDefaultGiven ? defaultValue : (min ?? max ?? 0);\n  } else if (min !== null && numValue < min) {\n    result = isDefaultGiven ? defaultValue : min;\n  } else if (max !== null && numValue > max) {\n    result = isDefaultGiven ? defaultValue : max;\n  } else {\n    result = numValue;\n  }\n\n  return result;\n};\n\n/**\n * Returns the largest absolute value among the given ones.\n *\n * The result is always positive.\n *\n * @category Math\n */\nexport const maxAbs = (...values: number[]) =>\n  MH.max(...values.map((v) => MH.abs(v)));\n\n/**\n * Returns the smallest absolute value among the given ones.\n *\n * The result is always positive.\n *\n * @category Math\n */\nexport const minAbs = (...values: number[]) =>\n  MH.min(...values.map((v) => MH.abs(v)));\n\n/**\n * Returns the value with the largest absolute value among the given ones.\n *\n * The result can be negative.\n *\n * @category Math\n */\nexport const havingMaxAbs = (...values: number[]): number =>\n  MH.lengthOf(values)\n    ? values.sort((a, b) => MH.abs(b) - MH.abs(a))[0]\n    : -MC.INFINITY;\n\n/**\n * Returns the value with the smallest absolute value among the given ones.\n *\n * The result can be negative.\n *\n * @category Math\n */\nexport const havingMinAbs = (...values: number[]) =>\n  MH.lengthOf(values)\n    ? values.sort((a, b) => MH.abs(a) - MH.abs(b))[0]\n    : MC.INFINITY;\n\n/**\n * Returns the angle (in radians) that the vector defined by the given x, y\n * makes with the positive horizontal axis.\n *\n * The angle returned is in the range -PI to PI, not including -PI.\n *\n * @category Math\n */\nexport const hAngle = (x: number, y: number) =>\n  normalizeAngle(MC.MATH.atan2(y, x)); // ensure that -PI is transformed to +PI\n\n/**\n * Normalizes the given angle (in radians) so that it's in the range -PI to PI,\n * not including -PI.\n *\n * @category Math\n */\nexport const normalizeAngle = (a: number) => {\n  // ensure it's positive in the range 0 to 2 PI\n  while (a < 0 || a > MC.PI * 2) {\n    a += (a < 0 ? 1 : -1) * MC.PI * 2;\n  }\n\n  // then, if > PI, offset by - 2PI\n  return a > MC.PI ? a - MC.PI * 2 : a;\n};\n\n/**\n * Converts the given angle in degrees to radians.\n *\n * @category Math\n */\nexport const degToRad = (a: number) => (a * MC.PI) / 180;\n\n/**\n * Converts the given angle in radians to degrees.\n *\n * @category Math\n */\nexport const radToDeg = (a: number) => (a * 180) / MC.PI;\n\n/**\n * Returns true if the given vectors point in the same direction.\n *\n * @param angleDiffThreshold\n *                  Sets the threshold in degrees when comparing the angles of\n *                  two vectors. E.g. for 5 degrees threshold, directions\n *                  whose vectors are within 5 degrees of each other are\n *                  considered parallel.\n *                  It doesn't make sense for this value to be < 0 or >= 90\n *                  degrees. If it is, it's forced to be positive (absolute)\n *                  and <= 89.99.\n *\n * @category Math\n */\nexport const areParallel = (vA: Vector, vB: Vector, angleDiffThreshold = 0) => {\n  const angleA = hAngle(vA[0], vA[1]);\n  const angleB = hAngle(vB[0], vB[1]);\n  angleDiffThreshold = MH.min(89.99, MH.abs(angleDiffThreshold));\n\n  return (\n    MH.abs(normalizeAngle(angleA - angleB)) <= degToRad(angleDiffThreshold)\n  );\n};\n\n/**\n * Returns true if the given vectors point in the opposite direction.\n *\n * @param angleDiffThreshold\n *                  Sets the threshold in degrees when comparing the angles of\n *                  two vectors. E.g. for 5 degrees threshold, directions\n *                  whose vectors are within 175-185 degrees of each other are\n *                  considered antiparallel.\n *                  It doesn't make sense for this value to be < 0 or >= 90\n *                  degrees. If it is, it's forced to be positive (absolute)\n *                  and <= 89.99.\n *\n * @category Math\n */\nexport const areAntiParallel = (\n  vA: Vector,\n  vB: Vector,\n  angleDiffThreshold = 0,\n) => areParallel(vA, [-vB[0], -vB[1]], angleDiffThreshold);\n\n/**\n * Returns the distance between two points on the screen.\n *\n * @category Math\n */\nexport const distanceBetween = (ptA: Point, ptB: Point) =>\n  MH.sqrt(MH.pow(ptA[0] - ptB[0], 2) + MH.pow(ptA[1] - ptB[1], 2));\n\n/**\n * Returns the two roots of the quadratic equation with coefficients\n * `a`, `b` & `c`, i.e. `a * x^2 + b * x + c = 0`\n *\n * The roots may be `NaN` if the quadratic has no real solutions.\n *\n * @category Math\n */\nexport const quadraticRoots = (a: number, b: number, c: number) => {\n  const z = MH.sqrt(b * b - 4 * a * c);\n  return [(-b + z) / (2 * a), (-b - z) / (2 * a)];\n};\n\n/**\n * Returns the value that an \"easing\" quadratic function would have at the\n * given x.\n *\n * @see https://easings.net/#easeInOutQuad\n *\n * @param x Must be between 0 and 1.\n *\n * @returns The current y-axis value between 0 and 1.\n *\n * @category Math\n */\nexport const easeInOutQuad = (x: number) =>\n  x < 0.5 ? 2 * x * x : 1 - MH.pow(-2 * x + 2, 2) / 2;\n\n/**\n * Returns the new position and velocity for a critically damped user-driven\n * spring state toward a current target position.\n *\n * @param [settings.lTarget]       Target final position.\n * @param [settings.dt]            Time step in milliseconds since the last call.\n *                                 Must be small for the returned values to be\n *                                 meaningful.\n * @param [settings.lag]           Lag in milliseconds (how long it should take\n *                                 for it to reach the final position). Must be\n *                                 positive.\n * @param [settings.l = 0]         Current position (starting or one returned by\n *                                 previous call).\n * @param [settings.v = 0]         Current velocity (returned by previous call).\n * @param [settings.precision = 2] Number of decimal places to round position to\n *                                 in order to determine when it's \"done\".\n * @returns Updated position and velocity\n *\n * @since v1.2.0\n *\n * @category Math\n */\nexport const criticallyDamped = (settings: {\n  lTarget: number;\n  dt: number;\n  lag: number;\n  l?: number;\n  v?: number;\n  precision?: number;\n}) => {\n  const { lTarget, precision = 2 } = settings;\n  const lag = toNumWithBounds(settings.lag, { min: 1 }) / 1000; // to seconds\n\n  // Since the position only approaches asymptotically the target it never truly\n  // reaches it exactly we need an approximation to calculate w0. N determines\n  // how far away from the target position we are after `lag` milliseconds.\n  const N = 7;\n  const w0 = N / lag;\n\n  let { l = 0, v = 0, dt } = settings;\n  dt /= 1000; // to seconds\n\n  if (roundNumTo(l - lTarget, precision) === 0) {\n    // we're done\n    l = lTarget;\n    v = 0;\n  } else if (dt > 0) {\n    const A = l - lTarget;\n    const B = v + w0 * A;\n    const e = MH.exp(-w0 * dt);\n\n    l = lTarget + (A + B * dt) * e;\n    v = (B - w0 * (A + B * dt)) * e;\n  }\n\n  return { l, v };\n};\n\n/**\n * Returns an array of object's keys sorted by the numeric value they hold.\n *\n * @category Math\n */\nexport const sortedKeysByVal = <T extends Record<string, number>>(\n  obj: T,\n  descending = false,\n): Array<keyof T> => {\n  if (descending) {\n    return MH.keysOf(obj).sort((x: keyof T, y: keyof T) => obj[y] - obj[x]);\n  }\n\n  return MH.keysOf(obj).sort((x: keyof T, y: keyof T) => obj[x] - obj[y]);\n};\n\n/**\n * Returns the key in the given object which holds the largest numeric value.\n *\n * If the object is empty, returns `undefined`.\n *\n * @category Math\n */\nexport const keyWithMaxVal = (\n  obj: Record<string, number>,\n): string | undefined => {\n  return MH.lastOf(sortedKeysByVal(obj));\n};\n\n/**\n * Returns the key in the given object which holds the smallest numeric value.\n *\n * If the object is empty, returns `undefined`.\n *\n * @category Math\n */\nexport const keyWithMinVal = (\n  obj: Record<string, number>,\n): string | undefined => {\n  return MH.firstOf(sortedKeysByVal(obj));\n};\n\n/**\n * Takes two integers and returns a bitmask that covers all values between\n * 1 << start and 1 << end, _including the starting and ending one_.\n *\n * If pStart > pEnd, they are reversed.\n *\n * getBitmask(start, start) always returns 1 << start\n * getBitmask(start, end) always returns same as getBitmask(end, start)\n *\n * @category Math\n */\nexport const getBitmask = (start: number, end: number): number =>\n  start > end\n    ? getBitmask(end, start)\n    : (~0 >>> (32 - end - 1 + start)) << start;\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { roundNumTo } from \"@lisn/utils/math\";\n\nexport const copyExistingKeys = <T extends object>(fromObj: T, toObj: T) => {\n  for (const key in toObj) {\n    if (!MH.hasOwnProp(toObj, key)) {\n      continue;\n    }\n\n    if (key in fromObj) {\n      if (MH.isNonPrimitive(fromObj[key]) && MH.isNonPrimitive(toObj[key])) {\n        copyExistingKeys(fromObj[key], toObj[key]);\n      } else {\n        toObj[key] = fromObj[key];\n      }\n    }\n  }\n};\n\n// Omits the keys in object keysToRm from obj. This is to avoid hardcording the\n// key names as a string so as to allow minifier to mangle them, and to avoid\n// using object spread.\nexport const omitKeys = <\n  O extends object,\n  R extends { [K in keyof O]?: unknown },\n>(\n  obj: O,\n  keysToRm: R,\n): Omit<O, keyof R> => {\n  const res: Partial<O> = {};\n  let key: keyof O;\n\n  for (key in obj) {\n    if (!(key in keysToRm)) {\n      res[key] = obj[key];\n    }\n  }\n\n  return res as Omit<O, keyof R>;\n};\n\n// Returns true if the two objects are equal. If values are numeric, it will\n// round to the given number of decimal places.\nexport const compareValuesIn = <T extends object>(\n  objA: T,\n  objB: T,\n  roundTo = 3,\n) => {\n  for (const key in objA) {\n    if (!MH.hasOwnProp(objA, key)) {\n      continue;\n    }\n\n    const valA = objA[key];\n    const valB = objB[key];\n\n    if (MH.isNonPrimitive(valA) && MH.isNonPrimitive(valB)) {\n      if (!compareValuesIn(valA, valB)) {\n        return false;\n      }\n    } else if (MH.isNumber(valA) && MH.isNumber(valB)) {\n      if (roundNumTo(valA, roundTo) !== roundNumTo(valB, roundTo)) {\n        return false;\n      }\n    } else if (valA !== valB) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const keyExists = <T extends object>(\n  obj: T,\n  key: string | number | symbol,\n): key is keyof T => MH.isNonPrimitive(obj) && key in obj;\n\nexport const toArrayIfSingle = <T>(value?: T | T[] | null | undefined): T[] =>\n  MH.isArray(value) ? value : !MH.isNullish(value) ? [value] : [];\n\nexport const toBoolean = (value: unknown) =>\n  value === true || value === \"true\" || value === \"\"\n    ? true\n    : MH.isNullish(value) || value === false || value === \"false\"\n      ? false\n      : null;\n\n/**\n * @deprecated\n */\nexport const toBool = toBoolean;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Size, StrRecord } from \"@lisn/globals/types\";\n\n/**\n * Formats an object as a string. It supports more meaningful formatting as\n * string for certain types rather than using the default string\n * representation.\n *\n * **NOTE:** This is not intended for serialization of data that needs to be\n * de-serialized. Only for debugging output.\n *\n * @param value    The value to format as string.\n * @param [maxLen] Maximum length of the returned string. If not given or\n *                 is <= 0, the string is not truncated. Otherwise, if the\n *                 result is longer than maxLen, it is truncated to\n *                 `maxLen - 3` and added a suffix of \"...\".\n *                 Note that if `maxLen` is > 0 but <= 3, the result is\n *                 always \"...\"\n *\n * @category Text\n */\nexport const formatAsString = (value: unknown, maxLen?: number) => {\n  const result = maybeConvertToString(value, false);\n\n  if (!MH.isNullish(maxLen) && maxLen > 0 && MH.lengthOf(result) > maxLen) {\n    return result.slice(0, MH.max(0, maxLen - 3)) + \"...\";\n  }\n\n  return result;\n};\n\n/**\n * Join an array of values as string using separator. It uses\n * {@link formatAsString} rather than the default string representation as\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join | Array:join} would.\n *\n * @param separator The separator to use to delimit each argument.\n * @param args      Objects or values to convert to string and join.\n *\n * @category Text\n */\nexport const joinAsString = (separator: string, ...args: unknown[]) =>\n  args.map((a) => formatAsString(a)).join(separator);\n\n/**\n * Similar to\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split | String.prototype.split}\n * except that\n * 1. `limit` is interpreted as the maximum number of splits, and the\n *   returned array contains `limit + 1` entries. Also if `limit` is given and\n *   the number of substrings is greater than the limit, all the remaining\n *   substrings are present in the final substring.\n * 2. If input is an empty string (or containing only whitespace), returns an\n *    empty array.\n *\n * @example\n * ```javascript\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 0); // -> ['foo, bar, baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 1); // -> ['foo', 'bar, baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 2); // -> ['foo', 'bar', 'baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 3); // -> ['foo', 'bar', 'baz']\n * ```\n *\n * @param trim  If true, entries will be trimmed for whitespace after splitting.\n *\n * @param limit If not given or < 0, the string will be split on every\n *              occurrence of `separator`. Otherwise, it will be split on\n *              the first `limit` number of occurrences of `separator`.\n *\n * @category Text\n */\nexport const splitOn = (\n  input: string,\n  separator: string | RegExp,\n  trim?: boolean,\n  limit?: number,\n) => {\n  if (!input.trim()) {\n    return [];\n  }\n\n  limit ??= -1;\n\n  const output: string[] = [];\n  const addEntry = (s: string) => output.push(trim ? s.trim() : s);\n\n  while (limit--) {\n    let matchIndex = -1,\n      matchLength = 0;\n    if (MH.isLiteralString(separator)) {\n      matchIndex = input.indexOf(separator);\n      matchLength = MH.lengthOf(separator);\n    } else {\n      const match = separator.exec(input);\n      matchIndex = match?.index ?? -1;\n      matchLength = match ? MH.lengthOf(match[0]) : 0;\n    }\n\n    if (matchIndex < 0) {\n      break;\n    }\n\n    addEntry(input.slice(0, matchIndex));\n    input = input.slice(matchIndex + matchLength);\n  }\n\n  addEntry(input);\n  return output;\n};\n\n/**\n * Converts a kebab-cased-string to camelCase.\n * The result is undefined if the input string is not formatted in\n * kebab-case.\n *\n * @category Text\n */\nexport const kebabToCamelCase = MH.kebabToCamelCase;\n\n/**\n * Converts a camelCasedString to kebab-case.\n * The result is undefined if the input string is not formatted in\n * camelCase.\n *\n * @category Text\n */\nexport const camelToKebabCase = MH.camelToKebabCase;\n\n/**\n * Generates a random string of a fixed length.\n *\n * **IMPORTANT:** This is _not_ suitable for cryptographic applications.\n *\n * @param nChars The length of the returned stirng.\n *\n * @category Text\n */\nexport const randId = (nChars = 8) => {\n  const segment = () =>\n    MH.floor(100000 + MC.MATH.random() * 900000).toString(36);\n\n  let s = \"\";\n  while (MH.lengthOf(s) < nChars) {\n    s += segment();\n  }\n  return s.slice(0, nChars);\n};\n\n/**\n * Returns an array of numeric margins in pixels from the given margin string.\n * The string should contain margins in either pixels or percentage; other\n * units are not supported.\n *\n * Percentage values are converted to pixels relative to the given\n * `absoluteSize`: left/right margins relative to the width, and top/bottom\n * margins relative to the height.\n *\n * Note that for the margin property, percentages are always relative to the\n * WIDTH of the parent, so you should pass the parent width as both the width\n * and the height keys in `absoluteSize`. But for IntersectionObserver's\n * `rootMargin`, top/bottom margin is relative to the height of the root, so\n * pass the actual root size.\n *\n * @returns [topMarginInPx, rightMarginInPx, bottomMarginInPx, leftMarginInPx]\n *\n * @category Text\n */\nexport const toMargins = (value: string, absoluteSize: Size) => {\n  const toPxValue = (strValue: string | undefined, index: number) => {\n    let margin = MH.parseFloat(strValue ?? \"\") || 0;\n\n    if (strValue === margin + \"%\") {\n      margin *=\n        index % 2 ? absoluteSize[MC.S_HEIGHT] : absoluteSize[MC.S_WIDTH];\n    }\n\n    return margin;\n  };\n\n  const parts = splitOn(value, \" \", true);\n  const margins: [number, number, number, number] = [\n    // top\n    toPxValue(parts[0], 0),\n    // right\n    toPxValue(parts[1] ?? parts[0], 1),\n    // bottom\n    toPxValue(parts[2] ?? parts[0], 2),\n    // left\n    toPxValue(parts[3] ?? parts[1] ?? parts[0], 3),\n  ];\n\n  return margins;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const objToStrKey = (obj: StrRecord): string =>\n  MH.stringify(flattenForSorting(obj));\n\n// --------------------\n\nconst flattenForSorting = (obj: StrRecord): unknown[] => {\n  const array = MH.isArray(obj)\n    ? obj\n    : MH.keysOf(obj)\n        .sort()\n        .map((k) => obj[k]);\n\n  return array.map((value) => {\n    if (\n      MH.isArray(value) ||\n      (MH.isNonPrimitive(value) && MH.constructorOf(value) === MC.OBJECT)\n    ) {\n      return flattenForSorting(value);\n    }\n    return value;\n  });\n};\n\nconst stringifyReplacer = (key: string, value: unknown) =>\n  key ? maybeConvertToString(value, true) : value;\n\nconst maybeConvertToString = <B extends boolean, V>(\n  value: V,\n  nested: B,\n): B extends false ? string : string | V => {\n  let result: string | V = \"\";\n\n  if (MH.isElement(value)) {\n    const classStr = MH.classList(value).toString().trim();\n\n    result = value.id\n      ? \"#\" + value.id\n      : `<${MH.tagName(value)}${classStr ? ' class=\"' + classStr + '\"' : \"\"}>`;\n\n    //\n  } else if (MH.isInstanceOf(value, Error)) {\n    /* istanbul ignore else */\n    if (\"stack\" in value && MH.isString(value.stack)) {\n      result = value.stack;\n    } else {\n      result = `Error: ${value.message}`;\n    }\n\n    //\n  } else if (MH.isArray(value)) {\n    result =\n      \"[\" +\n      value\n        .map((v) =>\n          MH.isString(v) ? MH.stringify(v) : maybeConvertToString(v, false),\n        )\n        .join(\",\") +\n      \"]\";\n\n    //\n  } else if (MH.isIterableObject(value)) {\n    result =\n      MH.typeOrClassOf(value) +\n      \"(\" +\n      maybeConvertToString(MH.arrayFrom(value), false) +\n      \")\";\n\n    //\n  } else if (MH.isNonPrimitive(value)) {\n    result = nested ? value : MH.stringify(value, stringifyReplacer);\n\n    //\n  } else {\n    // primitive\n    result = nested ? value : MC.STRING(value);\n  }\n\n  return result as B extends false ? string : string | V;\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\n\nimport { CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { toNum } from \"@lisn/utils/math\";\nimport { toBoolean } from \"@lisn/utils/misc\";\nimport { splitOn } from \"@lisn/utils/text\";\n\n/**\n * Returns true if the input is a string array or comma-separated string, whose\n * elements are valid according to the `validator` function.\n *\n * @param allowEmpty If `false`, then input without any entries is\n * considered _invalid_.\n *\n * @category Validation\n */\nexport const isValidStrList = <T extends string = string>(\n  value: unknown,\n  checkFn: (value: string) => value is T,\n  allowEmpty = true,\n): value is CommaSeparatedStr<T> | T[] => {\n  try {\n    const res = validateStrList(\"\", value, checkFn);\n    return allowEmpty || !MH.isNullish(res);\n  } catch (err) {\n    if (MH.isInstanceOf(err, LisnUsageError)) {\n      return false;\n    }\n    throw err;\n  }\n};\n\n/**\n * Returns an array of strings from the given list while validating each one\n * using the `checkFn` function.\n *\n * If it returns without throwing, the input is necessarily valid.\n * If the result is an empty array, it will return `null`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the input is not a string or array of strings, or if any\n *                entries do not pass `checkFn`.\n *\n * @param key Used in the error message thrown\n *\n * @returns `undefined` if the input contains no non-empty values (after\n * trimming whitespace on left/right from each), otherwise a non-empty array of\n * values.\n *\n * @category Validation\n */\nexport const validateStrList = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n): T[] | undefined =>\n  MH.filterBlank(\n    toArray(value)?.map((v) =>\n      _validateString(key, v, checkFn, \"a string or a string array\"),\n    ),\n  );\n\n/**\n * Returns an array of numbers from the given list.\n *\n * If it returns without throwing, the input is necessarily valid.\n * If the result is an empty array, it will return `null`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the input is not a number or array of numbers. Numerical\n *                strings are accepted.\n *\n * @param key Used in the error message thrown\n *\n * @returns `undefined` if the input contains no non-empty values (after\n * trimming whitespace on left/right from each), otherwise a non-empty array of\n * values.\n *\n * @category Validation\n */\nexport const validateNumList = (\n  key: string,\n  value: unknown,\n): number[] | undefined =>\n  MH.filterBlank(\n    toArray(value)?.map((v) =>\n      _validateNumber(key, v, \"a number or a number array\"),\n    ),\n  );\n\n/**\n * Returns a number corresponding to the supplied value, ensuring the supplied\n * value is a valid number or a string containing only a number.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @returns `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateNumber = (key: string, value: unknown) =>\n  _validateNumber(key, value);\n\n/**\n * Returns a boolean corresponding to the given value as follows:\n *\n * - `null` and `undefined` result in `undefined`\n * - `false` and `\"false\"` result in `false`\n * - `\"\"`, `true` and `\"true\"` result in `true`\n * - other values throw an error error\n *\n * Note that an empty string is treated as `true`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is not a valid boolean or boolean string.\n *\n * @returns `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateBoolean = (key: string, value: unknown) =>\n  _validateBoolean(key, value);\n\n/**\n * Returns a valid string from the supplied value, ensuring the supplied value\n * is a string that conforms to the given `checkFn`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @param checkFn If given and the supplied value is a string, then it is\n *                called with the value as a single argument. It must return\n *                true if the value is valid and false otherwise. If it is not\n *                given, then any literal string is accepted.\n *\n * @returns `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n) => _validateString(key, value, checkFn);\n\n/**\n * Like {@link validateString} except it requires input to be given and\n * non-empty.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid or empty.\n *\n * @category Validation\n */\nexport const validateStringRequired = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n): T => {\n  const result = _validateString(key, value, checkFn);\n\n  if (MH.isEmpty(result)) {\n    throw MH.usageError(`'${key}' is required`);\n  }\n\n  return result;\n};\n\n/**\n * Returns a valid boolean or a string from the supplied value, ensuring the\n * supplied value is either a boolean or boolean string (see\n * {@link validateBoolean}), or a string that conforms to the given `checkFn`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @param stringCheckFn If given and the supplied value is a string _other than\n *                      a boolean string_, then it is called with the value as\n *                      a single argument. It must return true if the value is\n *                      valid and false otherwise. If it is not given, then any\n *                      literal string is accepted.\n *\n * @category Validation\n */\nexport const validateBooleanOrString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  stringCheckFn?: (value: string) => value is T,\n) => _validateBooleanOrString(key, value, stringCheckFn);\n\n// --------------------\n\nconst toArray = (value: unknown): unknown[] | undefined => {\n  let result: unknown[] | null;\n  if (MH.isArray(value)) {\n    result = value;\n  } else if (MH.isIterableObject(value)) {\n    result = MH.arrayFrom(value);\n  } else if (MH.isLiteralString(value)) {\n    result = splitOn(value, \",\");\n  } else if (!MH.isNullish(value)) {\n    result = [value];\n  } else {\n    result = null;\n  }\n\n  return result\n    ? MH.filterBlank(result.map((v) => (MH.isLiteralString(v) ? v.trim() : v)))\n    : undefined;\n};\n\nconst _validateNumber = (\n  key: string,\n  value: unknown,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const numVal = toNum(value, null);\n  if (numVal === null) {\n    throw MH.usageError(`'${key}' must be ${typeDescription ?? \"a number\"}`);\n  }\n\n  return numVal;\n};\n\nconst _validateBoolean = (\n  key: string,\n  value: unknown,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const boolVal = toBoolean(value);\n  if (boolVal === null) {\n    throw MH.usageError(\n      `'${key}' must be ${typeDescription ?? '\"true\" or \"false\"'}`,\n    );\n  }\n\n  return boolVal;\n};\n\nconst _validateString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n  typeDescription?: string,\n): (typeof checkFn extends null | undefined ? string : T) | undefined => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  if (!MH.isLiteralString(value)) {\n    throw MH.usageError(`'${key}' must be ${typeDescription ?? \"a string\"}`);\n  } else if (checkFn && !checkFn(value)) {\n    throw MH.usageError(`Invalid value for '${key}'`);\n  }\n\n  return value as typeof checkFn extends null | undefined ? string : T;\n};\n\nconst _validateBooleanOrString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  stringCheckFn?: (value: string) => value is T,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const boolVal = toBoolean(value);\n  if (boolVal !== null) {\n    return boolVal;\n  }\n\n  if (!MH.isLiteralString(value)) {\n    throw MH.usageError(\n      `'${key}' must be ${typeDescription ?? \"a boolean or string\"}`,\n    );\n  }\n\n  return _validateString(key, value, stringCheckFn);\n};\n","/**\n * @module Modules/BitSpaces\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getBitmask } from \"@lisn/utils/math\";\n\nexport type BitPropName = string;\n\n/**\n * A union of all property names in the space.\n */\nexport type BitSpaceKey<S> = S extends BitSpace<infer T> ? T : never;\n\n/**\n * {@link BitSpace} represents a single set of mutually exclusive (or\n * orthogonal) properties.\n *\n * Each property has a numeric value equal to 1 bit-shifted by a certain number\n * of bits.\n *\n * Created using {@link BitSpaces.create}\n *\n * @interface\n */\nexport type BitSpace<T extends BitPropName> = {\n  /**\n   * The starting bit of the space. It's 0 for the first space created in a\n   * given set of {@link BitSpaces}.\n   */\n  start: number;\n\n  /**\n   * The ending bit of the space. It's always equal to\n   * start + (# of properties in space) - 1\n   */\n  end: number;\n\n  /**\n   * A bitmask of all values in the space.\n   */\n  bitmask: number;\n\n  /**\n   * Returns true if the given name is one of the properties in the space.\n   * It is case-sensitive.\n   */\n  has: (p: string) => p is T;\n\n  /**\n   * Takes the names of two properties within the space and returns a bitmask\n   * that covers all values between them _including the starting and ending\n   * one_.*\n   *\n   * If pStart > pEnd, they are reversed.\n   *\n   * * The numeric values of the properties are guaranteed to be in the same\n   *   order, increasing in value, as the keys passed to the `BitSpaces.create`,\n   *   function.\n   *\n   * @param pStart The name of the property that holds the start value.\n   *               If null the bitmask will cover from the lowest property.\n   * @param pEnd   The name of the property that holds the end cut-off value\n   *               for the bitmask. The bitmask with _not_ include pEnd's\n   *               value.\n   *               If null the bitmask will cover to the highest property,\n   *               _including_.\n   *\n   * @returns Returns a non-0 bitmask containing all values in the space between\n   *          the given ones.\n   *          Returns 0 if one or both of the given properties do not exist in\n   *          the space.\n   */\n  bitmaskFor: (pStart?: T | null, pEnd?: T | null) => number;\n\n  /**\n   * Returns the name of the property with the given value, or null if the\n   * value does not correspond to one of the space properties.\n   */\n  nameOf: (val: number) => T | null;\n\n  /**\n   * Holds properties whose numeric values are non-overlapping binary values,\n   * suitable for bitmasking.\n   *\n   * The given properties are set under the \"bit\" key in the object and hold\n   * the numeric value.\n   *\n   * @example\n   * ```javascript\n   * const space = new BitSpaces().create(\"up\", \"down\", \"left\", \"right\");\n   *\n   * // {\n   * //     bit: {\n   * //         up:    1, // at bit 0, i.e. 1 << 0\n   * //         down:  2, // at bit 1, i.e. 1 << 1\n   * //         left:  4, // at bit 2, i.e. 1 << 2\n   * //         right: 8, // at bit 3, i.e. 1 << 3\n   * //     },\n   * //     start:      0,\n   * //     end:        3,\n   * //     bitmask:    15, // 1 << 0 | 1 << 1 | 1 << 2 | 1 << 3\n   * //     has:        (p) => p === \"up\" || p === \"down\" || p === \"left\" || p === \"right\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 1 ? \"up\" : v === 2 ? \"down\" : v === 4 ...\n   * // }\n   *\n   * space.bitmaskFor(); // => space.bitmask (15)\n   * space.bitmaskFor(\"left\"); // => space.bit.left | space.bit.right (12)\n   * space.bitmaskFor(null, \"down\"); // => space.bit.up | space.bit.down (3)\n   * ```\n   */\n  bit: {\n    [key in T]: number;\n  };\n};\n\n/**\n * {@link BitSpaces} represents one or more related {@link BitSpace}s whose bit\n * values will not overlap.\n */\nexport class BitSpaces {\n  /**\n   * Creates and returns a new BitSpace that is bit shifted to the left as\n   * many bits as the ending bit of the previous space created by this\n   * instances, so that each new space created is non-overlapping with previous\n   * ones.\n   *\n   * The numeric values of the properties are guaranteed to be in the same\n   * order, increasing in value, as the keys passed to the function.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the number of bits in the space will exceed 32.\n   *\n   * @example\n   * ```javascript\n   * const spaces = new BitSpaces();\n   * const spaceA = spaces.create(\"up\", \"down\");\n   *\n   * // spaces.nBits   => 2\n   * // spaces.bitmask => 3\n   * //\n   * // spaceA:\n   * // {\n   * //     bit: {\n   * //         up:     1, // at bit 0, i.e. 1 << 0\n   * //         down:   2, // at bit 1, i.e. 1 << 1\n   * //     },\n   * //     start:      0,\n   * //     end:        1,\n   * //     bitmask:    3, // 1 << 0 | 1 << 1\n   * //     has:        (p) => p === \"up\" || p === \"down\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 1 ? \"up\" : v === 2 ? \"down\" : null\n   * // }\n   *\n   * const spaceB = spaces.create(\"left\", \"right\");\n   *\n   * // spaces.nBits   => 4\n   * // spaces.bitmask => 15\n   * //\n   * // spaceB:\n   * // {\n   * //     bit: {\n   * //         left:   4, // at bit 2, i.e. 1 << 2\n   * //         right:  8, // at bit 3, i.e. 1 << 3\n   * //     },\n   * //     start:      2,\n   * //     end:        3,\n   * //     bitmask:    12, // 1 << 2 | 1 << 3\n   * //     has:        (p) => p === \"left\" || p === \"right\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 4 ? \"left\" : v === 8 ? \"right\" : null\n   * // }\n   *\n   * ```\n   */\n  readonly create: <T extends BitPropName>(\n    ...propNames: readonly T[]\n  ) => BitSpace<T>;\n\n  /**\n   * Returns the number of bits all created spaces span, i.e. the end bit of\n   * the one + 1.\n   */\n  readonly nBits!: number;\n\n  /**\n   * Returns a bitmask containing all values in all created spaces.\n   */\n  readonly bitmask!: number;\n\n  constructor() {\n    const counter = newCounter();\n\n    this.create = (...propNames) => newBitSpace(counter, propNames);\n    MH.defineProperty(this, \"nBits\", { get: () => counter._nBits });\n    MH.defineProperty(this, \"bitmask\", { get: () => counter._bitmask });\n  }\n}\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newBitSpaces = () => new BitSpaces();\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const createBitSpace = <T extends BitPropName>(\n  spaces: BitSpaces,\n  ...propNames: readonly T[]\n): BitSpace<T> => spaces.create(...propNames);\n\n// ----------------------------------------\n\ntype BitCounter = {\n  _nBits: number;\n  _bitmask: number;\n};\n\nconst newCounter = (): BitCounter => ({\n  _nBits: 0,\n  _bitmask: 0,\n});\n\nconst newBitSpace = <T extends BitPropName>(\n  counter: BitCounter,\n  propNames: readonly T[],\n): BitSpace<T> => {\n  const start = counter._nBits;\n  const end = start + MH.lengthOf(propNames) - 1;\n  if (end >= 31) {\n    throw MH.usageError(\"BitSpaces overflow\");\n  }\n\n  const bitmask = getBitmask(start, end);\n  const space: BitSpace<T> = {\n    bit: {},\n    start,\n    end,\n    bitmask,\n\n    has: (p) =>\n      MH.isString(p) &&\n      p in space.bit &&\n      MH.isNumber((space.bit as Record<string, unknown>)[p]),\n\n    bitmaskFor: (pStart, pEnd) => {\n      if (\n        (!MH.isEmpty(pStart) && !space.has(pStart)) ||\n        (!MH.isEmpty(pEnd) && !space.has(pEnd))\n      ) {\n        return 0;\n      }\n\n      const thisStart = !MH.isEmpty(pStart)\n        ? MH.log2(space.bit[pStart])\n        : start;\n      const thisEnd = !MH.isEmpty(pEnd) ? MH.log2(space.bit[pEnd]) : end;\n\n      return getBitmask(thisStart, thisEnd);\n    },\n\n    nameOf: (val) => propNames[MH.log2(val) - start] ?? null,\n  } as BitSpace<T>;\n\n  for (const name of propNames) {\n    MH.defineProperty(space.bit, name, {\n      value: 1 << counter._nBits++,\n      enumerable: true,\n    });\n  }\n\n  counter._bitmask |= bitmask;\n\n  return space;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { MutationCategory } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newBitSpaces, createBitSpace } from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid category.\n *\n * @category Validation\n */\nexport const isValidMutationCategory = (\n  category: string,\n): category is MutationCategory => DOM_CATEGORIES_SPACE.has(category);\n\n/**\n * Returns true if the given string or array is a list of valid categories.\n *\n * @category Validation\n */\nexport const isValidMutationCategoryList = (categories: string | string[]) =>\n  isValidStrList(categories, isValidMutationCategory, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const DOM_CATEGORIES_SPACE = createBitSpace<MutationCategory>(\n  newBitSpaces(),\n  MC.S_ADDED,\n  MC.S_REMOVED,\n  MC.S_ATTRIBUTE,\n);\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\n/**\n * @category Tasks\n */\nexport type SchedulerPostTaskOptions = {\n  delay?: number;\n  priority?: TaskPriority;\n  signal?: AbortSignal;\n};\n\n/**\n * @category Tasks\n */\nexport type Scheduler = {\n  postTask<T, P extends readonly unknown[] | []>(\n    callback: (...params: P) => T,\n    options?: SchedulerPostTaskOptions,\n    ...args: P\n  ): Promise<T>;\n};\n\n/**\n * @category Tasks\n */\nexport type TaskPriority = \"user-blocking\" | \"user-visible\" | \"background\";\n\n/* eslint-disable-next-line no-var */\ndeclare var scheduler: Scheduler;\n\n/**\n * Schedules a task with high priority to be executed as soon as possible.\n *\n * It uses {@link https://developer.mozilla.org/en-US/docs/Web/API/Scheduler/postTask | Scheduler:postTask}\n * if available, otherwise falls back to\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MessageChannel | MessageChannel}.\n *\n * @category Tasks\n */\nexport const scheduleHighPriorityTask = (task: () => void) => {\n  if (typeof scheduler !== \"undefined\") {\n    scheduler.postTask(task, {\n      priority: \"user-blocking\",\n    });\n  } else {\n    // Fallback to MessageChannel\n    const channel = new MessageChannel();\n    channel.port1.onmessage = () => {\n      channel.port1.close();\n      task();\n    };\n    channel.port2.postMessage(\"\");\n  }\n};\n\n/**\n * Returns a wrapper around the given handler that is debounced by the given\n * debounce window.\n *\n * @category Tasks\n */\nexport const getDebouncedHandler = <Args extends unknown[]>(\n  debounceWindow: number,\n  handler: (...args: Args) => void,\n) => {\n  if (!debounceWindow) {\n    return handler;\n  }\n\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  let lastArgs: Args;\n\n  return (...args: Args) => {\n    lastArgs = args;\n\n    if (timer === null) {\n      timer = MH.setTimer(async () => {\n        await handler(...lastArgs);\n        timer = null;\n      }, debounceWindow);\n    }\n  };\n};\n\n/**\n * Returns a promise that resolves at least the given number of delay (in\n * milliseconds) later. Uses `setTimeout`.\n *\n * @category Tasks\n */\nexport const waitForDelay = (delay?: number) =>\n  MH.newPromise<void>((resolve) => {\n    MH.setTimer(resolve, delay);\n  });\n","/**\n * @module Modules/Callback\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getDebouncedHandler } from \"@lisn/utils/tasks\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * @typeParam Args See {@link Callback}\n */\nexport type CallbackHandler<Args extends unknown[] = []> = (\n  ...args: Args\n) => CallbackReturnType | Promise<CallbackReturnType>;\n\nexport type CallbackReturnType =\n  | typeof Callback.KEEP\n  | typeof Callback.REMOVE\n  | void;\n\n/**\n * For minification optimization. Exposed through Callback.wrap.\n *\n * @ignore\n * @internal\n */\nexport const wrapCallback = <Args extends unknown[] = []>(\n  handlerOrCallback: CallbackHandler<Args> | Callback<Args>,\n  debounceWindow = 0,\n): Callback<Args> => {\n  const isFunction = MH.isFunction(handlerOrCallback);\n  let isRemoved = () => false;\n\n  if (isFunction) {\n    // check if it's an invoke method\n    const callback = callablesMap.get(handlerOrCallback);\n    if (callback) {\n      return wrapCallback(callback);\n    }\n  } else {\n    isRemoved = handlerOrCallback.isRemoved;\n  }\n\n  const handler: CallbackHandler<Args> = isFunction\n    ? handlerOrCallback\n    : (...args: Args) => handlerOrCallback.invoke(...args);\n\n  const wrapper = new Callback<Args>(\n    getDebouncedHandler(debounceWindow, (...args: Args) => {\n      if (!isRemoved()) {\n        return handler(...args);\n      }\n    }),\n  );\n\n  if (!isFunction) {\n    handlerOrCallback.onRemove(wrapper.remove);\n  }\n\n  return wrapper;\n};\n\n/**\n * {@link Callback} wraps user-supplied callbacks. Supports\n * - removing a callback either when calling {@link remove} or if the user\n *   handler returns {@link Callback.REMOVE}\n * - calling custom {@link onRemove} hooks\n * - debouncing (via {@link wrap})\n * - awaiting on an asynchronous handler and ensuring that the handler does not\n *  run concurrently to itself, i.e. subsequent {@link invoke}s will be queued\n *\n * @typeParam Args The type of arguments that the callback expects.\n */\nexport class Callback<Args extends unknown[] = []> {\n  /**\n   * Possible return value for the handler.\n   *\n   * Do not do anything. Same as not retuning anything from the function.\n   */\n  static readonly KEEP: unique symbol = MC.SYMBOL(\n    \"KEEP\",\n  ) as typeof Callback.KEEP;\n\n  /**\n   * Possible return value for the handler.\n   *\n   * Will remove this callback.\n   */\n  static readonly REMOVE: unique symbol = MC.SYMBOL(\n    \"REMOVE\",\n  ) as typeof Callback.REMOVE;\n\n  /**\n   * Call the handler with the given arguments.\n   *\n   * If the handler is asynchronous, it awaits on it. Furthermore, calls will\n   * always wait for previous calls to this handler to complete first, i.e. it\n   * never runs concurrently to itself. If you need multiple calls to the async\n   * handler to run concurrently, then wrap it in a non-async function that\n   * does not await it.\n   *\n   * The returned promise is rejected in two cases:\n   * - If the callback throws an error or returns a rejected Promise.\n   * - If the callback is removed _after_ you call {@link invoke} but before the\n   *   handler is actually called (while it's waiting in the queue to be called)\n   *   In this case, the rejection reason is {@link Callback.REMOVE}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the callback is already removed.\n   */\n  readonly invoke: (...args: Args) => Promise<void>;\n\n  /**\n   * Mark the callback as removed and call the registered {@link onRemove} hooks.\n   *\n   * Future attempts to call it will result in\n   * {@link Errors.LisnUsageError | LisnUsageError}.\n   */\n  readonly remove: () => void;\n\n  /**\n   * Returns true if the callback has been removed and cannot be called again.\n   */\n  readonly isRemoved: () => boolean;\n\n  /**\n   * Registers the given function to be called when the callback is removed.\n   *\n   * You can call {@link onRemove} multiple times to register multiple hooks.\n   */\n  readonly onRemove: (fn: () => void) => void;\n\n  /**\n   * Wraps the given handler or callback as a callback, optionally debounced by\n   * the given debounce window.\n   *\n   * If the argument is already a callback _or an invoke method of a callback_,\n   * then the wrapper will call that callback and return the same value as it.\n   * It will also set up the returned wrapper callback so that it is removed\n   * when the original (given) callback is removed. However, removing the\n   * returned wrapper callback will _not_ cause the original callback (being\n   * wrapped) to be removed. If you want to do this, then do\n   * `wrapper.onRemove(wrapped.remove)`.\n   *\n   * Note that if the argument is a callback that's already debounced by a\n   * _larger_ window, then `debounceWindow` will have no effect.\n   *\n   * @param debounceWindow If non-0, the callback will be called at most\n   *                       every `debounceWindow` ms. The arguments it will\n   *                       be called with will be the last arguments the\n   *                       wrapper was called with.\n   */\n  static readonly wrap = wrapCallback;\n\n  /**\n   * @param handler The actual function to call. This should return one of\n   *                the known {@link CallbackReturnType} values.\n   */\n  constructor(handler: CallbackHandler<Args>) {\n    const logger = debug\n      ? new debug.Logger({ name: \"Callback\", logAtCreation: handler })\n      : null;\n\n    let isRemoved = false;\n    const id = MC.SYMBOL();\n\n    const onRemove = MH.newSet<() => void>();\n\n    this.isRemoved = () => isRemoved;\n\n    this.remove = () => {\n      if (!isRemoved) {\n        debug: logger?.debug8(\"Removing\");\n        isRemoved = true;\n\n        for (const rmFn of onRemove) {\n          rmFn();\n        }\n\n        CallbackScheduler._clear(id);\n      }\n    };\n\n    this.onRemove = (fn) => onRemove.add(fn);\n\n    this.invoke = (...args) =>\n      MH.newPromise((resolve, reject) => {\n        debug: logger?.debug8(\"Calling with\", args);\n        if (isRemoved) {\n          reject(MH.usageError(\"Callback has been removed\"));\n          return;\n        }\n\n        CallbackScheduler._push(\n          id,\n          async () => {\n            let result;\n            try {\n              result = await handler(...args);\n            } catch (err) {\n              reject(err);\n            }\n\n            if (result === Callback.REMOVE) {\n              this.remove();\n            }\n\n            resolve();\n          },\n          reject,\n        );\n      });\n\n    callablesMap.set(this.invoke, this);\n  }\n}\n\n// ----------------------------------------\n\ntype CallbackSchedulerTask = () => Promise<void>;\ntype CallbackSchedulerQueueItem = {\n  _task: CallbackSchedulerTask;\n  _running: boolean;\n  _onRemove: (reason: typeof Callback.REMOVE) => void;\n};\n\ntype CallableCallback<Args extends unknown[] = []> = (...args: Args) => void;\n\nconst callablesMap = MH.newWeakMap<CallableCallback, Callback>();\n\nconst CallbackScheduler = (() => {\n  const queues = MH.newMap<symbol, CallbackSchedulerQueueItem[]>();\n\n  const flush = async (queue: CallbackSchedulerQueueItem[]) => {\n    // So that callbacks are always called asynchronously for consistency,\n    // await here before calling 1st\n    await null;\n    while (MH.lengthOf(queue)) {\n      // shouldn't throw anything as Callback must catch errors\n      queue[0]._running = true;\n      await queue[0]._task();\n\n      // only remove when done\n      queue.shift();\n    }\n  };\n\n  return {\n    _clear: (id: symbol) => {\n      const queue = queues.get(id);\n      if (queue) {\n        let item: CallbackSchedulerQueueItem | undefined;\n        while ((item = queue.shift())) {\n          if (!item._running) {\n            item._onRemove(Callback.REMOVE);\n          }\n        }\n\n        MH.deleteKey(queues, id);\n      }\n    },\n\n    _push: (id: symbol, task: CallbackSchedulerTask, onRemove: () => void) => {\n      let queue = queues.get(id);\n      if (!queue) {\n        queue = [];\n        queues.set(id, queue);\n      }\n\n      queue.push({ _task: task, _onRemove: onRemove, _running: false });\n      if (MH.lengthOf(queue) === 1) {\n        flush(queue);\n      }\n    },\n  };\n})();\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LogFunction } from \"@lisn/globals/types\";\n\nimport { joinAsString } from \"@lisn/utils/text\";\n\nimport { Callback } from \"@lisn/modules/callback\";\n\n/**\n * Like `console.info` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logInfo: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleInfo(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.warn` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logWarn: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleWarn(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.error` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logError: LogFunction = (...args) => {\n  if (\n    (MH.lengthOf(args) > 1 || args[0] !== Callback.REMOVE) &&\n    !isMessageSeen(args)\n  ) {\n    MH.consoleError(MC.LOG_PREFIX, ...args);\n  }\n};\n\nconst discardMessages = MH.newSet<string>();\nconst isMessageSeen = (args: unknown[]) => {\n  const msg = joinAsString(\" \", ...args);\n  const isSeen = discardMessages.has(msg);\n  discardMessages.add(msg);\n  return isSeen;\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Preventing layout trashing\n *\n * {@link waitForMeasureTime} allows you to schedule tasks that read or\n * \"measure\", the DOM, for example getting computed styles, taking the\n * `offsetWidth` or the `scrollTop` of an element, etc... anything that _would_\n * force a layout if it runs after the layout has been invalidated by a\n * \"mutation\".\n *\n * See https://gist.github.com/paulirish/5d52fb081b3570c81e3 for a list of\n * operations that should be run on a valid layout to avoid forced layouts.\n *\n * {@link waitForMutateTime} allows you to schedule tasks that invalidate the\n * DOM layout by making changes to the style, inserting or removing elements,\n * etc.\n *\n * These ensure that:\n * - All mutation tasks that would invalidate the style run together before the\n *   next repaint.\n * - All measurement tasks that need a valid style will run as soon as possible\n *   after the next repaint.\n * - If a mutation task is scheduled by another mutation task, it will run in\n *   the same batch.\n * - If a measurement task is scheduled by either a mutation or another\n *   measurement task, it will run in the same batch.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logError } from \"@lisn/utils/log\";\nimport { scheduleHighPriorityTask } from \"@lisn/utils/tasks\";\n\n/**\n * Returns a Promise that is resolved before the next repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForMutateTime = () =>\n  MH.newPromise<void>((resolve) => {\n    scheduleDOMTask(scheduledDOMMutations, resolve);\n  });\n\n/**\n * Returns a Promise that is resolved as soon as possible after the next\n * repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForMeasureTime = () =>\n  MH.newPromise<void>((resolve) => {\n    scheduleDOMTask(scheduledDOMMeasurements, resolve);\n  });\n\n/**\n * Returns a Promise that is resolved before the repaint that follows the next\n * repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForSubsequentMutateTime = () =>\n  waitForMutateTime().then(waitForMeasureTime).then(waitForMutateTime);\n\n/**\n * Returns a Promise that is resolved as soon as possible after the repaint\n * that follows the next repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForSubsequentMeasureTime = () =>\n  waitForMeasureTime().then(waitForMutateTime).then(waitForMeasureTime);\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const asyncMutatorFor =\n  <Args extends unknown[], Ret>(func: (...args: Args) => Ret) =>\n  async (...args: Args) =>\n    waitForMutateTime().then(() => func(...args));\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const asyncMeasurerFor =\n  <Args extends unknown[], Ret>(func: (...args: Args) => Ret) =>\n  async (...args: Args) =>\n    waitForMeasureTime().then(() => func(...args));\n\n// ----------------------------------------\n\ntype TaskResolver = () => void;\ntype DOMTaskQueue = TaskResolver[];\n\nconst scheduledDOMMeasurements: DOMTaskQueue = [];\nconst scheduledDOMMutations: DOMTaskQueue = [];\nlet hasScheduledDOMTasks = false;\n\nconst scheduleDOMTask = (queue: DOMTaskQueue, resolve: TaskResolver) => {\n  queue.push(resolve);\n  if (!hasScheduledDOMTasks) {\n    hasScheduledDOMTasks = true;\n    MH.onAnimationFrame(runAllDOMTasks);\n  }\n};\n\nconst runAllDOMTasks = async () => {\n  // We suspend (await null) after each queue to ensure that microtasks that\n  // have been added by await waitFor* or waitFor*().then run before the next\n  // queue, so that if they schedule more measurements and/or mutations, they\n  // can be flushed now, in the same batch.\n\n  // We're inside an animation frame. Run all mutation tasks now.\n  while (MH.lengthOf(scheduledDOMMutations)) {\n    runDOMTaskQueue(scheduledDOMMutations);\n    // wait for tasks awaiting on the resolved promises, then check queue again\n    await null;\n  }\n\n  // The measurement queue is now empty => scheduling measurements after\n  // this point will result in rescheduling both queues again in the next\n  // frame.\n  //\n  // Schedule the measurement tasks as soon as possible, after the upcoming\n  // paint. Use a macro task with as high priority as possible.\n  scheduleHighPriorityTask(async () => {\n    while (MH.lengthOf(scheduledDOMMeasurements)) {\n      runDOMTaskQueue(scheduledDOMMeasurements);\n      // wait for tasks awaiting on the resolved promises, then check queue again\n      await null;\n    }\n\n    if (MH.lengthOf(scheduledDOMMutations)) {\n      // There have been mutations added. Schedule another flush.\n      MH.onAnimationFrame(runAllDOMTasks);\n    } else {\n      hasScheduledDOMTasks = false;\n    }\n  });\n};\n\nconst runDOMTaskQueue = (queue: DOMTaskQueue) => {\n  let resolve: TaskResolver | undefined;\n  while ((resolve = queue.shift())) {\n    try {\n      resolve();\n    } catch (err) /* istanbul ignore next */ {\n      logError(err);\n    }\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement } from \"@lisn/globals/types\";\n\n/**\n * Returns all the child elements of the given element that are not `script` or\n * `style` tags.\n *\n * @category DOM: Querying\n */\nexport const getVisibleContentChildren = (element: Element) =>\n  MH.filter([...MH.childrenOf(element)], (ch) =>\n    isVisibleContentTag(MH.tagName(ch)),\n  );\n\n/**\n * Returns whether the given tag is _not_ `script` or `style`. Comparison is\n * case insensitive.\n *\n * @category DOM: Querying\n */\nexport const isVisibleContentTag = (tagName: string) =>\n  !MH.includes([\"script\", \"style\"], MH.toLowerCase(tagName));\n\n/**\n * Returns whether the given tag name has by default an inline display.\n * Comparison is case insensitive.\n *\n * @category DOM: Querying\n */\nexport const isInlineTag = (tagName: string) =>\n  inlineTags.has(tagName.toLowerCase());\n\n/**\n * Returns whether the given element is as {@link DOMElement}.\n *\n * @category DOM: Querying\n */\nexport const isDOMElement = (target: unknown): target is DOMElement =>\n  MH.isHTMLElement(target) ||\n  MH.isInstanceOf(target, SVGElement) ||\n  (typeof MathMLElement !== \"undefined\" &&\n    MH.isInstanceOf(target, MathMLElement));\n\n// --------------------\n\nconst inlineTags = MH.newSet([\n  \"a\",\n  \"abbr\",\n  \"acronym\",\n  \"b\",\n  \"bdi\",\n  \"bdo\",\n  \"big\",\n  \"button\",\n  \"cite\",\n  \"code\",\n  \"data\",\n  \"dfn\",\n  \"em\",\n  \"i\",\n  \"img\",\n  \"input\",\n  \"kbd\",\n  \"label\",\n  \"mark\",\n  \"map\",\n  \"object\",\n  \"output\",\n  \"q\",\n  \"rp\",\n  \"rt\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"select\",\n  \"small\",\n  \"span\",\n  \"strong\",\n  \"sub\",\n  \"sup\",\n  \"textarea\",\n  \"time\",\n  \"tt\",\n  \"u\",\n  \"var\",\n]);\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Querying\n * These functions query the style, attributes or other aspects of elements, but\n * could lead to forced layout if not scheduled using {@link waitForMeasureTime}.\n *\n * @categoryDescription DOM: Querying (optimized)\n * These functions query the style, attributes or other aspects of elements in\n * an optimized way. Functions that could cause a forced layout use\n * {@link waitForMeasureTime} and so are asynchronous. Functions that can\n * perform the check without forcing a re-layout are synchronous.\n *\n * @categoryDescription Style: Altering\n * These functions transition an element from one CSS class to another, but\n * could lead to forced layout if not scheduled using {@link waitForMutateTime}.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n *\n * @categoryDescription Style: Altering (optimized)\n * These functions transition an element from one CSS class to another in an\n * optimized way using {@link waitForMutateTime} and so are asynchronous.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement, FlexDirection } from \"@lisn/globals/types\";\n\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n  asyncMeasurerFor,\n  asyncMutatorFor,\n  waitForSubsequentMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isDOMElement } from \"@lisn/utils/dom-query\";\nimport { isValidNum, roundNumTo } from \"@lisn/utils/math\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { camelToKebabCase, splitOn } from \"@lisn/utils/text\";\n\n/**\n * Removes the given `fromCls` class and adds the given `toCls` class to the\n * element.\n *\n * Unlike {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace | DOMTokenList:replace},\n * this will always add `toCls` even if `fromCls` isn't in the element's class list.\n *\n * @returns True if there was a change made (class removed or added), false\n * otherwise.\n *\n * @category Style: Altering\n */\nexport const transitionElementNow = (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n) => {\n  cancelCSSTransitions(element, fromCls, toCls);\n\n  // Avoid triggering MutationObserver unnecessarily.\n  let didChange = false;\n  if (hasClass(element, fromCls)) {\n    didChange = true;\n    removeClassesNow(element, fromCls);\n  }\n\n  if (!hasClass(element, toCls)) {\n    addClassesNow(element, toCls);\n    didChange = true;\n  }\n\n  return didChange;\n};\n\n/**\n * Like {@link transitionElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay, and it finally awaits for the effective style's\n * transition-duration.\n *\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, this one is\n * cancelled.\n *\n * @example\n *\n * - {@link showElement} with delay of 100 schedules `lisn-hide` -> `lisn-show`\n *   in 100ms\n * - then if {@link hideElementNow} is called, or a scheduled\n *   {@link hideElement} completes  before that timer runs out, this call to\n *   {@link showElement} aborts\n *\n * ```javascript\n * hideElement(someElement, 10);\n * // this will be aborted in 10ms when the scheduled hideElement above\n * // completes\n * showElement(someElement, 100);\n * ```\n *\n * ```javascript\n * // this will be aborted in 10ms when the hideElement that will be scheduled\n * // below completes\n * showElement(someElement, 100);\n * hideElement(someElement, 10);\n * ```\n *\n * ```javascript\n * // this will be aborted immediately by hideElementNow that runs straight\n * // afterwards\n * showElement(someElement, 100);\n * hideElementNow(someElement);\n * ```\n *\n * ```javascript\n * hideElementNow(someElement);\n * // this will NOT be aborted because hideElementNow has completed already\n * showElement(someElement, 100);\n * ```\n *\n * @category Style: Altering (optimized)\n */\nexport const transitionElement = async (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n  delay = 0,\n) => {\n  const thisTransition = scheduleCSSTransition(element, toCls);\n\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForMutateTime();\n  if (thisTransition._isCancelled()) {\n    // it has been overridden by a later transition\n    return false;\n  }\n\n  const didChange = transitionElementNow(element, fromCls, toCls);\n  thisTransition._finish();\n\n  if (!didChange) {\n    return false;\n  }\n\n  // Await for the transition duration so that caller awaiting on us knows when\n  // it's complete.\n  const transitionDuration = await getMaxTransitionDuration(element);\n  if (transitionDuration) {\n    await waitForDelay(transitionDuration);\n  }\n\n  return true;\n};\n\n/**\n * Transitions an element from class `lisn-undisplay` (which applies `display:\n * none`) to `lisn-display` (no style associated with this).\n *\n * The difference between this and simply removing the `lisn-undisplay` class\n * is that previously scheduled transitions to `lisn-undisplay` will be\n * cancelled.\n *\n * @see {@link transitionElementNow}\n *\n * @category Style: Altering\n */\nexport const displayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY);\n\n/**\n * Like {@link displayElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category Style: Altering (optimized)\n */\nexport const displayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY, delay);\n\n/**\n * The opposite of {@link displayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category Style: Altering\n */\nexport const undisplayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY);\n\n/**\n * Like {@link undisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category Style: Altering (optimized)\n */\nexport const undisplayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY, delay);\n\n/**\n * Transitions an element from class `lisn-hide` (which makes the element\n * hidden) to `lisn-show` (which shows it). These classes have CSS\n * transitions applied so the element is faded into and out of view.\n *\n * @see {@link transitionElementNow}.\n *\n * @category Style: Altering\n */\nexport const showElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW);\n\n/**\n * Like {@link showElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category Style: Altering (optimized)\n */\nexport const showElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW, delay);\n\n/**\n * The opposite of {@link showElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category Style: Altering\n */\nexport const hideElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE);\n\n/**\n * Like {@link hideElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category Style: Altering (optimized)\n */\nexport const hideElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE, delay);\n\n/**\n * If {@link isElementUndisplayed}, it will {@link displayElementNow},\n * otherwise it will {@link undisplayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category Style: Altering\n */\nexport const toggleDisplayElementNow = (element: Element) =>\n  isElementUndisplayed(element)\n    ? displayElementNow(element)\n    : undisplayElementNow(element);\n\n/**\n * Like {@link toggleDisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category Style: Altering (optimized)\n */\nexport const toggleDisplayElement = (element: Element, delay = 0) =>\n  isElementUndisplayed(element)\n    ? displayElement(element, delay)\n    : undisplayElement(element, delay);\n\n/**\n * If {@link isElementHidden}, it will {@link showElementNow}, otherwise\n * {@link hideElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category Style: Altering\n */\nexport const toggleShowElementNow = (element: Element) =>\n  isElementHidden(element) ? showElementNow(element) : hideElementNow(element);\n\n/**\n * Like {@link toggleShowElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category Style: Altering (optimized)\n */\nexport const toggleShowElement = (element: Element, delay = 0) =>\n  isElementHidden(element)\n    ? showElement(element, delay)\n    : hideElement(element, delay);\n\n/**\n * Returns true if the element's class list contains `lisn-hide`.\n *\n * @category DOM: Querying (optimized)\n */\nexport const isElementHidden = (element: Element) =>\n  hasClass(element, MC.PREFIX_HIDE);\n\n/**\n * Returns true if the element's class list contains `lisn-undisplay`.\n *\n * @category DOM: Querying (optimized)\n */\nexport const isElementUndisplayed = (element: Element) =>\n  hasClass(element, MC.PREFIX_UNDISPLAY);\n\n/**\n * Returns true if the element's class list contains the given class.\n *\n * @category DOM: Querying (optimized)\n */\nexport const hasClass = (element: Element, className: string) =>\n  MH.classList(element).contains(className);\n\n/**\n * Returns true if the element's class list contains all of the given classes.\n *\n * @since v1.2.0\n *\n * @category DOM: Querying (optimized)\n */\nexport const hasAllClasses = (element: Element, ...classNames: string[]) =>\n  MH.lengthOf(classNames) > 0 &&\n  !MH.some(classNames, (className) => !hasClass(element, className));\n\n/**\n * Returns true if the element's class list contains any of the given classes.\n *\n * @since v1.2.0\n *\n * @category DOM: Querying (optimized)\n */\nexport const hasAnyClass = (element: Element, ...classNames: string[]) =>\n  MH.some(classNames, (className) => hasClass(element, className));\n\n/**\n * Adds the given classes to the element.\n *\n * @category Style: Altering\n */\nexport const addClassesNow = (element: Element, ...classNames: string[]) =>\n  MH.classList(element).add(...classNames);\n\n/**\n * Like {@link addClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category Style: Altering (optimized)\n */\nexport const addClasses = asyncMutatorFor(addClassesNow);\n\n/**\n * Removes the given classes to the element.\n *\n * @category Style: Altering\n */\nexport const removeClassesNow = (element: Element, ...classNames: string[]) =>\n  MH.classList(element).remove(...classNames);\n\n/**\n * Like {@link removeClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category Style: Altering (optimized)\n */\nexport const removeClasses = asyncMutatorFor(removeClassesNow);\n\n/**\n * Toggles the given class on the element.\n *\n * @param force See {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle | DOMTokenList:toggle}\n *\n * @category Style: Altering\n */\nexport const toggleClassNow = (\n  element: Element,\n  className: string,\n  force?: boolean,\n) => MH.classList(element).toggle(className, force);\n\n/**\n * Like {@link toggleClassNow} except it will {@link waitForMutateTime}.\n *\n * @category Style: Altering (optimized)\n */\nexport const toggleClass = asyncMutatorFor(toggleClassNow);\n\n/**\n * Toggles the given classes on the element. This function does not accept the\n * `force` parameter.\n *\n * @since v1.2.0\n *\n * @category Style: Altering\n */\nexport const toggleClassesNow = (element: Element, ...classNames: string[]) => {\n  for (const cls of classNames) {\n    toggleClassNow(element, cls);\n  }\n};\n\n/**\n * Like {@link toggleClassesNow} except it will {@link waitForMutateTime}.\n *\n * @since v1.2.0\n *\n * @category Style: Altering (optimized)\n */\nexport const toggleClasses = asyncMutatorFor(toggleClassesNow);\n\n/**\n * Replaces the given class on the element with a new one.\n *\n * @since v1.2.0\n *\n * @category Style: Altering\n */\nexport const replaceClassNow = (\n  element: Element,\n  oldClassName: string,\n  newClassName: string,\n) => MH.classList(element).replace(oldClassName, newClassName);\n\n/**\n * Like {@link replaceClassNow} except it will {@link waitForMutateTime}.\n *\n * @since v1.2.0\n *\n * @category Style: Altering (optimized)\n */\nexport const replaceClass = asyncMutatorFor(replaceClassNow);\n\n// For *Data: to avoid unnecessary type checking that ensures element is\n// HTMLElement or SVGElement, use getAttribute instead of dataset.\n\n/**\n * Returns the value of the given data attribute. The name of the attribute\n * must _not_ start with `data`. It can be in either camelCase or kebab-case,\n * it is converted as needed.\n *\n * @category DOM: Querying (optimized)\n */\nexport const getData = (element: Element, name: string) =>\n  MH.getAttr(element, MH.prefixData(name));\n\n/**\n * Returns the value of the given data attribute as a boolean. Its value is\n * expected to be either blank or \"true\" (which result in `true`), or \"false\"\n * (which results in `false`).\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @since v1.2.0\n *\n * @category DOM: Querying (optimized)\n */\nexport const getBooleanData = (element: Element, name: string) => {\n  const value = getData(element, name);\n  return value !== null && value !== \"false\";\n};\n\n/**\n * @ignore\n * @deprecated\n */\nexport const getBoolData = getBooleanData;\n\n/**\n * Sets the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category Style: Altering\n */\nexport const setDataNow = (element: Element, name: string, value: string) =>\n  MH.setAttr(element, MH.prefixData(name), value);\n\n/**\n * Like {@link setDataNow} except it will {@link waitForMutateTime}.\n *\n * @category Style: Altering (optimized)\n */\nexport const setData = asyncMutatorFor(setDataNow);\n\n/**\n * Sets the given data attribute with value \"true\" (default) or \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @since v1.2.0\n *\n * @category Style: Altering\n */\nexport const setBooleanDataNow = (\n  element: Element,\n  name: string,\n  value = true,\n) => MH.setAttr(element, MH.prefixData(name), value + \"\");\n\n/**\n * @ignore\n * @deprecated\n */\nexport const setBoolDataNow = setBooleanDataNow;\n\n/**\n * Like {@link setBooleanDataNow} except it will {@link waitForMutateTime}.\n *\n * @since v1.2.0\n *\n * @category Style: Altering (optimized)\n */\nexport const setBooleanData = asyncMutatorFor(setBooleanDataNow);\n\n/**\n * @ignore\n * @deprecated\n */\nexport const setBoolData = setBooleanData;\n\n/**\n * Sets the given data attribute with value \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @since v1.2.0\n *\n * @category Style: Altering\n */\nexport const unsetBooleanDataNow = (element: Element, name: string) =>\n  MH.unsetAttr(element, MH.prefixData(name));\n\n/**\n * @ignore\n * @deprecated\n */\nexport const unsetBoolDataNow = unsetBooleanDataNow;\n\n/**\n * Like {@link unsetBooleanDataNow} except it will {@link waitForMutateTime}.\n *\n * @since v1.2.0\n *\n * @category Style: Altering (optimized)\n */\nexport const unsetBooleanData = asyncMutatorFor(unsetBooleanDataNow);\n\n/**\n * @ignore\n * @deprecated\n */\nexport const unsetBoolData = unsetBooleanData;\n\n/**\n * Deletes the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category Style: Altering\n */\nexport const delDataNow = (element: Element, name: string) =>\n  MH.delAttr(element, MH.prefixData(name));\n\n/**\n * Like {@link delDataNow} except it will {@link waitForMutateTime}.\n *\n * @category Style: Altering (optimized)\n */\nexport const delData = asyncMutatorFor(delDataNow);\n\n/**\n * Returns the value of the given property from the computed style of the\n * element.\n *\n * @category DOM: Querying\n */\nexport const getComputedStylePropNow = (element: Element, prop: string) =>\n  getComputedStyle(element).getPropertyValue(prop);\n\n/**\n * Like {@link getComputedStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Querying (optimized)\n */\nexport const getComputedStyleProp = asyncMeasurerFor(getComputedStylePropNow);\n\n/**\n * Returns the value of the given property from the inline style of the\n * element.\n *\n * @category DOM: Querying\n */\nexport const getStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.getPropertyValue(prop);\n\n/**\n * Like {@link getStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Querying (optimized)\n */\nexport const getStyleProp = asyncMeasurerFor(getStylePropNow);\n\n/**\n * Sets the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const setStylePropNow = (\n  element: Element,\n  prop: string,\n  value: string,\n) => (element as DOMElement).style?.setProperty(prop, value);\n\n/**\n * Like {@link setStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const setStyleProp = asyncMutatorFor(setStylePropNow);\n\n/**\n * Deletes the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const delStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.removeProperty(prop);\n\n/**\n * Like {@link delStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const delStyleProp = asyncMutatorFor(delStylePropNow);\n\n/**\n * Returns the flex direction of the given element **if it has a flex layout**.\n *\n * @returns `null` if the element does not have a flex layout.\n *\n * @category DOM: Querying (optimized)\n *\n * @since v1.2.0\n */\nexport const getFlexDirection = async (\n  element: Element,\n): Promise<FlexDirection | null> => {\n  const displayStyle = await getComputedStyleProp(element, \"display\");\n  if (!displayStyle.includes(\"flex\")) {\n    return null;\n  }\n\n  return (await getComputedStyleProp(\n    element,\n    \"flex-direction\",\n  )) as FlexDirection;\n};\n\n/**\n * Returns the flex direction of the given element's parent **if it has a flex\n * layout**.\n *\n * @returns `null` if the element's parent does not have a flex layout.\n *\n * @category DOM: Querying (optimized)\n *\n * @since v1.2.0\n */\nexport const getParentFlexDirection = async (\n  element: Element,\n): Promise<FlexDirection | null> => {\n  const parent = MH.parentOf(element);\n  return parent ? getFlexDirection(parent) : null;\n};\n\n/**\n * Returns true if the given element has a flex layout. If direction is given,\n * then it also needs to match.\n *\n * @category DOM: Querying (optimized)\n *\n * @since v1.2.0\n */\nexport const isFlex = async (element: Element, direction?: FlexDirection) => {\n  const flexDirection = await getFlexDirection(element);\n\n  if (direction) {\n    return direction === flexDirection;\n  }\n\n  return flexDirection !== null;\n};\n\n/**\n * Returns true if the given element's parent has a flex layout. If direction is\n * given, then it also needs to match.\n *\n * @category DOM: Querying (optimized)\n *\n * @since v1.2.0\n */\nexport const isFlexChild = async (\n  element: Element,\n  direction?: FlexDirection,\n) => {\n  const parent = MH.parentOf(element);\n  return parent ? isFlex(parent, direction) : false;\n};\n\n/**\n * In milliseconds.\n *\n * @ignore\n * @internal\n */\nexport const getMaxTransitionDuration = async (element: Element) => {\n  const propVal = await getComputedStyleProp(element, \"transition-duration\");\n\n  return MH.max(\n    ...splitOn(propVal, \",\", true).map((strValue) => {\n      let duration = MH.parseFloat(strValue) || 0;\n\n      if (strValue === duration + \"s\") {\n        duration *= 1000;\n      }\n\n      return duration;\n    }),\n  );\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const disableInitialTransition = async (element: Element, delay = 0) => {\n  await addClasses(element, MC.PREFIX_TRANSITION_DISABLE);\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForSubsequentMutateTime();\n  removeClassesNow(element, MC.PREFIX_TRANSITION_DISABLE);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const setHasModal = () => setBooleanData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const delHasModal = () => delData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const copyStyle = async (\n  fromElement: Element,\n  toElement: Element,\n  includeComputedProps?: string[],\n) => {\n  if (!isDOMElement(fromElement) || !isDOMElement(toElement)) {\n    return;\n  }\n\n  await waitForMeasureTime();\n  const props: Record<string, string> = {};\n\n  if (includeComputedProps) {\n    for (const prop of includeComputedProps) {\n      props[prop] = getComputedStylePropNow(fromElement, prop);\n    }\n  }\n\n  const style = fromElement.style; // only inline styles\n  for (const prop in style) {\n    const value = style.getPropertyValue(prop);\n    if (value) {\n      props[prop] = value;\n    }\n  }\n\n  for (const prop in props) {\n    setStyleProp(toElement, prop, props[prop]);\n  }\n\n  addClasses(toElement, ...MH.classList(fromElement));\n};\n\n/**\n * If the props keys are in camelCase they are converted to kebab-case\n *\n * If a value is null or undefined, the property is deleted.\n *\n * @ignore\n * @internal\n */\nexport const setNumericStyleJsVarsNow = (\n  element: Element,\n  props: CssNumericProps,\n  options: {\n    _prefix?: string;\n    _units?: string;\n    _numDecimal?: number;\n  } = {},\n) => {\n  if (!isDOMElement(element)) {\n    return;\n  }\n\n  const varPrefix = MH.prefixCssJsVar(options?._prefix ?? \"\");\n  for (const prop in props) {\n    const cssPropSuffix = camelToKebabCase(prop);\n    const varName = `${varPrefix}${cssPropSuffix}`;\n\n    let value: number | null;\n\n    if (!isValidNum(props[prop])) {\n      value = null;\n    } else {\n      value = props[prop];\n      const thisNumDecimal =\n        options?._numDecimal ?? (value > 0 && value < 1 ? 2 : 0);\n      value = roundNumTo(value, thisNumDecimal);\n    }\n\n    if (value === null) {\n      delStylePropNow(element, varName);\n    } else {\n      setStylePropNow(element, varName, value + (options?._units ?? \"\"));\n    }\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const setNumericStyleJsVars = asyncMutatorFor(setNumericStyleJsVarsNow);\n\n// ----------------------------------------\n\ntype CssNumericProps = Record<string, number | undefined | null>;\n\ntype CSSTransition = {\n  _cancel: () => undefined;\n  _finish: () => undefined;\n  _isCancelled: () => boolean;\n};\n\nconst PREFIX_HAS_MODAL = MH.prefixName(\"has-modal\");\n\nconst scheduledCSSTransitions = MH.newWeakMap<\n  Element,\n  Record<string, CSSTransition>\n>();\n\nconst cancelCSSTransitions = (element: Element, ...toClasses: string[]) => {\n  const scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    return;\n  }\n\n  for (const toCls of toClasses) {\n    const scheduledTransition = scheduledTransitions[toCls];\n    if (scheduledTransition) {\n      scheduledTransition._cancel();\n    }\n  }\n};\n\nconst scheduleCSSTransition = (element: Element, toCls: string) => {\n  let scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    scheduledTransitions = {};\n    scheduledCSSTransitions.set(element, scheduledTransitions);\n  }\n\n  let isCancelled = false;\n  scheduledTransitions[toCls] = {\n    _cancel: () => {\n      isCancelled = true;\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _finish: () => {\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _isCancelled: () => {\n      return isCancelled;\n    },\n  };\n\n  return scheduledTransitions[toCls];\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Altering\n * These functions alter the DOM tree, but could lead to forced layout if not\n * scheduled using {@link Utils.waitForMutateTime}.\n *\n * @categoryDescription DOM: Altering (optimized)\n * These functions alter the DOM tree in an optimized way using\n * {@link Utils.waitForMutateTime} and so are asynchronous.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  hideElement,\n  hasAnyClass,\n  addClassesNow,\n  removeClassesNow,\n  getData,\n  setDataNow,\n  setBooleanData,\n} from \"@lisn/utils/css-alter\";\nimport { asyncMutatorFor } from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { randId } from \"@lisn/utils/text\";\n\n/**\n * Wraps the element in the given wrapper, or a newly created element if not given.\n *\n * @param [options.wrapper]\n *              If it's an element, it is used as the wrapper. If it's a string\n *              tag name, then a new element with this tag is created as the\n *              wrapper. If not given, then `div` is used if the element to be\n *              wrapped has an block-display tag, or otherwise `span` (if the\n *              element to be wrapped has an inline tag name).\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n * @returns The wrapper element that was either passed in options or created.\n *\n * @category DOM: Altering\n */\nexport const wrapElementNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: wrapper,\n    });\n\n    ignoreMove(wrapper, {\n      to: MH.parentOf(element),\n    });\n  }\n\n  element.replaceWith(wrapper);\n  wrapper.append(element);\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapElementNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapElement = asyncMutatorFor(wrapElementNow);\n\n/**\n * Wraps the element's children in the given wrapper, or a newly created element\n * if not given.\n *\n * @see {@link wrapElementNow}.\n *\n * @category DOM: Altering\n */\nexport const wrapChildrenNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n  const { ignoreMove } = options ?? {};\n\n  moveChildrenNow(element, wrapper, { ignoreMove });\n  moveElementNow(wrapper, {\n    to: element,\n    ignoreMove,\n  });\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapChildrenNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapChildren = asyncMutatorFor(wrapChildrenNow);\n\n/**\n * Replace an element with another one.\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const replaceElementNow = (\n  element: Element,\n  newElement: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    ignoreMove(\n      // remove element\n      element,\n      { from: MH.parentOf(element) },\n    );\n\n    ignoreMove(\n      // move newElement to element's current parent\n      newElement,\n      { from: MH.parentOf(newElement), to: MH.parentOf(element) },\n    );\n  }\n\n  element.replaceWith(newElement);\n};\n\n/**\n * Like {@link replaceElementNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const replaceElement = asyncMutatorFor(replaceElementNow);\n\n/**\n * Replace an element with another one.\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const swapElementsNow = (\n  elementA: Element,\n  elementB: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  const temp = MH.createElement(\"div\");\n  replaceElementNow(elementA, temp, options);\n  replaceElementNow(elementB, elementA, options);\n  replaceElementNow(temp, elementB, options);\n};\n\n/**\n * Like {@link swapElementsNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const swapElements = asyncMutatorFor(swapElementsNow);\n\n// [TODO v2]: moveChildren to accept newParent as options.to\n\n/**\n * Move an element's children to a new element\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the children (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveChildrenNow = (\n  oldParent: Element,\n  newParent: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    for (const child of MH.childrenOf(oldParent)) {\n      ignoreMove(child, {\n        from: oldParent,\n        to: newParent,\n      });\n    }\n  }\n\n  newParent.append(...MH.childrenOf(oldParent));\n};\n\n/**\n * Like {@link moveChildrenNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveChildren = asyncMutatorFor(moveChildrenNow);\n\n/**\n * Moves an element to a new position.\n *\n * @param [options.to]         The new parent or sibling (depending on\n *                             `options.position`). If not given, the\n *                             element is removed from the DOM.\n * @param [options.position]   - append (default): append to `options.to`\n *                             - prepend: prepend to `options.to`\n *                             - before: insert before `options.to`\n *                             - after: insert after `options.to`\n * @param [options.ignoreMove] If true, the DOM watcher instances will\n *                             ignore the operation of moving the element\n *                             (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveElementNow = (\n  element: Element,\n  options?: {\n    to?: Element;\n    position?: \"append\" | \"prepend\" | \"before\" | \"after\";\n    ignoreMove?: boolean;\n  },\n) => {\n  let parentEl = options?.to ?? null;\n  const position = options?.position || \"append\";\n  if (position === \"before\" || position === \"after\") {\n    parentEl = MH.parentOf(options?.to);\n  }\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: parentEl,\n    });\n  }\n\n  if (options?.to) {\n    options.to[position](element);\n  } else {\n    MH.remove(element);\n  }\n};\n\n/**\n * Like {@link moveElementNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveElement = asyncMutatorFor(moveElementNow);\n\n/**\n * It will {@link hideElement} and then remove it from the DOM.\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering (optimized)\n */\nexport const hideAndRemoveElement = async (\n  element: Element,\n  delay = 0,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  await hideElement(element, delay);\n  moveElementNow(element, options);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getOrAssignID = (element: Element, prefix = \"\") => {\n  let domID = element.id;\n  if (!domID) {\n    domID = `${prefix}-${randId()}`;\n    element.id = domID;\n  }\n\n  return domID;\n};\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const isAllowedToWrap = (element: Element) =>\n  settings.contentWrappingAllowed === true &&\n  getData(element, MC.PREFIX_NO_WRAP) === null;\n\n/**\n * @ignore\n * @internal\n *\n * @param [options.classNames] Default is [MC.PREFIX_WRAPPER]. Pass `null` to\n *                             disable check.\n *\n * @since v1.2.0\n */\nexport const getWrapper = (\n  element: Element,\n  options?: {\n    _tagName?: keyof HTMLElementTagNameMap;\n    _classNames?: string[] | null;\n  },\n) => {\n  const { _tagName: tagName, _classNames: classNames = [MC.PREFIX_WRAPPER] } =\n    options ?? {};\n  const parent = MH.parentOf(element);\n  if (\n    MH.lengthOf(MH.childrenOf(parent)) === 1 &&\n    MH.isHTMLElement(parent) &&\n    (!tagName || MH.hasTagName(parent, tagName)) &&\n    (!classNames || hasAnyClass(parent, ...classNames))\n  ) {\n    // Already wrapped\n    return parent;\n  }\n\n  return null; // don't check the element itself, only its parent\n};\n\n/**\n * @ignore\n * @internal\n *\n * @param [options.classNames] Default is [MC.PREFIX_WRAPPER]. Pass `null` to\n *                             disable check.\n *\n * @since v1.2.0\n */\nexport const getContentWrapper = (\n  element: Element,\n  options?: {\n    _tagName?: keyof HTMLElementTagNameMap;\n    _classNames?: string[] | null;\n  },\n) => {\n  const { _tagName: tagName, _classNames: classNames = [MC.PREFIX_WRAPPER] } =\n    options ?? {};\n  const firstChild = MH.childrenOf(element)[0];\n  if (\n    MH.lengthOf(MH.childrenOf(element)) === 1 &&\n    MH.isHTMLElement(firstChild) &&\n    (!tagName || MH.hasTagName(firstChild, tagName)) &&\n    (!classNames || hasAnyClass(firstChild, ...classNames))\n  ) {\n    // Already wrapped\n    return firstChild;\n  }\n\n  return null;\n};\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const tryWrapNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options?: O,\n) => _tryWrapNow(element, options);\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const tryWrap = asyncMutatorFor(tryWrapNow);\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const tryWrapContentNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options?: O,\n) => _tryWrapNow(element, options, true);\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const tryWrapContent = asyncMutatorFor(tryWrapContentNow);\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const unwrapContentNow = (wrapper: Element, classNames?: string[]) => {\n  const parent = wrapper.parentElement;\n  if (parent) {\n    moveChildrenNow(wrapper, parent, { ignoreMove: true });\n    moveElementNow(wrapper, { ignoreMove: true });\n    if (classNames) {\n      removeClassesNow(wrapper, ...classNames);\n    }\n  }\n};\n\n/**\n * @ignore\n * @internal\n *\n * @since v1.2.0\n */\nexport const unwrapContent = asyncMutatorFor(unwrapContentNow);\n\n/**\n * @ignore\n * @internal\n */\nexport const cloneElement = <E extends Element>(element: E) => {\n  const clone = element.cloneNode(true) as E;\n  setBooleanData(clone, MH.prefixName(\"clone\"));\n  return clone;\n};\n\n/**\n * Creates a dummy hidden clone that's got animation and transitions disabled\n * and absolute position, wrapped in a wrapper (of size 0) and inserts it just\n * before the `insertBefore` element (or if not given, the original element),\n * so that the hidden clone overlaps the actual element's regular\n * (pre-transformed) position.\n *\n * It clears the ID of the clone.\n *\n * Returns the clone.\n *\n * @ignore\n * @internal\n */\nexport const insertGhostCloneNow = <E extends Element>(\n  element: E,\n  insertBefore: Element | null = null,\n) => {\n  const clone = cloneElement(element);\n  clone.id = \"\";\n\n  addClassesNow(\n    clone,\n    MC.PREFIX_GHOST,\n    MC.PREFIX_TRANSITION_DISABLE,\n    MC.PREFIX_ANIMATE_DISABLE,\n  );\n\n  const wrapper = _tryWrapNow(clone, { _required: true });\n\n  moveElementNow(wrapper, {\n    to: insertBefore ?? element,\n    position: \"before\",\n    ignoreMove: true,\n  });\n\n  return { _wrapper: wrapper, _clone: clone };\n};\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const insertGhostClone = asyncMutatorFor(insertGhostCloneNow);\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const ignoreMove = (\n  target: Element,\n  options: { from?: Element | null; to?: Element | null },\n) =>\n  recordsToSkipOnce.set(target, {\n    from: options.from ?? null,\n    to: options.to ?? null,\n  });\n\n/**\n * @ignore\n * @internal\n */\nexport const getIgnoreMove = (\n  target: Element,\n): { from: Element | null; to: Element | null } | null =>\n  recordsToSkipOnce.get(target) ?? null;\n\n/**\n * @ignore\n * @internal\n */\nexport const clearIgnoreMove = (target: Element) => {\n  // We should not clear the entry the first time the operation is observed\n  // (when we return true here), because there may be multiple DOMWatcher\n  // instances that will observe it and need to query it. Instead do it shortly.\n  MH.setTimer(() => {\n    MH.deleteKey(recordsToSkipOnce, target);\n  }, 100);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const insertArrow = (\n  target: Element,\n  direction: \"up\" | \"down\" | \"left\" | \"right\",\n  position: \"prepend\" | \"append\" | \"before\" | \"after\" = \"append\",\n  tag = \"span\",\n) => {\n  const arrow = MH.createElement(tag);\n  addClassesNow(arrow, MH.prefixName(MC.S_ARROW));\n  setDataNow(arrow, MH.prefixName(\"direction\"), direction);\n  moveElement(arrow, { to: target, position, ignoreMove: true });\n  return arrow;\n};\n\n// ----------------------------------------\n\ntype ContentWrappingOptions = {\n  _tagName?: keyof HTMLElementTagNameMap;\n  _classNames?: string[]; // if the wrapper has any one of these, it will be re-used\n  _ignoreMove?: boolean; // default is true here\n  _required?: boolean; // if true, will ignore contentWrappingAllowed and data-lisn-no-wrap\n  _requiredBy?: string; // for logging purposes\n};\n\nconst recordsToSkipOnce = MH.newMap<\n  /* target being moved */ Element,\n  { from: Element | null; to: Element | null }\n>();\n\nconst createWrapperFor = (\n  element: Element,\n  wrapper: HTMLElement | keyof HTMLElementTagNameMap | undefined,\n) => {\n  if (MH.isElement(wrapper)) {\n    return wrapper;\n  }\n\n  let tag = wrapper;\n  if (!tag) {\n    if (isInlineTag(MH.tagName(element))) {\n      tag = \"span\";\n    } else {\n      tag = \"div\";\n    }\n  }\n\n  return MH.createElement(tag);\n};\n\nconst _tryWrapNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options: O | undefined,\n  wrapContent = false, // if true, wrap its children, otherwise given element\n) => {\n  const {\n    _tagName: tagName,\n    _classNames: classNames = [MC.PREFIX_WRAPPER],\n    _ignoreMove: ignoreMove = true,\n    _required: required = false,\n    _requiredBy: requiredBy = \"\",\n  } = options ?? {};\n\n  const getWrapperFn = wrapContent ? getContentWrapper : getWrapper;\n  const wrapFn = wrapContent ? wrapChildrenNow : wrapElementNow;\n  const allowedToWrap = isAllowedToWrap(element);\n\n  let wrapper = getWrapperFn(element, options);\n  if (!wrapper && (required || allowedToWrap)) {\n    wrapper = wrapFn(element, { wrapper: tagName, ignoreMove });\n    if (classNames) {\n      addClassesNow(wrapper, ...classNames);\n    }\n    if (isInlineTag(MH.tagName(wrapper))) {\n      addClassesNow(wrapper, MC.PREFIX_INLINE_WRAPPER);\n    }\n\n    if (!allowedToWrap && requiredBy) {\n      logWarn(\n        `content wrapping is disabled for element but wrapping is required by ${requiredBy}`,\n      );\n    }\n  }\n\n  return wrapper as O extends { _required: true }\n    ? HTMLElement\n    : HTMLElement | null;\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { NonNullableReturnType } from \"@lisn/globals/types\";\n\n/**\n * Returns a Promise that is resolved when the given `checkFn` function returns\n * a value other than `null` or `undefined`.\n *\n * The Promise is resolved with `checkFn`'s return value.\n *\n * The function is called initially, and then every time there are changes to\n * the DOM children. Uses\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * @param timeout If given, then if no such element is present after this many\n *                milliseconds, the promise will resolve to `null`.\n *\n * @category DOM: Events\n */\nexport const waitForElement = <\n  F extends () => unknown,\n  T extends number | undefined = undefined,\n>(\n  checkFn: F,\n  timeout?: number,\n) =>\n  MH.newPromise<\n    T extends undefined\n      ? NonNullableReturnType<F>\n      : null | NonNullableReturnType<F>\n  >((resolve) => {\n    const callFn = () => {\n      const result = checkFn();\n      if (!MH.isNullish(result)) {\n        resolve(result as NonNullableReturnType<F>);\n        return true; // done\n      }\n      return false;\n    };\n\n    if (callFn()) {\n      return; // resolved already\n    }\n\n    if (!MH.isNullish(timeout)) {\n      MH.setTimer(() => {\n        resolve(\n          null as T extends undefined\n            ? NonNullableReturnType<F>\n            : null | NonNullableReturnType<F>,\n        );\n        observer.disconnect();\n      }, timeout);\n    }\n\n    const observer = MH.newMutationObserver(() => {\n      if (callFn()) {\n        observer.disconnect();\n      }\n    });\n\n    observer.observe(MH.getDocElement(), {\n      childList: true,\n      subtree: true,\n    });\n  });\n\n/**\n * Returns a Promise that is resolved when the given `checkFn` function returns\n * a value other than `null` or `undefined` or the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * becomes \"interactive\".\n *\n * It always calls the given `checkFn` first before examining the `readyState`.\n *\n * If the `readyState` became interactive before the element was found, the\n * Promise resolves to `null`. Otherwise the Promise is resolved with `checkFn`'s\n * return value.\n *\n * The function is called initially, and then every time there are changes to\n * the DOM children. Uses\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * @category DOM: Events\n */\nexport const waitForElementOrInteractive = <F extends () => unknown>(\n  checkFn: F,\n) =>\n  MH.newPromise<NonNullableReturnType<F> | null>((resolve) => {\n    let isInteractive = false;\n    // Check element first, then readyState. The callback to waitForElement is\n    // run synchronously first time, so isInteractive will be false and checkFn\n    // will run.\n    waitForElement(() => isInteractive || checkFn()).then((res) => {\n      if (!isInteractive) {\n        resolve(res as NonNullableReturnType<F>);\n      } // else already resolved to null\n    });\n\n    waitForInteractive().then(() => {\n      isInteractive = true;\n      resolve(null);\n    });\n  });\n\n/**\n * Returns a Promise that is resolved when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"interactive\" (or if it's already \"interactive\" or \"complete\", the\n * Promise is fulfilled immediately).\n *\n * @category DOM: Events\n */\nexport const waitForInteractive = () =>\n  MH.newPromise<void>((resolve) => {\n    const readyState = MH.getReadyState();\n    if (readyState === INTERACTIVE || readyState === COMPLETE) {\n      resolve();\n      return;\n    }\n\n    MH.getDoc().addEventListener(\"DOMContentLoaded\", () => resolve());\n  });\n\n/**\n * Returns a Promise that is resolved when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"complete\" (or if it's already \"complete\", the Promise is fulfilled\n * immediately).\n *\n * @category DOM: Events\n */\nexport const waitForComplete = () =>\n  MH.newPromise<void>((resolve) => {\n    if (MH.getReadyState() === COMPLETE) {\n      resolve();\n      return;\n    }\n\n    MH.getDoc().addEventListener(\"readystatechange\", () => {\n      if (MH.getReadyState() === COMPLETE) {\n        resolve();\n      }\n    });\n  });\n\n/**\n * Returns a Promise that is resolved either when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"complete\" or the `readyState` is \"interactive\" and at least\n * {@link settings.pageLoadTimeout} milliseconds have passed (if > 0) since it\n * became \"interactive\".\n *\n * @category DOM: Events\n */\nexport const waitForPageReady = () =>\n  MH.newPromise<void>((resolve) => {\n    if (pageIsReady) {\n      resolve();\n      return;\n    }\n\n    return waitForInteractive().then(() => {\n      // Setup a listener for the complete state but wait at most\n      // <pageLoadTimeout> (if specified)\n      let timer: ReturnType<typeof setTimeout> | null = null;\n\n      const dispatchReady = () => {\n        pageIsReady = true;\n        if (timer) {\n          MH.clearTimer(timer);\n          timer = null;\n        }\n        resolve();\n      };\n\n      if (settings.pageLoadTimeout > 0) {\n        timer = MH.setTimer(() => {\n          dispatchReady();\n        }, settings.pageLoadTimeout);\n      }\n\n      waitForComplete().then(dispatchReady);\n    });\n  });\n\n/**\n * Returns true if the page is \"ready\". See {@link waitForPageReady}.\n *\n * @category DOM: Events\n */\nexport const isPageReady = () => pageIsReady;\n\n// --------------------\n\nconst COMPLETE = \"complete\";\nconst INTERACTIVE = \"interactive\";\n\nlet pageIsReady = false;\n\nif (!MH.hasDOM()) {\n  pageIsReady = true;\n} else {\n  waitForPageReady(); // ensure pageIsReady is set even if waitForPageReady is not called\n}\n","/**\n * @module Modules/XMap\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { MapBase } from \"@lisn/globals/types\";\n\nexport type DefaultValueGetter<K, V> = (key: K) => V;\nexport type IteratorCallback<K, V> = (\n  value: V,\n  key: K,\n  map: XMap<K, V>,\n) => void;\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXMap = <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  new XMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXMapGetter =\n  <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXMap(getDefaultV);\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMap = <K extends WeakKey, V>(\n  getDefaultV: DefaultValueGetter<K, V>,\n) => new XWeakMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXWeakMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMapGetter =\n  <K extends WeakKey, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXWeakMap(getDefaultV);\n\nexport abstract class XMapBase<K, V> {\n  /**\n   * Returns the value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly get: (key: K) => V | undefined;\n\n  /**\n   * Like {@link get} except that if the key is not found in the map, then it\n   * will set and return a default value by calling `getDefaultV` passed to the\n   * constructor.\n   */\n  readonly sGet: (key: K) => V;\n\n  /**\n   * Sets a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly set: (key: K, value: V) => void;\n\n  /**\n   * Deletes a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly delete: (key: K) => void;\n\n  /**\n   * Deletes empty keys in the {@link XMap} or {@link XWeakMap} starting at the\n   * final nested path and checking the level above after deletion.\n   *\n   * A key is considered empty if it's value is undefined or it's an empty Map,\n   * Set, Array, etc (anything with size or length property equal to 0).\n   */\n  readonly prune: (sk: K, ...rest: unknown[]) => void;\n\n  /**\n   * Returns true if the {@link XMap} or {@link XWeakMap} contains the given key.\n   */\n  readonly has: (key: K) => boolean;\n\n  protected constructor(\n    root: MapBase<K, V>,\n    getDefaultV: DefaultValueGetter<K, V>,\n  ) {\n    this.get = (key) => root.get(key);\n    this.set = (key, value) => root.set(key, value);\n    this.delete = (key) => MH.deleteKey(root, key);\n    this.has = (key) => root.has(key);\n\n    this.sGet = (key) => {\n      let result = root.get(key);\n      if (result === undefined) {\n        result = getDefaultV(key);\n        root.set(key, result);\n      }\n      return result;\n    };\n\n    this.prune = (sk, ...rest) => {\n      const value = root.get(sk);\n      if (value instanceof XMapBase && MH.lengthOf(rest)) {\n        value.prune(rest[0], ...rest.slice(1));\n      }\n\n      if (\n        value === undefined ||\n        (MH.isIterableObject(value) &&\n          !(\n            (\"size\" in value && value.size) ||\n            (\"length\" in value && value.length)\n          ))\n      ) {\n        MH.deleteKey(root, sk);\n      }\n    };\n  }\n}\n\n/**\n * {@link XMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map | Map},\n * except that it supports automatically creating missing entries with\n * {@link sGet} according to a default value getter function.\n *\n * @typeParam K The type of the keys the map holds.\n * @typeParam V The type of the values the map holds.\n */\nexport class XMap<K, V> extends XMapBase<K, V> implements Iterable<[K, V]> {\n  /**\n   * Returns the number of entries in the {@link XMap}.\n   */\n  readonly size!: number;\n\n  /**\n   * Deletes all entries in the {@link XMap}.\n   */\n  readonly clear: () => void;\n\n  /**\n   * Returns an iterator over the {@link XMap} entries.\n   */\n  readonly entries: () => MapIterator<[K, V]>;\n\n  /**\n   * Returns an iterator over the {@link XMap} keys.\n   */\n  readonly keys: () => MapIterator<K>;\n\n  /**\n   * Returns an iterator over the {@link XMap} values.\n   */\n  readonly values: () => MapIterator<V>;\n\n  readonly [Symbol.iterator]!: () => IterableIterator<[K, V]>;\n\n  /**\n   * Returns a function that when called returns a new {@link XMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XMap}s.\n   */\n  static readonly newXMapGetter = newXMapGetter;\n\n  /**\n   * @param getDefaultV This function is called each time {@link sGet} is\n   *                    called with a non-existent key and must return a value\n   *                    that is then set for that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newMap<K, V>();\n    super(root, getDefaultV);\n\n    MH.defineProperty(this, \"size\", { get: () => root.size });\n    this.clear = () => root.clear();\n    this.entries = () => root.entries();\n    this.keys = () => root.keys();\n    this.values = () => root.values();\n    this[MC.SYMBOL.iterator] = () => root[MC.SYMBOL.iterator]();\n  }\n}\n\n/**\n * {@link XWeakMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap | WeakMap},\n * except that it supports automatically creating missing entries with\n * with {@link sGet} according to a default value getter function.\n *\n * @typeParam K The type of the keys the map holds.\n * @typeParam V The type of the values the map holds.\n */\nexport class XWeakMap<K extends WeakKey, V> extends XMapBase<K, V> {\n  /**\n   * Returns a function that when called returns a new {@link XWeakMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XWeakMap}s.\n   */\n  static readonly newXWeakMapGetter = newXWeakMapGetter;\n\n  /**\n   * @param getDefaultV This function is called each time {@link sGet} is\n   *                    called with a non-existent key and must return a value\n   *                    that is then set for that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newWeakMap<K, V>();\n    super(root, getDefaultV);\n  }\n}\n","/**\n * @module Watchers/DOMWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  MutationCategory,\n  CommaSeparatedStr,\n  AtLeastOne,\n} from \"@lisn/globals/types\";\n\nimport { DOM_CATEGORIES_SPACE } from \"@lisn/utils/dom\";\nimport {\n  getIgnoreMove,\n  clearIgnoreMove,\n  ignoreMove,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link DOMWatcher} listens for changes do the DOM tree. It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * It manages registered callbacks globally and reuses MutationObservers for\n * more efficient performance.\n *\n * Each instance of DOMWatcher manages up to two MutationObservers: one\n * for `childList` changes and one for attribute changes, and it disconnects\n * them when there are no active callbacks for the relevant type.\n *\n * `characterData` and changes to base\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Node | Node}s\n * (non-{@link https://developer.mozilla.org/en-US/docs/Web/API/Element | Element})\n * are not supported.\n */\nexport class DOMWatcher {\n  /**\n   * Call the given handler whenever there's a matching mutation within this\n   * DOMWatcher's {@link DOMWatcherConfig.root | root}.\n   *\n   * If {@link OnMutationOptions.skipInitial | options.skipInitial} is `false`\n   * (default), _and_ {@link OnMutationOptions.selector | options.selector} is\n   * given, _and_ {@link OnMutationOptions.categories | options.categories}\n   * includes \"added\", the handler is also called (almost) immediately with all\n   * existing elements matching the selector under this DOMWatcher's\n   * {@link DOMWatcherConfig.root | root}.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times, even if\n   * the options differ. If the handler has already been added, it is removed\n   * and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are not valid.\n   */\n  readonly onMutation: (\n    handler: OnMutationHandler,\n    options?: OnMutationOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offMutation: (handler: OnMutationHandler) => void;\n\n  /**\n   * Ignore an upcoming moving/adding/removing of an element.\n   *\n   * The operation must complete within the next cycle, by the time\n   * MutationObserver calls us.\n   *\n   * Use this to prevent this instance of DOMWatcher from calling any callbacks\n   * that listen for relevant changes as a result of this operation, to prevent\n   * loops for example.\n   *\n   * **IMPORTANT:**\n   *\n   * Ignoring moving of an element from a parent _inside_ this DOMWatcher's\n   * root to another parent that's _outside_ the root, will work as expected,\n   * even though the \"adding to the new parent\" mutation will not be observed.\n   * This is because the element's current parent at the time of the mutation\n   * callback can be examined.\n   *\n   * However if you want to ignore moving of an element _from a parent outside\n   * this DOMWatcher's root_ you need to specify from: null since the \"removal\n   * from the old parent\" mutation would not be observed and there's no way to\n   * examine it's previous parent at the time the \"adding to the new parent\"\n   * mutation is observed.\n   *\n   * For this reason, setting `options.from` to be an element that's not under\n   * the root is internally treated the same as `options.from: null`.\n   */\n  readonly ignoreMove: (target: Element, options: MoveOptions) => void;\n\n  /**\n   * Creates a new instance of DOMWatcher with the given\n   * {@link DOMWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: DOMWatcherConfig) {\n    return new DOMWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of DOMWatcher with the given\n   * {@link DOMWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: DOMWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    const root = myConfig._root === MH.getBody() ? null : myConfig._root;\n    let instance = instances.get(root)?.get(configStrKey);\n    if (!instance) {\n      instance = new DOMWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: DOMWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"DOMWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"DOMWatcher\", logAtCreation: config })\n      : null;\n\n    const buffer = newXMap<Element, MutationOperationInternal>((t) => ({\n      _target: t,\n      _categoryBitmask: 0,\n      _attributes: MH.newSet(),\n      _addedTo: null,\n      _removedFrom: null,\n    }));\n\n    const allCallbacks = MH.newMap<\n      OnMutationHandler,\n      {\n        _callback: OnMutationCallback;\n        _options: OnMutationOptionsInternal;\n      }\n    >();\n\n    // ----------\n\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const mutationHandler = (records: MutationRecord[]) => {\n      debug: logger?.debug9(`Got ${records.length} new records`, records);\n\n      for (const record of records) {\n        const target = MH.targetOf(record);\n        const recType = record.type;\n\n        /* istanbul ignore next */\n        if (!MH.isElement(target)) {\n          continue;\n        }\n\n        if (recType === MC.S_CHILD_LIST) {\n          for (const child of record.addedNodes) {\n            if (MH.isElement(child)) {\n              const operation = buffer.sGet(child);\n              operation._addedTo = target;\n              operation._categoryBitmask |= ADDED_BIT;\n            }\n          }\n\n          for (const child of record.removedNodes) {\n            if (MH.isElement(child)) {\n              const operation = buffer.sGet(child);\n              operation._removedFrom = target;\n              operation._categoryBitmask |= REMOVED_BIT;\n            }\n          }\n\n          //\n        } else if (recType === MC.S_ATTRIBUTES && record.attributeName) {\n          const operation = buffer.sGet(target);\n          operation._attributes.add(record.attributeName);\n          operation._categoryBitmask |= ATTRIBUTE_BIT;\n        }\n      }\n\n      // Schedule flushing of the buffer asynchronously so that we can combine\n      // the records from the two MutationObservers.\n      if (!timer && MH.sizeOf(buffer)) {\n        timer = MH.setTimer(() => {\n          debug: logger?.debug9(`Processing ${buffer.size} operations`);\n          for (const operation of buffer.values()) {\n            if (shouldSkipOperation(operation)) {\n              debug: logger?.debug10(\"Skipping operation\", operation);\n            } else {\n              processOperation(operation);\n            }\n          }\n\n          buffer.clear();\n          timer = null;\n        }, 0);\n      }\n    };\n\n    const observers: Record<MutationType, MyObserver> = {\n      [MC.S_CHILD_LIST]: {\n        _observer: MH.newMutationObserver(mutationHandler),\n        _isActive: false,\n      },\n      [MC.S_ATTRIBUTES]: {\n        _observer: MH.newMutationObserver(mutationHandler),\n        _isActive: false,\n      },\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnMutationHandler,\n      options: OnMutationOptionsInternal,\n    ): OnMutationCallback => {\n      MH.remove(allCallbacks.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => deleteHandler(handler));\n\n      allCallbacks.set(handler, { _callback: callback, _options: options });\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnMutation = async (\n      handler: OnMutationHandler,\n      userOptions: OnMutationOptions | undefined,\n    ) => {\n      const options = getOptions(userOptions ?? {});\n      const callback = createCallback(handler, options);\n\n      let root = config._root ?? MH.getBody();\n      if (!root) {\n        root = await waitForElement(MH.getBody);\n      } else {\n        // So that the call is always async\n        await null;\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      if (options._categoryBitmask & (ADDED_BIT | REMOVED_BIT)) {\n        activateObserver(root, MC.S_CHILD_LIST);\n      }\n\n      if (options._categoryBitmask & ATTRIBUTE_BIT) {\n        activateObserver(root, MC.S_ATTRIBUTES);\n      }\n\n      if (\n        userOptions?.skipInitial ||\n        !options._selector ||\n        !(options._categoryBitmask & ADDED_BIT)\n      ) {\n        return;\n      }\n\n      // As some of the matching elements that currently exist in the root may\n      // have just been added and therefore in the MutationObserver's queue, to\n      // avoid calling the handler with those entries twice, we empty its queue\n      // now and process it (which would also invoke the newly added callback).\n      // Then we skip any elements returned in querySelectorAll that were in\n      // the queue.\n\n      const childQueue = observers[MC.S_CHILD_LIST]._observer.takeRecords();\n      mutationHandler(childQueue);\n\n      for (const element of [\n        ...MH.querySelectorAll(root, options._selector),\n        ...(root.matches(options._selector) ? [root] : []),\n      ]) {\n        const initOperation: MutationOperationInternal = {\n          _target: element,\n          _categoryBitmask: ADDED_BIT,\n          _attributes: MH.newSet(),\n          _addedTo: MH.parentOf(element),\n          _removedFrom: null,\n        };\n\n        const bufferedOperation = buffer.get(element);\n        const diffOperation = getDiffOperation(\n          initOperation,\n          bufferedOperation,\n        );\n\n        if (diffOperation) {\n          if (shouldSkipOperation(diffOperation)) {\n            debug: logger?.debug10(\"Skipping operation\", diffOperation);\n          } else {\n            debug: logger?.debug5(\"Calling initially with\", diffOperation);\n            await invokeCallback(callback, diffOperation);\n          }\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (handler: OnMutationHandler) => {\n      MH.deleteKey(allCallbacks, handler);\n\n      let activeCategories = 0;\n      for (const entry of allCallbacks.values()) {\n        activeCategories |= entry._options._categoryBitmask;\n      }\n\n      if (!(activeCategories & (ADDED_BIT | REMOVED_BIT))) {\n        deactivateObserver(MC.S_CHILD_LIST);\n      }\n\n      if (!(activeCategories & ATTRIBUTE_BIT)) {\n        deactivateObserver(MC.S_ATTRIBUTES);\n      }\n    };\n\n    // ----------\n\n    const processOperation = (operation: MutationOperationInternal) => {\n      debug: logger?.debug10(\"Processing operation\", operation);\n\n      for (const entry of allCallbacks.values()) {\n        const categoryBitmask = entry._options._categoryBitmask;\n        const target = entry._options._target;\n        const selector = entry._options._selector;\n\n        if (!(operation._categoryBitmask & categoryBitmask)) {\n          debug: logger?.debug10(`Category does not match: ${categoryBitmask}`);\n          continue;\n        }\n\n        const currentTargets = [];\n        if (target) {\n          if (!operation._target.contains(target)) {\n            debug: logger?.debug10(\"Target does not match\", target);\n            continue;\n          }\n\n          currentTargets.push(target);\n        }\n\n        if (selector) {\n          const matches = [...MH.querySelectorAll(operation._target, selector)];\n\n          if (operation._target.matches(selector)) {\n            matches.push(operation._target);\n          }\n\n          if (!MH.lengthOf(matches)) {\n            debug: logger?.debug10(`Selector does not match: ${selector}`);\n            continue;\n          }\n\n          currentTargets.push(...matches);\n        }\n\n        invokeCallback(entry._callback, operation, currentTargets);\n      }\n    };\n\n    // ----------\n\n    const activateObserver = (root: Element, mutationType: MutationType) => {\n      if (!observers[mutationType]._isActive) {\n        debug: logger?.debug3(\n          `Activating mutation observer for '${mutationType}'`,\n        );\n        observers[mutationType]._observer.observe(root, {\n          [mutationType]: true,\n          subtree: config._subtree,\n        });\n        observers[mutationType]._isActive = true;\n      }\n    };\n\n    // ----------\n\n    const deactivateObserver = (mutationType: MutationType) => {\n      if (observers[mutationType]._isActive) {\n        debug: logger?.debug3(\n          `Disconnecting mutation observer for '${mutationType}'`,\n        );\n        observers[mutationType]._observer.disconnect();\n        observers[mutationType]._isActive = false;\n      }\n    };\n\n    // ----------\n\n    const shouldSkipOperation = (\n      operation: MutationOperationInternal,\n    ): boolean => {\n      const target = operation._target;\n      const requestToSkip = getIgnoreMove(target);\n      if (!requestToSkip) {\n        return false;\n      }\n\n      const removedFrom = operation._removedFrom;\n      const addedTo = MH.parentOf(target);\n      const requestFrom = requestToSkip.from;\n      const requestTo = requestToSkip.to;\n\n      const root = config._root ?? MH.getBody();\n      // If \"from\" is currently outside our root, we may not have seen a\n      // removal operation.\n      if (\n        (removedFrom === requestFrom || !root.contains(requestFrom)) &&\n        addedTo === requestTo\n      ) {\n        clearIgnoreMove(target);\n        return true;\n      }\n\n      return false;\n    };\n\n    // ----------\n\n    this.ignoreMove = ignoreMove;\n\n    // ----------\n\n    this.onMutation = setupOnMutation;\n\n    // ----------\n\n    this.offMutation = (handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type DOMWatcherConfig = {\n  /**\n   * The root element to observe for changes.\n   *\n   * It cannot be overridden on a per-callback basis.\n   *\n   * @defaultValue document.body\n   */\n  root?: Element | null;\n\n  /**\n   * Whether to observe root's subtree for changes or just direct descendants.\n   *\n   * It cannot be overridden on a per-callback basis.\n   *\n   * @defaultValue true\n   */\n  subtree?: boolean;\n};\n\n/**\n * @interface\n */\nexport type OnMutationOptions = {\n  /**\n   * If this is given, then the handler would only be called for operations\n   * where the target is _either_ the given element or an ancestor of it, i.e.\n   * it {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/contains | Node:contains} it.\n   *\n   * @defaultValue undefined\n   */\n  target?: Element;\n\n  /**\n   * If this is given, then the handler would only be called for operations\n   * where the target matches the given selector _or contains an element\n   * matching the given selector_.\n   *\n   * @defaultValue undefined\n   */\n  selector?: string;\n\n  /**\n   * Specifies a list of {@link MutationCategory}s to target for.\n   *\n   * If not given, then the handler is called for any of the supported\n   * mutations.\n   *\n   * It can be a comma-separated list of category names or an array of such\n   * names.\n   *\n   * @defaultValue undefined\n   */\n  categories?: CommaSeparatedStr<MutationCategory> | MutationCategory[];\n\n  /**\n   * Do not call the handler until there's a future matching mutation.\n   *\n   * By default, if `selector` is given, and `categories` includes `added`, we\n   * call the handler (almost) immediately with all elements matching selector\n   * relative to this DOMWatcher's root.\n   *\n   * The initial operation will contain just the element and\n   * `addedTo: <current parent>`.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\nexport type MoveOptions = AtLeastOne<{\n  /**\n   * If to is missing or null, it's a removal operation.\n   */\n  to: Element | null;\n\n  /**\n   * If from is missing or null, it's an insertion operation.\n   */\n  from: Element | null;\n}>;\n\nexport type MutationOperation = {\n  /**\n   * The target that was changed.\n   */\n  target: Element;\n\n  /**\n   * The target that the callback was interested in.\n   *\n   * If `selector` is given as part of {@link OnMutationOptions}, then\n   * `currentTarget` will point to the target that matched the selector\n   * starting at the operation's `target` as the root. If the operation's\n   * `target` contains more than one element matching selector, the callback\n   * will be called once for _each_ matching child.\n   *\n   * If `target` is given as part of {@link OnMutationOptions}, then\n   * `currentTarget` will be that element.\n   */\n  currentTarget: Element;\n\n  /**\n   * The list of attributes that were changed in this round.\n   */\n  attributes: Set<string>;\n\n  /**\n   * The element that the target was added to, i.e. it's new parent. It is null\n   * if the target was not moved to a new element _during this round_. It does\n   * not mean that this is its current parent.\n   */\n  addedTo: Element | null;\n\n  /**\n   * The element that the target was removed from, i.e. it's old parent. It is\n   * null if the target was not removed from a previous element _during this\n   * round_. It does not mean it did not previously have a parent, but that its\n   * removal was not observed.\n   */\n  removedFrom: Element | null;\n};\n\n/**\n * The handler is invoked with one argument:\n *\n * - a {@link MutationOperation} for a set of mutations related to a particular\n *   element\n *\n * The handler could be invoked multiple times in each \"round\" (cycle of event\n * loop) if there are mutation operations for more than one element that match\n * the supplied {@link OnMutationOptions}.\n */\nexport type OnMutationHandlerArgs = [MutationOperation];\nexport type OnMutationCallback = Callback<OnMutationHandlerArgs>;\nexport type OnMutationHandler =\n  | CallbackHandler<OnMutationHandlerArgs>\n  | OnMutationCallback;\n\n// ----------------------------------------\n\ntype DOMWatcherConfigInternal = {\n  _root: Element | null;\n  _subtree: boolean;\n};\n\ntype OnMutationOptionsInternal = {\n  _target: Element | null;\n  _selector: string;\n  _categoryBitmask: number;\n};\n\ntype MyObserver = {\n  _observer: MutationObserver;\n  _isActive: boolean;\n};\n\ntype MutationType = \"childList\" | \"attributes\";\n\ntype MutationOperationInternal = {\n  _target: Element;\n  _attributes: Set<string>;\n  _addedTo: Element | null;\n  _removedFrom: Element | null;\n  _categoryBitmask: number;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, DOMWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (\n  config: DOMWatcherConfig | undefined,\n): DOMWatcherConfigInternal => {\n  return {\n    _root: config?.root ?? null,\n    _subtree: config?.subtree ?? true,\n  };\n};\n\nconst CATEGORIES_BITS = DOM_CATEGORIES_SPACE.bit;\nconst ADDED_BIT = CATEGORIES_BITS[MC.S_ADDED];\nconst REMOVED_BIT = CATEGORIES_BITS[MC.S_REMOVED];\nconst ATTRIBUTE_BIT = CATEGORIES_BITS[MC.S_ATTRIBUTE];\n\n// ----------------------------------------\n\nconst getOptions = (options: OnMutationOptions): OnMutationOptionsInternal => {\n  let categoryBitmask = 0;\n  const categories = validateStrList(\n    \"categories\",\n    options.categories,\n    DOM_CATEGORIES_SPACE.has,\n  );\n\n  if (categories) {\n    for (const cat of categories) {\n      categoryBitmask |= CATEGORIES_BITS[cat];\n    }\n  } else {\n    categoryBitmask = DOM_CATEGORIES_SPACE.bitmask; // default: all\n  }\n\n  const selector = options.selector ?? \"\";\n  if (!MH.isString(selector)) {\n    throw MH.usageError(\"'selector' must be a string\");\n  }\n\n  return {\n    _categoryBitmask: categoryBitmask,\n    _target: options.target ?? null,\n    _selector: selector,\n  };\n};\n\nconst getDiffOperation = (\n  operationA: MutationOperationInternal,\n  operationB: MutationOperationInternal | undefined,\n): MutationOperationInternal | null => {\n  if (!operationB || operationA._target !== operationB._target) {\n    return operationA;\n  }\n\n  const attributes = MH.newSet<string>();\n  for (const attr of operationA._attributes) {\n    if (!operationB._attributes.has(attr)) {\n      attributes.add(attr);\n    }\n  }\n\n  const categoryBitmask =\n    operationA._categoryBitmask ^ operationB._categoryBitmask;\n\n  const addedTo =\n    operationA._addedTo === operationB._addedTo ? null : operationA._addedTo;\n\n  const removedFrom =\n    operationA._removedFrom === operationB._removedFrom\n      ? null\n      : operationA._removedFrom;\n\n  if (!MH.sizeOf(attributes) && !categoryBitmask && !addedTo && !removedFrom) {\n    return null;\n  }\n\n  return {\n    _target: operationA._target,\n    _categoryBitmask: categoryBitmask,\n    _attributes: attributes,\n    _addedTo: addedTo,\n    _removedFrom: removedFrom,\n  };\n};\n\nconst invokeCallback = (\n  callback: OnMutationCallback,\n  operation: MutationOperationInternal,\n  currentTargets: Element[] = [],\n) => {\n  if (!MH.lengthOf(currentTargets)) {\n    currentTargets = [operation._target];\n  }\n\n  for (const currentTarget of currentTargets) {\n    callback\n      .invoke({\n        target: operation._target,\n        currentTarget,\n        attributes: operation._attributes,\n        addedTo: operation._addedTo,\n        removedFrom: operation._removedFrom,\n      })\n      .catch(logError);\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  XYDirection,\n  ZDirection,\n  NoDirection,\n  AmbiguousDirection,\n  CommaSeparatedStr,\n  Vector,\n} from \"@lisn/globals/types\";\n\nimport { maxAbs, areParallel } from \"@lisn/utils/math\";\nimport { isValidStrList, validateStrList } from \"@lisn/utils/validation\";\n\n/**\n * Returns the cardinal direction in the XY plane for the larger of the two\n * deltas (horizontal vs vertical).\n *\n * If both deltas are 0, returns \"none\".\n *\n * If both deltas are equal and non-0, returns \"ambiguous\".\n *\n * @category Directions\n */\nexport const getMaxDeltaDirection = (\n  deltaX: number,\n  deltaY: number,\n): XYDirection | NoDirection | AmbiguousDirection => {\n  if (!MH.abs(deltaX) && !MH.abs(deltaY)) {\n    return MC.S_NONE;\n  }\n\n  if (MH.abs(deltaX) === MH.abs(deltaY)) {\n    return MC.S_AMBIGUOUS;\n  }\n\n  if (MH.abs(deltaX) > MH.abs(deltaY)) {\n    return deltaX < 0 ? MC.S_LEFT : MC.S_RIGHT;\n  }\n  return deltaY < 0 ? MC.S_UP : MC.S_DOWN;\n};\n\n/**\n * Returns the approximate direction of the given 2D vector as one of the\n * cardinal (XY plane) ones: \"up\", \"down\", \"left\" or \"right\"; or \"ambiguous\".\n *\n * @param angleDiffThreshold See {@link areParallel} or\n *                           {@link Utils.areAntiParallel | areAntiParallel}.\n *                           This determines whether the inferred direction is\n *                           ambiguous. For it to _not_ be ambiguous it must\n *                           align with one of the four cardinal directions to\n *                           within `angleDiffThreshold`. It doesn't make\n *                           sense for this value to be < 0 or >= 45 degrees.\n *                           If it is, it's forced to be positive (absolute)\n *                           and <= 44.99.\n *\n * @category Directions\n */\nexport const getVectorDirection = (\n  vector: Vector,\n  angleDiffThreshold = 0,\n): XYDirection | AmbiguousDirection | NoDirection => {\n  angleDiffThreshold = MH.min(44.99, MH.abs(angleDiffThreshold));\n\n  if (!maxAbs(...vector)) {\n    return MC.S_NONE;\n  } else if (areParallel(vector, [1, 0], angleDiffThreshold)) {\n    return MC.S_RIGHT;\n  } else if (areParallel(vector, [0, 1], angleDiffThreshold)) {\n    return MC.S_DOWN;\n  } else if (areParallel(vector, [-1, 0], angleDiffThreshold)) {\n    return MC.S_LEFT;\n  } else if (areParallel(vector, [0, -1], angleDiffThreshold)) {\n    return MC.S_UP;\n  }\n\n  return MC.S_AMBIGUOUS;\n};\n\n/**\n * Returns the opposite direction to the given direction or null if the given\n * direction has no opposite.\n *\n * @example\n * ```javascript\n * getOppositeDirection(\"up\"); // -> \"down\"\n * getOppositeDirection(\"down\"); // -> \"up\"\n * getOppositeDirection(\"left\"); // -> \"right\"\n * getOppositeDirection(\"right\"); // -> \"left\"\n * getOppositeDirection(\"none\"); // -> null\n * getOppositeDirection(\"ambiguous\"); // -> null\n * ```\n *\n * @category Directions\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid.\n */\nexport const getOppositeDirection = (\n  direction: Direction,\n): Direction | null => {\n  if (!(direction in OPPOSITE_DIRECTIONS)) {\n    throw MH.usageError(\"Invalid 'direction'\");\n  }\n\n  return OPPOSITE_DIRECTIONS[direction];\n};\n\n/**\n * Returns the set of directions which are opposite to the given set of directions.\n *\n * There are two sets of opposite pairs (\"up\"/\"down\" and \"left\"/\"right\") and at\n * least one of the two opposing directions of a pair must be present for the\n * other one to be included. If both directions that constitute a pair of\n * opposites is given, then the other pair is returned instead (minus any that\n * are present in the input). See examples below for clarification.\n *\n * @example\n * ```javascript\n * getOppositeXYDirections(\"up\"); // -> [\"down\"]\n * getOppositeXYDirections(\"left\"); // -> [\"right\"]\n * getOppositeXYDirections(\"up,down\"); // -> [\"left\",\"right\"]\n * getOppositeXYDirections(\"up,left\"); // -> [\"down\",\"right\"]\n * getOppositeXYDirections(\"up,left,right\"); // -> [\"down\"]\n * getOppositeXYDirections(\"none\"); // -> throws\n * getOppositeXYDirections(\"ambiguous\"); // -> throws\n * getOppositeXYDirections(\"in\"); // -> throws\n * ```\n *\n * @category Directions\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid.\n */\nexport const getOppositeXYDirections = (\n  directions: CommaSeparatedStr<XYDirection> | XYDirection[],\n): XYDirection[] => {\n  const directionList = validateStrList(\n    \"directions\",\n    directions,\n    isValidXYDirection,\n  );\n\n  if (!directionList) {\n    throw MH.usageError(\"'directions' is required\");\n  }\n\n  const opposites: XYDirection[] = [];\n  for (const direction of directionList) {\n    const opposite = getOppositeDirection(direction);\n    if (\n      opposite &&\n      isValidXYDirection(opposite) &&\n      !MH.includes(directionList, opposite)\n    ) {\n      opposites.push(opposite);\n    }\n  }\n\n  if (!MH.lengthOf(opposites)) {\n    for (const direction of XY_DIRECTIONS) {\n      if (!MH.includes(directionList, direction)) {\n        opposites.push(direction);\n      }\n    }\n  }\n\n  return opposites;\n};\n\n/**\n * Returns true if the given direction is one of the known XY ones.\n *\n * @category Validation\n */\nexport const isValidXYDirection = (\n  direction: string,\n): direction is XYDirection => MH.includes(XY_DIRECTIONS, direction);\n\n/**\n * Returns true if the given direction is one of the known Z ones.\n *\n * @category Validation\n */\nexport const isValidZDirection = (direction: string): direction is ZDirection =>\n  MH.includes(Z_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string is a valid direction.\n *\n * @category Validation\n */\nexport const isValidDirection = (direction: string): direction is Direction =>\n  MH.includes(DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid directions.\n *\n * @category Validation\n */\nexport const isValidDirectionList = (\n  directions: string | string[],\n): directions is CommaSeparatedStr<Direction> | Direction[] =>\n  isValidStrList(directions, isValidDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const XY_DIRECTIONS = [\n  MC.S_UP,\n  MC.S_DOWN,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const Z_DIRECTIONS = [MC.S_IN, MC.S_OUT] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const SCROLL_DIRECTIONS = [\n  ...XY_DIRECTIONS,\n  MC.S_NONE,\n  MC.S_AMBIGUOUS,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const DIRECTIONS = [\n  ...XY_DIRECTIONS,\n  ...Z_DIRECTIONS,\n  MC.S_NONE,\n  MC.S_AMBIGUOUS,\n] as const;\n\n// --------------------\n\nconst OPPOSITE_DIRECTIONS = {\n  [MC.S_UP]: MC.S_DOWN,\n  [MC.S_DOWN]: MC.S_UP,\n  [MC.S_LEFT]: MC.S_RIGHT,\n  [MC.S_RIGHT]: MC.S_LEFT,\n  [MC.S_IN]: MC.S_OUT,\n  [MC.S_OUT]: MC.S_IN,\n  [MC.S_NONE]: null,\n  [MC.S_AMBIGUOUS]: null,\n} as const;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { addClasses, removeClasses } from \"@lisn/utils/css-alter\";\nimport { copyExistingKeys } from \"@lisn/utils/misc\";\n\nimport { XMap, newXMapGetter, newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * Calls the given event listener, which could be a function that's callable\n * directly, or an object that has a `handleEvent` function property.\n *\n * @category Events: Generic\n */\nexport const callEventListener = (\n  handler: EventListenerOrEventListenerObject,\n  event: Event,\n) => {\n  if (MH.isFunction(handler)) {\n    handler.call(event.currentTarget ?? self, event);\n  } else {\n    handler.handleEvent.call(event.currentTarget ?? self, event);\n  }\n};\n\n/**\n * Adds an event listener for the given event name to the given target.\n *\n * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener | EventTarget:addEventListener}\n * but it handles `options` object in case the browser does not support those.\n * Does not support the `signal` option unless browser natively supports that.\n *\n * @returns `true` if successfully added, or `false` if the same handler has\n * already been added by us, or if the handler is not a valid event listener.\n *\n * @category Events: Generic\n */\nexport const addEventListenerTo = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n): boolean => {\n  options ??= false;\n  eventType = transformEventType(eventType);\n  if (getEventHandlerData(target, eventType, handler, options)) {\n    // already added\n    return false;\n  }\n\n  let thirdArg = options;\n  let wrappedHandler = handler;\n\n  // If the user passed an options object but the browser only supports a\n  // boolen for 'useCapture', then handle this.\n  const supports = getBrowserSupport();\n  if (MH.isNonPrimitive(options)) {\n    if (!supports._optionsArg) {\n      thirdArg = options.capture ?? false;\n    }\n\n    if (options.once && !supports._options.once) {\n      // Remove the handler once it's called once\n      wrappedHandler = (event) => {\n        removeEventListenerFrom(target, eventType, handler, options);\n        callEventListener(handler, event);\n      };\n    }\n  }\n\n  setEventHandlerData(target, eventType, handler, options, {\n    _wrappedHandler: wrappedHandler,\n    _thirdArg: thirdArg,\n  });\n\n  target.addEventListener(eventType, wrappedHandler, thirdArg);\n  return true;\n};\n\n/**\n * Removes an event listener that has been added using\n * {@link addEventListenerTo}.\n *\n * **IMPORTANT:** If you have added a listener using the built-in\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener | EventTarget:addEventListener},\n * then you should use\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener | EventTarget:removeEventListener},\n * to remove it, not this function.\n *\n * @returns `true` if successfully removed, or `false` if the handler has not\n * been added by us.\n *\n * @category Events: Generic\n */\nexport const removeEventListenerFrom = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => {\n  options ??= false;\n  eventType = transformEventType(eventType);\n  const data = getEventHandlerData(target, eventType, handler, options);\n\n  if (!data) {\n    return false;\n  }\n\n  target.removeEventListener(eventType, data._wrappedHandler, data._thirdArg);\n  deleteEventHandlerData(target, eventType, handler, options);\n  return true;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const preventSelect = (target: EventTarget) => {\n  addEventListenerTo(target, MC.S_SELECTSTART, MH.preventDefault);\n  if (MH.isElement(target)) {\n    addClasses(target, MC.PREFIX_NO_SELECT);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const undoPreventSelect = (target: EventTarget) => {\n  removeEventListenerFrom(target, MC.S_SELECTSTART, MH.preventDefault);\n  if (MH.isElement(target)) {\n    removeClasses(target, MC.PREFIX_NO_SELECT);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getBrowserSupport = (): BrowserEventSupport => {\n  if (browserEventSupport) {\n    // already detected\n    return browserEventSupport;\n  }\n\n  const supports = {\n    _pointer: false,\n    _optionsArg: false,\n    _options: {\n      capture: false,\n      passive: false,\n      once: false,\n      signal: false,\n    },\n  };\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#safely_detecting_option_support\n  const optTest = {};\n  let opt: keyof typeof supports._options;\n  for (opt in supports._options) {\n    const thisOpt = opt;\n    MH.defineProperty(optTest, thisOpt, {\n      get: () => {\n        supports._options[thisOpt] = true;\n        if (thisOpt === \"signal\") {\n          return new AbortController().signal;\n        }\n        return false;\n      },\n    });\n  }\n\n  const dummyHandler = () => {}; // TypeScript does not accept null\n  const dummyElement = MH.createElement(\"div\");\n  try {\n    dummyElement.addEventListener(\"testOptionSupport\", dummyHandler, optTest);\n    dummyElement.removeEventListener(\n      \"testOptionSupport\",\n      dummyHandler,\n      optTest,\n    );\n    supports._optionsArg = true;\n  } catch (e__ignored) {\n    //\n  }\n\n  supports._pointer = \"onpointerup\" in dummyElement;\n\n  browserEventSupport = supports;\n  return supports;\n};\n\n// --------------------\n\ntype EventHandlerData = {\n  _wrappedHandler: EventListenerOrEventListenerObject;\n  _thirdArg: boolean | AddEventListenerOptions;\n};\n\nlet browserEventSupport: BrowserEventSupport;\n\nconst registeredEventHandlerData = newXWeakMap<\n  EventTarget,\n  XMap<\n    string, // event type\n    XMap<\n      EventListenerOrEventListenerObject, // user-supplied handler\n      Map<\n        string, // str repr of options\n        EventHandlerData\n      >\n    >\n  >\n>(newXMapGetter(newXMapGetter(() => MH.newMap())));\n\n// detect browser features, see below\ntype BrowserEventSupport = {\n  _pointer: boolean;\n  _optionsArg: boolean;\n  _options: {\n    capture: boolean;\n    passive: boolean;\n    once: boolean;\n    signal: boolean;\n  };\n};\n\nconst getEventOptionsStr = (\n  options: boolean | AddEventListenerOptions,\n): string => {\n  const finalOptions: AddEventListenerOptions = {\n    capture: false,\n    passive: false,\n    once: false,\n  };\n\n  if (options === false || options === true) {\n    finalOptions.capture = options;\n  } else if (MH.isObject(options)) {\n    copyExistingKeys(options, finalOptions);\n  }\n\n  return MH.stringify(finalOptions);\n};\n\nconst getEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  return registeredEventHandlerData\n    .get(target)\n    ?.get(eventType)\n    ?.get(handler)\n    ?.get(optionsStr);\n};\n\nconst deleteEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  MH.deleteKey(\n    registeredEventHandlerData.get(target)?.get(eventType)?.get(handler),\n    optionsStr,\n  );\n  registeredEventHandlerData.prune(target, eventType, handler);\n};\n\nconst setEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n  data: EventHandlerData,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  registeredEventHandlerData\n    .sGet(target)\n    .sGet(eventType)\n    .sGet(handler)\n    .set(optionsStr, data);\n};\n\nconst transformEventType = (eventType: string) => {\n  const supports = getBrowserSupport();\n  if (eventType.startsWith(MC.S_POINTER) && !supports._pointer) {\n    // TODO maybe log a warning message is it's not supported, e.g. there's no\n    // mousecancel\n    return MH.strReplace(eventType, MC.S_POINTER, MC.S_MOUSE);\n  }\n\n  return eventType;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureDevice, GestureIntent } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * `deltaX` and `deltaY` together specify the precise direction in the XY plane\n * of the move if relevant (i.e. other than zoom intent). The direction\n * specifies the effective X (\"left\"/\"right\"), Y (\"up\"/\"down\") or Z (\"in\"/\"out\")\n * direction, or \"none\"/\"ambiguous\".\n *\n * `deltaZ` specifies relative zoom in or out for zoom intents.\n * For zoom in, deltaZ is always > 1, and for zoom out it is < 1.\n * For non-zoom events it is 1.\n *\n * For zoom intents, `direction` would be either in, out or none.\n * For other intents, it would be up, down, left, right, none or ambiguous.\n *\n * For important notes on the delta values see\n * - {@link Utils.getKeyGestureFragment | getKeyGestureFragment}\n * - {@link Utils.getTouchGestureFragment | getTouchGestureFragment}\n * - {@link Utils.getWheelGestureFragment | getWheelGestureFragment}\n *\n * @category Gestures\n */\nexport type GestureFragment = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n  deltaX: number;\n  deltaY: number;\n  deltaZ: number;\n};\n\n/**\n * Returns true if the given string is a valid gesture device.\n *\n * @category Validation\n */\nexport const isValidInputDevice = (device: string): device is GestureDevice =>\n  MH.includes(DEVICES, device);\n\n/**\n * Returns true if the given string is a valid gesture intent.\n *\n * @category Validation\n */\nexport const isValidIntent = (intent: string): intent is GestureIntent =>\n  MH.includes(INTENTS, intent);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * devices.\n *\n * @category Validation\n */\nexport const isValidInputDeviceList = (devices: string | string[]) =>\n  isValidStrList(devices, isValidInputDevice, false);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * intents.\n *\n * @category Validation\n */\nexport const isValidIntentList = (intents: string | string[]) =>\n  isValidStrList(intents, isValidIntent, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const addDeltaZ = (current: number, increment: number) =>\n  MH.max(MIN_DELTA_Z, current * increment);\n\n/**\n * @ignore\n * @internal\n */\nexport const DEVICES: GestureDevice[] = [\n  MC.S_KEY,\n  MC.S_POINTER,\n  MC.S_TOUCH,\n  MC.S_WHEEL,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const INTENTS: GestureIntent[] = [\n  MC.S_SCROLL,\n  MC.S_ZOOM,\n  MC.S_DRAG,\n  MC.S_UNKNOWN,\n] as const;\n\n// Do not allow zooming out more than this value\nconst MIN_DELTA_Z = 0.1;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { Direction, GestureIntent } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport { GestureFragment, addDeltaZ } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"keydown\"\n * events will be considered.\n *\n * If there are no \"keydown\" events in the given list of events, returns\n * `false`.\n *\n * The deltas of all events are summed together before determining final delta\n * and direction.\n *\n * If the events are of conflicting types, i.e. some scroll, some zoom, then\n * the intent will be \"unknown\" and the direction will be \"ambiguous\".\n *\n * Otherwise, if the deltas sum up to 0, the direction will be \"none\".\n *\n * **IMPORTANT NOTES ON THE DELTA VALUES**\n *\n * For key gestures the deltas are unreliable. You should not assume they\n * correspond to the would-be scroll or zoom amount that the browser would do.\n * But they can be used to determine relative amounts for animating, etc.\n *\n * Key press events can be divided into 3 categories: that scroll by a \"line\"\n * (e.g. arrow keys), by a \"page\" (e.g. PageUp/PageDown) or by the full content\n * height/width (e.g. Home/End). The actual scroll amount that _would_ result\n * from the event is dependent on the browser, the window size or the element's\n * scroll width/height, so ours can only be a best guess.\n *\n * Since the actual pixel equivalent is browser specific, we use reasonable\n * default values of delta for each of these \"line\", \"page\" or \"content\" modes,\n * similar to what\n * {@link Utils.getWheelGestureFragment | getWheelGestureFragment} does:\n * - For \"line\", then a configurable fixed value is used\n *  ({@link settings.deltaLineHeight}).\n * - For \"page\", then a configurable fixed value is used\n *  ({@link settings.deltaPageHeight}).\n * - For \"content\", the element's scroll height is used if given, otherwise\n *   the viewport height (same as \"page\"). We do not try to get the current\n *   scroll height of the target element, (which would be the best guess value\n *   of `deltaY` in case of Home/End key presses), as that would either involve\n *   an asynchronous action or would result in forced layout. If the caller is\n *   already tracking the scroll height of the target, you can pass this as an\n *   argument. Otherwise, we'll default to using the viewport height, same as\n *   for PageUp/Down.\n *\n * If the key gesture fragment is a result of multiple events that were\n * accumulated, the deltas are summed as usual, e.g. if a \"page\" is equal to 20\n * \"lines\", then pressing PageDown and then 10 times Up, would result in a\n * delta equal to 10 \"lines\" down.\n *\n * For zoom intents, `deltaZ` gives a relative change of scale, whereby each\n * press of + or - steps up by 15% or down by ~13% (`1 / 1.15` to be exact)\n * since the previous one.\n *\n * @param [options.angleDiffThreshold] See {@link getVectorDirection}\n * @param [options.scrollHeight]       Use this as deltaY when Home/End is\n *                                     pressed.\n *\n * @returns `false` if there are no \"keydown\" events in the list, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getKeyGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n    scrollHeight?: number;\n  },\n): GestureFragment | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  const LINE = settings.deltaLineHeight;\n  const PAGE = settings.deltaPageHeight;\n  const CONTENT = options?.scrollHeight ?? PAGE;\n\n  const deltasUp = (amount: number): DeltasArr => [0, -amount, 1];\n  const deltasDown = (amount: number): DeltasArr => [0, amount, 1];\n  const deltasLeft = (amount: number): DeltasArr => [-amount, 0, 1];\n  const deltasRight = (amount: number): DeltasArr => [amount, 0, 1];\n  const deltasIn: DeltasArr = [0, 0, 1.15];\n  const deltasOut: DeltasArr = [0, 0, 1 / 1.15];\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent | null = null;\n  let deltaX = 0,\n    deltaY = 0,\n    deltaZ = 1;\n\n  for (const event of events) {\n    if (!MH.isKeyboardEvent(event) || event.type !== MC.S_KEYDOWN) {\n      continue;\n    }\n\n    const deltasForKey: Record<string, DeltasArr | null> = {\n      [SK_UP]: deltasUp(LINE),\n      [SK_ARROWUP]: deltasUp(LINE),\n      [SK_PAGEUP]: deltasUp(PAGE),\n      Home: deltasUp(CONTENT),\n      [SK_DOWN]: deltasDown(LINE),\n      [SK_ARROWDOWN]: deltasDown(LINE),\n      [SK_PAGEDOWN]: deltasDown(PAGE),\n      End: deltasDown(CONTENT),\n      [SK_LEFT]: deltasLeft(LINE),\n      [SK_ARROWLEFT]: deltasLeft(LINE),\n      [SK_RIGHT]: deltasRight(LINE),\n      [SK_ARROWRIGHT]: deltasRight(LINE),\n      \" \": (event.shiftKey ? deltasUp : deltasDown)(PAGE),\n      \"+\": deltasIn,\n      \"=\": event.ctrlKey ? deltasIn : null,\n      \"-\": deltasOut,\n    };\n\n    const theseDeltas = deltasForKey[event.key] ?? null;\n    if (!theseDeltas) {\n      // not a relevant key\n      continue;\n    }\n\n    const [thisDeltaX, thisDeltaY, thisDeltaZ] = theseDeltas;\n    const thisIntent = thisDeltaZ !== 1 ? MC.S_ZOOM : MC.S_SCROLL;\n\n    deltaX += thisDeltaX;\n    deltaY += thisDeltaY;\n    deltaZ = addDeltaZ(deltaZ, thisDeltaZ);\n\n    if (!intent) {\n      intent = thisIntent;\n    } else if (intent !== thisIntent) {\n      // mixture of zoom and scroll\n      intent = MC.S_UNKNOWN;\n    }\n  }\n\n  if (!intent) {\n    return false; // no relevant events\n  } else if (intent === MC.S_UNKNOWN) {\n    direction = MC.S_AMBIGUOUS;\n  } else if (intent === MC.S_ZOOM) {\n    direction = deltaZ > 1 ? MC.S_IN : deltaZ < 1 ? MC.S_OUT : MC.S_NONE;\n  } else {\n    direction = getVectorDirection(\n      [deltaX, deltaY],\n      options?.angleDiffThreshold,\n    );\n  }\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_KEY,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n      };\n};\n\n// --------------------\n\ntype DeltasArr = [number, number, number];\n\nconst SK_UP = \"Up\";\nconst SK_DOWN = \"Down\";\nconst SK_LEFT = \"Left\";\nconst SK_RIGHT = \"Right\";\nconst SK_PAGE = \"Page\";\nconst SK_ARROW = \"Arrow\";\nconst SK_PAGEUP = (SK_PAGE + SK_UP) as `${typeof SK_PAGE}${typeof SK_UP}`;\nconst SK_PAGEDOWN = (SK_PAGE + SK_DOWN) as `${typeof SK_PAGE}${typeof SK_DOWN}`;\nconst SK_ARROWUP = (SK_ARROW + SK_UP) as `${typeof SK_ARROW}${typeof SK_UP}`;\nconst SK_ARROWDOWN = (SK_ARROW +\n  SK_DOWN) as `${typeof SK_ARROW}${typeof SK_DOWN}`;\nconst SK_ARROWLEFT = (SK_ARROW +\n  SK_LEFT) as `${typeof SK_ARROW}${typeof SK_LEFT}`;\nconst SK_ARROWRIGHT = (SK_ARROW +\n  SK_RIGHT) as `${typeof SK_ARROW}${typeof SK_RIGHT}`;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\nimport { getBrowserSupport } from \"@lisn/utils/event\";\nimport { GestureFragment } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. If the browser\n * supports Pointer events, then only \"pointermove\" events will be considered.\n * Otherwise, only \"mousemove\" events will be considered.\n *\n * If there are less than 2 such events in the given list of events, returns\n * `false`.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"pointercancel\" in the list or buttons other than the primary are pressed,\n * returns `null`.\n *\n * Pointer gestures always require the primary button to be pressed and the\n * resulting intent is always \"drag\", and `deltaZ` is always 1.\n *\n * @param [options.angleDiffThreshold] See {@link getVectorDirection}\n *\n * @returns `false` if there are less than 2 \"pointermove\"/\"mousemove\" events\n * in the list, `null` if the gesture is terminated, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getPointerGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let isCancelled = false;\n  const supports = getBrowserSupport();\n\n  // If the browser supports pointer events, then only take those; otherwise\n  // take the mouse events\n  const pointerEventClass = supports._pointer ? PointerEvent : MouseEvent;\n  const pointerUpType = supports._pointer ? MC.S_POINTERUP : MC.S_MOUSEUP;\n\n  const filteredEvents: MouseEvent[] = MH.filter(\n    events,\n    (event): event is MouseEvent => {\n      const eType = event.type;\n      isCancelled = isCancelled || eType === MC.S_POINTERCANCEL;\n      if (eType !== MC.S_CLICK && MH.isInstanceOf(event, pointerEventClass)) {\n        // Only events where the primary button is pressed (unless it's a\n        // pointerup event, in which case no buttons should be pressed) are\n        // considered, otherwise consider it terminated\n        isCancelled =\n          isCancelled ||\n          (eType === pointerUpType && event.buttons !== 0) ||\n          (eType !== pointerUpType && event.buttons !== 1);\n        // we don't handle touch pointer events\n        return !MH.isTouchPointerEvent(event);\n      }\n      return false;\n    },\n  );\n\n  const numEvents = MH.lengthOf(filteredEvents);\n  if (numEvents < 2) {\n    return false; // no enough events\n  }\n\n  if (isCancelled) {\n    return null; // terminated\n  }\n\n  const firstEvent = filteredEvents[0];\n  const lastEvent = filteredEvents[numEvents - 1];\n  if (MH.getPointerType(firstEvent) !== MH.getPointerType(lastEvent)) {\n    return null; // different devices, consider it terminated\n  }\n\n  const deltaX = lastEvent.clientX - firstEvent.clientX;\n  const deltaY = lastEvent.clientY - firstEvent.clientY;\n  const direction = getVectorDirection(\n    [deltaX, deltaY],\n    options?.angleDiffThreshold,\n  );\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_POINTER,\n        direction,\n        intent: MC.S_DRAG,\n        deltaX,\n        deltaY,\n        deltaZ: 1,\n      };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureIntent, Vector } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport {\n  maxAbs,\n  havingMaxAbs,\n  distanceBetween,\n  areAntiParallel,\n} from \"@lisn/utils/math\";\nimport { GestureFragment } from \"@lisn/utils/gesture\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Gestures\n */\nexport type TouchDiff = {\n  startX: number;\n  startY: number;\n\n  endX: number;\n  endY: number;\n\n  deltaX: number;\n  deltaY: number;\n\n  isSignificant: boolean;\n};\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"touchmove\" events\n * will be considered.\n *\n * If there are less than 2 such events in the given list of events, returns `false`.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that by default swipe actions follow the natural direction: swipe up\n * with scroll intent results in direction down and swipe down results in\n * direction up. Drag intent always follows the direction of the gesture.\n *\n * For zoom intents, which necessarily involves exactly two fingers `deltaZ`\n * is based on the relative change in distance between the fingers.\n *\n * @param [options.deltaThreshold]\n *                          A change of x or y coordinate less than this is\n *                          considered insignificant, for the purposes of\n *                          determining:\n *                          1) whether the inferred direction is in one of the\n *                             four cardinal ones, or otherwise ambiguous; and\n *                          2) whether more than two fingers have moved and\n *                             therefore whether the direction could be zoom or\n *                             not\n * @param [options.angleDiffThreshold] See {@link getVectorDirection}\n * @param [options.reverseScroll]\n *                          If set to `true`, will disable natural scroll\n *                          direction.\n * @param [options.dragHoldTime]\n *                          If the user presses and holds for at least the\n *                          given amount of milliseconds before moving the\n *                          finger(s), gestures other than pinch will be\n *                          treated as a drag instead of scroll as long as the\n *                          number of fingers touching the screen is\n *                          `options.dragNumFingers`. Default is 500ms.\n * @param [options.dragNumFingers]\n *                          The number of fingers that could be considered a\n *                          drag intent. Default is 1.\n *\n * @returns `false` if there are less than 2 \"touchmove\" events in the list,\n * `null` if the gesture is terminated, otherwise a {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getTouchGestureFragment = (\n  events: Event[],\n  options?: {\n    deltaThreshold?: number;\n    angleDiffThreshold?: number;\n    reverseScroll?: boolean;\n    dragHoldTime?: number;\n    dragNumFingers?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let moves = getTouchDiff(events, options?.deltaThreshold);\n\n  if (!moves) {\n    return null; // terminated\n  }\n\n  let numMoves = MH.lengthOf(moves);\n\n  const holdTime = getHoldTime(events);\n  const canBeDrag =\n    holdTime >= (options?.dragHoldTime ?? 500) &&\n    numMoves === (options?.dragNumFingers ?? 1);\n  const angleDiffThreshold = options?.angleDiffThreshold;\n\n  let deltaX = havingMaxAbs(...moves.map((m) => m.deltaX));\n  let deltaY = havingMaxAbs(...moves.map((m) => m.deltaY));\n  let deltaZ = 1;\n\n  if (numMoves > 2) {\n    // Take only the significant ones\n    moves = MH.filter(moves, (d) => d.isSignificant);\n    numMoves = MH.lengthOf(moves);\n  }\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent = MC.S_UNKNOWN;\n  if (numMoves === 2) {\n    // Check if it's a zoom\n    const vectorA: Vector = [moves[0].deltaX, moves[0].deltaY];\n    const vectorB: Vector = [moves[1].deltaX, moves[1].deltaY];\n\n    // If either finger is approx stationary, or if they move in opposite directions,\n    // treat it as zoom.\n    if (\n      !havingMaxAbs(...vectorA) || // finger A still\n      !havingMaxAbs(...vectorB) || // finger B still\n      areAntiParallel(vectorA, vectorB, angleDiffThreshold)\n    ) {\n      // It's a pinch motion => zoom\n      const startDistance = distanceBetween(\n        [moves[0].startX, moves[0].startY],\n        [moves[1].startX, moves[1].startY],\n      );\n\n      const endDistance = distanceBetween(\n        [moves[0].endX, moves[0].endY],\n        [moves[1].endX, moves[1].endY],\n      );\n\n      direction = startDistance < endDistance ? MC.S_IN : MC.S_OUT;\n      deltaZ = endDistance / startDistance;\n      deltaX = deltaY = 0;\n      intent = MC.S_ZOOM;\n    }\n  }\n\n  const deltaSign = canBeDrag || options?.reverseScroll ? 1 : -1;\n  // If scrolling, swap the deltas for natural scroll direction.\n  // Add +0 to force -0 to be +0 since jest doesn't think they're equal\n  deltaX = deltaSign * deltaX + 0;\n  deltaY = deltaSign * deltaY + 0;\n\n  if (direction === MC.S_NONE) {\n    // Wasn't a zoom. Check if all moves are aligned.\n    let isFirst = true;\n\n    for (const m of moves) {\n      // There's at least one significant move, assume scroll or drag intent.\n      intent = canBeDrag ? MC.S_DRAG : MC.S_SCROLL;\n\n      const thisDirection = getVectorDirection(\n        [deltaSign * m.deltaX, deltaSign * m.deltaY],\n        angleDiffThreshold,\n      );\n\n      if (thisDirection === MC.S_NONE) {\n        continue;\n      }\n\n      if (isFirst) {\n        direction = thisDirection;\n      } else if (direction !== thisDirection) {\n        direction = MC.S_AMBIGUOUS;\n        break;\n      }\n\n      isFirst = false;\n    }\n  }\n\n  if (direction === MC.S_NONE) {\n    const lastTouchEvent = MH.lastOf(events.filter(MH.isTouchEvent));\n    // If all fingers have lifted off, consider it terminated, otherwise wait\n    // for more events.\n    return MH.lengthOf(lastTouchEvent?.touches) ? false : null;\n  }\n\n  return {\n    device: MC.S_TOUCH,\n    direction,\n    intent,\n    deltaX,\n    deltaY,\n    deltaZ,\n  };\n};\n\n/**\n * Returns a description of the changes in each finger between the first and\n * the last relevant TouchEvent in the list.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that, `deltaX`/`deltaY` are the end X/Y coordinate minus the start X/Y\n * coordinate. For natural scroll direction you should swap their signs.\n *\n * @param deltaThreshold If the change of x and y coordinate are both less\n *                       than this, it is marked as not significant.\n *\n * @category Gestures\n */\nexport const getTouchDiff = (\n  events: Event[],\n  deltaThreshold = 0,\n): TouchDiff[] | null => {\n  // Group each touch point of each event by identifier, so that we can get the\n  // start and end coordinate of each finger\n  const groupedTouches = newXMap<number, Touch[]>((): Touch[] => []);\n\n  for (const event of events) {\n    if (!MH.isTouchEvent(event)) {\n      continue;\n    }\n\n    if (event.type === MC.S_TOUCHCANCEL) {\n      return null; // gesture terminated\n    }\n\n    for (const touch of event.touches) {\n      groupedTouches.sGet(touch.identifier).push(touch);\n    }\n  }\n\n  const moves: TouchDiff[] = [];\n\n  for (const touchList of groupedTouches.values()) {\n    const nTouches = MH.lengthOf(touchList);\n    if (nTouches < 2) {\n      // Only one event had that finger in it, so there's no move for it\n      continue;\n    }\n\n    const firstTouch = touchList[0];\n    const lastTouch = touchList[nTouches - 1];\n    const startX = firstTouch.clientX;\n    const startY = firstTouch.clientY;\n\n    const endX = lastTouch.clientX;\n    const endY = lastTouch.clientY;\n\n    const deltaX = endX - startX;\n    const deltaY = endY - startY;\n\n    const isSignificant = maxAbs(deltaX, deltaY) >= deltaThreshold;\n\n    // Consider it a move in one of the 4 cardinal ones\n    moves.push({\n      startX,\n      startY,\n      endX,\n      endY,\n      deltaX,\n      deltaY,\n      isSignificant,\n    });\n  }\n\n  return moves;\n};\n\n// --------------------\n\nconst getHoldTime = (events: Event[]) => {\n  const firstStart = events.findIndex((e) => e.type === MC.S_TOUCHSTART);\n  const firstMove = events.findIndex((e) => e.type === MC.S_TOUCHMOVE);\n  if (firstStart < 0 || firstMove < 1) {\n    return 0;\n  }\n\n  return events[firstMove].timeStamp - events[firstStart].timeStamp;\n};\n","/**\n * @module\n * @ignore\n * @internal\n *\n * FULL CREDIT FOR THIS GOES TO\n * https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n *\n * ADAPTED FROM THE ABOVE SOURCE\n *\n * ORIGINAL COPYRIGHT IN FILE PRESERVED:\n *\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * ORIGINAL LICENSE\n *\n * BSD License\n *\n * For FixedDataTable software\n *\n * Copyright (c) 2015, Facebook, Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *\n *  * Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n *  * Neither the name Facebook nor the names of its contributors may be used to\n *    endorse or promote products derived from this software without specific\n *    prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { settings } from \"@lisn/globals/settings\";\n\n/**\n * ORIGINAL DEVELOPER COMMENT PRESERVED\n *\n * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n * complicated, thus this doc is long and (hopefully) detailed enough to answer\n * your questions.\n *\n * If you need to react to the mouse wheel in a predictable way, this code is\n * like your bestest friend. * hugs *\n *\n * As of today, there are 4 DOM event types you can listen to:\n *\n *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n *\n * So what to do?  The is the best:\n *\n *   normalizeWheel.getEventType();\n *\n * In your event callback, use this code to get sane interpretation of the\n * deltas.  This code will return an object with properties:\n *\n *   spinX   -- normalized spin speed (use for zoom) - x plane\n *   spinY   -- \" - y plane\n *   pixelX  -- normalized distance (to pixels) - x plane\n *   pixelY  -- \" - y plane\n *\n * Wheel values are provided by the browser assuming you are using the wheel to\n * scroll a web page by a number of lines or pixels (or pages).  Values can vary\n * significantly on different platforms and browsers, forgetting that you can\n * scroll at different speeds.  Some devices (like trackpads) emit more events\n * at smaller increments with fine granularity, and some emit massive jumps with\n * linear speed or acceleration.\n *\n * This code does its best to normalize the deltas for you:\n *\n *   - spin is trying to normalize how far the wheel was spun (or trackpad\n *     dragged).  This is super useful for zoom support where you want to\n *     throw away the chunky scroll steps on the PC and make those equal to\n *     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n *     resolve a single slow step on a wheel to 1.\n *\n *   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n *     get the crazy differences between browsers, but at least it'll be in\n *     pixels!\n *\n *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n *     should translate to positive value zooming IN, negative zooming OUT.\n *     This matches the newer 'wheel' event.\n *\n * Why are there spinX, spinY (or pixels)?\n *\n *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n *     with a mouse.  It results in side-scrolling in the browser by default.\n *\n *   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n *\n *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n *     probably is by browsers in conjunction with fancy 3D controllers .. but\n *     you know.\n *\n * Implementation info:\n *\n * Examples of 'wheel' event if you scroll slowly (down) by one step with an\n * average mouse:\n *\n *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n *\n * On the trackpad:\n *\n *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n *\n * On other/older browsers.. it's more complicated as there can be multiple and\n * also missing delta values.\n *\n * The 'wheel' event is more standard:\n *\n * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n *\n * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n * backward compatibility with older events.  Those other values help us\n * better normalize spin speed.  Example of what the browsers provide:\n *\n *                          | event.wheelDelta | event.detail\n *        ------------------+------------------+--------------\n *          Safari v5/OS X  |       -120       |       0\n *          Safari v5/Win7  |       -120       |       0\n *         Chrome v17/OS X  |       -120       |       0\n *         Chrome v17/Win7  |       -120       |       0\n *                IE9/Win7  |       -120       |   undefined\n *         Firefox v4/OS X  |     undefined    |       1\n *         Firefox v4/Win7  |     undefined    |       3\n */\nexport const normalizeWheel = (event: LegacyWheelEvent): WheelData => {\n  let spinX = 0,\n    spinY = 0,\n    pixelX = event.deltaX,\n    pixelY = event.deltaY;\n\n  const LINE = settings.deltaLineHeight;\n\n  // Legacy\n  if (event.detail !== undefined) {\n    spinY = event.detail;\n  }\n  if (event.wheelDelta !== undefined) {\n    spinY = -event.wheelDelta / 120;\n  }\n  if (event.wheelDeltaY !== undefined) {\n    spinY = -event.wheelDeltaY / 120;\n  }\n  if (event.wheelDeltaX !== undefined) {\n    spinX = -event.wheelDeltaX / 120;\n  }\n\n  if ((pixelX || pixelY) && event.deltaMode) {\n    if (event.deltaMode === 1) {\n      // delta in LINE units\n      pixelX *= LINE;\n      pixelY *= LINE;\n    } else {\n      // delta in PAGE units\n      pixelX *= settings.deltaPageWidth;\n      pixelY *= settings.deltaPageHeight;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pixelX && !spinX) {\n    spinX = pixelX < 1 ? -1 : 1;\n  }\n  if (pixelY && !spinY) {\n    spinY = pixelY < 1 ? -1 : 1;\n  }\n\n  return { spinX, spinY, pixelX, pixelY };\n};\n\nexport type WheelData = {\n  spinX: number;\n  spinY: number;\n  pixelX: number;\n  pixelY: number;\n};\n\n// --------------------\n\ntype LegacyWheelEvent = WheelEvent & {\n  wheelDelta?: number;\n  wheelDeltaX?: number;\n  wheelDeltaY?: number;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureIntent } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport { havingMaxAbs } from \"@lisn/utils/math\";\nimport { normalizeWheel } from \"@lisn/utils/normalize-wheel\";\n\nimport { GestureFragment, addDeltaZ } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"wheel\" events\n * will be considered.\n *\n * If there are no \"wheel\" events in the given list of events, returns `false`.\n *\n * The deltas of all events are summed together before determining final delta\n * and direction.\n *\n * If the events are of conflicting types, i.e. some scroll, some zoom, then\n * the intent will be \"unknown\" and the direction will be \"ambiguous\".\n *\n * If the deltas sum up to 0, the direction will be \"none\".\n *\n * **IMPORTANT NOTES ON THE DELTA VALUES**\n *\n * For wheel gestures the deltas are _highly_ unreliable, especially when\n * zooming (Control + wheel or pinching trackpad). You should not assume they\n * correspond to the would-be scroll or zoom amount that the browser would do.\n * But they can be used to determine relative amounts for animating, etc.\n *\n * If the browser reports the delta values of a WheelEvent to be in mode \"line\",\n * then a configurable fixed value is used\n * ({@link Settings.settings.deltaLineHeight | settings.deltaLineHeight}).\n *\n * If the browser reports the delta values of a WheelEvent to be in mode \"page\",\n * then a configurable fixed value is used\n * ({@link Settings.settings.deltaPageWidth | settings.deltaPageWidth} and\n * ({@link Settings.settings.deltaPageHeight | settings.deltaPageHeight}).\n *\n * For zoom intents `deltaZ` is based on what the browser reports as the\n * `deltaY`, which in most browsers roughly corresponds to a percentage zoom\n * factor.\n *\n * @param [options.angleDiffThreshold] See {@link getVectorDirection}.\n *                                     Default is 5.\n *\n * @returns `false` if there are no \"wheel\" events in the list, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getWheelGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent | null = null;\n  let deltaX = 0,\n    deltaY = 0,\n    deltaZ = 1;\n\n  for (const event of events) {\n    if (!MH.isWheelEvent(event) || event.type !== MC.S_WHEEL) {\n      continue;\n    }\n\n    const data = normalizeWheel(event);\n    let thisIntent: GestureIntent = MC.S_SCROLL;\n    let thisDeltaX = data.pixelX;\n    let thisDeltaY = data.pixelY;\n    let thisDeltaZ = 1;\n    const maxDelta = havingMaxAbs(thisDeltaX, thisDeltaY);\n\n    if (event.ctrlKey && !thisDeltaX) {\n      // Browsers report negative deltaY for zoom in, so swap sign\n      let percentage = -maxDelta;\n      // If it's more than 50, assume it's a mouse wheel => delta is roughly\n      // multiple of 10%. Otherwise a trackpad => delta is roughly multiple of 1%\n      if (MH.abs(percentage) >= 50) {\n        percentage /= 10;\n      }\n\n      thisDeltaZ = 1 + percentage / 100;\n\n      thisDeltaX = thisDeltaY = 0;\n      thisIntent = MC.S_ZOOM;\n    } else if (event.shiftKey && !thisDeltaX) {\n      // Holding Shift while turning wheel or swiping trackpad in vertically\n      // results in sideways scroll.\n      thisDeltaX = thisDeltaY;\n      thisDeltaY = 0;\n    }\n\n    deltaX += thisDeltaX;\n    deltaY += thisDeltaY;\n    deltaZ = addDeltaZ(deltaZ, thisDeltaZ);\n\n    if (!thisIntent) {\n      // not a relevant key\n    } else if (!intent) {\n      intent = thisIntent;\n    } else if (intent !== thisIntent) {\n      // mixture of zoom and scroll\n      intent = MC.S_UNKNOWN;\n    }\n  }\n\n  if (!intent) {\n    return false; // no relevant events\n  } else if (intent === MC.S_UNKNOWN) {\n    direction = MC.S_AMBIGUOUS;\n  } else if (intent === MC.S_ZOOM) {\n    direction = deltaZ > 1 ? MC.S_IN : deltaZ < 1 ? MC.S_OUT : MC.S_NONE;\n  } else {\n    direction = getVectorDirection(\n      [deltaX, deltaY],\n      options?.angleDiffThreshold,\n    );\n  }\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_WHEEL,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n      };\n};\n","/**\n * @module Watchers/GestureWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureIntent,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  addClasses,\n  removeClasses,\n  setNumericStyleJsVars,\n} from \"@lisn/utils/css-alter\";\nimport { isValidDirection } from \"@lisn/utils/directions\";\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { getDebouncedHandler } from \"@lisn/utils/tasks\";\n\nimport { addDeltaZ } from \"@lisn/utils/gesture\";\n\nimport {\n  isValidInputDevice,\n  isValidIntent,\n  GestureFragment,\n  DEVICES,\n  INTENTS,\n} from \"@lisn/utils/gesture\";\nimport { getKeyGestureFragment } from \"@lisn/utils/gesture-key\";\nimport { getPointerGestureFragment } from \"@lisn/utils/gesture-pointer\";\nimport { getTouchGestureFragment } from \"@lisn/utils/gesture-touch\";\nimport { getWheelGestureFragment } from \"@lisn/utils/gesture-wheel\";\nimport { logError } from \"@lisn/utils/log\";\nimport {\n  maxAbs,\n  toNonNegNum,\n  toPosNum,\n  toNumWithBounds,\n} from \"@lisn/utils/math\";\nimport { randId, objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { LoggerInterface } from \"@lisn/debug/types\";\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link GestureWatcher} listens for user gestures resulting from wheel,\n * pointer, touch or key input events.\n *\n * It supports scroll, zoom or drag type gestures.\n *\n * It manages registered callbacks globally and reuses event listeners for more\n * efficient performance.\n */\nexport class GestureWatcher {\n  /**\n   * Call the given handler whenever the user performs a gesture on the target\n   * matching the given options.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same event target, even if the options differ. If the handler has already\n   * been added for this target, either using {@link onGesture} or\n   * {@link trackGesture}, then it will be removed and re-added with the\n   * current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onGesture: (\n    target: EventTarget,\n    handler: OnGestureHandler,\n    options?: OnGestureOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offGesture: (target: EventTarget, handler: OnGestureHandler) => void;\n\n  /**\n   * This is the same as {@link onGesture} except that if `handler` is not\n   * given, then it defaults to an internal handler that updates a set of CSS\n   * variables on the target's style:\n   *\n   *   - `--lisn-js--<Intent>-delta-x`\n   *   - `--lisn-js--<Intent>-delta-y`\n   *   - `--lisn-js--<Intent>-delta-z`\n   *\n   * where and `<Intent>` is one of {@link GestureIntent} and the delta X, Y\n   * and Z are the _total summed up_ `deltaX`, `deltaY` and `deltaZ` since the\n   * callback was added, summed over all devices used (key, touch, etc).\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackGesture} or using\n   * {@link onGesture}, then it will be removed and re-added with the current\n   * options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly trackGesture: (\n    element: Element,\n    handler?: OnGestureHandler | null,\n    options?: OnGestureOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackGesture}.\n   */\n  readonly noTrackGesture: (\n    element: Element,\n    handler?: OnGestureHandler | null,\n  ) => void;\n\n  /**\n   * Creates a new instance of GestureWatcher with the given\n   * {@link GestureWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: GestureWatcherConfig) {\n    return new GestureWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of GestureWatcher with the given\n   * {@link GestureWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: GestureWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new GestureWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: GestureWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"GestureWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"GestureWatcher\", logAtCreation: config })\n      : null;\n\n    const allCallbacks = newXWeakMap<\n      EventTarget,\n      Map<\n        OnGestureHandler,\n        {\n          _callback: OnGestureCallback;\n          _wrapper: OnGestureHandlerWrapper;\n          _options: OnGestureOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    // For each target and event type, add only 1 global listener that will then\n    // manage the event queues and callbacks.\n    const allListeners = newXWeakMap<\n      EventTarget,\n      Map<GestureDevice, DeviceListeners>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const createCallback = (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      options: OnGestureOptionsInternal,\n    ): OnGestureCallback => {\n      MH.remove(allCallbacks.get(target)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler for\", options);\n      const { _callback, _wrapper } = getCallbackAndWrapper(\n        handler,\n        options,\n        logger,\n      );\n\n      _callback.onRemove(() => deleteHandler(target, handler, options));\n\n      allCallbacks.sGet(target).set(handler, {\n        _callback,\n        _wrapper,\n        _options: options,\n      });\n\n      return _callback;\n    };\n\n    // ----------\n\n    // async for consistency with other watchers and future compatibility in\n    // case of change needed\n    const setupOnGesture = async (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      userOptions: OnGestureOptions | undefined,\n    ) => {\n      const options = getOptions(config, userOptions ?? {});\n      createCallback(target, handler, options);\n\n      for (const device of options._devices ?? DEVICES) {\n        let listeners = allListeners.get(target)?.get(device);\n        if (listeners) {\n          debug: logger?.debug4(\n            `Listeners already added for ${device}`,\n            target,\n            options,\n          );\n        } else {\n          debug: logger?.debug4(\n            `Adding listeners for ${device}`,\n            target,\n            options,\n          );\n\n          listeners = setupListeners(target, device, options);\n          allListeners.sGet(target).set(device, listeners);\n        }\n\n        listeners._nCallbacks++;\n        if (options._preventDefault) {\n          listeners._nPreventDefault++;\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      options: OnGestureOptionsInternal,\n    ) => {\n      MH.deleteKey(allCallbacks.get(target), handler);\n      allCallbacks.prune(target);\n\n      for (const device of options._devices ?? DEVICES) {\n        const listeners = allListeners.get(target)?.get(device);\n        if (listeners) {\n          listeners._nCallbacks--;\n          if (options._preventDefault) {\n            listeners._nPreventDefault--;\n          }\n\n          if (!listeners._nCallbacks) {\n            debug: logger?.debug4(\n              `No more callbacks for target and device ${device}; removing listeners`,\n              target,\n            );\n\n            MH.deleteKey(allListeners.get(target), device);\n            listeners._remove();\n          }\n        }\n      }\n    };\n\n    // ----------\n\n    const invokeCallbacks = (\n      target: EventTarget,\n      device: GestureDevice,\n      event: Event,\n    ): boolean /* true if terminated */ => {\n      const preventDefault =\n        (allListeners.get(target)?.get(device)?._nPreventDefault ?? 0) > 0;\n\n      let isTerminated = false;\n      for (const { _wrapper } of allCallbacks.get(target)?.values() || []) {\n        isTerminated =\n          _wrapper(target, device, event, preventDefault) || isTerminated;\n      }\n\n      return isTerminated;\n    };\n\n    // ----------\n\n    const setupListeners = (\n      target: EventTarget,\n      device: GestureDevice,\n      options: OnGestureOptionsInternal,\n    ): DeviceListeners => {\n      const intents = options._intents;\n      let hasAddedTabIndex = false;\n      let hasPreventedSelect = false;\n\n      if (\n        device === MC.S_KEY &&\n        MH.isElement(target) &&\n        !MH.getTabIndex(target)\n      ) {\n        hasAddedTabIndex = true;\n        // enable element to receive keydown events\n        MH.setTabIndex(target);\n      } else if (MH.isElement(target) && device === MC.S_TOUCH) {\n        if (options._preventDefault) {\n          addClasses(target, MC.PREFIX_NO_TOUCH_ACTION);\n        }\n\n        if (!intents || MH.includes(intents, MC.S_DRAG)) {\n          hasPreventedSelect = true;\n          preventSelect(target);\n        }\n      }\n\n      const addOrRemoveListeners = (\n        action: \"add\" | \"remove\",\n        listener: EventListener,\n        eventTypes: readonly (keyof GlobalEventHandlersEventMap)[],\n      ) => {\n        const method =\n          action === \"add\" ? addEventListenerTo : removeEventListenerFrom;\n        for (const eventType of eventTypes) {\n          debug: logger?.debug8(`${action} listener for ${eventType}`, target);\n          method(target, eventType, listener, {\n            passive: false,\n            capture: true,\n          });\n        }\n      };\n\n      const addInitialListener = () =>\n        addOrRemoveListeners(\"add\", initialListener, initiatingEvents[device]);\n\n      const removeInitialListener = () =>\n        addOrRemoveListeners(\n          \"remove\",\n          initialListener,\n          initiatingEvents[device],\n        );\n\n      const addOngoingListener = () =>\n        addOrRemoveListeners(\"add\", processEvent, ongoingEvents[device]);\n\n      const removeOngoingListener = () =>\n        addOrRemoveListeners(\"remove\", processEvent, ongoingEvents[device]);\n\n      const initialListener = (event: Event) => {\n        processEvent(event);\n        removeInitialListener();\n        addOngoingListener();\n      };\n\n      const processEvent = (event: Event) => {\n        const isTerminated = invokeCallbacks(target, device, event);\n        if (isTerminated) {\n          removeOngoingListener();\n          addInitialListener();\n        }\n      };\n\n      addInitialListener();\n\n      return {\n        _nCallbacks: 0,\n        _nPreventDefault: 0,\n        _remove: () => {\n          if (MH.isElement(target)) {\n            if (hasAddedTabIndex) {\n              MH.unsetTabIndex(target);\n            }\n\n            removeClasses(target, MC.PREFIX_NO_TOUCH_ACTION);\n\n            if (hasPreventedSelect) {\n              undoPreventSelect(target);\n            }\n          }\n\n          removeOngoingListener();\n          removeInitialListener();\n        },\n      };\n    };\n\n    // ----------\n\n    this.trackGesture = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setGestureCssProps;\n        // initial values\n        for (const intent of INTENTS) {\n          setGestureCssProps(element, {\n            intent,\n            totalDeltaX: 0,\n            totalDeltaY: 0,\n            totalDeltaZ: 1,\n          });\n        }\n      }\n\n      return setupOnGesture(element, handler, options);\n    };\n\n    // ----------\n\n    this.noTrackGesture = (element, handler?) => {\n      if (!handler) {\n        handler = setGestureCssProps;\n\n        // delete the properties\n        for (const intent of INTENTS) {\n          setGestureCssProps(element, { intent });\n        }\n      }\n\n      this.offGesture(element, handler);\n    };\n\n    // ----------\n\n    this.onGesture = setupOnGesture;\n\n    // ----------\n\n    this.offGesture = (target, handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(target)?.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type GestureWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnGestureOptions.preventDefault | preventDefault} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.debounceWindow | debounceWindow} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 150\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.deltaThreshold | deltaThreshold} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 5\n   */\n  deltaThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.angleDiffThreshold | angleDiffThreshold} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * It does not make much sense to set this to 0.\n   *\n   * The value is in _degrees_, not radians.\n   *\n   * @defaultValue 35\n   */\n  angleDiffThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.naturalTouchScroll | naturalTouchScroll} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue true\n   */\n  naturalTouchScroll?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.touchDragHoldTime | touchDragHoldTime} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 500\n   */\n  touchDragHoldTime?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.touchDragNumFingers | touchDragNumFingers} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 1\n   */\n  touchDragNumFingers?: number;\n};\n\n/**\n * @interface\n */\nexport type OnGestureOptions = {\n  /**\n   * One or more device types to listen for. If not specified, then all devices\n   * are enabled.\n   *\n   * It can be a comma-separated list of {@link GestureDevice}s or an array of\n   * such devices.\n   *\n   * @defaultValue undefined\n   */\n  devices?: CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If given, callback will only be called if the gesture's direction is one\n   * of the given ones.\n   *\n   * It can be a comma-separated list of {@link Direction}s or an array of such\n   * directions.\n   *\n   * @defaultValue undefined\n   */\n  directions?: CommaSeparatedStr<Direction> | Direction[];\n\n  /**\n   * If given, callback will only be called if the gesture's intent is one\n   * of the given ones.\n   *\n   * It can be a comma-separated list of {@link GestureIntent}s or an\n   * array of such intents.\n   *\n   * @defaultValue undefined\n   */\n  intents?: CommaSeparatedStr<GestureIntent> | GestureIntent[];\n\n  /**\n   * Set minimum total delta X. Further reductions in delta X below this value\n   * will be ignored.\n   *\n   * The value is in pixels and can be negative.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaX?: number;\n\n  /**\n   * Set maximum total delta X. Further increase in delta X above this value\n   * will be ignored.\n   *\n   * The value is in pixels.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaX?: number;\n\n  /**\n   * Set minimum total delta Y. Further reductions in delta Y below this value\n   * will be ignored.\n   *\n   * The value is in pixels and can be negative.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaY?: number;\n\n  /**\n   * Set maximum total delta Y. Further increase in delta Y above this value\n   * will be ignored.\n   *\n   * The value is in pixels.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaY?: number;\n\n  /**\n   * Set minimum total delta Z. Further reductions in delta Z below this value\n   * will be ignored.\n   *\n   * The value is in percentage zoom, relative to 1, and can be less than 1 but\n   * must be > 0.1 which is a hard minimum.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaZ?: number;\n\n  /**\n   * Set maximum total delta Z. Further increase in delta Z above this value\n   * will be ignored.\n   *\n   * The value is in percentage zoom, relative to 1, and must be positive.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaZ?: number;\n\n  /**\n   * If true, the events of the gesture, e.g. relevant key presses or touch\n   * moves, etc, will have their default action prevented.\n   *\n   * **IMPORTANT:** For pointer gestures, then pointer/mouse down and click\n   * will be prevented.\n   *\n   * @defaultValue {@link GestureWatcherConfig.preventDefault}\n   */\n  preventDefault?: boolean;\n\n  /**\n   * If given, callback will be called at most once every `debounceWindow`\n   * milliseconds.\n   *\n   * Note that if both `debounceWindow` and `deltaThreshold` are set, _both_\n   * must be exceeded before callback is called.\n   *\n   * @defaultValue {@link GestureWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n\n  /**\n   * Callback will only be called when the gesture's accumulated delta, since\n   * the last time callback was called, exceeds `deltaThreshold`.\n   *\n   * At least one of the three deltas (X, Y or Z) must exceed this number (in\n   * absolute value). Note that when comparing `deltaZ`, it is multiplied by\n   * 100 since it represents fractions of 1 (100%). So supplying\n   * `deltaThreshold` of 10 means is equivalent to the following condition:\n   *\n   * ```\n   * abs(deltaX) >= 10 || abs(deltaY) >= 10 ||  abs(1 - deltaZ) >= 0.1\n   * ```\n   *\n   * Accumulation of the delta ends if the gesture is terminated, for example,\n   * in case of touch gestures, by a \"touchcancel\" event of by the final finger\n   * lifting off..\n   *\n   * Note that if both `debounceWindow` and `deltaThreshold` are set, _both_\n   * must be exceeded before callback is called.\n   *\n   * @defaultValue {@link GestureWatcherConfig.deltaThreshold}\n   */\n  deltaThreshold?: number;\n\n  /**\n   * See {@link Utils.getVectorDirection | getVectorDirection}.\n   *\n   * @defaultValue {@link GestureWatcherConfig.angleDiffThreshold}\n   */\n  angleDiffThreshold?: number;\n\n  /**\n   * Whether touch scroll gestures follow the natural direction: swipe up\n   * with scroll intent results in direction down and swipe down results in\n   * direction up.\n   *\n   * @defaultValue {@link GestureWatcherConfig.naturalTouchScroll}\n   */\n  naturalTouchScroll?: boolean;\n\n  /**\n   * If the user presses and holds on a touchscreen for at least the given\n   * amount of milliseconds before moving the finger(s), touch gestures other\n   * than pinch will be treated as a drag intent instead of scroll as long as\n   * the number of fingers touching the screen is {@link touchDragNumFingers}.\n   *\n   * Set to 0 in order to treat _all_ non-pinch touch gestures as drag.\n   *\n   * Set to a negative number in order to treat _all_ non-pinch touch gestures\n   * as scroll.\n   *\n   * @defaultValue {@link GestureWatcherConfig.touchDragHoldTime}\n   */\n  touchDragHoldTime?: number;\n\n  /**\n   * The number of fingers that could be considered a drag intent for touch\n   * gestures.\n   *\n   * @defaultValue {@link GestureWatcherConfig.touchDragHoldTime}\n   */\n  touchDragNumFingers?: number;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the event target that was passed to the {@link GestureWatcher.onGesture}\n *   call (equivalent to\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget | Event:currentTarget}).\n * - the {@link GestureData} that describes the gesture's progression since the\n *   last time the callback was called and since the callback was added.\n */\nexport type OnGestureHandlerArgs = [EventTarget, GestureData, Event[]];\nexport type OnGestureCallback = Callback<OnGestureHandlerArgs>;\nexport type OnGestureHandler =\n  | CallbackHandler<OnGestureHandlerArgs>\n  | OnGestureCallback;\n\nexport type GestureData = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n\n  /**\n   * Delta in the horizontal direction since the start of the gesture.\n   */\n  deltaX: number;\n\n  /**\n   * Delta in the vertical direction since the start of the gesture.\n   */\n  deltaY: number;\n\n  /**\n   * Relative fractional zoom in or out for zoom intents since the start of\n   * the gesture.\n   *\n   * For zoom in, `deltaZ` is always > 1, and for zoom out it is < 1.\n   *\n   * For non-zoom gestures it is 1.\n   */\n  deltaZ: number;\n\n  /**\n   * The time in milliseconds it took for the gesture. This will be the\n   * difference in timestamps between the first and last event that composed\n   * the gesture. For key and wheel gestures this could be 0, since 1 event is\n   * sufficient for them.\n   */\n  time: number;\n  // TODO totalTime, velocity (bound by max), averageVelocity (bound by max)\n\n  /**\n   * Delta in the horizontal direction since the callback was added.\n   */\n  totalDeltaX: number;\n\n  /**\n   * Delta in the vertical direction since the callback was added.\n   */\n  totalDeltaY: number;\n\n  /**\n   * Percentage (relative) zoom in or out for zoom intents since the callback\n   * was added.\n   */\n  totalDeltaZ: number;\n};\n\n// ----------------------------------------\n\ntype GestureWatcherConfigInternal = {\n  _preventDefault: boolean;\n  _debounceWindow: number;\n  _deltaThreshold: number;\n  _angleDiffThreshold: number;\n  _naturalTouchScroll: boolean;\n  _touchDragHoldTime: number;\n  _touchDragNumFingers: number;\n};\n\ntype OnGestureOptionsInternal = {\n  _devices: GestureDevice[] | null;\n  _directions: Direction[] | null;\n  _intents: GestureIntent[] | null;\n  _minTotalDeltaX: number | null;\n  _maxTotalDeltaX: number | null;\n  _minTotalDeltaY: number | null;\n  _maxTotalDeltaY: number | null;\n  _minTotalDeltaZ: number | null;\n  _maxTotalDeltaZ: number | null;\n  _preventDefault: boolean;\n  _debounceWindow: number;\n  _deltaThreshold: number;\n  _angleDiffThreshold: number;\n  _naturalTouchScroll: boolean;\n  _touchDragHoldTime: number;\n  _touchDragNumFingers: number;\n};\n\ntype OnGestureHandlerWrapper = (\n  _target: EventTarget,\n  _device: GestureDevice,\n  _event: Event,\n  _preventDefault: boolean,\n) => boolean;\n\n// Specific to a combination of target + device\ntype DeviceListeners = {\n  _nCallbacks: number; // total number of callbacks\n  _nPreventDefault: number; // total number wanting to prevent default action\n  _remove: () => void;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, GestureWatcher>();\n\nconst getConfig = (\n  config: GestureWatcherConfig | undefined,\n): GestureWatcherConfigInternal => {\n  config ??= {};\n  return {\n    _preventDefault: config.preventDefault ?? true,\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 150),\n    _deltaThreshold: toNonNegNum(config.deltaThreshold, 5),\n    _angleDiffThreshold: toPosNum(config.angleDiffThreshold, 35),\n    _naturalTouchScroll: config.naturalTouchScroll ?? true,\n    _touchDragHoldTime: config.touchDragHoldTime ?? 500,\n    _touchDragNumFingers: config.touchDragNumFingers ?? 1,\n  };\n};\n\nconst initiatingEvents: {\n  [D in GestureDevice]: readonly (keyof GlobalEventHandlersEventMap)[];\n} = {\n  key: [MC.S_KEYDOWN],\n  // If the browser doesn't support pointer events, then\n  // addEventListenerTo will transform it into mousedown\n  //\n  // We need to listen for click, since that occurs after a pointerup (i.e.\n  // after a gesure is terminated and the ongoing listeners removed), but it\n  // needs to have its default action prevented.\n  pointer: [MC.S_POINTERDOWN, MC.S_CLICK],\n  touch: [MC.S_TOUCHSTART],\n  wheel: [MC.S_WHEEL],\n} as const;\n\nconst ongoingEvents: {\n  [D in GestureDevice]: readonly (keyof GlobalEventHandlersEventMap)[];\n} = {\n  key: [MC.S_KEYDOWN],\n  pointer: [\n    // If the browser doesn't support point events, then\n    // addEventListenerTo will transform them into mouse*\n    MC.S_POINTERDOWN,\n    MC.S_POINTERUP, // would terminate\n    MC.S_POINTERMOVE,\n    MC.S_POINTERCANCEL, // would terminate\n    MC.S_CLICK, // would terminate; can be default-prevented\n  ],\n  touch: [MC.S_TOUCHSTART, MC.S_TOUCHEND, MC.S_TOUCHMOVE, MC.S_TOUCHCANCEL],\n  wheel: [MC.S_WHEEL],\n} as const;\n\nconst fragmentGetters: {\n  [D in GestureDevice]: (\n    events: Event[],\n    options: {\n      deltaThreshold?: number;\n      angleDiffThreshold?: number;\n      reverseScroll?: boolean;\n      dragHoldTime?: number;\n      dragNumFingers?: number;\n    },\n  ) => GestureFragment | null | false;\n} = {\n  [MC.S_KEY]: getKeyGestureFragment,\n  [MC.S_POINTER]: getPointerGestureFragment,\n  [MC.S_TOUCH]: getTouchGestureFragment,\n  [MC.S_WHEEL]: getWheelGestureFragment,\n};\n\nconst getOptions = (\n  config: GestureWatcherConfigInternal,\n  options: OnGestureOptions,\n): OnGestureOptionsInternal => {\n  const debounceWindow = toNonNegNum(\n    options[MC.S_DEBOUNCE_WINDOW],\n    config._debounceWindow, // watcher is never debounced, so apply default here\n  );\n  const deltaThreshold = toNonNegNum(\n    options.deltaThreshold,\n    config._deltaThreshold,\n  );\n\n  return {\n    _devices:\n      validateStrList(\"devices\", options.devices, isValidInputDevice) ?? null,\n    _directions:\n      validateStrList(\"directions\", options.directions, isValidDirection) ??\n      null,\n    _intents:\n      validateStrList(\"intents\", options.intents, isValidIntent) ?? null,\n    _minTotalDeltaX: options.minTotalDeltaX ?? null,\n    _maxTotalDeltaX: options.maxTotalDeltaX ?? null,\n    _minTotalDeltaY: options.minTotalDeltaY ?? null,\n    _maxTotalDeltaY: options.maxTotalDeltaY ?? null,\n    _minTotalDeltaZ: options.minTotalDeltaZ ?? null,\n    _maxTotalDeltaZ: options.maxTotalDeltaZ ?? null,\n    _preventDefault: options.preventDefault ?? config._preventDefault,\n    _debounceWindow: debounceWindow,\n    _deltaThreshold: deltaThreshold,\n    _angleDiffThreshold: toNonNegNum(\n      options.angleDiffThreshold,\n      config._angleDiffThreshold,\n    ),\n    _naturalTouchScroll:\n      options.naturalTouchScroll ?? config._naturalTouchScroll,\n    _touchDragHoldTime: options.touchDragHoldTime ?? config._touchDragHoldTime,\n    _touchDragNumFingers:\n      options.touchDragNumFingers ?? config._touchDragNumFingers,\n  };\n};\n\n// Since each callback needs to accumulate events during its debounce window\n// and until its threshold is exceeded, we use a wrapper around the\n// user-supplied handler to do that.\nconst getCallbackAndWrapper = (\n  handler: OnGestureHandler,\n  options: OnGestureOptionsInternal,\n  logger: LoggerInterface | null,\n): { _callback: OnGestureCallback; _wrapper: OnGestureHandlerWrapper } => {\n  let totalDeltaX = 0,\n    totalDeltaY = 0,\n    totalDeltaZ = 1;\n  // When there's a pointer down, drag then pointerup, since we prevent\n  // pointerdown default action, this results in a click event shortly\n  // afterwards even when there's been a movement of the mouse. We detect that\n  // and prevent this click.\n  let preventNextClick = false;\n\n  const directions = options._directions;\n  const intents = options._intents;\n  const minTotalDeltaX = options._minTotalDeltaX;\n  const maxTotalDeltaX = options._maxTotalDeltaX;\n  const minTotalDeltaY = options._minTotalDeltaY;\n  const maxTotalDeltaY = options._maxTotalDeltaY;\n  const minTotalDeltaZ = options._minTotalDeltaZ;\n  const maxTotalDeltaZ = options._maxTotalDeltaZ;\n  const deltaThreshold = options._deltaThreshold;\n  const angleDiffThreshold = options._angleDiffThreshold;\n  const reverseScroll = !options._naturalTouchScroll;\n  const dragHoldTime = options._touchDragHoldTime;\n  const dragNumFingers = options._touchDragNumFingers;\n\n  // The event queue is cleared when the threshold is exceeded AND the debounce\n  // window has passed. It's not necessary for the actual handler to be called\n  // then (e.g. if the direction or intent doesn't match, it won't be).\n  const eventQueue: Event[] = [];\n  const id = randId();\n\n  // Since handler could be a function or a callback (not callable), we wrap it\n  // so that in case it's already a callback, its removal will result in\n  // deleteHandler getting called. It is not debounced itself, instead there's\n  // a debounced wrapper that invokes it.\n  const callback = wrapCallback(handler);\n\n  // The debounced callback wrapper is what is debounced.\n  // It accumulates total deltas and checks if the conditions (of threshold,\n  // direction and intent) are satisfied before calling the real handler.\n  //\n  // Most importantly, since it is only called when the debounce window has\n  // expired it can clear the event queue if the threshold is also exceeded.\n  const debouncedWrapper = getDebouncedHandler(\n    options._debounceWindow,\n    (\n      target: EventTarget,\n      fragment: GestureFragment,\n      eventQueueCopy: Event[],\n    ) => {\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      const deltaX = fragment.deltaX;\n      const deltaY = fragment.deltaY;\n      const deltaZ = fragment.deltaZ;\n      const device = fragment.device;\n\n      if (\n        MH.round(maxAbs(deltaX, deltaY, (1 - deltaZ) * 100)) < deltaThreshold\n      ) {\n        debug: logger?.debug7(\n          `[${id}] Delta threshold not exceeded for callback`,\n        );\n        return;\n      }\n\n      debug: logger?.debug9(`[${id}] Done summing events for ${device}`);\n      clearEventQueue(device, eventQueue);\n\n      const newTotalDeltaX = toNumWithBounds(totalDeltaX + deltaX, {\n        min: minTotalDeltaX,\n        max: maxTotalDeltaX,\n      });\n\n      const newTotalDeltaY = toNumWithBounds(totalDeltaY + deltaY, {\n        min: minTotalDeltaY,\n        max: maxTotalDeltaY,\n      });\n\n      const newTotalDeltaZ = toNumWithBounds(addDeltaZ(totalDeltaZ, deltaZ), {\n        min: minTotalDeltaZ,\n        max: maxTotalDeltaZ,\n      });\n\n      if (\n        newTotalDeltaX === totalDeltaX &&\n        newTotalDeltaY === totalDeltaY &&\n        newTotalDeltaZ === totalDeltaZ\n      ) {\n        return;\n      }\n\n      totalDeltaX = newTotalDeltaX;\n      totalDeltaY = newTotalDeltaY;\n      totalDeltaZ = newTotalDeltaZ;\n\n      const direction = fragment.direction;\n      const intent = fragment.intent;\n      const time =\n        eventQueueCopy[MH.lengthOf(eventQueueCopy) - 1]?.timeStamp -\n          eventQueueCopy[0]?.timeStamp || 0;\n\n      const data = {\n        device,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n        time,\n        totalDeltaX,\n        totalDeltaY,\n        totalDeltaZ,\n      };\n\n      if (\n        direction !== MC.S_NONE &&\n        (!directions || MH.includes(directions, direction)) &&\n        (!intents || MH.includes(intents, intent))\n      ) {\n        callback.invoke(target, data, eventQueueCopy).catch(logError);\n      } else {\n        debug: logger?.debug7(\n          `[${id}] Directions or intents not matching for callback`,\n        );\n      }\n    },\n  );\n\n  // This wrapper is NOT debounced and adds the events to the queue, prevents\n  // default action if needed, and indicates whether the gesture is terminated.\n  const wrapper = (\n    target: EventTarget,\n    device: GestureDevice,\n    event: Event,\n    preventDefault: boolean,\n  ) => {\n    eventQueue.push(event);\n\n    const fragment = fragmentGetters[device](eventQueue, {\n      angleDiffThreshold,\n      deltaThreshold,\n      reverseScroll,\n      dragHoldTime,\n      dragNumFingers,\n    });\n\n    debug: logger?.debug8(\n      `[${id}] Got fragment for ${device} (${event.type})`,\n      fragment,\n      [...eventQueue].map((e) => e.type),\n    );\n\n    if (preventDefault) {\n      preventDefaultActionFor(\n        event,\n        !!fragment || (event.type === MC.S_CLICK && preventNextClick),\n      );\n    }\n\n    if (fragment === false) {\n      // not enough events in the queue, pass\n      debug: logger?.debug9(`[${id}] Not enough events for gesture ${device}`);\n      return false;\n    } else if (fragment === null) {\n      // consider the gesture terminated\n      clearEventQueue(device, eventQueue);\n      debug: logger?.debug9(`[${id}] Gesture for ${device} terminated`);\n      return true;\n    }\n\n    if (device === MC.S_POINTER) {\n      // If we're here, there's been a drag, expect a click immediately\n      // afterwards and prevent default action.\n      preventNextClick = true;\n      MH.setTimer(() => {\n        preventNextClick = false;\n      }, 10);\n    }\n\n    debouncedWrapper(\n      target,\n      fragment,\n      [...eventQueue], // copy\n    );\n\n    return false;\n  };\n\n  return { _callback: callback, _wrapper: wrapper };\n};\n\nconst clearEventQueue = (device: GestureDevice, queue: Event[]) => {\n  const keepLastEvent = device === MC.S_POINTER || device === MC.S_TOUCH;\n  queue.splice(0, MH.lengthOf(queue) - (keepLastEvent ? 1 : 0));\n};\n\nconst preventDefaultActionFor = (event: Event, isActualGesture: boolean) => {\n  const target = event.currentTarget;\n  const eventType = event.type;\n  const isPointerDown =\n    eventType === MC.S_POINTERDOWN || eventType === MC.S_MOUSEDOWN;\n\n  if (\n    eventType === MC.S_TOUCHMOVE ||\n    eventType === MC.S_WHEEL ||\n    ((eventType === MC.S_CLICK || eventType === MC.S_KEYDOWN) &&\n      isActualGesture) ||\n    (isPointerDown && (event as MouseEvent).buttons === 1)\n  ) {\n    MH.preventDefault(event);\n\n    if (isPointerDown && MH.isHTMLElement(target)) {\n      // Otherwise capturing key events won't work\n      target.focus({ preventScroll: true });\n    }\n  }\n};\n\nconst setGestureCssProps = (\n  target: EventTarget,\n  data: Partial<GestureData>,\n) => {\n  const intent = data.intent;\n\n  if (!MH.isElement(target) || !intent || intent === MC.S_UNKNOWN) {\n    return;\n  }\n\n  const prefix = `${intent}-`;\n\n  if (intent === MC.S_ZOOM) {\n    setNumericStyleJsVars(\n      target,\n      {\n        deltaZ: data.totalDeltaZ,\n      },\n      {\n        _prefix: prefix,\n        _numDecimal: 2,\n      },\n    ); // don't await here\n  } else {\n    setNumericStyleJsVars(\n      target,\n      {\n        deltaX: data.totalDeltaX,\n        deltaY: data.totalDeltaY,\n      },\n      {\n        _prefix: prefix,\n      },\n    ); // don't await here\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { sortedKeysByVal } from \"@lisn/utils/math\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  BitSpace,\n  newBitSpaces,\n  createBitSpace,\n} from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid device name.\n *\n * @category Validation\n */\nexport const isValidDevice = (device: string): device is Device =>\n  ORDERED_DEVICES.has(device);\n\n/**\n * Returns true if the given string is a valid aspect ratio name.\n *\n * @category Validation\n */\nexport const isValidAspectRatio = (\n  aspectRatio: string,\n): aspectRatio is AspectRatio => ORDERED_ASPECTR.has(aspectRatio);\n\n/**\n * Returns true if the given string is a valid device specification (including\n * `\"min <Device>\"`, etc).\n *\n * Returns false for \"\", although if you passed \"\" in\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} it would\n * accept it as specifying _all_ devices.\n *\n * @category Validation\n */\nexport const isValidDeviceList = (\n  device: string | string[],\n): device is DeviceSpec | Device[] =>\n  isValidForType(S_DEVICES, device, ORDERED_DEVICES);\n\n/**\n * Returns true if the given string is a valid aspect ratio specification\n * (including `\"min <AspectRatio>\"`, etc).\n *\n * Returns false for \"\", although if you passed \"\" in\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} it would\n * accept it as specifying _all_ aspect ratios.\n *\n * @category Validation\n */\nexport const isValidAspectRatioList = (\n  aspectR: string | string[],\n): aspectR is AspectRatioSpec | AspectRatio[] =>\n  isValidForType(S_ASPECTRS_CAMEL, aspectR, ORDERED_ASPECTR);\n\n/**\n * Returns a list of {@link Device}s that are not covered by the given device\n * specification. See\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for accepted\n * formats.\n *\n * Returns an empty for \"\" or for a specification that includes all devices.\n *\n * @category Layout\n */\nexport const getOtherDevices = (device: DeviceSpec | Device[]): Device[] =>\n  getOtherLayouts(S_DEVICES, device, ORDERED_DEVICES);\n\n/**\n * Returns a list of {@link AspectRatio}s that are not covered by the given\n * aspect ratio specification. See\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for accepted\n * formats.\n *\n * Returns an empty for \"\" or for a specification that includes all aspect\n * ratios.\n *\n * @category Layout\n */\nexport const getOtherAspectRatios = (\n  aspectR: AspectRatioSpec | AspectRatio[],\n): AspectRatio[] => getOtherLayouts(S_ASPECTRS_CAMEL, aspectR, ORDERED_ASPECTR);\n\n/**\n * @ignore\n * @internal\n */\nexport const getLayoutBitmask = (options?: {\n  devices?: DeviceSpec | Device[];\n  aspectRatios?: AspectRatioSpec | AspectRatio[];\n}): number => {\n  let layoutBitmask =\n    getBitmaskFromSpec(S_DEVICES, options?.devices, ORDERED_DEVICES) |\n    getBitmaskFromSpec(\n      S_ASPECTRS_CAMEL,\n      options?.aspectRatios,\n      ORDERED_ASPECTR,\n    );\n\n  if (!layoutBitmask) {\n    layoutBitmask = ORDERED_DEVICES.bitmask | ORDERED_ASPECTR.bitmask; // default: all\n  }\n\n  return layoutBitmask;\n};\n\n// In ascending order by width.\nconst ORDERED_DEVICE_NAMES = sortedKeysByVal(settings.deviceBreakpoints);\nconst ORDERED_ASPECTR_NAMES = sortedKeysByVal(settings.aspectRatioBreakpoints);\n\nconst bitSpaces = newBitSpaces();\n\n/**\n * @ignore\n * @internal\n */\nexport const ORDERED_DEVICES = createBitSpace(\n  bitSpaces,\n  ...ORDERED_DEVICE_NAMES,\n);\n\n/**\n * @ignore\n * @internal\n */\nexport const ORDERED_ASPECTR = createBitSpace(\n  bitSpaces,\n  ...ORDERED_ASPECTR_NAMES,\n);\n\n/**\n * @ignore\n * @internal\n */\nexport const NUM_LAYOUTS =\n  MH.lengthOf(ORDERED_DEVICE_NAMES) + MH.lengthOf(ORDERED_ASPECTR_NAMES);\n\n// --------------------\n\nconst S_DEVICES = \"devices\";\nconst S_ASPECTRS_CAMEL = \"aspectRatios\";\n\n// Don't use capture groups for old browser support\nconst LAYOUT_RANGE_REGEX = RegExp(\n  \"^ *(?:\" +\n    \"([a-z-]+) +to +([a-z-]+)|\" +\n    \"min +([a-z-]+)|\" +\n    \"max +([a-z-]+)\" +\n    \") *$\",\n);\n\nconst getLayoutsFromBitmask = <T extends Device | AspectRatio>(\n  keyName: string,\n  bitmask: number,\n  bitSpace: BitSpace<T>,\n): T[] => {\n  const layouts: T[] = [];\n  for (let bit = bitSpace.start; bit <= bitSpace.end; bit++) {\n    const value = 1 << bit;\n    if (bitmask & value) {\n      const name = bitSpace.nameOf(value);\n      if (name) {\n        layouts.push(name);\n      }\n    }\n  }\n\n  return layouts;\n};\n\nconst getOtherLayouts = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[],\n  bitSpace: BitSpace<T>,\n): T[] => {\n  const bitmask = getBitmaskFromSpec(keyName, spec, bitSpace);\n  if (!bitmask) {\n    return [];\n  }\n\n  const oppositeBitmask = bitSpace.bitmask & ~bitmask;\n  return getLayoutsFromBitmask(keyName, oppositeBitmask, bitSpace);\n};\n\nconst isValidForType = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[],\n  bitSpace: BitSpace<T>,\n): boolean => {\n  try {\n    const bitmask = getBitmaskFromSpec(keyName, spec, bitSpace);\n    return bitmask !== 0;\n  } catch (err) {\n    if (MH.isInstanceOf(err, LisnUsageError)) {\n      return false;\n    }\n    throw err;\n  }\n};\n\nconst getBitmaskFromSpec = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[] | undefined | null,\n  bitSpace: BitSpace<T>,\n): number => {\n  if (MH.isEmpty(spec)) {\n    return 0;\n  }\n  const singleKeyName = keyName.slice(0, -1);\n\n  if (MH.isString(spec)) {\n    const rangeMatch = spec.match(LAYOUT_RANGE_REGEX);\n    if (rangeMatch) {\n      const minLayout = rangeMatch[1] || rangeMatch[3];\n      const maxLayout = rangeMatch[2] || rangeMatch[4];\n\n      if (minLayout !== undefined && !bitSpace.has(minLayout)) {\n        throw MH.usageError(`Unknown ${singleKeyName} '${minLayout}'`);\n      }\n\n      if (maxLayout !== undefined && !bitSpace.has(maxLayout)) {\n        throw MH.usageError(`Unknown ${singleKeyName} '${maxLayout}'`);\n      }\n\n      return bitSpace.bitmaskFor(minLayout, maxLayout);\n    }\n  }\n\n  let bitmask = 0;\n  const layouts = validateStrList(keyName, spec, bitSpace.has);\n  if (layouts) {\n    for (const lt of layouts) {\n      bitmask |= bitSpace.bit[lt];\n    }\n  }\n\n  return bitmask;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  addClassesNow,\n  removeClassesNow,\n  getData,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { criticallyDamped } from \"@lisn/utils/math\";\n\n/**\n * @since v1.2.0\n *\n * @category Animations\n */\nexport type ElapsedTimes = {\n  total: number;\n  sinceLast: number;\n};\n\n/**\n * The callback is as an argument the {@link ElapsedTimes | elapsed times}:\n * - The total elapsed time in milliseconds since the start\n * - The elapsed time in milliseconds since the previous frame\n *\n * The first time this callback is called both of these will be 0 unless seed\n * values were provided.\n *\n * The callback must return `true` if it wants to animate again on the next\n * frame and `false` if done.\n *\n * @since v1.2.0\n *\n * @category Animations\n */\nexport type AnimationCallback = (elapsed: ElapsedTimes) => boolean;\n\n/**\n * Returns a promise that resolves at the next animation frame. Async/await\n * version of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/requestAnimationFrame | requestAnimationFrame}.\n *\n * @returns The timestamp gotten from `requestAnimationFrame`\n *\n * @category Animations\n */\nexport const waitForAnimationFrame = async () =>\n  MH.newPromise<number>((resolve) => {\n    MH.onAnimationFrame(resolve);\n  });\n\n/**\n * Calls the given callback on every animation frame.\n *\n * The returned Promise resolves when the callback is done (returns `false`).\n *\n * @param callback  See {@link AnimationCallback}.\n * @param elapsed   Seed values to use as the total elapsed and elapsed since\n *                  last. Otherwise it will use the timestamp of the first frame\n *                  as the start, which will result in those values being 0 the\n *                  first time.\n *\n * @since v1.2.0\n *\n * @category Animations\n */\nexport const onEveryAnimationFrame = async (\n  callback: AnimationCallback,\n  elapsed?: ElapsedTimes,\n) => {\n  for await (elapsed of newAnimationFrameIterator(elapsed)) {\n    const shouldRepeat = callback(elapsed);\n    if (!shouldRepeat) {\n      break;\n    }\n  }\n};\n\n/**\n * Generator version of {@link onEveryAnimationFrame}.\n *\n * Returns a new async iterator which yields the total elapsed time and elapsed\n * time since the last call on every animation frame.\n *\n * @example\n * ```javascript\n * for await (const elapsed of newAnimationFrameIterator()) {\n *   // ... do something\n *   if (done) break;\n * }\n * ```\n *\n * @since v1.2.0\n *\n * @category Animations\n */\nexport async function* newAnimationFrameIterator(\n  elapsed?: ElapsedTimes,\n): AsyncGenerator<ElapsedTimes, never> {\n  let startTime: number, previousTimeStamp: number;\n  const { total: totalSeed = 0, sinceLast: sinceLastSeed = 0 } = elapsed ?? {};\n\n  const step = async () => {\n    const timeStamp = await waitForAnimationFrame();\n    if (!startTime || !previousTimeStamp) {\n      // First time\n      startTime = timeStamp - totalSeed;\n      previousTimeStamp = timeStamp - sinceLastSeed;\n    }\n\n    const totalElapsed = timeStamp - startTime;\n    const elapsedSinceLast = timeStamp - previousTimeStamp;\n    previousTimeStamp = timeStamp;\n\n    return { total: totalElapsed, sinceLast: elapsedSinceLast };\n  };\n\n  while (true) {\n    yield step();\n  }\n}\n\n/**\n * Returns an animation iterator based on {@link criticallyDamped} that starts\n * at the given position `l`, with velocity `v = 0` and time `t = 0` and yields\n * the new position and velocity, and total time at every animation frame.\n *\n * @param [settings.lTarget]   The initial target position. Can be updated when\n *                             calling next().\n * @param [settings.lag]       See {@link criticallyDamped}.\n * @param [settings.l = 0]     The initial starting position.\n * @param [settings.precision] See {@link criticallyDamped}.\n *\n * @returns An iterator whose `next` method accepts an optional new `lTarget`.\n * The iterator yields an object containing successive values for:\n * - position (`l`)\n * - velocity (`v`)\n * - total time elapsed (`t`)\n *\n * @example\n * If you never need to update the target you can use a for await loop:\n *\n * ```javascript\n * const iterator = newCriticallyDampedAnimationIterator({\n *   l: 10,\n *   lTarget: 100,\n *   lag: 1500\n * });\n *\n * for await (const { l, v, t } of iterator) {\n *   console.log({ l, v, t });\n * }\n * ```\n *\n * @example\n * If you do need to update the target, then call `next` explicitly:\n *\n * ```javascript\n * const iterator = newCriticallyDampedAnimationIterator({\n *   l: 10,\n *   lTarget: 100,\n *   lag: 1500\n * });\n *\n * let { value: { l, v, t } } = await iterator.next();\n * ({ value: { l, v, t } } = await iterator.next()); // updated\n * ({ value: { l, v, t } } = await iterator.next(200)); // updated towards a new target\n * ```\n *\n * @since v1.2.0\n *\n * @category Animations\n */\nexport async function* newCriticallyDampedAnimationIterator(settings: {\n  lTarget: number;\n  lag: number;\n  l?: number;\n  precision?: number;\n}): AsyncGenerator<{ l: number; v: number; t: number }, never> {\n  let { l, lTarget } = settings;\n  const { lag, precision } = settings;\n  let v = 0,\n    t = 0,\n    dt = 0;\n\n  const next = async () => {\n    ({ l, v } = criticallyDamped({\n      lTarget,\n      dt,\n      lag,\n      l,\n      v,\n      precision,\n    }));\n    return { l, v, t };\n  };\n\n  for await ({ total: t, sinceLast: dt } of newAnimationFrameIterator()) {\n    if (dt === 0) {\n      continue;\n    }\n\n    lTarget = yield next() ?? lTarget;\n  }\n\n  throw null; // tell TypeScript it will never end\n}\n\n/**\n * @param webAnimationCallback This function is called for each\n *                             {@link https://developer.mozilla.org/en-US/docs/Web/API/Animation | Animation}\n *                             on the element. It {@link waitForMeasureTime}\n *                             before reading the animations.\n * @param legacyCallback       This function is called if the browser does not\n *                             support the Web Animations API. It is called\n *                             after {@link waitForMutateTime} so it can safely\n *                             modify styles.\n * @param realtime             If true, then it does not\n *                             {@link waitForMeasureTime} or\n *                             {@link waitForMutateTime} and runs\n *                             synchronously.\n *\n * @category Animations\n */\nexport const iterateAnimations = async (\n  element: Element,\n  webAnimationCallback: (animation: Animation) => void,\n  legacyCallback: (element: Element) => void,\n  realtime = false,\n) => {\n  /* istanbul ignore next */ // jsdom doesn't support Web Animations\n  if (\n    \"getAnimations\" in element &&\n    getData(element, MH.prefixName(\"test-legacy\")) === null\n  ) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    for (const animation of element.getAnimations()) {\n      webAnimationCallback(animation);\n    }\n\n    // Old browsers, no Animation API\n  } else {\n    if (!realtime) {\n      await waitForMutateTime();\n    }\n\n    legacyCallback(element);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const resetCssAnimationsNow = (element: Element) => {\n  addClassesNow(element, MC.PREFIX_ANIMATE_DISABLE); // cause it to reset\n  // If we remove the disable class immediately, then it will not have the\n  // effect to reset the animation, since the browser won't see any change in\n  // the classList at the start of the frame. So we ideally need to remove the\n  // disable class after the next paint. However, depending on the animation,\n  // and its state, disabling animation and waiting for the next animation\n  // frame may cause a visible glitch, so we need to force layout now.\n  /* eslint-disable-next-line @typescript-eslint/no-unused-expressions */\n  element[MC.S_CLIENT_WIDTH]; // forces layout\n\n  removeClassesNow(element, MC.PREFIX_ANIMATE_DISABLE);\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  ScrollDirection,\n  ScrollTarget,\n  TargetCoordinates,\n  CoordinateOffset,\n  ScrollPosition,\n  Offset,\n} from \"@lisn/globals/types\";\n\nimport {\n  newAnimationFrameIterator,\n  ElapsedTimes,\n} from \"@lisn/utils/animations\";\nimport { getComputedStylePropNow } from \"@lisn/utils/css-alter\";\nimport { SCROLL_DIRECTIONS } from \"@lisn/utils/directions\";\nimport {\n  waitForInteractive,\n  waitForElementOrInteractive,\n} from \"@lisn/utils/dom-events\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { maxAbs, criticallyDamped } from \"@lisn/utils/math\";\nimport { randId, formatAsString } from \"@lisn/utils/text\";\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * @category Scrolling\n */\nexport type ScrollAction = {\n  cancel: () => boolean;\n\n  /**\n   * Will reject if the scroll is cancelled.\n   */\n  waitFor: () => Promise<ScrollPosition>;\n};\n\n/**\n * @category Scrolling\n * @interface\n */\nexport type ScrollToOptions = {\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue If `document.body` is scrollable, will use that; otherwise `document.scrollingElement`\n   */\n  scrollable?: Element;\n\n  /**\n   * Offset the target coordinates by the given amount(s).\n   *\n   * E.g. if the final target coordinates are computed to be\n   * `{top: 100, left: 0}` and you specify offset as `{top: 10, left: 20}`, it\n   * will scroll to  `{top: 110, left: 20}`.\n   *\n   * @defaultValue undefined\n   */\n  offset?: CoordinateOffset;\n\n  // TODO maybe support fixed average velocity as an alternative to fixed duration?\n  /**\n   * The duration of the scroll animation in milliseconds. If not given, it is\n   * instant.\n   *\n   * @defaultValue 0\n   */\n  duration?: number;\n\n  /**\n   * Whether another request to us to scroll the same target can interrupt this\n   * scroll before it finishes.\n   *\n   * @defaultValue false\n   */\n  weCanInterrupt?: boolean;\n\n  /**\n   * Whether a user attempt to scroll the target can interrupt this before it\n   * finishes.\n   *\n   * @defaultValue false\n   */\n  userCanInterrupt?: boolean;\n\n  /**\n   * If the scrolling element is already at the given coordinates (or strictly\n   * speaking we allow for 5 pixels difference), then if `altTarget` is given,\n   * this will become the target to scroll to.\n   *\n   * @defaultValue undefined\n   */\n  altTarget?: TargetCoordinates | Element | string;\n\n  /**\n   * Offset the target coordinates by the given amount(s) when `altTarget` is used.\n   *\n   * See {@link ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined\n   */\n  altOffset?: CoordinateOffset;\n};\n\n// ----------\n\n/**\n * Returns true if the given element is scrollable in the given direction, or\n * in either direction (if `axis` is not given).\n *\n * It first checks whether the current scroll offset on the target along the\n * given axis is non-0, and if so returns true immediately. Otherwise it will\n * attempt to determine if it's scrollable using one of these methods\n * (controlled by `options.active`):\n * - passive check (default): Will examine `clientWidth/Height`,\n *   `scrollWidth/Height` as well as the computed `overflow` CSS property to try\n *   to determine if the target is scrollable. This is not 100% reliable but is\n *   safer than the active check\n * - active check: Will attempt to scroll the target by 1px and examine if the\n *   scroll offset had changed, then revert it back to 0. This is a more\n *   reliable check, however it can cause issues in certain contexts. In\n *   particular, if a scroll on the target had just been initiated (but it's\n *   scroll offset was still 0), the scroll may be cancelled. Never use that\n *   inside scroll-based handlers.\n *\n * **NOTE:** If the layout has been invalidated and not yet recalculated, this\n * will cause a forced layout, so always {@link waitForMeasureTime} before\n * calling this function when possible.\n *\n * @param [options.axis]    One of \"x\" or \"y\" for horizontal or vertical scroll\n *                          respectively. If not given, it checks both.\n * @param [options.active]  If true, then if the target's current scroll offset\n *                          is 0, it will attempt to scroll it rather than\n *                          looking at its overflow.\n * @param [options.noCache] By default the result of a check is cached for 1s\n *                          and if there's already a cached result for this\n *                          element, it is returned. Set this to true to disable\n *                          checking the cache and also saving the result into\n *                          the cache.\n *\n * @category Scrolling\n */\nexport const isScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n): boolean => {\n  const { axis, active, noCache } = options ?? {};\n  if (!axis) {\n    return (\n      isScrollable(element, { axis: \"y\", active, noCache }) ||\n      isScrollable(element, { axis: \"x\", active, noCache })\n    );\n  }\n\n  if (!noCache) {\n    const cachedResult = isScrollableCache.get(element)?.get(axis);\n    if (!MH.isNullish(cachedResult)) {\n      return cachedResult;\n    }\n  }\n\n  const offset = axis === \"x\" ? \"Left\" : \"Top\";\n  let result = false;\n\n  if (element[`scroll${offset}`]) {\n    result = true;\n  } else if (active) {\n    // Use scrollTo with explicit behavior set to instant instead of setting\n    // the scrollTop/Left properties since the latter doesn't work with\n    // scroll-behavior smooth.\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 1 });\n    const canScroll = element[`scroll${offset}`] > 0;\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 0 });\n    result = canScroll;\n  } else {\n    const dimension = axis === \"x\" ? \"Width\" : \"Height\";\n    const isDocScrollable = element === MH.getDocScrollingElement();\n\n    const hasOverflow =\n      element[`scroll${dimension}`] > element[`client${dimension}`];\n    const overflowProp = getComputedStylePropNow(element, \"overflow\");\n    const scrollingOverflows = [\n      MC.S_SCROLL,\n      MC.S_AUTO,\n      ...(isDocScrollable ? [MC.S_VISIBLE] : []),\n    ];\n\n    result = hasOverflow && MH.includes(scrollingOverflows, overflowProp);\n  }\n\n  if (!noCache) {\n    isScrollableCache.sGet(element).set(axis, result);\n    MH.setTimer(() => {\n      MH.deleteKey(isScrollableCache.get(element), axis);\n      isScrollableCache.prune(element);\n    }, IS_SCROLLABLE_CACHE_TIMEOUT);\n  }\n\n  return result;\n};\n\n/**\n * Returns the closest scrollable ancestor of the given element, _not including\n * it_.\n *\n * @param options See {@link isScrollable}\n *\n * @returns `null` if no scrollable ancestors are found.\n *\n * @category Scrolling\n */\nexport const getClosestScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n) => {\n  // Walk up the tree, starting at the element in question but excluding it.\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = MH.parentOf(ancestor))) {\n    if (isScrollable(ancestor, options)) {\n      return ancestor;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Returns the current {@link ScrollAction} if any.\n *\n * @category Scrolling\n */\nexport const getCurrentScrollAction = (\n  scrollable?: Element,\n): ScrollAction | null => {\n  scrollable = toScrollableOrDefault(scrollable);\n  const info = currentScrollInfos.get(scrollable);\n  if (info) {\n    return MH.copyObject(info._action);\n  }\n  return null;\n};\n\n/**\n * Scrolls the given scrollable element to the given `to` target.\n *\n * Returns `null` if there's an ongoing scroll that is not cancellable.\n *\n * Note that if `to` is an element or a selector, then it _must_ be a\n * descendant of the scrollable element.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *               If the target coordinates are invalid.\n *\n * @param to If this is an element, then its top-left position is used as\n *           the target coordinates. If it is a string, then it is treated\n *           as a selector for an element using `querySelector`.\n *\n * @returns `null` if there's an ongoing scroll that is not cancellable,\n * otherwise a {@link ScrollAction}.\n *\n * @category Scrolling\n */\nexport const scrollTo = (\n  to: TargetCoordinates | Element | string,\n  userOptions?: ScrollToOptions,\n): ScrollAction | null => {\n  const options = getOptions(to, userOptions);\n  const scrollable = options._scrollable;\n\n  // cancel current scroll action if any\n  const info = currentScrollInfos.get(scrollable);\n  if (info) {\n    if (!info._action.cancel()) {\n      // current scroll action is not cancellable by us\n      return null;\n    }\n  }\n\n  let isCancelled = false;\n\n  const cancelFn = options._weCanInterrupt\n    ? () => (isCancelled = true)\n    : () => false;\n\n  const scrollEvents = [\"touchmove\", \"wheel\"]; // don't bother with keyboard\n  let preventScrollHandler: EventListener | null = null;\n\n  if (options._userCanInterrupt) {\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(\n        scrollable,\n        eventType,\n        () => {\n          isCancelled = true;\n        },\n        { once: true },\n      );\n    }\n  } else {\n    preventScrollHandler = MH.preventDefault;\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(scrollable, eventType, preventScrollHandler, {\n        passive: false,\n      });\n    }\n  }\n\n  const thisInfo: ScrollInfo = {\n    _action: {\n      waitFor: () => scrollActionPromise,\n      cancel: cancelFn,\n    },\n  };\n\n  const cleanup = () => {\n    if (currentScrollInfos.get(scrollable)?._action === thisInfo._action) {\n      MH.deleteKey(currentScrollInfos, scrollable);\n    }\n\n    if (preventScrollHandler) {\n      for (const eventType of scrollEvents) {\n        removeEventListenerFrom(scrollable, eventType, preventScrollHandler, {\n          passive: false,\n        });\n      }\n    }\n  };\n\n  const scrollActionPromise = initiateScroll(options, () => isCancelled);\n  thisInfo._action.waitFor().then(cleanup).catch(cleanup);\n\n  updateCurrentScrollInfo(scrollable, thisInfo);\n  return thisInfo._action;\n};\n\n/**\n * Returns true if the given string is a valid scroll direction.\n *\n * @category Validation\n */\nexport const isValidScrollDirection = (\n  direction: string,\n): direction is ScrollDirection => MH.includes(SCROLL_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid scroll\n * directions.\n *\n * @category Validation\n */\nexport const isValidScrollDirectionList = (directions: string | string[]) =>\n  isValidStrList(directions, isValidScrollDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const mapScrollable = (original: Element, actualScrollable: Element) =>\n  mappedScrollables.set(original, actualScrollable);\n\n/**\n * @ignore\n * @internal\n */\nexport const unmapScrollable = (original: Element) =>\n  MH.deleteKey(mappedScrollables, original);\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientWidthNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetWidth -\n      getBorderWidth(element, MC.S_LEFT) -\n      getBorderWidth(element, MC.S_RIGHT)\n    : element[MC.S_CLIENT_WIDTH];\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientHeightNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetHeight -\n      getBorderWidth(element, MC.S_TOP) -\n      getBorderWidth(element, MC.S_BOTTOM)\n    : element[MC.S_CLIENT_HEIGHT];\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainContentElement = (): HTMLElement | null =>\n  mainContentElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainContentElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainContentElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainScrollableElement = (): HTMLElement | null =>\n  mainScrollableElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainScrollableElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainScrollableElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultScrollingElement = () => {\n  const body = MH.getBody();\n  return isScrollable(body) ? body : (MH.getDocScrollingElement() ?? body);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetScrollableElement = (\n  target: ScrollTarget | null | undefined,\n): Element | null => toScrollableOrMain(target, tryGetMainScrollableElement);\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchScrollableElement = async (\n  target: ScrollTarget | null | undefined,\n): Promise<Element> => toScrollableOrMain(target, fetchMainScrollableElement);\n\n// ----------------------------------------\n\ntype ScrollToOptionsInternal = {\n  _target: TargetCoordinates;\n  _offset: CoordinateOffset | null;\n  _altTarget: TargetCoordinates | null;\n  _altOffset: CoordinateOffset | null;\n  _scrollable: Element;\n  _duration: number;\n  _weCanInterrupt: boolean;\n  _userCanInterrupt: boolean;\n};\n\ntype Velocity = { top: number; left: number };\n\ntype ScrollInfo = {\n  _action: ScrollAction;\n  _position?: ScrollPosition;\n  _velocity?: Velocity;\n  _elapsed?: ElapsedTimes;\n};\n\nconst IS_SCROLLABLE_CACHE_TIMEOUT = 1000;\n\nconst isScrollableCache = newXMap<Element, Map<\"x\" | \"y\", boolean>>(() =>\n  MH.newMap(),\n);\n\nconst mappedScrollables = MH.newMap<Element, Element>();\n\nconst currentScrollInfos = MH.newMap<Element, ScrollInfo>();\n\nconst DIFF_THRESHOLD = 5;\nconst arePositionsDifferent = (\n  start: ScrollPosition,\n  end: ScrollPosition,\n  threshold = DIFF_THRESHOLD,\n) => maxAbs(start.top - end.top, start.left - end.left) > threshold;\n\n// must be called in \"measure time\"\nconst getBorderWidth = (element: Element, side: Offset) =>\n  MH.ceil(MH.parseFloat(getComputedStylePropNow(element, `border-${side}`)));\n\nconst isScrollableBodyInQuirks = (element: Element): element is HTMLElement =>\n  element === MH.getBody() && MH.getDocScrollingElement() === null;\n\nconst toScrollableOrMain = <R>(\n  target: ScrollTarget | null | undefined,\n  getMain: () => R,\n): Element | R => {\n  if (MH.isElement(target)) {\n    return mappedScrollables.get(target) ?? target;\n  }\n\n  if (!target || target === MH.getWindow() || target === MH.getDoc()) {\n    return getMain();\n  }\n\n  throw MH.usageError(\"Unsupported scroll target\");\n};\n\nconst toScrollableOrDefault = (scrollable: Element | undefined): Element =>\n  scrollable ?? getDefaultScrollingElement();\n\nconst getOptions = (\n  to: TargetCoordinates | Element | string,\n  options: ScrollToOptions | undefined,\n): ScrollToOptionsInternal => {\n  const scrollable = toScrollableOrDefault(options?.scrollable);\n  const target = getTargetCoordinates(scrollable, to);\n  const altTarget = options?.altTarget\n    ? getTargetCoordinates(scrollable, options?.altTarget)\n    : null;\n\n  return {\n    _target: target,\n    _offset: options?.offset ?? null,\n    _altTarget: altTarget,\n    _altOffset: options?.altOffset ?? null,\n    _scrollable: scrollable,\n    _duration: options?.duration ?? 0,\n    _weCanInterrupt: options?.weCanInterrupt ?? false,\n    _userCanInterrupt: options?.userCanInterrupt ?? false,\n  };\n};\n\nconst updateCurrentScrollInfo = (\n  scrollable: Element,\n  newInfo: Partial<ScrollInfo>,\n) => {\n  const existingScrollInfo = currentScrollInfos.get(scrollable);\n  const _action = newInfo._action ?? existingScrollInfo?._action;\n  if (_action) {\n    currentScrollInfos.set(\n      scrollable,\n      MH.merge(existingScrollInfo, newInfo, { _action }),\n    );\n  }\n};\n\nconst getTargetCoordinates = (\n  scrollable: Element,\n  target: TargetCoordinates | Element | string,\n): TargetCoordinates => {\n  const isDocScrollingElement = scrollable === MH.getDocScrollingElement();\n\n  if (MH.isElement(target)) {\n    if (scrollable === target || !scrollable.contains(target)) {\n      throw MH.usageError(\"Target must be a descendant of the scrollable one\");\n    }\n\n    return {\n      top: () =>\n        MH.getBoundingClientRect(target).top -\n        MH.getBoundingClientRect(scrollable).top +\n        (isDocScrollingElement ? 0 : scrollable[MC.S_SCROLL_TOP]),\n      left: () =>\n        MH.getBoundingClientRect(target).left -\n        MH.getBoundingClientRect(scrollable).left +\n        (isDocScrollingElement ? 0 : scrollable[MC.S_SCROLL_LEFT]),\n    };\n  }\n\n  if (MH.isString(target)) {\n    const targetEl = MH.docQuerySelector(target);\n    if (!targetEl) {\n      throw MH.usageError(`No match for '${target}'`);\n    }\n\n    return getTargetCoordinates(scrollable, targetEl);\n  }\n\n  if (!MH.isObject(target) || !(\"top\" in target || \"left\" in target)) {\n    throw MH.usageError(\"Invalid coordinates\");\n  }\n\n  return target;\n};\n\nconst getStartEndPosition = async (\n  options: ScrollToOptionsInternal,\n): Promise<{ _start: ScrollPosition; _end: ScrollPosition }> => {\n  await waitForMeasureTime();\n\n  const applyOffset = (\n    position: ScrollPosition,\n    offset: CoordinateOffset | null,\n  ) => {\n    position.top += offset?.top ?? 0;\n    position.left += offset?.left ?? 0;\n  };\n\n  const scrollable = options._scrollable;\n  const start = {\n    top: scrollable[MC.S_SCROLL_TOP],\n    left: scrollable[MC.S_SCROLL_LEFT],\n  };\n\n  let end = getEndPosition(scrollable, start, options._target);\n  applyOffset(end, options._offset);\n\n  if (!arePositionsDifferent(start, end) && options._altTarget) {\n    end = getEndPosition(scrollable, start, options._altTarget);\n    applyOffset(end, options._altOffset);\n  }\n\n  return { _start: start, _end: end };\n};\n\n// must be called in \"measure time\"\nconst getEndPosition = (\n  scrollable: Element,\n  startPosition: ScrollPosition,\n  targetCoordinates: TargetCoordinates,\n): ScrollPosition => {\n  // by default no change in scroll top or left\n  const endPosition = MH.copyObject(startPosition);\n\n  if (!MH.isNullish(targetCoordinates?.top)) {\n    if (MH.isFunction(targetCoordinates.top)) {\n      endPosition.top = targetCoordinates.top(scrollable);\n    } else {\n      endPosition.top = targetCoordinates.top;\n    }\n  }\n\n  if (!MH.isNullish(targetCoordinates?.left)) {\n    if (MH.isFunction(targetCoordinates.left)) {\n      endPosition.left = targetCoordinates.left(scrollable);\n    } else {\n      endPosition.left = targetCoordinates.left;\n    }\n  }\n\n  // Set boundaries\n  const scrollH = scrollable[MC.S_SCROLL_HEIGHT];\n  const scrollW = scrollable[MC.S_SCROLL_WIDTH];\n  const clientH = getClientHeightNow(scrollable);\n  const clientW = getClientWidthNow(scrollable);\n  endPosition.top = MH.min(scrollH - clientH, endPosition.top);\n  endPosition.top = MH.max(0, endPosition.top);\n\n  endPosition.left = MH.min(scrollW - clientW, endPosition.left);\n  endPosition.left = MH.max(0, endPosition.left);\n\n  return endPosition;\n};\n\nconst initiateScroll = async (\n  options: ScrollToOptionsInternal,\n  isCancelled: () => boolean,\n) => {\n  const position = await getStartEndPosition(options);\n  const duration = options._duration;\n  const scrollable = options._scrollable;\n  const existingScrollInfo = currentScrollInfos.get(scrollable);\n\n  const currentPosition = existingScrollInfo?._position ?? position._start;\n  const currentVelocity = existingScrollInfo?._velocity ?? {\n    [MC.S_TOP]: 0,\n    [MC.S_LEFT]: 0,\n  };\n  let elapsed = existingScrollInfo?._elapsed;\n\n  const logger = debug\n    ? new debug.Logger({\n        name: `scroll-${formatAsString(scrollable)}-${randId()}`,\n        logAtCreation: {\n          options,\n          position,\n          elapsed,\n          currentPosition: MH.copyObject(currentPosition),\n          currentVelocity: MH.copyObject(currentVelocity),\n        },\n      })\n    : null;\n\n  for await (elapsed of newAnimationFrameIterator(elapsed)) {\n    const deltaTime = elapsed.sinceLast;\n    if (deltaTime === 0) {\n      // First time\n      continue;\n    }\n\n    // Element.scrollTo equates to a measurement and needs to run after\n    // painting to avoid forced layout.\n    await waitForMeasureTime();\n\n    if (isCancelled()) {\n      // Reject the promise\n      logger?.debug8(\"Cancelled\");\n      throw currentPosition;\n    }\n\n    for (const s of [MC.S_LEFT, MC.S_TOP] as const) {\n      const { l, v } = criticallyDamped({\n        l: currentPosition[s],\n        v: currentVelocity[s],\n        lTarget: position._end[s],\n        dt: deltaTime,\n        lag: duration,\n      });\n\n      currentPosition[s] = l;\n      currentVelocity[s] = v;\n    }\n\n    updateCurrentScrollInfo(scrollable, {\n      _position: currentPosition,\n      _velocity: currentVelocity,\n      _elapsed: elapsed,\n    });\n\n    const isDone = !arePositionsDifferent(currentPosition, position._end, 0.5);\n    if (isDone) {\n      MH.assign(currentPosition, position._end); // use exact final coordinates\n    }\n\n    MH.elScrollTo(scrollable, currentPosition);\n\n    if (isDone) {\n      logger?.debug8(\"Done\");\n      break;\n    }\n  }\n\n  return currentPosition;\n};\n\n// ------------------------------\n\nlet mainContentElement: HTMLElement;\nlet mainScrollableElement: HTMLElement;\n\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      const mainScrollableElementSelector =\n        settings.mainScrollableElementSelector;\n\n      const contentElement = await waitForElementOrInteractive(() => {\n        return mainScrollableElementSelector\n          ? MH.docQuerySelector(mainScrollableElementSelector)\n          : MH.getBody(); // default if no selector\n      });\n\n      // defaults\n      mainScrollableElement = getDefaultScrollingElement();\n      mainContentElement = MH.getBody();\n\n      if (!contentElement) {\n        logError(\n          MH.usageError(\n            `No match for '${mainScrollableElementSelector}'. ` +\n              \"Scroll tracking/capturing may not work as intended.\",\n          ),\n        );\n      } else if (!MH.isHTMLElement(contentElement)) {\n        logWarn(\"mainScrollableElementSelector should point to an HTMLElement\");\n      } else if (contentElement !== mainContentElement) {\n        mainScrollableElement = mainContentElement = contentElement;\n      }\n    })();\n  }\n\n  return initPromise;\n};\n\n// Try to find the main scrollable/content elements asap so that tryGetMain*\n// can return them if called before fetchMain*\nif (MH.hasDOM()) {\n  waitForInteractive().then(init);\n}\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  addClasses,\n  addClassesNow,\n  setDataNow,\n  setStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, tryWrapContent } from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { camelToKebabCase, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  isScrollable,\n  tryGetMainContentElement,\n  fetchMainContentElement,\n} from \"@lisn/utils/scroll\";\n\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Overlays\n * @interface\n */\nexport type OverlayOptions = {\n  /**\n   * The parent element to insert the overlay into.\n   *\n   * If not given, then:\n   * - if the overlay is to have a `position: fixed`, then `document.body` is used\n   * - otherwise,\n   *   {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}\n   *   is used\n   */\n  parent?: HTMLElement;\n\n  /**\n   * If set, then it will be assigned as the DOM element ID for the new\n   * overlay.\n   *\n   * Furthermore, the new overlay will be created and will not be saved for\n   * future reuse.\n   *\n   * By default, if `id` is not given, the overlay will be saved, and if\n   * {@link createOverlay} is called again with the same `style`, `data` and\n   * parent, the previous overlay is returned.\n   */\n  id?: string;\n\n  /**\n   * Every entry in this object will be set on the `style` of the new overlay.\n   *\n   * **IMPORTANT:** By default overlays are positioned absolutely, so if you need\n   * another positioning, override this here by setting a `position` key in\n   * `style`. If position is either \"absolute\" (by default or explicitly set) or\n   * \"fixed\", and none of `top` or `bottom` is given, `top: 0` is set; and\n   * similarly, if none of `left` or `right` is given, `left: 0` is set.\n   */\n  style?: Record<string, string>;\n\n  /**\n   * Every entry in this object will be set as a data attribute on the new\n   * overlay.\n   *\n   * Keys can be either kebab-case or camelCase (they will be converted if\n   * needed). Do _not_ include the \"data-\" prefix which will be added\n   * automatically. E.g. both \"foo-bar\" and \"fooBar\" will result in\n   * \"data-foo-bar\" being set.\n   */\n  data?: Record<string, string>;\n};\n\n/**\n * Returns an existing overlay for this specification. If the overlay was just\n * created it may not yet be attached to the DOM.\n *\n * @category Overlays\n */\nexport const getOverlay = (userOptions?: OverlayOptions) => {\n  const options = tryGetOverlayOptions(userOptions);\n  if (!options) {\n    return null;\n  }\n\n  return overlays.get(options._parent)?.get(options._overlayKey) ?? null;\n};\n\n/**\n * Creates a new overlay, and inserts it into the DOM as soon as\n * {@link waitForMutateTime} resolves, or returns an already existing matching\n * overlay.\n *\n * **Note** that if {@link OverlayOptions.id} is set, a new overlay will\n * _always_ be created.\n *\n * @category Overlays\n */\nexport const createOverlay = async (userOptions?: OverlayOptions) => {\n  const options = await fetchOverlayOptions(userOptions);\n  const canReuse = !options._id;\n\n  if (canReuse) {\n    const existingOverlay = overlays\n      .get(options._parent)\n      ?.get(options._overlayKey);\n\n    if (existingOverlay) {\n      if (!MH.parentOf(existingOverlay)) {\n        // not yet inserted into the DOM, so wait until it is\n        await waitForMutateTime();\n      }\n      return existingOverlay;\n    }\n  }\n\n  // Create a new one\n  const overlay = createOnlyOverlay(options);\n  if (canReuse) {\n    // Save it now before awating, so that concurrent requests to create the\n    // same one use it\n    overlays.sGet(options._parent).set(options._overlayKey, overlay);\n  } else {\n    overlay.id = options._id;\n  }\n\n  const isPercentageHOffset = MH.includes(\n    (options._style.left || \"\") + (options._style.right || \"\"),\n    \"%\",\n  );\n\n  const isPercentageVOffset = MH.includes(\n    (options._style.top || \"\") + (options._style.bottom || \"\"),\n    \"%\",\n  );\n\n  let needsContentWrapping = false;\n  let parentEl = options._parent;\n  if (isPercentageHOffset || isPercentageVOffset) {\n    needsContentWrapping =\n      (isPercentageHOffset && isScrollable(parentEl, { axis: \"x\" })) ||\n      (isPercentageVOffset && isScrollable(parentEl, { axis: \"y\" }));\n  }\n\n  if (needsContentWrapping) {\n    // TODO Is it possible to unwrap the children when no longer needing this\n    // overlay? Probably not worth the effort. ViewWatcher doesn't remove old\n    // olverlays anyway.\n    parentEl = await tryWrapContent(parentEl, {\n      _classNames: [MC.PREFIX_WRAPPER, PREFIX_WRAPPER],\n      _required: true,\n      _requiredBy: \"percentage offset view trigger with scrolling root\",\n    });\n  }\n\n  if (options._style.position === MC.S_ABSOLUTE) {\n    // Ensure parent has non-static positioning\n    addClasses(parentEl, MH.prefixName(\"overlay-container\"));\n  }\n\n  await moveElement(overlay, { to: parentEl });\n\n  return overlay;\n};\n\n// ----------------------------------------\n\ntype OverlayOptionsInternal = {\n  _parent: HTMLElement;\n  _id: string;\n  _style: Record<string, string>;\n  _data: Record<string, string>;\n  _overlayKey: string;\n};\n\nconst PREFIX_WRAPPER = MH.prefixName(\"overlay-wrapper\");\n\nconst overlays = newXWeakMap<HTMLElement, Map<string, HTMLElement>>(() =>\n  MH.newMap(),\n);\n\nconst tryGetOverlayOptions = (\n  userOptions: OverlayOptions | undefined,\n): OverlayOptionsInternal | null => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = tryGetParent(userOptions?.parent, style.position);\n  if (!parentEl) {\n    return null;\n  }\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst fetchOverlayOptions = async (\n  userOptions: OverlayOptions | undefined,\n): Promise<OverlayOptionsInternal> => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = await fetchParent(userOptions?.parent, style.position);\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst getOverlayKey = (\n  style: Record<string, string>,\n  data: Record<string, string>,\n) => objToStrKey(style) + \"|\" + objToStrKey(data);\n\nconst getCssProperties = (style: Record<string, string> | undefined) => {\n  const finalCssProperties: Record<string, string> = MH.merge(\n    style,\n    { position: style?.position || MC.S_ABSOLUTE }, // default\n  );\n\n  if (\n    finalCssProperties.position === MC.S_ABSOLUTE ||\n    finalCssProperties.position === MC.S_FIXED\n  ) {\n    if (\n      MH.isEmpty(finalCssProperties.top) &&\n      MH.isEmpty(finalCssProperties.bottom)\n    ) {\n      finalCssProperties.top = \"0px\";\n    }\n\n    if (\n      MH.isEmpty(finalCssProperties.left) &&\n      MH.isEmpty(finalCssProperties.right)\n    ) {\n      finalCssProperties.left = \"0px\";\n    }\n  }\n\n  return finalCssProperties;\n};\n\nconst tryGetParent = (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED ? MH.getBody() : tryGetMainContentElement());\n\nconst fetchParent = async (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED\n    ? await waitForElement(MH.getBody)\n    : await fetchMainContentElement());\n\nconst createOnlyOverlay = (options: OverlayOptionsInternal) => {\n  const overlay = MH.createElement(\"div\");\n\n  addClassesNow(overlay, MH.prefixName(\"overlay\"));\n\n  const data = options._data;\n  for (const attr of MH.keysOf(data)) {\n    setDataNow(overlay, camelToKebabCase(attr), data[attr]);\n  }\n\n  const style = options._style;\n  for (const prop of MH.keysOf(style)) {\n    setStylePropNow(overlay, prop, style[prop]);\n  }\n\n  return overlay;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size } from \"@lisn/globals/types\";\n\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { createOverlay } from \"@lisn/utils/overlays\";\n\n/**\n * Returns the content box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @category Size measurements\n */\nexport const getEntryContentBox = (entry: ResizeObserverEntry): Size => {\n  const size = entry.contentBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  }\n\n  const rect = entry.contentRect;\n  return { [MC.S_WIDTH]: rect[MC.S_WIDTH], [MC.S_HEIGHT]: rect[MC.S_HEIGHT] };\n};\n\n/**\n * Returns the border box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @param fallbackToContent If the entry does not contain border box\n *                          measurements (depending on browser), then fall back\n *                          to using the content box size. Otherwise (by\n *                          default) will return `NaN` values for width and\n *                          height.\n *\n * @category Size measurements\n */\nexport const getEntryBorderBox = (\n  entry: ResizeObserverEntry,\n  fallbackToContent = false,\n): Size => {\n  const size = entry.borderBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  } else if (fallbackToContent) {\n    return getEntryContentBox(entry);\n  }\n\n  return { [MC.S_WIDTH]: NaN, [MC.S_HEIGHT]: NaN };\n};\n\n/**\n * Returns true if the given string is a valid box type.\n *\n * @category Validation\n */\nexport const isValidBox = (box: string): box is Box =>\n  MH.includes(ALL_BOXES, box);\n\n/**\n * Returns true if the given string is a valid dimension.\n *\n * @category Validation\n */\nexport const isValidDimension = (dimension: string): dimension is Dimension =>\n  MH.includes(ALL_DIMENSIONS, dimension);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetViewportOverlay = (): HTMLElement | null =>\n  viewportOverlay ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via SizeWatcher\n */\nexport const fetchViewportOverlay = async (): Promise<HTMLElement> => {\n  await init();\n\n  return viewportOverlay;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchViewportSize = async (realtime = false) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const root = MH.hasDOM()\n    ? (MH.getDocScrollingElement() ?? MH.getBody())\n    : null;\n\n  return {\n    [MC.S_WIDTH]: root?.clientWidth ?? 0,\n    [MC.S_HEIGHT]: root?.clientHeight ?? 0,\n  };\n};\n\n// ----------------------------------------\n\nconst S_INLINE_SIZE = \"inlineSize\";\nconst S_BLOCK_SIZE = \"blockSize\";\n\nconst ALL_BOXES: Box[] = [\"content\", \"border\"] as const;\nconst ALL_DIMENSIONS: Dimension[] = [MC.S_WIDTH, MC.S_HEIGHT] as const;\n\nconst getSizeFromInlineBlock = (\n  size: ResizeObserverSize | ReadonlyArray<ResizeObserverSize>,\n): Size => {\n  /* istanbul ignore else */\n  if (MH.isIterableObject(size)) {\n    return {\n      [MC.S_WIDTH]: size[0][S_INLINE_SIZE],\n      [MC.S_HEIGHT]: size[0][S_BLOCK_SIZE],\n    };\n  }\n  return {\n    // in some browsers inlineSize and blockSize are scalars and nor Arrays\n    [MC.S_WIDTH]: (size as { [S_INLINE_SIZE]: number })[S_INLINE_SIZE],\n    [MC.S_HEIGHT]: (size as { [S_BLOCK_SIZE]: number })[S_BLOCK_SIZE],\n  };\n};\n\n// ------------------------------\n\nlet viewportOverlay: HTMLElement;\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      viewportOverlay = await createOverlay({\n        id: MH.prefixName(\"vp-ovrl\"),\n        style: {\n          position: \"fixed\",\n          [MC.S_WIDTH]: \"100vw\",\n          [MC.S_HEIGHT]: \"100vh\",\n        },\n      });\n    })();\n  }\n\n  return initPromise;\n};\n","/**\n * @module Modules/XResizeObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logWarn, logError } from \"@lisn/utils/log\";\n\nimport debug from \"@lisn/debug/debug\";\n\nexport type XResizeObserverCallback = (\n  entries: ResizeObserverEntry[],\n  observer: XResizeObserver,\n) => void;\n\n/**\n * {@link XResizeObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}\n * - observes both border box and content box size changes\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n * - can debounce the callback\n */\nexport class XResizeObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe | ResizeObserver:observe} except it accepts multiple targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent resize.\n   *\n   * If the target is already being observed, nothing is done.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/unobserve | ResizeObserver:unobserve} except it accepts multiple targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/disconnect | ResizeObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * @param debounceWindow Debounce the handler so that it's called at most\n   *                       every `debounceWindow` ms.\n   */\n  constructor(callback: XResizeObserverCallback, debounceWindow?: number) {\n    const logger = debug ? new debug.Logger({ name: \"XResizeObserver\" }) : null;\n\n    // Keep the latest ResizeObserverEntry for each target during the\n    // debounceWindow. Short-lived, so ok to use a Map.\n    const buffer = MH.newMap<Element, ResizeObserverEntry>();\n\n    // Since internally we have two observers, one for border box, one for\n    // content box, we will get called initially twice for a target. So we keep\n    // a counter of 1 or 2 for how many more calls to ignore.\n    const targetsToSkip = MH.newWeakMap<Element, 1 | 2>();\n\n    let observedTargets = MH.newWeakSet<Element>();\n\n    debounceWindow ??= 0;\n\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      // Override entries for previous targets, but keep entries whose targets\n      // were not resized in this round\n      for (const entry of entries) {\n        const target = MH.targetOf(entry);\n        const skipNum = targetsToSkip.get(target);\n        if (skipNum !== undefined) {\n          if (skipNum === 2) {\n            // expect one more call\n            targetsToSkip.set(target, 1);\n          } else {\n            // done\n            /* istanbul ignore next */\n            if (skipNum !== 1) {\n              logError(MH.bugError(`# targetsToSkip is ${skipNum}`));\n            }\n            MH.deleteKey(targetsToSkip, target);\n          }\n\n          continue;\n        }\n\n        buffer.set(target, entry);\n      }\n\n      debug: logger?.debug9(\n        `Got ${entries.length} new entries. ` +\n          `Have ${buffer.size} unique-target entries`,\n        entries,\n      );\n\n      if (!timer && MH.sizeOf(buffer)) {\n        timer = MH.setTimer(() => {\n          if (MH.sizeOf(buffer)) {\n            callback(MH.arrayFrom(buffer.values()), this);\n            buffer.clear();\n          }\n\n          timer = null;\n        }, debounceWindow);\n      }\n    };\n\n    const borderObserver = MH.newResizeObserver(resizeHandler);\n    const contentObserver = MH.newResizeObserver(resizeHandler);\n    if (!borderObserver || !contentObserver) {\n      logWarn(\n        \"This browser does not support ResizeObserver. Some features won't work.\",\n      );\n    }\n\n    const observeTarget = (target: Element) => {\n      observedTargets.add(target);\n      borderObserver?.observe(target, { box: \"border-box\" });\n      contentObserver?.observe(target);\n    };\n\n    // --------------------\n\n    this.observe = (...targets) => {\n      debug: logger?.debug10(\"Observing targets\", targets);\n\n      for (const target of targets) {\n        observeTarget(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      debug: logger?.debug10(\"Observing targets (later)\", targets);\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.set(target, 2);\n        observeTarget(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      debug: logger?.debug10(\"Unobserving targets\", targets);\n\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        borderObserver?.unobserve(target);\n        contentObserver?.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      debug: logger?.debug10(\"Disconnecting\");\n      observedTargets = MH.newWeakSet();\n      borderObserver?.disconnect();\n      contentObserver?.disconnect();\n    };\n  }\n}\n","/**\n * @module Watchers/SizeWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size, SizeTarget } from \"@lisn/globals/types\";\n\nimport { setNumericStyleJsVars } from \"@lisn/utils/css-alter\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum } from \"@lisn/utils/math\";\nimport {\n  isValidBox,\n  isValidDimension,\n  getEntryBorderBox,\n  getEntryContentBox,\n  tryGetViewportOverlay,\n  fetchViewportOverlay,\n} from \"@lisn/utils/size\";\nimport { objToStrKey } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XResizeObserver } from \"@lisn/modules/x-resize-observer\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link SizeWatcher} monitors the size of a given target. It's built on top\n * of {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}.\n *\n * It manages registered callbacks globally and reuses ResizeObservers.\n *\n * Each instance of SizeWatcher manages up to two ResizeObservers: one\n * for content-box size changes and one for border-box size changes.\n */\nexport class SizeWatcher {\n  /**\n   * Call the given handler whenever the target's size changes.\n   *\n   * Unless {@link OnResizeOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest size data.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly onResize: (\n    handler: OnResizeHandler,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offResize: (handler: OnResizeHandler, target?: SizeTarget) => void;\n\n  /**\n   * This is the same as {@link onResize} except that if `handler` is not given,\n   * then it defaults to an  handler that updates a set of CSS variables on the\n   * target's style:\n   *\n   * - If {@link OnResizeOptions.target | options.target} is not given, or is\n   *   `window`, the following CSS variables are set on the root (`html`)\n   *   element and represent the viewport size:\n   *   - `--lisn-js--window-border-width`\n   *   - `--lisn-js--window-border-height`\n   *   - `--lisn-js--window-content-width`\n   *   - `--lisn-js--window-content-height`\n   *\n   * - Otherwise, the following variables are set on the target itself and\n   *   represent its visible size:\n   *   - `--lisn-js--border-width`\n   *   - `--lisn-js--border-height`\n   *   - `--lisn-js--content-width`\n   *   - `--lisn-js--content-height`\n   *\n   * If `target` is `document`, then it will use `document.documentElement`.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly trackSize: (\n    handler?: OnResizeHandler | null,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackSize}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackSize: (\n    handler?: OnResizeHandler | null,\n    target?: SizeTarget,\n  ) => void;\n\n  /**\n   * Get the size of the given target. It will get the size from a\n   * ResizeObserverEntry and so it's always delayed by one frame at least.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly fetchCurrentSize: (target?: SizeTarget) => Promise<SizeData>;\n\n  /**\n   * Creates a new instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: SizeWatcherConfig) {\n    return new SizeWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: SizeWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new SizeWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: SizeWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"SizeWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"SizeWatcher\", logAtCreation: config })\n      : null;\n\n    const allSizeData = MH.newWeakMap<Element, SizeData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnResizeHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    // Don't debounce the observer, only callbacks.\n    const xObserver = new XResizeObserver(resizeHandler);\n\n    // ----------\n\n    const fetchCurrentSize = async (\n      target: SizeTarget | undefined,\n    ): Promise<SizeData> => {\n      const element = await fetchElement(target);\n      const sizeData = allSizeData.get(element);\n      if (sizeData) {\n        return MH.copyObject(sizeData);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp ResizeObserver\n        const observer = MH.newResizeObserver((entries) => {\n          const sizeData = getSizeData(entries[0]);\n          observer?.disconnect();\n          resolve(sizeData); // no need to copy or save it\n        });\n\n        if (observer) {\n          observer.observe(element);\n        } else {\n          // Warning would have already been logged by XResizeObserver\n          resolve({\n            border: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n            content: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n          });\n        }\n      });\n    };\n\n    // ----------\n\n    const fetchOptions = async (\n      options: OnResizeOptions,\n    ): Promise<OnResizeOptionsInternal> => {\n      const box = options.box ?? null;\n      if (box && !isValidBox(box)) {\n        throw MH.usageError(`Unknown box type: '${box}'`);\n      }\n\n      const dimension = options.dimension ?? null;\n      if (dimension && !isValidDimension(dimension)) {\n        throw MH.usageError(`Unknown dimension: '${dimension}'`);\n      }\n\n      return {\n        _element: await fetchElement(MH.targetOf(options)),\n        _box: box,\n        _dimension: dimension,\n        // If threshold is 0, internally treat as 1 (pixel)\n        _threshold:\n          toNonNegNum(options.threshold, config._resizeThreshold) || 1,\n        _debounceWindow:\n          options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n      };\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = { _callback: callback, _options: options };\n      allCallbacks.sGet(element).set(handler, entry);\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnResize = async (\n      handler: OnResizeHandler,\n      userOptions: OnResizeOptions | undefined,\n    ) => {\n      const options = await fetchOptions(userOptions ?? {});\n      const element = options._element;\n\n      // Don't await for the size data before creating the callback so that\n      // setupOnResize and removeOnResize have the same \"timing\" and therefore\n      // calling onResize and offResize immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options);\n      const callback = entry._callback;\n      const sizeData = await fetchCurrentSize(element);\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = sizeData;\n      allSizeData.set(element, sizeData);\n\n      // Always use observeLater. This is because the initial call to callback\n      // shouldn't be debounced, and so we call it manually here, regardless if\n      // it's a new target or not. Therefore we don't want the observer to also\n      // call it in case it _is_ a new target.\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, sizeData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, sizeData);\n      }\n    };\n\n    // ----------\n\n    const removeOnResize = async (\n      handler: OnResizeHandler,\n      target: SizeTarget | undefined,\n    ) => {\n      const options = await fetchOptions({ target });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setSizeCssProps) {\n          // delete the properties\n          setSizeCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ) => {\n      const element = options._element;\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n        xObserver.unobserve(element);\n        MH.deleteKey(allSizeData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = (entry: ResizeObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      const latestData = getSizeData(entry);\n      allSizeData.set(element, latestData);\n\n      debug: logger?.debug9(\"New size data\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        const thresholdsExceeded = hasExceededThreshold(\n          entry._options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\"Threshold not exceeded\");\n          continue;\n        }\n\n        entry._data = latestData;\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentSize = fetchCurrentSize;\n\n    // ----------\n\n    this.trackSize = async (handler?, options?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      return setupOnResize(handler, options);\n    };\n\n    // ----------\n\n    this.noTrackSize = (handler?, target?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      removeOnResize(handler, target); // no need to await\n    };\n\n    // ----------\n\n    this.onResize = setupOnResize;\n\n    // ----------\n\n    this.offResize = (handler, target?) => {\n      removeOnResize(handler, target); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type SizeWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnResizeOptions.debounceWindow | debounceWindow} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnResizeOptions.threshold | threshold} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 50\n   */\n  resizeThreshold?: number;\n};\n\n/**\n * @interface\n */\nexport type OnResizeOptions = {\n  /**\n   * If it is not given, or is `null` or `window`, then it will track the size\n   * of the viewport (akin to `clientHeight` on `documentElement`).\n   *\n   * If it is `document`, then it will use `document.documentElement`.\n   *\n   * Other values of target must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  target?: SizeTarget;\n\n  /**\n   * Specifies whether to listen for changes in content box size or border box\n   * size.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  box?: Box;\n\n  /**\n   * Specifies whether to listen for changes in width or height.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  dimension?: Dimension;\n\n  /**\n   * If non-0, the handler will only be called when the target's size in the\n   * observed {@link OnResizeOptions.dimension} and {@link OnResizeOptions.box}\n   * type has changed at least `threshold` pixels since the last time the\n   * handler was called.\n   *\n   * Special case when `threshold` is 0 and at least one of\n   * {@link OnResizeOptions.dimension} or {@link OnResizeOptions.box} is given:\n   * if there's a resize event but the size in the observed dimensions/box\n   * types has not changed, the callback is _not_ called.\n   *\n   * @defaultValue {@link SizeWatcherConfig.resizeThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * @defaultValue {@link SizeWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * The handler is invoked with three arguments:\n *\n * - the element that has been resized: if the target you requested was the\n *   viewport, then this will be a fixed positioned overlay that tracks the\n *   size of the viewport\n * - the {@link SizeData} for the element\n */\nexport type OnResizeHandlerArgs = [Element, SizeData];\nexport type OnResizeCallback = Callback<OnResizeHandlerArgs>;\nexport type OnResizeHandler =\n  | CallbackHandler<OnResizeHandlerArgs>\n  | OnResizeCallback;\n\nexport type SizeData = Record<Box, Size>;\n\n// ----------------------------------------\n\ntype SizeWatcherConfigInternal = {\n  _debounceWindow: number;\n  _resizeThreshold: number;\n};\n\ntype OnResizeOptionsInternal = {\n  _element: Element;\n  _box: Box | null;\n  _dimension: Dimension | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnResizeCallback;\n  _options: OnResizeOptionsInternal;\n  _data?: SizeData;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, SizeWatcher>();\n\nconst getConfig = (\n  config: SizeWatcherConfig | undefined,\n): SizeWatcherConfigInternal => {\n  config ??= {};\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _resizeThreshold: toNonNegNum(config.resizeThreshold, 50) || 1,\n  };\n};\n\n// --------------------\n\nconst hasExceededThreshold = (\n  options: OnResizeOptionsInternal,\n  latestData: SizeData,\n  lastThresholdData: SizeData | undefined,\n): boolean => {\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  let box: Box, dim: Dimension;\n  for (box in latestData) {\n    if (options._box && options._box !== box) {\n      continue;\n    }\n\n    for (dim in latestData[box]) {\n      if (options._dimension && options._dimension !== dim) {\n        continue;\n      }\n\n      const diff = MH.abs(latestData[box][dim] - lastThresholdData[box][dim]);\n      if (diff >= options._threshold) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nconst getSizeData = (entry: ResizeObserverEntry): SizeData => {\n  const borderBox = getEntryBorderBox(entry, true);\n  const contentBox = getEntryContentBox(entry);\n\n  return {\n    border: borderBox,\n    content: contentBox,\n  };\n};\n\nconst setSizeCssProps = (\n  element: Element,\n  sizeData: SizeData | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetViewportOverlay()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"window-\";\n  }\n\n  const props = {\n    borderWidth: sizeData?.border[MC.S_WIDTH],\n    borderHeight: sizeData?.border[MC.S_HEIGHT],\n    contentWidth: sizeData?.content[MC.S_WIDTH],\n    contentHeight: sizeData?.content[MC.S_HEIGHT],\n  };\n  setNumericStyleJsVars(element, props, { _prefix: prefix }); // don't await here\n};\n\nconst fetchElement = async (\n  target: SizeTarget | undefined,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  }\n\n  if (!target || target === MH.getWindow()) {\n    return fetchViewportOverlay();\n  }\n\n  if (target === MH.getDoc()) {\n    return MH.getDocElement();\n  }\n\n  throw MH.usageError(\"Unsupported resize target\");\n};\n\nconst invokeCallback = (\n  callback: OnResizeCallback,\n  element: Element,\n  sizeData: SizeData,\n) => callback.invoke(element, MH.copyObject(sizeData)).catch(logError);\n","/**\n * @module Watchers/LayoutWatcher\n */\n\n// NOTES FOR DEVELOPERS\n//\n// For each layout (device or aspect ratio), we create an overlay that has a\n// a width that corresponds to the layout:\n//  - for device layouts, it's a fixed width in pixels, equal to the minimum\n//    width of the device\n//  - for aspect ratio layouts, the overlay has a width that's relative to\n//    the root's height, equal to the minimum width of the aspect ratio\n//\n// Then we observe each overlay with an IntersectionObserver whose root\n// is this Watcher's root and whose root margin is -100% from the left (i.e.\n// right-most edge of the root).\n//\n// If the root is null, i.e. the viewport, the overlays will have a \"fixed\"\n// position and be inserted in document.body. Otherwise, they'll be inserted\n// in the root element with an \"absolute\" position. The root element, if not\n// body must be positioned. It gets a default position of \"relative\" through\n// the class `.lisn-overlay-container`, which Overlays ensures it gets.\n//\n// If using custom root we track its size through SizeWatcher as the\n// aspectRatio overlays are relative to the height, and we can't rely on CSS\n// alone as the root may not have a fixed height through CSS.\n//\n// Whenever any overlay intersects the root, this means that the viewport\n// width is now equal to or narrower than the overlay.\n//\n// ~~~~ The current device or aspect ratio corresponds to the _widest_\n// ~~~~ overlay that does not intersect.\n//\n// For example:\n//\n// | mobile\n// ========| mobile-wide\n// ======================| tablet\n// =========================================| desktop\n//\n// _________________________________| viewport width\n//\n// Here, mobile, mobile-wide and tablet overlays are _not_ intersecting, only\n// desktop intersects. The device layout is therefore tablet.\n//\n// Therefore:\n// - have the layout bit spaces ordered from narrowest layout at lowest bit\n//   to widest layout at hightest bit\n// - keep a running bitmask of which overlays are not intersecting and update\n//   it each time there is an IntersectionObserverEntry.\n// - get the highest device or aspect ratio bit in that bitmask to find out\n//   the widest non-intersecting overlay\n//\n// For simplicity we create overlays also for layouts that have a 0-width.\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  Layout,\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport {\n  getLayoutBitmask,\n  NUM_LAYOUTS,\n  ORDERED_DEVICES,\n  ORDERED_ASPECTR,\n} from \"@lisn/utils/layout\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { omitKeys, copyExistingKeys } from \"@lisn/utils/misc\";\nimport { createOverlay } from \"@lisn/utils/overlays\";\nimport { objToStrKey } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link LayoutWatcher} listens for changes in either the width or aspect\n * ratio of the viewport or the given {@link LayoutWatcherConfig.root | root}.\n *\n * It does not track resize events; rather it's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class LayoutWatcher {\n  /**\n   * Call the given handler whenever the layout changes.\n   *\n   * Unless {@link OnLayoutOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current layout.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times, even if\n   * the options differ. If the handler has already been added, it is removed\n   * and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onLayout: (\n    handler: OnLayoutHandler,\n    options?: OnLayoutOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offLayout: (handler: OnLayoutHandler) => void;\n\n  /**\n   * Get the current screen layout.\n   */\n  readonly fetchCurrentLayout: () => Promise<LayoutData>;\n\n  /**\n   * Creates a new instance of LayoutWatcher with the given\n   * {@link LayoutWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: LayoutWatcherConfig) {\n    return new LayoutWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of LayoutWatcher with the given\n   * {@link LayoutWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: LayoutWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new LayoutWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: LayoutWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"LayoutWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"LayoutWatcher\", logAtCreation: config })\n      : null;\n    let nonIntersectingBitmask = 0;\n    let currentLayoutData: LayoutData = {\n      device: null,\n      aspectRatio: null,\n    };\n\n    const allCallbacks = MH.newMap<\n      OnLayoutHandler,\n      {\n        _callback: OnLayoutCallback;\n        _layoutBitmask: number;\n      }\n    >();\n\n    // ----------\n\n    const fetchCurrentLayout = async (): Promise<LayoutData> => {\n      await readyPromise;\n\n      return MH.copyObject(currentLayoutData);\n    };\n\n    // ----------\n\n    const setupOverlays = async () => {\n      const { root, overlays } = await createOverlays(\n        config._root,\n        config._deviceBreakpoints,\n        config._aspectRatioBreakpoints,\n      );\n\n      return MH.newPromise<void>((resolve) => {\n        let isReady = false;\n\n        const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n          const numEntries = MH.lengthOf(entries);\n          debug: logger?.debug9(`Got ${numEntries} new entries`, entries);\n\n          if (!isReady) {\n            /* istanbul ignore next */ // shouldn't happen\n            if (numEntries < NUM_LAYOUTS) {\n              logWarn(\n                MH.bugError(\n                  `Got IntersectionObserver ${numEntries}, ` +\n                    `expected >= ${NUM_LAYOUTS}`,\n                ),\n              );\n            }\n          }\n\n          for (const entry of entries) {\n            nonIntersectingBitmask = getNonIntersecting(\n              nonIntersectingBitmask,\n              entry,\n            );\n          }\n\n          // If this is the initial call from IntersectionObserver, skip callbacks.\n          // Those that have skipInitial: false would be called elsewhere, by\n          // setupOnLayout\n          processLayoutChange(!isReady);\n          isReady = true;\n          resolve(); // ready after IntersectionObserver has called us the 1st time\n        };\n\n        // ----------\n\n        const observeOptions = {\n          root,\n          rootMargin: \"5px 0% 5px -100%\",\n        };\n\n        const observer = MH.newIntersectionObserver(\n          intersectionHandler,\n          observeOptions,\n        );\n\n        for (const triggerOverlay of overlays) {\n          observer.observe(triggerOverlay);\n        }\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnLayoutHandler,\n      layoutBitmask: number,\n    ): OnLayoutCallback => {\n      MH.remove(allCallbacks.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", layoutBitmask);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler);\n      });\n\n      allCallbacks.set(handler, {\n        _callback: callback,\n        _layoutBitmask: layoutBitmask,\n      });\n      return callback;\n    };\n\n    const setupOnLayout = async (\n      handler: OnLayoutHandler,\n      options: OnLayoutOptions | undefined,\n    ) => {\n      const layoutBitmask = getLayoutBitmask(options);\n      const callback = createCallback(handler, layoutBitmask);\n\n      if (options?.skipInitial) {\n        return;\n      }\n\n      const layoutData = await fetchCurrentLayout();\n\n      if (\n        !callback.isRemoved() &&\n        changeMatches(layoutBitmask, layoutData, null)\n      ) {\n        debug: logger?.debug5(\"Calling initially with\", layoutData);\n        await invokeCallback(callback, layoutData);\n      }\n    };\n\n    const deleteHandler = (handler: OnLayoutHandler) => {\n      MH.deleteKey(allCallbacks, handler);\n      // no need to unobserve the overlays\n    };\n\n    const processLayoutChange = (skipCallbacks: boolean) => {\n      const deviceBit = MH.floor(\n        MH.log2(nonIntersectingBitmask & ORDERED_DEVICES.bitmask),\n      );\n\n      const aspectRatioBit = MH.floor(\n        MH.log2(nonIntersectingBitmask & ORDERED_ASPECTR.bitmask),\n      );\n\n      const layoutData: LayoutData = { device: null, aspectRatio: null };\n\n      // -Infinity means all of the overlays are intersecting, which would only\n      // happen if the narrowest overlay is not actually 0-width (which is not the\n      // case by default and against the recommended settings).\n      if (deviceBit !== -MC.INFINITY) {\n        layoutData.device = ORDERED_DEVICES.nameOf(1 << deviceBit);\n      }\n      if (aspectRatioBit !== -MC.INFINITY) {\n        layoutData.aspectRatio = ORDERED_ASPECTR.nameOf(1 << aspectRatioBit);\n      }\n\n      debug: logger?.debug8(\"New layout\", layoutData);\n\n      if (!skipCallbacks) {\n        for (const entry of allCallbacks.values()) {\n          const layoutBitmask = entry._layoutBitmask;\n          if (!changeMatches(layoutBitmask, layoutData, currentLayoutData)) {\n            debug: logger?.debug9(\n              `Layout change does not match bitmask ${layoutBitmask}`,\n            );\n            continue;\n          }\n\n          invokeCallback(entry._callback, layoutData);\n        }\n      }\n\n      currentLayoutData = layoutData;\n    };\n\n    const readyPromise = setupOverlays(); // no need to await\n\n    // ----------\n\n    this.fetchCurrentLayout = fetchCurrentLayout;\n\n    // ----------\n\n    this.onLayout = setupOnLayout;\n\n    // ----------\n\n    this.offLayout = (handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type LayoutWatcherConfig = {\n  /**\n   * The root element whose layout to watch. If not given or `null`, then the\n   * viewport layout is watched.\n   *\n   * @defaultValue null\n   */\n  root?: HTMLElement | null;\n\n  /**\n   * Use custom device breakpoints. Only known device names ({@link Device})\n   * are supported. If any are missing from the given dictionary, the value\n   * from {@link settings.deviceBreakpoints} is used.\n   *\n   * @defaultValue {@link settings.deviceBreakpoints}\n   */\n  deviceBreakpoints?: typeof settings.deviceBreakpoints;\n\n  /**\n   * Use custom aspect ratio breakpoints. Only known aspect ratio names\n   * ({@link AspectRatio}) are supported. If any are missing from the given\n   * dictionary, the value from {@link settings.aspectRatioBreakpoints} is\n   * used.\n   *\n   * @defaultValue {@link settings.aspectRatioBreakpoints}\n   */\n  aspectRatioBreakpoints?: typeof settings.aspectRatioBreakpoints;\n};\n\n/**\n * @interface\n */\nexport type OnLayoutOptions = {\n  /**\n   * Specifies a list of {@link Device}s to target for.\n   *\n   * The handler will only be called if there is a change of device to a device\n   * matching the specification.\n   *\n   * It can be:\n   * - \"min <Device>\": devices at least as wide as `<Device>`\n   * - \"max <Device>\": devices at most as wide as `<Device>`\n   * - \"<DeviceMin> to <DeviceMax>\": devices at least as wide as `<DeviceMin>`\n   *                                 and at most as wide as `<DeviceMax>`\n   * - a comma-separated list of device names\n   * - an array of device names\n   *\n   * **NOTE**\n   *\n   * If only one of {@link devices} or {@link aspectRatios} is specified, the\n   * handler will only be called for matching changes of device or aspect ratio\n   * respectively.\n   *\n   * If neither is specified, the handler will be called for any change of layout\n   * (device or aspect ratio).\n   *\n   * Also note that an empty array is treated the same as not given, or `null`.\n   *\n   * @defaultValue undefined\n   */\n  devices?: DeviceSpec | Device[];\n\n  /**\n   * Specifies a list of {@link AspectRatio}s to target for.\n   *\n   * The handler will only be called if there is a change of aspect ratio to\n   * an aspect ratios matching the specification.\n   *\n   * It can be:\n   * - \"min <AspectRatio>\": aspect ratios at least as wide as `<AspectRatio>`\n   * - \"max <AspectRatio>\": aspect ratios at most as wide as `<AspectRatio>`\n   * - \"<AspectRatioMin> to <AspectRatioMax>\": aspect ratios at least as wide\n   *                        as `<AspectRatioMin>` and at most as wide as\n   *                        `<AspectRatioMax>`\n   * - a comma-separated list of aspect ratio names\n   * - an array of aspect ratio names\n   *\n   * **NOTE**\n   *\n   * If only one of {@link devices} or {@link aspectRatios} is specified, the\n   * handler will only be called for matching changes of device or aspect ratio\n   * respectively.\n   *\n   * If neither is specified, the handler will be called for any change of layout\n   * (device or aspect ratio).\n   *\n   * @defaultValue undefined\n   */\n  aspectRatios?: AspectRatioSpec | AspectRatio[];\n\n  /**\n   * Do not call the handler until there's a future change of layout.\n   *\n   * By default, we call the handler (almost) immediately with the current\n   * layout data if it matches the given {@link devices} and {@link aspectRatios}.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with one argument:\n *\n * - the current {@link LayoutData}\n */\nexport type OnLayoutHandlerArgs = [LayoutData];\nexport type OnLayoutCallback = Callback<OnLayoutHandlerArgs>;\nexport type OnLayoutHandler =\n  | CallbackHandler<OnLayoutHandlerArgs>\n  | OnLayoutCallback;\n\n/**\n * Note that {@link device} or {@link aspectRatio} would only be null if the\n * viewport is narrower than the narrowest device/aspect ratio. This would only\n * happen if the narrowest device/aspect ratio is _not_ 0-width (which is not\n * the case with the default breakpoints and is against the recommendation for\n * setting breakpoints.\n */\nexport type LayoutData = {\n  device: Device | null;\n  aspectRatio: AspectRatio | null;\n};\n\n// ----------------------------------------\n\ntype LayoutWatcherConfigInternal = {\n  _root: HTMLElement | null;\n  _deviceBreakpoints: typeof settings.deviceBreakpoints;\n  _aspectRatioBreakpoints: typeof settings.aspectRatioBreakpoints;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<HTMLElement | null, Map<string, LayoutWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst VAR_BORDER_HEIGHT = MH.prefixCssJsVar(\"border-height\");\nconst PREFIX_DEVICE = MH.prefixName(\"device\");\nconst PREFIX_ASPECTR = MH.prefixName(\"aspect-ratio\");\n\nconst getConfig = (\n  config: LayoutWatcherConfig | undefined,\n): LayoutWatcherConfigInternal => {\n  const deviceBreakpoints = MH.copyObject(settings.deviceBreakpoints);\n  if (config?.deviceBreakpoints) {\n    copyExistingKeys(config.deviceBreakpoints, deviceBreakpoints);\n  }\n\n  const aspectRatioBreakpoints = MH.copyObject(settings.aspectRatioBreakpoints);\n\n  if (config?.aspectRatioBreakpoints) {\n    copyExistingKeys(config.aspectRatioBreakpoints, aspectRatioBreakpoints);\n  }\n\n  return {\n    _root: config?.root ?? null,\n    _deviceBreakpoints: deviceBreakpoints,\n    _aspectRatioBreakpoints: aspectRatioBreakpoints,\n  };\n};\n\n// ----------------------------------------\n\nconst createOverlays = async (\n  root: HTMLElement | null,\n  deviceBreakpoints: typeof settings.deviceBreakpoints,\n  aspectRatioBreakpoints: typeof settings.aspectRatioBreakpoints,\n) => {\n  const overlayPromises = [];\n\n  let overlayParent: HTMLElement;\n  if (root) {\n    overlayParent = root;\n  } else {\n    // Since modals remove the scrollbar on the body when active, the width of\n    // the body changes upon open/close of a modal, which would create\n    // glitching if it happens near a device breakpoint. So if the root is the\n    // viewport, we create a fixed positioned container to hold the overlays\n    // and set its width to be 100vw and use that as the root of\n    overlayParent = await createOverlay({\n      style: {\n        position: \"fixed\",\n        [MC.S_WIDTH]: \"100vw\",\n      },\n    });\n  }\n\n  let device: Device;\n  for (device in deviceBreakpoints) {\n    overlayPromises.push(\n      createOverlay({\n        parent: overlayParent,\n        style: {\n          position: \"absolute\",\n          [MC.S_WIDTH]: deviceBreakpoints[device] + \"px\",\n        },\n        data: {\n          [PREFIX_DEVICE]: device,\n        },\n      }),\n    );\n  }\n\n  const parentHeightCss = root ? `var(${VAR_BORDER_HEIGHT}, 0) * 1px` : \"100vh\";\n  if (root) {\n    SizeWatcher.reuse().trackSize(null, { target: root });\n  }\n\n  let aspectRatio: AspectRatio;\n  for (aspectRatio in aspectRatioBreakpoints) {\n    overlayPromises.push(\n      createOverlay({\n        parent: overlayParent,\n        style: {\n          position: \"absolute\",\n          [MC.S_WIDTH]:\n            `calc(${aspectRatioBreakpoints[aspectRatio]} ` +\n            `* ${parentHeightCss})`,\n        },\n        data: {\n          [PREFIX_ASPECTR]: aspectRatio,\n        },\n      }),\n    );\n  }\n\n  const overlays = await MH.promiseAll(overlayPromises);\n  return { root: overlayParent, overlays };\n};\n\nconst getOverlayLayout = (overlay: HTMLElement): Layout | null => {\n  const layout =\n    getData(overlay, PREFIX_DEVICE) || getData(overlay, PREFIX_ASPECTR);\n  /* istanbul ignore else */\n  if (layout && (ORDERED_DEVICES.has(layout) || ORDERED_ASPECTR.has(layout))) {\n    return layout;\n  } else {\n    // shouldn't happen\n    logError(MH.bugError(\"No device or aspectRatio data attribute\"));\n    return null;\n  }\n};\n\nconst changeMatches = (\n  layoutBitmask: number,\n  thisLayoutData: LayoutData,\n  prevLayoutData: LayoutData | undefined | null,\n): boolean => {\n  // True if the callback is interested in a change of device and there's a\n  // change of device and the new device is one of the ones it's interested in\n  // (or it's null, i.e. device is undefined).\n  // And the same for aspect ratios.\n\n  if (\n    prevLayoutData?.device !== thisLayoutData.device &&\n    (!thisLayoutData.device ||\n      ORDERED_DEVICES.bit[thisLayoutData.device] & layoutBitmask)\n  ) {\n    return true;\n  }\n\n  if (\n    prevLayoutData?.aspectRatio !== thisLayoutData.aspectRatio &&\n    (!thisLayoutData.aspectRatio ||\n      ORDERED_ASPECTR.bit[thisLayoutData.aspectRatio] & layoutBitmask)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nconst getNonIntersecting = (\n  nonIntersectingBitmask: number, // current\n  entry: IntersectionObserverEntry,\n): number => {\n  const target = MH.targetOf(entry);\n  /* istanbul ignore next */ // shouldn't happen\n  if (!MH.isHTMLElement(target)) {\n    logError(\n      MH.bugError(\n        `IntersectionObserver called us with '${MH.typeOrClassOf(target)}'`,\n      ),\n    );\n    return nonIntersectingBitmask;\n  }\n\n  const layout = getOverlayLayout(target);\n  let bit = 0;\n  if (!layout) {\n    // error already logged by getOverlayLayout\n  } else if (ORDERED_DEVICES.has(layout)) {\n    bit = ORDERED_DEVICES.bit[layout];\n  } else if (ORDERED_ASPECTR.has(layout)) {\n    bit = ORDERED_ASPECTR.bit[layout];\n  } else {\n    /* istanbul ignore next */ // shouldn't happen\n    logError(\n      MH.bugError(`Unknown device or aspectRatio data attribute: ${layout}`),\n    );\n  }\n\n  if (entry.isIntersecting) {\n    nonIntersectingBitmask &= ~bit;\n  } else {\n    nonIntersectingBitmask |= bit;\n  }\n\n  return nonIntersectingBitmask;\n};\n\nconst invokeCallback = (callback: OnLayoutCallback, layoutData: LayoutData) =>\n  callback.invoke(MH.copyObject(layoutData)).catch(logError);\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { PointerAction } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * Returns true if the given string is a valid pointer action.\n *\n * @category Validation\n */\nexport const isValidPointerAction = (action: string): action is PointerAction =>\n  MH.includes(POINTER_ACTIONS, action);\n\n/**\n * Returns true if the given string or array is a valid list of pointer\n * actions.\n *\n * @category Validation\n */\nexport const isValidPointerActionList = (actions: string | string[]) =>\n  isValidStrList(actions, isValidPointerAction, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const POINTER_ACTIONS: PointerAction[] = [\n  MC.S_CLICK,\n  MC.S_HOVER,\n  MC.S_PRESS,\n] as const;\n","/**\n * @module Watchers/PointerWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { PointerAction, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { isValidPointerAction, POINTER_ACTIONS } from \"@lisn/utils/pointer\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * {@link PointerWatcher} listens for simple pointer actions like clicks, press\n * and hold or hover.\n */\nexport class PointerWatcher {\n  /**\n   * Call the `startHandler` whenever the pointer action begins.\n   * Call the `endHandler` whenever the pointer action ends. If `endHandler` is\n   * not given, it defaults to `startHandler`.\n   *\n   * For an explanation of what \"begins\" and \"ends\" means for each supported\n   * action, see {@link OnPointerOptions.actions}.\n   *\n   * **IMPORTANT:** The same handlers can _not_ be added multiple times for the\n   * same event target, even if the options differ. If the handler has already\n   * been added for this target, then it will be removed and re-added with the\n   * current options.\n   */\n  readonly onPointer: (\n    target: EventTarget,\n    startHandler: OnPointerHandler,\n    endHandler?: OnPointerHandler,\n    options?: OnPointerOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes previously added handlers.\n   */\n  readonly offPointer: (\n    target: EventTarget,\n    startHandler: OnPointerHandler,\n    endHandler?: OnPointerHandler,\n  ) => void;\n\n  /**\n   * Creates a new instance of PointerWatcher with the given\n   * {@link PointerWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: PointerWatcherConfig) {\n    return new PointerWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of PointerWatcher with the given\n   * {@link PointerWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: PointerWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new PointerWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: PointerWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"PointerWatcher.create\");\n    }\n\n    // Keep this watcher super simple. The events we listen for don't fire at a\n    // high rate and it's unlikely for there to be many many callbacks for each\n    // target and event type, so don't bother with using a delegating listener,\n    // etc.\n\n    // Keep a map of callbacks so we can lookup the callback by the handler\n    // (and also to prevent duplicate handler for each target, for consistency\n    // with other watchers).\n    const allCallbacks = newXWeakMap<\n      EventTarget,\n      Map<OnPointerHandler, OnPointerCallback>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const createCallback = (\n      target: EventTarget,\n      handler: OnPointerHandler,\n    ): OnPointerCallback => {\n      MH.remove(allCallbacks.get(target)?.get(handler));\n\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        MH.deleteKey(allCallbacks.get(target), handler);\n      });\n\n      allCallbacks.sGet(target).set(handler, callback);\n      return callback;\n    };\n\n    // async for consistency with other watchers and future compatibility in\n    // case of change needed\n    const setupOnPointer = async (\n      target: EventTarget,\n      startHandler: OnPointerHandler,\n      endHandler: OnPointerHandler | undefined,\n      userOptions: OnPointerOptions | undefined,\n    ) => {\n      const options = getOptions(config, userOptions);\n      const startCallback = createCallback(target, startHandler);\n      const endCallback =\n        endHandler && endHandler !== startHandler\n          ? createCallback(target, endHandler)\n          : startCallback;\n\n      for (const action of options._actions) {\n        listenerSetupFn[action](target, startCallback, endCallback, options);\n      }\n    };\n\n    // ----------\n\n    this.onPointer = setupOnPointer;\n\n    // ----------\n\n    this.offPointer = (target, startHandler, endHandler?) => {\n      const entry = allCallbacks.get(target);\n      MH.remove(entry?.get(startHandler));\n      if (endHandler) {\n        MH.remove(entry?.get(endHandler));\n      }\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type PointerWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnPointerOptions.preventDefault | preventDefault} in calls to\n   * {@link PointerWatcher.onPointer}.\n   *\n   * @defaultValue false\n   */\n  preventDefault?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnPointerOptions.preventSelect | preventSelect} in calls to\n   * {@link PointerWatcher.onPointer}.\n   *\n   * @defaultValue true\n   */\n  preventSelect?: boolean;\n};\n\n/**\n * @interface\n */\nexport type OnPointerOptions = {\n  /**\n   * One or more of of \"click\", \"hover\" or \"press\". If not specified, then all\n   * actions are enabled.\n   *\n   * It can be a comma-separated list of {@link PointerAction}s or an array of\n   * such actions.\n   *\n   * For click actions, the start handler is called for every odd number of\n   * clicks (1st, 3rd, 5th, etc), and the end handler is called for every other\n   * click. It functions like a toggle.\n   *\n   * For hover and press actions, the start handler is called when the pointer\n   * enters or presses down on the target respectively, and the end handler is\n   * called when the pointer leaves or comes off the target respectively.\n   *\n   * Note that on touch screens, hover and press actions behave identically.\n   *\n   * @defaultValue undefined\n   */\n  actions?: CommaSeparatedStr<PointerAction> | PointerAction[];\n\n  /**\n   * If true, the events of the pointer actions, e.g. click, will have their\n   * default action prevented.\n   *\n   * @defaultValue {@link PointerWatcherConfig.preventDefault}\n   */\n  preventDefault?: boolean;\n\n  /**\n   * If true (default), then for press actions (and hover actions on touch\n   * screens) it will prevent starting a text selection.\n   *\n   * @defaultValue {@link PointerWatcherConfig.preventSelect}\n   */\n  preventSelect?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the event target that was passed to the {@link PointerWatcher.onPointer}\n *   call (equivalent to\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget | Event:currentTarget}).\n * - the {@link PointerActionData} describing the state of the action.\n */\nexport type OnPointerHandlerArgs = [EventTarget, PointerActionData, Event];\nexport type OnPointerCallback = Callback<OnPointerHandlerArgs>;\nexport type OnPointerHandler =\n  | CallbackHandler<OnPointerHandlerArgs>\n  | OnPointerCallback;\n\nexport type PointerActionData = {\n  action: PointerAction;\n  state: \"ON\" | \"OFF\";\n};\n\n// ----------------------------------------\n\ntype PointerWatcherConfigInternal = {\n  _preventDefault: boolean;\n  _preventSelect: boolean;\n};\n\ntype OnPointerOptionsInternal = {\n  _actions: PointerAction[];\n  _preventDefault: boolean;\n  _preventSelect: boolean;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, PointerWatcher>();\n\nconst getConfig = (\n  config: PointerWatcherConfig | undefined,\n): PointerWatcherConfigInternal => {\n  return {\n    _preventDefault: config?.preventDefault ?? false,\n    _preventSelect: config?.preventSelect ?? true,\n  };\n};\n\nconst getOptions = (\n  config: PointerWatcherConfigInternal,\n  options: OnPointerOptions | undefined,\n): OnPointerOptionsInternal => {\n  return {\n    _actions:\n      validateStrList(\"actions\", options?.actions, isValidPointerAction) ||\n      POINTER_ACTIONS,\n    _preventDefault: options?.preventDefault ?? config._preventDefault,\n    _preventSelect: options?.preventSelect ?? config._preventSelect,\n  };\n};\n\nconst setupClickListener = (\n  target: EventTarget,\n  startCallback: OnPointerCallback,\n  endCallback: OnPointerCallback,\n  options: OnPointerOptionsInternal,\n) => {\n  // false if next will start; true if next will end.\n  let toggleState = false;\n\n  const wrapper = (event: Event) => {\n    if (options._preventDefault) {\n      MH.preventDefault(event);\n    }\n\n    toggleState = !toggleState;\n\n    const data: PointerActionData = {\n      action: MC.S_CLICK,\n      state: toggleState ? \"ON\" : \"OFF\",\n    };\n\n    invokeCallback(\n      toggleState ? startCallback : endCallback,\n      target,\n      data,\n      event,\n    );\n  };\n\n  addEventListenerTo(target, MC.S_CLICK, wrapper);\n\n  const remove = () => removeEventListenerFrom(target, MC.S_CLICK, wrapper);\n\n  startCallback.onRemove(remove);\n  endCallback.onRemove(remove);\n};\n\nconst setupPointerListeners = (\n  action: typeof MC.S_HOVER | typeof MC.S_PRESS,\n  target: EventTarget,\n  startCallback: OnPointerCallback,\n  endCallback: OnPointerCallback,\n  options: OnPointerOptionsInternal,\n) => {\n  // If the browser doesn't support pointer events, then\n  // addEventListenerTo will transform these into mouse*\n  const startEventSuff = action === MC.S_HOVER ? \"enter\" : \"down\";\n  const endEventSuff = action === MC.S_HOVER ? \"leave\" : \"up\";\n  const startEvent = MC.S_POINTER + startEventSuff;\n  const endEvent = MC.S_POINTER + endEventSuff;\n\n  const wrapper = (event: Event, callback: OnPointerCallback) => {\n    if (options._preventDefault) {\n      MH.preventDefault(event);\n    }\n\n    const data: PointerActionData = {\n      action,\n      state:\n        MH.strReplace(event.type, /pointer|mouse/, \"\") === startEventSuff\n          ? \"ON\"\n          : \"OFF\",\n    };\n\n    invokeCallback(callback, target, data, event);\n  };\n  const startListener = (event: Event) => wrapper(event, startCallback);\n  const endListener = (event: Event) => wrapper(event, endCallback);\n\n  addEventListenerTo(target, startEvent, startListener);\n  addEventListenerTo(target, endEvent, endListener);\n\n  // On some touch screen devices pressing and holding will initiate select\n  // and result in touchend, so we prevent text select\n  if (options._preventSelect) {\n    preventSelect(target);\n  }\n\n  startCallback.onRemove(() => {\n    undoPreventSelect(target);\n    removeEventListenerFrom(target, startEvent, startListener);\n  });\n\n  endCallback.onRemove(() => {\n    undoPreventSelect(target);\n    removeEventListenerFrom(target, endEvent, endListener);\n  });\n};\n\nconst listenerSetupFn: {\n  [D in PointerAction]: (\n    target: EventTarget,\n    startCallback: OnPointerCallback,\n    endCallback: OnPointerCallback,\n    options: OnPointerOptionsInternal,\n  ) => void;\n} = {\n  click: setupClickListener,\n  hover: (...args) => setupPointerListeners(MC.S_HOVER, ...args),\n  press: (...args) => setupPointerListeners(MC.S_PRESS, ...args),\n} as const;\n\nconst invokeCallback = (\n  callback: OnPointerCallback,\n  target: EventTarget,\n  actionData: PointerActionData,\n  event: Event,\n) => callback.invoke(target, MH.copyObject(actionData), event).catch(logError);\n","/**\n * @module Watchers/ScrollWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { XYDirection, ScrollDirection, SizeTarget } from \"@lisn/globals/types\";\n\nimport {\n  ScrollTarget,\n  TargetCoordinate,\n  TargetCoordinates,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { setNumericStyleJsVars } from \"@lisn/utils/css-alter\";\nimport { getMaxDeltaDirection } from \"@lisn/utils/directions\";\nimport { moveElement, tryWrapContent } from \"@lisn/utils/dom-alter\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum, maxAbs } from \"@lisn/utils/math\";\nimport {\n  scrollTo,\n  getCurrentScrollAction,\n  getClientWidthNow,\n  getClientHeightNow,\n  tryGetMainScrollableElement,\n  fetchMainContentElement,\n  fetchMainScrollableElement,\n  fetchScrollableElement,\n  isValidScrollDirection,\n  ScrollAction,\n  ScrollToOptions,\n} from \"@lisn/utils/scroll\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { MutationOperation, DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n// re-export for convenience\nexport type { ScrollAction, ScrollToOptions } from \"@lisn/utils/scroll\";\n\n/**\n * {@link ScrollWatcher} listens for scroll events in any direction.\n *\n * It manages registered callbacks globally and reuses event listeners for more\n * efficient performance.\n */\nexport class ScrollWatcher {\n  /**\n   * Call the given handler whenever the given scrollable is scrolled.\n   *\n   * Unless {@link OnScrollOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest scroll data. If a scroll has\n   * not yet been observed on the scrollable and its `scrollTop` and\n   * `scrollLeft` are 0, then the direction is {@link Types.NoDirection} and\n   * the handler is only called if {@link Types.NoDirection} is part of the\n   * supplied {@link OnScrollOptions.directions | options.directions} (or\n   * {@link OnScrollOptions.directions | options.directions} is not given).\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking content size changes using\n   * {@link trackScroll}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onScroll: (\n    handler: OnScrollHandler,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly offScroll: (\n    handler: OnScrollHandler,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * This everything that {@link onScroll} does plus more:\n   *\n   * In addition to a scroll event, the handler is also called when either the\n   * offset size or scroll (content) size of the scrollable changes as that\n   * would affect its `scrollTopFraction` and `scrollLeftFraction` and possibly\n   * the `scrollTop` and `scrollLeft` as well.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates a set of CSS variables on the scrollable element's style:\n   *\n   * - If {@link OnScrollOptions.scrollable | options.scrollable} is not given,\n   *   or is `null`, `window` or `document`, the following CSS variables are\n   *   set on the root (`html`) element and represent the scroll of the\n   *   {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}:\n   *   - `--lisn-js--page-scroll-top`\n   *   - `--lisn-js--page-scroll-top-fraction`\n   *   - `--lisn-js--page-scroll-left`\n   *   - `--lisn-js--page-scroll-left-fraction`\n   *   - `--lisn-js--page-scroll-width`\n   *   - `--lisn-js--page-scroll-height`\n   *\n   * - Otherwise, the following variables are set on the scrollable itself,\n   *   and represent its scroll offset:\n   *   - `--lisn-js--scroll-top`\n   *   - `--lisn-js--scroll-top-fraction`\n   *   - `--lisn-js--scroll-left`\n   *   - `--lisn-js--scroll-left-fraction`\n   *   - `--lisn-js--scroll-width`\n   *   - `--lisn-js--scroll-height`\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly trackScroll: (\n    handler?: OnScrollHandler | null,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackScroll}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly noTrackScroll: (\n    handler?: OnScrollHandler | null,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * Get the scroll offset of the given scrollable. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                 this only when doing realtime scroll-based animations\n   *                 as it may cause a forced layout.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScroll: (\n    scrollable?: ScrollTarget,\n    realtime?: boolean,\n  ) => Promise<ScrollData>;\n\n  /**\n   * Scrolls the given scrollable element to in the given direction.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the direction or options are invalid.\n   */\n  readonly scroll: (\n    direction: XYDirection,\n    options?: ScrollOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Scrolls the given scrollable element to the given `to` scrollable.\n   *\n   * Returns `null` if there's an ongoing scroll that is not cancellable.\n   *\n   * Note that if `to` is an element or a selector, then it _must_ be a\n   * descendant of the scrollable element.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the \"to\" coordinates or options are invalid.\n   *\n   * @param to If this is an element, then its top-left position is used as\n   *           the target coordinates. If it is a string, then it is treated\n   *           as a selector for an element using `querySelector`.\n   * @param [options.scrollable]\n   *           If not given, it defaults to\n   *           {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}.\n   *\n   * @returns `null` if there's an ongoing scroll that is not cancellable,\n   * otherwise a {@link ScrollAction}.\n   */\n  readonly scrollTo: (\n    to: TargetCoordinates | Element | string,\n    options?: ScrollToOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Returns the current {@link ScrollAction} if any.\n   *\n   * @param scrollable If not given, it defaults to\n   *                   {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScrollAction: (\n    scrollable?: Element,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Cancels the ongoing scroll that's resulting from smooth scrolling\n   * triggered in the past. Does not interrupt or prevent further scrolling.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   *\n   * @param [options.immediate] If true, then it will not use\n   *                            {@link waitForMeasureTime} or\n   *                            {@link Utils.waitForMutateTime | waitForMutateTime}.\n   *                            Warning: this will likely result in forced layout.\n   */\n  readonly stopUserScrolling: (options?: {\n    scrollable?: ScrollTarget;\n    immediate?: boolean;\n  }) => Promise<void>;\n\n  /**\n   * Returns the element that holds the main page content. By default it's\n   * `document.body` but is overridden by\n   * {@link Settings.settings.mainScrollableElementSelector}.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainContentElement(): Promise<HTMLElement> {\n    return fetchMainContentElement();\n  }\n\n  /**\n   * Returns the scrollable element that holds the wrapper around the main page\n   * content. By default it's `document.scrollable` (unless `document.body` is\n   * actually scrollable, in which case it will be used) but it will be\n   * different if {@link Settings.settings.mainScrollableElementSelector} is set.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainScrollableElement(): Promise<HTMLElement> {\n    return fetchMainScrollableElement();\n  }\n\n  /**\n   * Creates a new instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: ScrollWatcherConfig) {\n    return new ScrollWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: ScrollWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new ScrollWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ScrollWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ScrollWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ScrollWatcher\", logAtCreation: config })\n      : null;\n\n    const allScrollData = MH.newWeakMap<Element, ScrollData>();\n\n    const activeListeners = MH.newWeakMap<\n      ScrollTarget,\n      { _nRealtime: number }\n    >();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnScrollHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const fetchCurrentScroll = async (\n      element: Element,\n      realtime = false,\n      isScrollEvent = false,\n    ): Promise<ScrollData> => {\n      // The scroll data can change event without a scroll event, e.g. by the\n      // element changing size, so always get the latest here.\n      const previousEventData = allScrollData.get(element);\n      const latestData = await fetchScrollData(\n        element,\n        previousEventData,\n        realtime,\n      );\n\n      // If there hasn't been a scroll event, use the old scroll direction\n      if (!isScrollEvent && previousEventData) {\n        latestData.direction = previousEventData.direction;\n      }\n      return latestData;\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n      trackType: TrackType,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      };\n      allCallbacks.sGet(element).set(handler, entry);\n\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnScroll = async (\n      handler: OnScrollHandler,\n      userOptions: OnScrollOptions | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, userOptions ?? {});\n      const element = options._element;\n\n      // Don't await for the scroll data before creating the callback so that\n      // setupOnScroll and removeOnScroll have the same \"timing\" and therefore\n      // calling onScroll and offScroll immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options, trackType);\n      const callback = entry._callback;\n\n      const eventTarget = options._eventTarget;\n      const scrollData = await fetchCurrentScroll(\n        element,\n        options._debounceWindow === 0,\n      );\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = scrollData;\n      allScrollData.set(element, scrollData);\n\n      if (trackType === TRACK_FULL) {\n        await setupSizeTrack(entry);\n      }\n\n      let listenerOptions = activeListeners.get(eventTarget);\n      if (!listenerOptions) {\n        debug: logger?.debug4(\"Adding scroll listener\", eventTarget);\n        listenerOptions = { _nRealtime: 0 };\n        activeListeners.set(eventTarget, listenerOptions);\n        // Don't debounce the scroll handler, only the callbacks.\n        addEventListenerTo(eventTarget, MC.S_SCROLL, scrollHandler);\n      }\n\n      if (options._debounceWindow === 0) {\n        listenerOptions._nRealtime++;\n      }\n\n      const directions = options._directions;\n      if (\n        !callback.isRemoved() &&\n        !userOptions?.skipInitial &&\n        directionMatches(directions, scrollData.direction)\n      ) {\n        debug: logger?.debug5(\"Calling initially with\", element, scrollData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, scrollData);\n      }\n    };\n\n    // ----------\n\n    const removeOnScroll = async (\n      handler: OnScrollHandler,\n      scrollable: ScrollTarget | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, { scrollable });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setScrollCssProps) {\n          // delete the properties\n          setScrollCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n    ) => {\n      const element = options._element;\n      const eventTarget = options._eventTarget;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      const listenerOptions = activeListeners.get(eventTarget);\n      if (listenerOptions && options._debounceWindow === 0) {\n        listenerOptions._nRealtime--;\n      }\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for scrollable; removing listener\",\n          element,\n        );\n\n        MH.deleteKey(allScrollData, element);\n        removeEventListenerFrom(eventTarget, MC.S_SCROLL, scrollHandler);\n        MH.deleteKey(activeListeners, eventTarget);\n        // TODO: Should we unwrap children if previously WE wrapped them?\n      }\n    };\n\n    // ----------\n\n    const setupSizeTrack = async (entry: CallbackEntry) => {\n      const options = entry._options;\n      const element = options._element;\n      const scrollCallback = entry._callback;\n      debug: logger?.debug8(\"Setting up size tracking\", element);\n\n      const doc = MH.getDoc();\n      const docScrollingElement = MH.getDocScrollingElement();\n\n      const resizeCallback = wrapCallback(async () => {\n        // Get the latest scroll data for the scrollable\n        // Currently, the resize callback is already delayed by a frame due to\n        // the SizeWatcher, so we don't need to treat this as realtime.\n        const latestData = await fetchCurrentScroll(element);\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n        } else if (!scrollCallback.isRemoved()) {\n          await invokeCallback(scrollCallback, element, latestData);\n        }\n      });\n\n      scrollCallback.onRemove(resizeCallback.remove);\n\n      // Don't use default instance as it has a high threshold.\n      const sizeWatcher = SizeWatcher.reuse();\n      const setupOnResize = (target?: SizeTarget) =>\n        sizeWatcher.onResize(resizeCallback, {\n          target,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          // TODO maybe accepts resizeThreshold option\n          threshold: options._threshold,\n        });\n\n      if (element === docScrollingElement) {\n        // In case we're tracking the main document scroll, then we only need to\n        // observe the viewport size and the size of the documentElement (which is\n        // the content size).\n\n        setupOnResize(); // viewport size\n        setupOnResize(doc); // content size\n\n        return;\n      }\n\n      // ResizeObserver only detects changes in offset width/height which is\n      // the visible size of the scrolling element, and that is not affected by the\n      // size of its content.\n      // But we also need to detect changes in the scroll width/height which is\n      // the size of the content.\n      // We also need to keep track of elements being added to the scrollable element.\n\n      const observedElements = MH.newSet<Element>([element]);\n\n      // Observe the scrolling element\n      setupOnResize(element);\n\n      // And also its children (if possible, a single wrapper around them\n      const wrapper = await tryWrapContent(element, {\n        _classNames: [MC.PREFIX_WRAPPER, PREFIX_WRAPPER],\n      });\n      if (wrapper) {\n        setupOnResize(wrapper);\n        observedElements.add(wrapper);\n\n        //\n      } else {\n        for (const child of MH.childrenOf(element)) {\n          setupOnResize(child);\n          observedElements.add(child);\n        }\n      }\n\n      // Watch for newly added elements\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      const onAddedCallback = wrapCallback((operation: MutationOperation) => {\n        const child = MH.currentTargetOf(operation);\n        // If we've just added the wrapper, it will be in DOMWatcher's queue,\n        // so check.\n        if (child !== wrapper) {\n          if (wrapper) {\n            // Move this child into the wrapper. If this results in change of size\n            // for wrapper, SizeWatcher will call us.\n            moveElement(child, { to: wrapper, ignoreMove: true });\n          } else {\n            // Track the size of this child.\n            // Don't skip initial, call the callback now\n            setupOnResize(child);\n            observedElements.add(child);\n          }\n        }\n      });\n\n      domWatcher.onMutation(onAddedCallback, { categories: [MC.S_ADDED] });\n      resizeCallback.onRemove(onAddedCallback.remove);\n    };\n\n    // ----------\n\n    const scrollHandler = async (event: Event) => {\n      // We cannot use event.currentTarget because scrollHandler is called inside\n      // a setTimeout so by that time, currentTarget is null or something else.\n      //\n      // However, target and currentTarget only differ when the event is in the\n      // bubbling or capturing phase. Because\n      //\n      // - the scroll event only bubbles when fired on document, and (it only\n      //   bubbles up to window)\n      // - and we never attach the listener to the capturing phase\n      // - and we always use document instead of window to listen for scroll on\n      //   document\n      //\n      // then event.target suffices.\n      const scrollable = MH.targetOf(event);\n      /* istanbul ignore next */\n      if (!scrollable || !(MH.isElement(scrollable) || MH.isDoc(scrollable))) {\n        return;\n      }\n\n      const element = await fetchScrollableElement(scrollable);\n      const realtime = (activeListeners.get(scrollable)?._nRealtime ?? 0) > 0;\n      const latestData = await fetchCurrentScroll(element, realtime, true);\n      allScrollData.set(element, latestData);\n\n      debug: logger?.debug9(\"Scroll event\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        // Consider the direction since the last scroll event and not the\n        // direction based on the largest delta the last time the callback\n        // was called.\n        const options = entry._options;\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n          continue;\n        }\n\n        // If threshold has been exceeded, always update the latest data for\n        // this callback.\n        entry._data = latestData;\n\n        if (!directionMatches(options._directions, latestData.direction)) {\n          debug: logger?.debug9(\n            \"Direction does not match\",\n            options,\n            latestData,\n          );\n          continue;\n        }\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentScroll = (scrollable?, realtime?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        fetchCurrentScroll(element, realtime),\n      );\n\n    // ----------\n\n    this.scroll = (direction, options) => {\n      if (!isValidScrollDirection(direction)) {\n        throw MH.usageError(`Unknown scroll direction: '${direction}'`);\n      }\n\n      const isVertical = direction === MC.S_UP || direction === MC.S_DOWN;\n      const sign = direction === MC.S_UP || direction === MC.S_LEFT ? -1 : 1;\n      let targetCoordinate: TargetCoordinate;\n\n      const amount = options?.amount ?? 100;\n      const asFractionOf = options?.asFractionOf;\n\n      if (asFractionOf === \"visible\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * getClientHeightNow(el)) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * getClientWidthNow(el)) / 100;\n\n        //\n      } else if (asFractionOf === \"content\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * el[MC.S_SCROLL_HEIGHT]) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * el[MC.S_SCROLL_WIDTH]) / 100;\n\n        //\n      } else if (asFractionOf !== undefined && asFractionOf !== \"pixel\") {\n        throw MH.usageError(\n          `Unknown 'asFractionOf' keyword: '${asFractionOf}'`,\n        );\n\n        //\n      } else {\n        targetCoordinate = isVertical\n          ? (el) => el[MC.S_SCROLL_TOP] + sign * amount\n          : (el) => el[MC.S_SCROLL_LEFT] + sign * amount;\n      }\n\n      const target = isVertical\n        ? { top: targetCoordinate }\n        : { left: targetCoordinate };\n\n      return this.scrollTo(target, options);\n    };\n\n    // ----------\n\n    this.scrollTo = async (to, options) =>\n      scrollTo(\n        to,\n        MH.merge(options, {\n          duration: options?.duration ?? config._scrollDuration, // default\n          scrollable: await fetchScrollableElement(options?.scrollable), // override\n        }),\n      );\n\n    // ----------\n\n    this.fetchCurrentScrollAction = (scrollable?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        getCurrentScrollAction(element),\n      );\n\n    // ----------\n\n    this.stopUserScrolling = async (options) => {\n      const element = await fetchScrollableElement(options?.scrollable);\n      const stopScroll = () =>\n        MH.elScrollTo(element, {\n          top: element[MC.S_SCROLL_TOP],\n          left: element[MC.S_SCROLL_LEFT],\n        });\n\n      if (options?.immediate) {\n        stopScroll();\n      } else {\n        waitForMeasureTime().then(stopScroll);\n      }\n    };\n\n    // ----------\n\n    this.trackScroll = (handler?, options?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      return setupOnScroll(handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackScroll = (handler?, scrollable?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      removeOnScroll(handler, scrollable, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onScroll = (handler, options?) =>\n      setupOnScroll(handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offScroll = (handler, scrollable?) => {\n      removeOnScroll(handler, scrollable, TRACK_REGULAR); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type ScrollWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnScrollOptions.debounceWindow | debounceWindow} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnScrollOptions.threshold | threshold} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 50\n   */\n  scrollThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link ScrollOptions.duration | duration} in calls to\n   * {@link ScrollWatcher.scroll} and {@link ScrollWatcher.scrollTo}.\n   *\n   * @defaultValue 1000\n   */\n  scrollDuration?: number;\n};\n\n/**\n * @interface\n */\nexport type OnScrollOptions = {\n  /**\n   * If it is not given, or is `null`, `window` or `document`, then it will\n   * track the scroll of the\n   * {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}.\n   *\n   * Other values must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  scrollable?: ScrollTarget;\n\n  /**\n   * If non-0, the scroll handler will only be called when the scrollable's\n   * scroll offset in the observed direction has changed at least\n   * `scrollThreshold` pixels since the last time the handler was called.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.scrollThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Specifies a list of {@link ScrollDirection}s to listen for.\n   *\n   * It can be a comma-separated list of direction names or an array of such\n   * names.\n   *\n   * If not given, then it listens for scrolls in any direction, including\n   * {@link Types.NoDirection} and {@link Types.AmbiguousDirection}.\n   *\n   * The {@link Types.NoDirection} occurs when the callback is called initially\n   * (if `skipInitial` is not `true`) and there hasn't yet been a scroll\n   * observed on the scrollable _and_ it's `scrollTop`/`scrollLeft` are 0.\n   *\n   * The {@link Types.AmbiguousDirection} occurs when the user scrolls\n   * diagonally with close to equal deltas in both horizontal and vertical\n   * direction.\n   *\n   * **IMPORTANT:**\n   *\n   * The direction of a scroll event is always based on comparing `deltaX` and\n   * `deltaY` relative to the _last scroll event_ (within the `debounceWindow`,\n   * and not to the scroll data for the last time the callback was called (in\n   * case it was skipped because `threshold` was not exceeded or in case it was\n   * debounced by a larger window than the watcher).\n   *\n   * I.e. if you have both `threshold` and `directions` restricted, or if the\n   * callback has a larger debounce window than the watcher, it is possible for\n   * there to be a change in the relevant `scrollTop`/`scrollLeft` offset that\n   * exceeds the threshold, and for the callback to _not_ be called.\n   *\n   * For a callback to be called, both of these must be true:\n   * - the change in `scrollTop`/`scrollLeft`, _compared to the last time the\n   *   callback was called_ must exceed the {@link threshold}\n   * - the effective scroll direction, _compared to the last scroll event_\n   *   prior to the _watcher's_ debounce window must be one of the given\n   *   {@link directions}.\n   *\n   * @defaultValue undefined\n   */\n  directions?: CommaSeparatedStr<ScrollDirection> | ScrollDirection[];\n\n  /**\n   * Do not call the handler until there's a future scroll of the element.\n   *\n   * By default we call the handler (almost) immediately if there's been a\n   * scroll in one of the given directions, or if there has not been a scroll\n   * but directions includes {@link Types.NoDirection}, but you can disable\n   * this initial call here.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts, but you probably need this when doing\n   * scroll-based animations.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * @interface\n */\nexport type ScrollOptions = ScrollToOptions & {\n  /**\n   * How much to scroll in the given direction.\n   *\n   * @defaultValue 100\n   */\n  amount?: number;\n\n  /**\n   * If set to \"pixel\" (default), `amount` is taken as absolute pixels.\n   *\n   * If set to \"visible\", `amount` is taken as percent of the element's visible\n   * size in the scrolling direction (100 means full client width for\n   * horizontal or height for vertical scroll).\n   *\n   * If set to \"content\", `amount` is taken as percent of the element's full\n   * content size in the scrolling direction (100 means full scroll width for\n   * horizontal or height for vertical scroll).\n   *\n   * @defaultValue \"pixel\"\n   */\n  asFractionOf?: \"pixel\" | \"visible\" | \"content\";\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the element that has been resized\n * - the {@link ScrollData} for the element\n */\nexport type OnScrollHandlerArgs = [Element, ScrollData];\nexport type OnScrollCallback = Callback<OnScrollHandlerArgs>;\nexport type OnScrollHandler =\n  | CallbackHandler<OnScrollHandlerArgs>\n  | OnScrollCallback;\n\nexport type ScrollData = {\n  clientWidth: number;\n  clientHeight: number;\n  scrollWidth: number;\n  scrollHeight: number;\n\n  scrollTop: number;\n\n  /**\n   * This is the `scrollTop` relative to the full `scrollHeight` minus the\n   * `clientHeight`, ranging from 0 to 1.\n   */\n  scrollTopFraction: number;\n\n  scrollLeft: number;\n\n  /**\n   * This is the `scrollLeft` relative to the full `scrollWidth` minus the\n   * `clientWidth`, ranging from 0 to 1.\n   */\n  scrollLeftFraction: number;\n\n  /**\n   * This is the direction of the last scroll action, i.e. _compared to the\n   * last scroll event_, not necessarily based on the deltas compared to the\n   * last time this callback was called.\n   */\n  direction: ScrollDirection;\n};\n\n// ----------------------------------------\n\ntype ScrollWatcherConfigInternal = {\n  _debounceWindow: number;\n  _scrollThreshold: number;\n  _scrollDuration: number;\n};\n\ntype OnScrollOptionsInternal = {\n  _element: Element;\n  _eventTarget: ScrollTarget;\n  _directions: ScrollDirection[] | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnScrollCallback;\n  _trackType: TrackType;\n  _options: OnScrollOptionsInternal;\n  _data?: ScrollData;\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, ScrollWatcher>();\n\nconst PREFIX_WRAPPER = MH.prefixName(\"scroll-watcher-wrapper\");\n\nconst getConfig = (\n  config: ScrollWatcherConfig | undefined,\n): ScrollWatcherConfigInternal => {\n  config ??= {};\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _scrollThreshold: toNonNegNum(config.scrollThreshold, 50) || 1,\n    _scrollDuration: toNonNegNum(config.scrollDuration, 1000),\n  };\n};\n\nconst TRACK_REGULAR = 1; // only scroll events\nconst TRACK_FULL = 2; // scroll + resizing of content and/or wrapper\n\n// --------------------\n\nconst fetchOnScrollOptions = async (\n  config: ScrollWatcherConfigInternal,\n  options: OnScrollOptions,\n): Promise<OnScrollOptionsInternal> => {\n  const directions =\n    validateStrList(\"directions\", options.directions, isValidScrollDirection) ||\n    null;\n\n  const element = await fetchScrollableElement(options.scrollable);\n\n  return {\n    _element: element,\n    _eventTarget: getEventTarget(element),\n    _directions: directions,\n    // If threshold is 0, internally treat as 1 (pixel)\n    _threshold: toNonNegNum(options.threshold, config._scrollThreshold) || 1,\n    _debounceWindow: options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n  };\n};\n\nconst directionMatches = (\n  userDirections: ScrollDirection[] | null,\n  latestDirection: ScrollDirection,\n) => !userDirections || MH.includes(userDirections, latestDirection);\n\nconst hasExceededThreshold = (\n  options: OnScrollOptionsInternal,\n  latestData: ScrollData,\n  lastThresholdData: ScrollData | undefined,\n): boolean => {\n  const directions = options._directions;\n  const threshold = options._threshold;\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  const topDiff = maxAbs(\n    latestData[MC.S_SCROLL_TOP] - lastThresholdData[MC.S_SCROLL_TOP],\n    latestData[MC.S_SCROLL_HEIGHT] - lastThresholdData[MC.S_SCROLL_HEIGHT],\n    latestData[MC.S_CLIENT_HEIGHT] - lastThresholdData[MC.S_CLIENT_HEIGHT],\n  );\n\n  const leftDiff = maxAbs(\n    latestData[MC.S_SCROLL_LEFT] - lastThresholdData[MC.S_SCROLL_LEFT],\n    latestData[MC.S_SCROLL_WIDTH] - lastThresholdData[MC.S_SCROLL_WIDTH],\n    latestData[MC.S_CLIENT_WIDTH] - lastThresholdData[MC.S_CLIENT_WIDTH],\n  );\n\n  // If the callback is only interested in up/down, then only check the\n  // scrollTop delta, and similarly for left/right.\n  let checkTop = false,\n    checkLeft = false;\n  if (\n    !directions ||\n    MH.includes(directions, MC.S_NONE) ||\n    MH.includes(directions, MC.S_AMBIGUOUS)\n  ) {\n    checkTop = checkLeft = true;\n  } else {\n    if (\n      MH.includes(directions, MC.S_UP) ||\n      MH.includes(directions, MC.S_DOWN)\n    ) {\n      checkTop = true;\n    }\n    if (\n      MH.includes(directions, MC.S_LEFT) ||\n      MH.includes(directions, MC.S_RIGHT)\n    ) {\n      checkLeft = true;\n    }\n  }\n\n  return (\n    (checkTop && topDiff >= threshold) || (checkLeft && leftDiff >= threshold)\n  );\n};\n\nconst fetchScrollData = async (\n  element: Element,\n  previousEventData: ScrollData | undefined,\n  realtime: boolean,\n): Promise<ScrollData> => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollTop = MH.ceil(element[MC.S_SCROLL_TOP]);\n  const scrollLeft = MH.ceil(element[MC.S_SCROLL_LEFT]);\n  const scrollWidth = element[MC.S_SCROLL_WIDTH];\n  const scrollHeight = element[MC.S_SCROLL_HEIGHT];\n  const clientWidth = getClientWidthNow(element);\n  const clientHeight = getClientHeightNow(element);\n\n  const scrollTopFraction =\n    MH.round(scrollTop) / (scrollHeight - clientHeight || MC.INFINITY);\n  const scrollLeftFraction =\n    MH.round(scrollLeft) / (scrollWidth - clientWidth || MC.INFINITY);\n\n  const prevScrollTop = previousEventData?.scrollTop ?? 0;\n  const prevScrollLeft = previousEventData?.scrollLeft ?? 0;\n\n  const direction = getMaxDeltaDirection(\n    scrollLeft - prevScrollLeft,\n    scrollTop - prevScrollTop,\n  );\n\n  return {\n    direction,\n    [MC.S_CLIENT_WIDTH]: clientWidth,\n    [MC.S_CLIENT_HEIGHT]: clientHeight,\n    [MC.S_SCROLL_WIDTH]: scrollWidth,\n    [MC.S_SCROLL_HEIGHT]: scrollHeight,\n    [MC.S_SCROLL_TOP]: scrollTop,\n    [MC.S_SCROLL_TOP_FRACTION]: scrollTopFraction,\n    [MC.S_SCROLL_LEFT]: scrollLeft,\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollLeftFraction,\n  };\n};\n\nconst setScrollCssProps = (\n  element: Element,\n  scrollData: Partial<ScrollData> | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetMainScrollableElement()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"page-\";\n  }\n\n  scrollData ??= {};\n  const props = {\n    [MC.S_SCROLL_TOP]: scrollData[MC.S_SCROLL_TOP],\n    [MC.S_SCROLL_TOP_FRACTION]: scrollData[MC.S_SCROLL_TOP_FRACTION],\n    [MC.S_SCROLL_LEFT]: scrollData[MC.S_SCROLL_LEFT],\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollData[MC.S_SCROLL_LEFT_FRACTION],\n    [MC.S_SCROLL_WIDTH]: scrollData[MC.S_SCROLL_WIDTH],\n    [MC.S_SCROLL_HEIGHT]: scrollData[MC.S_SCROLL_HEIGHT],\n  };\n  setNumericStyleJsVars(element, props, { _prefix: prefix });\n};\n\nconst getEventTarget = (element: Element): ScrollTarget => {\n  if (element === MH.getDocScrollingElement()) {\n    return MH.getDoc();\n  }\n\n  return element;\n};\n\nconst invokeCallback = (\n  callback: OnScrollCallback,\n  element: Element,\n  scrollData: ScrollData,\n) => callback.invoke(element, MH.copyObject(scrollData)).catch(logError);\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { ScrollOffset, View, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { isValidStrList, validateStrList } from \"@lisn/utils/validation\";\n\nimport { newBitSpaces, createBitSpace } from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid {@link ScrollOffset}.\n *\n * @category Validation\n */\nexport const isValidScrollOffset = (offset: string): offset is ScrollOffset =>\n  offset.match(OFFSET_REGEX) !== null;\n\n/**\n * Returns true if the given string is a valid \"view\".\n *\n * @category Validation\n */\nexport const isValidView = (view: string): view is View =>\n  MH.includes(VIEWS, view);\n\n/**\n * Returns true if the given string or array is a list of valid views.\n *\n * @category Validation\n */\nexport const isValidViewList = (views: string | string[]) =>\n  isValidStrList(views, isValidView, false);\n\n/**\n * Returns the views that are opposite to the given set of views.\n *\n * Above and below are opposites, and so are left and right.\n *\n * \"at\" is a special case. It is considered opposite to any view in the sense\n * that if it is not present in `views` it will always be included in the\n * returned array. However it is not \"strongly\" opposite in the sense that it\n * will not cause other views to be included in the result unless it is the\n * only view in `views`. That is, there are two sets of strongly opposite pairs\n * (\"above\"/\"below\" and \"left\"/\"right\") and at least one of the two opposing\n * views of a pair must be present for the other one to be included, _except in\n * the special case of `views` being \"at\"_. See examples below for\n * clarification.\n *\n * **Note** that the order of the returned array is not defined.\n *\n * @example\n * Returns [\"above\", \"below\", \"left\", \"right\"] (not definite order), since\n * \"at\" is the only view present and is opposite to all:\n *\n * ```javascript\n * getOppositeViews(\"at\"); // -> [\"above\", \"below\", \"left\", \"right\"] (not necessarily in this order)\n * ```\n *\n * @example\n * Returns [\"below\"]. \"left\" and \"right\" are NOT included even though \"at\" is\n * given, because at least one of the two opposing views of a pair must be\n * present for the other one to be included (except in the special case of\n * `views` being \"at\").\n *\n * ```javascript\n * getOppositeViews(\"at,above\"); // -> [\"below\"]\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above\"); // -> [\"at\", \"below\"] (not necessarily in this order)\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above,below\"); // -> [\"at\"]\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"at,above,below\"); // -> []\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above,right\"); // -> [\"at\", \"below\", \"left\"] (not necessarily in this order)\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"at,above,right\"); // -> [\"below\", \"left\"] (not necessarily in this order)\n * ```\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid, including if it's empty \"\".\n *\n * @category Views\n */\nexport const getOppositeViews = (\n  views: CommaSeparatedStr<View> | View[],\n): View[] => {\n  if (!views) {\n    throw MH.usageError(\"'views' cannot be empty\");\n  }\n\n  const bitmask = getViewsBitmask(views);\n  let oppositeBitmask = VIEWS_SPACE.bitmask & ~bitmask; // initial, all not present in bitmask\n\n  // If the given view is \"at\", then include all the other ones.\n  // Otherwise include only the opposite views of those directional\n  // (above/below/left/right) that are present. I.e. if neither left not right\n  // is given, then don't include them\n  if (bitmask !== VIEWS_SPACE.bit.at) {\n    // remove the opposite ones to those not present\n    if (!(bitmask & VIEWS_SPACE.bit.above)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.below;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.below)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.above;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.left)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.right;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.right)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.left;\n    }\n  }\n\n  return getViewsFromBitmask(oppositeBitmask);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getViewsBitmask = (\n  viewsStr: View[] | string | undefined,\n): number => {\n  let viewsBitmask = 0;\n  const views = validateStrList(\"views\", viewsStr, isValidView);\n\n  if (views) {\n    for (const v of views) {\n      if (!isValidView(v)) {\n        throw MH.usageError(`Unknown view '${v}'`);\n      }\n\n      viewsBitmask |= VIEWS_SPACE.bit[v];\n    }\n  } else {\n    viewsBitmask = VIEWS_SPACE.bitmask; // default: all\n  }\n\n  return viewsBitmask;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const parseScrollOffset = (input: string) => {\n  const match = input.match(OFFSET_REGEX);\n  if (!match) {\n    throw MH.usageError(`Invalid offset: '${input}'`);\n  }\n\n  const reference = match[1];\n  const value = match[2];\n  /* istanbul ignore next */ // shouldn't happen\n  if (!reference || !value) {\n    throw MH.bugError(\"Offset regex: blank capture groups\");\n  }\n\n  return { reference, value };\n};\n\nconst VIEWS: View[] = [\n  MC.S_AT,\n  MC.S_ABOVE,\n  MC.S_BELOW,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const VIEWS_SPACE = createBitSpace<View>(newBitSpaces(), ...VIEWS);\n\n// --------------------\n\n// Don't use capture groups for old browser support\nconst OFFSET_REGEX = RegExp(\"(top|bottom|left|right): *([^ ].+)\");\n\nconst getViewsFromBitmask = (bitmask: number): View[] => {\n  const views: View[] = [];\n  for (let bit = VIEWS_SPACE.start; bit <= VIEWS_SPACE.end; bit++) {\n    const value = 1 << bit;\n    if (bitmask & value) {\n      const name = VIEWS_SPACE.nameOf(value);\n      if (name) {\n        views.push(name);\n      }\n    }\n  }\n\n  return views;\n};\n","/**\n * @module Modules/XIntersectionObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nexport type XIntersectionObserverCallback = (\n  entries: IntersectionObserverEntry[],\n  observer: XIntersectionObserver,\n) => void;\n\n/**\n * {@link XIntersectionObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}\n * with added capabilities:\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n */\nexport class XIntersectionObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root | IntersectionObserver:root}.\n   */\n  readonly root!: Element | Document | null;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin | IntersectionObserver:rootMargin}.\n   */\n  readonly rootMargin!: string;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/thresholds | IntersectionObserver:thresholds}.\n   */\n  readonly thresholds!: number[];\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/observe | IntersectionObserver:observe} except it accepts multiple\n   * targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent intersection change.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/unobserve | IntersectionObserver:unobserve} except it accepts multiple\n   * targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/disconnect | IntersectionObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * Like `IntersectionObserver.takeRecords`.\n   */\n  readonly takeRecords: () => void;\n\n  constructor(\n    callback: XIntersectionObserverCallback,\n    observeOptions?: IntersectionObserverInit,\n  ) {\n    let observedTargets = MH.newWeakSet<Element>();\n    const targetsToSkip = MH.newWeakSet<Element>();\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      const selectedEntries = [];\n\n      for (const entry of entries) {\n        if (targetsToSkip.has(MH.targetOf(entry))) {\n          MH.deleteKey(targetsToSkip, MH.targetOf(entry));\n          continue;\n        }\n\n        selectedEntries.push(entry);\n      }\n\n      if (MH.lengthOf(selectedEntries)) {\n        callback(selectedEntries, this);\n      }\n    };\n\n    const observer = MH.newIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    MH.defineProperty(this, \"root\", { get: () => observer.root });\n    MH.defineProperty(this, \"rootMargin\", {\n      get: () => observer.rootMargin,\n    });\n    MH.defineProperty(this, \"thresholds\", {\n      get: () => observer.thresholds,\n    });\n\n    this.observe = (...targets) => {\n      for (const target of targets) {\n        observedTargets.add(target);\n        observer.observe(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.add(target);\n        this.observe(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        observer.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      observedTargets = MH.newWeakSet();\n      observer.disconnect();\n    };\n\n    this.takeRecords = () => observer.takeRecords();\n  }\n}\n","/**\n * @module Watchers/ViewWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  ViewTarget,\n  View,\n  BoundingRect,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { setNumericStyleJsVars } from \"@lisn/utils/css-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForSubsequentMeasureTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys, compareValuesIn } from \"@lisn/utils/misc\";\nimport { createOverlay, OverlayOptions } from \"@lisn/utils/overlays\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport { toMargins, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  VIEWS_SPACE,\n  getViewsBitmask,\n  parseScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap, newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XIntersectionObserver } from \"@lisn/modules/x-intersection-observer\";\n\nimport { DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewWatcher} monitors the position of a given target relative to the\n * given {@link ViewWatcherConfig.root | root} or the viewport.\n *\n * It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class ViewWatcher {\n  /**\n   * Call the given handler whenever the {@link ViewWatcherConfig.root | root}'s\n   * view relative to the target position changes, i.e. when the target enters\n   * or leaves the root.\n   *\n   * Unless {@link OnViewOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current view if it matches this\n   * set of options*.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking position across root\n   * using {@link trackView}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or the options are invalid.\n   */\n  readonly onView: (\n    target: ViewTarget,\n    handler: OnViewHandler,\n    options?: OnViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offView: (target: ViewTarget, handler: OnViewHandler) => void;\n\n  /**\n   * This does more than just {@link onView}. The difference is that in\n   * addition to a change of {@link View}, such as the target entering or\n   * leaving the ViewWatcher's {@link ViewWatcherConfig.root | root} (by\n   * default the viewport), the handler is also called each time the target's\n   * relative view changes _while inside the root_.\n   *\n   * A change of relative position happens when:\n   * - the target is resized\n   * - the root is resized\n   * - the any of the target's scrollable ancestors is scrolled\n   * - the target's attributes changed that resulted in a change of position\n   *\n   * All of the above are accounted for. Internally it uses\n   * {@link ScrollWatcher}, {@link DOMWatcher} and {@link SizeWatcher} to keep\n   * track of all of this.\n   *\n   * If the target is leaves the ViewWatcher's\n   * {@link ViewWatcherConfig.root | root}, the handler will be called with\n   * the {@link ViewData}, and the above events will stop being tracked until\n   * the target enters the watcher's root again.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates the following set of CSS variables on the target's style and\n   * represent its relative position:\n   *\n   * - `--lisn-js--r-top`\n   * - `--lisn-js--r-bottom`\n   * - `--lisn-js--r-left`\n   * - `--lisn-js--r-right`\n   * - `--lisn-js--r-width`\n   * - `--lisn-js--r-height`\n   * - `--lisn-js--r-h-middle`\n   * - `--lisn-js--r-v-middle`\n   *\n   * See {@link ViewData.relative} for an explanation of each.\n   *\n   * Note that only Element targets are supported here and not offsets.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or \"views\" are invalid.\n   */\n  readonly trackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n    options?: TrackViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackView}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n  ) => void;\n\n  /**\n   * Get the current view relative to the target. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                 this only when doing realtime scroll-based animations\n   *                 as it may cause a forced layout.\n   */\n  readonly fetchCurrentView: (\n    target: ViewTarget,\n    realtime?: boolean,\n  ) => Promise<ViewData>;\n\n  /**\n   * Creates a new instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: ViewWatcherConfig) {\n    return new ViewWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing  instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: ViewWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new ViewWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ViewWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ViewWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ViewWatcher\", logAtCreation: config })\n      : null;\n\n    const allViewData = MH.newWeakMap<Element, ViewData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<\n        OnViewHandler,\n        {\n          _callback: OnViewCallback;\n          _trackType: TrackType;\n          _options: OnViewOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      debug: logger?.debug9(`Got ${entries.length} new entries`, entries);\n\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    const observeOptions = {\n      root: config._root,\n      threshold: config._threshold,\n      rootMargin: config._rootMargin,\n    };\n\n    const xObserver = new XIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    // ----------\n\n    const fetchCurrentView = (\n      element: Element,\n      realtime = false,\n    ): Promise<ViewData> => {\n      const fetchData = async (\n        entryOrElement: IntersectionObserverEntry | Element,\n      ) => {\n        const intersection = await fetchIntersectionData(\n          config,\n          entryOrElement,\n          realtime,\n        );\n        const data = await fetchViewData(intersection, realtime);\n        return data;\n      };\n\n      if (realtime) {\n        return fetchData(element);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp IntersectionObserver\n        const observer = MH.newIntersectionObserver((entries) => {\n          const promise = fetchData(entries[0]);\n          observer.disconnect();\n          promise.then(resolve);\n        }, observeOptions);\n\n        observer.observe(element);\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n      trackType: TrackType,\n    ): OnViewCallback => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      allCallbacks.sGet(element).set(handler, {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      });\n\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      userOptions: (OnViewOptions & TrackViewOptions) | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOptions(config._root, target, userOptions);\n      const element = options._element;\n\n      const callback = createCallback(handler, options, trackType);\n\n      // View watcher should be used before the DOM is loaded since the initial\n      // size of the root may be 0 or close to 0 and would lead to premature\n      // triggering.\n      await waitForInteractive();\n\n      // Initial call doesn't need to be realtime, and best to use an actual\n      // IntersectionObserverEntry for that one.\n      let viewData = await fetchCurrentView(element);\n\n      if (\n        viewData.rootBounds[MC.S_WIDTH] === 0 &&\n        viewData.rootBounds[MC.S_HEIGHT] === 0\n      ) {\n        // Possibly the root is being setup now, wait for one AF\n        debug: logger?.debug5(\n          \"Got zero root size, deferring for a bit\",\n          config._root,\n        );\n        await waitForSubsequentMeasureTime();\n        viewData = await fetchCurrentView(element);\n      }\n\n      if (trackType === TRACK_FULL) {\n        // Detect resize or scroll\n        await setupInviewTrack(options, callback, viewData);\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      // Always use observeLater to skip the initial call from the\n      // IntersectionObserver, and call callbacks that have skipInitial: false\n      // here. Otherwise, we can't tell from inside the intersectionHandler whether\n      // a callback wants to skip its initial call or not.\n      //\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, viewData);\n        if (viewsToBitmask(viewData.views) & options._viewsBitmask) {\n          await invokeCallback(callback, element, viewData);\n        }\n      }\n    };\n\n    // ----------\n\n    const removeOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      trackType: TrackType,\n    ) => {\n      // For time sync, so that if called immediately after onView without\n      // awaiting, it will remove the callback that is about to be added.\n      // But if no such handler has been added we may unnecessarily\n      // create an overlay... TODO\n      const options = await fetchOptions(config._root, target, {});\n      const element = options._element;\n\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setViewCssProps) {\n          // delete the properties\n          setViewCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n    ) => {\n      const element = options._element;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n\n        xObserver.unobserve(element);\n        MH.deleteKey(allViewData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = async (entry: IntersectionObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      // This doesn't need to be \"realtime\", since IntersectionObserver alone\n      // introduces a delay.\n      const intersection = await fetchIntersectionData(config, entry);\n      const latestData = await fetchViewData(intersection);\n      debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n      const viewsBitmask = viewsToBitmask(latestData.views);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        if (viewsBitmask & entry._options._viewsBitmask) {\n          invokeCallback(entry._callback, element, latestData);\n        }\n      }\n    };\n\n    // ----------\n\n    const setupInviewTrack = async (\n      options: OnViewOptionsInternal,\n      viewCallback: OnViewCallback,\n      viewData: ViewData,\n    ) => {\n      const element = options._element;\n      debug: logger?.debug8(\n        \"Setting up size, scroll and attribute tracking\",\n        element,\n      );\n\n      const sizeWatcher = SizeWatcher.reuse();\n      const scrollWatcher = ScrollWatcher.reuse();\n      const realtime = options._debounceWindow === 0;\n\n      // Detect when target's class or style attribute change\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      // We need to remove the tracking callback when target leaves view and re-add\n      // it when it enters view. But the OnViewCallback that is associated may have\n      // already been added prior, by calling onView with this handler, so we can't\n      // always wrap around it, in order to detect when it's called with a change\n      // of view. So we setup another OnViewCallback tied to the tracking callback.\n      let isInview = false;\n\n      let removeTrackCallback: (() => void) | null = null;\n\n      // Finds any scrollable ancestors of the element and detect scroll on them.\n      const scrollableAncestors = await fetchScrollableAncestors(\n        element,\n        realtime,\n      );\n      if (viewCallback.isRemoved()) {\n        return;\n      }\n\n      const addTrackCallback = () => {\n        const trackCallback = wrapCallback(async () => {\n          const prevData = allViewData.get(element);\n\n          // Get the latest view data for the target\n          const latestData = await fetchCurrentView(element, realtime);\n          debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n          const changed = viewChanged(latestData, prevData);\n          if (changed) {\n            // When comparing for changes, we round the numbers to certain number\n            // of decimal places, and allViewData serves as a \"last threshold\"\n            // state, so only update it if there was a significant change.\n            // Otherwise very quick changes in small increments would get\n            // rejected as \"no change\".\n            allViewData.set(element, latestData);\n\n            if (isInview && !viewCallback.isRemoved()) {\n              // Could have been removed during the debounce window\n              await invokeCallback(viewCallback, element, latestData);\n            }\n          } else {\n            debug: logger?.debug9(\"ViewData same as last\");\n          }\n        });\n\n        // TODO Is there a better way to detect when it's moved?\n        viewCallback.onRemove(trackCallback.remove);\n        removeTrackCallback = trackCallback.remove;\n\n        // Detect when target's class or style attribute change\n        domWatcher.onMutation(trackCallback, {\n          categories: [MC.S_ATTRIBUTE],\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when target is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: element,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the root is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: config._root ?? MH.getWindow(),\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the target's scrollable ancestors are scrolled (this\n        // will almost certainly include the main scrollable element).\n        for (const ancestor of scrollableAncestors) {\n          scrollWatcher.onScroll(trackCallback, {\n            scrollable: ancestor,\n            [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n            threshold: options._scrollThreshold,\n            [MC.S_SKIP_INITIAL]: true,\n          });\n        }\n      };\n\n      const enterOrLeaveCallback = createCallback(\n        (target__ignored, viewData) => {\n          if (viewData.views[0] === MC.S_AT) {\n            if (!isInview) {\n              isInview = true;\n              addTrackCallback();\n            }\n          } else if (removeTrackCallback) {\n            isInview = false;\n            removeTrackCallback();\n            removeTrackCallback = null;\n          }\n        },\n        MH.assign(options, {\n          _viewsBitmask: VIEWS_SPACE.bitmask,\n        }),\n        TRACK_REGULAR,\n      );\n\n      viewCallback.onRemove(enterOrLeaveCallback.remove);\n\n      allViewData.set(element, viewData); // to avoid duplicate initial call\n      // Setup the track and the \"inView\" state\n      if (!enterOrLeaveCallback.isRemoved()) {\n        invokeCallback(enterOrLeaveCallback, element, viewData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentView = (target, realtime = false) =>\n      fetchElement(config._root, target).then((element) =>\n        fetchCurrentView(element, realtime),\n      );\n\n    // ----------\n\n    this.trackView = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      return setupOnView(element, handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackView = (element, handler?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      removeOnView(element, handler, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onView = (target, handler, options?) =>\n      setupOnView(target, handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offView = (target, handler) =>\n      removeOnView(target, handler, TRACK_REGULAR); // no need to await\n  }\n}\n\n/**\n * @interface\n */\nexport type ViewWatcherConfig = {\n  /**\n   * The root element to use for the IntersectionObserver.\n   *\n   * **NOTE:** If the target you want to observe (via\n   * {@link ViewWatcher.onView}) is inside a scrolling element, then you should\n   * probably set the watcher's root to be that scrolling element or a wrapper\n   * around it. However, even if you don't or can't do that, the watcher will\n   * try to be smart about that, and when the target is no longer intercepting\n   * because it's scrolled outside its scrolling container, and yet its\n   * bounding box is still inside the watcher root (e.g. the viewport) the\n   * watcher will determine the relative view based on the scrolling container\n   * and not the actual watcher root.\n   *\n   * @defaultValue null\n   */\n  root?: Element | null;\n\n  /**\n   * The rootMargin to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue \"0px 0px 0px 0px\"\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue 0\n   */\n  threshold?: number | number[];\n};\n\n/**\n * @interface\n */\nexport type OnViewOptions = {\n  /**\n   * Specifies a list of {@link View}s to target for.\n   *\n   * The handler will only be called if there is a change of view relative to\n   * the target that matches the given ones.\n   *\n   * It can be a comma-separated list of \"views\" or an array of such names.\n   *\n   * @defaultValue undefined\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * @interface\n */\nexport type TrackViewOptions = {\n  /**\n   * Use this debounce window for the {@link ScrollWatcher} and\n   * {@link SizeWatcher} involved in the view tracking.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts during scroll, but you probably need this when\n   * doing scroll-based animations.\n   *\n   * @defaultValue undefined // ScrollWatcher and SizeWatcher defaults\n   */\n  debounceWindow?: number;\n\n  /**\n   * Use this resize threshold for the {@link SizeWatcher} involved in the view\n   * tracking.\n   *\n   * @defaultValue undefined // SizeWatcher default\n   */\n  resizeThreshold?: number;\n\n  /**\n   * Use this scroll threshold for the {@link ScrollWatcher} involved in the\n   * view tracking.\n   *\n   * @defaultValue undefined // ScrollWatcher default\n   */\n  scrollThreshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - The element that is the target of the IntersectionObserver. If the call to\n *   {@link ViewWatcher.onView} specified an element as the target, it will be\n *   the same. If it specified an offset, then the element passed to the\n *   callback will be an absolutely positioned trigger overlay that's created\n *   as a result.\n * - the {@link ViewData} for relative to the target\n */\nexport type OnViewHandlerArgs = [Element, ViewData];\nexport type OnViewCallback = Callback<OnViewHandlerArgs>;\nexport type OnViewHandler = CallbackHandler<OnViewHandlerArgs> | OnViewCallback;\n\nexport type ViewData = {\n  isIntersecting: boolean;\n\n  targetBounds: BoundingRect;\n\n  rootBounds: BoundingRect;\n\n  /**\n   * The current view or views of the target. There would be two views given\n   * only if the target is _not_ in view and it's diagonally across from the\n   * root, e.g. both below and to the right.\n   */\n  views: [View, View?];\n\n  /**\n   * This is the target's position relative to the\n   * {@link ViewWatcherConfig.root | root} with values relative to the root\n   * size.\n   *\n   * It is like the {@link targetBounds} except that each quantity is scaled by\n   * the root's width or height, and having two additional computed values.\n   */\n  relative: {\n    x: number;\n    y: number;\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n    width: number;\n    height: number;\n\n    /**\n     * Average of the relative left and right.\n     */\n    hMiddle: number;\n\n    /**\n     * Average of the relative top and bottom.\n     */\n    vMiddle: number;\n  };\n};\n\n// ----------------------------------------\n\ntype ViewWatcherConfigInternal = {\n  _root: Element | null;\n  _rootMargin: string;\n  _threshold: number | number[];\n};\n\ntype OnViewOptionsInternal = {\n  _element: Element;\n  _viewsBitmask: number;\n  _debounceWindow: number | undefined;\n  _resizeThreshold: number | undefined;\n  _scrollThreshold: number | undefined;\n};\n\ntype IntersectionData = {\n  _target: Element;\n  _targetBounds: BoundingRect;\n  _root: Element | null;\n  _rootMargins: [number, number, number, number];\n  _rootBounds: BoundingRect;\n  _isIntersecting: boolean | null; // null means unknown, no IntersectionObserverEntry\n  _isCrossOrigin: boolean | null; // null means unknown, no IntersectionObserverEntry\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, ViewWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (\n  config: ViewWatcherConfig | undefined,\n): ViewWatcherConfigInternal => {\n  return {\n    _root: config?.root ?? null,\n    _rootMargin: config?.rootMargin ?? \"0px 0px 0px 0px\",\n    _threshold: config?.threshold ?? 0,\n  };\n};\n\nconst TRACK_REGULAR = 1; // only entering/leaving root\nconst TRACK_FULL = 2; // entering/leaving + moving across (fine-grained)\n\n// --------------------\n\nconst fetchOptions = async (\n  root: Element | null,\n  target: ViewTarget,\n  options: (OnViewOptions & TrackViewOptions) | undefined,\n): Promise<OnViewOptionsInternal> => {\n  return {\n    _element: await fetchElement(root, target),\n    _viewsBitmask: getViewsBitmask(options?.views),\n    _debounceWindow: options?.debounceWindow,\n    _resizeThreshold: options?.resizeThreshold,\n    _scrollThreshold: options?.scrollThreshold,\n  };\n};\n\nconst fetchScrollableAncestors = async (\n  element: Element,\n  realtime: boolean,\n) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollableAncestors = [];\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = getClosestScrollable(ancestor, { active: true }))) {\n    scrollableAncestors.push(ancestor);\n  }\n\n  return scrollableAncestors;\n};\n\nconst viewChanged = (latestData: ViewData, prevData: ViewData | undefined) =>\n  !prevData ||\n  viewsToBitmask(prevData.views) !== viewsToBitmask(latestData.views) ||\n  !compareValuesIn(\n    MH.copyBoundingRectProps(prevData.targetBounds),\n    MH.copyBoundingRectProps(latestData.targetBounds),\n  ) ||\n  !compareValuesIn(prevData.rootBounds, latestData.rootBounds) ||\n  !compareValuesIn(prevData.relative, latestData.relative);\n\nconst viewsToBitmask = (views: [View, View?]) =>\n  VIEWS_SPACE.bit[views[0]] | (views[1] ? VIEWS_SPACE.bit[views[1]] : 0);\n\nconst fetchIntersectionData = async (\n  config: ViewWatcherConfigInternal,\n  entryOrTarget: IntersectionObserverEntry | Element,\n  realtime = false,\n): Promise<IntersectionData> => {\n  const root = config._root;\n  const vpSize = await fetchViewportSize(realtime);\n  const rootMargins = toMargins(config._rootMargin, vpSize);\n\n  let target: Element;\n  let targetBounds: BoundingRect;\n  let rootBounds: BoundingRect | null = null;\n  let isIntersecting: boolean | null = null;\n  let isCrossOrigin: boolean | null = null;\n\n  if (MH.isInstanceOf(entryOrTarget, IntersectionObserverEntry)) {\n    target = entryOrTarget.target;\n    targetBounds = entryOrTarget.boundingClientRect;\n    rootBounds = entryOrTarget.rootBounds;\n    isIntersecting = entryOrTarget.isIntersecting;\n    isCrossOrigin = !entryOrTarget.rootBounds;\n  } else {\n    target = entryOrTarget;\n    targetBounds = await fetchBounds(target, realtime);\n  }\n\n  if (!rootBounds) {\n    rootBounds = await fetchBounds(root, realtime, rootMargins);\n  }\n\n  return {\n    _target: target,\n    _targetBounds: targetBounds,\n    _root: root,\n    _rootMargins: rootMargins,\n    _rootBounds: rootBounds,\n    _isIntersecting: isIntersecting,\n    _isCrossOrigin: isCrossOrigin,\n  };\n};\n\nconst fetchBounds = async (\n  root: Element | null,\n  realtime: boolean,\n  rootMargins?: [number, number, number, number],\n): Promise<BoundingRect> => {\n  let rect: BoundingRect;\n\n  if (root) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    rect = MH.copyBoundingRectProps(MH.getBoundingClientRect(root));\n  } else {\n    const { width, height } = await fetchViewportSize(realtime);\n    rect = {\n      x: 0,\n      left: 0,\n      right: width,\n      width,\n      y: 0,\n      top: 0,\n      bottom: height,\n      height,\n    };\n  }\n\n  if (rootMargins) {\n    rect.x = rect[MC.S_LEFT] -= rootMargins[3];\n    rect[MC.S_RIGHT] += rootMargins[1];\n    rect[MC.S_WIDTH] += rootMargins[1] + rootMargins[3];\n\n    rect.y = rect[MC.S_TOP] -= rootMargins[0];\n    rect[MC.S_BOTTOM] += rootMargins[2];\n    rect[MC.S_HEIGHT] += rootMargins[0] + rootMargins[2];\n  }\n\n  return rect;\n};\n\nconst fetchViewData = async (\n  intersection: IntersectionData,\n  realtime = false,\n): Promise<ViewData> => {\n  const vpSize = await fetchViewportSize(realtime);\n  const vpHeight = vpSize[MC.S_HEIGHT];\n  const vpWidth = vpSize[MC.S_WIDTH];\n\n  const views = await fetchViews(intersection, realtime);\n\n  const relative = MH.merge(\n    { hMiddle: NaN, vMiddle: NaN },\n    MH.copyBoundingRectProps(intersection._targetBounds),\n  );\n\n  relative.y /= vpHeight;\n  relative[MC.S_TOP] /= vpHeight;\n  relative[MC.S_BOTTOM] /= vpHeight;\n  relative[MC.S_HEIGHT] /= vpHeight;\n\n  relative.x /= vpWidth;\n  relative[MC.S_LEFT] /= vpWidth;\n  relative[MC.S_RIGHT] /= vpWidth;\n  relative[MC.S_WIDTH] /= vpWidth;\n\n  relative.hMiddle = (relative[MC.S_LEFT] + relative[MC.S_RIGHT]) / 2;\n  relative.vMiddle = (relative[MC.S_TOP] + relative[MC.S_BOTTOM]) / 2;\n\n  const viewData: ViewData = {\n    isIntersecting: intersection._isIntersecting ?? views[0] === MC.S_AT,\n    targetBounds: intersection._targetBounds,\n    rootBounds: intersection._rootBounds,\n    views,\n    relative,\n  };\n\n  return viewData;\n};\n\nconst fetchViews = async (\n  intersection: IntersectionData,\n  realtime: boolean,\n  useScrollingAncestor?: Element,\n): Promise<[View, View?]> => {\n  if (intersection._isIntersecting) {\n    return [MC.S_AT];\n  }\n\n  let rootBounds: BoundingRect;\n  if (useScrollingAncestor) {\n    rootBounds = await fetchBounds(\n      useScrollingAncestor,\n      realtime,\n      intersection._rootMargins,\n    );\n  } else {\n    rootBounds = intersection._rootBounds;\n  }\n\n  const targetBounds = intersection._targetBounds;\n  const delta = {\n    _left: rootBounds[MC.S_LEFT] - targetBounds[MC.S_LEFT],\n    _right: targetBounds[MC.S_RIGHT] - rootBounds[MC.S_RIGHT],\n    _top: rootBounds[MC.S_TOP] - targetBounds[MC.S_TOP],\n    _bottom: targetBounds[MC.S_BOTTOM] - rootBounds[MC.S_BOTTOM],\n  };\n\n  let xView: View | null = null;\n  let yView: View | null = null;\n  if (delta._left > 0 && delta._right > 0) {\n    // Target is wider than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    xView = delta._left > delta._right ? MC.S_RIGHT : MC.S_LEFT;\n  } else if (delta._left > 0) {\n    // Target is to the left of the root\n    xView = MC.S_RIGHT;\n  } else if (delta._right > 0) {\n    // Target is to the right of the root\n    xView = MC.S_LEFT;\n  } // else target is horizontally contained in root, see below\n\n  if (delta._top > 0 && delta._bottom > 0) {\n    // Target is taller than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    yView = delta._top > delta._bottom ? MC.S_BELOW : MC.S_ABOVE;\n  } else if (delta._top > 0) {\n    // Target is above the root\n    yView = MC.S_BELOW;\n  } else if (delta._bottom > 0) {\n    // Target is below the root\n    yView = MC.S_ABOVE;\n  } // else target is vertically contained in root, see below\n\n  if (xView && yView) {\n    // diagonally out of vide\n    return [xView, yView];\n  } else if (xView) {\n    // horizontally out of vide\n    return [xView];\n  } else if (yView) {\n    // vertically out of vide\n    return [yView];\n  }\n\n  // The target is contained in the root bounds and yet isIntersecting was\n  // not true. This means that either:\n  //\n  // 1. It may be intersecting, but we didn't get an actual\n  //    IntersectionObserverEntry and we don't know if it's intersecting\n  //    or not\n  // 2. The target is inside a scrolling element that is _not_ being used as\n  //    the observer root, and the target has scrolled out of the scrollable\n  //    bounds but still inside the viewport\n  // 3. We're inside a cross-origin iFrame and the iFrame is partially or\n  //    fully not-intersecting\n\n  if (!intersection._isCrossOrigin) {\n    // This is case 1. or 2. => get the views relative to the closest\n    // scrollable ancestor relative to which it is _not_ intersecting, if\n    // any. If it's nested inside several scrolling elements, we'll end up\n    // looping over each one until we find the one for which the target is\n    // outside its box.\n    //\n    // It is too risky to use active isScrollable check here since we could be\n    // inside an onScroll handler, so just use passive.\n    const scrollingAncestor = getClosestScrollable(\n      useScrollingAncestor ?? intersection._target,\n    );\n\n    if (scrollingAncestor) {\n      return fetchViews(intersection, realtime, scrollingAncestor);\n    }\n  }\n\n  // Either case 3. (cross-origin iframe outside the viewport) or case 1. and\n  // the target is actually intersecting the root. Either way, it's to be\n  // considered in-view of its root.\n  return [MC.S_AT];\n};\n\nconst setViewCssProps = (\n  element: Element,\n  viewData: ViewData | undefined | null,\n) => {\n  const relative: Record<string, number> = viewData?.relative ?? {};\n  const props = {\n    top: relative.top,\n    bottom: relative.bottom,\n    left: relative.left,\n    right: relative.right,\n    [MC.S_WIDTH]: relative[MC.S_WIDTH],\n    [MC.S_HEIGHT]: relative[MC.S_HEIGHT],\n    hMiddle: relative.hMiddle,\n    vMiddle: relative.vMiddle,\n  };\n  setNumericStyleJsVars(element, props, { _prefix: \"r-\", _numDecimal: 4 }); // don't await here\n};\n\nconst fetchElement = async (\n  root: Element | null,\n  target: ViewTarget,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  } else if (!MH.isString(target)) {\n    throw MH.usageError(\n      \"'target' must be an offset string or an HTMLElement | SVGElement | MathMLElement\",\n    );\n  }\n\n  const overlayOptions = getOverlayOptions(root, target);\n  return await createOverlay(overlayOptions);\n};\n\nconst getOverlayOptions = (\n  root: Element | null,\n  target: string,\n): OverlayOptions => {\n  const { reference, value } = parseScrollOffset(target);\n\n  let ovrDimension: \"width\" | \"height\";\n  if (reference === MC.S_TOP || reference === MC.S_BOTTOM) {\n    ovrDimension = MC.S_WIDTH;\n  } else if (reference === MC.S_LEFT || reference === MC.S_RIGHT) {\n    ovrDimension = MC.S_HEIGHT;\n  } else {\n    throw MH.usageError(`Invalid offset reference: '${reference}'`);\n  }\n\n  return {\n    parent: MH.isHTMLElement(root) ? root : undefined,\n    style: {\n      [reference]: value,\n      [ovrDimension]: \"100%\",\n    },\n  };\n};\n\nconst invokeCallback = (\n  callback: OnViewCallback,\n  element: Element,\n  viewData: ViewData,\n) => callback.invoke(element, MH.copyObject(viewData)).catch(logError);\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nexport * from \"@lisn/watchers/dom-watcher\";\nexport * from \"@lisn/watchers/gesture-watcher\";\nexport * from \"@lisn/watchers/layout-watcher\";\nexport * from \"@lisn/watchers/pointer-watcher\";\nexport * from \"@lisn/watchers/scroll-watcher\";\nexport * from \"@lisn/watchers/size-watcher\";\nexport * from \"@lisn/watchers/view-watcher\";\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport { settings } from \"@lisn/globals/settings\";\nsettings.autoWidgets = true;\n\nexport { settings } from \"@lisn/globals/settings\";\nexport * as watchers from \"@lisn/watchers/index\";\n","/**\n * ## Specification for the HTML API for widgets\n *\n * The following describes the general syntax when using the HTML API for\n * automatic creation of widgets based on data attributes\n * ({@link Settings.settings.autoWidgets | settings.autoWidgets} must be true.\n *\n * A widget specification should be given as a\n * `data-lisn-<WidgetName>=\"<WidgetConfList>\"` attribute.\n *\n * Alternatively, if using all default configurations, you can simply add the\n * `lisn-<WidgetName>` CSS class. Specifying a configuration using CSS classes\n * is not currently possible for widgets, only triggers.\n *\n * The general specification for a widget is of the form:\n *\n * ```\n * <WidgetConfList> ::= <WidgetConf> { \";\" <WidgetConf> }\n *\n * <WidgetConf> ::= [ <WidgetOption> { \"|\" <WidgetOption> } ]\n *\n * <WidgetOption> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n * ```\n *\n * **NOTE:**\n *\n * There can be 0 or more spaces around any of the separator characters.\n *\n * Not all widgets support multiple instances per single element and therefore\n * multiple configurations. Refer to the specific widget.\n *\n * The characters \"|\", \";\", \"=\" are reserved separators and cannot be used\n * literally as part of an option value.\n *\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { hasClass, getData } from \"@lisn/utils/css-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { toArrayIfSingle } from \"@lisn/utils/misc\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString, kebabToCamelCase, splitOn } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { DOMWatcher } from \"@lisn/watchers/dom-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\nexport class Widget {\n  /**\n   * Disables the functionality of the widget. What this means is specific to\n   * each widget.\n   */\n  readonly disable: () => Promise<void>;\n\n  /**\n   * Re-enables the functionality of the widget. What this means is specific to\n   * each widget.\n   */\n  readonly enable: () => Promise<void>;\n\n  /**\n   * Re-enables the widget if disabled, otherwise disables it.\n   */\n  readonly toggleEnable: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is disabled.\n   */\n  readonly onDisable: (handler: WidgetHandler) => void;\n\n  /**\n   * The given handler will be called when the widget is enabled.\n   */\n  readonly onEnable: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is currently disabled.\n   */\n  readonly isDisabled: () => boolean;\n\n  /**\n   * Undoes all modifications to the element and returns it to its original state.\n   *\n   * You will need to recreate it if you want to enable its functionality again.\n   */\n  readonly destroy: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is destroyed.\n   */\n  readonly onDestroy: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is destroyed.\n   */\n  readonly isDestroyed: () => boolean;\n\n  /**\n   * Returns the element passed to the widget constructor.\n   */\n  readonly getElement: () => Element;\n\n  /**\n   * Retrieve an existing widget by element and ID.\n   */\n  static get(element: Element, id: string): Widget | null {\n    return instances.get(element)?.get(id) ?? null;\n  }\n\n  /**\n   * **IMPORTANT:** If ID is given and there's already a widget with this ID on\n   * this element, it will be destroyed!\n   */\n  constructor(element: Element, config?: { id?: string }) {\n    const logger = debug\n      ? new debug.Logger({\n          name: `${this.constructor.name}-${formatAsString(element)}`,\n          logAtCreation: this,\n        })\n      : null;\n\n    const id = config?.id;\n    if (id) {\n      instances.get(element)?.get(id)?.destroy(); // don't await here\n      instances.sGet(element).set(id, this);\n    }\n\n    let isDisabled = false;\n    let isDestroyed = false;\n    let destroyPromise: Promise<void>;\n\n    const enableCallbacks = MH.newSet<WidgetCallback>();\n    const disableCallbacks = MH.newSet<WidgetCallback>();\n    const destroyCallbacks = MH.newSet<WidgetCallback>();\n\n    this.disable = async () => {\n      if (!isDisabled) {\n        debug: logger?.debug8(\"Disabling\");\n        isDisabled = true;\n\n        for (const callback of disableCallbacks) {\n          await callback.invoke(this);\n        }\n      }\n    };\n\n    this.enable = async () => {\n      if (!isDestroyed && isDisabled) {\n        debug: logger?.debug8(\"Enabling\");\n        isDisabled = false;\n\n        for (const callback of enableCallbacks) {\n          await callback.invoke(this);\n        }\n      }\n    };\n\n    this.toggleEnable = async () => {\n      if (!isDestroyed) {\n        await (isDisabled ? this.enable : this.disable)();\n      }\n    };\n\n    this.onDisable = (handler) => disableCallbacks.add(wrapCallback(handler));\n    this.onEnable = (handler) => enableCallbacks.add(wrapCallback(handler));\n\n    this.isDisabled = () => isDisabled;\n\n    this.destroy = () => {\n      if (!destroyPromise) {\n        destroyPromise = (async () => {\n          debug: logger?.debug8(\"Destroying\");\n          isDestroyed = true;\n          await this.disable();\n\n          for (const callback of destroyCallbacks) {\n            await callback.invoke(this);\n          }\n\n          enableCallbacks.clear();\n          disableCallbacks.clear();\n          destroyCallbacks.clear();\n\n          if (id) {\n            const elInstances = instances.get(element);\n            if (elInstances?.get(id) === this) {\n              MH.deleteKey(elInstances, id);\n              instances.prune(element);\n            }\n          }\n        })();\n      }\n\n      return destroyPromise;\n    };\n\n    this.onDestroy = (handler) => destroyCallbacks.add(wrapCallback(handler));\n\n    this.isDestroyed = () => isDestroyed;\n\n    this.getElement = () => element;\n  }\n}\n\nexport type WidgetCallbackArgs = [Widget];\nexport type WidgetCallback = Callback<WidgetCallbackArgs>;\nexport type WidgetHandler =\n  | WidgetCallback\n  | CallbackHandler<WidgetCallbackArgs>;\n\n/**\n * **NOTE:** If the function returns a widget or a list of widgets created for\n * the given element, then each one will be automatically destroyed if the\n * element is removed from the DOM.\n */\nexport type WidgetCreateFn<Config extends Record<string, unknown>> = (\n  element: Element,\n  config?: Config,\n) => Widget | Widget[] | null | Promise<Widget | Widget[] | null>;\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidatorObject<\n  Config extends Record<string, unknown>,\n> = {\n  [K in keyof Config]: (key: K, v: unknown) => Config[K];\n};\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigAsyncValidatorObject<\n  Config extends Record<string, unknown>,\n> = {\n  [K in keyof Config]: (key: K, v: unknown) => Config[K] | Promise<Config[K]>;\n};\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidatorFunc<Config extends Record<string, unknown>> =\n  (\n    element: Element,\n  ) =>\n    | WidgetConfigValidatorObject<Config>\n    | WidgetConfigAsyncValidatorObject<Config>;\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidator<Config extends Record<string, unknown>> =\n  | WidgetConfigValidatorObject<Config>\n  | WidgetConfigValidatorFunc<Config>;\n\n/**\n * Enables automatic setting up of a widget from an elements matching the given\n * selector.\n *\n * If {@link settings.autoWidgets} is true, nothing is done. Otherwise,\n * when an element matching the selector is added to the DOM, `newWidget` will\n * be called and it's expected to setup the widget.\n *\n * **IMPORTANT:** The widget that is returned by `newWidget` will be\n * automatically destroyed when the element that created them is removed from\n * the DOM.\n *\n * **IMPORTANT:** If a widget by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param name      The name of the widget. Should be in kebab-case.\n * @param newWidget Called for every element matching the widget selector.\n * @param configValidator\n *                  A validator object, or a function that returns such an\n *                  object, for all options supported by the widget. If\n *                  given, then the `newWidget` function will also be\n *                  passed a configuration object constructed from the\n *                  element's data attribute.\n * @param [options.selector]\n *                  The selector to match elements for. If not given, then\n *                  uses a default value of `[data-lisn-<name>], .lisn-<name>`\n * @param [options.supportsMultiple]\n *                  If true, and if `configValidator` is given, then the\n *                  value of the element's widget specific data attribute\n *                  will be split on \";\" and each one parsed individually\n *                  as a configuration. Then the `newWidget` function will\n *                  be called once for each configuration.\n */\nexport const registerWidget = async <Config extends Record<string, unknown>>(\n  name: string,\n  newWidget: WidgetCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n  options?: {\n    selector?: string;\n    supportsMultiple?: boolean;\n  },\n) => {\n  if (registeredWidgets.has(name)) {\n    return;\n  }\n\n  registeredWidgets.add(name);\n\n  // init after DOM loaded so that the settings can be configured by the user\n  // straight after loading LISN.js\n  await waitForInteractive();\n\n  const prefixedName = MH.prefixName(name);\n  const selector = options?.selector || getDefaultWidgetSelector(prefixedName);\n\n  if (settings.autoWidgets) {\n    const domWatcher = DOMWatcher.reuse();\n    domWatcher.onMutation(\n      async (operation) => {\n        const element = MH.currentTargetOf(operation);\n        const thisConfigValidator = MH.isFunction(configValidator)\n          ? await configValidator(element)\n          : configValidator;\n\n        const widgets: Widget[] = [];\n        const configSpecs: string[] = [];\n        const dataAttr = getData(element, prefixedName);\n\n        if (options?.supportsMultiple) {\n          if (hasClass(element, prefixedName)) {\n            configSpecs.push(\"\");\n          }\n\n          if (dataAttr !== null) {\n            configSpecs.push(\n              ...(dataAttr ? splitOn(dataAttr, \";\", true) : [\"\"]),\n            );\n          }\n        } else {\n          configSpecs.push(dataAttr ?? \"\");\n        }\n\n        for (const spec of configSpecs) {\n          const config = thisConfigValidator\n            ? await fetchWidgetConfig(spec, thisConfigValidator)\n            : undefined;\n\n          const theseWidgets = await newWidget(element, config);\n          if (theseWidgets) {\n            widgets.push(...toArrayIfSingle(theseWidgets));\n          }\n        }\n\n        // auto-destroy on element remove\n        if (MH.lengthOf(widgets)) {\n          domWatcher.onMutation(\n            () => {\n              for (const w of widgets) {\n                w.destroy();\n              }\n            },\n            {\n              target: element,\n              categories: [MC.S_REMOVED],\n            },\n          );\n        }\n      },\n      {\n        selector,\n        categories: [MC.S_ADDED],\n      },\n    );\n  }\n};\n\n/**\n * Returns a configuration object from the given user input, which can be\n * either an object or a `<separator>` separated string of key=values.\n *\n * If `input` is a string, it must be of the format:\n *\n * ```\n * <UserConfigString> ::= <OptionSpec> { <Separator> <OptionSpec> }\n *\n * <OptionSpec> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n * ```\n *\n * By default, for widgets `<separator>` is \"|\".\n *\n * **NOTE:** If `input` is a string, option names will be converted from\n * kebab-case to camelCase.\n *\n * The given `validator` defines the shape of the returned object. It is called\n * for each entry _in the `validator` object_, with that key and the\n * corresponding value from the input configuration, as the two parameters.\n *\n * If a key is not found in the input, the value passed to the validating\n * function will be `undefined`.\n *\n * If the input is a string and a key has no value, the value passed to the\n * validating function will be an empty string `\"\"`.\n *\n * The final configuration contains all keys from the `validator` object with\n * the value that the validating function for each key returned.\n *\n * There are several built-in validating functions that you can make use of.\n *\n * @see {@link Utils.validateStrList}\n * @see {@link Utils.validateNumber}\n * @see {@link Utils.validateBoolean}\n * @see {@link Utils.validateString}\n * @see {@link Utils.validateBooleanOrString}\n */\nexport const getWidgetConfig = <Config extends Record<string, unknown>>(\n  input: Record<string, unknown> | string | null | undefined,\n  validator: WidgetConfigValidatorObject<Config>,\n  separator = \"|\",\n): Config => {\n  const config = {} as Config;\n  if (!(input instanceof Object)) {\n    input = toOptionsObject(input, separator);\n  }\n\n  for (const key in validator) {\n    config[key] = validator[key](key, input[key]);\n  }\n  return config;\n};\n\n/**\n * Like {@link getWidgetConfig} but it accepts an object whose validator\n * functions may return a promise.\n */\nexport const fetchWidgetConfig = async <Config extends Record<string, unknown>>(\n  input: Record<string, unknown> | string | null | undefined,\n  validator: WidgetConfigAsyncValidatorObject<Config>,\n  separator = \"|\",\n): Promise<Config> => {\n  const config = {} as Config;\n  const configPromises = getWidgetConfig<{\n    [K in keyof Config]: Config[K] | Promise<Config[K]>;\n  }>(input, validator, separator);\n\n  for (const key in configPromises) {\n    config[key] = await configPromises[key];\n  }\n\n  return config;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultWidgetSelector = (prefix: string) =>\n  `.${prefix},[data-${prefix}]`;\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchUniqueWidget = async <W extends Widget>(\n  name: string,\n  element: Element,\n  Type: { get: (element: Element) => W | null },\n): Promise<W | null> => {\n  let widget = Type.get(element);\n  if (!widget) {\n    await waitForDelay(0); // in case it's being processed now\n    widget = Type.get(element);\n\n    if (!widget) {\n      logWarn(`No ${name} widget for element ${formatAsString(element)}`);\n      return null;\n    }\n  }\n\n  return widget;\n};\n\nconst instances = newXWeakMap<Element, Map<string, Widget>>(() => MH.newMap());\nconst registeredWidgets = MH.newSet<string>();\n\n// --------------------\n\nconst toOptionsObject = (\n  input: string | null | undefined,\n  separator: string,\n) => {\n  const options: Record<string, string> = {};\n  for (const entry of MH.filter(\n    splitOn(input ?? \"\", separator, true),\n    (v) => !MH.isEmpty(v),\n  )) {\n    const [key, value] = splitOn(entry, /\\s*=\\s*/, true, 1);\n    options[kebabToCamelCase(key)] = value ?? \"\";\n  }\n  return options;\n};\n","/**\n * @module Actions\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { splitOn } from \"@lisn/utils/text\";\n\nimport { WidgetConfigValidator, fetchWidgetConfig } from \"@lisn/widgets/widget\";\n\n/**\n * @interface\n */\nexport type Action = {\n  do: () => void;\n  undo: () => void;\n  toggle: () => void;\n};\n\nexport type ActionCreateFn<Config extends Record<string, unknown>> = (\n  element: Element,\n  args: string[],\n  config?: Config,\n) => Action | Promise<Action>;\n\n/**\n * Registers the given action so that it can be parsed by\n * {@link Triggers.registerTrigger}.\n *\n * **IMPORTANT:** If an action by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param name      The name of the action. Should be in kebab-case.\n * @param newAction Called for every action specification for a trigger\n *                  parsed by {@link Triggers.registerTrigger}\n */\nexport const registerAction = <Config extends Record<string, unknown>>(\n  name: string,\n  newAction: ActionCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  if (registeredActions.has(name)) {\n    return;\n  }\n\n  const newActionFromSpec = async (\n    element: Element,\n    argsAndOptions: string,\n  ) => {\n    const thisConfigValidator = MH.isFunction(configValidator)\n      ? await configValidator(element)\n      : configValidator;\n\n    const args: string[] = [];\n    const config = thisConfigValidator\n      ? await fetchWidgetConfig(argsAndOptions, thisConfigValidator, \",\")\n      : undefined;\n\n    for (const entry of splitOn(argsAndOptions, \",\", true)) {\n      if (entry) {\n        if (!MH.includes(entry, \"=\")) {\n          args.push(entry);\n        }\n      }\n    }\n\n    return newAction(element, args, config);\n  };\n\n  registeredActions.set(name, newActionFromSpec);\n};\n\n/**\n * Returns an {@link Action} registered under the given name and instantiated\n * with the given element and arguments and options parsed from the given string.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given spec is not valid.\n */\nexport const fetchAction = async (\n  element: Element,\n  name: string,\n  argsAndOptions?: string,\n): Promise<Action> => {\n  const newActionFromSpec = registeredActions.get(name);\n  if (!newActionFromSpec) {\n    throw MH.usageError(`Unknown action '${name}'`);\n  }\n\n  return await newActionFromSpec(element, argsAndOptions ?? \"\");\n};\n\n// --------------------\n\nconst registeredActions = MH.newMap<\n  string,\n  (element: Element, spec: string) => Action | Promise<Action>\n>();\n","/**\n * @module Actions\n *\n * @categoryDescription Adding/removing class\n * {@link AddClass} and {@link RemoveClass} add or remove a list of CSS classes\n * to/from the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  addClasses,\n  removeClasses,\n  toggleClasses,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Adds or removes a list of CSS classes to/from the given element.\n *\n * **IMPORTANT:** When constructed, it removes all given classes from the\n * element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"add-class\".\n * - Accepted string arguments: one or more CSS classes\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@add-class: clsA, clsB\"></div>\n * ```\n *\n * @category Adding/removing class\n */\nexport class AddClass implements Action {\n  /**\n   * Adds the classes given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Removes the classes given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles each class given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"add-class\",\n      (element, classNames) => new AddClass(element, ...classNames),\n    );\n  }\n\n  constructor(element: Element, ...classNames: string[]) {\n    const { _add, _remove, _toggle } = getMethods(element, classNames);\n    _remove(); // initial state\n\n    this.do = _add;\n    this.undo = _remove;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Removes or adds a list of CSS classes to/from the given element.\n *\n * **IMPORTANT:** When constructed, it adds all given classes from the element\n * as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"remove-class\".\n * - Accepted string arguments: one or more CSS classes\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@remove-class: clsA, clsB\"></div>\n * ```\n *\n * @category Adding/removing class\n */\nexport class RemoveClass implements Action {\n  /**\n   * Removes the classes given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Adds the classes given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles each class given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"remove-class\",\n      (element, classNames) => new RemoveClass(element, ...classNames),\n    );\n  }\n\n  constructor(element: Element, ...classNames: string[]) {\n    const { _add, _remove, _toggle } = getMethods(element, classNames);\n    _add(); // initial state\n\n    this.do = _remove;\n    this.undo = _add;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element, classNames: string[]) => {\n  return {\n    _add: () => addClasses(element, ...classNames),\n    _remove: () => removeClasses(element, ...classNames),\n    _toggle: () => toggleClasses(element, ...classNames),\n  };\n};\n","/**\n * @module Actions\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  iterateAnimations,\n  resetCssAnimationsNow,\n} from \"@lisn/utils/animations\";\nimport {\n  hasClass,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n} from \"@lisn/utils/css-alter\";\nimport { isPageReady, waitForPageReady } from \"@lisn/utils/dom-events\";\nimport { formatAsString } from \"@lisn/utils/text\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport debug from \"@lisn/debug/debug\";\nimport { LoggerInterface } from \"@lisn/debug/types\";\n\n/**\n * Plays or reverses all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it resets and pauses the animations as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@animate\"></div>\n * ```\n *\n * @category Animation\n */\nexport class Animate implements Action {\n  /**\n   * (Re)plays the animations forwards.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * (Re)plays the animations backwards.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Reverses the animations from its current direction.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate\", (element) => new Animate(element));\n  }\n\n  constructor(element: Element) {\n    const logger = debug\n      ? new debug.Logger({\n          name: `Animate-${formatAsString(element)}`,\n        })\n      : null;\n\n    // initial state is 0% and paused\n    animate(element, GO_FORWARD, logger, true);\n    let isFirst = true;\n\n    this.do = () => animate(element, GO_FORWARD, logger);\n    this.undo = () => animate(element, GO_BACKWARD, logger);\n    this[MC.S_TOGGLE] = () => {\n      const res = animate(element, isFirst ? GO_FORWARD : GO_TOGGLE, logger);\n      isFirst = false;\n      return res;\n    };\n  }\n}\n\n// --------------------\n\ntype AnimateDirection =\n  | typeof GO_FORWARD\n  | typeof GO_BACKWARD\n  | typeof GO_TOGGLE;\n\nconst GO_FORWARD = 0;\nconst GO_BACKWARD = 1;\nconst GO_TOGGLE = 2;\n\nconst animate = (\n  element: Element,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial = false,\n) => {\n  debug: logger?.debug8(\"Animating element\");\n  return iterateAnimations(\n    element,\n    /* istanbul ignore next */ // jsdom doesn't support Web Animations\n    (animation) => setupAnimation(animation, direction, logger, isInitial),\n    (element) => setupAnimationLegacy(element, direction, logger, isInitial),\n    isInitial,\n  );\n};\n\n/* istanbul ignore next */ // jsdom doesn't support Web Animations\nconst setupAnimation = (\n  animation: Animation,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  const pauseTillReady = !isPageReady();\n  const isBackward = animation.playbackRate === -1;\n\n  debug: logger?.debug9(\"Setting up animation\", animation, {\n    direction,\n    isBackward,\n  });\n\n  if (\n    direction === GO_TOGGLE ||\n    (direction === GO_FORWARD && isBackward) ||\n    (direction === GO_BACKWARD && !isBackward)\n  ) {\n    debug: logger?.debug9(\"Reversing animation\", animation.playState);\n    animation.reverse();\n  } else if (animation.playState === \"paused\") {\n    debug: logger?.debug9(\"Playing animation\", animation.playState);\n    animation.play();\n  } else {\n    debug: logger?.debug9(\n      \"Animation has played or is playing already\",\n      animation.playState,\n    );\n  }\n\n  if (isInitial || pauseTillReady) {\n    debug: logger?.debug9(\"Pausing animation\", animation.playState);\n    animation.pause();\n\n    if (!isInitial) {\n      // we were only pausing until ready\n      /* istanbul ignore next */\n      waitForPageReady().then(() => {\n        debug: logger?.debug9(\"Restarting animation\", animation.playState);\n        animation.play();\n      });\n    }\n  }\n\n  // If the element is moved (including if wrapped, such as by the ViewTrigger),\n  // this will cancel CSS animations and replace them with new running ones\n  if (MH.isInstanceOf(animation, CSSAnimation)) {\n    const cancelHandler = (event: AnimationPlaybackEvent) =>\n      onAnimationCancel(event, animation, direction, logger, isInitial);\n\n    animation.addEventListener(MC.S_CANCEL, cancelHandler);\n    animation.addEventListener(\"finish\", () =>\n      animation.removeEventListener(MC.S_CANCEL, cancelHandler),\n    );\n  }\n};\n\n/* istanbul ignore next */ // jsdom doesn't support Web Animations\nconst onAnimationCancel = (\n  event: AnimationPlaybackEvent,\n  animation: CSSAnimation,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  // setup again the new animation\n  debug: logger?.debug9(\"Animation cancelled, re-setting up new one\");\n  const target = MH.targetOf(event);\n  if (!MH.isInstanceOf(target, Animation)) {\n    return;\n  }\n\n  const effect = target.effect;\n  if (!MH.isInstanceOf(effect, KeyframeEffect)) {\n    return;\n  }\n\n  for (const newAnimation of MH.targetOf(effect)?.getAnimations() || []) {\n    if (\n      MH.isInstanceOf(newAnimation, CSSAnimation) &&\n      newAnimation.animationName === animation.animationName\n    ) {\n      setupAnimation(newAnimation, direction, logger, isInitial);\n      break;\n    }\n  }\n};\n\nconst setupAnimationLegacy = (\n  element: Element,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  const isBackward = hasClass(element, MC.PREFIX_ANIMATE_REVERSE);\n  const isPaused = hasClass(element, MC.PREFIX_ANIMATE_PAUSE);\n\n  const pauseTillReady = !isPageReady();\n\n  const goBackwards =\n    direction === GO_BACKWARD || (direction === GO_TOGGLE && !isBackward);\n\n  const doPause = isInitial || pauseTillReady;\n\n  debug: logger?.debug9(\"Setting up legacy animations\", element, {\n    direction,\n    isBackward,\n    isPaused,\n    goBackwards,\n    doPause,\n  });\n\n  if (goBackwards === isBackward && doPause === isPaused) {\n    // nothing to do\n    debug: logger?.debug9(\"No need to reset or pause animation\");\n    return;\n  }\n\n  resetCssAnimationsNow(element);\n\n  removeClassesNow(element, MC.PREFIX_ANIMATE_PAUSE, MC.PREFIX_ANIMATE_REVERSE);\n  addClassesNow(\n    element,\n    ...(goBackwards ? [MC.PREFIX_ANIMATE_REVERSE] : []),\n    ...(doPause ? [MC.PREFIX_ANIMATE_PAUSE] : []),\n  );\n\n  if (!isInitial && pauseTillReady) {\n    waitForPageReady().then(() =>\n      removeClasses(element, MC.PREFIX_ANIMATE_PAUSE),\n    );\n  }\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Animation\n * {@link AnimatePlay} and {@link AnimatePause} resume or pause all animations\n * on the given element. They work with CSS or Web Animations.\n *\n * {@link Actions.Animate | Animate} plays or reverses all animations on the\n * given element. It works with CSS or Web Animations.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  iterateAnimations,\n  resetCssAnimationsNow,\n} from \"@lisn/utils/animations\";\nimport {\n  hasClass,\n  addClassesNow,\n  removeClassesNow,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Resumes or pauses all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it resets and pauses the animations as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate-play\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Play/pause</button>\n * <div data-lisn-on-click=\"@animate-play +target=#btn\"></div>\n * ```\n *\n * @category Animation\n */\nexport class AnimatePlay implements Action {\n  /**\n   * Resumes the animations without resetting them.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Pauses the animations without resetting them.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Resumes the animations if paused, otherwise pauses them.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate-play\", (element) => new AnimatePlay(element));\n  }\n\n  constructor(element: Element) {\n    const { _play, _pause, _toggle } = getMethods(element);\n\n    // initial state is 0% and paused\n    animate(element, PAUSE, true);\n\n    this.do = _play;\n    this.undo = _pause;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Pauses or resumes all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it plays the animations as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate-pause\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Play/pause</button>\n * <div data-lisn-on-click=\"@animate-pause +target=#btn\"></div>\n * ```\n *\n * @category Animation\n */\nexport class AnimatePause implements Action {\n  /**\n   * Pauses the animations without resetting them.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Resumes the animations without resetting them.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Resumes the animations if paused, otherwise pauses them.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate-pause\", (element) => new AnimatePause(element));\n  }\n\n  constructor(element: Element) {\n    const { _play, _pause, _toggle } = getMethods(element);\n\n    // Initial state is playing\n    _play();\n\n    this.do = _pause;\n    this.undo = _play;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\ntype AnimateAction = typeof PLAY | typeof PAUSE | typeof TOGGLE;\n\nconst PLAY = 0;\nconst PAUSE = 1;\nconst TOGGLE = 2;\n\nconst getMethods = (element: Element) => {\n  return {\n    _play: () => animate(element, PLAY),\n    _pause: () => animate(element, PAUSE),\n    _toggle: () => animate(element, TOGGLE),\n  };\n};\n\nconst animate = (\n  element: Element,\n  action: AnimateAction,\n  isInitial = false,\n) => {\n  return iterateAnimations(\n    element,\n    /* istanbul ignore next */ // jsdom doesn't support Web Animations\n    (animation) => {\n      const isPaused = animation.playState === \"paused\";\n      if (action === PLAY || (isPaused && action === TOGGLE)) {\n        animation.play();\n      } else {\n        animation.pause();\n      }\n    },\n    (element) => {\n      if (isInitial) {\n        resetCssAnimationsNow(element);\n      }\n\n      const isPaused = hasClass(element, MC.PREFIX_ANIMATE_PAUSE);\n      if (action === PLAY || (isPaused && action === TOGGLE)) {\n        removeClassesNow(element, MC.PREFIX_ANIMATE_PAUSE);\n      } else {\n        addClassesNow(element, MC.PREFIX_ANIMATE_PAUSE);\n      }\n    },\n    isInitial,\n  );\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Showing/hiding elements\n * {@link Display} and {@link Undisplay} displays or \"undisplays\" (display:\n * none) the given element.\n *\n * {@link Actions.Show | Show} and {@link Actions.Hide | Hide} show or hide the\n * given element with a smooth fading transition.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  displayElement,\n  displayElementNow,\n  undisplayElement,\n  undisplayElementNow,\n  toggleDisplayElement,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Displays or \"undisplays\" (display: none) the given element.\n *\n * **IMPORTANT:** When constructed, it adds `display: none` to the element as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"display\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Display/undisplay</button>\n * <div data-lisn-on-click=\"@display +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Display implements Action {\n  /**\n   * It reverts the element to its original `display` property.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Sets `display: none` on the element.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Displays the element if it's \"undisplayed\", otherwise \"undisplays\" it.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"display\", (element) => new Display(element));\n  }\n\n  constructor(element: Element) {\n    undisplayElementNow(element); // initial state\n\n    const { _display, _undisplay, _toggle } = getMethods(element);\n    this.do = _display;\n    this.undo = _undisplay;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * \"Undisplays\" (display: none) or displays the given element.\n *\n * **IMPORTANT:** When constructed, it removes the `lisn-undisplay` class if\n * present on the element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"undisplay\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Display/undisplay</button>\n * <div data-lisn-on-click=\"@undisplay +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Undisplay implements Action {\n  /**\n   * Sets `display: none` on the element.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * It reverts the element to its original `display` property.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Displays the element if it's \"undisplayed\", otherwise \"undisplays\" it.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"undisplay\", (element) => new Undisplay(element));\n  }\n\n  constructor(element: Element) {\n    displayElementNow(element); // initial state\n\n    const { _display, _undisplay, _toggle } = getMethods(element);\n    this.do = _undisplay;\n    this.undo = _display;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  return {\n    _display: async () => {\n      await displayElement(element); // ignore return val\n    },\n\n    _undisplay: async () => {\n      await undisplayElement(element); // ignore return val\n    },\n\n    _toggle: async () => {\n      await toggleDisplayElement(element); // ignore return val\n    },\n  };\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Searching for reference elements\n * The functions allow you to find elements that match a given string\n * specification.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { logError } from \"@lisn/utils/log\";\n\n/**\n * Get the element that matches the given reference specification.\n *\n * The specification is of the form:\n *\n * ```\n * <FullSpec> ::=\n *     <Relation> \".\" <ClassName>  |\n *     <Relation> [\"-\" <ReferenceName>] |\n *     #<DOM_ID>\n *\n * <Relation> :==\n *     \"next\"  |\n *     \"prev\"  |\n *     \"this\"  |\n *     \"first\" |\n *     \"last\"\n * ```\n *\n * - `<DOM_ID>` is the unique ID of the element\n * - `<ClassName>` is a CSS class on the element\n * - `<ReferenceName>` is the value of the `data-lisn-ref` attribute on the\n *   element you are targeting. If not given, defaults to the value of the\n *   `data-lisn-ref` attribute on `thisElement`.\n *\n * There now follows an explanation of how \"next\", \"prev\", \"this\", \"first\" and\n * \"last\" search the DOM:\n * - \"next\": the tree is search in document order (depth first, then breadth),\n *   so the returned element could be a descendant of `thisElement`\n * - \"prev\": the tree is search in document order (depth first, then breadth),\n *   but excluding ancestors of `thisElement`, so the returned element is\n *   guaranteed to _not_ be an ancestor or descendant of `thisElement`.\n * - \"this\": if the given element itself matches the specification, it is\n *   returned, otherwise the closest ancestor of the given element that matches\n *   the specification\n * - \"first\": the first element matching; the tree is search in document order\n *   (depth first, then breadth).\n * - \"last\": the last element matching; the tree is search in document order\n *   (depth first, then breadth).\n *\n * @category DOM: Searching for reference elements\n *\n * @param thisElement The element to search relative to\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                        If the specification is invalid or if thisElement is\n *                        not given for a specification of \"next\", \"prev\" or \"this\"\n */\nexport const getReferenceElement = (\n  spec: string,\n  thisElement: Element,\n): Element | null => {\n  if (!spec) {\n    return thisElement;\n  }\n\n  if (spec[0] === \"#\") {\n    // element ID\n    const referenceElement = MH.getElementById(spec.slice(1));\n    if (!referenceElement) {\n      return null;\n    }\n    return referenceElement;\n  }\n\n  const relation = [\"next\", \"prev\", \"this\", \"first\", \"last\"].find(\n    (p) => spec.startsWith(`${p}.`) || spec.startsWith(`${p}-`) || spec === p,\n  );\n\n  if (!relation) {\n    throw MH.usageError(`Invalid search specification '${spec}'`);\n  }\n\n  const rest = spec.slice(MH.lengthOf(relation));\n  const matchOp = rest.slice(0, 1);\n  let refOrCls = rest.slice(1);\n\n  let selector: string;\n  if (matchOp === \".\") {\n    selector = matchOp + refOrCls;\n  } else {\n    if (!refOrCls) {\n      refOrCls = getData(thisElement, PREFIX_REF) ?? \"\";\n    }\n\n    if (!refOrCls) {\n      throw MH.usageError(`No reference name in '${spec}'`);\n    }\n\n    selector = `[${DATA_REF}=\"${refOrCls}\"]`;\n  }\n\n  let referenceElement;\n  if (relation === \"first\") {\n    referenceElement = getFirstReferenceElement(selector);\n  } else if (relation === \"last\") {\n    referenceElement = getLastReferenceElement(selector);\n  } else {\n    if (relation === \"this\") {\n      referenceElement = getThisReferenceElement(selector, thisElement);\n    } else if (relation === \"next\") {\n      referenceElement = getNextReferenceElement(selector, thisElement);\n    } else if (relation === \"prev\") {\n      referenceElement = getPrevReferenceElement(selector, thisElement);\n    } else {\n      /* istanbul ignore next */ {\n        logError(MH.bugError(`Unhandled relation case ${relation}`));\n        return null;\n      }\n    }\n  }\n\n  if (!referenceElement) {\n    return null;\n  }\n\n  return referenceElement;\n};\n\n/**\n * Like {@link getReferenceElement} excepts if no element matches the\n * specification if will wait for at most the given time for such an element.\n *\n * @category DOM: Searching for reference elements\n */\nexport const waitForReferenceElement = (\n  spec: string,\n  thisElement: Element,\n  timeout = 200,\n) => waitForElement(() => getReferenceElement(spec, thisElement), timeout);\n\n// ----------------------------------------\n\nconst PREFIX_REF = MH.prefixName(\"ref\");\nconst DATA_REF = MH.prefixData(PREFIX_REF);\n\nconst getAllReferenceElements = (\n  selector: string,\n): NodeListOf<Element> | null => MH.docQuerySelectorAll(selector);\n\nconst getFirstReferenceElement = (selector: string): Element | null =>\n  MH.docQuerySelector(selector);\n\nconst getLastReferenceElement = (selector: string): Element | null => {\n  const allRefs = getAllReferenceElements(selector);\n  return (allRefs && allRefs[MH.lengthOf(allRefs) - 1]) || null;\n};\n\nconst getThisReferenceElement = (\n  selector: string,\n  thisElement: Element,\n): Element | null => thisElement.closest(selector);\n\nconst getNextReferenceElement = (selector: string, thisElement: Element) =>\n  getNextOrPrevReferenceElement(selector, thisElement, false);\n\nconst getPrevReferenceElement = (selector: string, thisElement: Element) =>\n  getNextOrPrevReferenceElement(selector, thisElement, true);\n\nconst getNextOrPrevReferenceElement = (\n  selector: string,\n  thisElement: Element,\n  goBackward: boolean,\n): Element | null => {\n  thisElement = getThisReferenceElement(selector, thisElement) ?? thisElement;\n\n  if (!MH.getDoc().contains(thisElement)) {\n    return null;\n  }\n\n  const allRefs = getAllReferenceElements(selector);\n  if (!allRefs) {\n    return null;\n  }\n\n  const numRefs = MH.lengthOf(allRefs);\n  let refIndex = goBackward ? numRefs - 1 : -1;\n  for (let i = 0; i < numRefs; i++) {\n    const currentIsAfter = MH.isNodeBAfterA(thisElement, allRefs[i]);\n\n    // As soon as we find either the starting element or the first element\n    // that follows it, stop iteration.\n    // - If we're looking for the previous reference, then take the previous\n    //   element in the iteration.\n    // - Otherwise, if the current element in the iteration is the same as the\n    //   starting one, then take either the next element in the iteration.\n    //   - Otherwise, (if the current element follows the starting one, as\n    //     would happen if the starting element was not in the list of matched\n    //     elements, take the current element in the iteration.\n    if (allRefs[i] === thisElement || currentIsAfter) {\n      refIndex = i + (goBackward ? -1 : currentIsAfter ? 0 : 1);\n      break;\n    }\n  }\n\n  return allRefs[refIndex] ?? null;\n};\n","/**\n * ## Specification for the HTML API for triggers\n *\n * The following describes the general syntax when using the HTML API and\n * automatic widgets\n * ({@link Settings.settings.autoWidgets | settings.autoWidgets} is true)\n * specifically for triggers and actions.\n *\n * A trigger specification should be given as a\n * `data-lisn-on-<TriggerName>=\"<TriggerSpecList>\"` attribute.\n * A fallback option of using a CSS class of the form\n * `lisn-on-<TriggerName>--<TriggerSpec>` is also supported but not recommended.\n *\n * The general specification for a trigger is of the form:\n *\n * ```\n * <TriggerSpecList> ::= <TriggerSpec> { \";\" <TriggerSpec> }\n *\n * <TriggerSpec> ::= [ <TriggerArg> { \",\" <TriggerArg> } ]\n *                   \"@\" <ActionSpec> { \"@\" <ActionSpec> }\n *                   { \"+\" <TriggerOption> }\n *\n * <TriggerOption> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n *\n * <ActionSpec> ::= <ActionName> [ \":\" <ActionArgOrOption> { \",\" <ActionArgOrOption> } ]\n *\n * <ActionArgOrOption> ::= <ActionArg> | <OptionName> \"=\" <OptionValue>\n * ```\n *\n * where `<TriggerArg>` is the particular trigger's main argument, which could\n * be required or optional (and not all triggers accept an argument). See each\n * trigger's specification for their arguments and options.\n *\n * Also refer to each action for their accepted arguments and/or options if any.\n *\n * **NOTE:**\n *\n * There can be 0 or more spaces around any of the separator characters.\n *\n * At least one action (with a preceding \"@\" character) is always required.\n *\n * The characters \";\", \",\", \"=\", \"@\", \"+\" and \":\" are reserved separators and\n * cannot be used literally as part of an argument or option value.\n *\n * @module Triggers\n *\n * @categoryDescription Manual run\n * {@link Trigger} is the base trigger class that you can extend when building\n * custom triggers and it also registers a trigger that needs to be run\n * manually (by e.g. the {@link Actions.Run | Run} action).\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString, randId, splitOn } from \"@lisn/utils/text\";\nimport {\n  validateString,\n  validateNumber,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { Action, fetchAction } from \"@lisn/actions/action\";\n\nimport {\n  Widget,\n  WidgetConfigValidator,\n  WidgetConfigValidatorFunc,\n  WidgetConfigAsyncValidatorObject,\n  registerWidget,\n  fetchWidgetConfig,\n} from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link Trigger} is the base trigger class that you can extend when building\n * custom triggers and it also registers a trigger that needs to be run\n * manually (by e.g. the {@link Actions.Run | Run} action).\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * @example\n * Show the element 1000ms after the first time the trigger is run.\n *\n * ```html\n * <div data-lisn-on-run=\"@show +once +delay=1000\"></div>\n * ```\n *\n * @category Manual run\n */\nexport class Trigger extends Widget {\n  /**\n   * \"Do\"es all the {@link Action}s linked to the trigger.\n   */\n  readonly run: () => Promise<void>;\n\n  /**\n   * \"Undo\"es all the {@link Action}s linked to the trigger.\n   */\n  readonly reverse: () => Promise<void>;\n\n  /**\n   * \"Toggle\"s all the {@link Action}s linked to the trigger.\n   */\n  readonly toggle: () => Promise<void>;\n\n  /**\n   * Returns the trigger's actions.\n   */\n  readonly getActions: () => Action[];\n\n  /**\n   * Returns the trigger config.\n   */\n  readonly getConfig: () => TriggerConfig;\n\n  static get(element: Element, id: string): Trigger | null {\n    const instance = super.get(element, id);\n    if (MH.isInstanceOf(instance, Trigger)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerTrigger(\n      \"run\",\n      (element, a, actions, config) => new Trigger(element, actions, config),\n      {},\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config?: TriggerConfig) {\n    super(element, config);\n\n    const logger = debug\n      ? new debug.Logger({\n          name: `Trigger-${formatAsString(element)}`,\n          logAtCreation: { actions, config },\n        })\n      : null;\n\n    const once = config?.once ?? false;\n    const oneWay = config?.oneWay ?? false;\n    const delay = config?.delay ?? 0;\n    const doDelay = config?.doDelay ?? delay;\n    const undoDelay = config?.undoDelay ?? delay;\n\n    let lastCallId: string;\n    // false if next should be do; true if next should be undo.\n    // Used for determining delays only.\n    let toggleState = false;\n\n    const callActions = async (\n      delay: number,\n      callFn: (action: Action) => void,\n      newToggleState: boolean,\n    ) => {\n      if (this.isDisabled()) {\n        return;\n      }\n\n      const myCallId = randId();\n      lastCallId = myCallId;\n      debug: logger?.debug10(\n        `callActions [${myCallId}] (new toggle state ${newToggleState})`,\n        callFn,\n      );\n\n      if (delay) {\n        await waitForDelay(delay);\n        if (lastCallId !== myCallId) {\n          // overriden by subsequent call\n          debug: logger?.debug10(\n            `callActions [${myCallId}]: overriden by ${lastCallId}`,\n          );\n          return;\n        }\n      }\n\n      for (const action of actions) {\n        debug: logger?.debug10(`callActions [${myCallId}]`, action);\n        callFn(action);\n      }\n\n      toggleState = newToggleState;\n\n      if (toggleState && once) {\n        this.destroy();\n      }\n    };\n\n    const run = wrapCallback(() => {\n      callActions(\n        doDelay,\n        (action) => {\n          action.do();\n        },\n        true,\n      ); // don't await\n    });\n\n    const reverse = wrapCallback(() => {\n      if (!oneWay) {\n        callActions(\n          undoDelay,\n          (action) => {\n            action.undo();\n          },\n          false,\n        ); // don't await\n      }\n    });\n\n    const toggle = wrapCallback(() => {\n      callActions(\n        toggleState ? undoDelay : doDelay,\n        (action) => {\n          action[MC.S_TOGGLE]();\n        },\n        !toggleState,\n      ); // don't await\n    });\n\n    // ----------\n\n    this.onDestroy(() => {\n      debug: logger?.debug5(\"Removing callbacks\");\n      MH.remove(run);\n      MH.remove(reverse);\n      MH.remove(toggle);\n    });\n\n    this.run = run.invoke;\n    this.reverse = reverse.invoke;\n    this[MC.S_TOGGLE] = oneWay ? run.invoke : toggle.invoke;\n    this.getActions = () => [...actions]; // copy\n    this.getConfig = () => MH.copyObject(config);\n  }\n}\n\n/**\n * @interface\n */\nexport type TriggerConfig = {\n  /**\n   * An ID for the trigger so that it can be looked up by ID. It has to be\n   * unique for each element, but you can use the same ID on different\n   * elements.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * If true, the trigger will run at most once. This will result in the `run`\n   * or `toggle` methods removing all three of `run`, `reverse` and `toggle`\n   * when called, so that the actions are done at most once.\n   *\n   * @defaultValue false\n   */\n  once?: boolean;\n\n  /**\n   * If true, then the `reverse` method of the trigger will do nothing and the\n   * `toggle` method will always do the actions, i.e. will be equivalent to\n   * `run`.\n   *\n   * @defaultValue false\n   */\n  oneWay?: boolean;\n\n  /**\n   * Delay in milliseconds before doing, undoing or toggling actions.\n   *\n   * @defaultValue 0\n   */\n  delay?: number;\n\n  /**\n   * Delay in milliseconds before doing actions.\n   *\n   * @defaultValue {@link TriggerConfig.delay}\n   */\n  doDelay?: number;\n\n  /**\n   * Delay in milliseconds before undoing actions.\n   *\n   * @defaultValue {@link TriggerConfig.delay}\n   */\n  undoDelay?: number;\n\n  /**\n   * The element to instantiate all actions on this trigger for.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  actOn?: Element;\n};\n\nexport type TriggerCreateFn<Config extends TriggerConfig> = (\n  element: Element,\n  args: string[],\n  actions: Action[],\n  config: Config,\n) => Trigger | Promise<Trigger>;\n\n/**\n * Registers the given trigger as a widget to be automatically configured for\n * all elements that have a trigger specification with the given name.\n *\n * A trigger specification can be given as a\n * `data-lisn-on-<TriggerName>=\"<TriggerSpec> { \";\" <TriggerSpec> }\"` attribute\n * or as one or more `lisn-on-<TriggerName>--<TriggerSpec>` classes.\n *\n * See the top of the {@link Triggers} page for an explanation of `<TriggerSpec>`.\n *\n * Using classes instead of attributes is not recommended and only available as\n * a fallback option.\n *\n * **IMPORTANT:** If a trigger by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param name       The name of the trigger. Should be in kebab-case.\n * @param newTrigger Called for every trigger specification on any element\n *                   that has one or more trigger specifications.\n * @param configValidator\n *                   A validator object, or a function that returns such an\n *                   object, for all options that are specific to the\n *                   trigger. Base options (in {@link TriggerConfig}) will\n *                   be parsed automatically and don't need to be handled by\n *                   `configValidator`.\n *                   If the parameter is a function, it will be called with\n *                   the element on which the trigger is being defined.\n *\n * @see {@link registerWidget}\n */\nexport const registerTrigger = <Config extends TriggerConfig = TriggerConfig>(\n  name: string,\n  newTrigger: TriggerCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  const clsPref = MH.prefixName(`on-${name}`);\n\n  const newWidget = async (element: Element) => {\n    const widgets: Widget[] = [];\n    const baseConfigValidator = newBaseConfigValidator(element);\n    const thisConfigValidator = MH.isFunction(configValidator)\n      ? await configValidator(element)\n      : configValidator;\n\n    const allSpecs = splitOn(\n      getData(element, MH.prefixName(`on-${name}`)) ?? \"\",\n      TRIGGER_SEP,\n      true,\n    );\n\n    for (const cls of MH.classList(element)) {\n      if (cls.startsWith(`${clsPref}--`)) {\n        allSpecs.push(cls.slice(MH.lengthOf(clsPref) + 2));\n      }\n    }\n\n    for (const spec of allSpecs) {\n      const [tmp, configSpec] = splitOn(spec, OPTION_PREF_CHAR, true, 1);\n      const [argSpec, allActionSpecs] = splitOn(tmp, ACTION_PREF_CHAR, true, 1);\n\n      const args = MH.filterBlank(splitOn(argSpec, \",\", true)) || [];\n\n      const config = await fetchWidgetConfig(\n        configSpec,\n        MH.assign(\n          baseConfigValidator,\n          thisConfigValidator,\n        ) as WidgetConfigAsyncValidatorObject<Required<TriggerConfig> & Config>,\n        OPTION_PREF_CHAR,\n      );\n\n      const actionTarget = config.actOn ?? element;\n\n      const actions = [];\n      for (const actionSpec of splitOn(\n        allActionSpecs ?? \"\",\n        ACTION_PREF_CHAR,\n        true,\n      )) {\n        const [name, actionArgsAndOptions] = splitOn(\n          actionSpec,\n          ACTION_ARGS_PREF_CHAR,\n          true,\n          1,\n        );\n\n        try {\n          actions.push(\n            await fetchAction(actionTarget, name, actionArgsAndOptions ?? \"\"),\n          );\n        } catch (err) {\n          if (MH.isInstanceOf(err, LisnUsageError)) {\n            // fetchAction would have logged an error\n            continue;\n          }\n\n          throw err;\n        }\n      }\n\n      widgets.push(await newTrigger(element, args, actions, config));\n    }\n\n    return widgets;\n  };\n\n  registerWidget(name, newWidget, null, {\n    selector: `[class^=\"${clsPref}--\"],[class*=\" ${clsPref}--\"],[data-${clsPref}]`,\n  });\n};\n\n// --------------------\n\nconst TRIGGER_SEP = \";\";\nconst OPTION_PREF_CHAR = \"+\";\nconst ACTION_PREF_CHAR = \"@\";\nconst ACTION_ARGS_PREF_CHAR = \":\";\n\nconst newBaseConfigValidator: WidgetConfigValidatorFunc<TriggerConfig> = (\n  element,\n) => {\n  return {\n    id: validateString,\n    once: validateBoolean,\n    oneWay: validateBoolean,\n    delay: validateNumber,\n    doDelay: validateNumber,\n    undoDelay: validateNumber,\n    actOn: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling triggers\n * {@link Enable} and {@link Disable} enable or disable a list of triggers\n * defined on the given element.\n *\n * {@link Run} runs or reverses a list of triggers defined on the given\n * element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logWarn } from \"@lisn/utils/log\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString } from \"@lisn/utils/text\";\n\nimport { Trigger } from \"@lisn/triggers/trigger\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Enables or disables a list of triggers defined on the given element.\n *\n * **IMPORTANT:** When constructed, it disables all given triggers as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"enable\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button id=\"btn\">Enable/disable</button>\n * <button data-lisn-on-click=\"\n *         @enable=triggerA,triggerB +target=#btn\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-click=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Enable implements Action {\n  /**\n   * Enables the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Disables the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the enabled state on each trigger given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"enable\", (element, ids) => new Enable(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _enable, _disable, _toggleEnable } = getMethods(element, ids);\n    _disable(); // initial state\n\n    this.do = _enable;\n    this.undo = _disable;\n    this[MC.S_TOGGLE] = _toggleEnable;\n  }\n}\n\n/**\n * Disables or enables a list of triggers defined on the given element.\n *\n * **IMPORTANT:** When constructed, it enables all given triggers as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"disable\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button id=\"btn\">Enable/disable</button>\n * <button data-lisn-on-click=\"\n *         @disable=triggerA,triggerB +target=#btn\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-click=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Disable implements Action {\n  /**\n   * Disables the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Enables the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the enabled state on each trigger given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"disable\", (element, ids) => new Disable(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _enable, _disable, _toggleEnable } = getMethods(element, ids);\n    _enable(); // initial state\n\n    this.do = _disable;\n    this.undo = _enable;\n    this[MC.S_TOGGLE] = _toggleEnable;\n  }\n}\n\n/**\n * Runs or reverses a list of triggers defined on the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"run\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button data-lisn-on-click=\"\n *         @run=triggerA,triggerB\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-run=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Run implements Action {\n  /**\n   * Runs the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Reverses the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the triggers with IDs given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"run\", (element, ids) => new Run(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _run, _reverse, _toggle } = getMethods(element, ids);\n\n    this.do = _run;\n    this.undo = _reverse;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element, ids: string[]) => {\n  const triggerPromises = getTriggers(element, ids);\n  const call = async (\n    method:\n      | \"enable\"\n      | \"disable\"\n      | \"toggleEnable\"\n      | \"run\"\n      | \"reverse\"\n      | \"toggle\",\n  ) => {\n    const triggers = await triggerPromises;\n    for (const trigger of triggers) {\n      trigger[method]();\n    }\n  };\n\n  return {\n    _enable: () => call(\"enable\"),\n    _disable: () => call(\"disable\"),\n    _toggleEnable: () => call(\"toggleEnable\"),\n    _run: () => call(\"run\"),\n    _reverse: () => call(\"reverse\"),\n    _toggle: () => call(MC.S_TOGGLE),\n  };\n};\n\nconst getTriggers = async (element: Element, ids: string[]) => {\n  const triggers: Trigger[] = [];\n  if (!MH.lengthOf(ids)) {\n    logWarn(\"At least 1 ID is required for enable action\");\n    return triggers;\n  }\n\n  for (const id of ids) {\n    let trigger = Trigger.get(element, id);\n    if (!trigger) {\n      await waitForDelay(0); // in case it's being processed now\n      trigger = Trigger.get(element, id);\n\n      if (!trigger) {\n        logWarn(\n          `No trigger with ID ${id} for element ${formatAsString(element)}`,\n        );\n        continue;\n      }\n    }\n\n    triggers.push(trigger);\n  }\n\n  return triggers;\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Scrolling\n * {@link ScrollTo} scrolls to the given element or to the previous scroll\n * position.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { CoordinateOffset } from \"@lisn/globals/types\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport { validateNumber } from \"@lisn/utils/validation\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * Scrolls to the given element or to the previous scroll position.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"scroll-to\".\n * - Accepted string arguments: none\n * - Accepted options:\n *   - `offsetX`: A number.\n *   - `offsetY`: A number.\n *   - `duration`: A number.\n *   - `scrollable`: A string element specification for an element (see\n *     {@link Utils.getReferenceElement | getReferenceElement}). Note that,\n *     unless it's a DOM ID, the specification is parsed relative to the\n *     element being acted on and not the element the trigger is defined on (in\n *     case you've used the `act-on` trigger option).\n *\n * **NOTE:** Do not place a + sign in front of the offset values (just omit it\n * if you want a positive offset). Otherwise it will be interpreted as a\n * trigger option.\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position +10px down:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to: offsetY=10 +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position 10px _down_ and 50px _left_, with a duration of 200ms:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to: offsetY=10, offsetX=-50, duration=200 +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the closest parent element with\n * class `scrollable` to the element's position:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div class=\"scrollable\">\n *   <div data-lisn-on-click=\"@scroll-to: scrollable=this.scrollable +target=#btn\"></div>\n * </div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-ref=\"scrollable\">\n *   <div data-lisn-on-click=\"@scroll-to: scrollable=this-scrollable +target=#btn\"></div>\n * </div>\n * ```\n *\n * @category Scrolling\n */\nexport class ScrollTo implements Action {\n  /**\n   * Scrolls the main scrolling element to the element's position.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Scrolls the main scrolling element to the last scroll position before the\n   * action was {@link do}ne. If the action had never been done, does nothing.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Scrolls the main scrolling element to the element's position, if it's not\n   * already there, or otherwise scrolls the main scrolling element to the\n   * previous saved scroll position.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"scroll-to\",\n      (element, args, config) => {\n        const offset = config\n          ? {\n              left: config.offsetX,\n              top: config.offsetY,\n            }\n          : undefined;\n\n        return new ScrollTo(element, {\n          offset,\n          duration: config?.duration,\n          scrollable: config?.scrollable,\n        });\n      },\n      newConfigValidator,\n    );\n  }\n\n  constructor(element: Element, config?: ScrollToConfig) {\n    const watcher = ScrollWatcher.reuse();\n    const { scrollable } = config ?? {};\n    let prevScrollTop = -1,\n      prevScrollLeft = -1;\n\n    this.do = async () => {\n      const current = await watcher.fetchCurrentScroll(scrollable);\n      prevScrollTop = current[MC.S_SCROLL_TOP];\n      prevScrollLeft = current[MC.S_SCROLL_LEFT];\n\n      const action = await watcher.scrollTo(element, config);\n      await action?.waitFor();\n    };\n\n    this.undo = async () => {\n      if (prevScrollTop !== -1) {\n        const action = await watcher.scrollTo(\n          {\n            top: prevScrollTop,\n            left: prevScrollLeft,\n          },\n          omitKeys(config ?? {}, { offset: true }), // no offset when undoing\n        );\n        await action?.waitFor();\n      }\n    };\n\n    this[MC.S_TOGGLE] = async () => {\n      const start = await watcher.fetchCurrentScroll(scrollable);\n\n      const canReverse = prevScrollTop !== -1;\n      let hasReversed = false;\n\n      // Try to scroll to the element, but if we're already close to it, then\n      // reverse to previous position if any.\n      const altTarget = {\n        top: () => {\n          hasReversed = true; // detect if we have reversed\n          return prevScrollTop;\n        },\n        left: prevScrollLeft,\n      };\n\n      const action = await watcher.scrollTo(\n        element,\n        MH.merge(\n          config,\n          canReverse\n            ? { altTarget } // no altOffset when reversing\n            : {},\n        ),\n      );\n      await action?.waitFor();\n\n      if (!hasReversed) {\n        // We've scrolled to the element, so save the starting position as the\n        // previous one.\n        prevScrollTop = start[MC.S_SCROLL_TOP];\n        prevScrollLeft = start[MC.S_SCROLL_LEFT];\n      }\n    };\n  }\n}\n\n/**\n * @interface\n * @category Scrolling\n */\nexport type ScrollToConfig = {\n  /**\n   * See {@link Utils.ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined // none\n   */\n  offset?: CoordinateOffset;\n\n  /**\n   * The duration in milliseconds of the scroll animation.\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  duration?: number;\n\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  scrollable?: Element;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<{\n  offsetX: number;\n  offsetY: number;\n  duration: number | undefined;\n  scrollable?: Element;\n}> = (element) => {\n  return {\n    offsetX: (key, value) => validateNumber(key, value) ?? 0,\n    offsetY: (key, value) => validateNumber(key, value) ?? 0,\n    duration: (key, value) => validateNumber(key, value),\n    scrollable: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Setting/deleting attributes\n * {@link SetAttribute} sets or deletes an attribute on the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { camelToKebabCase } from \"@lisn/utils/text\";\nimport { validateString } from \"@lisn/utils/validation\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport { WidgetConfigValidatorObject } from \"@lisn/widgets/widget\";\n\n/**\n * Either sets or deletes an attribute, or toggles between two values of an\n * attribute, on the given element.\n *\n * **IMPORTANT:** When constructed, it sets all given attributes on the\n * element to their _OFF_ (undone) state as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"set-attribute\".\n * - Accepted string arguments: name of attribute\n * - Accepted options:\n *   - `on`: A string value for the attribute. Can be blank. Omit this option\n *     in order to have the attribute deleted when the action is done.\n *   - `off`: A string value for the attribute. Can be blank. Omit this option\n *     in order to have the attribute deleted when the action is undone.\n *\n * Note that with the HTML API you can only specify one attribute per action.\n * But of course you can add the same action multiple times per trigger. See\n * examples below.\n *\n * @example\n * This is an overview of the various combinations that you can use to set an\n * attribute to a non-empty value, a blank value or delete the attribute when\n * the action is either done or undone:\n *\n * | Specification                         | Value when done | Value when undone |\n * | ------------------------------------- | --------------- | ----------------- |\n * | @set-attr: attr, on=onVal, off=offVal | \"onVal\"         | \"offVal\"          |\n * | @set-attr: attr, on=value             | \"value\"         | _deleted_         |\n * | @set-attr: attr, off=value            | _deleted_       | \"value\"           |\n * | @set-attr: attr, on=                  | \"\"              | _deleted_         |\n * | @set-attr: attr, off=                 | _deleted_       | \"\"                |\n * | @set-attr: attr, on=value, off=       | \"value\"         | \"\"                |\n * | @set-attr: attr, on= , off=value      | \"\"              | \"value\"           |\n *\n * @example\n * This will set attribute `attrA` to `valueA-ON` and `attrB` to `valueB-ON`\n * when the element enters the viewport and set `attrA` to `valueA-OFF` and\n * `attrB` to `valueB-OFF` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attrA, on=valueA-ON, off=valueA-OFF\n *                         @set-attribute: attrB, on=valueB-ON, off=valueB-OFF\"\n * ></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to `value` when the element enters the\n * viewport and _delete_ the attribute when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=value\"></div>\n * ```\n *\n * @example\n * This will _delete_ attribute `attr` when the element enters the viewport and\n * set it to `value` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, off=value\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to a blank value when the element enters the\n * viewport and _delete_ the attribute when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=\"></div>\n * ```\n *\n * @example\n * This will _delete_ attribute `attr` when the element enters the viewport and\n * set it to a blank value when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, off=\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to `value` when the element enters the\n * viewport and set it to a blank value when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=value, off=\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to a blank value when the element enters the\n * viewport and set it to `value` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=, off=value\"></div>\n * ```\n *\n * @category Setting/deleting attributes\n */\nexport class SetAttribute implements Action {\n  /**\n   * Sets the attribute to its \"ON\" value, or deletes it if that value is null.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Sets the attribute to its \"OFF\" value, or deletes it if that value is null.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the attribute from its \"ON\" to \"OFF\" value or vice versa.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"set-attribute\",\n      (element, args, config) => {\n        return new SetAttribute(element, { [args[0]]: config ?? {} });\n      },\n      configValidator,\n    );\n  }\n\n  constructor(element: Element, attributes: Attributes) {\n    if (!attributes) {\n      throw MH.usageError(\"Attributes are required\");\n    }\n\n    let isOn = false;\n\n    const setAttrs = async (on: boolean) => {\n      isOn = on;\n\n      await waitForMutateTime();\n\n      for (const attr in attributes) {\n        const value = attributes[attr][on ? \"on\" : \"off\"];\n        const attrName = camelToKebabCase(attr);\n\n        if (MH.isNullish(value)) {\n          MH.delAttr(element, attrName);\n        } else {\n          MH.setAttr(element, attrName, value);\n        }\n      }\n    };\n\n    this.do = () => setAttrs(true);\n\n    this.undo = () => setAttrs(false);\n\n    this[MC.S_TOGGLE] = () => setAttrs(!isOn);\n\n    this.undo(); // initial state\n  }\n}\n\n/**\n * Each key in the object is an attribute name. The `on` value is set when the\n * action is done and the `off` value is set when the action is undone. To set\n * the attribute to an empty value, use an empty string. To _delete_ the\n * attribute, use `null` as the value or simply omit the relevant `on` or `off`\n * key.\n *\n * **IMPORTANT:** Attribute names in camelCase are converted to kebab-case.\n * E.g. `dataFooBar` will translate to `data-foo-bar`.\n *\n * @category Setting/deleting attributes\n */\nexport type Attributes = Record<\n  string,\n  { on?: string | null; off?: string | null }\n>;\n\n// --------------------\n\nconst configValidator: WidgetConfigValidatorObject<Attributes[string]> = {\n  on: validateString,\n  off: validateString,\n};\n","/**\n * @module Actions\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  showElement,\n  hideElement,\n  toggleShowElement,\n  disableInitialTransition,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Shows or hides the given element with a smooth fading transition.\n *\n * **IMPORTANT:** When constructed, it will hide the element as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"show\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Show/hide</button>\n * <div data-lisn-on-click=\"@show +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Show implements Action {\n  /**\n   * Shows the element with a smooth fade in transition.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Hides the element with a smooth fade out transition.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Shows the element if it is hidden, hides it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"show\", (element) => new Show(element));\n  }\n\n  constructor(element: Element) {\n    disableInitialTransition(element);\n    hideElement(element); // initial state\n\n    const { _show, _hide, _toggle } = getMethods(element);\n    this.do = _show;\n    this.undo = _hide;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Hides or shows the given element with a smooth fading transition.\n *\n * **IMPORTANT:** When constructed, it will remove any `lisn-hide` class from\n * the element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"hide\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Show/hide</button>\n * <div data-lisn-on-click=\"@hide +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Hide implements Action {\n  /**\n   * Hides the element with a smooth fade out transition.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Shows the element with a smooth fade in transition.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Shows the element if it is hidden, hides it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"hide\", (element) => new Hide(element));\n  }\n\n  constructor(element: Element) {\n    disableInitialTransition(element);\n    showElement(element); // initial state\n\n    const { _show, _hide, _toggle } = getMethods(element);\n    this.do = _hide;\n    this.undo = _show;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  return {\n    _show: async () => {\n      await showElement(element); // ignore return val\n    },\n\n    _hide: async () => {\n      await hideElement(element); // ignore return val\n    },\n\n    _toggle: async () => {\n      await toggleShowElement(element); // ignore return val\n    },\n  };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Position } from \"@lisn/globals/types\";\n\n/**\n * @category Validation\n */\nexport const isValidPosition = (position: string): position is Position =>\n  MH.includes(POSITIONS as readonly string[], position);\n\n/**\n * @category Validation\n */\nexport const isValidTwoFoldPosition = (\n  position: string,\n): position is `${Position}-${Position}` =>\n  position.match(TWO_FOLD_POSITION_REGEX) !== null;\n\n/**\n * @ignore\n * @internal\n */\nexport const POSITIONS = [\n  MC.S_TOP,\n  MC.S_BOTTOM,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n// --------------------\n\nconst POSITIONS_OPTIONS_STR = \"(\" + POSITIONS.join(\"|\") + \")\";\n\nconst TWO_FOLD_POSITION_REGEX = RegExp(\n  `^${POSITIONS_OPTIONS_STR}-${POSITIONS_OPTIONS_STR}$`,\n);\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { XYDirection, Position } from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  hasClass,\n  addClasses,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n  getData,\n  getBooleanData,\n  setData,\n  setDataNow,\n  setBooleanData,\n  setBooleanDataNow,\n  unsetBooleanData,\n  unsetBooleanDataNow,\n  delData,\n  delDataNow,\n  setHasModal,\n  delHasModal,\n  getStyleProp,\n  setStyleProp,\n  delStyleProp,\n  getComputedStyleProp,\n  getMaxTransitionDuration,\n} from \"@lisn/utils/css-alter\";\nimport {\n  wrapElement,\n  wrapElementNow,\n  moveElement,\n  moveElementNow,\n  replaceElementNow,\n  getOrAssignID,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { keyWithMaxVal } from \"@lisn/utils/math\";\nimport { toBoolean, toArrayIfSingle } from \"@lisn/utils/misc\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { isValidPosition, isValidTwoFoldPosition } from \"@lisn/utils/position\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport {\n  validateStrList,\n  validateBoolean,\n  validateBooleanOrString,\n  validateString,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\nimport { ViewWatcher, ViewData } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetHandler,\n  WidgetCallback,\n  WidgetConfigValidator,\n  WidgetConfigValidatorObject,\n  registerWidget,\n  getWidgetConfig,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/* ********************\n * Base Openable\n * ********************/\n\nexport type OpenableCreateFn<Config extends Record<string, unknown>> = (\n  element: HTMLElement,\n  config?: Config,\n) => Openable;\n\n/**\n * Enables automatic setting up of an {@link Openable} widget from an\n * elements matching its content element selector (`[data-lisn-<name>]` or\n * `.lisn-<name>`).\n *\n * The name you specify here should generally be the same name you pass in\n * {@link OpenableProperties.name | options.name} to the\n * {@link Openable.constructor} but it does not need to be the same.\n *\n * @param name            The name of the openable. Should be in kebab-case.\n * @param newOpenable     Called for every element matching the selector.\n * @param configValidator A validator object, or a function that returns such\n *                        an object, for all options supported by the widget.\n *\n * @see {@link registerWidget}\n */\nexport const registerOpenable = <Config extends Record<string, unknown>>(\n  name: string,\n  newOpenable: OpenableCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  registerWidget(\n    name,\n    (element, config) => {\n      if (MH.isHTMLElement(element)) {\n        if (!Openable.get(element)) {\n          return newOpenable(element, config);\n        }\n      } else {\n        logError(MH.usageError(\"Openable widget supports only HTMLElement\"));\n      }\n\n      return null;\n    },\n    configValidator,\n  );\n};\n\n/**\n * {@link Openable} is an abstract base class. You should not directly\n * instantiate it but can inherit it to create your own custom openable widget.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * @see {@link registerOpenable}\n */\nexport abstract class Openable extends Widget {\n  /**\n   * Opens the widget unless it is disabled.\n   */\n  readonly open: () => Promise<void>;\n\n  /**\n   * Closes the widget.\n   */\n  readonly close: () => Promise<void>;\n\n  /**\n   * Closes the widget if it is open, or opens it if it is closed (unless\n   * it is disabled).\n   */\n  readonly toggle: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is open.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onOpen: (handler: WidgetHandler) => void;\n\n  /**\n   * The given handler will be called when the widget is closed.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onClose: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is currently open.\n   */\n  readonly isOpen: () => boolean;\n\n  /**\n   * Returns the root element created by us that wraps the original content\n   * element passed to the constructor. It is located in the content element's\n   * original place.\n   */\n  readonly getRoot: () => HTMLElement;\n\n  /**\n   * Returns the element that was found to be the container. It is the closest\n   * ancestor that has a `lisn-collapsible-container` class, or if no such\n   * ancestor then the immediate parent of the content element.\n   */\n  readonly getContainer: () => HTMLElement | null;\n\n  /**\n   * Returns the trigger elements, if any. Note that these may be wrappers\n   * around the original triggers passed.\n   */\n  readonly getTriggers: () => Element[];\n\n  /**\n   * Returns the trigger elements along with their configuration.\n   */\n  readonly getTriggerConfigs: () => Map<Element, OpenableTriggerConfig>;\n\n  /**\n   * Retrieve an existing widget by its content element or any of its triggers.\n   *\n   * If the element is already part of a configured {@link Openable} widget,\n   * the widget instance is returned. Otherwise `null`.\n   *\n   * Note that trigger elements are not guaranteed to be unique among openable\n   * widgets as the same element can be a trigger for multiple such widgets. If\n   * the element you pass is a trigger, then the last openable widget that was\n   * created for it will be returned.\n   */\n  static get(element: Element): Openable | null {\n    // We manage the instances here since we also map associated elements and\n    // not just the main content element that created the widget.\n    return instances.get(element) ?? null;\n  }\n\n  constructor(element: HTMLElement, properties: OpenableProperties) {\n    super(element);\n\n    const { isModal, isOffcanvas } = properties;\n\n    const openCallbacks = MH.newSet<WidgetCallback>();\n    const closeCallbacks = MH.newSet<WidgetCallback>();\n\n    let isOpen = false;\n\n    // ----------\n\n    const open = async () => {\n      if (this.isDisabled() || isOpen) {\n        return;\n      }\n\n      isOpen = true;\n\n      for (const callback of openCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        setHasModal();\n      }\n\n      await setBooleanData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const close = async () => {\n      if (this.isDisabled() || !isOpen) {\n        return;\n      }\n\n      isOpen = false;\n\n      for (const callback of closeCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        delHasModal();\n      }\n\n      if (isOffcanvas) {\n        scrollWrapperToTop(); // no need to await\n      }\n\n      await unsetBooleanData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const scrollWrapperToTop = async () => {\n      // Wait a bit before scrolling since the hiding of the element is animated.\n      // Assume no more than 1s animation time.\n      await waitForDelay(1000);\n      await waitForMeasureTime();\n      MH.elScrollTo(outerWrapper, {\n        top: 0,\n        left: 0,\n      });\n    };\n\n    // --------------------\n\n    this.open = open;\n    this.close = close;\n    this[MC.S_TOGGLE] = () => (isOpen ? close() : open());\n    this.onOpen = (handler) => openCallbacks.add(wrapCallback(handler));\n    this.onClose = (handler) => closeCallbacks.add(wrapCallback(handler));\n    this.isOpen = () => isOpen;\n    this.getRoot = () => root;\n    this.getContainer = () => container;\n    this.getTriggers = () => [...triggers.keys()];\n    this.getTriggerConfigs = () => MH.newMap([...triggers.entries()]);\n\n    this.onDestroy(() => {\n      openCallbacks.clear();\n      closeCallbacks.clear();\n    });\n\n    const { root, container, triggers, outerWrapper } = setupElements(\n      this,\n      element,\n      properties,\n    );\n  }\n}\n\n/**\n * Per-trigger based configuration. Can either be given as an object as the\n * value of the {@link OpenableProperties.triggers} map, or it can be set as a\n * string configuration in the `data-lisn-<name>-trigger` data attribute. See\n * {@link getWidgetConfig} for the syntax.\n *\n * @example\n * ```html\n * <div data-lisn-collapsible-trigger=\"auto-close\n *                                     | icon=right\n *                                     | icon-closed=arrow-down\n *                                     | icon-open=x\"\n * ></div>\n * ```\n *\n * @interface\n */\nexport type OpenableTriggerConfig = {\n  /**\n   * The DOM ID to set on the trigger. Will result in the trigger element, which\n   * could be a wrapper around the original element (as in the case of {@link\n   * Collapsible} you passed, getting this ID.\n   *\n   * **IMPORTANT:** If the trigger element already has an ID and is not being\n   * wrapped, then this will override the ID and it _won't_ be restored on destroy.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) for the trigger. Will result in the trigger element, which\n   * could be a wrapper around the original element you passed, getting these\n   * classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Override the widget's {@link OpenableProperties.autoClose} for this trigger.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  autoClose?: boolean;\n\n  /**\n   * Open the openable when this trigger is hovered.\n   *\n   * If the device is touch and {@link OpenableProperties.autoClose} is enabled,\n   * the widget will be closed shortly after the pointer leaves both the\n   * trigger and the root element.\n   *\n   * @defaultValue false\n   */\n  hover?: boolean;\n\n  /**\n   * Whether to prevent default click action.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.icon} for this trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  icon?: false | Position;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconClosed} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconOpen} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/**\n * @interface\n */\nexport type OpenableProperties = {\n  /**\n   * The name of the _type_ of the openable. Will set the class prefix to\n   * `lisn-<name>`.\n   */\n  name: string;\n\n  /**\n   * The DOM ID to set on the openable. Will result in the top-level root\n   * element that's created by us getting this ID.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names to set on the openable. Will result\n   * in the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Whether to auto-close the widget on clicking outside the content element\n   * or on pressing Escape key. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * This is true by default for {@link Popup}, {@link Modal} and {@link Offcanvas}.\n   */\n  autoClose: boolean;\n\n  /**\n   * If true, then while the widget is open, the `document.body` will be set to\n   * `overflow: hidden`.\n   *\n   * This is true for {@link Modal}.\n   */\n  isModal: boolean;\n\n  /**\n   * If true, then the content element is assumed to be possibly scrollable and\n   * will be scrolled back to its top after the widget is closed.\n   *\n   * This is true for {@link Modal} and {@link Offcanvas}.\n   */\n  isOffcanvas: boolean;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * This is true by default for {@link Modal} and {@link Offcanvas}.\n   */\n  closeButton: boolean;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way (`<name>` is what is given as\n   * {@link name}):\n   * 1. If the content element has a `data-lisn-<name>-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-<name>-trigger` class or `data-lisn-<name>-trigger` attribute\n   *    and the same `data-lisn-<name>-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-<name>-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-<name>-trigger`\n   *    class or `data-lisn-<name>-trigger` attribute and that do _not_ have a\n   *    `data-lisn-<name>-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Whether to wrap each trigger in a new element.\n   *\n   * @defaultValue false\n   */\n  wrapTriggers?: boolean;\n\n  /**\n   * Hook to run once the widget is fully setup (which happens asynchronously).\n   *\n   * It is called during \"mutate time\". See {@link waitForMutateTime}.\n   *\n   * @defaultValue undefined\n   */\n  onSetup?: () => void;\n};\n\n/* ********************\n * Collapsible\n * ********************/\n\n/**\n * Configures the given element as a {@link Collapsible} widget.\n *\n * The Collapsible widget sets up the given element to be collapsed and\n * expanded upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link CollapsibleConfig.triggers | triggers}.\n *\n * **NOTE:** The Collapsible widget always wraps each trigger element in\n * another element in order to allow positioning the icon, if any.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-collapsible__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-reverse`: `\"true\"` or `\"false\"`\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-collapsible` class or `data-lisn-collapsible` attribute set on the\n *   element that holds the content of the collapsible\n * - `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     collapsible on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close\"` in order to have this trigger\n *     open the collapsible on hover but and override\n *     {@link CollapsibleConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-collapsible-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and the same `data-lisn-collapsible-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple collapsible with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-collapsible-trigger\">Expand</div>\n *   <div class=\"lisn-collapsible\">\n *     Some long content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a collapsible that is partially visible when collapsed, and\n * where the trigger is in a different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all other possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek=50px\n *                               | horizontal=false\n *                               | reverse=false\n *                               | auto-close\n *                               | icon=right\n *                               | icon-closed=arrow-up\"\n *                               | icon-open=arrow-down\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n */\nexport class Collapsible extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_COLLAPSIBLE,\n      (el, config) => new Collapsible(el, config),\n      collapsibleConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: CollapsibleConfig) {\n    const isHorizontal = config?.horizontal;\n    const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n\n    const onSetup = () => {\n      // The triggers here are wrappers around the original which will be\n      // replaced by the original on destroy, so no need to clean up this.\n      for (const [\n        trigger,\n        triggerConfig,\n      ] of this.getTriggerConfigs().entries()) {\n        insertCollapsibleIcon(trigger, triggerConfig, this, config);\n        setDataNow(trigger, MC.PREFIX_ORIENTATION, orientation);\n      }\n    };\n\n    super(element, {\n      name: WIDGET_NAME_COLLAPSIBLE,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? false,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: false,\n      triggers: config?.triggers,\n      wrapTriggers: true,\n      onSetup,\n    });\n\n    const root = this.getRoot();\n    const wrapper = MH.childrenOf(root)[0];\n\n    setData(root, MC.PREFIX_ORIENTATION, orientation);\n    setBooleanData(root, PREFIX_REVERSE, config?.reverse ?? false);\n\n    // -------------------- Transitions\n    disableInitialTransition(element, 100);\n    disableInitialTransition(root, 100);\n    disableInitialTransition(wrapper, 100);\n\n    let disableTransitionTimer: ReturnType<typeof setTimeout> | null = null;\n    const tempEnableTransition = async () => {\n      await removeClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n      await removeClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n\n      if (disableTransitionTimer) {\n        MH.clearTimer(disableTransitionTimer);\n      }\n\n      const transitionDuration = await getMaxTransitionDuration(root);\n      disableTransitionTimer = MH.setTimer(() => {\n        if (this.isOpen()) {\n          addClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n          addClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n          disableTransitionTimer = null;\n        }\n      }, transitionDuration);\n    };\n\n    // Disable transitions except during open/close, so that resizing the\n    // window for example doesn't result in lagging width/height transition.\n    this.onOpen(tempEnableTransition);\n    this.onClose(tempEnableTransition);\n\n    // -------------------- Peek\n    const peek = config?.peek;\n    if (peek) {\n      (async () => {\n        let peekSize: string | null = null;\n        if (MH.isString(peek)) {\n          peekSize = peek;\n        } else {\n          peekSize = await getStyleProp(element, VAR_PEEK_SIZE);\n        }\n\n        addClasses(root, PREFIX_PEEK);\n        if (peekSize) {\n          setStyleProp(root, VAR_PEEK_SIZE, peekSize);\n        }\n      })();\n    }\n\n    // -------------------- Width in horizontal mode\n    if (isHorizontal) {\n      const updateWidth = async () => {\n        const width = await getComputedStyleProp(root, MC.S_WIDTH);\n        await setStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH, width);\n      };\n\n      MH.setTimer(updateWidth);\n\n      // Save its current width so that if it contains text, it does not\n      // \"collapse\" and end up super tall.\n      this.onClose(updateWidth);\n\n      this.onOpen(async () => {\n        // Update the content width before opening.\n        await updateWidth();\n\n        // Delete the fixed width property soon after opening to allow it to\n        // resize again while it's open.\n        waitForDelay(2000).then(() => {\n          if (this.isOpen()) {\n            delStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH);\n          }\n        });\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type CollapsibleConfig = {\n  /**\n   * The DOM ID to set on the collapsible. Will result in the top-level root\n   * element that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the\n   * `data-lisn-collapsible-content-id` attribute used to link triggers to the\n   * collapsible.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names to set on the collapsible. Will\n   * result in the top-level root element that's created by us getting these\n   * classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-collapsible-content-id`\n   *    attribute, then it must be a unique (for the current page) ID. In this\n   *    case, the trigger elements will be any element in the document that\n   *    has a `lisn-collapsible-trigger` class or\n   *    `data-lisn-collapsible-trigger` attribute and the same\n   *    `data-lisn-collapsible-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n   *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Open sideways (to the right) instead of downwards (default).\n   *\n   * **IMPORTANT:** In horizontal mode the width of the content element should\n   * not be set (or be `auto`), but you can use `min-width` or `max-width` in\n   * your CSS if needed.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Open to the left if horizontal or upwards if vertical.\n   *\n   * @defaultValue false\n   */\n  reverse?: boolean;\n\n  /**\n   * If not false, part of the content will be visible when the collapsible is\n   * closed. The value can be any valid CSS width specification.\n   *\n   * If you set this to `true`, then the size of the peek window will be\n   * dictated by CSS. By default the size is 100px, but you can change this by\n   * setting `--lisn-peek-size` CSS property on the content element or any of\n   * its ancestors.\n   *\n   * Otherwise, if the value is a string, it must be a CSS length including units.\n   *\n   * @defaultValue false\n   */\n  peek?: boolean | string;\n\n  /**\n   * Automatically close the collapsible when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue false\n   */\n  autoClose?: boolean;\n\n  /**\n   * Add an icon to each trigger.\n   *\n   * If set to something other than `false`, then by default the icon in the\n   * closed state is a plus (+) and in the open state it's a minus (-), but\n   * this can be configured with {@link iconClosed} and {@link iconOpen}.\n   *\n   * @defaultValue false\n   */\n  icon?: false | Position;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the closed state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"plus\"\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the open state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"minus\";\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/* ********************\n * Popup\n * ********************/\n\n/**\n * Configures the given element as a {@link Popup} widget.\n *\n * The Popup widget sets up the given element to be hidden and open in a\n * floating popup upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link PopupConfig.triggers | triggers}.\n *\n * **IMPORTANT:** The popup is positioned absolutely in its container and the\n * position is relative to the container. The container gets `width:\n * fit-content` by default but you can override this in your CSS. The popup\n * also gets a configurable `min-width` set.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-popup__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position (top, bottom, left, top-left, etc)\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-popup` class or `data-lisn-popup` attribute set on the element that\n *   holds the content of the popup\n * - `lisn-popup-trigger` class or `data-lisn-popup-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     popup on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the popup on hover but and override\n *     {@link PopupConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-popup-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and the\n *    same `data-lisn-popup-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-popup-trigger` class or\n *    `data-lisn-popup-trigger` attribute and that do _not_ have a\n *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple popup with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-popup-trigger\">Open</div>\n *   <div class=\"lisn-popup\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a popup that has a close button, and where the trigger is in a\n * different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button | position=bottom | auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n * ```\n */\nexport class Popup extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_POPUP,\n      (el, config) => new Popup(el, config),\n      popupConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: PopupConfig) {\n    super(element, {\n      name: WIDGET_NAME_POPUP,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: config?.closeButton ?? false,\n      triggers: config?.triggers,\n    });\n\n    const root = this.getRoot();\n    const container = this.getContainer();\n\n    const position = config?.position || S_AUTO;\n    if (position !== S_AUTO) {\n      setData(root, MC.PREFIX_PLACE, position);\n    }\n\n    if (container && position === S_AUTO) {\n      // Automatic position\n      this.onOpen(async () => {\n        const [contentSize, containerView] = await MH.promiseAll([\n          SizeWatcher.reuse().fetchCurrentSize(element),\n          ViewWatcher.reuse().fetchCurrentView(container),\n        ]);\n\n        const placement = await fetchPopupPlacement(contentSize, containerView);\n        if (placement) {\n          await setData(root, MC.PREFIX_PLACE, placement);\n        }\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type PopupConfig = {\n  /**\n   * The DOM ID to set on the popup. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-popup-content-id`\n   * attribute used to link triggers to the popup.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names to set on the popup. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-popup-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and\n   *    the same `data-lisn-popup-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-popup-trigger`\n   *    class or `data-lisn-popup-trigger` attribute and that do _not_ have a\n   *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue false\n   */\n  closeButton?: boolean;\n\n  /**\n   * Specify the popup position _relative to its container_. Supported\n   * positions include `\"top\"`, `\"bottom\"`, `\"left\"`, `\"right\" `(which result\n   * on the popup being placed on top, bottom, etc, but center-aligned), or\n   * `\"top-left\"`, `\"left-top\"`, etc, as well as `\"auto\"`. If set to `\"auto\"`,\n   * then popup position will be based on the container position within the\n   * viewport at the time it's open.\n   *\n   * @defaultValue \"auto\"\n   */\n  position?: Position | `${Position}-${Position}` | \"auto\";\n\n  /**\n   * Automatically close the popup when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Modal\n * ********************/\n\n/**\n * Configures the given element as a {@link Modal} widget.\n *\n * The Modal widget sets up the given element to be hidden and open in a fixed\n * full-screen modal popup upon activation. Activation can be done manually by\n * calling {@link open} or when clicking on any of the given\n * {@link ModalConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-modal__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-modal` class or `data-lisn-modal` attribute set on the element that\n *   holds the content of the modal\n * - `lisn-modal-trigger` class or `data-lisn-modal-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     modal on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the modal on hover but and override\n *     {@link ModalConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-modal-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and the\n *    same `data-lisn-modal-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-modal-trigger` class or\n *    `data-lisn-modal-trigger` attribute and that do _not_ have a\n *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple modal with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-modal-trigger\">Open</div>\n *   <div class=\"lisn-modal\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a modal that doesn't automatically close on click outside or\n * Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Modal extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_MODAL,\n      (el, config) => new Modal(el, config),\n      modalConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: ModalConfig) {\n    super(element, {\n      name: WIDGET_NAME_MODAL,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: true,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type ModalConfig = {\n  /**\n   * The DOM ID to set on the modal. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-modal-content-id`\n   * attribute used to link triggers to the modal.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names to set on the modal. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-modal-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and\n   *    the same `data-lisn-modal-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-modal-trigger`\n   *    class or `data-lisn-modal-trigger` attribute and that do _not_ have a\n   *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the modal when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * If you set this to false, then you should ensure {@link closeButton} is\n   * enabled.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Offcanvas\n * ********************/\n\n/**\n * Configures the given element as a {@link Offcanvas} widget.\n *\n * The Offcanvas widget sets up the given element to be hidden and open in a\n * fixed overlay (non full-screen) upon activation. Activation can be done\n * manually by calling {@link open} or when clicking on any of the given\n * {@link OffcanvasConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-offcanvas__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position `\"top\"`, `\"bottom\"`, `\"left\"` or\n *   `\"right\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-offcanvas` class or `data-lisn-offcanvas` attribute set on the\n *   element that holds the content of the offcanvas\n * - `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     offcanvas on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the offcanvas on hover but and override\n *     {@link OffcanvasConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and the same `data-lisn-offcanvas-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and that do _not_ have a `data-lisn-offcanvas-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple offcanvas with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-offcanvas-trigger\">Open</div>\n *   <div class=\"lisn-offcanvas\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a offcanvas that doesn't automatically close on click outside\n * or Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"position=top | auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Offcanvas extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_OFFCANVAS,\n      (el, config) => new Offcanvas(el, config),\n      offcanvasConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: OffcanvasConfig) {\n    super(element, {\n      name: WIDGET_NAME_OFFCANVAS,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n\n    const position = config?.position || MC.S_RIGHT;\n    setData(this.getRoot(), MC.PREFIX_PLACE, position);\n  }\n}\n\n/**\n * @interface\n */\nexport type OffcanvasConfig = {\n  /**\n   * The DOM ID to set on the offcanvas. Will result in the top-level root\n   * element that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-offcanvas-content-id`\n   * attribute used to link triggers to the offcanvas.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names to set on the offcanvas. Will result\n   * in the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and the same `data-lisn-offcanvas-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and that do _not_ have a `data-lisn-offcanvas-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Specify the offcanvas position. Supported positions are top, bottom, left,\n   * right.\n   *\n   * @defaultValue \"right\"\n   */\n  position?: Position;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the offcanvas when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n// ------------------------------\n\ntype ElementsCollection = {\n  content: HTMLElement;\n  root: HTMLElement;\n  container: HTMLElement | null;\n  outerWrapper: HTMLElement;\n  triggers: Map<Element, OpenableTriggerConfig>;\n};\n\nconst instances = MH.newWeakMap<Element, Openable>();\n\nconst WIDGET_NAME_COLLAPSIBLE = \"collapsible\";\nconst WIDGET_NAME_POPUP = \"popup\";\nconst WIDGET_NAME_MODAL = \"modal\";\nconst WIDGET_NAME_OFFCANVAS = \"offcanvas\";\n\nconst PREFIX_CLOSE_BTN = MH.prefixName(\"close-button\");\nconst PREFIX_IS_OPEN = MH.prefixName(\"is-open\");\nconst PREFIX_REVERSE = MH.prefixName(MC.S_REVERSE);\nconst PREFIX_PEEK = MH.prefixName(\"peek\");\nconst PREFIX_OPENS_ON_HOVER = MH.prefixName(\"opens-on-hover\");\nconst PREFIX_LINE = MH.prefixName(\"line\");\nconst PREFIX_ICON_POSITION = MH.prefixName(\"icon-position\");\nconst PREFIX_TRIGGER_ICON = MH.prefixName(\"trigger-icon\");\nconst PREFIX_ICON_WRAPPER = MH.prefixName(\"icon-wrapper\");\nconst S_AUTO = \"auto\";\nconst S_ARIA_EXPANDED = MC.ARIA_PREFIX + \"expanded\";\nconst S_ARIA_MODAL = MC.ARIA_PREFIX + \"modal\";\nconst VAR_PEEK_SIZE = MH.prefixCssVar(\"peek-size\");\nconst VAR_JS_COLLAPSIBLE_WIDTH = MH.prefixCssJsVar(\"collapsible-width\");\nconst MIN_CLICK_TIME_AFTER_HOVER_OPEN = 1000;\nconst S_ARROW_UP =\n  `${MC.S_ARROW}-${MC.S_UP}` as `${typeof MC.S_ARROW}-${typeof MC.S_UP}`;\nconst S_ARROW_DOWN =\n  `${MC.S_ARROW}-${MC.S_DOWN}` as `${typeof MC.S_ARROW}-${typeof MC.S_DOWN}`;\nconst S_ARROW_LEFT =\n  `${MC.S_ARROW}-${MC.S_LEFT}` as `${typeof MC.S_ARROW}-${typeof MC.S_LEFT}`;\nconst S_ARROW_RIGHT =\n  `${MC.S_ARROW}-${MC.S_RIGHT}` as `${typeof MC.S_ARROW}-${typeof MC.S_RIGHT}`;\n\nconst ARROW_TYPES = [\n  S_ARROW_UP,\n  S_ARROW_DOWN,\n  S_ARROW_LEFT,\n  S_ARROW_RIGHT,\n] as const;\n\nconst ICON_CLOSED_TYPES = [\"plus\", ...ARROW_TYPES] as const;\nconst ICON_OPEN_TYPES = [\"minus\", \"x\", ...ARROW_TYPES] as const;\ntype IconCloseType = (typeof ICON_CLOSED_TYPES)[number];\ntype IconOpenType = (typeof ICON_OPEN_TYPES)[number];\n\nconst isValidIconClosed = (value: string): value is IconCloseType =>\n  MH.includes(ICON_CLOSED_TYPES, value);\n\nconst isValidIconOpen = (value: string): value is IconOpenType =>\n  MH.includes(ICON_OPEN_TYPES, value);\n\nconst triggerConfigValidator: WidgetConfigValidatorObject<OpenableTriggerConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      value && toBoolean(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n    hover: validateBoolean,\n  };\n\nconst collapsibleConfigValidator: WidgetConfigValidatorObject<CollapsibleConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    horizontal: validateBoolean,\n    reverse: validateBoolean,\n    peek: validateBooleanOrString,\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      toBoolean(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n  };\n\nconst popupConfigValidator: WidgetConfigValidatorObject<PopupConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) =>\n    validateString(\n      key,\n      value,\n      (v) => v === S_AUTO || isValidPosition(v) || isValidTwoFoldPosition(v),\n    ),\n  autoClose: validateBoolean,\n};\n\nconst modalConfigValidator: WidgetConfigValidatorObject<ModalConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  autoClose: validateBoolean,\n};\n\nconst offcanvasConfigValidator: WidgetConfigValidatorObject<OffcanvasConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) => validateString(key, value, isValidPosition),\n  autoClose: validateBoolean,\n};\n\nconst getPrefixedNames = (name: string) => {\n  const pref = MH.prefixName(name);\n  return {\n    _root: `${pref}__root`,\n    _overlay: `${pref}__overlay`, // only used for modal/offcanvas\n    _innerWrapper: `${pref}__inner-wrapper`,\n    _outerWrapper: `${pref}__outer-wrapper`,\n    _content: `${pref}__content`,\n    _container: `${pref}__container`,\n    _trigger: `${pref}__trigger`,\n    // Use different classes for styling to the ones used for auto-discovering\n    // elements, so that re-creating existing widgets can correctly find the\n    // elements to be used by the new widget synchronously before the current\n    // one is destroyed.\n    _containerForSelect: `${pref}-container`,\n    _triggerForSelect: `${pref}-trigger`,\n    _contentId: `${pref}-content-id`,\n  };\n};\n\nconst findContainer = (content: Element, cls: string) => {\n  const currWidget = instances.get(content);\n  // If there's an existing widget that we're about to destroy, the content\n  // element will be wrapped in several elements and won't be restored until\n  // the next mutate time. In that case, to correctly determine the container\n  // element, use the current widget's root element, which is located in the\n  // content element's original place.\n  let childRef = currWidget?.getRoot() ?? content;\n  if (!MH.parentOf(childRef)) {\n    // The current widget is not yet initialized (i.e. we are re-creating it\n    // immediately after it was constructed)\n    childRef = content;\n  }\n\n  // Find the content container\n  let container: HTMLElement | null = childRef.closest(`.${cls}`);\n  if (!container) {\n    container = MH.parentOf(childRef);\n  }\n\n  return container;\n};\n\nconst findTriggers = (\n  content: Element,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const container = findContainer(content, prefixedNames._containerForSelect);\n  // jsdom does not like the below selector when suffixed by [data-*] or :not()...\n  // const triggerSelector = `:is(.${prefixedNames._triggerForSelect},[data-${prefixedNames._triggerForSelect}])`;\n  // So use this:\n  const getTriggerSelector = (suffix: string) =>\n    `.${prefixedNames._triggerForSelect}${suffix},` +\n    `[data-${prefixedNames._triggerForSelect}]${suffix}`;\n\n  const contentId = getData(content, prefixedNames._contentId);\n  let triggers: Element[] = [];\n\n  if (contentId) {\n    triggers = [\n      ...MH.docQuerySelectorAll(\n        getTriggerSelector(`[data-${prefixedNames._contentId}=\"${contentId}\"]`),\n      ),\n    ];\n  } else if (container) {\n    triggers = [\n      ...MH.arrayFrom(\n        MH.querySelectorAll(\n          container,\n          getTriggerSelector(`:not([data-${prefixedNames._contentId}])`),\n        ),\n      ).filter((t) => !content.contains(t)),\n    ];\n  }\n\n  return triggers;\n};\n\nconst getTriggersFrom = (\n  content: Element,\n  inputTriggers:\n    | Element[]\n    | Map<Element, OpenableTriggerConfig | null>\n    | undefined,\n  wrapTriggers: boolean,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const triggerMap = MH.newMap<Element, OpenableTriggerConfig>();\n\n  inputTriggers = inputTriggers || findTriggers(content, prefixedNames);\n\n  const addTrigger = (\n    trigger: Element,\n    triggerConfig: OpenableTriggerConfig,\n  ) => {\n    if (wrapTriggers) {\n      const wrapper = MH.createElement(\n        isInlineTag(MH.tagName(trigger)) ? \"span\" : \"div\",\n      );\n      wrapElement(trigger, { wrapper, ignoreMove: true }); // no need to await\n      trigger = wrapper;\n    }\n\n    triggerMap.set(trigger, triggerConfig);\n  };\n\n  if (MH.isArray(inputTriggers)) {\n    for (const trigger of inputTriggers) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(\n          getData(trigger, prefixedNames._triggerForSelect),\n          triggerConfigValidator,\n        ),\n      );\n    }\n  } else if (MH.isInstanceOf(inputTriggers, Map)) {\n    for (const [trigger, triggerConfig] of inputTriggers.entries()) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(triggerConfig, triggerConfigValidator),\n      );\n    }\n  }\n\n  return triggerMap;\n};\n\nconst setupElements = (\n  widget: Openable,\n  content: HTMLElement,\n  properties: OpenableProperties,\n): ElementsCollection => {\n  const prefixedNames = getPrefixedNames(properties.name);\n  const container = findContainer(content, prefixedNames._containerForSelect);\n\n  const wrapTriggers = properties.wrapTriggers ?? false;\n  const triggers = getTriggersFrom(\n    content,\n    properties.triggers,\n    wrapTriggers,\n    prefixedNames,\n  );\n\n  // Create two wrappers\n  const innerWrapper = MH.createElement(\"div\");\n  addClasses(innerWrapper, prefixedNames._innerWrapper);\n\n  const outerWrapper = wrapElementNow(innerWrapper);\n\n  // Setup the root element.\n  // For off-canvas types we need another wrapper to serve as the root and we\n  // need a placeholder element to save the content's original position so it\n  // can be restored on destroy.\n  // Otherwise use outerWrapper for root and insert the root where the content\n  // was.\n  let root: HTMLElement;\n  let placeholder: HTMLElement;\n  if (properties.isOffcanvas) {\n    addClasses(outerWrapper, prefixedNames._outerWrapper);\n    root = wrapElementNow(outerWrapper);\n    placeholder = MH.createElement(\"div\");\n\n    const overlay = MH.createElement(\"div\");\n    addClasses(overlay, prefixedNames._overlay);\n    moveElement(overlay, { to: root });\n  } else {\n    // Otherwise use the outer wrapper as the root\n    root = placeholder = outerWrapper;\n  }\n\n  if (properties.id) {\n    root.id = properties.id;\n  }\n\n  if (properties.className) {\n    addClassesNow(root, ...toArrayIfSingle(properties.className));\n  }\n\n  unsetBooleanData(root, PREFIX_IS_OPEN);\n  const domID = getOrAssignID(root, properties.name);\n\n  if (properties.isModal) {\n    MH.setAttr(root, MC.S_ROLE, \"dialog\");\n    MH.setAttr(root, S_ARIA_MODAL);\n  }\n\n  addClasses(root, prefixedNames._root);\n  disableInitialTransition(root);\n\n  // Add a close button?\n  if (properties.closeButton) {\n    const closeBtn = MH.createButton(\"Close\");\n    addClasses(closeBtn, PREFIX_CLOSE_BTN);\n\n    // If autoClose is true, it will be closed on click anyway, because the\n    // close button is outside the content.\n    addEventListenerTo(closeBtn, MC.S_CLICK, () => {\n      widget.close();\n    });\n\n    moveElement(closeBtn, { to: properties.isOffcanvas ? root : innerWrapper });\n  }\n\n  // Transfer the relevant classes/data attrs from content to root element, so\n  // that our CSS can work without :has.\n  // This won't cause forced layout since the root is not yet attached to the\n  // DOM.\n  for (const cls of [\n    settings.lightThemeClassName,\n    settings.darkThemeClassName,\n  ]) {\n    if (hasClass(content, cls)) {\n      addClasses(root, cls);\n    }\n  }\n\n  const elements = {\n    content,\n    root,\n    container,\n    outerWrapper,\n    triggers,\n  };\n\n  // -------------------- Close / destroy hooks\n  widget.onClose(async () => {\n    for (const trigger of triggers.keys()) {\n      delData(trigger, PREFIX_OPENS_ON_HOVER);\n      MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n      await unsetBooleanData(trigger, PREFIX_IS_OPEN);\n    }\n  });\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n\n    replaceElementNow(placeholder, content, { ignoreMove: true });\n    moveElementNow(root); // remove\n    removeClassesNow(content, prefixedNames._content);\n\n    if (container) {\n      removeClassesNow(container, prefixedNames._container);\n    }\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      MH.delAttr(trigger, MC.S_ARIA_CONTROLS);\n      MH.delAttr(trigger, S_ARIA_EXPANDED);\n\n      delDataNow(trigger, PREFIX_OPENS_ON_HOVER);\n      delDataNow(trigger, PREFIX_IS_OPEN);\n\n      removeClassesNow(\n        trigger,\n        prefixedNames._trigger,\n        ...(triggerConfig?.className || []),\n      );\n\n      if (trigger.id === triggerConfig?.id) {\n        trigger.id = \"\";\n      }\n\n      if (wrapTriggers) {\n        replaceElementNow(trigger, MH.childrenOf(trigger)[0], {\n          ignoreMove: true,\n        });\n      }\n    }\n\n    triggers.clear();\n\n    for (const el of [content, ...triggers.keys()]) {\n      if (instances.get(el) === widget) {\n        MH.deleteKey(instances, el);\n      }\n    }\n  });\n\n  // -------------------- SETUP\n  // Save the elements so we can lookup the instance\n  const currWidget = instances.get(content);\n  for (const el of [content, ...triggers.keys()]) {\n    instances.set(el, widget);\n  }\n\n  // Wait for the DOMWatcher to be active, which may not be before interactive.\n  waitForInteractive()\n    .then(currWidget?.destroy)\n    .then(waitForMutateTime)\n    .then(() => {\n      if (widget.isDestroyed()) {\n        return;\n      }\n\n      addClassesNow(content, prefixedNames._content);\n\n      if (container) {\n        addClassesNow(container, prefixedNames._container);\n      }\n\n      if (properties.isOffcanvas) {\n        moveElementNow(root, {\n          to: MH.getBody(),\n          ignoreMove: true,\n        });\n      }\n\n      // Move the placeholder element to before the content and then move\n      // content into inner wrapper.\n      moveElementNow(placeholder, {\n        // for not-offcanvas it's also the root\n        to: content,\n        position: \"before\",\n        ignoreMove: true,\n      });\n\n      moveElementNow(content, { to: innerWrapper, ignoreMove: true });\n\n      // Setup the triggers\n      for (const [trigger, triggerConfig] of triggers.entries()) {\n        MH.setAttr(trigger, MC.S_ARIA_CONTROLS, domID);\n        MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n\n        setBooleanDataNow(\n          trigger,\n          PREFIX_OPENS_ON_HOVER,\n          triggerConfig[MC.S_HOVER],\n        );\n        unsetBooleanDataNow(trigger, PREFIX_IS_OPEN);\n\n        addClassesNow(\n          trigger,\n          prefixedNames._trigger,\n          ...(triggerConfig?.className || []),\n        );\n\n        if (triggerConfig?.id) {\n          trigger.id = triggerConfig.id;\n        }\n      }\n\n      setupListeners(widget, elements, properties, prefixedNames);\n\n      if (properties.onSetup) {\n        properties.onSetup();\n      }\n    });\n\n  return elements;\n};\n\nconst setupListeners = (\n  widget: Openable,\n  elements: ElementsCollection,\n  properties: OpenableProperties,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const { content, root, triggers } = elements;\n  const doc = MH.getDoc();\n\n  let hoverTimeOpened = 0;\n  let isPointerOver = false;\n  let activeTrigger: Element | null = null;\n\n  // ----------\n\n  const isTrigger = (element: Element) =>\n    MH.includes(\n      MH.arrayFrom(triggers.keys()),\n      element.closest(getDefaultWidgetSelector(prefixedNames._trigger)),\n    );\n\n  const shouldPreventDefault = (trigger: Element) =>\n    triggers.get(trigger)?.preventDefault ?? true;\n\n  const usesHover = (trigger: Element) => triggers.get(trigger)?.hover;\n\n  const usesAutoClose = (trigger: Element | null) =>\n    (trigger ? triggers.get(trigger)?.autoClose : null) ?? properties.autoClose;\n\n  // ----------\n\n  const toggleTrigger = (event: Event, openIt?: boolean) => {\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger)) {\n      if (shouldPreventDefault(trigger)) {\n        MH.preventDefault(event);\n      }\n\n      // If a click was fired shortly after opening on hover, ignore\n      if (\n        openIt !== false && // not explicitly asked to close\n        widget.isOpen() &&\n        MH.timeSince(hoverTimeOpened) < MIN_CLICK_TIME_AFTER_HOVER_OPEN\n      ) {\n        return;\n      }\n\n      if (openIt ?? !widget.isOpen()) {\n        // open it\n        activeTrigger = trigger;\n        MH.setAttr(trigger, S_ARIA_EXPANDED); // will be unset on close\n        setBooleanData(trigger, PREFIX_IS_OPEN); // will be unset on close\n\n        widget.open(); // no need to await\n\n        if (usesAutoClose(trigger)) {\n          if (usesHover(trigger)) {\n            addEventListenerTo(root, MC.S_POINTERENTER, setIsPointerOver);\n            addEventListenerTo(root, MC.S_POINTERLEAVE, pointerLeft);\n          }\n\n          // auto-close listeners setup by the onOpen handler below\n        }\n      } else {\n        widget.close(); // out onClose handler below will remove listeners\n      }\n    }\n  };\n\n  // ----------\n\n  const setIsPointerOver = () => {\n    isPointerOver = true;\n  };\n\n  // ----------\n\n  const unsetIsPointerOver = (event: Event) => {\n    // Keep it set to true if this is a touch pointer type; otherwise unset\n    isPointerOver = isPointerOver && MH.isTouchPointerEvent(event);\n  };\n\n  // ----------\n\n  const pointerEntered = (event: Event) => {\n    setIsPointerOver();\n    if (!widget.isOpen()) {\n      hoverTimeOpened = MH.timeNow();\n      toggleTrigger(event, true);\n    }\n  };\n\n  // ----------\n\n  const pointerLeft = (event: Event) => {\n    unsetIsPointerOver(event);\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger) && usesAutoClose(trigger)) {\n      MH.setTimer(\n        () => {\n          if (!isPointerOver) {\n            widget.close();\n          }\n        },\n        // use a delay that allows the mouse to move from trigger to content\n        // without closing it\n        // TODO make this user-configurable\n        properties.isOffcanvas ? 300 : 50,\n      );\n    }\n  };\n\n  // ----------\n\n  const closeIfEscape = (event: Event) => {\n    if ((event as KeyboardEvent).key === \"Escape\") {\n      widget.close(); // no need to await\n    }\n  };\n\n  // ----------\n\n  const closeIfClickOutside = (event: Event) => {\n    const target = MH.targetOf(event);\n    if (\n      target === doc ||\n      (MH.isElement(target) &&\n        !content.contains(target) && // outside content\n        !isTrigger(target)) // handled by pointer watcher\n    ) {\n      widget.close();\n    }\n  };\n\n  // ----------\n\n  const maybeSetupAutoCloseListeners = (\n    trigger: Element | null,\n    remove: boolean,\n  ) => {\n    if (usesAutoClose(trigger)) {\n      const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n      addOrRemove(doc, \"keyup\", closeIfEscape);\n\n      // Add a short delay so that we don't catch the bubbling of the click event\n      // that opened the widget.\n      MH.setTimer(() => addOrRemove(doc, MC.S_CLICK, closeIfClickOutside), 100);\n\n      if (trigger && usesHover(trigger)) {\n        addOrRemove(trigger, MC.S_POINTERLEAVE, pointerLeft);\n      }\n    }\n  };\n\n  // ----------\n\n  const setupOrCleanup = (remove: boolean) => {\n    const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      // Always setup click listeners\n      addOrRemove(trigger, MC.S_CLICK, toggleTrigger);\n\n      if (triggerConfig[MC.S_HOVER]) {\n        addOrRemove(trigger, MC.S_POINTERENTER, pointerEntered);\n      }\n    }\n  };\n\n  // ----------\n\n  setupOrCleanup(false);\n\n  widget.onOpen(() => {\n    maybeSetupAutoCloseListeners(activeTrigger, false); // setup listeners if relevant\n  });\n\n  widget.onClose(() => {\n    hoverTimeOpened = 0;\n    isPointerOver = false;\n\n    removeEventListenerFrom(root, MC.S_POINTERENTER, setIsPointerOver);\n    removeEventListenerFrom(root, MC.S_POINTERLEAVE, pointerLeft);\n\n    maybeSetupAutoCloseListeners(activeTrigger, true); // remove listeners if any\n    activeTrigger = null;\n  });\n\n  widget.onDestroy(() => {\n    setupOrCleanup(true); // remove\n  });\n};\n\n// COLLAPSIBLE ------------------------------\n\nconst insertCollapsibleIcon = (\n  trigger: Element,\n  triggerConfig: OpenableTriggerConfig,\n  widget: Collapsible,\n  widgetConfig: CollapsibleConfig | undefined,\n) => {\n  const iconPosition = triggerConfig.icon ?? widgetConfig?.icon;\n  const iconClosed =\n    (triggerConfig.iconClosed ?? widgetConfig?.iconClosed) || \"plus\";\n  const iconOpen =\n    (triggerConfig.iconOpen ?? widgetConfig?.iconOpen) || \"minus\";\n\n  if (iconPosition) {\n    addClasses(trigger, PREFIX_ICON_WRAPPER);\n    setData(trigger, PREFIX_ICON_POSITION, iconPosition);\n\n    const icon = MH.createElement(\"span\");\n    setDataNow(icon, PREFIX_TRIGGER_ICON, iconClosed);\n\n    for (let l = 0; l < 2; l++) {\n      const line = MH.createElement(\"span\");\n      addClassesNow(line, PREFIX_LINE);\n      moveElementNow(line, { to: icon });\n    }\n\n    moveElement(icon, { to: trigger, ignoreMove: true });\n\n    widget.onOpen(() => {\n      if (getBooleanData(trigger, PREFIX_IS_OPEN)) {\n        setData(icon, PREFIX_TRIGGER_ICON, iconOpen);\n      }\n    });\n\n    widget.onClose(() => {\n      setData(icon, PREFIX_TRIGGER_ICON, iconClosed);\n    });\n  }\n};\n\n// POPUP ------------------------------\n\nconst fetchPopupPlacement = async (\n  contentSize: SizeData,\n  containerView: ViewData,\n) => {\n  const containerPosition = containerView.relative;\n  const containerTop = containerPosition[MC.S_TOP];\n  const containerBottom = containerPosition[MC.S_BOTTOM];\n  const containerLeft = containerPosition[MC.S_LEFT];\n  const containerRight = containerPosition[MC.S_RIGHT];\n  const containerHMiddle = containerPosition.hMiddle;\n  const containerVMiddle = containerPosition.vMiddle;\n  const vpSize = await fetchViewportSize();\n  const popupWidth = contentSize.border[MC.S_WIDTH] / vpSize[MC.S_WIDTH];\n  const popupHeight = contentSize.border[MC.S_HEIGHT] / vpSize[MC.S_HEIGHT];\n\n  // - Find the maximum of these quantities:\n  //   - containerTop - popupHeight:\n  //     the space on top if placed on top-(left|right|)\n  //   - 1 - (containerBottom + popupHeight):\n  //     the space on bottom be if placed on bottom-(left|right|)\n  //   - containerLeft - popupWidth:\n  //     the space on left if placed on left-(top|bottom|)\n  //   - 1 - (containerRight + popupWidth):\n  //     the space on right if placed on right-(top|bottom|)\n  //\n  // This determines the main placement: top|bottom|left|right\n\n  // Then to determine secondary alignment:\n  // - For top/bottom placement, determine horizontal alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerLeft + popupWidth):\n  //       the space on right if left-aligned\n  //     - containerRight - popupWidth:\n  //       the space on left if right-aligned\n  //     - min(\n  //           containerHMiddle - popupWidth / 2,\n  //           1 - (containerHMiddle + popupWidth / 2),\n  //       ):\n  //       the minimum of the space on either left or right if center-aligned\n  //\n  // - For left/right placement, determine vertical alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerTop + popupHeight):\n  //       the space on bottom if top-aligned\n  //     - containerBottom - popupHeight:\n  //       the space on top if bottom-aligned\n  //     - min(\n  //           containerVMiddle - popupHeight / 2,\n  //           1 - (containerVMiddle + popupHeight / 2),\n  //       ):\n  //       the minimum of the space on either top or bottom if center-aligned\n\n  const placementVars = {\n    top: containerTop - popupHeight,\n    bottom: 1 - (containerBottom + popupHeight),\n    left: containerLeft - popupWidth,\n    right: 1 - (containerRight + popupWidth),\n  };\n\n  const placement = keyWithMaxVal(placementVars);\n  if (placement === undefined) {\n    // container must be out-view and so left/right are NaN\n    return;\n  }\n  let finalPlacement = placement;\n\n  let alignmentVars;\n  switch (placement) {\n    case MC.S_TOP:\n    case MC.S_BOTTOM:\n      alignmentVars = {\n        left: 1 - (containerLeft + popupWidth),\n        right: containerRight - popupWidth,\n        middle: MH.min(\n          containerHMiddle - popupWidth / 2,\n          1 - (containerHMiddle + popupWidth / 2),\n        ),\n      };\n      break;\n\n    case MC.S_LEFT:\n    case MC.S_RIGHT:\n      alignmentVars = {\n        top: 1 - (containerTop + popupHeight),\n        bottom: containerBottom - popupHeight,\n        middle: MH.min(\n          containerVMiddle - popupHeight / 2,\n          1 - (containerVMiddle + popupHeight / 2),\n        ),\n      };\n      break;\n\n    default:\n      return;\n  }\n\n  const alignment = keyWithMaxVal(alignmentVars);\n  if (alignment !== \"middle\") {\n    finalPlacement += \"-\" + alignment;\n  }\n\n  return finalPlacement;\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling openables\n * {@link Open} opens or closes the {@link Openable} widget setup for the given\n * element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { Openable } from \"@lisn/widgets/openable\";\nimport { fetchUniqueWidget } from \"@lisn/widgets/widget\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Opens or closes the {@link Openable} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"open\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-modal\" data-lisn-on-view=\"@open +reference=top:50%\"></div>\n * ```\n *\n * @category Controlling openables\n */\nexport class Open implements Action {\n  /**\n   * Opens the Openable widget setup for the element.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Closes the Openable widget setup for the element.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the Openable widget setup for the element.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"open\", (element) => new Open(element));\n  }\n\n  constructor(element: Element) {\n    const open = (widget: Openable | null) => widget?.open();\n    const close = (widget: Openable | null) => widget?.close();\n    const toggle = (widget: Openable | null) => widget?.toggle();\n\n    const widgetPromise = fetchUniqueWidget(\"openable\", element, Openable);\n\n    this.do = () => widgetPromise.then(open);\n    this.undo = () => widgetPromise.then(close);\n    this[MC.S_TOGGLE] = () => widgetPromise.then(toggle);\n  }\n}\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  addClasses,\n  removeClassesNow,\n  getData,\n  setData,\n  setBooleanData,\n  delDataNow,\n  getComputedStyleProp,\n  setStyleProp,\n  delStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { isValidInputDevice } from \"@lisn/utils/gesture\";\nimport { toInt } from \"@lisn/utils/math\";\nimport { toBoolean } from \"@lisn/utils/misc\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateNumber,\n  validateString,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport {\n  GestureWatcher,\n  OnGestureOptions,\n  GestureData,\n} from \"@lisn/watchers/gesture-watcher\";\nimport { ScrollWatcher, ScrollOptions } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  WidgetCallback,\n  WidgetHandler,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * Configures the given element as a {@link Pager} widget.\n *\n * The Pager widget sets up the elements that make up its pages to be overlayed\n * on top of each other with only one of them visible at a time. When a user\n * performs a scroll-like gesture (see {@link GestureWatcher}), the pages are\n * flicked through: gestures, whose direction is down (or left) result in the\n * next page being shown, otherwise the previous.\n *\n * The widget should have more than one page.\n *\n * Optionally, the widget can have a set of \"switch\" elements and a set of\n * \"toggle\" elements which correspond one-to-one to each page. Switches go to\n * the given page and toggles toggle the enabled/disabled state of the page.\n *\n * **IMPORTANT:** Unless the {@link PagerConfig.style} is set to \"carousel\", the\n * page elements will be positioned absolutely, and therefore the pager likely\n * needs to have an explicit height. If you enable\n * {@link PagerConfig.fullscreen}, then the element will get `height: 100vh`\n * set. Otherwise, you need to set its height in your CSS.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Pager}\n * widget on a given element. Use {@link Pager.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the pager element:\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n * - `data-lisn-use-parallax`: `\"true\"` or `\"false\"`\n * - `data-lisn-total-pages`: the number of pages\n * - `data-lisn-visible-pages`: **for carousel only** the number of visible pages;\n *   can be fractional if {@link PagerConfig.peek} is enabled\n * - `data-lisn-current-page`: the current page number\n * - `data-lisn-current-page-is-last`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-first-enabled`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-last-enabled`: `\"true\"` or `\"false\"`\n *\n * The following dynamic CSS properties are also set on the pager element's style:\n * - `--lisn-js--total-pages`: the number of pages\n * - `--lisn-js--visible-pages`: **for carousel only** the number of visible pages\n * - `--lisn-js--current-page`: the current page number\n *\n * The following dynamic attributes are set on each page, toggle or switch element:\n * - `data-lisn-page-state`: `\"current\"`, `\"next\"`, `\"covered\"` or `\"disabled\"`\n * - `data-lisn-page-number`: the corresponding page's number\n *\n * The following analogous dynamic CSS properties are also set on each page,\n * toggle or switch element's style:\n * - `--lisn-js--page-number`: the corresponding page's number\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-pager` class or `data-lisn-pager` attribute set on the container\n *   element that constitutes the pager\n * - `lisn-pager-page` class or `data-lisn-pager-page` attribute set on\n *   elements that should act as the pages.\n * - `lisn-pager-toggle` class or `data-lisn-pager-toggle` attribute set on\n *   elements that should act as the toggles.\n * - `lisn-pager-switch` class or `data-lisn-pager-switch` attribute set on\n *   elements that should act as the switches.\n *\n * When using auto-widgets, the elements that will be used as pages are\n * discovered in the following way:\n * 1. The top-level element that constitutes the widget is searched for any\n *    elements that contain the `lisn-pager-page` class or\n *    `data-lisn-pager-page` attribute. They do not have to be immediate\n *    children of the root element, but they **should** all be siblings.\n * 2. If there are no such elements, all of the immediate children of the\n *    widget element except any `script` or `style` elements are taken as the\n *    pages.\n *\n * The toggles and switches are descendants of the top-level element that\n * constitutes the widget, that contain the\n * `lisn-pager-toggle`/`lisn-pager-switch` class or `data-lisn-pager-toggle`/\n * `data-lisn-pager-switch` attribute. They do not have to be immediate\n * children of the root element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple pager with default settings.\n *\n * ```html\n * <div class=\"lisn-pager\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * As above but with all settings explicitly set to their default (`false`).\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen=false | parallax=false | horizontal=false\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>Horizontal: Page 1</div>\n *   <div>Horizontal: Page 2</div>\n *   <div>Horizontal: Page 3</div>\n *   <div>Horizontal: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings, as well as toggle and switch buttons.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>\n *     <div data-lisn-pager-page>Horizontal: Page 1</div>\n *     <div data-lisn-pager-page>Horizontal: Page 2</div>\n *     <div data-lisn-pager-page>Horizontal: Page 3</div>\n *     <div data-lisn-pager-page>Horizontal: Page 4</div>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-toggle>Toggle page 1</button>\n *     <button data-lisn-pager-toggle>Toggle page 2</button>\n *     <button data-lisn-pager-toggle>Toggle page 3</button>\n *     <button data-lisn-pager-toggle>Toggle page 4</button>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-switch>Go to page 1</button>\n *     <button data-lisn-pager-switch>Go to page 2</button>\n *     <button data-lisn-pager-switch>Go to page 3</button>\n *     <button data-lisn-pager-switch>Go to page 4</button>\n *   </div>\n * </div>\n * ```\n */\nexport class Pager extends Widget {\n  /**\n   * Advances the widget's page by 1. If the current page is the last one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled down/right\n   * (depending on the gesture direction).\n   */\n  readonly nextPage: () => Promise<void>;\n\n  /**\n   * Reverses the widget's page by 1. If the current page is the first one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled up/left\n   * (depending on the gesture direction).\n   */\n  readonly prevPage: () => Promise<void>;\n\n  /**\n   * Advances the widget to the given page. Note that page numbers start at 1.\n   *\n   * If this page is disabled, nothing is done.\n   */\n  readonly goToPage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Disables the given page number. Note that page numbers start at 1.\n   *\n   * The page will be skipped during transitioning to previous/next.\n   *\n   * If the page is the current one, then the current page will be switched to\n   * the previous one (that's not disabled), or if this is the first enabled\n   * page, then it will switch to the next one that's not disabled.\n   *\n   * If this is the last enabled page, nothing is done.\n   */\n  readonly disablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page number. Note that page numbers start at 1.\n   */\n  readonly enablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page if it is disabled, otherwise disables it. Note\n   * that page numbers start at 1.\n   */\n  readonly togglePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Returns true if the given page number is disabled. Note that page\n   * numbers start at 1.\n   */\n  readonly isPageDisabled: (pageNum: number) => boolean;\n\n  /**\n   * Returns the current page.\n   */\n  readonly getCurrentPage: () => Element;\n\n  /**\n   * Returns the previous page, before the last transition.\n   *\n   * If there has been no change of page, returns the first page, same as\n   * {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPage: () => Element;\n\n  /**\n   * Returns the number of the current page. Note that numbers start at 1.\n   */\n  readonly getCurrentPageNum: () => number;\n\n  /**\n   * Returns the number of the previous page, before the last transition. Note\n   * that numbers start at 1.\n   *\n   * If there has been no change of page, returns the number of the first page,\n   * same as {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPageNum: () => number;\n\n  /**\n   * The given handler will be called whenever there is a change of page. It\n   * will be called after the current page number is updated internally (so\n   * {@link getPreviousPageNum} and {@link getCurrentPageNum} will return the\n   * updated numbers), but before the page transition styles are updated.\n   *\n   * If the handler returns a promise, it will be awaited upon.\n   */\n  readonly onTransition: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns the page elements.\n   */\n  readonly getPages: () => Element[];\n\n  /**\n   * Returns the toggle elements if any.\n   */\n  readonly getToggles: () => Element[];\n\n  /**\n   * Returns the switch elements if any.\n   */\n  readonly getSwitches: () => Element[];\n\n  static get(element: Element): Pager | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Pager)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!Pager.get(element)) {\n          return new Pager(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If there are less than 2 pages given or found, or if any\n   *                page is not a descendant of the main pager element.\n   */\n  constructor(element: Element, config?: PagerConfig) {\n    const destroyPromise = Pager.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const pages = config?.pages || [];\n    const toggles = config?.toggles || [];\n    const switches = config?.switches || [];\n    const nextPrevSwitch = {\n      _next: config?.nextSwitch ?? null,\n      _prev: config?.prevSwitch ?? null,\n    };\n\n    const pageSelector = getDefaultWidgetSelector(PREFIX_PAGE__FOR_SELECT);\n    const toggleSelector = getDefaultWidgetSelector(PREFIX_TOGGLE__FOR_SELECT);\n    const switchSelector = getDefaultWidgetSelector(PREFIX_SWITCH__FOR_SELECT);\n    const nextSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_NEXT_SWITCH__FOR_SELECT,\n    );\n    const prevSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_PREV_SWITCH__FOR_SELECT,\n    );\n\n    if (!MH.lengthOf(pages)) {\n      pages.push(...MH.querySelectorAll(element, pageSelector));\n\n      if (!MH.lengthOf(pages)) {\n        pages.push(\n          ...getVisibleContentChildren(element).filter(\n            (e) => !e.matches(switchSelector),\n          ),\n        );\n      }\n    }\n\n    if (!MH.lengthOf(toggles)) {\n      toggles.push(...MH.querySelectorAll(element, toggleSelector));\n    }\n\n    if (!MH.lengthOf(switches)) {\n      switches.push(...MH.querySelectorAll(element, switchSelector));\n    }\n\n    if (!nextPrevSwitch._next) {\n      nextPrevSwitch._next = MH.querySelector(element, nextSwitchSelector);\n    }\n\n    if (!nextPrevSwitch._prev) {\n      nextPrevSwitch._prev = MH.querySelector(element, prevSwitchSelector);\n    }\n\n    const numPages = MH.lengthOf(pages);\n    if (numPages < 2) {\n      throw MH.usageError(\"Pager must have more than 1 page\");\n    }\n\n    for (const page of pages) {\n      if (!element.contains(page) || page === element) {\n        throw MH.usageError(\"Pager's pages must be its descendants\");\n      }\n    }\n\n    const components = {\n      _pages: pages,\n      _toggles: toggles,\n      _switches: switches,\n      _nextPrevSwitch: nextPrevSwitch,\n    };\n\n    const methods = getMethods(this, components, element, config);\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, element, components, config, methods);\n    });\n\n    this.nextPage = () => methods._nextPage();\n    this.prevPage = () => methods._prevPage();\n    this.goToPage = (pageNum) => methods._goToPage(pageNum);\n    this.disablePage = methods._disablePage;\n    this.enablePage = methods._enablePage;\n    this.togglePage = methods._togglePage;\n    this.isPageDisabled = methods._isPageDisabled;\n    this.getCurrentPage = methods._getCurrentPage;\n    this.getPreviousPage = methods._getPreviousPage;\n    this.getCurrentPageNum = methods._getCurrentPageNum;\n    this.getPreviousPageNum = methods._getPreviousPageNum;\n    this.onTransition = methods._onTransition;\n\n    this.getPages = () => [...pages];\n    this.getSwitches = () => [...switches];\n    this.getToggles = () => [...toggles];\n  }\n}\n\n/**\n * @interface\n */\nexport type PagerConfig = {\n  /**\n   * The elements that will make up the pages.\n   *\n   * They do not have to be immediate children of the root element, but they\n   * should all be siblings.\n   *\n   * The widget should have more than one page.\n   *\n   * If this is not specified, then\n   * 1. The top-level element that constitutes the widget is searched for any\n   *    elements that contain the `lisn-pager-page` class or the\n   *    `data-lisn-pager-page` attribute, and these are used as pages.\n   * 2. If there are no such elements, all of the immediate children of the\n   *    widget element (other than `script` and `style` elements) are taken as\n   *    the pages.\n   *\n   * **IMPORTANT:** Unless the {@link style} is set to \"carousel\", the page\n   * elements will be positioned absolutely, and therefore the pager likely\n   * needs to have an explicit height. If you enable {@link fullscreen}, then\n   * the element will get `height: 100vh` set. Otherwise, you need to set its\n   * height in your CSS.\n   *\n   * @defaultValue undefined\n   */\n  pages?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that toggles the\n   * enabled/disabled state of the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-toggle`\n   * class or the `data-lisn-pager-toggle` attribute, and these are used as\n   * toggles.\n   *\n   * @defaultValue undefined\n   */\n  toggles?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that switches the\n   * pager to the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-switch`\n   * class or the `data-lisn-pager-switch` attribute, and these are used as\n   * switches.\n   *\n   * @defaultValue undefined\n   */\n  switches?: Element[];\n\n  /**\n   * This element will be assigned a click listener that goes to the next page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-next-switch` class or the `data-lisn-pager-next-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  nextSwitch?: Element;\n\n  /**\n   * This element will be assigned a click listener that goes to the previous\n   * page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-prev-switch` class or the `data-lisn-pager-prev-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  prevSwitch?: Element;\n\n  /**\n   * Set the initial page number.\n   *\n   * @defaultValue 1\n   */\n  initialPage?: number;\n\n  /**\n   * Set the style of the widget. This determines the basic CSS applied.\n   *\n   * When importing the stylesheets in your project, if not using the full\n   * stylesheet (lisn.css) you can import either pager.css which contains all\n   * three pager styles, or only `pager-<style>.css`.\n   *\n   * **NOTE:** The base css only includes the minimum required for positioning\n   * and transitioning pages. The switches and toggles are intentionally not\n   * styled for flexibility. You should style those in your CSS.\n   *\n   * **IMPORTANT:** Unless the {@link style} is set to \"carousel\", the page\n   * elements will be positioned absolutely, and therefore the pager likely\n   * needs to have an explicit height. If you enable {@link fullscreen}, then\n   * the element will get `height: 100vh` set. Otherwise, you need to set its\n   * height in your CSS.\n   *\n   * @since v1.1.0\n   *\n   * @defaultValue \"slider\"\n   */\n  style?: \"slider\" | \"carousel\" | \"tabs\";\n\n  /**\n   * Only relevant is {@link style} is \"carousel\".\n   *\n   * The *minimum* page height (or width in {@link horizontal} mode) in pixels.\n   * This will determine the number of visible slides at any one width of the\n   * pager. Pages will still grow to fill the size of the carousel itself.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue 300\n   */\n  pageSize?: number;\n\n  /**\n   * Only relevant is {@link style} is \"carousel\".\n   *\n   * Whether to show a bit of the upcoming and/or previous pages that are\n   * hidden when not all fit.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue false\n   */\n  peek?: boolean;\n\n  /**\n   * If true, then:\n   * - if the pager {@link style} is \"slider\", the pager's height will be set\n   *   to the viewport height (100vh)\n   * - the pager's scrolling ancestor will be scrolled to the top of the pager\n   *   when 30% of it is in view\n   * - scrolling beyond the first or last page will initiate scroll up/left or\n   *   down/right the pager's scrolling ancestor in order to allow \"leaving\"\n   *   the pager\n   *\n   * Note that except in \"carousel\" {@link style} the pager's pages will be\n   * positioned absolutely, and so if you do _not_ enable this option, you will\n   * need to manually set the height of the page parent element via CSS.\n   *\n   * @defaultValue false\n   */\n  fullscreen?: boolean;\n\n  /**\n   * Only relevant is {@link style} is \"slider\" (default) or \"carousel\".\n   *\n   * Use a parallax effect for switching pages.\n   *\n   * @defaultValue false\n   */\n  parallax?: boolean;\n\n  /**\n   * Only relevant is {@link style} is \"slider\" (default) or \"carousel\".\n   *\n   * Transition pages sideways instead of vertically.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Transition pages upon user scroll-like and drag-like gestures via the\n   * given {@link GestureDevice}s. If set to true, then gestures using all\n   * device types are supported.\n   *\n   * Note that drag gesture is only supported by the \"pointer\" device and also\n   * the \"pointer\" device only supports drag gestures, so if you want to\n   * disable drag gestures, simply pass \"wheel,key,touch\" as this option.\n   *\n   * @defaultValue true\n   */\n  useGestures?: boolean | CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If true, then pages will be advanced backwards/forwards regardless if the\n   * gesture direction is horizontal or vertical.\n   *\n   * If false then, a gesture will go to the next page only if its direction is\n   * down if {@link horizontal} is false/right if {@link horizontal} is true,\n   * and to the previous page only if the gesture direction is up if\n   * {@link horizontal} is false/left if {@link horizontal} is true.\n   *\n   * **IMPORTANT:**\n   * If {@link fullscreen}, {@link preventDefault} and\n   * {@link alignGestureDirection} are all true, then the pager's scrollable\n   * parent must be scrollable in the same direction as the pager orientation,\n   * otherwise automatic scroll beyond the last/first page won't work.\n   *\n   * @defaultValue false\n   */\n  alignGestureDirection?: boolean;\n\n  /**\n   * Whether to prevent the default action for events that would result in\n   * gestures.\n   *\n   * **NOTE:**\n   * If true (default), then all events that originate from a device given in\n   * {@link useGestures} and that could result in a gesture will be prevented\n   * regardless of their direction and whether {@link alignGestureDirection} is\n   * true.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n};\n\n// --------------------\n\ntype Components = {\n  _pages: Element[];\n  _toggles: Element[];\n  _switches: Element[];\n  _nextPrevSwitch: { _next: Element | null; _prev: Element | null };\n};\n\n// Swiping on some trackpads results in \"trailing\" wheel events sent for some\n// while which results in multiple pages being advanced in a short while. So we\n// limit how often pages can be advanced.\nconst MIN_TIME_BETWEEN_WHEEL = 1000;\n\nconst S_CURRENT = \"current\";\nconst S_ARIA_CURRENT = MC.ARIA_PREFIX + S_CURRENT;\nconst S_COVERED = \"covered\";\nconst S_NEXT = \"next\";\nconst S_TOTAL_PAGES = \"total-pages\";\nconst S_VISIBLE_PAGES = \"visible-pages\";\nconst S_CURRENT_PAGE = \"current-page\";\nconst S_PAGE_NUMBER = \"page-number\";\nconst WIDGET_NAME = \"pager\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_PAGE_CONTAINER = `${PREFIXED_NAME}__page-container`;\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_PAGE = `${PREFIXED_NAME}__page`;\nconst PREFIX_PAGE__FOR_SELECT = `${PREFIXED_NAME}-page`;\nconst PREFIX_TOGGLE__FOR_SELECT = `${PREFIXED_NAME}-toggle`;\nconst PREFIX_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-switch`;\nconst PREFIX_NEXT_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-next-switch`;\nconst PREFIX_PREV_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-prev-switch`;\n\nconst PREFIX_STYLE = `${PREFIXED_NAME}-style`;\nconst PREFIX_IS_FULLSCREEN = MH.prefixName(\"is-fullscreen\");\nconst PREFIX_USE_PARALLAX = MH.prefixName(\"use-parallax\");\nconst PREFIX_TOTAL_PAGES = MH.prefixName(S_TOTAL_PAGES);\nconst PREFIX_VISIBLE_PAGES = MH.prefixName(S_VISIBLE_PAGES);\nconst PREFIX_CURRENT_PAGE = MH.prefixName(S_CURRENT_PAGE);\nconst PREFIX_CURRENT_PAGE_IS_LAST = `${PREFIX_CURRENT_PAGE}-is-last`;\nconst PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED = `${PREFIX_CURRENT_PAGE}-is-first-enabled`;\nconst PREFIX_CURRENT_PAGE_IS_LAST_ENABLED = `${PREFIX_CURRENT_PAGE_IS_LAST}-enabled`;\nconst PREFIX_PAGE_STATE = MH.prefixName(\"page-state\");\nconst PREFIX_PAGE_NUMBER = MH.prefixName(S_PAGE_NUMBER);\nconst VAR_CURRENT_PAGE = MH.prefixCssJsVar(S_CURRENT_PAGE);\nconst VAR_TOTAL_PAGES = MH.prefixCssJsVar(S_TOTAL_PAGES);\nconst VAR_VISIBLE_PAGES = MH.prefixCssJsVar(S_VISIBLE_PAGES);\nconst VAR_VISIBLE_GAPS = MH.prefixCssJsVar(\"visible-gaps\");\nconst VAR_TRANSLATED_PAGES = MH.prefixCssJsVar(\"translated-pages\");\nconst VAR_TRANSLATED_GAPS = MH.prefixCssJsVar(\"translated-gaps\");\nconst VAR_PAGE_NUMBER = MH.prefixCssJsVar(S_PAGE_NUMBER);\n\n// Only one Pager widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\nconst SUPPORTED_STYLES = [\"slider\", \"carousel\", \"tabs\"] as const;\ntype PagerStyle = (typeof SUPPORTED_STYLES)[number];\n\nconst isValidStyle = (value: string): value is PagerStyle =>\n  MH.includes(SUPPORTED_STYLES, value);\n\nconst configValidator: WidgetConfigValidatorObject<PagerConfig> = {\n  initialPage: validateNumber,\n  style: (key, value) => validateString(key, value, isValidStyle),\n  pageSize: validateNumber,\n  peek: validateBoolean,\n  fullscreen: validateBoolean,\n  parallax: validateBoolean,\n  horizontal: validateBoolean,\n  useGestures: (key, value) => {\n    if (MH.isNullish(value)) {\n      return undefined;\n    }\n\n    const bool = toBoolean(value);\n    if (bool !== null) {\n      return bool;\n    }\n\n    return (\n      validateStrList(\n        \"useGestures\",\n        validateString(key, value),\n        isValidInputDevice,\n      ) || true\n    );\n  },\n  alignGestureDirection: validateBoolean,\n  preventDefault: validateBoolean,\n};\n\nconst fetchClosestScrollable = (element: Element) =>\n  waitForMeasureTime().then(\n    () => getClosestScrollable(element, { active: true }) ?? undefined,\n  );\n\nconst setPageNumber = (components: Components, pageNum: number) => {\n  let lastPromise: Promise<void> = MH.promiseResolve();\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      setData(el, PREFIX_PAGE_NUMBER, pageNum + \"\");\n      lastPromise = setStyleProp(el, VAR_PAGE_NUMBER, pageNum + \"\");\n    }\n  }\n\n  return lastPromise;\n};\n\nconst setPageState = async (\n  components: Components,\n  pageNum: number,\n  state: string,\n) => {\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      await setData(el, PREFIX_PAGE_STATE, state);\n    }\n  }\n};\n\nconst setCurrentPage = (\n  pagerEl: Element,\n  pageNumbers: {\n    _current: number;\n    _total: number;\n  },\n  isPageDisabled: (pageNum: number) => boolean,\n) => {\n  let isFirstEnabled = true;\n  let isLastEnabled = true;\n  for (let n = 1; n <= pageNumbers._total; n++) {\n    if (!isPageDisabled(n)) {\n      if (n < pageNumbers._current) {\n        isFirstEnabled = false;\n      } else if (n > pageNumbers._current) {\n        isLastEnabled = false;\n      }\n    }\n  }\n\n  setStyleProp(pagerEl, VAR_CURRENT_PAGE, pageNumbers._current + \"\");\n  setData(pagerEl, PREFIX_CURRENT_PAGE, pageNumbers._current + \"\");\n  setBooleanData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST,\n    pageNumbers._current === pageNumbers._total,\n  );\n  setBooleanData(pagerEl, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED, isFirstEnabled);\n  return setBooleanData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST_ENABLED,\n    isLastEnabled,\n  );\n};\n\nconst init = (\n  widget: Pager,\n  element: Element,\n  components: Components,\n  config: PagerConfig | undefined,\n  methods: ReturnType<typeof getMethods>,\n) => {\n  const logger = debug\n    ? new debug.Logger({\n        name: `Pager-${formatAsString(element)}`,\n        logAtCreation: config,\n      })\n    : null;\n\n  const pages = components._pages;\n  const toggles = components._toggles;\n  const switches = components._switches;\n  const nextSwitch = components._nextPrevSwitch._next;\n  const prevSwitch = components._nextPrevSwitch._prev;\n  const pageContainer = MH.parentOf(pages[0]);\n\n  let initialPage = toInt(config?.initialPage ?? 1);\n  const pagerStyle = config?.style || \"slider\";\n  const isCarousel = pagerStyle === \"carousel\";\n  const minPageSize = config?.pageSize ?? 300;\n  const enablePeek = config?.peek ?? false;\n  const isFullscreen = config?.fullscreen ?? false;\n  const isParallax = config?.parallax ?? false;\n  const isHorizontal = config?.horizontal ?? false;\n  const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n  const useGestures = config?.useGestures ?? true;\n  const alignGestureDirection = config?.alignGestureDirection ?? false;\n  const preventDefault = config?.preventDefault ?? true;\n\n  const scrollWatcher = ScrollWatcher.reuse();\n  const sizeWatcher = isCarousel\n    ? SizeWatcher.reuse({ resizeThreshold: 10 })\n    : null;\n  const gestureWatcher = useGestures ? GestureWatcher.reuse() : null;\n  const viewWatcher = isFullscreen\n    ? ViewWatcher.reuse({ rootMargin: \"0px\", threshold: 0.3 })\n    : null;\n\n  const recalculateCarouselProps = async (t?: Element, data?: SizeData) => {\n    if (data) {\n      // there's been a resize\n      const gap =\n        MH.parseFloat(await getComputedStyleProp(element, \"gap\")) || 0;\n      const containerSize =\n        data.content[isHorizontal ? MC.S_WIDTH : MC.S_HEIGHT];\n\n      const getNumVisiblePages = (addPeek = false) =>\n        (numVisiblePages = MH.max(\n          1, // at least 1\n          MH.min(\n            MH.floor(\n              (containerSize + gap - (addPeek ? 0.5 * minPageSize : 0)) /\n                (minPageSize + gap),\n            ),\n            numPages, // and at most total number\n          ),\n        ));\n\n      numVisiblePages = getNumVisiblePages();\n      if (enablePeek && numVisiblePages < numPages) {\n        // Not all pages fit now and we will add a \"peek\" from the pages on the\n        // edge.\n        // Re-calculate with peek added in case the resultant page size when we\n        // add the \"peek\" will make it smaller than the min.\n        numVisiblePages = getNumVisiblePages(true);\n      }\n\n      debug: logger?.debug8(\"Pager resized\", {\n        gap,\n        containerSize,\n        numVisiblePages,\n      });\n    } // otherwise just a page transition\n\n    const currPageNum = widget.getCurrentPageNum();\n    const prevPageNum = widget.getPreviousPageNum();\n    const numHidden = numPages - numVisiblePages;\n    const hasPeek = enablePeek && numVisiblePages < numPages;\n\n    // centre the current page as much as possible\n    let visibleStart = currPageNum - (numVisiblePages - 1) / 2;\n    let isAtEdge = false;\n\n    if (visibleStart >= numHidden + 1) {\n      visibleStart = numHidden + 1;\n      isAtEdge = true;\n    } else if (visibleStart <= 1) {\n      visibleStart = 1;\n      isAtEdge = true;\n    }\n\n    let numTranslated = 0;\n    if (hasPeek) {\n      numTranslated = MH.max(0, visibleStart - 1 - (isAtEdge ? 0.5 : 0.25));\n    } else {\n      numTranslated =\n        (prevPageNum > currPageNum ? MH.floor : MH.ceil)(visibleStart) - 1;\n    }\n\n    const numVisibleGaps = !hasPeek\n      ? numVisiblePages - 1\n      : isAtEdge || numVisiblePages % 2 === 0\n        ? numVisiblePages\n        : numVisiblePages + 1;\n\n    const fractionalNumVisiblePages = hasPeek\n      ? numVisiblePages + 0.5\n      : numVisiblePages;\n\n    debug: logger?.debug8(\"Carousel calculations\", {\n      currPageNum,\n      prevPageNum,\n      visibleStart,\n      isAtEdge,\n      numVisiblePages,\n      numVisibleGaps,\n      numTranslated,\n    });\n\n    setData(element, PREFIX_VISIBLE_PAGES, fractionalNumVisiblePages + \"\");\n    setStyleProp(element, VAR_VISIBLE_PAGES, fractionalNumVisiblePages + \"\");\n    setStyleProp(element, VAR_VISIBLE_GAPS, numVisibleGaps + \"\");\n    setStyleProp(element, VAR_TRANSLATED_PAGES, numTranslated + \"\");\n    setStyleProp(element, VAR_TRANSLATED_GAPS, MH.floor(numTranslated) + \"\");\n  };\n\n  const getGestureOptions = (\n    directions: Direction | Direction[] | undefined,\n  ): OnGestureOptions => {\n    return {\n      devices: MH.isBoolean(useGestures) // i.e. true; if it's false, then gestureWatcher is null\n        ? undefined // all devices\n        : useGestures,\n      intents: [MC.S_DRAG, MC.S_SCROLL],\n      directions,\n      deltaThreshold: 25,\n      preventDefault,\n    };\n  };\n\n  const scrollToPager = async () => {\n    scrollWatcher.scrollTo(element, {\n      scrollable: await fetchClosestScrollable(element),\n    });\n  };\n\n  const transitionOnGesture = (target: EventTarget, data: GestureData) => {\n    const swapDirection = data.intent === MC.S_DRAG;\n\n    if (MH.includes([MC.S_LEFT, MC.S_UP], data.direction)) {\n      (swapDirection ? methods._nextPage : methods._prevPage)(data);\n    } else {\n      (swapDirection ? methods._prevPage : methods._nextPage)(data);\n    }\n  };\n\n  const addWatchers = () => {\n    gestureWatcher?.onGesture(\n      element,\n      transitionOnGesture,\n      getGestureOptions(\n        alignGestureDirection\n          ? isHorizontal\n            ? [MC.S_LEFT, MC.S_RIGHT]\n            : [MC.S_UP, MC.S_DOWN]\n          : undefined, // all directions\n      ),\n    );\n\n    sizeWatcher?.onResize(recalculateCarouselProps, { target: element });\n    viewWatcher?.onView(element, scrollToPager, { views: \"at\" });\n  };\n\n  const removeWatchers = () => {\n    gestureWatcher?.offGesture(element, transitionOnGesture);\n    sizeWatcher?.offResize(recalculateCarouselProps, element);\n    viewWatcher?.offView(element, scrollToPager);\n  };\n\n  const getPageNumForEvent = (event: Event) => {\n    const target = MH.currentTargetOf(event);\n    return MH.isElement(target)\n      ? toInt(getData(target, PREFIX_PAGE_NUMBER))\n      : 0;\n  };\n\n  const toggleClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._togglePage(pageNum);\n  };\n\n  const switchClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._goToPage(pageNum);\n  };\n\n  const nextSwitchClickListener = () => methods._nextPage();\n  const prevSwitchClickListener = () => methods._prevPage();\n\n  // SETUP ------------------------------\n\n  widget.onDisable(removeWatchers);\n  widget.onEnable(addWatchers);\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n    delDataNow(element, MC.PREFIX_ORIENTATION);\n    delDataNow(element, PREFIX_STYLE);\n    delDataNow(element, PREFIX_IS_FULLSCREEN);\n    delDataNow(element, PREFIX_USE_PARALLAX);\n    delDataNow(element, PREFIX_CURRENT_PAGE);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST_ENABLED);\n    delDataNow(element, PREFIX_TOTAL_PAGES);\n    delDataNow(element, PREFIX_VISIBLE_PAGES);\n    delStylePropNow(element, VAR_CURRENT_PAGE);\n    delStylePropNow(element, VAR_TOTAL_PAGES);\n    delStylePropNow(element, VAR_VISIBLE_PAGES);\n    delStylePropNow(element, VAR_VISIBLE_GAPS);\n    delStylePropNow(element, VAR_TRANSLATED_PAGES);\n    delStylePropNow(element, VAR_TRANSLATED_GAPS);\n\n    for (let idx = 0; idx < MH.lengthOf(pages); idx++) {\n      removeClassesNow(pages[idx], PREFIX_PAGE);\n\n      for (const [el, listener] of [\n        [pages[idx], null],\n        [toggles[idx], toggleClickListener],\n        [switches[idx], switchClickListener],\n      ] as const) {\n        if (el) {\n          delDataNow(el, PREFIX_PAGE_STATE);\n          delDataNow(el, PREFIX_PAGE_NUMBER);\n          delStylePropNow(el, VAR_PAGE_NUMBER);\n          if (listener) {\n            removeEventListenerFrom(el, MC.S_CLICK, listener);\n          }\n        }\n      }\n\n      MH.delAttr(pages[idx], S_ARIA_CURRENT);\n    }\n\n    if (nextSwitch) {\n      removeEventListenerFrom(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n    }\n\n    if (prevSwitch) {\n      removeEventListenerFrom(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n    }\n\n    removeClassesNow(element, PREFIX_ROOT);\n    if (pageContainer) {\n      removeClassesNow(pageContainer, PREFIX_PAGE_CONTAINER);\n    }\n  });\n\n  if (isCarousel) {\n    widget.onTransition(() => recalculateCarouselProps());\n  }\n\n  addWatchers();\n  addClasses(element, PREFIX_ROOT);\n  if (pageContainer) {\n    addClasses(pageContainer, PREFIX_PAGE_CONTAINER);\n  }\n\n  const numPages = MH.lengthOf(pages);\n  let numVisiblePages = numPages;\n\n  setData(element, MC.PREFIX_ORIENTATION, orientation);\n  setData(element, PREFIX_STYLE, pagerStyle);\n  setBooleanData(element, PREFIX_IS_FULLSCREEN, isFullscreen);\n  setBooleanData(element, PREFIX_USE_PARALLAX, isParallax);\n  setData(element, PREFIX_TOTAL_PAGES, numPages + \"\");\n  setStyleProp(element, VAR_TOTAL_PAGES, (numPages || 1) + \"\");\n\n  for (const page of pages) {\n    disableInitialTransition(page);\n    addClasses(page, PREFIX_PAGE);\n  }\n\n  for (let idx = 0; idx < numPages; idx++) {\n    setPageNumber(components, idx + 1);\n    setPageState(components, idx + 1, S_NEXT);\n\n    for (const [el, listener] of [\n      [toggles[idx], toggleClickListener],\n      [switches[idx], switchClickListener],\n    ] as const) {\n      if (el) {\n        addEventListenerTo(el, MC.S_CLICK, listener);\n      }\n    }\n  }\n\n  if (nextSwitch) {\n    addEventListenerTo(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n  }\n\n  if (prevSwitch) {\n    addEventListenerTo(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n  }\n\n  if (initialPage < 1 || initialPage > numPages) {\n    initialPage = 1;\n  }\n  methods._goToPage(initialPage);\n};\n\nconst getMethods = (\n  widget: Pager,\n  components: Components,\n  element: Element,\n  config: PagerConfig | undefined,\n) => {\n  const pages = components._pages;\n  const scrollWatcher = ScrollWatcher.reuse();\n  const isFullscreen = config?.fullscreen;\n  const disabledPages: Record<number, boolean> = {};\n  const callbacks = MH.newSet<WidgetCallback>();\n\n  const fetchScrollOptions = async (): Promise<ScrollOptions> => ({\n    scrollable: await fetchClosestScrollable(element),\n    // default amount is already 100%\n    asFractionOf: \"visible\",\n    weCanInterrupt: true,\n  });\n\n  let currPageNum = -1;\n  let lastPageNum = -1;\n  let lastTransition = 0;\n\n  const canTransition = (gestureData?: GestureData) => {\n    if (widget.isDisabled()) {\n      return false;\n    }\n\n    if (gestureData?.device !== MC.S_WHEEL) {\n      return true;\n    }\n\n    const timeNow = MH.timeNow();\n    if (timeNow - lastTransition > MIN_TIME_BETWEEN_WHEEL) {\n      lastTransition = timeNow;\n      return true;\n    }\n\n    return false;\n  };\n\n  const goToPage = async (pageNum: number, gestureData?: GestureData) => {\n    pageNum = toInt(pageNum, -1);\n    if (pageNum === currPageNum || !canTransition(gestureData)) {\n      return;\n    }\n\n    const numPages = MH.lengthOf(pages);\n\n    if (\n      (currPageNum === 1 && pageNum === 0) ||\n      (currPageNum === numPages && pageNum === numPages + 1)\n    ) {\n      // next/prev page beyond last/first\n      if (isFullscreen) {\n        scrollWatcher.scroll(\n          pageNum\n            ? gestureData?.direction === MC.S_RIGHT\n              ? MC.S_RIGHT\n              : MC.S_DOWN\n            : gestureData?.direction === MC.S_LEFT\n              ? MC.S_LEFT\n              : MC.S_UP,\n          await fetchScrollOptions(),\n        ); // no need to await\n      }\n\n      return;\n    }\n\n    if (isPageDisabled(pageNum) || pageNum < 1 || pageNum > numPages) {\n      // invalid or disabled\n      return;\n    }\n\n    lastPageNum = currPageNum > 0 ? currPageNum : pageNum;\n    currPageNum = pageNum;\n\n    for (const callback of callbacks) {\n      await callback.invoke(widget);\n    }\n\n    MH.delAttr(pages[lastPageNum - 1], S_ARIA_CURRENT);\n    for (\n      let n = lastPageNum;\n      n !== currPageNum;\n      currPageNum < lastPageNum ? n-- : n++\n    ) {\n      if (!isPageDisabled(n)) {\n        setPageState(\n          components,\n          n,\n          currPageNum < lastPageNum ? S_NEXT : S_COVERED,\n        );\n      }\n    }\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: numPages },\n      isPageDisabled,\n    );\n    MH.setAttr(pages[currPageNum - 1], S_ARIA_CURRENT);\n    await setPageState(components, currPageNum, S_CURRENT);\n  };\n\n  const nextPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum + 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage++;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const prevPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum - 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage--;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const isPageDisabled = (pageNum: number) => disabledPages[pageNum] === true;\n\n  const disablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || pageNum < 1 || pageNum > MH.lengthOf(pages)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = true;\n\n    if (pageNum === currPageNum) {\n      await prevPage();\n\n      if (pageNum === currPageNum) {\n        // was the first enabled one\n        await nextPage();\n\n        if (pageNum === currPageNum) {\n          // was the only enabled one\n          disabledPages[pageNum] = false;\n          return;\n        }\n      }\n    }\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: MH.lengthOf(pages) },\n      isPageDisabled,\n    );\n    await setPageState(components, pageNum, MC.S_DISABLED);\n  };\n\n  const enablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || !isPageDisabled(pageNum)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = false;\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: MH.lengthOf(pages) },\n      isPageDisabled,\n    );\n    await setPageState(\n      components,\n      pageNum,\n      pageNum < currPageNum ? S_COVERED : S_NEXT,\n    );\n  };\n\n  const togglePage = (pageNum: number) =>\n    isPageDisabled(pageNum) ? enablePage(pageNum) : disablePage(pageNum);\n\n  const onTransition = (handler: WidgetHandler) =>\n    callbacks.add(wrapCallback(handler));\n\n  return {\n    _nextPage: nextPage,\n    _prevPage: prevPage,\n    _goToPage: goToPage,\n    _disablePage: disablePage,\n    _enablePage: enablePage,\n    _togglePage: togglePage,\n    _isPageDisabled: isPageDisabled,\n    _getCurrentPage: () => pages[currPageNum - 1],\n    _getPreviousPage: () => pages[lastPageNum - 1],\n    _getCurrentPageNum: () => (MH.lengthOf(pages) > 0 ? currPageNum : 0),\n    _getPreviousPageNum: () => (MH.lengthOf(pages) > 0 ? lastPageNum : 0),\n    _onTransition: onTransition,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling pagers\n * {@link NextPage} and {@link PrevPage} advance or reverse the {@link Pager}\n * widget setup for the given element.\n *\n * {@link GoToPage} sets the {@link Pager} to the given page or toggles to the\n * last saved one.\n *\n * {@link EnablePage} and {@link DisablePage} enable or disable the given page\n * of the {@link Pager} widget setup for the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { toInt } from \"@lisn/utils/math\";\n\nimport { Pager } from \"@lisn/widgets/pager\";\nimport { fetchUniqueWidget } from \"@lisn/widgets/widget\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Advances or reverses the {@link Pager} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"next-page\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@next-page +target=#myNextButton\"></div>\n * <button id=\"myNextButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class NextPage implements Action {\n  /**\n   * Advances the pager by one page.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Reverses the pager by one page.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Undoes the last action: reverses the pager if {@link do} was last called\n   * or advances it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"next-page\", (element) => new NextPage(element));\n  }\n\n  constructor(element: Element) {\n    let toggleState = false;\n    const { _nextPage, _prevPage } = getMethods(element);\n\n    this.do = () => {\n      toggleState = true;\n      return _nextPage();\n    };\n\n    this.undo = () => {\n      toggleState = false;\n      return _prevPage();\n    };\n\n    this[MC.S_TOGGLE] = () => {\n      const method = toggleState ? _prevPage : _nextPage;\n      toggleState = !toggleState;\n      return method();\n    };\n  }\n}\n\n/**\n * Reverses or advances the {@link Pager} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"prev-page\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@prev-page +target=#myPrevButton\"></div>\n * <button id=\"myPrevButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class PrevPage implements Action {\n  /**\n   * Reverses the pager by one page.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Advances the pager by one page.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Undoes the last action: advances the pager if {@link do} was last called\n   * or reverses it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"prev-page\", (element) => new PrevPage(element));\n  }\n\n  constructor(element: Element) {\n    let toggleState = false;\n    const { _nextPage, _prevPage } = getMethods(element);\n\n    this.do = () => {\n      toggleState = true;\n      return _prevPage();\n    };\n\n    this.undo = () => {\n      toggleState = false;\n      return _nextPage();\n    };\n\n    this[MC.S_TOGGLE] = () => {\n      const method = toggleState ? _nextPage : _prevPage;\n      toggleState = !toggleState;\n      return method();\n    };\n  }\n}\n\n/**\n * Goes to a given page, or to the last one beforehand, of the {@link Pager}\n * widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"go-to-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@go-to-page:2 +target=#myGoToButton\"></div>\n * <button id=\"myGoToButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class GoToPage implements Action {\n  /**\n   * Goes to the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Goes to the last saved page number before the action was {@link do}ne. If\n   * the action had never been done, does nothing.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Goes to the page number given to the constructor, or if already at this\n   * number, goes to the last saved page if any. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"go-to-page\",\n      (element, args) => new GoToPage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page is required\");\n    }\n\n    const { _goToPage } = getMethods(element);\n\n    this.do = () => _goToPage(pageNum);\n    this.undo = () => _goToPage(-1);\n    this[MC.S_TOGGLE] = () => _goToPage(pageNum, -1);\n  }\n}\n\n/**\n * Enables or disables the given page of the {@link Pager} widget setup for the\n * given element.\n *\n * **IMPORTANT:** When constructed, it disables the given page as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"enable-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@enable-page:2 +target=#myEnableButton\"></div>\n * <button id=\"myEnableButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class EnablePage implements Action {\n  /**\n   * Enables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Disables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Enables the page number given to the constructor, if it is disabled,\n   * otherwise disables it. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"enable-page\",\n      (element, args) => new EnablePage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page number is required\");\n    }\n\n    const { _enablePage, _disablePage, _togglePage } = getMethods(element);\n    _disablePage(pageNum); // initial state\n\n    this.do = () => _enablePage(pageNum);\n    this.undo = () => _disablePage(pageNum);\n    this[MC.S_TOGGLE] = () => _togglePage(pageNum);\n  }\n}\n\n/**\n * Disables or enables the given page of the {@link Pager} widget setup for the\n * given element.\n *\n * **IMPORTANT:** When constructed, it enables the given page as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"disable-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"myDisableButton\"></button>\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@disable-page:2 +target=#myDisableButton\"></div>\n * ```\n *\n * @category Controlling pagers\n */\nexport class DisablePage implements Action {\n  /**\n   * Disables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Enables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Disables the page number given to the constructor, if it is enabled,\n   * otherwise enables it. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"disable-page\",\n      (element, args) => new DisablePage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page number is required\");\n    }\n\n    const { _enablePage, _disablePage, _togglePage } = getMethods(element);\n    _enablePage(pageNum); // initial state\n\n    this.do = () => _disablePage(pageNum);\n    this.undo = () => _enablePage(pageNum);\n    this[MC.S_TOGGLE] = () => _togglePage(pageNum);\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  let lastPageNum: number | null | undefined = null;\n\n  const nextPage = (widget: Pager | null) => widget?.nextPage();\n  const prevPage = (widget: Pager | null) => widget?.prevPage();\n\n  const goToPage = async (\n    widget: Pager | null,\n    pageNum: number,\n    altPageNum: number | null,\n  ) => {\n    const currentNum = widget?.getCurrentPageNum();\n    let targetNum: number | null | undefined =\n      currentNum === pageNum ? altPageNum : pageNum;\n    if (targetNum === -1) {\n      targetNum = lastPageNum;\n    }\n\n    if (targetNum) {\n      if (pageNum !== -1) {\n        // save the current number unless this is \"undo\"\n        lastPageNum = currentNum;\n      }\n\n      await widget?.goToPage(targetNum);\n    }\n  };\n\n  const enablePage = (widget: Pager | null, pageNum: number) =>\n    widget?.enablePage(pageNum);\n  const disablePage = (widget: Pager | null, pageNum: number) =>\n    widget?.disablePage(pageNum);\n  const togglePage = (widget: Pager | null, pageNum: number) =>\n    widget?.togglePage(pageNum);\n\n  const widgetPromise = fetchUniqueWidget(\"pager\", element, Pager);\n\n  return {\n    _nextPage: () => widgetPromise.then(nextPage),\n    _prevPage: () => widgetPromise.then(prevPage),\n\n    _goToPage: (pageNum: number, altPageNum: number | null = null) =>\n      widgetPromise.then((w) => goToPage(w, pageNum, altPageNum)),\n\n    _enablePage: (pageNum: number) =>\n      widgetPromise.then((w) => enablePage(w, pageNum)),\n    _disablePage: (pageNum: number) =>\n      widgetPromise.then((w) => disablePage(w, pageNum)),\n    _togglePage: (pageNum: number) =>\n      widgetPromise.then((w) => togglePage(w, pageNum)),\n  };\n};\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nexport * from \"@lisn/actions/add-class\";\nexport * from \"@lisn/actions/animate\";\nexport * from \"@lisn/actions/animate-play\";\nexport * from \"@lisn/actions/display\";\nexport * from \"@lisn/actions/trigger\";\nexport * from \"@lisn/actions/scroll-to\";\nexport * from \"@lisn/actions/set-attribute\";\nexport * from \"@lisn/actions/show\";\nexport * from \"@lisn/actions/open\";\nexport * from \"@lisn/actions/pager\";\n\nexport * from \"@lisn/actions/action\";\n","/**\n * @module Triggers\n *\n * @categoryDescription Input\n * {@link CheckTrigger} allows you to run actions when the user checks a target\n * checkbox input element, and undo those actions when they uncheck the checkbox.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link CheckTrigger} allows you to run actions when the user checks a target\n * checkbox input element, and undo those actions when they uncheck the checkbox.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *\n * @example\n * Add classes `active` and `checked` when the user checks the checkbox,\n * remove them when unchecked.\n *\n * ```html\n * <input type=\"checkbox\" data-lisn-on-check=\"@add-class=active,checked\"/>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <input type=\"checkbox\" class=\"lisn-on-check--@add-class=active,checked\"/>\n * ```\n *\n * @example\n * Play the animations on the element each time the user checks the next\n * element with class `checkbox` (do nothing when it's unchecked).\n *\n * ```html\n * <div data-lisn-on-check=\"@animate +one-way +target=next.checkbox\"></div>\n * <input type=\"checkbox\" class=\"checkbox\"/>\n * ```\n *\n * @example\n * Add class `used` the first time the user checks the next element with class\n * `checkbox`, and play or reverse the animations 200ms after each time the\n * user toggles the reference checkbox.\n *\n * ```html\n * <div data-lisn-on-check=\"@add-class=used +once ;\n *                          @animate +delay=200 +target=next.checkbox\"\n * ></div>\n * <input type=\"checkbox\" class=\"checkbox\"/>\n * ```\n *\n * @example\n * When the user checks the next element with class `checkbox` then add classes `c1`\n * and `c2` to the element (that the trigger is defined on) and enable trigger\n * `my-trigger` defined on this same element; undo all of that when the user unchecks\n * the reference checkbox.\n *\n * ```html\n * <div data-lisn-on-check=\"@add-class=c1,c2 @enable=my-trigger +target=next.checkbox\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <input type=\"checkbox\" class=\"checkbox\"/>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-check=\"@add-class=c1,c2 @enable=my-trigger +target=next-checkbox\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <input type=\"checkbox\" data-lisn-ref=\"checkbox\"/>\n * ```\n *\n * @category Input\n */\nexport class CheckTrigger extends Trigger {\n  readonly getConfig: () => CheckTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"check\",\n      (element, args, actions, config) =>\n        new CheckTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config?: CheckTriggerConfig,\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const target = MH.targetOf(config) ?? element;\n\n    if (!MH.isInstanceOf(target, HTMLInputElement)) {\n      return;\n    }\n\n    const onToggle = () => (target.checked ? this.run() : this.reverse());\n\n    addEventListenerTo(target, \"change\", onToggle);\n\n    this.onDestroy(() => {\n      removeEventListenerFrom(target, \"change\", onToggle);\n    });\n  }\n}\n\n/**\n * @category Input\n * @interface\n */\nexport type CheckTriggerConfig = TriggerConfig & {\n  /**\n   * The target to use for the hover action.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  target?: Element;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<CheckTriggerConfig> = (\n  element,\n) => {\n  return {\n    target: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Pointer\n * {@link ClickTrigger} allows you to run actions when a user clicks a target\n * element (first time and every other time, i.e. odd number of click), and undo\n * those actions when a user clicks the target element again (or every even\n * number of clicks). It always acts as a toggle.\n *\n * {@link PressTrigger} allows you to run actions when the user presses and\n * holds a pointing device (or their finger) on a target element, and undo those\n * actions when they release their pointing device or lift their finger off.\n *\n * {@link HoverTrigger} allows you to run actions when the user hovers overs a\n * target element, and undo those actions when their pointing device moves off\n * the target. On touch devices it acts just like {@link PressTrigger}.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport { validateBoolean } from \"@lisn/utils/validation\";\n\nimport {\n  PointerWatcher,\n  OnPointerHandler,\n} from \"@lisn/watchers/pointer-watcher\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link ClickTrigger} allows you to run actions when a user clicks a target\n * element (first time and every other time, i.e. odd number of click), and\n * undo them when a user clicks the target element again (or every even number\n * of clicks). It always acts as a toggle.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: A boolean.\n *   - `prevent-select`: A boolean.\n *\n * @example\n * Add classes `active` and `toggled-on` when the user clicks the element\n * (first time and every other time, i.e. odd number of click), remove them\n * when clicked again (or even number of click);\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=active,toggled-on\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-click--@add-class=active,toggled-on\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * clicks it.\n *\n * ```html\n * <div data-lisn-on-click=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `visited` the first time the user clicks the element, and play or\n * reverse the animations on the element 1000ms after each time the user clicks\n * it.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=visited +once ;\n *                          @animate +delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * When the user clicks the next element with class `box` then add classes `c1`\n * and `c2` to the element (that the trigger is defined on) and enable trigger\n * `my-trigger` defined on this same element; undo all of that on even number\n * of clicks on the reference box element.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class ClickTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_CLICK,\n      (element, args, actions, config) =>\n        new ClickTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config?: PointerTriggerConfig,\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_CLICK);\n  }\n}\n\n/**\n * {@link PressTrigger} allows you to run actions when the user presses and\n * holds a pointing device (or their finger) on a target element, and undo\n * those actions when they release their pointing device or lift their finger\n * off.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: boolean\n *   - `prevent-select`: boolean\n *\n * @example\n * Add classes `active` and `pressed` when the user presses and holds (with\n * mouse, finger or any pointer) the element, remove them when they release\n * the mouse.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=active,pressed\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-press--@add-class=active,pressed\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * presses on the element it.\n *\n * ```html\n * <div data-lisn-on-press=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `pressed` the first time the user presses on the element, and\n * play the animations on the element while the user is pressing on the element\n * with a delay of 100ms, reverse the animations as soon as the user releases\n * the mouse.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=pressed +once ;\n *                          @animate +do-delay=100\"\n * ></div>\n * ```\n *\n * @example\n * When the user presses and holds the next element with class `box` then add\n * classes `c1` and `c2` to the element (that the trigger is defined on) and\n * enable trigger `my-trigger` defined on this same element; undo all of that\n * when they release the mouse (or lift their finger/pointer device) from the\n * reference box element.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class PressTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_PRESS,\n      (element, args, actions, config) =>\n        new PressTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config?: PointerTriggerConfig,\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_PRESS);\n  }\n}\n\n/**\n * {@link HoverTrigger} allows you to run actions when the user hovers overs\n * a target element, and undo those actions when their pointing device moves\n * off the target. On touch devices it acts just like {@link PressTrigger}.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: boolean\n *   - `prevent-select`: boolean\n *\n * @example\n * Add classes `active` and `hovered` when the user hovers over the element,\n * remove them otherwise.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=active,hovered\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-press--@add-class=active,hovered\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * hovers over the element it.\n *\n * ```html\n * <div data-lisn-on-hover=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `hovered` the first time the user hovers over the element, and\n * play the animations on the element while the user is hovering over the\n * element with a delay of 100ms, reverse the animations as soon as the user\n * mouse leaves the element.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=hovered +once ;\n *                          @animate +do-delay=100\"\n * ></div>\n * ```\n *\n * @example\n * When the user hovers over the next element with class `box` then add classes\n * `c1` and `c2` to the element (that the trigger is defined on) and enable\n * trigger `my-trigger` defined on this same element; undo all of that when\n * their pointing device (or finger) moves off the reference element.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class HoverTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_HOVER,\n      (element, args, actions, config) =>\n        new HoverTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config?: PointerTriggerConfig,\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_HOVER);\n  }\n}\n\n/**\n * @category Pointer\n * @interface\n */\nexport type PointerTriggerConfig = TriggerConfig & {\n  /**\n   * The target to use for the hover action.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  target?: Element;\n\n  /**\n   * See {@link Watchers/PointerWatcher.OnPointerOptions | OnPointerOptions}.\n   *\n   * @defaultValue {@link PointerWatcher} default, false\n   */\n  preventDefault?: boolean;\n\n  /**\n   * See {@link Watchers/PointerWatcher.OnPointerOptions | OnPointerOptions}.\n   *\n   * @defaultValue {@link PointerWatcher} default, true\n   */\n  preventSelect?: boolean;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<PointerTriggerConfig> = (\n  element,\n) => {\n  return {\n    target: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    preventDefault: validateBoolean,\n    preventSelect: validateBoolean,\n  };\n};\n\nconst setupWatcher = (\n  widget: ClickTrigger | HoverTrigger | PressTrigger,\n  element: Element,\n  actions: Action[],\n  config: PointerTriggerConfig | undefined,\n  action: \"click\" | \"hover\" | \"press\",\n) => {\n  if (!MH.lengthOf(actions)) {\n    return;\n  }\n\n  config ??= {};\n  const target = MH.targetOf(config) ?? element;\n\n  // For clicks use the trigger's own toggle function so that it remembers ITS\n  // state rather than the odd/even clicks. Otherwise if the trigger is\n  // disabled, then clicking will \"swap\" the state.\n  let startHandler: OnPointerHandler;\n  let endHandler: OnPointerHandler;\n  if (action === MC.S_CLICK) {\n    startHandler = endHandler = widget[MC.S_TOGGLE];\n  } else {\n    startHandler = widget.run;\n    endHandler = widget.reverse;\n  }\n\n  PointerWatcher.reuse().onPointer(\n    target,\n    startHandler,\n    endHandler,\n    MH.merge(\n      {\n        actions: action,\n      },\n      omitKeys(config, { target: null }),\n    ),\n  );\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Layout\n * {@link LayoutTrigger} allows you to run actions when the viewport or a\n * target element's width or aspect ratio matches a given specification, and\n * undo those actions when the target's width or aspect ratio no longer\n * matches.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport {\n  isValidDeviceList,\n  isValidAspectRatioList,\n  getOtherDevices,\n  getOtherAspectRatios,\n} from \"@lisn/utils/layout\";\nimport { validateStringRequired } from \"@lisn/utils/validation\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport { LayoutWatcher } from \"@lisn/watchers/layout-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link LayoutTrigger} allows you to run actions when the viewport or a\n * target element's width or aspect ratio matches a given specification, and\n * undo those actions when the target's width or aspect ratio no longer\n * matches.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (required): A single {@link DeviceSpec} or\n *   {@link AspectRatioSpec}. In this case you can use a dash (\"-\") instead of\n *   space if needed (for example if using CSS classes instead of data\n *   attributes), e.g. \"min-tablet\" instead of \"min tablet\".\n *\n * - Additional trigger options:\n *   - `root`: A string element specification. See\n *     {@link Utils.getReferenceElement | getReferenceElement}.\n *\n * @example\n * Show the element when the window width matches \"tablet\" breakpoint, hide\n * otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"tablet @show\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-layout--tablet@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the window width matches \"tablet\" breakpoint,\n * hide otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"tablet @show +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `tablet` when the window width is at least \"tablet\", hide\n * otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"min tablet @add-class=tablet\"></div>\n * ```\n *\n * @example\n * Add class `mobile` when the window width is \"mobile\" or mobile-wide, add\n * class `tablet`, when it's \"tablet\" and so on; undo that otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"max mobile-wide @add-class=mobile ;\n *                           tablet @add-class=tablet ;\n *                           desktop @add-class=desktop\"\n * ></div>\n * ```\n *\n * @example\n * Show the element when window width is at least \"mobile-wide\" and at most\n * \"tablet\", hide otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"mobile-wide to tablet @show\"></div>\n * ```\n *\n * @example\n * When the aspect ratio of the next element with class `box` is square, then\n * add classes `c1` and `c2` to the element (that the trigger is defined on) and\n * enable trigger `my-trigger` defined on this same element; undo all of that\n * otherwise (on other aspect ratios of the reference root):\n *\n * ```html\n * <div data-lisn-on-layout=\"square @add-class=c1,c2 @enable=my-trigger +root=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-layout=\"square @add-class=c1,c2 @enable=my-trigger +root=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n *\n * @category Layout\n */\nexport class LayoutTrigger extends Trigger {\n  readonly getConfig: () => LayoutTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"layout\",\n      (element, args, actions, config) => {\n        return new LayoutTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            layout: validateStringRequired(\n              \"layout\",\n              MH.strReplace(\n                MH.strReplace(args[0] ?? \"\", /(min|max)-/g, \"$1 \"),\n                /-to-/g,\n                \" to \",\n              ),\n              (value) =>\n                isValidDeviceList(value) || isValidAspectRatioList(value),\n            ),\n          }),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: LayoutTriggerConfig,\n  ) {\n    const layout = config?.layout ?? \"\";\n    if (!layout) {\n      throw MH.usageError(\"'layout' is required\");\n    }\n\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    let devices: DeviceSpec | Device[] = [];\n    let aspectRatios: AspectRatioSpec | AspectRatio[] = [];\n    let otherDevices: Device[] = [];\n    let otherAspectRatios: AspectRatio[] = [];\n\n    if (isValidDeviceList(layout)) {\n      devices = layout;\n      otherDevices = getOtherDevices(layout);\n    } else {\n      aspectRatios = layout;\n      otherAspectRatios = getOtherAspectRatios(layout);\n    }\n\n    const root = config.root;\n    const watcher = LayoutWatcher.reuse({ root });\n\n    watcher.onLayout(this.run, { devices, aspectRatios });\n\n    if (MH.lengthOf(otherDevices) || MH.lengthOf(otherAspectRatios)) {\n      watcher.onLayout(this.reverse, {\n        devices: otherDevices,\n        aspectRatios: otherAspectRatios,\n      });\n    }\n  }\n}\n\n/**\n * @category Layout\n * @interface\n */\nexport type LayoutTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link DeviceSpec} or {@link AspectRatioSpec} to use. Required.\n   * See {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for\n   * accepted formats.\n   *\n   * Actions will be \"done\" when the layout of the root matches the given spec\n   * and \"undone\" otherwise.\n   */\n  layout: DeviceSpec | Device[] | AspectRatioSpec | AspectRatio[];\n\n  /**\n   * The root to use for the {@link LayoutWatcher}.\n   * See {@link Watchers/LayoutWatcher.LayoutWatcherConfig | LayoutWatcherConfig}\n   *\n   * @defaultValue {@link LayoutWatcher} default, the viewport\n   */\n  root?: HTMLElement | null;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<LayoutTriggerConfig, \"layout\">\n> = (element) => {\n  return {\n    root: async (key, value) => {\n      const root = MH.isLiteralString(value)\n        ? await waitForReferenceElement(value, element)\n        : undefined;\n      if (root && !MH.isHTMLElement(root)) {\n        throw MH.usageError(\"root must be HTMLElement\");\n      }\n      return root;\n    },\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Load\n * {@link LoadTrigger} allows you to run actions once when the page is loaded.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForPageReady } from \"@lisn/utils/dom-events\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\n/**\n * {@link LoadTrigger} allows you to run actions one when the page is loaded.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *\n * @example\n * Scroll to the given element when the page is loaded:\n *\n * ```html\n * <div data-lisn-on-load=\":scroll-to\"></div>\n * ```\n *\n * @example\n * Scroll to 100px above the given element 500ms after the page is loaded:\n *\n * ```html\n * <div data-lisn-on-load=\"@scroll-to=0,-100 +delay=500\"></div>\n * ```\n *\n * @example\n * Scroll to 100px above the given element 500ms after the page is loaded, and\n * play animations defined on it 500ms later (1000ms after it's loaded):\n *\n * ```html\n * <div data-lisn-on-load=\"@scroll-to=0,-100 +delay=500 ;\n *                         @animate +delay=1000\"\n * ></div>\n * ```\n *\n * @category Load\n */\nexport class LoadTrigger extends Trigger {\n  readonly getConfig: () => TriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"load\",\n      (element, args, actions, config) =>\n        new LoadTrigger(element, actions, config),\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config: TriggerConfig) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    waitForPageReady().then(this.run);\n  }\n}\n","/**\n * @module Triggers\n *\n * @categoryDescription Scroll\n * {@link ScrollTrigger} allows you to run actions when the user scrolls a\n * target element (or the main scrollable element) in a given direction, and\n * undo those actions when they scroll in the opposite direction.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  XYDirection,\n  CommaSeparatedStr,\n  ScrollTarget,\n} from \"@lisn/globals/types\";\n\nimport {\n  getOppositeXYDirections,\n  isValidXYDirection,\n} from \"@lisn/utils/directions\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { validateStrList, validateNumber } from \"@lisn/utils/validation\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link ScrollTrigger} allows you to run actions when the user scrolls a\n * target element (or the main scrollable element) in a given direction, and\n * undo those actions when they scroll in the opposite direction.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (optional): One or more (comma-separated) scroll directions.\n *   Note that if you do not specify any directions, then the trigger will just\n *   run once, on any scroll.\n * - Additional trigger options:\n *   - `scrollable`: A string element specification.\n *      See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `threshold`: A number.\n *\n * @example\n * Show the element when the user scrolls the page up, hide when scrolling\n * down. User scrolling left or right not trigger the action. See\n * {@link getOppositeXYDirections}:\n *\n * ```html\n * <div data-lisn-on-scroll=\"up @show\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-scroll--up@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the first time the user scrolls the page up:\n *\n * ```html\n * <div data-lisn-on-scroll=\"up @show +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `scrolled` the first time the user scrolls the page in any\n * direction (note that the `once` option is implied here), and show the\n * element 1000ms after each time the user scrolls the page up, hide it as soon\n * as they scroll down:\n *\n * ```html\n * <div data-lisn-on-scroll=\"@add-class=scrolled ;\n *                           up @show +do-delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * When the user scrolls up or down the closest ancestor with class `section`,\n * then add classes `c1` and `c2` and enable trigger `my-trigger` defined on\n * this same element; undo all of that when scrolling right or left:\n *\n * ```html\n * <div class=\"section\">\n *   <div data-lisn-on-scroll=\"up,down @add-class=c1,c2 @enable=my-trigger +scrollable=this.section\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n *   ></div>\n *</div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-ref=\"section\">\n *   <div data-lisn-on-scroll=\"up,down @add-class=c1,c2 @enable=my-trigger +scrollable=this-section\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n *   ></div>\n *</div>\n * ```\n *\n * @category Scroll\n */\nexport class ScrollTrigger extends Trigger {\n  readonly getConfig: () => ScrollTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_SCROLL,\n      (element, args, actions, config) => {\n        return new ScrollTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            directions: validateStrList(\"directions\", args, isValidXYDirection),\n          }),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config?: ScrollTriggerConfig,\n  ) {\n    config ??= {};\n\n    let directions = config.directions;\n    if (!directions) {\n      config.once = true;\n      directions = [MC.S_UP, MC.S_DOWN, MC.S_LEFT, MC.S_RIGHT];\n    }\n\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const watcher = ScrollWatcher.reuse();\n    const scrollable = config.scrollable;\n    const threshold = config.threshold;\n\n    const oppositeDirections = directions\n      ? getOppositeXYDirections(directions)\n      : [];\n\n    watcher.onScroll(this.run, {\n      directions,\n      scrollable,\n      threshold,\n    });\n\n    if (MH.lengthOf(oppositeDirections)) {\n      watcher.onScroll(this.reverse, {\n        directions: oppositeDirections,\n        scrollable,\n        threshold,\n      });\n    }\n  }\n}\n\n/**\n * @category Scroll\n * @interface\n */\nexport type ScrollTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link XYDirection}s to use as the trigger.\n   * See also {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * Actions will be \"done\" when the scroll direction is one of the given ones\n   * and \"undone\" when it's the opposite direction. E.g. for \"up\" the opposite\n   * is \"down\".\n   */\n  directions?: CommaSeparatedStr<XYDirection> | XYDirection[];\n\n  /**\n   * The scrolling element target to use for the ScrollWatcher.\n   * See {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * @defaultValue {@link ScrollWatcher} default, the main scrolling element\n   */\n  scrollable?: ScrollTarget;\n\n  /**\n   * The scroll threshold to pass to the {@link ScrollWatcher}.\n   * See also {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  threshold?: number;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<ScrollTriggerConfig, \"directions\">\n> = (element) => {\n  return {\n    scrollable: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    threshold: validateNumber,\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription View\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { ViewTarget, View, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { hasClass } from \"@lisn/utils/css-alter\";\nimport { insertGhostClone, tryWrap } from \"@lisn/utils/dom-alter\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateString,\n  validateNumList,\n} from \"@lisn/utils/validation\";\nimport {\n  getOppositeViews,\n  isValidView,\n  isValidScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport { Action } from \"@lisn/actions/action\";\nimport { Animate } from \"@lisn/actions/animate\";\nimport { AnimatePlay } from \"@lisn/actions/animate-play\";\n\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (optional): One or more (comma-separated) {@link View}s.\n *   Default is \"at\".\n * - Additional trigger options:\n *   - `target`: A string element specification for an element (see\n *     {@link Utils.getReferenceElement | getReferenceElement}) or a\n *     {@link Types.ScrollOffset | ScrollOffset}.\n *   - `root`: A string element specification. See\n *     {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `rootMargin`: A string.\n *   - `threshold`: A number or list (comma-separated) of numbers.\n *\n * @example\n * Show the element when it's in the viewport, hide otherwise.\n *\n * ```html\n * <div data-lisn-on-view=\"at @show\"></div>\n * ```\n *\n * @example\n * Same as above. \"views\" is optional and defaults to \"at\".\n *\n * ```html\n * <div data-lisn-on-view=\"@show\"></div>\n * ```\n *\n * @example\n * As above but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-view--@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the first time it enters the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@show +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `seen` the first time the element enters the viewport, and play\n * the animations defined on it 1000ms after each time it enters the viewport,\n * reverse the animations as soon as it goes out of view.\n *\n * ```html\n * <div data-lisn-on-view=\"@add-class=seen +once ;\n *                         @animate +do-delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * Add class `seen` when the viewport is at or below the element (element\n * above viewport), remove it when the viewport is above the element.\n * Element going to the left or right of the viewport will not trigger the\n * action. See {@link getOppositeViews}:\n *\n * ```html\n * <div data-lisn-on-view=\"at,below @add-class=seen\"></div>\n * ```\n *\n * @example\n * Add class `cls` when the viewport is above or to the left the element\n * (element below or to the right of the viewport), remove it when the\n * viewport is either at, below or to the right of the element.\n *\n * ```html\n * <div data-lisn-on-view=\"above,left @add-class=cls\"></div>\n * ```\n *\n * @example\n * Hide the element when the viewport is above the next element with class\n * `section`, show it when the viewport is below or at the target element.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next.section\"></div>\n * <div class=\"section\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next-section\"></div>\n * <div data-lisn-ref=\"section\"></div>\n * ```\n *\n * @example\n * Open the {@link Widgets.Openable | Openable} widget configured for this\n * element when the viewport is 75% down from the top of the page.\n *\n * ```html\n * <div data-lisn-on-view=\"@open +target=top:75%\"></div>\n * ```\n *\n * @category View\n */\nexport class ViewTrigger extends Trigger {\n  readonly getConfig: () => ViewTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"view\",\n      (element, args, actions, config) => {\n        return new ViewTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            views: validateStrList(\"views\", args, isValidView),\n          } as const),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config?: ViewTriggerConfig) {\n    super(element, actions, config);\n\n    const logger = debug\n      ? new debug.Logger({\n          name: `ViewTrigger-${formatAsString(element)}`,\n        })\n      : null;\n\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const watcher = ViewWatcher.reuse({\n      root: config?.root,\n      rootMargin: config?.rootMargin?.replace(/,/g, \" \"),\n      threshold: config?.threshold,\n    });\n\n    const target = config?.target ?? element;\n    const views = config?.views || MC.S_AT;\n    const oppositeViews = getOppositeViews(views);\n\n    const setupWatcher = (target: ViewTarget) => {\n      if (!MH.lengthOf(oppositeViews)) {\n        debug: logger?.debug6(\"Trigger can never be reversed, running now\");\n        // The action is never undone\n        this.run();\n      } else {\n        debug: logger?.debug6(\"Setting up trigger\", views, oppositeViews);\n        watcher.onView(target, this.run, { views });\n        watcher.onView(target, this.reverse, { views: oppositeViews });\n      }\n    };\n\n    // See comment in globals/settings under contentWrappingAllowed\n    let willAnimate = false;\n    for (const action of actions) {\n      if (\n        MH.isInstanceOf(action, Animate) ||\n        MH.isInstanceOf(action, AnimatePlay)\n      ) {\n        willAnimate = true;\n        break;\n      }\n    }\n\n    if (willAnimate) {\n      setupRepresentative(element).then(setupWatcher);\n    } else {\n      setupWatcher(target);\n    }\n  }\n}\n\n/**\n * @category View\n * @interface\n */\nexport type ViewTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link View} to use as the trigger.\n   * See also {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * Actions will be \"done\" when the view matches the given spec and \"undone\"\n   * otherwise. What the opposite views are depends on the given view. E.g. for\n   * \"at\", opposites are all the other ones;  for \"above\", the opposite ones\n   * are \"at\" and \"below\"; for \"at,above\" opposite is \"below\", etc.\n   *\n   * @defaultValue \"at\"\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * The target to use for the ViewWatcher. It can be a string offset\n   * specification.\n   * See {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * @defaultValue The element on which the {@link ViewTrigger} is defined\n   */\n  target?: ViewTarget;\n\n  /**\n   * The root to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  root?: Element | null;\n\n  /**\n   * The root margin to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * It can be either space-separated or comma-separated.\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  threshold?: number | number[];\n};\n\n// ----------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<ViewTriggerConfig, \"views\">\n> = (element) => {\n  return {\n    target: (key, value) =>\n      MH.isLiteralString(value) && isValidScrollOffset(value)\n        ? value\n        : ((MH.isLiteralString(value)\n            ? waitForReferenceElement(value, element)\n            : null) ?? undefined),\n    root: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    rootMargin: validateString,\n    threshold: (key, value) => validateNumList(key, value),\n  };\n};\n\nconst setupRepresentative = async (element: Element): Promise<Element> => {\n  let target: Element | null = await tryWrap(element);\n  if (!target) {\n    // Not allowed to wrap. Create a dummy hidden clone that's not animated and\n    // position it absolutely in a wrapper of size 0 that's inserted just\n    // before the actual element, so that the hidden clone overlaps the actual\n    // element's regular (pre-transformed) position.\n\n    const prev = element.previousElementSibling;\n    const prevChild = MH.childrenOf(prev)[0];\n    if (\n      prev &&\n      hasClass(prev, MC.PREFIX_WRAPPER) &&\n      prevChild &&\n      hasClass(prevChild, MC.PREFIX_GHOST)\n    ) {\n      // Already cloned by a previous animate action?\n      target = prevChild;\n    } else {\n      target = (await insertGhostClone(element))._clone;\n    }\n  }\n\n  return target;\n};\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nexport * from \"@lisn/triggers/check-trigger\";\nexport * from \"@lisn/triggers/pointer-trigger\";\nexport * from \"@lisn/triggers/layout-trigger\";\nexport * from \"@lisn/triggers/load-trigger\";\nexport * from \"@lisn/triggers/scroll-trigger\";\nexport * from \"@lisn/triggers/trigger\";\nexport * from \"@lisn/triggers/view-trigger\";\n\nexport * from \"@lisn/triggers/trigger\";\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport \"@lisn/bundle-essentials\"; // side effects\n\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport * as _actions from \"@lisn/actions/index\";\nimport * as triggers from \"@lisn/triggers/index\";\n\nexport * from \"@lisn/bundle-essentials\";\n\n// --- remove widget specific actions\nexport const actions = omitKeys(_actions, {\n  Open: true,\n  NextPage: true,\n  PrevPage: true,\n  GoToPage: true,\n  EnablePage: true,\n  DisablePage: true,\n} as const);\n\nexport * as triggers from \"@lisn/triggers/index\";\n\nactions.AddClass.register();\nactions.RemoveClass.register();\nactions.AnimatePlay.register();\nactions.AnimatePause.register();\nactions.Animate.register();\nactions.Display.register();\nactions.Undisplay.register();\nactions.ScrollTo.register();\nactions.SetAttribute.register();\nactions.Show.register();\nactions.Hide.register();\nactions.Enable.register();\nactions.Disable.register();\nactions.Run.register();\n\ntriggers.LayoutTrigger.register();\ntriggers.LoadTrigger.register();\ntriggers.CheckTrigger.register();\ntriggers.ClickTrigger.register();\ntriggers.PressTrigger.register();\ntriggers.HoverTrigger.register();\ntriggers.ScrollTrigger.register();\ntriggers.Trigger.register();\ntriggers.ViewTrigger.register();\n"],"names":["PREFIX","LOG_PREFIX","OBJECT","Object","SYMBOL","Symbol","ARRAY","Array","STRING","String","FUNCTION","Function","MATH","Math","NUMBER","Number","PROMISE","Promise","PI","INFINITY","Infinity","S_ABSOLUTE","S_FIXED","S_WIDTH","S_HEIGHT","S_TOP","S_BOTTOM","S_UP","S_DOWN","S_LEFT","S_RIGHT","S_AT","S_ABOVE","S_BELOW","S_IN","S_OUT","S_NONE","S_AMBIGUOUS","S_ADDED","S_REMOVED","S_ATTRIBUTE","S_KEY","S_MOUSE","S_POINTER","S_TOUCH","S_WHEEL","S_CLICK","S_HOVER","S_PRESS","S_SCROLL","S_ZOOM","S_DRAG","S_UNKNOWN","S_SCROLL_TOP","S_SCROLL_LEFT","S_SCROLL_WIDTH","S_SCROLL_HEIGHT","S_CLIENT_WIDTH","S_CLIENT_HEIGHT","S_SCROLL_TOP_FRACTION","S_SCROLL_LEFT_FRACTION","S_HORIZONTAL","S_VERTICAL","S_SKIP_INITIAL","S_DEBOUNCE_WINDOW","S_TOGGLE","S_CANCEL","S_KEYDOWN","S_MOUSEUP","S_MOUSEDOWN","S_POINTERUP","S_POINTERDOWN","S_POINTERENTER","S_POINTERLEAVE","S_POINTERMOVE","S_POINTERCANCEL","S_TOUCHSTART","S_TOUCHEND","S_TOUCHMOVE","S_TOUCHCANCEL","S_SELECTSTART","S_ATTRIBUTES","S_CHILD_LIST","S_REVERSE","S_DISABLED","S_ARROW","S_ROLE","S_AUTO","S_VISIBLE","ARIA_PREFIX","S_ARIA_CONTROLS","PREFIX_WRAPPER","PREFIX_INLINE_WRAPPER","PREFIX_TRANSITION","PREFIX_TRANSITION_DISABLE","PREFIX_HIDE","PREFIX_SHOW","PREFIX_DISPLAY","PREFIX_UNDISPLAY","PREFIX_ORIENTATION","PREFIX_GHOST","PREFIX_NO_SELECT","PREFIX_NO_TOUCH_ACTION","PREFIX_NO_WRAP","S_ANIMATE","ANIMATE_PREFIX","PREFIX_ANIMATE_DISABLE","PREFIX_ANIMATE_PAUSE","PREFIX_ANIMATE_REVERSE","LisnError","Error","LisnUsageError","constructor","message","name","LisnBugError","root","self","global","kebabToCamelCase","str","replace","m","toUpperCase","charAt","camelToKebabCase","toLowerCase","prefixName","MC","prefixCssVar","prefixCssJsVar","prefixData","s","timeNow","Date","now","bind","timeSince","startTime","hasDOM","document","getWindow","window","getDoc","getDocElement","documentElement","getDocScrollingElement","scrollingElement","getBody","body","getReadyState","readyState","getPointerType","event","isPointerEvent","pointerType","isMouseEvent","onAnimationFrame","callback","requestAnimationFrame","createElement","tagName","options","createButton","label","tag","btn","setTabIndex","setAttr","isNullish","v","undefined","isEmpty","isIterableObject","isNonPrimitive","iterator","isArray","isInstanceOf","isObject","typeOf","isNumber","isString","isLiteralString","isBoolean","isFunction","isDoc","target","MouseEvent","PointerEvent","isTouchPointerEvent","isWheelEvent","WheelEvent","isKeyboardEvent","KeyboardEvent","isTouchEvent","TouchEvent","isElement","Element","isHTMLElement","HTMLElement","isNodeBAfterA","nodeA","nodeB","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","strReplace","match","replacement","setTimer","setTimeout","clearTimer","clearTimeout","getBoundingClientRect","element","copyBoundingRectProps","rect","x","left","right","y","top","bottom","querySelector","selector","querySelectorAll","docQuerySelector","docQuerySelectorAll","getElementById","id","getAttr","getAttribute","value","setAttribute","unsetAttr","delAttr","removeAttribute","includes","arr","startAt","indexOf","some","array","predicate","filter","filterFn","filterBlank","result","lengthOf","sizeOf","obj","_obj$size","size","_obj$length","length","lastOf","a","slice","hasTagName","preventDefault","arrayFrom","from","keysOf","keys","defineProperty","merge","assign","copyObject","promiseResolve","resolve","promiseAll","all","freeze","hasOwnProp","o","prop","prototype","hasOwnProperty","call","preventExtensions","stringify","JSON","floor","ceil","log2","sqrt","max","min","abs","round","pow","exp","parseFloat","isNaN","Class","constructorOf","typeOrClassOf","_constructorOf","parentOf","_element$parentElemen","parentElement","childrenOf","children","targetOf","currentTargetOf","currentTarget","classList","S_TABINDEX","getTabIndex","index","unsetTabIndex","remove","deleteObjKey","key","deleteKey","map","delete","elScrollTo","coords","behavior","scrollTo","newPromise","executor","newMap","entries","Map","newWeakMap","WeakMap","newSet","values","Set","newWeakSet","WeakSet","newIntersectionObserver","IntersectionObserver","newResizeObserver","ResizeObserver","newMutationObserver","MutationObserver","usageError","msg","bugError","illegalConstructorError","useWhat","CONSOLE","console","debug","log","info","consoleWarn","warn","consoleError","error","settings","MH","mainScrollableElementSelector","contentWrappingAllowed","pageLoadTimeout","autoWidgets","scrollbarHideNative","scrollbarOnMobile","scrollbarPositionH","scrollbarPositionV","scrollbarAutoHide","scrollbarClickScroll","scrollbarDragScroll","scrollbarUseHandle","sameHeightDiffTolerance","sameHeightResizeThreshold","sameHeightDebounceWindow","sameHeightMinGap","sameHeightMaxFreeR","sameHeightMaxWidthR","deviceBreakpoints","mobile","tablet","desktop","aspectRatioBreakpoints","tall","square","wide","lightThemeClassName","darkThemeClassName","deltaLineHeight","deltaPageWidth","deltaPageHeight","verbosityLevel","remoteLoggerURL","remoteLoggerOnMobileOnly","roundNumTo","numDecimal","multiplicationFactor","isValidNum","isFinite","toNum","defaultValue","numValue","toInt","toNonNegNum","toPosNum","toNumWithBounds","limits","_limits$min","_limits$max","_ref","maxAbs","havingMaxAbs","sort","b","hAngle","normalizeAngle","atan2","degToRad","areParallel","vA","vB","angleDiffThreshold","angleA","angleB","areAntiParallel","distanceBetween","ptA","ptB","criticallyDamped","lTarget","precision","lag","N","w0","l","dt","A","B","e","sortedKeysByVal","descending","getBitmask","start","end","copyExistingKeys","fromObj","toObj","omitKeys","keysToRm","res","compareValuesIn","objA","objB","roundTo","valA","valB","toArrayIfSingle","toBoolean","formatAsString","maxLen","maybeConvertToString","joinAsString","separator","args","join","splitOn","input","trim","limit","output","addEntry","push","matchIndex","matchLength","_match$index","exec","randId","nChars","segment","random","toString","toMargins","absoluteSize","_parts$","_parts$2","_parts$3","toPxValue","strValue","margin","parts","margins","objToStrKey","flattenForSorting","k","stringifyReplacer","nested","classStr","stack","validateStrList","checkFn","_toArray","toArray","_validateString","validateNumList","_toArray2","_validateNumber","validateNumber","validateBoolean","_validateBoolean","validateString","validateStringRequired","typeDescription","numVal","boolVal","BitSpaces","counter","newCounter","create","propNames","newBitSpace","get","_nBits","_bitmask","newBitSpaces","createBitSpace","spaces","bitmask","space","bit","has","p","bitmaskFor","pStart","pEnd","thisStart","thisEnd","nameOf","val","_propNames","enumerable","DOM_CATEGORIES_SPACE","scheduleHighPriorityTask","task","scheduler","postTask","priority","channel","MessageChannel","port1","onmessage","close","port2","postMessage","getDebouncedHandler","debounceWindow","handler","timer","lastArgs","waitForDelay","delay","wrapCallback","handlerOrCallback","isRemoved","callablesMap","invoke","wrapper","Callback","onRemove","rmFn","CallbackScheduler","_clear","fn","add","reject","_push","err","REMOVE","set","_defineProperty","queues","flush","queue","_running","_task","shift","item","_onRemove","logWarn","isMessageSeen","logError","discardMessages","isSeen","waitForMutateTime","scheduleDOMTask","scheduledDOMMutations","waitForMeasureTime","scheduledDOMMeasurements","waitForSubsequentMutateTime","then","waitForSubsequentMeasureTime","asyncMutatorFor","func","asyncMeasurerFor","hasScheduledDOMTasks","runAllDOMTasks","runDOMTaskQueue","getVisibleContentChildren","ch","isVisibleContentTag","isInlineTag","inlineTags","isDOMElement","SVGElement","MathMLElement","transitionElementNow","fromCls","toCls","cancelCSSTransitions","didChange","hasClass","removeClassesNow","addClassesNow","transitionElement","thisTransition","scheduleCSSTransition","_isCancelled","_finish","transitionDuration","getMaxTransitionDuration","displayElementNow","displayElement","undisplayElementNow","undisplayElement","showElement","hideElement","toggleDisplayElement","isElementUndisplayed","toggleShowElement","isElementHidden","className","contains","hasAnyClass","classNames","addClasses","removeClasses","toggleClassNow","force","toggle","toggleClassesNow","cls","toggleClasses","getData","setDataNow","setData","setBooleanDataNow","setBooleanData","unsetBooleanDataNow","unsetBooleanData","delDataNow","delData","getComputedStylePropNow","getComputedStyle","getPropertyValue","getComputedStyleProp","setStylePropNow","_style2","style","setProperty","setStyleProp","delStylePropNow","_style3","removeProperty","propVal","duration","disableInitialTransition","setHasModal","PREFIX_HAS_MODAL","delHasModal","setNumericStyleJsVarsNow","props","_options$_prefix","varPrefix","_prefix","cssPropSuffix","varName","_options$_numDecimal","thisNumDecimal","_numDecimal","_options$_units","_units","setNumericStyleJsVars","scheduledCSSTransitions","toClasses","scheduledTransitions","scheduledTransition","_cancel","isCancelled","wrapElementNow","createWrapperFor","ignoreMove","to","replaceWith","append","wrapElement","wrapChildrenNow","moveChildrenNow","moveElementNow","replaceElementNow","newElement","oldParent","newParent","child","_options$to","parentEl","position","moveElement","getOrAssignID","prefix","domID","isAllowedToWrap","getWrapper","_tagName","_classNames","parent","getContentWrapper","firstChild","tryWrapNow","_tryWrapNow","tryWrap","tryWrapContentNow","tryWrapContent","cloneElement","clone","cloneNode","insertGhostCloneNow","insertBefore","_required","_wrapper","_clone","insertGhostClone","_options$from","_options$to2","recordsToSkipOnce","getIgnoreMove","_recordsToSkipOnce$ge","clearIgnoreMove","wrapContent","_ignoreMove","required","_requiredBy","requiredBy","getWrapperFn","wrapFn","allowedToWrap","waitForElement","timeout","callFn","observer","disconnect","observe","childList","subtree","waitForElementOrInteractive","isInteractive","waitForInteractive","INTERACTIVE","COMPLETE","addEventListener","waitForComplete","waitForPageReady","pageIsReady","dispatchReady","isPageReady","newXMap","getDefaultV","XMap","newXMapGetter","newXWeakMap","XWeakMap","newXWeakMapGetter","XMapBase","sGet","prune","sk","rest","clear","DOMWatcher","config","getConfig","CONSTRUCTOR_KEY","reuse","_instances$get","myConfig","configStrKey","_root","instance","instances","buffer","t","_target","_categoryBitmask","_attributes","_addedTo","_removedFrom","allCallbacks","mutationHandler","records","record","recType","type","addedNodes","operation","ADDED_BIT","removedNodes","REMOVED_BIT","attributeName","ATTRIBUTE_BIT","shouldSkipOperation","processOperation","observers","_observer","_isActive","createCallback","_allCallbacks$get","_callback","deleteHandler","_options","setupOnMutation","userOptions","_config$_root","getOptions","activateObserver","skipInitial","_selector","childQueue","takeRecords","matches","initOperation","bufferedOperation","diffOperation","getDiffOperation","invokeCallback","activeCategories","entry","deactivateObserver","categoryBitmask","currentTargets","mutationType","_subtree","_config$_root2","requestToSkip","removedFrom","addedTo","requestFrom","requestTo","onMutation","offMutation","_allCallbacks$get2","_config$root","_config$subtree","CATEGORIES_BITS","_options$selector","_options$target","categories","cat","operationA","operationB","attributes","attr","catch","getMaxDeltaDirection","deltaX","deltaY","getVectorDirection","vector","getOppositeDirection","direction","OPPOSITE_DIRECTIONS","getOppositeXYDirections","directions","directionList","isValidXYDirection","opposites","opposite","XY_DIRECTIONS","isValidDirection","DIRECTIONS","Z_DIRECTIONS","SCROLL_DIRECTIONS","callEventListener","_event$currentTarget","_event$currentTarget2","handleEvent","addEventListenerTo","eventType","transformEventType","getEventHandlerData","thirdArg","wrappedHandler","supports","getBrowserSupport","_optionsArg","_options$capture","capture","once","removeEventListenerFrom","setEventHandlerData","_wrappedHandler","_thirdArg","data","removeEventListener","deleteEventHandlerData","preventSelect","undoPreventSelect","browserEventSupport","_pointer","passive","signal","optTest","opt","thisOpt","AbortController","dummyHandler","dummyElement","e__ignored","registeredEventHandlerData","getEventOptionsStr","finalOptions","_registeredEventHandl","optionsStr","_registeredEventHandl2","startsWith","isValidInputDevice","device","DEVICES","isValidIntent","intent","INTENTS","addDeltaZ","current","increment","MIN_DELTA_Z","getKeyGestureFragment","events","_options$scrollHeight","LINE","PAGE","CONTENT","scrollHeight","deltasUp","amount","deltasDown","deltasLeft","deltasRight","deltasIn","deltasOut","deltaZ","_deltasForKey$event$k","deltasForKey","SK_UP","SK_ARROWUP","SK_PAGEUP","Home","SK_DOWN","SK_ARROWDOWN","SK_PAGEDOWN","End","SK_LEFT","SK_ARROWLEFT","SK_RIGHT","SK_ARROWRIGHT","shiftKey","ctrlKey","theseDeltas","thisDeltaX","thisDeltaY","thisDeltaZ","thisIntent","SK_PAGE","SK_ARROW","getPointerGestureFragment","pointerEventClass","pointerUpType","filteredEvents","eType","buttons","numEvents","firstEvent","lastEvent","clientX","clientY","getTouchGestureFragment","_options$dragHoldTime","_options$dragNumFinge","moves","getTouchDiff","deltaThreshold","numMoves","holdTime","getHoldTime","canBeDrag","dragHoldTime","dragNumFingers","d","isSignificant","vectorA","vectorB","startDistance","startX","startY","endDistance","endX","endY","deltaSign","reverseScroll","isFirst","thisDirection","lastTouchEvent","touches","groupedTouches","touch","identifier","touchList","nTouches","firstTouch","lastTouch","firstStart","findIndex","firstMove","timeStamp","normalizeWheel","spinX","spinY","pixelX","pixelY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","deltaMode","getWheelGestureFragment","maxDelta","percentage","GestureWatcher","allListeners","getCallbackAndWrapper","setupOnGesture","_options$_devices","_devices","_allListeners$get","listeners","setupListeners","_nCallbacks","_preventDefault","_nPreventDefault","_options$_devices2","_allListeners$get2","_remove","invokeCallbacks","_allListeners$get$get","_allListeners$get3","isTerminated","intents","_intents","hasAddedTabIndex","hasPreventedSelect","addOrRemoveListeners","action","listener","eventTypes","method","addInitialListener","initialListener","initiatingEvents","removeInitialListener","addOngoingListener","processEvent","ongoingEvents","removeOngoingListener","trackGesture","setGestureCssProps","totalDeltaX","totalDeltaY","totalDeltaZ","noTrackGesture","offGesture","onGesture","_allCallbacks$get3","_config$preventDefaul","_config$naturalTouchS","_config$touchDragHold","_config$touchDragNumF","_debounceWindow","_deltaThreshold","_angleDiffThreshold","_naturalTouchScroll","naturalTouchScroll","_touchDragHoldTime","touchDragHoldTime","_touchDragNumFingers","touchDragNumFingers","pointer","wheel","fragmentGetters","_validateStrList","_validateStrList2","_validateStrList3","_options$minTotalDelt","_options$maxTotalDelt","_options$minTotalDelt2","_options$maxTotalDelt2","_options$minTotalDelt3","_options$maxTotalDelt3","_options$preventDefau","_options$naturalTouch","_options$touchDragHol","_options$touchDragNum","devices","_directions","_minTotalDeltaX","minTotalDeltaX","_maxTotalDeltaX","maxTotalDeltaX","_minTotalDeltaY","minTotalDeltaY","_maxTotalDeltaY","maxTotalDeltaY","_minTotalDeltaZ","minTotalDeltaZ","_maxTotalDeltaZ","maxTotalDeltaZ","logger","preventNextClick","eventQueue","debouncedWrapper","fragment","eventQueueCopy","_eventQueueCopy","_eventQueueCopy$","clearEventQueue","newTotalDeltaX","newTotalDeltaY","newTotalDeltaZ","time","preventDefaultActionFor","keepLastEvent","splice","isActualGesture","isPointerDown","focus","preventScroll","isValidDeviceList","isValidForType","S_DEVICES","ORDERED_DEVICES","isValidAspectRatioList","aspectR","S_ASPECTRS_CAMEL","ORDERED_ASPECTR","getOtherDevices","getOtherLayouts","getOtherAspectRatios","getLayoutBitmask","layoutBitmask","getBitmaskFromSpec","aspectRatios","ORDERED_DEVICE_NAMES","ORDERED_ASPECTR_NAMES","bitSpaces","NUM_LAYOUTS","LAYOUT_RANGE_REGEX","RegExp","getLayoutsFromBitmask","keyName","bitSpace","layouts","spec","oppositeBitmask","singleKeyName","rangeMatch","minLayout","maxLayout","lt","waitForAnimationFrame","newAnimationFrameIterator","_x","_newAnimationFrameIterator","apply","arguments","_wrapAsyncGenerator","elapsed","previousTimeStamp","total","totalSeed","sinceLast","sinceLastSeed","step","totalElapsed","elapsedSinceLast","iterateAnimations","webAnimationCallback","legacyCallback","realtime","animation","getAnimations","resetCssAnimationsNow","isScrollable","axis","active","noCache","_isScrollableCache$ge","cachedResult","isScrollableCache","offset","canScroll","dimension","isDocScrollable","hasOverflow","overflowProp","scrollingOverflows","IS_SCROLLABLE_CACHE_TIMEOUT","getClosestScrollable","ancestor","getCurrentScrollAction","scrollable","toScrollableOrDefault","currentScrollInfos","_action","_scrollable","cancel","cancelFn","_weCanInterrupt","scrollEvents","preventScrollHandler","_userCanInterrupt","thisInfo","waitFor","scrollActionPromise","cleanup","_currentScrollInfos$g","initiateScroll","updateCurrentScrollInfo","isValidScrollDirection","getClientWidthNow","isScrollableBodyInQuirks","offsetWidth","getBorderWidth","getClientHeightNow","offsetHeight","fetchMainContentElement","init","mainContentElement","tryGetMainScrollableElement","mainScrollableElement","fetchMainScrollableElement","getDefaultScrollingElement","_MH$getDocScrollingEl","fetchScrollableElement","toScrollableOrMain","mappedScrollables","DIFF_THRESHOLD","arePositionsDifferent","threshold","side","getMain","_mappedScrollables$ge","_options$offset","_options$altOffset","_options$duration","_options$weCanInterru","_options$userCanInter","getTargetCoordinates","altTarget","_offset","_altTarget","_altOffset","altOffset","_duration","weCanInterrupt","userCanInterrupt","newInfo","_newInfo$_action","existingScrollInfo","isDocScrollingElement","targetEl","getStartEndPosition","applyOffset","_offset$top","_offset$left","getEndPosition","_start","_end","startPosition","targetCoordinates","endPosition","scrollH","scrollW","clientH","clientW","_existingScrollInfo$_","_existingScrollInfo$_2","currentPosition","_position","currentVelocity","_velocity","_elapsed","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_asyncIterator","_step","next","done","deltaTime","debug8","isDone","return","initPromise","contentElement","createOverlay","fetchOverlayOptions","canReuse","_id","_overlays$get2","existingOverlay","overlays","_parent","_overlayKey","overlay","createOnlyOverlay","isPercentageHOffset","_style","isPercentageVOffset","needsContentWrapping","_userOptions$data2","_userOptions$id2","getCssProperties","fetchParent","_data","getOverlayKey","finalCssProperties","userSuppliedParent","getEntryContentBox","contentBoxSize","getSizeFromInlineBlock","contentRect","getEntryBorderBox","fallbackToContent","borderBoxSize","NaN","isValidBox","box","ALL_BOXES","isValidDimension","ALL_DIMENSIONS","tryGetViewportOverlay","viewportOverlay","fetchViewportOverlay","fetchViewportSize","_root$clientWidth","_root$clientHeight","clientWidth","clientHeight","S_INLINE_SIZE","S_BLOCK_SIZE","XResizeObserver","targetsToSkip","observedTargets","resizeHandler","skipNum","borderObserver","contentObserver","observeTarget","targets","observeLater","unobserve","SizeWatcher","allSizeData","processEntry","xObserver","fetchCurrentSize","fetchElement","sizeData","getSizeData","border","content","fetchOptions","_options$box","_options$dimension","_options$MC$S_DEBOUNC","_element","_box","_dimension","_threshold","_resizeThreshold","setupOnResize","removeOnResize","currEntry","setSizeCssProps","latestData","thresholdsExceeded","hasExceededThreshold","trackSize","noTrackSize","onResize","offResize","resizeThreshold","lastThresholdData","dim","diff","borderBox","contentBox","borderWidth","borderHeight","contentWidth","contentHeight","LayoutWatcher","nonIntersectingBitmask","currentLayoutData","aspectRatio","fetchCurrentLayout","readyPromise","setupOverlays","createOverlays","_deviceBreakpoints","_aspectRatioBreakpoints","isReady","intersectionHandler","numEntries","getNonIntersecting","processLayoutChange","observeOptions","rootMargin","triggerOverlay","_layoutBitmask","setupOnLayout","layoutData","changeMatches","skipCallbacks","deviceBit","aspectRatioBit","onLayout","offLayout","VAR_BORDER_HEIGHT","PREFIX_DEVICE","PREFIX_ASPECTR","overlayPromises","overlayParent","parentHeightCss","getOverlayLayout","layout","thisLayoutData","prevLayoutData","isIntersecting","isValidPointerAction","POINTER_ACTIONS","PointerWatcher","setupOnPointer","startHandler","endHandler","startCallback","endCallback","_actions","listenerSetupFn","onPointer","offPointer","_config$preventSelect","_preventSelect","_options$preventSelec","actions","setupClickListener","toggleState","state","setupPointerListeners","startEventSuff","endEventSuff","startEvent","endEvent","startListener","endListener","click","hover","press","actionData","ScrollWatcher","allScrollData","activeListeners","fetchCurrentScroll","isScrollEvent","previousEventData","fetchScrollData","trackType","_trackType","setupOnScroll","fetchOnScrollOptions","eventTarget","_eventTarget","scrollData","TRACK_FULL","setupSizeTrack","listenerOptions","_nRealtime","scrollHandler","directionMatches","removeOnScroll","setScrollCssProps","scrollCallback","doc","docScrollingElement","resizeCallback","sizeWatcher","observedElements","domWatcher","onAddedCallback","_activeListeners$get$","_activeListeners$get","scroll","_options$amount","isVertical","sign","targetCoordinate","asFractionOf","el","_scrollDuration","fetchCurrentScrollAction","stopUserScrolling","stopScroll","immediate","trackScroll","noTrackScroll","onScroll","TRACK_REGULAR","offScroll","_scrollThreshold","scrollThreshold","scrollDuration","getEventTarget","userDirections","latestDirection","topDiff","leftDiff","checkTop","checkLeft","_previousEventData$sc","_previousEventData$sc2","scrollTop","scrollLeft","scrollWidth","scrollTopFraction","scrollLeftFraction","prevScrollTop","prevScrollLeft","isValidScrollOffset","OFFSET_REGEX","isValidView","view","VIEWS","getOppositeViews","views","getViewsBitmask","VIEWS_SPACE","at","above","below","getViewsFromBitmask","viewsStr","viewsBitmask","parseScrollOffset","reference","XIntersectionObserver","selectedEntries","thresholds","ViewWatcher","allViewData","_rootMargin","fetchCurrentView","fetchData","entryOrElement","intersection","fetchIntersectionData","fetchViewData","promise","setupOnView","viewData","rootBounds","setupInviewTrack","viewsToBitmask","_viewsBitmask","removeOnView","setViewCssProps","viewCallback","scrollWatcher","isInview","removeTrackCallback","scrollableAncestors","fetchScrollableAncestors","addTrackCallback","trackCallback","prevData","changed","viewChanged","enterOrLeaveCallback","target__ignored","trackView","noTrackView","onView","offView","_config$rootMargin","_config$threshold","targetBounds","relative","entryOrTarget","vpSize","rootMargins","isCrossOrigin","IntersectionObserverEntry","boundingClientRect","fetchBounds","_targetBounds","_rootMargins","_rootBounds","_isIntersecting","_isCrossOrigin","width","height","_intersection$_isInte","vpHeight","vpWidth","fetchViews","hMiddle","vMiddle","useScrollingAncestor","delta","_left","_right","_top","_bottom","xView","yView","scrollingAncestor","_viewData$relative","overlayOptions","getOverlayOptions","ovrDimension","Widget","_instances$get$get","_instances$get2","destroy","isDisabled","isDestroyed","destroyPromise","enableCallbacks","disableCallbacks","destroyCallbacks","disable","enable","toggleEnable","onDisable","onEnable","elInstances","onDestroy","getElement","registerWidget","newWidget","configValidator","registeredWidgets","prefixedName","getDefaultWidgetSelector","thisConfigValidator","widgets","configSpecs","dataAttr","supportsMultiple","fetchWidgetConfig","theseWidgets","w","getWidgetConfig","validator","toOptionsObject","configPromises","fetchUniqueWidget","Type","widget","registerAction","newAction","registeredActions","newActionFromSpec","argsAndOptions","fetchAction","AddClass","register","_add","_toggle","getMethods","do","undo","RemoveClass","Animate","animate","GO_FORWARD","GO_BACKWARD","GO_TOGGLE","isInitial","setupAnimation","setupAnimationLegacy","pauseTillReady","isBackward","playbackRate","reverse","playState","play","pause","CSSAnimation","cancelHandler","onAnimationCancel","Animation","effect","KeyframeEffect","newAnimation","_MH$targetOf","animationName","isPaused","goBackwards","doPause","AnimatePlay","_play","_pause","PAUSE","AnimatePause","PLAY","TOGGLE","Display","_display","_undisplay","Undisplay","getReferenceElement","thisElement","referenceElement","relation","find","matchOp","refOrCls","_getData","PREFIX_REF","DATA_REF","getFirstReferenceElement","getLastReferenceElement","getThisReferenceElement","getNextReferenceElement","getPrevReferenceElement","waitForReferenceElement","getAllReferenceElements","allRefs","closest","getNextOrPrevReferenceElement","goBackward","_getThisReferenceElem","_allRefs$refIndex","numRefs","refIndex","i","currentIsAfter","Trigger","registerTrigger","_config$once","_config$oneWay","_config$delay","_config$doDelay","_config$undoDelay","oneWay","doDelay","undoDelay","lastCallId","callActions","newToggleState","myCallId","run","getActions","newTrigger","clsPref","baseConfigValidator","newBaseConfigValidator","allSpecs","TRIGGER_SEP","_config$actOn","tmp","configSpec","OPTION_PREF_CHAR","argSpec","allActionSpecs","ACTION_PREF_CHAR","actionTarget","actOn","actionSpec","actionArgsAndOptions","ACTION_ARGS_PREF_CHAR","Enable","ids","_enable","_disable","_toggleEnable","Disable","Run","_run","_reverse","triggerPromises","getTriggers","triggers","trigger","ScrollTo","offsetX","offsetY","newConfigValidator","watcher","canReverse","hasReversed","_validateNumber2","SetAttribute","isOn","setAttrs","on","attrName","off","Show","_show","_hide","Hide","isValidPosition","POSITIONS","Openable","properties","isModal","isOffcanvas","openCallbacks","closeCallbacks","isOpen","open","PREFIX_IS_OPEN","scrollWrapperToTop","outerWrapper","onOpen","onClose","getRoot","getContainer","container","getTriggerConfigs","setupElements","PREFIX_CLOSE_BTN","PREFIX_OPENS_ON_HOVER","S_ARIA_EXPANDED","S_ARIA_MODAL","MIN_CLICK_TIME_AFTER_HOVER_OPEN","S_ARROW_UP","S_ARROW_DOWN","S_ARROW_LEFT","S_ARROW_RIGHT","ARROW_TYPES","ICON_CLOSED_TYPES","ICON_OPEN_TYPES","isValidIconClosed","isValidIconOpen","triggerConfigValidator","autoClose","icon","iconClosed","iconOpen","getPrefixedNames","pref","_overlay","_innerWrapper","_outerWrapper","_content","_container","_trigger","_containerForSelect","_triggerForSelect","_contentId","findContainer","_currWidget$getRoot","currWidget","childRef","findTriggers","prefixedNames","getTriggerSelector","suffix","contentId","getTriggersFrom","inputTriggers","wrapTriggers","triggerMap","addTrigger","triggerConfig","_properties$wrapTrigg","innerWrapper","placeholder","closeButton","closeBtn","elements","onSetup","hoverTimeOpened","isPointerOver","activeTrigger","isTrigger","shouldPreventDefault","_triggers$get$prevent","_triggers$get","usesHover","_triggers$get2","usesAutoClose","_triggers$get3","toggleTrigger","openIt","setIsPointerOver","pointerLeft","unsetIsPointerOver","pointerEntered","closeIfEscape","closeIfClickOutside","maybeSetupAutoCloseListeners","addOrRemove","setupOrCleanup","Open","widgetPromise","Pager","DUMMY_ID","WIDGET_NAME","_Pager$get","_config$nextSwitch","_config$prevSwitch","pages","toggles","switches","nextPrevSwitch","_next","nextSwitch","_prev","prevSwitch","pageSelector","PREFIX_PAGE__FOR_SELECT","toggleSelector","PREFIX_TOGGLE__FOR_SELECT","switchSelector","PREFIX_SWITCH__FOR_SELECT","nextSwitchSelector","PREFIX_NEXT_SWITCH__FOR_SELECT","prevSwitchSelector","PREFIX_PREV_SWITCH__FOR_SELECT","numPages","page","components","_pages","_toggles","_switches","_nextPrevSwitch","methods","nextPage","_nextPage","prevPage","_prevPage","goToPage","pageNum","_goToPage","disablePage","_disablePage","enablePage","_enablePage","togglePage","_togglePage","isPageDisabled","_isPageDisabled","getCurrentPage","_getCurrentPage","getPreviousPage","_getPreviousPage","getCurrentPageNum","_getCurrentPageNum","getPreviousPageNum","_getPreviousPageNum","onTransition","_onTransition","getPages","getSwitches","getToggles","MIN_TIME_BETWEEN_WHEEL","S_CURRENT","S_ARIA_CURRENT","S_COVERED","S_NEXT","S_TOTAL_PAGES","S_VISIBLE_PAGES","S_CURRENT_PAGE","S_PAGE_NUMBER","PREFIXED_NAME","PREFIX_ROOT","PREFIX_PAGE_CONTAINER","PREFIX_PAGE","PREFIX_STYLE","PREFIX_IS_FULLSCREEN","PREFIX_USE_PARALLAX","PREFIX_TOTAL_PAGES","PREFIX_VISIBLE_PAGES","PREFIX_CURRENT_PAGE","PREFIX_CURRENT_PAGE_IS_LAST","PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED","PREFIX_CURRENT_PAGE_IS_LAST_ENABLED","PREFIX_PAGE_STATE","PREFIX_PAGE_NUMBER","VAR_CURRENT_PAGE","VAR_TOTAL_PAGES","VAR_VISIBLE_PAGES","VAR_VISIBLE_GAPS","VAR_TRANSLATED_PAGES","VAR_TRANSLATED_GAPS","VAR_PAGE_NUMBER","SUPPORTED_STYLES","isValidStyle","initialPage","pageSize","peek","fullscreen","parallax","horizontal","useGestures","bool","alignGestureDirection","fetchClosestScrollable","_getClosestScrollable","setPageNumber","lastPromise","setPageState","setCurrentPage","pagerEl","pageNumbers","isFirstEnabled","isLastEnabled","n","_total","_current","_config$initialPage","_config$pageSize","_config$peek","_config$fullscreen","_config$parallax","_config$horizontal","_config$useGestures","_config$alignGestureD","pageContainer","pagerStyle","isCarousel","minPageSize","enablePeek","isFullscreen","isParallax","isHorizontal","orientation","gestureWatcher","viewWatcher","recalculateCarouselProps","gap","containerSize","getNumVisiblePages","addPeek","numVisiblePages","currPageNum","prevPageNum","numHidden","hasPeek","visibleStart","isAtEdge","numTranslated","numVisibleGaps","fractionalNumVisiblePages","getGestureOptions","scrollToPager","transitionOnGesture","swapDirection","addWatchers","removeWatchers","getPageNumForEvent","toggleClickListener","switchClickListener","nextSwitchClickListener","prevSwitchClickListener","idx","disabledPages","callbacks","fetchScrollOptions","lastPageNum","lastTransition","canTransition","gestureData","targetPage","NextPage","PrevPage","GoToPage","EnablePage","DisablePage","altPageNum","currentNum","targetNum","CheckTrigger","HTMLInputElement","onToggle","checked","ClickTrigger","setupWatcher","PressTrigger","HoverTrigger","LayoutTrigger","_args$","_config$layout","otherDevices","otherAspectRatios","LoadTrigger","ScrollTrigger","oppositeDirections","ViewTrigger","_config$target","oppositeViews","willAnimate","setupRepresentative","_ref2","prev","previousElementSibling","prevChild"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACaS,QAAQ,GAAGC,iBAAoB,CAAC;AAC3C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,6BAA6B,EAAE,IAAqB;AAEpD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,sBAAsB,EAAE,IAAI;AAC5B;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE,IAAI;AAErB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,EAAE,KAAK;AAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,IAAI;AAEzB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,iBAAiB,EAAE,KAAK;AAExB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAE,QAAQ;AAE5B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAE,OAAO;AAE3B;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,iBAAiB,EAAE,EAAE;AAErB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,oBAAoB,EAAE,IAAI;AAE1B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,IAAI;AAEzB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAE,KAAK;AAEzB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,uBAAuB,EAAE,EAAE;AAE3B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,yBAAyB,EAAE,CAAC;AAE5B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,wBAAwB,EAAE,GAAG;AAE7B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,gBAAgB,EAAE,EAAE;AAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAE,GAAG;AAEvB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,GAAG;AAExB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,iBAAiB,EAAE;AACjB;AACJ;AACA;AACA;AACA;AACA;AACIC,IAAAA,MAAM,EAAE,CAAC;AAET;AACJ;AACA;AACA;AACA;AACA;AACI,IAAA,aAAa,EAAE,GAAG;AAElB;AACJ;AACA;AACA;AACA;AACA;AACIC,IAAAA,MAAM,EAAE,GAAG;AAAE;;AAEb;AACJ;AACA;AACA;AACA;IACIC,OAAO,EAAE,GAAG;GACb;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,sBAAsB,EAAE;AACtB;AACJ;AACA;AACA;AACA;AACA;AACI,IAAA,WAAW,EAAE,CAAC;AAAE;;AAEhB;AACJ;AACA;AACA;AACA;AACA;IACIC,IAAI,EAAE,CAAC,GAAG,EAAE;AAAE;;AAEd;AACJ;AACA;AACA;AACA;AACA;IACIC,MAAM,EAAE,CAAC,GAAG,CAAC;AAAE;;AAEf;AACJ;AACA;AACA;AACA;AACA;IACIC,IAAI,EAAE,CAAC,GAAG,CAAC;AAAE;;AAEb;AACJ;AACA;AACA;AACA;AACI,IAAA,WAAW,EAAE,EAAE,GAAG,CAAC;GACpB;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,aAAa;AAElC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAE,YAAY;AAEhC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE,EAAE;AAEnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,cAAc,EAAE,IAAI;AAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE,GAAG;AAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,cAAc,EAAE,CAAC;AAEjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE,IAAqB;AAEtC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,wBAAwB,EAAE;AAC5B,CAAC;;AAED;;AC9eA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACO,MAAMC,UAAU,GAAGA,CAAC7J,KAAa,EAAE8J,UAAU,GAAG,CAAC,KAAK;EAC3D,MAAMC,oBAAoB,GAAGrC,GAAM,CAAC,EAAE,EAAEoC,UAAU,CAAC;EACnD,OAAOpC,KAAQ,CAAC1H,KAAK,GAAG+J,oBAAoB,CAAC,GAAGA,oBAAoB;AACtE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACO,MAAMC,UAAU,GAAIhK,KAAc,IACvC0H,QAAW,CAAC1H,KAAK,CAAC,IAAIxG,MAAS,CAACyQ,QAAQ,CAACjK,KAAK,CAAC;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACO,MAAMkK,KAAK,GAAGA,CACnBlK,KAAc,EACdmK,Y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AC/B,IAAI,CAACxc,OAAO,GAAG,MAAMhN,IAAI,CAACgN,OAAO,EAAE;IACnC,IAAI,CAAC7D,IAAI,GAAG,MAAMnJ,IAAI,CAACmJ,IAAI,EAAE;IAC7B,IAAI,CAACkE,MAAM,GAAG,MAAMrN,IAAI,CAACqN,MAAM,EAAE;AACjC,IAAA,IAAI,CAACzM,MAAS,CAAC+C,QAAQ,CAAC,GAAG,MAAM3D,IAAI,CAACY,MAAS,CAAC+C,QAAQ,CAAC,EAAE;AAC7D,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7DE;AACF;AACA;AAGE;AACF;AACA;AAGE;AACF;AACA;AAGE;AACF;AACA;AAGE;AACF;AACA;AAKE;AACF;AACA;AACA;AACA;AACA;AALE8Y,eAAA,CA5BWqM,IAAI,EAAA,eAAA,EAkCiBC,aAAa,CAAA;AA6BxC,MAAME,QAAQ,SAA+BE,QAAQ,CAAO;AASjE;AACF;AACA;AACA;AACA;EACEvpB,WAAWA,CAACipB,WAAqC,EAAE;AACjD,IAAA,MAAM7oB,IAAI,GAAG8O,UAAa,EAAQ;AAClC,IAAA,KAAK,CAAC9O,IAAI,EAAE6oB,WAAW,CAAC;AAC1B,EAAA;AACF;AAjBE;AACF;AACA;AACA;AACA;AACA;AALEpM,eAAA,CADWwM,QAAQ,EAAA,mBAAA,EAOiBC,iBAAiB,CAAA;;ACnNvD;AACA;AACA;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMO,UAAU,CAAC;AACtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAME;AACF;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;EACE,OAAO7Q,MAAMA,CAAC8Q,MAAyB,EAAE;IACvC,OAAO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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,cAAc,GAAIx2B,KAAuB,IAAgB;EACpE,IAAIy2B,KAAK,GAAG,CAAC;AACXC,IAAAA,KAAK,GAAG,CAAC;IACTC,MAAM,GAAG32B,KAAK,CAACysB,MAAM;IACrBmK,MAAM,GAAG52B,KAAK,CAAC0sB,MAAM;AAEvB,EAAA,MAAMyE,IAAI,GAAG3kB,QAAQ,CAAC8B,eAAe;;AAErC;AACA,EAAA,IAAItO,KAAK,CAAC62B,MAAM,KAAK31B,SAAS,EAAE;IAC9Bw1B,KAAK,GAAG12B,KAAK,CAAC62B,MAAM;AACtB,EAAA;AACA,EAAA,IAAI72B,KAAK,CAAC82B,UAAU,KAAK51B,SAAS,EAAE;AAClCw1B,IAAAA,KAAK,GAAG,CAAC12B,KAAK,CAAC82B,UAAU,GAAG,GAAG;AACjC,EAAA;AACA,EAAA,IAAI92B,KAAK,CAAC+2B,WAAW,KAAK71B,SAAS,EAAE;AACnCw1B,IAAAA,KAAK,GAAG,CAAC12B,KAAK,CAAC+2B,WAAW,GAAG,GAAG;AAClC,EAAA;AACA,EAAA,IAAI/2B,KAAK,CAACg3B,WAAW,KAAK91B,SAAS,EAAE;AACnCu1B,IAAAA,KAAK,GAAG,CAACz2B,KAAK,CAACg3B,WAAW,GAAG,GAAG;AAClC,EAAA;EAEA,IAAI,CAACL,MAAM,IAAIC,MAAM,KAAK52B,KAAK,CAACi3B,SAAS,EAAE;AACzC,IAAA,IAAIj3B,KAAK,CAACi3B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AAA,IAAA4Q,eAAA,KAAA,MAAA,GAAAA,eAAA,GAAI,CAAC;AAAA,IAAA,CAAA;AACxD2xC,IAAAA,OAAO,EAAEA,CAACt9C,GAAG,EAAEjF,KAAK,KAAA;AAAA,MAAA,IAAA4iD,gBAAA;AAAA,MAAA,OAAA,CAAAA,gBAAA,GAAK/xC,cAAc,CAAC5L,GAAG,EAAEjF,KAAK,CAAC,MAAA,IAAA,IAAA4iD,gBAAA,KAAA,MAAA,GAAAA,gBAAA,GAAI,CAAC;AAAA,IAAA,CAAA;IACxDxnC,QAAQ,EAAEA,CAACnW,GAAG,EAAEjF,KAAK,KAAK6Q,cAAc,CAAC5L,GAAG,EAAEjF,KAAK,CAAC;AACpD29B,IAAAA,UAAU,EAAEA,CAAC14B,GAAG,EAAEjF,KAAK,KAAA;AAAA,MAAA,IAAA4K,IAAA;MAAA,OAAA,CAAAA,IAAA,GACpBlD,eAAkB,CAAC1H,KAAK,CAAC,GACtB0+C,uBAAuB,CAAC1+C,KAAK,EAAElB,OAAO,CAAC,GACvC,IAAI,cAAA8L,IAAA,KAAA,MAAA,GAAAA,IAAA,GAAKzO,SAAS;AAAA,IAAA;GACzB;AACH,CAAC;;ACpPD;AACA;AACA;AACA;AACA;AACA;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM0mD,YAAY,CAAmB;AAC1C;AACF;AACA;;AAGE;AACF;A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,CAAC7yC,IAAI,CAACiD,MAAM,CAAC;AACtD,EAAA;AACF;;AC/DA;AACA;AACA;;;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM6vC,KAAK,SAASvR,MAAM,CAAC;AAChC;AACF;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;AACA;;AAGE;AACF;AACA;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;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AC,MAAM;AACnBpvB,MAAAA,uBAAuB,CAAC1sB,MAAM,EAAE,QAAQ,EAAEw3D,QAAQ,CAAC;AACrD,IAAA,CAAC,CAAC;AACJ,EAAA;AACF;;AAEA;AACA;AACA;AACA;;AAUA;;AAEA,MAAMlS,oBAAiE,GACrE1jD,OAAO,IACJ;EACH,OAAO;AACL5B,IAAAA,MAAM,EAAEA,CAAC+H,GAAG,EAAEjF,KAAK,KAAA;AAAA,MAAA,IAAA4K,IAAA;MAAA,OAAA,CAAAA,IAAA,GAChBlD,eAAkB,CAAC1H,KAAK,CAAC,GACtB0+C,uBAAuB,CAAC1+C,KAAK,EAAElB,OAAO,CAAC,GACvC,IAAI,cAAA8L,IAAA,KAAA,MAAA,GAAAA,IAAA,GAAKzO,SAAS;AAAA,IAAA;GACzB;AACH,CAAC;;ACxKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMy4D,YAAY,SAAStV,OAAO,CAAC;EAGxC,OAAOxE,QAAQA,GAAG;IAChByE,eAAe,CACb/lD,OAAU,EACV,CAACsF,OAAO,EAAEoP,IAAI,EAAE++B,OAAO,EAAE3qB,MAAM,KAC7B,IAAIsyC,YAAY,CAAC91D,OAAO,EAAEmuC,OAAO,EAAE3qB,MAAM,CAAC,EAC5CkgC,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEhqD,EAAAA,WAAWA,CACTsG,OAAgB,EAChBmuC,OAAiB,EACjB3qB,MAA6B,EAC7B;AACA,IAAA,KAAK,CAACxjB,OAAO,EAAEmuC,OAAO,EAAE3qB,MAAM,CAAC;IAC/B,IAAI,CAACC,SAAS,GAAG,MAAM7a,UAAa,CAAC4a,MAAM,CAAC;AAE5CuyC,IAAAA,YAAY,CAAC,IAAI,EAAE/1D,OAAO,EAAEmuC,OAAO,EAAE3qB,MAAM,EAAE9oB,OAAU,CAAC;AAC1D,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMs7D,YAAY,SAASxV,OAAO,CAAC;EAGxC,OAAOxE,QAAQA,GAAG;IAChByE,eAAe,CACb/lD,OAAU,EACV,CAACsF,OAAO,EAAEoP,IAAI,EAAE++B,OAAO,EAAE3qB,MAAM,KAC7B,IAAIwyC,YAAY,CAACh2D,OAAO,EAAEmuC,OAAO,EAAE3qB,MAAM,CAAC,EAC5CkgC,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEhqD,EAAAA,WAAWA,CACTsG,OAAgB,EAChBmuC,OAAiB,EACjB3qB,MAA6B,EAC7B;AACA,IAAA,KAAK,CAACxjB,OAAO,EAAEmuC,OAAO,EAAE3qB,MAAM,CAAC;IAC/B,IAAI,CAACC,SAAS,GAAG,MAAM7a,UAAa,CAAC4a,MAAM,CAAC;AAE5CuyC,IAAAA,YAAY,CAAC,IAAI,EAAE/1D,OAAO,EAAEmuC,OAAO,EAAE3qB,MAAM,EAAE9oB,OAAU,CAAC;AAC1D,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMu7D,YAAY,SAASzV,OAAO,CAAC;EAGxC,OAAOxE,QAAQA,GAAG;IAChByE,eAAe,CACb/lD,OAAU,EACV,CAACsF,OAAO,EAAEoP,IAAI,EAAE++B,OAAO,EAAE3qB,MAAM,KAC7B,IAAIyyC,YAAY,CAACj2D,OAAO,EAAEmuC,OAAO,EAAE3qB,MAAM,CAAC,EAC5CkgC,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEhqD,EAAAA,WAAWA,CACTsG,OAAgB,EAChBmuC,OAAiB,EACjB3qB,MAA6B,EAC7B;AACA,IAAA,KAAK,CAACxjB,OAAO,EAAEmuC,OAAO,EAAE3qB,MAAM,CAAC;IAC/B,IAAI,CAACC,SAAS,GAAG,MAAM7a,UAAa,CAAC4a,MAAM,CAAC;AAE5CuyC,IAAAA,YAAY,CAAC,IAAI,EAAE/1D,OAAO,EAAEmuC,OAAO,EAAE3qB,MAAM,EAAE9oB,OAAU,CAAC;AAC1D,EAAA;AACF;;AAEA;AACA;AACA;AACA;;AAwBA;;AAEA,MAAMgpD,oBAAmE,GACvE1jD,OAAO,IACJ;EACH,OAAO;AACL5B,IAAAA,MAAM,EAAEA,CAAC+H,GAAG,EAAEjF,KAAK,KAAA;AAAA,MAAA,IAAA4K,IAAA;MAAA,OAAA,CAAAA,IAAA,GAChBlD,eAAkB,CAAC1H,KAAK,CAAC,GACtB0+C,uBAAuB,CAAC1+C,KAAK,EAAElB,OAAO,CAAC,GACvC,IAAI,cAAA8L,IAAA,KAAA,MAAA,GAAAA,IAAA,GAAKzO,SAAS;AAAA,IAAA,CAAA;AACxBwF,IAAAA,cAAc,EAAEmP,eAAe;AAC/BqZ,IAAAA,aAAa,EAAErZ;GAChB;AACH,CAAC;AAED,MAAM+jD,YAAY,GAAGA,CACnBva,MAAkD,EAClDx7C,OAAgB,EAChBmuC,OAAiB,EACjB3qB,MAAwC,EACxCwR,MAAmC,KAChC;AAAA,EAAA,IAAA6oB,YAAA;AACH,EAAA,IAAI,CAACj1C,QAAW,CAACulC,OAAO,CAAC,EAAE;AACzB,IAAA;AACF,EAAA;EAEA3qB,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAANA,MAAM,GAANA,MAAM,GAAK,EAAE;AACb,EAAA,MAAMplB,MAAM,GAAA,CAAAy/C,YAAA,GAAGj1C,QAAW,CAAC4a,MAAM,CAAC,MAAA,IAAA,IAAAq6B,YAAA,KAAA,MAAA,GAAAA,YAAA,GAAI79C,OAAO;;AAE7C;AACA;AACA;AACA,EAAA,IAAIwtC,YAA8B;AAClC,EAAA,IAAIC,UAA4B;AAChC,EAAA,IAAIzY,MAAM,KAAKt6B,OAAU,EAAE;IACzB8yC,YAAY,GAAGC,UAAU,GAAG+N,MAAM,CAAC9gD,QAAW,CAAC;AACjD,EAAA,CAAC,MAAM;IACL8yC,YAAY,GAAGgO,MAAM,CAAC8F,GAAG;IACzB7T,UAAU,GAAG+N,MAAM,CAAC0B,OAAO;AAC7B,EAAA;AAEA5P,EAAAA,cAAc,CAAC3pB,KAAK,EAAE,CAACmqB,SAAS,CAC9B1vC,MAAM,EACNovC,YAAY,EACZC,UAAU,EACV7kC,KAAQ,CACN;AACEulC,IAAAA,OAAO,EAAEnZ;AACX,GAAC,EACD5mB,QAAQ,CAACoV,MAAM,EAAE;AAAEplB,IAAAA,MAAM,EAAE;GAAM,CACnC,CACF,CAAC;AACH,CAAC;;AC5bD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM83D,aAAa,SAAS1V,OAAO,CAAC;EAGzC,OAAOxE,QAAQA,GAAG;IAChByE,eAAe,CACb,QAAQ,EACR,CAACzgD,OAAO,EAAEoP,IAAI,EAAE++B,OAAO,EAAE3qB,MAAM,KAAK;AAAA,MAAA,IAAA2yC,MAAA;AAClC,MAAA,OAAO,IAAID,aAAa,CACtBl2D,OAAO,EACPmuC,OAAO,EACPvlC,MAAS,CAAC4a,MAAM,EAAE;QAChBwpB,MAAM,EAAE76B,sBAAsB,CAC5B,QAAQ,EACRvJ,UAAa,CACXA,UAAa,CAAA,CAAAutD,MAAA,GAAC/mD,IAAI,CAAC,CAAC,CAAC,MAAA,IAAA,IAAA+mD,MAAA,KAAA,MAAA,GAAAA,MAAA,GAAI,EAAE,EAAE,aAAa,EAAE,KAAK,CAAC,EAClD,OAAO,EACP,MACF,CAAC,EACAj1D,KAAK,IACJk5B,iBAAiB,CAACl5B,KAAK,CAAC,IAAIs5B,sBAAsB,CAACt5B,KAAK,CAC5D;AACF,OAAC,CACH,CAAC;IACH,CAAC,EACDwiD,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEhqD,EAAAA,WAAWA,CACTsG,OAAgB,EAChBmuC,OAAiB,EACjB3qB,MAA2B,EAC3B;AAAA,IAAA,IAAA4yC,cAAA;AACA,IAAA,MAAMppB,MAAM,GAAA,CAAAopB,cAAA,GAAG5yC,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEwpB,MAAM,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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMkV,aAAa,SAAShW,OAAO,CAAC;EAGzC,OAAOxE,QAAQA,GAAG;AAChByE,IAAAA,eAAe,CACb/lD,QAAW,EACX,CAACsF,OAAO,EAAEoP,IAAI,EAAE++B,OAAO,EAAE3qB,MAAM,KAAK;AAClC,MAAA,OAAO,IAAIgzC,aAAa,CACtBx2D,OAAO,EACPmuC,OAAO,EACPvlC,MAAS,CAAC4a,MAAM,EAAE;AAChB4F,QAAAA,UAAU,EAAE7X,eAAe,CAAC,YAAY,EAAEnC,IAAI,EAAEka,kBAAkB;AACpE,OAAC,CACH,CAAC;IACH,CAAC,EACDo6B,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEhqD,EAAAA,WAAWA,CACTsG,OAAgB,EAChBmuC,OAAiB,EACjB3qB,MAA4B,EAC5B;IACAA,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAANA,MAAM,GAANA,MAAM,GAAK,EAAE;AAEb,IAAA,IAAI4F,UAAU,GAAG5F,MAAM,CAAC4F,UAAU;IAClC,IAAI,CAACA,UAAU,EAAE;MACf5F,MAAM,CAACqH,IAAI,GAAG,IAAI;AAClBzB,MAAAA,UAAU,GAAG,CAAC1uB,IAAO,EAAEA,MAAS,EAAEA,MAAS,EAAEA,OAAU,CAAC;AAC1D,IAAA;AAEA,IAAA,KAAK,CAACsF,OAAO,EAAEmuC,OAAO,EAAE3qB,MAAM,CAAC;IAC/B,IAAI,CAACC,SAAS,GA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"}