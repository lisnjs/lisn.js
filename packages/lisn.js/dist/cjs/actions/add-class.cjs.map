{"version":3,"file":"add-class.cjs","names":["MC","_interopRequireWildcard","require","_cssAlter","_action","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","AddClass","register","registerAction","element","classNames","constructor","_add","_remove","_toggle","getMethods","do","undo","S_TOGGLE","exports","RemoveClass","addClasses","removeClasses","cls","toggleClass"],"sources":["../../../src/ts/actions/add-class.ts"],"sourcesContent":["/**\n * @module Actions\n *\n * @categoryDescription Adding/removing class\n * {@link AddClass} and {@link RemoveClass} add or remove a list of CSS classes\n * to/from the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { addClasses, removeClasses, toggleClass } from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Adds or removes a list of CSS classes to/from the given element.\n *\n * **IMPORTANT:** When constructed, it removes all given classes from the\n * element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"add-class\".\n * - Accepted string arguments: one or more CSS classes\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@add-class: clsA, clsB\"></div>\n * ```\n *\n * @category Adding/removing class\n */\nexport class AddClass implements Action {\n  /**\n   * Adds the classes given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Removes the classes given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles each class given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"add-class\",\n      (element, classNames) => new AddClass(element, ...classNames),\n    );\n  }\n\n  constructor(element: Element, ...classNames: string[]) {\n    const { _add, _remove, _toggle } = getMethods(element, classNames);\n    _remove(); // initial state\n\n    this.do = _add;\n    this.undo = _remove;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Removes or adds a list of CSS classes to/from the given element.\n *\n * **IMPORTANT:** When constructed, it adds all given classes from the element\n * as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"remove-class\".\n * - Accepted string arguments: one or more CSS classes\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@remove-class: clsA, clsB\"></div>\n * ```\n *\n * @category Adding/removing class\n */\nexport class RemoveClass implements Action {\n  /**\n   * Removes the classes given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Adds the classes given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles each class given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"remove-class\",\n      (element, classNames) => new RemoveClass(element, ...classNames),\n    );\n  }\n\n  constructor(element: Element, ...classNames: string[]) {\n    const { _add, _remove, _toggle } = getMethods(element, classNames);\n    _add(); // initial state\n\n    this.do = _remove;\n    this.undo = _add;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element, classNames: string[]) => {\n  return {\n    _add: () => addClasses(element, ...classNames),\n\n    _remove: () => removeClasses(element, ...classNames),\n\n    _toggle: async () => {\n      for (const cls of classNames) {\n        await toggleClass(element, cls);\n      }\n    },\n  };\n};\n"],"mappings":"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","ignoreList":[]}