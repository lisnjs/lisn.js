{"version":3,"file":"track-gesture.js","names":["MH","validateBoolean","validateNumber","GestureWatcher","Widget","registerWidget","TrackGesture","get","element","instance","DUMMY_ID","isInstanceOf","register","WIDGET_NAME","config","configValidator","constructor","id","reuse","trackGesture","preventDefault","minTotalDeltaX","minDeltaX","maxTotalDeltaX","maxDeltaX","minTotalDeltaY","minDeltaY","maxTotalDeltaY","maxDeltaY","minTotalDeltaZ","minDeltaZ","maxTotalDeltaZ","maxDeltaZ","onDestroy","noTrackGesture"],"sources":["../../../src/ts/widgets/track-gesture.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { validateBoolean, validateNumber } from \"@lisn/utils/validation\";\n\nimport { GestureWatcher } from \"@lisn/watchers/gesture-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * This is a simple wrapper around the {@link GestureWatcher}. If you are using\n * the JavaScript API, you should use the {@link GestureWatcher} directly. The\n * purpose of this widget is to expose the watcher's ability to track gestures\n * and set relevant CSS properties via the HTML API. See\n * {@link GestureWatcher.trackGesture}.\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-track-gesture` class or `data-lisn-track-gesture` attribute set on\n *   the element that constitutes the widget.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This will track user gestures over this element and set the relevant CSS\n * properties. It will use the default {@link GestureWatcher} options.\n *\n * ```html\n * <div class=\"lisn-track-gesture\"></div>\n * ```\n *\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <div data-lisn-track-gesture=\"prevent-default=false\n *                               | min-delta-x=-100\n *                               | max-delta-x=100\n *                               | min-delta-y=-100\n *                               | max-delta-y=100\n *                               | min-delta-z=0.5\n *                               | max-delta-z=2\"\n * ></div>\n * ```\n */\nexport class TrackGesture extends Widget {\n  static get(element: Element): TrackGesture | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, TrackGesture)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!TrackGesture.get(element)) {\n          return new TrackGesture(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  constructor(element: Element, config?: TrackGestureConfig) {\n    super(element, { id: DUMMY_ID });\n\n    GestureWatcher.reuse().trackGesture(element, null, {\n      preventDefault: config?.preventDefault,\n      minTotalDeltaX: config?.minDeltaX,\n      maxTotalDeltaX: config?.maxDeltaX,\n      minTotalDeltaY: config?.minDeltaY,\n      maxTotalDeltaY: config?.maxDeltaY,\n      minTotalDeltaZ: config?.minDeltaZ,\n      maxTotalDeltaZ: config?.maxDeltaZ,\n    });\n\n    this.onDestroy(() => GestureWatcher.reuse().noTrackGesture(element));\n  }\n}\n\n/**\n * @interface\n */\nexport type TrackGestureConfig = {\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.preventDefault | OnGestureOptions.preventDefault}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  preventDefault?: boolean;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.minTotalDeltaX | OnGestureOptions.minTotalDeltaX}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  minDeltaX?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.maxTotalDeltaX | OnGestureOptions.maxTotalDeltaX}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  maxDeltaX?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.minTotalDeltaY | OnGestureOptions.minTotalDeltaY}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  minDeltaY?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.maxTotalDeltaY | OnGestureOptions.maxTotalDeltaY}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  maxDeltaY?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.minTotalDeltaZ | OnGestureOptions.minTotalDeltaZ}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  minDeltaZ?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.maxTotalDeltaZ | OnGestureOptions.maxTotalDeltaZ}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  maxDeltaZ?: number;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"track-gesture\";\n// Only one TrackGesture widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = WIDGET_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<TrackGestureConfig> = {\n  preventDefault: validateBoolean,\n  minDeltaX: validateNumber,\n  maxDeltaX: validateNumber,\n  minDeltaY: validateNumber,\n  maxDeltaY: validateNumber,\n  minDeltaZ: validateNumber,\n  maxDeltaZ: validateNumber,\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,KAAKA,EAAE;AAEd,SAASC,eAAe,EAAEC,cAAc;AAExC,SAASC,cAAc;AAEvB,SACEC,MAAM,EAENC,cAAc;;AAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,SAASF,MAAM,CAAC;EACvC,OAAOG,GAAGA,CAACC,OAAgB,EAAuB;IAChD,MAAMC,QAAQ,GAAG,KAAK,CAACF,GAAG,CAACC,OAAO,EAAEE,QAAQ,CAAC;IAC7C,IAAIV,EAAE,CAACW,YAAY,CAACF,QAAQ,EAAEH,YAAY,CAAC,EAAE;MAC3C,OAAOG,QAAQ;IACjB;IACA,OAAO,IAAI;EACb;EAEA,OAAOG,QAAQA,CAAA,EAAG;IAChBP,cAAc,CACZQ,WAAW,EACX,CAACL,OAAO,EAAEM,MAAM,KAAK;MACnB,IAAI,CAACR,YAAY,CAACC,GAAG,CAACC,OAAO,CAAC,EAAE;QAC9B,OAAO,IAAIF,YAAY,CAACE,OAAO,EAAEM,MAAM,CAAC;MAC1C;MACA,OAAO,IAAI;IACb,CAAC,EACDC,eACF,CAAC;EACH;EAEAC,WAAWA,CAACR,OAAgB,EAAEM,MAA2B,EAAE;IACzD,KAAK,CAACN,OAAO,EAAE;MAAES,EAAE,EAAEP;IAAS,CAAC,CAAC;IAEhCP,cAAc,CAACe,KAAK,CAAC,CAAC,CAACC,YAAY,CAACX,OAAO,EAAE,IAAI,EAAE;MACjDY,cAAc,EAAEN,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEM,cAAc;MACtCC,cAAc,EAAEP,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEQ,SAAS;MACjCC,cAAc,EAAET,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEU,SAAS;MACjCC,cAAc,EAAEX,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEY,SAAS;MACjCC,cAAc,EAAEb,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEc,SAAS;MACjCC,cAAc,EAAEf,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEgB,SAAS;MACjCC,cAAc,EAAEjB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEkB;IAC1B,CAAC,CAAC;IAEF,IAAI,CAACC,SAAS,CAAC,MAAM9B,cAAc,CAACe,KAAK,CAAC,CAAC,CAACgB,cAAc,CAAC1B,OAAO,CAAC,CAAC;EACtE;AACF;;AAEA;AACA;AACA;;AA2DA;;AAEA,MAAMK,WAAW,GAAG,eAAe;AACnC;AACA;AACA,MAAMH,QAAQ,GAAGG,WAAW;AAE5B,MAAME,eAAgE,GAAG;EACvEK,cAAc,EAAEnB,eAAe;EAC/BqB,SAAS,EAAEpB,cAAc;EACzBsB,SAAS,EAAEtB,cAAc;EACzBwB,SAAS,EAAExB,cAAc;EACzB0B,SAAS,EAAE1B,cAAc;EACzB4B,SAAS,EAAE5B,cAAc;EACzB8B,SAAS,EAAE9B;AACb,CAAC","ignoreList":[]}