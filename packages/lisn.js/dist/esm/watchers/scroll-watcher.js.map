{"version":3,"file":"scroll-watcher.js","names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_defineProperty","_toPrimitive","toPrimitive","String","Number","MC","MH","settings","getData","setNumericStyleProps","getMaxDeltaDirection","moveElement","wrapScrollingContent","waitForMeasureTime","addEventListenerTo","removeEventListenerFrom","logError","toNonNegNum","maxAbs","scrollTo","getCurrentScrollAction","getClientWidthNow","getClientHeightNow","tryGetMainScrollableElement","fetchMainContentElement","fetchMainScrollableElement","fetchScrollableElement","isValidScrollDirection","objToStrKey","validateStrList","wrapCallback","newXWeakMap","DOMWatcher","SizeWatcher","debug","ScrollWatcher","config","_this","CONSTRUCTOR_KEY","illegalConstructorError","logger","Logger","logAtCreation","allScrollData","newWeakMap","activeListeners","allCallbacks","newMap","fetchCurrentScroll","_ref","_callee","element","realtime","isScrollEvent","previousEventData","latestData","_args","_callee$","_context","undefined","get","fetchScrollData","direction","_x","createCallback","handler","options","trackType","_allCallbacks$get","_element","remove","_callback","debug5","callback","_debounceWindow","onRemove","deleteHandler","entry","_trackType","_options","sGet","set","setupOnScroll","_ref2","_callee2","userOptions","eventTarget","scrollData","listenerOptions","directions","_callee2$","_context2","fetchOnScrollOptions","_eventTarget","isRemoved","_data","TRACK_FULL","setupSizeTrack","debug4","_nRealtime","S_SCROLL","scrollHandler","_directions","skipInitial","directionMatches","invokeCallback","_x2","_x3","_x4","removeOnScroll","_ref3","_callee3","scrollable","_allCallbacks$get2","currEntry","_callee3$","_context3","setScrollCssProps","_x5","_x6","_x7","deleteKey","prune","has","_ref4","_callee5","scrollCallback","doc","docScrollingElement","resizeCallback","sizeWatcher","setupOnResize","observedElements","allowedToWrap","wrapper","_iterator","_step","child","domWatcher","onAddedCallback","_callee5$","_context5","debug8","getDoc","getDocScrollingElement","_callee4","thresholdsExceeded","_callee4$","_context4","hasExceededThreshold","debug9","reuse","target","onResize","S_DEBOUNCE_WINDOW","_threshold","newSet","contentWrappingAllowed","PREFIX_NO_WRAP","add","_createForOfIteratorHelper","childrenOf","err","root","subtree","operation","currentTargetOf","to","ignoreMove","onMutation","categories","S_ADDED","_x8","_ref6","_callee6","event","_activeListeners$get","_allCallbacks$get3","_iterator2","_step2","_callee6$","_context6","targetOf","isElement","isDoc","t0","_x9","scroll","_options$amount","usageError","concat","isVertical","S_UP","S_DOWN","sign","S_LEFT","targetCoordinate","amount","asFractionOf","el","S_SCROLL_TOP","S_SCROLL_LEFT","S_SCROLL_HEIGHT","S_SCROLL_WIDTH","top","left","_ref7","_callee7","_args7","_callee7$","_context7","t1","t2","t3","duration","_scrollDuration","t4","t5","t6","t7","merge","_x10","fetchCurrentScrollAction","stopUserScrolling","_callee8","stopScroll","_args8","_callee8$","_context8","elScrollTo","immediate","trackScroll","noTrackScroll","onScroll","TRACK_REGULAR","offScroll","getConfig","myConfig","configStrKey","instance","instances","SYMBOL","_scrollThreshold","scrollThreshold","scrollDuration","_ref9","_callee9","_options$MC$S_DEBOUNC","_callee9$","_context9","getEventTarget","threshold","_x11","_x12","userDirections","latestDirection","includes","lastThresholdData","topDiff","S_CLIENT_HEIGHT","leftDiff","S_CLIENT_WIDTH","checkTop","checkLeft","S_NONE","S_AMBIGUOUS","S_RIGHT","_ref10","_callee10","scrollTop","scrollLeft","scrollWidth","scrollHeight","clientWidth","clientHeight","scrollTopFraction","scrollLeftFraction","prevScrollTop","prevScrollLeft","_callee10$","_context10","ceil","round","INFINITY","S_SCROLL_TOP_FRACTION","S_SCROLL_LEFT_FRACTION","_x13","_x14","_x15","prefix","getDocElement","props","_prefix","copyObject"],"sources":["../../../src/ts/watchers/scroll-watcher.ts"],"sourcesContent":["/**\n * @module Watchers/ScrollWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { XYDirection, ScrollDirection, SizeTarget } from \"@lisn/globals/types\";\n\nimport {\n  ScrollTarget,\n  TargetCoordinate,\n  TargetCoordinates,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { getData, setNumericStyleProps } from \"@lisn/utils/css-alter\";\nimport { getMaxDeltaDirection } from \"@lisn/utils/directions\";\nimport { moveElement, wrapScrollingContent } from \"@lisn/utils/dom-alter\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum, maxAbs } from \"@lisn/utils/math\";\nimport {\n  scrollTo,\n  getCurrentScrollAction,\n  getClientWidthNow,\n  getClientHeightNow,\n  tryGetMainScrollableElement,\n  fetchMainContentElement,\n  fetchMainScrollableElement,\n  fetchScrollableElement,\n  isValidScrollDirection,\n  ScrollAction,\n  ScrollToOptions,\n} from \"@lisn/utils/scroll\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { MutationOperation, DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n// re-export for convenience\nexport type { ScrollAction, ScrollToOptions } from \"@lisn/utils/scroll\";\n\n/**\n * {@link ScrollWatcher} listens for scroll events in any direction.\n *\n * It manages registered callbacks globally and reuses event listeners for more\n * efficient performance.\n */\nexport class ScrollWatcher {\n  /**\n   * Call the given handler whenever the given scrollable is scrolled.\n   *\n   * Unless {@link OnScrollOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest scroll data. If a scroll has\n   * not yet been observed on the scrollable and its `scrollTop` and\n   * `scrollLeft` are 0, then the direction is {@link Types.NoDirection} and\n   * the handler is only called if {@link Types.NoDirection} is part of the\n   * supplied {@link OnScrollOptions.directions | options.directions} (or\n   * {@link OnScrollOptions.directions | options.directions} is not given).\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking content size changes using\n   * {@link trackScroll}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onScroll: (\n    handler: OnScrollHandler,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly offScroll: (\n    handler: OnScrollHandler,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * This everything that {@link onScroll} does plus more:\n   *\n   * In addition to a scroll event, the handler is also called when either the\n   * offset size or scroll (content) size of the scrollable changes as that\n   * would affect its `scrollTopFraction` and `scrollLeftFraction` and possibly\n   * the `scrollTop` and `scrollLeft` as well.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates a set of CSS variables on the scrollable element's style:\n   *\n   * - If {@link OnScrollOptions.scrollable | options.scrollable} is not given,\n   *   or is `null`, `window` or `document`, the following CSS variables are\n   *   set on the root (`html`) element and represent the scroll of the\n   *   {@link fetchMainScrollableElement}:\n   *   - `--lisn-js--page-scroll-top`\n   *   - `--lisn-js--page-scroll-top-fraction`\n   *   - `--lisn-js--page-scroll-left`\n   *   - `--lisn-js--page-scroll-left-fraction`\n   *   - `--lisn-js--page-scroll-width`\n   *   - `--lisn-js--page-scroll-height`\n   *\n   * - Otherwise, the following variables are set on the scrollable itself,\n   *   and represent its scroll offset:\n   *   - `--lisn-js--scroll-top`\n   *   - `--lisn-js--scroll-top-fraction`\n   *   - `--lisn-js--scroll-left`\n   *   - `--lisn-js--scroll-left-fraction`\n   *   - `--lisn-js--scroll-width`\n   *   - `--lisn-js--scroll-height`\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly trackScroll: (\n    handler?: OnScrollHandler | null,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackScroll}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly noTrackScroll: (\n    handler?: OnScrollHandler | null,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * Get the scroll offset of the given scrollable. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param {} realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                    this only when doing realtime scroll-based animations\n   *                    as it may cause a forced layout.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScroll: (\n    scrollable?: ScrollTarget,\n    realtime?: boolean,\n  ) => Promise<ScrollData>;\n\n  /**\n   * Scrolls the given scrollable element to in the given direction.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the direction or options are invalid.\n   */\n  readonly scroll: (\n    direction: XYDirection,\n    options?: ScrollOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Scrolls the given scrollable element to the given `to` scrollable.\n   *\n   * Returns `null` if there's an ongoing scroll that is not cancellable.\n   *\n   * Note that if `to` is an element or a selector, then it _must_ be a\n   * descendant of the scrollable element.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the \"to\" coordinates or options are invalid.\n   *\n   * @param {} to  If this is an element, then its top-left position is used as\n   *               the target coordinates. If it is a string, then it is treated\n   *               as a selector for an element using `querySelector`.\n   * @param {} [options.scrollable]\n   *               If not given, it defaults to {@link fetchMainScrollableElement}\n   *\n   * @return {} `null` if there's an ongoing scroll that is not cancellable,\n   * otherwise a {@link ScrollAction}.\n   */\n  readonly scrollTo: (\n    to: TargetCoordinates | Element | string,\n    options?: ScrollToOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Returns the current {@link ScrollAction} if any.\n   *\n   * @param {} scrollable\n   *               If not given, it defaults to {@link fetchMainScrollableElement}\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScrollAction: (\n    scrollable?: Element,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Cancels the ongoing scroll that's resulting from smooth scrolling\n   * triggered in the past. Does not interrupt or prevent further scrolling.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   *\n   * @param {} [options.immediate]  If true, then it will not use\n   *                                {@link waitForMeasureTime} or\n   *                                {@link Utils.waitForMutateTime | waitForMutateTime}.\n   *                                Warning: this will likely result in forced layout.\n   */\n  readonly stopUserScrolling: (options?: {\n    scrollable?: ScrollTarget;\n    immediate?: boolean;\n  }) => Promise<void>;\n\n  /**\n   * Returns the element that holds the main page content. By default it's\n   * `document.body` but is overridden by\n   * {@link settings.mainScrollableElementSelector}.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainContentElement(): Promise<HTMLElement> {\n    return fetchMainContentElement();\n  }\n\n  /**\n   * Returns the scrollable element that holds the wrapper around the main page\n   * content. By default it's `document.scrollable` (unless `document.body` is\n   * actually scrollable, in which case it will be used) but it will be\n   * different if {@link settings.mainScrollableElementSelector} is set.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainScrollableElement(): Promise<HTMLElement> {\n    return fetchMainScrollableElement();\n  }\n\n  /**\n   * Creates a new instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: ScrollWatcherConfig = {}) {\n    return new ScrollWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: ScrollWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new ScrollWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ScrollWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ScrollWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ScrollWatcher\", logAtCreation: config })\n      : null;\n\n    const allScrollData = MH.newWeakMap<Element, ScrollData>();\n\n    const activeListeners = MH.newWeakMap<\n      ScrollTarget,\n      { _nRealtime: number }\n    >();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnScrollHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const fetchCurrentScroll = async (\n      element: Element,\n      realtime = false,\n      isScrollEvent = false,\n    ): Promise<ScrollData> => {\n      // The scroll data can change event without a scroll event, e.g. by the\n      // element changing size, so always get the latest here.\n      const previousEventData = allScrollData.get(element);\n      const latestData = await fetchScrollData(\n        element,\n        previousEventData,\n        realtime,\n      );\n\n      // If there hasn't been a scroll event, use the old scroll direction\n      if (!isScrollEvent && previousEventData) {\n        latestData.direction = previousEventData.direction;\n      }\n      return latestData;\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n      trackType: TrackType,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      };\n      allCallbacks.sGet(element).set(handler, entry);\n\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnScroll = async (\n      handler: OnScrollHandler,\n      userOptions: OnScrollOptions | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, userOptions || {});\n      const element = options._element;\n\n      // Don't await for the scroll data before creating the callback so that\n      // setupOnScroll and removeOnScroll have the same \"timing\" and therefore\n      // calling onScroll and offScroll immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options, trackType);\n      const callback = entry._callback;\n\n      const eventTarget = options._eventTarget;\n      const scrollData = await fetchCurrentScroll(\n        element,\n        options._debounceWindow === 0,\n      );\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = scrollData;\n      allScrollData.set(element, scrollData);\n\n      if (trackType === TRACK_FULL) {\n        await setupSizeTrack(entry);\n      }\n\n      let listenerOptions = activeListeners.get(eventTarget);\n      if (!listenerOptions) {\n        debug: logger?.debug4(\"Adding scroll listener\", eventTarget);\n        listenerOptions = { _nRealtime: 0 };\n        activeListeners.set(eventTarget, listenerOptions);\n        // Don't debounce the scroll handler, only the callbacks.\n        addEventListenerTo(eventTarget, MC.S_SCROLL, scrollHandler);\n      }\n\n      if (options._debounceWindow === 0) {\n        listenerOptions._nRealtime++;\n      }\n\n      const directions = options._directions;\n      if (\n        !callback.isRemoved() &&\n        !userOptions?.skipInitial &&\n        directionMatches(directions, scrollData.direction)\n      ) {\n        debug: logger?.debug5(\"Calling initially with\", element, scrollData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, scrollData);\n      }\n    };\n\n    // ----------\n\n    const removeOnScroll = async (\n      handler: OnScrollHandler,\n      scrollable: ScrollTarget | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, { scrollable });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setScrollCssProps) {\n          // delete the properties\n          setScrollCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n    ) => {\n      const element = options._element;\n      const eventTarget = options._eventTarget;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      const listenerOptions = activeListeners.get(eventTarget);\n      if (listenerOptions && options._debounceWindow === 0) {\n        listenerOptions._nRealtime--;\n      }\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for scrollable; removing listener\",\n          element,\n        );\n\n        MH.deleteKey(allScrollData, element);\n        removeEventListenerFrom(eventTarget, MC.S_SCROLL, scrollHandler);\n        MH.deleteKey(activeListeners, eventTarget);\n      }\n    };\n\n    // ----------\n\n    const setupSizeTrack = async (entry: CallbackEntry) => {\n      const options = entry._options;\n      const element = options._element;\n      const scrollCallback = entry._callback;\n      debug: logger?.debug8(\"Setting up size tracking\", element);\n\n      const doc = MH.getDoc();\n      const docScrollingElement = MH.getDocScrollingElement();\n\n      const resizeCallback = wrapCallback(async () => {\n        // Get the latest scroll data for the scrollable\n        // Currently, the resize callback is already delayed by a frame due to\n        // the SizeWatcher, so we don't need to treat this as realtime.\n        const latestData = await fetchCurrentScroll(element);\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n        } else if (!scrollCallback.isRemoved()) {\n          await invokeCallback(scrollCallback, element, latestData);\n        }\n      });\n\n      scrollCallback.onRemove(resizeCallback.remove);\n\n      // Don't use default instance as it has a high threshold.\n      const sizeWatcher = SizeWatcher.reuse();\n      const setupOnResize = (target?: SizeTarget) =>\n        sizeWatcher.onResize(resizeCallback, {\n          target,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          // TODO maybe accepts resizeThreshold option\n          threshold: options._threshold,\n        });\n\n      if (element === docScrollingElement) {\n        // In case we're tracking the main document scroll, then we only need to\n        // observe the viewport size and the size of the documentElement (which is\n        // the content size).\n\n        setupOnResize(); // viewport size\n        setupOnResize(doc); // content size\n\n        return;\n      }\n\n      // ResizeObserver only detects changes in offset width/height which is\n      // the visible size of the scrolling element, and that is not affected by the\n      // size of its content.\n      // But we also need to detect changes in the scroll width/height which is\n      // the size of the content.\n      // We also need to keep track of elements being added to the scrollable element.\n\n      const observedElements = MH.newSet<Element>([element]);\n\n      // Observe the scrolling element\n      setupOnResize(element);\n\n      // And also its children (if possible, single wrapper around children\n      const allowedToWrap =\n        settings.contentWrappingAllowed === true &&\n        element !== docScrollingElement &&\n        getData(element, MC.PREFIX_NO_WRAP) === null;\n\n      let wrapper: Element;\n      if (allowedToWrap) {\n        // Wrap the content and observe the wrapper\n        wrapper = await wrapScrollingContent(element);\n        setupOnResize(wrapper);\n        observedElements.add(wrapper);\n\n        //\n      } else {\n        for (const child of MH.childrenOf(element)) {\n          setupOnResize(child);\n          observedElements.add(child);\n        }\n      }\n\n      // Watch for newly added elements\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      const onAddedCallback = wrapCallback((operation: MutationOperation) => {\n        const child = MH.currentTargetOf(operation);\n        // If we've just added the wrapper, it will be in DOMWatcher's queue,\n        // so check.\n        if (child !== wrapper) {\n          if (allowedToWrap) {\n            // Move this child into the wrapper. If this results in change of size\n            // for wrapper, SizeWatcher will call us.\n            moveElement(child, { to: wrapper, ignoreMove: true });\n          } else {\n            // Track the size of this child.\n            // Don't skip initial, call the callback now\n            setupOnResize(child);\n            observedElements.add(child);\n          }\n        }\n      });\n\n      domWatcher.onMutation(onAddedCallback, { categories: [MC.S_ADDED] });\n      resizeCallback.onRemove(onAddedCallback.remove);\n    };\n\n    // ----------\n\n    const scrollHandler = async (event: Event) => {\n      // We cannot use event.currentTarget because scrollHandler is called inside\n      // a setTimeout so by that time, currentTarget is null or something else.\n      //\n      // However, target and currentTarget only differ when the event is in the\n      // bubbling or capturing phase. Because\n      //\n      // - the scroll event only bubbles when fired on document, and (it only\n      //   bubbles up to window)\n      // - and we never attach the listener to the capturing phase\n      // - and we always use document instead of window to listen for scroll on\n      //   document\n      //\n      // then event.target suffices.\n      const scrollable = MH.targetOf(event);\n      /* istanbul ignore next */\n      if (!scrollable || !(MH.isElement(scrollable) || MH.isDoc(scrollable))) {\n        return;\n      }\n\n      const element = await fetchScrollableElement(scrollable);\n      const realtime = (activeListeners.get(scrollable)?._nRealtime || 0) > 0;\n      const latestData = await fetchCurrentScroll(element, realtime, true);\n      allScrollData.set(element, latestData);\n\n      debug: logger?.debug9(\"Scroll event\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        // Consider the direction since the last scroll event and not the\n        // direction based on the largest delta the last time the callback\n        // was called.\n        const options = entry._options;\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n          continue;\n        }\n\n        // If threshold has been exceeded, always update the latest data for\n        // this callback.\n        entry._data = latestData;\n\n        if (!directionMatches(options._directions, latestData.direction)) {\n          debug: logger?.debug9(\n            \"Direction does not match\",\n            options,\n            latestData,\n          );\n          continue;\n        }\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentScroll = (scrollable?, realtime?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        fetchCurrentScroll(element, realtime),\n      );\n\n    // ----------\n\n    this.scroll = (direction, options = {}) => {\n      if (!isValidScrollDirection(direction)) {\n        throw MH.usageError(`Unknown scroll direction: '${direction}'`);\n      }\n\n      const isVertical = direction === MC.S_UP || direction === MC.S_DOWN;\n      const sign = direction === MC.S_UP || direction === MC.S_LEFT ? -1 : 1;\n      let targetCoordinate: TargetCoordinate;\n\n      const amount = options.amount ?? 100;\n      const asFractionOf = options.asFractionOf;\n\n      if (asFractionOf === \"visible\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * getClientHeightNow(el)) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * getClientWidthNow(el)) / 100;\n\n        //\n      } else if (asFractionOf === \"content\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * el[MC.S_SCROLL_HEIGHT]) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * el[MC.S_SCROLL_WIDTH]) / 100;\n\n        //\n      } else if (asFractionOf !== undefined && asFractionOf !== \"pixel\") {\n        throw MH.usageError(\n          `Unknown 'asFractionOf' keyword: '${asFractionOf}'`,\n        );\n\n        //\n      } else {\n        targetCoordinate = isVertical\n          ? (el) => el[MC.S_SCROLL_TOP] + sign * amount\n          : (el) => el[MC.S_SCROLL_LEFT] + sign * amount;\n      }\n\n      const target = isVertical\n        ? { top: targetCoordinate }\n        : { left: targetCoordinate };\n\n      return this.scrollTo(target, options);\n    };\n\n    // ----------\n\n    this.scrollTo = async (to, options = {}) =>\n      scrollTo(\n        to,\n        MH.merge(\n          { duration: config._scrollDuration }, // default\n          options,\n          {\n            scrollable: await fetchScrollableElement(options.scrollable),\n          }, // override\n        ),\n      );\n\n    // ----------\n\n    this.fetchCurrentScrollAction = (scrollable?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        getCurrentScrollAction(element),\n      );\n\n    // ----------\n\n    this.stopUserScrolling = async (options = {}) => {\n      const element = await fetchScrollableElement(options.scrollable);\n      const stopScroll = () =>\n        MH.elScrollTo(element, {\n          top: element[MC.S_SCROLL_TOP],\n          left: element[MC.S_SCROLL_LEFT],\n        });\n\n      if (options.immediate) {\n        stopScroll();\n      } else {\n        waitForMeasureTime().then(stopScroll);\n      }\n    };\n\n    // ----------\n\n    this.trackScroll = (handler?, options?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      return setupOnScroll(handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackScroll = (handler?, scrollable?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      removeOnScroll(handler, scrollable, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onScroll = (handler, options?) =>\n      setupOnScroll(handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offScroll = (handler, scrollable?) => {\n      removeOnScroll(handler, scrollable, TRACK_REGULAR); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type ScrollWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnScrollOptions.debounceWindow | debounceWindow} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnScrollOptions.threshold | threshold} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 50\n   */\n  scrollThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link ScrollOptions.duration | duration} in calls to\n   * {@link ScrollWatcher.scroll} and {@link ScrollWatcher.scrollTo}.\n   *\n   * @defaultValue 1000\n   */\n  scrollDuration?: number;\n};\n\n/**\n * @interface\n */\nexport type OnScrollOptions = {\n  /**\n   * If it is not given, or is `null`, `window` or `document`, then it will\n   * track the scroll of the {@link ScrollWatcher.fetchMainScrollableElement}.\n   *\n   * Other values must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  scrollable?: ScrollTarget;\n\n  /**\n   * If non-0, the scroll handler will only be called when the scrollable's\n   * scroll offset in the observed direction has changed at least\n   * `scrollThreshold` pixels since the last time the handler was called.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.scrollThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Specifies a list of {@link ScrollDirection}s to listen for.\n   *\n   * It can be a comma-separated list of direction names or an array of such\n   * names.\n   *\n   * If not given, then it listens for scrolls in any direction, including\n   * {@link Types.NoDirection} and {@link Types.AmbiguousDirection}.\n   *\n   * The {@link Types.NoDirection} occurs when the callback is called initially\n   * (if `skipInitial` is not `true`) and there hasn't yet been a scroll\n   * observed on the scrollable _and_ it's `scrollTop`/`scrollLeft` are 0.\n   *\n   * The {@link Types.AmbiguousDirection} occurs when the user scrolls\n   * diagonally with close to equal deltas in both horizontal and vertical\n   * direction.\n   *\n   * **IMPORTANT:**\n   *\n   * The direction of a scroll event is always based on comparing `deltaX` and\n   * `deltaY` relative to the _last scroll event_ (within the `debounceWindow`,\n   * and not to the scroll data for the last time the callback was called (in\n   * case it was skipped because `threshold` was not exceeded or in case it was\n   * debounced by a larger window than the watcher).\n   *\n   * I.e. if you have both `threshold` and `directions` restricted, or if the\n   * callback has a larger debounce window than the watcher, it is possible for\n   * there to be a change in the relevant `scrollTop`/`scrollLeft` offset that\n   * exceeds the threshold, and for the callback to _not_ be called.\n   *\n   * For a callback to be called, both of these must be true:\n   * - the change in `scrollTop`/`scrollLeft`, _compared to the last time the\n   *   callback was called_ must exceed the {@link threshold}\n   * - the effective scroll direction, _compared to the last scroll event_\n   *   prior to the _watcher's_ debounce window must be one of the given\n   *   {@link directions}.\n   *\n   * @defaultValue undefined\n   */\n  directions?: CommaSeparatedStr<ScrollDirection> | ScrollDirection[];\n\n  /**\n   * Do not call the handler until there's a future scroll of the element.\n   *\n   * By default we call the handler (almost) immediately if there's been a\n   * scroll in one of the given directions, or if there has not been a scroll\n   * but directions includes {@link Types.NoDirection}, but you can disable\n   * this initial call here.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts, but you probably need this when doing\n   * scroll-based animations.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * @interface\n */\nexport type ScrollOptions = ScrollToOptions & {\n  /**\n   * How much to scroll in the given direction.\n   *\n   * @defaultValue 100\n   */\n  amount?: number;\n\n  /**\n   * If set to \"pixel\" (default), `amount` is taken as absolute pixels.\n   *\n   * If set to \"visible\", `amount` is taken as percent of the element's visible\n   * size in the scrolling direction (100 means full client width for\n   * horizontal or height for vertical scroll).\n   *\n   * If set to \"content\", `amount` is taken as percent of the element's full\n   * content size in the scrolling direction (100 means full scroll width for\n   * horizontal or height for vertical scroll).\n   *\n   * @defaultValue \"pixel\"\n   */\n  asFractionOf?: \"pixel\" | \"visible\" | \"content\";\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the element that has been resized\n * - the {@link ScrollData} for the element\n */\nexport type OnScrollHandlerArgs = [Element, ScrollData];\nexport type OnScrollCallback = Callback<OnScrollHandlerArgs>;\nexport type OnScrollHandler =\n  | CallbackHandler<OnScrollHandlerArgs>\n  | OnScrollCallback;\n\nexport type ScrollData = {\n  clientWidth: number;\n  clientHeight: number;\n\n  scrollTop: number;\n\n  /**\n   * This is the `scrollTop` relative to the full `scrollHeight` minus the\n   * `clientHeight`, ranging from 0 to 1.\n   */\n  scrollTopFraction: number;\n\n  scrollLeft: number;\n\n  /**\n   * This is the `scrollLeft` relative to the full `scrollWidth` minus the\n   * `clientWidth`, ranging from 0 to 1.\n   */\n  scrollLeftFraction: number;\n\n  scrollWidth: number;\n  scrollHeight: number;\n\n  /**\n   * This is the direction of the last scroll action, i.e. _compared to the\n   * last scroll event_, not necessarily based on the deltas compared to the\n   * last time this callback was called.\n   */\n  direction: ScrollDirection;\n};\n\n// ----------------------------------------\n\ntype ScrollWatcherConfigInternal = {\n  _debounceWindow: number;\n  _scrollThreshold: number;\n  _scrollDuration: number;\n};\n\ntype OnScrollOptionsInternal = {\n  _element: Element;\n  _eventTarget: ScrollTarget;\n  _directions: ScrollDirection[] | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnScrollCallback;\n  _trackType: TrackType;\n  _options: OnScrollOptionsInternal;\n  _data?: ScrollData;\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, ScrollWatcher>();\n\nconst getConfig = (\n  config: ScrollWatcherConfig,\n): ScrollWatcherConfigInternal => {\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _scrollThreshold: toNonNegNum(config.scrollThreshold, 50) || 1,\n    _scrollDuration: toNonNegNum(config.scrollDuration, 1000),\n  };\n};\n\nconst TRACK_REGULAR = 1; // only scroll events\nconst TRACK_FULL = 2; // scroll + resizing of content and/or wrapper\n\n// --------------------\n\nconst fetchOnScrollOptions = async (\n  config: ScrollWatcherConfigInternal,\n  options: OnScrollOptions,\n): Promise<OnScrollOptionsInternal> => {\n  const directions =\n    validateStrList(\"directions\", options.directions, isValidScrollDirection) ||\n    null;\n\n  const element = await fetchScrollableElement(options.scrollable);\n\n  return {\n    _element: element,\n    _eventTarget: getEventTarget(element),\n    _directions: directions,\n    // If threshold is 0, internally treat as 1 (pixel)\n    _threshold: toNonNegNum(options.threshold, config._scrollThreshold) || 1,\n    _debounceWindow: options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n  };\n};\n\nconst directionMatches = (\n  userDirections: ScrollDirection[] | null,\n  latestDirection: ScrollDirection,\n) => !userDirections || MH.includes(userDirections, latestDirection);\n\nconst hasExceededThreshold = (\n  options: OnScrollOptionsInternal,\n  latestData: ScrollData,\n  lastThresholdData: ScrollData | undefined,\n): boolean => {\n  const directions = options._directions;\n  const threshold = options._threshold;\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  const topDiff = maxAbs(\n    latestData[MC.S_SCROLL_TOP] - lastThresholdData[MC.S_SCROLL_TOP],\n    latestData[MC.S_SCROLL_HEIGHT] - lastThresholdData[MC.S_SCROLL_HEIGHT],\n    latestData[MC.S_CLIENT_HEIGHT] - lastThresholdData[MC.S_CLIENT_HEIGHT],\n  );\n\n  const leftDiff = maxAbs(\n    latestData[MC.S_SCROLL_LEFT] - lastThresholdData[MC.S_SCROLL_LEFT],\n    latestData[MC.S_SCROLL_WIDTH] - lastThresholdData[MC.S_SCROLL_WIDTH],\n    latestData[MC.S_CLIENT_WIDTH] - lastThresholdData[MC.S_CLIENT_WIDTH],\n  );\n\n  // If the callback is only interested in up/down, then only check the\n  // scrollTop delta, and similarly for left/right.\n  let checkTop = false,\n    checkLeft = false;\n  if (\n    !directions ||\n    MH.includes(directions, MC.S_NONE) ||\n    MH.includes(directions, MC.S_AMBIGUOUS)\n  ) {\n    checkTop = checkLeft = true;\n  } else {\n    if (\n      MH.includes(directions, MC.S_UP) ||\n      MH.includes(directions, MC.S_DOWN)\n    ) {\n      checkTop = true;\n    }\n    if (\n      MH.includes(directions, MC.S_LEFT) ||\n      MH.includes(directions, MC.S_RIGHT)\n    ) {\n      checkLeft = true;\n    }\n  }\n\n  return (\n    (checkTop && topDiff >= threshold) || (checkLeft && leftDiff >= threshold)\n  );\n};\n\nconst fetchScrollData = async (\n  element: Element,\n  previousEventData: ScrollData | undefined,\n  realtime: boolean,\n): Promise<ScrollData> => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollTop = MH.ceil(element[MC.S_SCROLL_TOP]);\n  const scrollLeft = MH.ceil(element[MC.S_SCROLL_LEFT]);\n  const scrollWidth = element[MC.S_SCROLL_WIDTH];\n  const scrollHeight = element[MC.S_SCROLL_HEIGHT];\n  const clientWidth = getClientWidthNow(element);\n  const clientHeight = getClientHeightNow(element);\n\n  const scrollTopFraction =\n    MH.round(scrollTop) / (scrollHeight - clientHeight || MC.INFINITY);\n  const scrollLeftFraction =\n    MH.round(scrollLeft) / (scrollWidth - clientWidth || MC.INFINITY);\n\n  const prevScrollTop = previousEventData?.scrollTop || 0;\n  const prevScrollLeft = previousEventData?.scrollLeft || 0;\n\n  const direction = getMaxDeltaDirection(\n    scrollLeft - prevScrollLeft,\n    scrollTop - prevScrollTop,\n  );\n\n  return {\n    direction,\n    [MC.S_SCROLL_TOP]: scrollTop,\n    [MC.S_SCROLL_TOP_FRACTION]: scrollTopFraction,\n    [MC.S_SCROLL_LEFT]: scrollLeft,\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollLeftFraction,\n    [MC.S_SCROLL_WIDTH]: scrollWidth,\n    [MC.S_SCROLL_HEIGHT]: scrollHeight,\n    [MC.S_CLIENT_WIDTH]: clientWidth,\n    [MC.S_CLIENT_HEIGHT]: clientHeight,\n  };\n};\n\nconst setScrollCssProps = (\n  element: Element,\n  scrollData: Partial<ScrollData> | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetMainScrollableElement()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"page-\";\n  }\n\n  scrollData = scrollData || {};\n  const props = {\n    [MC.S_SCROLL_TOP]: scrollData[MC.S_SCROLL_TOP],\n    [MC.S_SCROLL_TOP_FRACTION]: scrollData[MC.S_SCROLL_TOP_FRACTION],\n    [MC.S_SCROLL_LEFT]: scrollData[MC.S_SCROLL_LEFT],\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollData[MC.S_SCROLL_LEFT_FRACTION],\n    [MC.S_SCROLL_WIDTH]: scrollData[MC.S_SCROLL_WIDTH],\n    [MC.S_SCROLL_HEIGHT]: scrollData[MC.S_SCROLL_HEIGHT],\n  };\n  setNumericStyleProps(element, props, { _prefix: prefix });\n};\n\nconst getEventTarget = (element: Element): ScrollTarget => {\n  if (element === MH.getDocScrollingElement()) {\n    return MH.getDoc();\n  }\n\n  return element;\n};\n\nconst invokeCallback = (\n  callback: OnScrollCallback,\n  element: Element,\n  scrollData: ScrollData,\n) => callback.invoke(element, MH.copyObject(scrollData)).catch(logError);\n"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IApBEnC,eAAA;IA0BA;AACF;AACA;AACA;AACA;AACA;IALEA,eAAA;IAWA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAzCEA,eAAA;IA+CA;AACF;AACA;AACA;AACA;AACA;IALEA,eAAA;IAWA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAVEA,eAAA;IAgBA;AACF;AACA;AACA;AACA;AACA;IALEA,eAAA;IAWA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAnBEA,eAAA;IAyBA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAREA,eAAA;IAaA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAXEA,eAAA;IAwEE,IAAIF,GAAG,KAAKwC,eAAe,EAAE;MAC3B,MAAMhC,EAAE,CAACiC,uBAAuB,CAAC,sBAAsB,CAAC;IAC1D;IAEA,IAAMC,MAAM,GAAGN,KAAK,GAChB,IAAIA,KAAK,CAACO,MAAM,CAAC;MAAExE,IAAI,EAAE,eAAe;MAAEyE,aAAa,EAAEN;IAAO,CAAC,CAAC,GAClE,IAAI;IAER,IAAMO,aAAa,GAAGrC,EAAE,CAACsC,UAAU,CAAsB,CAAC;IAE1D,IAAMC,eAAe,GAAGvC,EAAE,CAACsC,UAAU,CAGnC,CAAC;IAEH,IAAME,YAAY,GAAGf,WAAW,CAG9B;MAAA,OAAMzB,EAAE,CAACyC,MAAM,CAAC,CAAC;IAAA,EAAC;;IAEpB;;IAEA,IAAMC,kBAAkB;MAAA,IAAAC,IAAA,GAAA3D,iBAAA,cAAAxG,mBAAA,GAAAoF,IAAA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","ignoreList":[]}