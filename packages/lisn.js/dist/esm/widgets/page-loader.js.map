{"version":3,"file":"page-loader.js","names":["MH","displayElement","undisplayElement","addClasses","removeClasses","setHasModal","delHasModal","moveElement","hideAndRemoveElement","waitForElement","waitForPageReady","validateBoolean","Widget","registerWidget","PageLoader","get","element","mainWidget","instance","DUMMY_ID","isInstanceOf","register","WIDGET_NAME","config","configValidator","enableMain","loader","createElement","widget","onDestroy","getBody","then","body","isDestroyed","to","constructor","_PageLoader$get","destroyPromise","destroy","id","promiseResolve","_config$autoRemove","PREFIX_ROOT","spinner","PREFIX_SPINNER","autoRemove","onDisable","docQuerySelector","onEnable","PREFIXED_NAME","prefixName"],"sources":["../../../src/ts/widgets/page-loader.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  displayElement,\n  undisplayElement,\n  addClasses,\n  removeClasses,\n  setHasModal,\n  delHasModal,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, hideAndRemoveElement } from \"@lisn/utils/dom-alter\";\nimport { waitForElement, waitForPageReady } from \"@lisn/utils/dom-events\";\nimport { validateBoolean } from \"@lisn/utils/validation\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as a {@link PageLoader} widget.\n *\n * The page loader is a full-page spinner. You would almost certainly use this\n * only once, to hide the page before it's loaded.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link PageLoader}\n * widget on a given element. Use {@link PageLoader.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-page-loader` class or `data-lisn-page-loader` attribute set on\n *   the element that constitutes the widget. The element should be empty.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This will create a page loader using the JavaScript API.\n *\n * This will work even if\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}) is false\n *\n * ```html\n * <!-- LISN should be loaded beforehand -->\n * <script>\n *   LISN.widgets.PageLoader.enableMain();\n * </script>\n * ```\n *\n * @example\n * This will create a page loader using an existing element with default\n * {@link PageLoaderConfig}.\n *\n * ```html\n * <div class=\"lisn-page-loader\"></div>\n * ```\n *\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <div data-lisn-page-loader=\"auto-remove=false\"></div>\n * ```\n */\nexport class PageLoader extends Widget {\n  /**\n   * If element is omitted, returns the instance created by {@link enableMain}\n   * if any.\n   */\n  static get(element?: Element): PageLoader | null {\n    if (!element) {\n      return mainWidget;\n    }\n\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, PageLoader)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!PageLoader.get(element)) {\n          return new PageLoader(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * Creates a new element, inserts it into the document body and configures it\n   * as a {@link PageLoader}.\n   */\n  static enableMain(config?: PageLoaderConfig) {\n    const loader = MH.createElement(\"div\");\n    const widget = new PageLoader(loader, config);\n    widget.onDestroy(() => {\n      if (mainWidget === widget) {\n        mainWidget = null;\n      }\n      return moveElement(loader);\n    });\n\n    waitForElement(MH.getBody).then((body) => {\n      if (!widget.isDestroyed()) {\n        moveElement(loader, { to: body });\n      }\n    });\n\n    mainWidget = widget;\n    return widget;\n  }\n\n  constructor(element: Element, config?: PageLoaderConfig) {\n    const destroyPromise = PageLoader.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      addClasses(element, PREFIX_ROOT);\n\n      const spinner = MH.createElement(\"div\");\n      addClasses(spinner, PREFIX_SPINNER);\n\n      moveElement(spinner, { to: element });\n      waitForElement(MH.getBody).then(setHasModal); // we could be init before body\n\n      if (config?.autoRemove ?? true) {\n        waitForPageReady()\n          .then(() => hideAndRemoveElement(element))\n          .then(this.destroy);\n      }\n\n      this.onDisable(() => {\n        undisplayElement(element);\n        if (!MH.docQuerySelector(`.${PREFIX_ROOT}`)) {\n          delHasModal();\n        }\n      });\n\n      this.onEnable(async () => {\n        await displayElement(element);\n      });\n\n      this.onDestroy(async () => {\n        moveElement(spinner); // remove\n        await removeClasses(element, PREFIX_ROOT);\n        await displayElement(element); // revert undisplay by onDisable\n      });\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type PageLoaderConfig = {\n  /**\n   * Whether to automatically hide and remove the loader when the page is\n   * ready (see {@link waitForPageReady}.\n   *\n   * @defaultValue true\n   */\n  autoRemove?: boolean;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"page-loader\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_SPINNER = MH.prefixName(\"spinner\");\n// Only one PageLoader widget per element is allowed, but Widget requires a\n// non-blank ID.\n// In fact, it doesn't make much sense to have more than 1 page loader on the\n// whole page, but we support it, hence use a class rather than a DOM ID.\nconst DUMMY_ID = PREFIXED_NAME;\nlet mainWidget: PageLoader | null = null;\n\nconst configValidator: WidgetConfigValidatorObject<PageLoaderConfig> = {\n  autoRemove: validateBoolean,\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,KAAKA,EAAE;AAEd,SACEC,cAAc,EACdC,gBAAgB,EAChBC,UAAU,EACVC,aAAa,EACbC,WAAW,EACXC,WAAW;AAEb,SAASC,WAAW,EAAEC,oBAAoB;AAC1C,SAASC,cAAc,EAAEC,gBAAgB;AACzC,SAASC,eAAe;AAExB,SACEC,MAAM,EAENC,cAAc;;AAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,SAASF,MAAM,CAAC;EACrC;AACF;AACA;AACA;EACE,OAAOG,GAAGA,CAACC,OAAiB,EAAqB;IAC/C,IAAI,CAACA,OAAO,EAAE;MACZ,OAAOC,UAAU;IACnB;IAEA,MAAMC,QAAQ,GAAG,KAAK,CAACH,GAAG,CAACC,OAAO,EAAEG,QAAQ,CAAC;IAC7C,IAAInB,EAAE,CAACoB,YAAY,CAACF,QAAQ,EAAEJ,UAAU,CAAC,EAAE;MACzC,OAAOI,QAAQ;IACjB;IACA,OAAO,IAAI;EACb;EAEA,OAAOG,QAAQA,CAAA,EAAG;IAChBR,cAAc,CACZS,WAAW,EACX,CAACN,OAAO,EAAEO,MAAM,KAAK;MACnB,IAAI,CAACT,UAAU,CAACC,GAAG,CAACC,OAAO,CAAC,EAAE;QAC5B,OAAO,IAAIF,UAAU,CAACE,OAAO,EAAEO,MAAM,CAAC;MACxC;MACA,OAAO,IAAI;IACb,CAAC,EACDC,eACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACE,OAAOC,UAAUA,CAACF,MAAyB,EAAE;IAC3C,MAAMG,MAAM,GAAG1B,EAAE,CAAC2B,aAAa,CAAC,KAAK,CAAC;IACtC,MAAMC,MAAM,GAAG,IAAId,UAAU,CAACY,MAAM,EAAEH,MAAM,CAAC;IAC7CK,MAAM,CAACC,SAAS,CAAC,MAAM;MACrB,IAAIZ,UAAU,KAAKW,MAAM,EAAE;QACzBX,UAAU,GAAG,IAAI;MACnB;MACA,OAAOV,WAAW,CAACmB,MAAM,CAAC;IAC5B,CAAC,CAAC;IAEFjB,cAAc,CAACT,EAAE,CAAC8B,OAAO,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAK;MACxC,IAAI,CAACJ,MAAM,CAACK,WAAW,CAAC,CAAC,EAAE;QACzB1B,WAAW,CAACmB,MAAM,EAAE;UAAEQ,EAAE,EAAEF;QAAK,CAAC,CAAC;MACnC;IACF,CAAC,CAAC;IAEFf,UAAU,GAAGW,MAAM;IACnB,OAAOA,MAAM;EACf;EAEAO,WAAWA,CAACnB,OAAgB,EAAEO,MAAyB,EAAE;IAAA,IAAAa,eAAA;IACvD,MAAMC,cAAc,IAAAD,eAAA,GAAGtB,UAAU,CAACC,GAAG,CAACC,OAAO,CAAC,cAAAoB,eAAA,uBAAvBA,eAAA,CAAyBE,OAAO,CAAC,CAAC;IACzD,KAAK,CAACtB,OAAO,EAAE;MAAEuB,EAAE,EAAEpB;IAAS,CAAC,CAAC;IAEhC,CAACkB,cAAc,IAAIrC,EAAE,CAACwC,cAAc,CAAC,CAAC,EAAET,IAAI,CAAC,MAAM;MAAA,IAAAU,kBAAA;MACjD,IAAI,IAAI,CAACR,WAAW,CAAC,CAAC,EAAE;QACtB;MACF;MAEA9B,UAAU,CAACa,OAAO,EAAE0B,WAAW,CAAC;MAEhC,MAAMC,OAAO,GAAG3C,EAAE,CAAC2B,aAAa,CAAC,KAAK,CAAC;MACvCxB,UAAU,CAACwC,OAAO,EAAEC,cAAc,CAAC;MAEnCrC,WAAW,CAACoC,OAAO,EAAE;QAAET,EAAE,EAAElB;MAAQ,CAAC,CAAC;MACrCP,cAAc,CAACT,EAAE,CAAC8B,OAAO,CAAC,CAACC,IAAI,CAAC1B,WAAW,CAAC,CAAC,CAAC;;MAE9C,KAAAoC,kBAAA,GAAIlB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEsB,UAAU,cAAAJ,kBAAA,cAAAA,kBAAA,GAAI,IAAI,EAAE;QAC9B/B,gBAAgB,CAAC,CAAC,CACfqB,IAAI,CAAC,MAAMvB,oBAAoB,CAACQ,OAAO,CAAC,CAAC,CACzCe,IAAI,CAAC,IAAI,CAACO,OAAO,CAAC;MACvB;MAEA,IAAI,CAACQ,SAAS,CAAC,MAAM;QACnB5C,gBAAgB,CAACc,OAAO,CAAC;QACzB,IAAI,CAAChB,EAAE,CAAC+C,gBAAgB,CAAC,IAAIL,WAAW,EAAE,CAAC,EAAE;UAC3CpC,WAAW,CAAC,CAAC;QACf;MACF,CAAC,CAAC;MAEF,IAAI,CAAC0C,QAAQ,CAAC,YAAY;QACxB,MAAM/C,cAAc,CAACe,OAAO,CAAC;MAC/B,CAAC,CAAC;MAEF,IAAI,CAACa,SAAS,CAAC,YAAY;QACzBtB,WAAW,CAACoC,OAAO,CAAC,CAAC,CAAC;QACtB,MAAMvC,aAAa,CAACY,OAAO,EAAE0B,WAAW,CAAC;QACzC,MAAMzC,cAAc,CAACe,OAAO,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;AACF;;AAEA;AACA;AACA;;AAWA;;AAEA,MAAMM,WAAW,GAAG,aAAa;AACjC,MAAM2B,aAAa,GAAGjD,EAAE,CAACkD,UAAU,CAAC5B,WAAW,CAAC;AAChD,MAAMoB,WAAW,GAAG,GAAGO,aAAa,QAAQ;AAC5C,MAAML,cAAc,GAAG5C,EAAE,CAACkD,UAAU,CAAC,SAAS,CAAC;AAC/C;AACA;AACA;AACA;AACA,MAAM/B,QAAQ,GAAG8B,aAAa;AAC9B,IAAIhC,UAA6B,GAAG,IAAI;AAExC,MAAMO,eAA8D,GAAG;EACrEqB,UAAU,EAAElC;AACd,CAAC","ignoreList":[]}