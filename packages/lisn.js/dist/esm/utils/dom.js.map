{"version":3,"file":"dom.js","names":["MC","isValidStrList","newBitSpaces","createBitSpace","isValidMutationCategory","category","DOM_CATEGORIES_SPACE","has","isValidMutationCategoryList","categories","S_ADDED","S_REMOVED","S_ATTRIBUTE"],"sources":["../../../src/ts/utils/dom.ts"],"sourcesContent":["/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { MutationCategory } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newBitSpaces, createBitSpace } from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid category.\n *\n * @category Validation\n */\nexport const isValidMutationCategory = (\n  category: string,\n): category is MutationCategory => DOM_CATEGORIES_SPACE.has(category);\n\n/**\n * Returns true if the given string or array is a list of valid categories.\n *\n * @category Validation\n */\nexport const isValidMutationCategoryList = (categories: string | string[]) =>\n  isValidStrList(categories, isValidMutationCategory, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const DOM_CATEGORIES_SPACE = createBitSpace<MutationCategory>(\n  newBitSpaces(),\n  MC.S_ADDED,\n  MC.S_REMOVED,\n  MC.S_ATTRIBUTE,\n);\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,KAAKA,EAAE;AAId,SAASC,cAAc;AAEvB,SAASC,YAAY,EAAEC,cAAc;;AAErC;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAClCC,QAAgB;EAAA,OACiBC,oBAAoB,CAACC,GAAG,CAACF,QAAQ,CAAC;AAAA;;AAErE;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMG,2BAA2B,GAAG,SAA9BA,2BAA2BA,CAAIC,UAA6B;EAAA,OACvER,cAAc,CAACQ,UAAU,EAAEL,uBAAuB,EAAE,KAAK,CAAC;AAAA;;AAE5D;AACA;AACA;AACA;AACA,OAAO,IAAME,oBAAoB,GAAGH,cAAc,CAChDD,YAAY,CAAC,CAAC,EACdF,EAAE,CAACU,OAAO,EACVV,EAAE,CAACW,SAAS,EACZX,EAAE,CAACY,WACL,CAAC","ignoreList":[]}