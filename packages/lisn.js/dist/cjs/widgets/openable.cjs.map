{"version":3,"file":"openable.cjs","names":["MC","_interopRequireWildcard","require","MH","_settings","_cssAlter","_domAlter","_domEvents","_domOptimize","_domQuery","_event","_log","_math","_misc","_tasks","_position","_size","_validation","_callback","_sizeWatcher","_viewWatcher","_widget","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","o","Symbol","iterator","constructor","prototype","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","l","f","next","done","push","value","length","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","from","_arrayLikeToArray","_regeneratorRuntime","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","name","mark","setPrototypeOf","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_createForOfIteratorHelper","_n","F","toString","test","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","Boolean","valueOf","bind","_inherits","_setPrototypeOf","_defineProperty","_toPrimitive","toPrimitive","String","Number","registerOpenable","exports","newOpenable","configValidator","registerWidget","element","config","isHTMLElement","Openable","logError","usageError","_Widget","properties","_this","isModal","isOffcanvas","openCallbacks","newSet","closeCallbacks","isOpen","open","_ref","_callee","_iterator","_step","callback","_callee$","_context","isDisabled","t0","setHasModal","setBoolData","root","PREFIX_IS_OPEN","close","_ref2","_callee2","_iterator2","_step2","_callee2$","_context2","delHasModal","scrollWrapperToTop","unsetBoolData","_ref3","_callee3","_callee3$","_context3","waitForDelay","waitForMeasureTime","elScrollTo","outerWrapper","top","left","S_TOGGLE","onOpen","handler","add","wrapCallback","onClose","getRoot","getContainer","container","getTriggers","triggers","getTriggerConfigs","newMap","entries","onDestroy","clear","_setupElements","setupElements","instances","Widget","Collapsible","_Openable2","_config$autoClose","_config$reverse","_this2","isHorizontal","horizontal","orientation","S_HORIZONTAL","S_VERTICAL","onSetup","_iterator3","_step3","_step3$value","trigger","triggerConfig","insertCollapsibleIcon","setDataNow","PREFIX_ORIENTATION","err","WIDGET_NAME_COLLAPSIBLE","id","className","autoClose","closeButton","wrapTriggers","wrapper","childrenOf","setData","PREFIX_REVERSE","disableInitialTransition","disableTransitionTimer","tempEnableTransition","_ref4","_callee4","transitionDuration","_callee4$","_context4","removeClasses","PREFIX_TRANSITION_DISABLE","clearTimer","getMaxTransitionDuration","setTimer","addClasses","peek","_callee5","peekSize","_callee5$","_context5","isString","getStyleProp","VAR_PEEK_SIZE","PREFIX_PEEK","setStyleProp","updateWidth","_ref6","_callee6","width","_callee6$","_context6","getComputedStyleProp","S_WIDTH","VAR_JS_COLLAPSIBLE_WIDTH","_callee7","_callee7$","_context7","delStyleProp","register","el","collapsibleConfigValidator","Popup","_Openable3","_config$autoClose2","_config$closeButton","_config$position","_this3","WIDGET_NAME_POPUP","position","S_AUTO","PREFIX_PLACE","_callee8","_yield$MH$promiseAll","_yield$MH$promiseAll2","contentSize","containerView","placement","_callee8$","_context8","promiseAll","SizeWatcher","reuse","fetchCurrentSize","ViewWatcher","fetchCurrentView","fetchPopupPlacement","popupConfigValidator","Modal","_Openable4","_config$autoClose3","_config$closeButton2","WIDGET_NAME_MODAL","modalConfigValidator","Offcanvas","_Openable5","_config$autoClose4","_config$closeButton3","_this4","WIDGET_NAME_OFFCANVAS","S_RIGHT","offcanvasConfigValidator","newWeakMap","PREFIX_CLOSE_BTN","prefixName","S_REVERSE","PREFIX_OPENS_ON_HOVER","PREFIX_LINE","PREFIX_ICON_POSITION","PREFIX_TRIGGER_ICON","PREFIX_ICON_WRAPPER","S_ARIA_EXPANDED","ARIA_PREFIX","S_ARIA_MODAL","prefixCssVar","prefixCssJsVar","MIN_CLICK_TIME_AFTER_HOVER_OPEN","S_ARROW_UP","concat","S_ARROW","S_UP","S_ARROW_DOWN","S_DOWN","S_ARROW_LEFT","S_LEFT","S_ARROW_RIGHT","ARROW_TYPES","ICON_CLOSED_TYPES","ICON_OPEN_TYPES","isValidIconClosed","includes","isValidIconOpen","triggerConfigValidator","validateString","validateStrList","toArrayIfSingle","validateBoolean","icon","toBool","isValidPosition","iconClosed","iconOpen","hover","validateBooleanOrString","isValidTwoFoldPosition","getPrefixedNames","pref","_root","_overlay","_innerWrapper","_outerWrapper","_content","_container","_trigger","_containerForSelect","_triggerForSelect","_contentId","findContainer","content","cls","currWidget","childRef","parentOf","closest","findTriggers","prefixedNames","getTriggerSelector","suffix","contentId","getData","docQuerySelectorAll","arrayFrom","querySelectorAll","filter","contains","getTriggersFrom","inputTriggers","triggerMap","addTrigger","createElement","isInlineTag","tagName","wrapElement","ignoreMove","_iterator4","_step4","getWidgetConfig","isInstanceOf","Map","_iterator5","_step5","_step5$value","widget","_properties$wrapTrigg","innerWrapper","wrapElementNow","placeholder","overlay","moveElement","to","addClassesNow","domID","getOrAssignID","setAttr","S_ROLE","closeBtn","createButton","addEventListenerTo","S_CLICK","_i","_arr","settings","lightThemeClassName","darkThemeClassName","hasClass","elements","_callee9","_iterator6","_step6","_callee9$","_context9","delData","unsetAttr","_callee10","_iterator7","_step7","_step7$value","_i2","_arr2","_callee10$","_context10","waitForMutateTime","replaceElementNow","moveElementNow","removeClassesNow","delAttr","S_ARIA_CONTROLS","delDataNow","deleteKey","_i3","_arr3","waitForInteractive","destroy","isDestroyed","getBody","_iterator8","_step8","_step8$value","setBoolDataNow","S_HOVER","unsetBoolDataNow","setupListeners","doc","getDoc","hoverTimeOpened","isPointerOver","activeTrigger","isTrigger","getDefaultWidgetSelector","shouldPreventDefault","_triggers$get$prevent","_triggers$get","preventDefault","usesHover","_triggers$get2","usesAutoClose","_ref11","_triggers$get3","toggleTrigger","event","openIt","currentTargetOf","isElement","timeSince","S_POINTERENTER","setIsPointerOver","S_POINTERLEAVE","pointerLeft","unsetIsPointerOver","isTouchPointerEvent","pointerEntered","timeNow","closeIfEscape","closeIfClickOutside","target","targetOf","maybeSetupAutoCloseListeners","remove","addOrRemove","removeEventListenerFrom","setupOrCleanup","_iterator9","_step9","_step9$value","widgetConfig","_triggerConfig$icon","_ref12","_triggerConfig$iconCl","_ref13","_triggerConfig$iconOp","iconPosition","line","getBoolData","_ref14","_callee11","containerPosition","containerTop","containerBottom","containerLeft","containerRight","containerHMiddle","containerVMiddle","vpSize","popupWidth","popupHeight","placementVars","finalPlacement","alignmentVars","alignment","_callee11$","_context11","relative","S_TOP","S_BOTTOM","hMiddle","vMiddle","fetchViewportSize","border","S_HEIGHT","bottom","right","keyWithMaxVal","undefined","middle","min","_x","_x2"],"sources":["../../../src/ts/widgets/openable.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { XYDirection, Position } from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  hasClass,\n  addClasses,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n  getData,\n  getBoolData,\n  setData,\n  setDataNow,\n  setBoolData,\n  setBoolDataNow,\n  unsetBoolData,\n  unsetBoolDataNow,\n  delData,\n  delDataNow,\n  setHasModal,\n  delHasModal,\n  getStyleProp,\n  setStyleProp,\n  delStyleProp,\n  getComputedStyleProp,\n  getMaxTransitionDuration,\n} from \"@lisn/utils/css-alter\";\nimport {\n  wrapElement,\n  wrapElementNow,\n  moveElement,\n  moveElementNow,\n  replaceElementNow,\n  getOrAssignID,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { keyWithMaxVal } from \"@lisn/utils/math\";\nimport { toBool, toArrayIfSingle } from \"@lisn/utils/misc\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { isValidPosition, isValidTwoFoldPosition } from \"@lisn/utils/position\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport {\n  validateStrList,\n  validateBoolean,\n  validateBooleanOrString,\n  validateString,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\nimport { ViewWatcher, ViewData } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetHandler,\n  WidgetCallback,\n  WidgetConfigValidator,\n  WidgetConfigValidatorObject,\n  registerWidget,\n  getWidgetConfig,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/* ********************\n * Base Openable\n * ********************/\n\nexport type OpenableCreateFn<Config extends Record<string, unknown>> = (\n  element: HTMLElement,\n  config?: Config,\n) => Openable;\n\n/**\n * Enables automatic setting up of an {@link Openable} widget from an\n * elements matching its content element selector (`[data-lisn-<name>]` or\n * `.lisn-<name>`).\n *\n * The name you specify here should generally be the same name you pass in\n * {@link OpenableProperties.name | options.name} to the\n * {@link Openable.constructor} but it does not need to be the same.\n *\n * @param {} name        The name of the openable. Should be in kebab-case.\n * @param {} newOpenable Called for every element matching the selector.\n * @param {} configValidator\n *                        A validator object, or a function that returns such\n *                        an object, for all options supported by the widget.\n *\n * @see {@link registerWidget}\n */\nexport const registerOpenable = <Config extends Record<string, unknown>>(\n  name: string,\n  newOpenable: OpenableCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  registerWidget(\n    name,\n    (element, config) => {\n      if (MH.isHTMLElement(element)) {\n        if (!Openable.get(element)) {\n          return newOpenable(element, config);\n        }\n      } else {\n        logError(MH.usageError(\"Openable widget supports only HTMLElement\"));\n      }\n\n      return null;\n    },\n    configValidator,\n  );\n};\n\n/**\n * {@link Openable} is an abstract base class. You should not directly\n * instantiate it but can inherit it to create your own custom openable widget.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * @see {@link registerOpenable}\n */\nexport abstract class Openable extends Widget {\n  /**\n   * Opens the widget unless it is disabled.\n   */\n  readonly open: () => Promise<void>;\n\n  /**\n   * Closes the widget.\n   */\n  readonly close: () => Promise<void>;\n\n  /**\n   * Closes the widget if it is open, or opens it if it is closed (unless\n   * it is disabled).\n   */\n  readonly toggle: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is open.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onOpen: (handler: WidgetHandler) => void;\n\n  /**\n   * The given handler will be called when the widget is closed.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onClose: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is currently open.\n   */\n  readonly isOpen: () => boolean;\n\n  /**\n   * Returns the root element created by us that wraps the original content\n   * element passed to the constructor. It is located in the content element's\n   * original place.\n   */\n  readonly getRoot: () => HTMLElement;\n\n  /**\n   * Returns the element that was found to be the container. It is the closest\n   * ancestor that has a `lisn-collapsible-container` class, or if no such\n   * ancestor then the immediate parent of the content element.\n   */\n  readonly getContainer: () => HTMLElement | null;\n\n  /**\n   * Returns the trigger elements, if any. Note that these may be wrappers\n   * around the original triggers passed.\n   */\n  readonly getTriggers: () => Element[];\n\n  /**\n   * Returns the trigger elements along with their configuration.\n   */\n  readonly getTriggerConfigs: () => Map<Element, OpenableTriggerConfig>;\n\n  /**\n   * Retrieve an existing widget by its content element or any of its triggers.\n   *\n   * If the element is already part of a configured {@link Openable} widget,\n   * the widget instance is returned. Otherwise `null`.\n   *\n   * Note that trigger elements are not guaranteed to be unique among openable\n   * widgets as the same element can be a trigger for multiple such widgets. If\n   * the element you pass is a trigger, then the last openable widget that was\n   * created for it will be returned.\n   */\n  static get(element: Element): Openable | null {\n    // We manage the instances here since we also map associated elements and\n    // not just the main content element that created the widget.\n    return instances.get(element) || null;\n  }\n\n  constructor(element: HTMLElement, properties: OpenableProperties) {\n    super(element);\n\n    const { isModal, isOffcanvas } = properties;\n\n    const openCallbacks = MH.newSet<WidgetCallback>();\n    const closeCallbacks = MH.newSet<WidgetCallback>();\n\n    let isOpen = false;\n\n    // ----------\n\n    const open = async () => {\n      if (this.isDisabled() || isOpen) {\n        return;\n      }\n\n      isOpen = true;\n\n      for (const callback of openCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        setHasModal();\n      }\n\n      await setBoolData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const close = async () => {\n      if (this.isDisabled() || !isOpen) {\n        return;\n      }\n\n      isOpen = false;\n\n      for (const callback of closeCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        delHasModal();\n      }\n\n      if (isOffcanvas) {\n        scrollWrapperToTop(); // no need to await\n      }\n\n      await unsetBoolData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const scrollWrapperToTop = async () => {\n      // Wait a bit before scrolling since the hiding of the element is animated.\n      // Assume no more than 1s animation time.\n      await waitForDelay(1000);\n      await waitForMeasureTime();\n      MH.elScrollTo(outerWrapper, {\n        top: 0,\n        left: 0,\n      });\n    };\n\n    // --------------------\n\n    this.open = open;\n    this.close = close;\n    this[MC.S_TOGGLE] = () => (isOpen ? close() : open());\n    this.onOpen = (handler) => openCallbacks.add(wrapCallback(handler));\n    this.onClose = (handler) => closeCallbacks.add(wrapCallback(handler));\n    this.isOpen = () => isOpen;\n    this.getRoot = () => root;\n    this.getContainer = () => container;\n    this.getTriggers = () => [...triggers.keys()];\n    this.getTriggerConfigs = () => MH.newMap([...triggers.entries()]);\n\n    this.onDestroy(() => {\n      openCallbacks.clear();\n      closeCallbacks.clear();\n    });\n\n    const { root, container, triggers, outerWrapper } = setupElements(\n      this,\n      element,\n      properties,\n    );\n  }\n}\n\n/**\n * Per-trigger based configuration. Can either be given as an object as the\n * value of the {@link OpenableProperties.triggers} map, or it can be set as a\n * string configuration in the `data-lisn-<name>-trigger` data attribute. See\n * {@link getWidgetConfig} for the syntax.\n *\n * @example\n * ```html\n * <div data-lisn-collapsible-trigger=\"auto-close\n *                                     | icon=right\n *                                     | icon-closed=arrow-down\n *                                     | icon-open=x\"\n * ></div>\n * ```\n *\n * @interface\n */\nexport type OpenableTriggerConfig = {\n  /**\n   * The DOM ID of the trigger. Will result in the trigger element, which could\n   * be a wrapper around the original element (as in the case of\n   * {@link Collapsible} you passed, getting this ID.\n   *\n   * **IMPORTANT:** If the trigger element already has an ID and is not being\n   * wrapped, then this will override the ID and it _won't_ be restored on destroy.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) for the trigger. Will result in the trigger element, which\n   * could be a wrapper around the original element you passed, getting these\n   * classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Override the widget's {@link OpenableProperties.autoClose} for this trigger.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  autoClose?: boolean;\n\n  /**\n   * Open the openable when this trigger is hovered.\n   *\n   * If the device is touch and {@link OpenableProperties.autoClose} is enabled,\n   * the widget will be closed shortly after the pointer leaves both the\n   * trigger and the root element.\n   *\n   * @defaultValue false\n   */\n  hover?: boolean;\n\n  /**\n   * Whether to prevent default click action.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.icon} for this trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  icon?: false | Position;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconClosed} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconOpen} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/**\n * @interface\n */\nexport type OpenableProperties = {\n  /**\n   * The name of the _type_ of the openable. Will set the class prefix to\n   * `lisn-<name>`.\n   */\n  name: string;\n\n  /**\n   * The DOM ID of the openable. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the openable. Will result in the\n   * top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Whether to auto-close the widget on clicking outside the content element\n   * or on pressing Escape key. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * This is true by default for {@link Popup}, {@link Modal} and {@link Offcanvas}.\n   */\n  autoClose: boolean;\n\n  /**\n   * If true, then while the widget is open, the `document.body` will be set to\n   * `overflow: hidden`.\n   *\n   * This is true for {@link Modal}.\n   */\n  isModal: boolean;\n\n  /**\n   * If true, then the content element is assumed to be possibly scrollable and\n   * will be scrolled back to its top after the widget is closed.\n   *\n   * This is true for {@link Modal} and {@link Offcanvas}.\n   */\n  isOffcanvas: boolean;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * This is true by default for {@link Modal} and {@link Offcanvas}.\n   */\n  closeButton: boolean;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way (`<name>` is what is given as\n   * {@link name}):\n   * 1. If the content element has a `data-lisn-<name>-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-<name>-trigger` class or `data-lisn-<name>-trigger` attribute\n   *    and the same `data-lisn-<name>-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-<name>-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-<name>-trigger`\n   *    class or `data-lisn-<name>-trigger` attribute and that do _not_ have a\n   *    `data-lisn-<name>-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Whether to wrap each trigger in a new element.\n   *\n   * @defaultValue false\n   */\n  wrapTriggers?: boolean;\n\n  /**\n   * Hook to run once the widget is fully setup (which happens asynchronously).\n   *\n   * It is called during \"mutate time\". See {@link waitForMutateTime}.\n   *\n   * @defaultValue undefined\n   */\n  onSetup?: () => void;\n};\n\n/* ********************\n * Collapsible\n * ********************/\n\n/**\n * Configures the given element as a {@link Collapsible} widget.\n *\n * The Collapsible widget sets up the given element to be collapsed and\n * expanded upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link CollapsibleConfig.triggers | triggers}.\n *\n * **NOTE:** The Collapsible widget always wraps each trigger element in\n * another element in order to allow positioning the icon, if any.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-collapsible__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-reverse`: `\"true\"` or `\"false\"`\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-collapsible` class or `data-lisn-collapsible` attribute set on the\n *   element that holds the content of the collapsible\n * - `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     collapsible on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close\"` in order to have this trigger\n *     open the collapsible on hover but and override\n *     {@link CollapsibleConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-collapsible-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and the same `data-lisn-collapsible-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple collapsible with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-collapsible-trigger\">Expand</div>\n *   <div class=\"lisn-collapsible\">\n *     Some long content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a collapsible that is partially visible when collapsed, and\n * where the trigger is in a different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all other possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek=50px\n *                               | horizontal=false\n *                               | reverse=false\n *                               | auto-close\n *                               | icon=right\n *                               | icon-closed=arrow-up\"\n *                               | icon-open=arrow-down\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n */\nexport class Collapsible extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_COLLAPSIBLE,\n      (el, config) => new Collapsible(el, config),\n      collapsibleConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: CollapsibleConfig) {\n    const isHorizontal = config?.horizontal;\n    const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n\n    const onSetup = () => {\n      // The triggers here are wrappers around the original which will be\n      // replaced by the original on destroy, so no need to clean up this.\n      for (const [\n        trigger,\n        triggerConfig,\n      ] of this.getTriggerConfigs().entries()) {\n        insertCollapsibleIcon(trigger, triggerConfig, this, config);\n        setDataNow(trigger, MC.PREFIX_ORIENTATION, orientation);\n      }\n    };\n\n    super(element, {\n      name: WIDGET_NAME_COLLAPSIBLE,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? false,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: false,\n      triggers: config?.triggers,\n      wrapTriggers: true,\n      onSetup,\n    });\n\n    const root = this.getRoot();\n    const wrapper = MH.childrenOf(root)[0];\n\n    setData(root, MC.PREFIX_ORIENTATION, orientation);\n    setBoolData(root, PREFIX_REVERSE, config?.reverse ?? false);\n\n    // -------------------- Transitions\n    disableInitialTransition(element, 100);\n    disableInitialTransition(root, 100);\n    disableInitialTransition(wrapper, 100);\n\n    let disableTransitionTimer: ReturnType<typeof setTimeout> | null = null;\n    const tempEnableTransition = async () => {\n      await removeClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n      await removeClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n\n      if (disableTransitionTimer) {\n        MH.clearTimer(disableTransitionTimer);\n      }\n\n      const transitionDuration = await getMaxTransitionDuration(root);\n      disableTransitionTimer = MH.setTimer(() => {\n        if (this.isOpen()) {\n          addClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n          addClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n          disableTransitionTimer = null;\n        }\n      }, transitionDuration);\n    };\n\n    // Disable transitions except during open/close, so that resizing the\n    // window for example doesn't result in lagging width/height transition.\n    this.onOpen(tempEnableTransition);\n    this.onClose(tempEnableTransition);\n\n    // -------------------- Peek\n    const peek = config?.peek;\n    if (peek) {\n      (async () => {\n        let peekSize: string | null = null;\n        if (MH.isString(peek)) {\n          peekSize = peek;\n        } else {\n          peekSize = await getStyleProp(element, VAR_PEEK_SIZE);\n        }\n\n        addClasses(root, PREFIX_PEEK);\n        if (peekSize) {\n          setStyleProp(root, VAR_PEEK_SIZE, peekSize);\n        }\n      })();\n    }\n\n    // -------------------- Width in horizontal mode\n    if (isHorizontal) {\n      const updateWidth = async () => {\n        const width = await getComputedStyleProp(root, MC.S_WIDTH);\n        await setStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH, width);\n      };\n\n      MH.setTimer(updateWidth);\n\n      // Save its current width so that if it contains text, it does not\n      // \"collapse\" and end up super tall.\n      this.onClose(updateWidth);\n\n      this.onOpen(async () => {\n        // Update the content width before opening.\n        await updateWidth();\n\n        // Delete the fixed width property soon after opening to allow it to\n        // resize again while it's open.\n        waitForDelay(2000).then(() => {\n          if (this.isOpen()) {\n            delStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH);\n          }\n        });\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type CollapsibleConfig = {\n  /**\n   * The DOM ID of the collapsible. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the\n   * `data-lisn-collapsible-content-id` attribute used to link triggers to the\n   * collapsible.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the collapsible. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-collapsible-content-id`\n   *    attribute, then it must be a unique (for the current page) ID. In this\n   *    case, the trigger elements will be any element in the document that\n   *    has a `lisn-collapsible-trigger` class or\n   *    `data-lisn-collapsible-trigger` attribute and the same\n   *    `data-lisn-collapsible-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n   *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Open sideways (to the right) instead of downwards (default).\n   *\n   * **IMPORTANT:** In horizontal mode the width of the content element should\n   * not be set (or be `auto`), but you can use `min-width` or `max-width` in\n   * your CSS if needed.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Open to the left if horizontal or upwards if vertical.\n   *\n   * @defaultValue false\n   */\n  reverse?: boolean;\n\n  /**\n   * If not false, part of the content will be visible when the collapsible is\n   * closed. The value can be any valid CSS width specification.\n   *\n   * If you set this to `true`, then the size of the peek window will be\n   * dictated by CSS. By default the size is 100px, but you can change this by\n   * setting `--lisn-peek-size` CSS property on the content element or any of\n   * its ancestors.\n   *\n   * Otherwise, if the value is a string, it must be a CSS length including units.\n   *\n   * @defaultValue false\n   */\n  peek?: boolean | string;\n\n  /**\n   * Automatically close the collapsible when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue false\n   */\n  autoClose?: boolean;\n\n  /**\n   * Add an icon to each trigger.\n   *\n   * If set to something other than `false`, then by default the icon in the\n   * closed state is a plus (+) and in the open state it's a minus (-), but\n   * this can be configured with {@link iconClosed} and {@link iconOpen}.\n   *\n   * @defaultValue false\n   */\n  icon?: false | Position;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the closed state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"plus\"\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the open state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"minus\";\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/* ********************\n * Popup\n * ********************/\n\n/**\n * Configures the given element as a {@link Popup} widget.\n *\n * The Popup widget sets up the given element to be hidden and open in a\n * floating popup upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link PopupConfig.triggers | triggers}.\n *\n * **IMPORTANT:** The popup is positioned absolutely in its container and the\n * position is relative to the container. The container gets `width:\n * fit-content` by default but you can override this in your CSS. The popup\n * also gets a configurable `min-width` set.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-popup__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position (top, bottom, left, top-left, etc)\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-popup` class or `data-lisn-popup` attribute set on the element that\n *   holds the content of the popup\n * - `lisn-popup-trigger` class or `data-lisn-popup-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     popup on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the popup on hover but and override\n *     {@link PopupConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-popup-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and the\n *    same `data-lisn-popup-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-popup-trigger` class or\n *    `data-lisn-popup-trigger` attribute and that do _not_ have a\n *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple popup with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-popup-trigger\">Open</div>\n *   <div class=\"lisn-popup\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a popup that has a close button, and where the trigger is in a\n * different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button | position=bottom | auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n * ```\n */\nexport class Popup extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_POPUP,\n      (el, config) => new Popup(el, config),\n      popupConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: PopupConfig) {\n    super(element, {\n      name: WIDGET_NAME_POPUP,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: config?.closeButton ?? false,\n      triggers: config?.triggers,\n    });\n\n    const root = this.getRoot();\n    const container = this.getContainer();\n\n    const position = config?.position ?? S_AUTO;\n    if (position !== S_AUTO) {\n      setData(root, MC.PREFIX_PLACE, position);\n    }\n\n    if (container && position === S_AUTO) {\n      // Automatic position\n      this.onOpen(async () => {\n        const [contentSize, containerView] = await MH.promiseAll([\n          SizeWatcher.reuse().fetchCurrentSize(element),\n          ViewWatcher.reuse().fetchCurrentView(container),\n        ]);\n\n        const placement = await fetchPopupPlacement(contentSize, containerView);\n        if (placement) {\n          await setData(root, MC.PREFIX_PLACE, placement);\n        }\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type PopupConfig = {\n  /**\n   * The DOM ID of the popup. Will result in the top-level root element that's\n   * created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-popup-content-id`\n   * attribute used to link triggers to the popup.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the popup. Will result in the\n   * top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-popup-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and\n   *    the same `data-lisn-popup-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-popup-trigger`\n   *    class or `data-lisn-popup-trigger` attribute and that do _not_ have a\n   *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue false\n   */\n  closeButton?: boolean;\n\n  /**\n   * Specify the popup position _relative to its container_. Supported\n   * positions include `\"top\"`, `\"bottom\"`, `\"left\"`, `\"right\" `(which result\n   * on the popup being placed on top, bottom, etc, but center-aligned), or\n   * `\"top-left\"`, `\"left-top\"`, etc, as well as `\"auto\"`. If set to `\"auto\"`,\n   * then popup position will be based on the container position within the\n   * viewport at the time it's open.\n   *\n   * @defaultValue \"auto\"\n   */\n  position?: Position | `${Position}-${Position}` | \"auto\";\n\n  /**\n   * Automatically close the popup when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Modal\n * ********************/\n\n/**\n * Configures the given element as a {@link Modal} widget.\n *\n * The Modal widget sets up the given element to be hidden and open in a fixed\n * full-screen modal popup upon activation. Activation can be done manually by\n * calling {@link open} or when clicking on any of the given\n * {@link ModalConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-modal__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-modal` class or `data-lisn-modal` attribute set on the element that\n *   holds the content of the modal\n * - `lisn-modal-trigger` class or `data-lisn-modal-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     modal on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the modal on hover but and override\n *     {@link ModalConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-modal-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and the\n *    same `data-lisn-modal-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-modal-trigger` class or\n *    `data-lisn-modal-trigger` attribute and that do _not_ have a\n *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple modal with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-modal-trigger\">Open</div>\n *   <div class=\"lisn-modal\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a modal that doesn't automatically close on click outside or\n * Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Modal extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_MODAL,\n      (el, config) => new Modal(el, config),\n      modalConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: ModalConfig) {\n    super(element, {\n      name: WIDGET_NAME_MODAL,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: true,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type ModalConfig = {\n  /**\n   * The DOM ID of the modal. Will result in the top-level root element that's\n   * created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-modal-content-id`\n   * attribute used to link triggers to the modal.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the modal. Will result in the\n   * top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-modal-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and\n   *    the same `data-lisn-modal-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-modal-trigger`\n   *    class or `data-lisn-modal-trigger` attribute and that do _not_ have a\n   *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the modal when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * If you set this to false, then you should ensure {@link closeButton} is\n   * enabled.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Offcanvas\n * ********************/\n\n/**\n * Configures the given element as a {@link Offcanvas} widget.\n *\n * The Offcanvas widget sets up the given element to be hidden and open in a\n * fixed overlay (non full-screen) upon activation. Activation can be done\n * manually by calling {@link open} or when clicking on any of the given\n * {@link OffcanvasConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-offcanvas__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position `\"top\"`, `\"bottom\"`, `\"left\"` or\n *   `\"right\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-offcanvas` class or `data-lisn-offcanvas` attribute set on the\n *   element that holds the content of the offcanvas\n * - `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     offcanvas on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the offcanvas on hover but and override\n *     {@link OffcanvasConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and the same `data-lisn-offcanvas-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and that do _not_ have a `data-lisn-offcanvas-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple offcanvas with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-offcanvas-trigger\">Open</div>\n *   <div class=\"lisn-offcanvas\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a offcanvas that doesn't automatically close on click outside\n * or Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"position=top | auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Offcanvas extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_OFFCANVAS,\n      (el, config) => new Offcanvas(el, config),\n      offcanvasConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: OffcanvasConfig) {\n    super(element, {\n      name: WIDGET_NAME_OFFCANVAS,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n\n    const position = config?.position || MC.S_RIGHT;\n    setData(this.getRoot(), MC.PREFIX_PLACE, position);\n  }\n}\n\n/**\n * @interface\n */\nexport type OffcanvasConfig = {\n  /**\n   * The DOM ID of the offcanvas. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-offcanvas-content-id`\n   * attribute used to link triggers to the offcanvas.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the offcanvas. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and the same `data-lisn-offcanvas-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and that do _not_ have a `data-lisn-offcanvas-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Specify the offcanvas position. Supported positions are top, bottom, left,\n   * right.\n   *\n   * @defaultValue \"right\"\n   */\n  position?: Position;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the offcanvas when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n// ------------------------------\n\ntype ElementsCollection = {\n  content: HTMLElement;\n  root: HTMLElement;\n  container: HTMLElement | null;\n  outerWrapper: HTMLElement;\n  triggers: Map<Element, OpenableTriggerConfig>;\n};\n\nconst instances = MH.newWeakMap<Element, Openable>();\n\nconst WIDGET_NAME_COLLAPSIBLE = \"collapsible\";\nconst WIDGET_NAME_POPUP = \"popup\";\nconst WIDGET_NAME_MODAL = \"modal\";\nconst WIDGET_NAME_OFFCANVAS = \"offcanvas\";\n\nconst PREFIX_CLOSE_BTN = MH.prefixName(\"close-button\");\nconst PREFIX_IS_OPEN = MH.prefixName(\"is-open\");\nconst PREFIX_REVERSE = MH.prefixName(MC.S_REVERSE);\nconst PREFIX_PEEK = MH.prefixName(\"peek\");\nconst PREFIX_OPENS_ON_HOVER = MH.prefixName(\"opens-on-hover\");\nconst PREFIX_LINE = MH.prefixName(\"line\");\nconst PREFIX_ICON_POSITION = MH.prefixName(\"icon-position\");\nconst PREFIX_TRIGGER_ICON = MH.prefixName(\"trigger-icon\");\nconst PREFIX_ICON_WRAPPER = MH.prefixName(\"icon-wrapper\");\nconst S_AUTO = \"auto\";\nconst S_ARIA_EXPANDED = MC.ARIA_PREFIX + \"expanded\";\nconst S_ARIA_MODAL = MC.ARIA_PREFIX + \"modal\";\nconst VAR_PEEK_SIZE = MH.prefixCssVar(\"peek-size\");\nconst VAR_JS_COLLAPSIBLE_WIDTH = MH.prefixCssJsVar(\"collapsible-width\");\nconst MIN_CLICK_TIME_AFTER_HOVER_OPEN = 1000;\nconst S_ARROW_UP =\n  `${MC.S_ARROW}-${MC.S_UP}` as `${typeof MC.S_ARROW}-${typeof MC.S_UP}`;\nconst S_ARROW_DOWN =\n  `${MC.S_ARROW}-${MC.S_DOWN}` as `${typeof MC.S_ARROW}-${typeof MC.S_DOWN}`;\nconst S_ARROW_LEFT =\n  `${MC.S_ARROW}-${MC.S_LEFT}` as `${typeof MC.S_ARROW}-${typeof MC.S_LEFT}`;\nconst S_ARROW_RIGHT =\n  `${MC.S_ARROW}-${MC.S_RIGHT}` as `${typeof MC.S_ARROW}-${typeof MC.S_RIGHT}`;\n\nconst ARROW_TYPES = [\n  S_ARROW_UP,\n  S_ARROW_DOWN,\n  S_ARROW_LEFT,\n  S_ARROW_RIGHT,\n] as const;\n\nconst ICON_CLOSED_TYPES = [\"plus\", ...ARROW_TYPES] as const;\nconst ICON_OPEN_TYPES = [\"minus\", \"x\", ...ARROW_TYPES] as const;\ntype IconCloseType = (typeof ICON_CLOSED_TYPES)[number];\ntype IconOpenType = (typeof ICON_OPEN_TYPES)[number];\n\nconst isValidIconClosed = (value: string): value is IconCloseType =>\n  MH.includes(ICON_CLOSED_TYPES, value);\n\nconst isValidIconOpen = (value: string): value is IconOpenType =>\n  MH.includes(ICON_OPEN_TYPES, value);\n\nconst triggerConfigValidator: WidgetConfigValidatorObject<OpenableTriggerConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      value && toBool(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n    hover: validateBoolean,\n  };\n\nconst collapsibleConfigValidator: WidgetConfigValidatorObject<CollapsibleConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    horizontal: validateBoolean,\n    reverse: validateBoolean,\n    peek: validateBooleanOrString,\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      toBool(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n  };\n\nconst popupConfigValidator: WidgetConfigValidatorObject<PopupConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) =>\n    validateString(\n      key,\n      value,\n      (v) => v === S_AUTO || isValidPosition(v) || isValidTwoFoldPosition(v),\n    ),\n  autoClose: validateBoolean,\n};\n\nconst modalConfigValidator: WidgetConfigValidatorObject<ModalConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  autoClose: validateBoolean,\n};\n\nconst offcanvasConfigValidator: WidgetConfigValidatorObject<OffcanvasConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) => validateString(key, value, isValidPosition),\n  autoClose: validateBoolean,\n};\n\nconst getPrefixedNames = (name: string) => {\n  const pref = MH.prefixName(name);\n  return {\n    _root: `${pref}__root`,\n    _overlay: `${pref}__overlay`, // only used for modal/offcanvas\n    _innerWrapper: `${pref}__inner-wrapper`,\n    _outerWrapper: `${pref}__outer-wrapper`,\n    _content: `${pref}__content`,\n    _container: `${pref}__container`,\n    _trigger: `${pref}__trigger`,\n    // Use different classes for styling to the ones used for auto-discovering\n    // elements, so that re-creating existing widgets can correctly find the\n    // elements to be used by the new widget synchronously before the current\n    // one is destroyed.\n    _containerForSelect: `${pref}-container`,\n    _triggerForSelect: `${pref}-trigger`,\n    _contentId: `${pref}-content-id`,\n  };\n};\n\nconst findContainer = (content: Element, cls: string) => {\n  const currWidget = instances.get(content);\n  // If there's an existing widget that we're about to destroy, the content\n  // element will be wrapped in several elements and won't be restored until\n  // the next mutate time. In that case, to correctly determine the container\n  // element, use the current widget's root element, which is located in the\n  // content element's original place.\n  let childRef = currWidget?.getRoot() || content;\n  if (!MH.parentOf(childRef)) {\n    // The current widget is not yet initialized (i.e. we are re-creating it\n    // immediately after it was constructed)\n    childRef = content;\n  }\n\n  // Find the content container\n  let container: HTMLElement | null = childRef.closest(`.${cls}`);\n  if (!container) {\n    container = MH.parentOf(childRef);\n  }\n\n  return container;\n};\n\nconst findTriggers = (\n  content: Element,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const container = findContainer(content, prefixedNames._containerForSelect);\n  // jsdom does not like the below selector when suffixed by [data-*] or :not()...\n  // const triggerSelector = `:is(.${prefixedNames._triggerForSelect},[data-${prefixedNames._triggerForSelect}])`;\n  // So use this:\n  const getTriggerSelector = (suffix: string) =>\n    `.${prefixedNames._triggerForSelect}${suffix},` +\n    `[data-${prefixedNames._triggerForSelect}]${suffix}`;\n\n  const contentId = getData(content, prefixedNames._contentId);\n  let triggers: Element[] = [];\n\n  if (contentId) {\n    triggers = [\n      ...MH.docQuerySelectorAll(\n        getTriggerSelector(`[data-${prefixedNames._contentId}=\"${contentId}\"]`),\n      ),\n    ];\n  } else if (container) {\n    triggers = [\n      ...MH.arrayFrom(\n        MH.querySelectorAll(\n          container,\n          getTriggerSelector(`:not([data-${prefixedNames._contentId}])`),\n        ),\n      ).filter((t) => !content.contains(t)),\n    ];\n  }\n\n  return triggers;\n};\n\nconst getTriggersFrom = (\n  content: Element,\n  inputTriggers:\n    | Element[]\n    | Map<Element, OpenableTriggerConfig | null>\n    | undefined,\n  wrapTriggers: boolean,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const triggerMap = MH.newMap<Element, OpenableTriggerConfig>();\n\n  inputTriggers = inputTriggers || findTriggers(content, prefixedNames);\n\n  const addTrigger = (\n    trigger: Element,\n    triggerConfig: OpenableTriggerConfig,\n  ) => {\n    if (wrapTriggers) {\n      const wrapper = MH.createElement(\n        isInlineTag(MH.tagName(trigger)) ? \"span\" : \"div\",\n      );\n      wrapElement(trigger, { wrapper, ignoreMove: true }); // no need to await\n      trigger = wrapper;\n    }\n\n    triggerMap.set(trigger, triggerConfig);\n  };\n\n  if (MH.isArray(inputTriggers)) {\n    for (const trigger of inputTriggers) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(\n          getData(trigger, prefixedNames._triggerForSelect),\n          triggerConfigValidator,\n        ),\n      );\n    }\n  } else if (MH.isInstanceOf(inputTriggers, Map)) {\n    for (const [trigger, triggerConfig] of inputTriggers.entries()) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(triggerConfig, triggerConfigValidator),\n      );\n    }\n  }\n\n  return triggerMap;\n};\n\nconst setupElements = (\n  widget: Openable,\n  content: HTMLElement,\n  properties: OpenableProperties,\n): ElementsCollection => {\n  const prefixedNames = getPrefixedNames(properties.name);\n  const container = findContainer(content, prefixedNames._containerForSelect);\n\n  const wrapTriggers = properties.wrapTriggers ?? false;\n  const triggers = getTriggersFrom(\n    content,\n    properties.triggers,\n    wrapTriggers,\n    prefixedNames,\n  );\n\n  // Create two wrappers\n  const innerWrapper = MH.createElement(\"div\");\n  addClasses(innerWrapper, prefixedNames._innerWrapper);\n\n  const outerWrapper = wrapElementNow(innerWrapper);\n\n  // Setup the root element.\n  // For off-canvas types we need another wrapper to serve as the root and we\n  // need a placeholder element to save the content's original position so it\n  // can be restored on destroy.\n  // Otherwise use outerWrapper for root and insert the root where the content\n  // was.\n  let root: HTMLElement;\n  let placeholder: HTMLElement;\n  if (properties.isOffcanvas) {\n    addClasses(outerWrapper, prefixedNames._outerWrapper);\n    root = wrapElementNow(outerWrapper);\n    placeholder = MH.createElement(\"div\");\n\n    const overlay = MH.createElement(\"div\");\n    addClasses(overlay, prefixedNames._overlay);\n    moveElement(overlay, { to: root });\n  } else {\n    // Otherwise use the outer wrapper as the root\n    root = placeholder = outerWrapper;\n  }\n\n  if (properties.id) {\n    root.id = properties.id;\n  }\n\n  if (properties.className) {\n    addClassesNow(root, ...toArrayIfSingle(properties.className));\n  }\n\n  unsetBoolData(root, PREFIX_IS_OPEN);\n  const domID = getOrAssignID(root, properties.name);\n\n  if (properties.isModal) {\n    MH.setAttr(root, MC.S_ROLE, \"dialog\");\n    MH.setAttr(root, S_ARIA_MODAL);\n  }\n\n  addClasses(root, prefixedNames._root);\n  disableInitialTransition(root);\n\n  // Add a close button?\n  if (properties.closeButton) {\n    const closeBtn = MH.createButton(\"Close\");\n    addClasses(closeBtn, PREFIX_CLOSE_BTN);\n\n    // If autoClose is true, it will be closed on click anyway, because the\n    // close button is outside the content.\n    addEventListenerTo(closeBtn, MC.S_CLICK, () => {\n      widget.close();\n    });\n\n    moveElement(closeBtn, { to: properties.isOffcanvas ? root : innerWrapper });\n  }\n\n  // Transfer the relevant classes/data attrs from content to root element, so\n  // that our CSS can work without :has.\n  // This won't cause forced layout since the root is not yet attached to the\n  // DOM.\n  for (const cls of [\n    settings.lightThemeClassName,\n    settings.darkThemeClassName,\n  ]) {\n    if (hasClass(content, cls)) {\n      addClasses(root, cls);\n    }\n  }\n\n  const elements = {\n    content,\n    root,\n    container,\n    outerWrapper,\n    triggers,\n  };\n\n  // -------------------- Close / destroy hooks\n  widget.onClose(async () => {\n    for (const trigger of triggers.keys()) {\n      delData(trigger, PREFIX_OPENS_ON_HOVER);\n      MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n      await unsetBoolData(trigger, PREFIX_IS_OPEN);\n    }\n  });\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n\n    replaceElementNow(placeholder, content, { ignoreMove: true });\n    moveElementNow(root); // remove\n    removeClassesNow(content, prefixedNames._content);\n\n    if (container) {\n      removeClassesNow(container, prefixedNames._container);\n    }\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      MH.delAttr(trigger, MC.S_ARIA_CONTROLS);\n      MH.delAttr(trigger, S_ARIA_EXPANDED);\n\n      delDataNow(trigger, PREFIX_OPENS_ON_HOVER);\n      delDataNow(trigger, PREFIX_IS_OPEN);\n\n      removeClassesNow(\n        trigger,\n        prefixedNames._trigger,\n        ...(triggerConfig?.className || []),\n      );\n\n      if (trigger.id === triggerConfig?.id) {\n        trigger.id = \"\";\n      }\n\n      if (wrapTriggers) {\n        replaceElementNow(trigger, MH.childrenOf(trigger)[0], {\n          ignoreMove: true,\n        });\n      }\n    }\n\n    triggers.clear();\n\n    for (const el of [content, ...triggers.keys()]) {\n      if (instances.get(el) === widget) {\n        MH.deleteKey(instances, el);\n      }\n    }\n  });\n\n  // -------------------- SETUP\n  // Save the elements so we can lookup the instance\n  const currWidget = instances.get(content);\n  for (const el of [content, ...triggers.keys()]) {\n    instances.set(el, widget);\n  }\n\n  // Wait for the DOMWatcher to be active, which may not be before interactive.\n  waitForInteractive()\n    .then(currWidget?.destroy)\n    .then(waitForMutateTime)\n    .then(() => {\n      if (widget.isDestroyed()) {\n        return;\n      }\n\n      addClassesNow(content, prefixedNames._content);\n\n      if (container) {\n        addClassesNow(container, prefixedNames._container);\n      }\n\n      if (properties.isOffcanvas) {\n        moveElementNow(root, {\n          to: MH.getBody(),\n          ignoreMove: true,\n        });\n      }\n\n      // Move the placeholder element to before the content and then move\n      // content into inner wrapper.\n      moveElementNow(placeholder, {\n        // for not-offcanvas it's also the root\n        to: content,\n        position: \"before\",\n        ignoreMove: true,\n      });\n\n      moveElementNow(content, { to: innerWrapper, ignoreMove: true });\n\n      // Setup the triggers\n      for (const [trigger, triggerConfig] of triggers.entries()) {\n        MH.setAttr(trigger, MC.S_ARIA_CONTROLS, domID);\n        MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n\n        setBoolDataNow(\n          trigger,\n          PREFIX_OPENS_ON_HOVER,\n          triggerConfig[MC.S_HOVER],\n        );\n        unsetBoolDataNow(trigger, PREFIX_IS_OPEN);\n\n        addClassesNow(\n          trigger,\n          prefixedNames._trigger,\n          ...(triggerConfig?.className || []),\n        );\n\n        if (triggerConfig?.id) {\n          trigger.id = triggerConfig.id;\n        }\n      }\n\n      setupListeners(widget, elements, properties, prefixedNames);\n\n      if (properties.onSetup) {\n        properties.onSetup();\n      }\n    });\n\n  return elements;\n};\n\nconst setupListeners = (\n  widget: Openable,\n  elements: ElementsCollection,\n  properties: OpenableProperties,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const { content, root, triggers } = elements;\n  const doc = MH.getDoc();\n\n  let hoverTimeOpened = 0;\n  let isPointerOver = false;\n  let activeTrigger: Element | null = null;\n\n  // ----------\n\n  const isTrigger = (element: Element) =>\n    MH.includes(\n      MH.arrayFrom(triggers.keys()),\n      element.closest(getDefaultWidgetSelector(prefixedNames._trigger)),\n    );\n\n  const shouldPreventDefault = (trigger: Element) =>\n    triggers.get(trigger)?.preventDefault ?? true;\n\n  const usesHover = (trigger: Element) => triggers.get(trigger)?.hover;\n\n  const usesAutoClose = (trigger: Element | null) =>\n    (trigger ? triggers.get(trigger)?.autoClose : null) ?? properties.autoClose;\n\n  // ----------\n\n  const toggleTrigger = (event: Event, openIt?: boolean) => {\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger)) {\n      if (shouldPreventDefault(trigger)) {\n        MH.preventDefault(event);\n      }\n\n      // If a click was fired shortly after opening on hover, ignore\n      if (\n        openIt !== false && // not explicitly asked to close\n        widget.isOpen() &&\n        MH.timeSince(hoverTimeOpened) < MIN_CLICK_TIME_AFTER_HOVER_OPEN\n      ) {\n        return;\n      }\n\n      if (openIt ?? !widget.isOpen()) {\n        // open it\n        activeTrigger = trigger;\n        MH.setAttr(trigger, S_ARIA_EXPANDED); // will be unset on close\n        setBoolData(trigger, PREFIX_IS_OPEN); // will be unset on close\n\n        widget.open(); // no need to await\n\n        if (usesAutoClose(trigger)) {\n          if (usesHover(trigger)) {\n            addEventListenerTo(root, MC.S_POINTERENTER, setIsPointerOver);\n            addEventListenerTo(root, MC.S_POINTERLEAVE, pointerLeft);\n          }\n\n          // auto-close listeners setup by the onOpen handler below\n        }\n      } else {\n        widget.close(); // out onClose handler below will remove listeners\n      }\n    }\n  };\n\n  // ----------\n\n  const setIsPointerOver = () => {\n    isPointerOver = true;\n  };\n\n  // ----------\n\n  const unsetIsPointerOver = (event: Event) => {\n    // Keep it set to true if this is a touch pointer type; otherwise unset\n    isPointerOver = isPointerOver && MH.isTouchPointerEvent(event);\n  };\n\n  // ----------\n\n  const pointerEntered = (event: Event) => {\n    setIsPointerOver();\n    if (!widget.isOpen()) {\n      hoverTimeOpened = MH.timeNow();\n      toggleTrigger(event, true);\n    }\n  };\n\n  // ----------\n\n  const pointerLeft = (event: Event) => {\n    unsetIsPointerOver(event);\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger) && usesAutoClose(trigger)) {\n      MH.setTimer(\n        () => {\n          if (!isPointerOver) {\n            widget.close();\n          }\n        },\n        // use a delay that allows the mouse to move from trigger to content\n        // without closing it\n        // TODO make this user-configurable\n        properties.isOffcanvas ? 300 : 50,\n      );\n    }\n  };\n\n  // ----------\n\n  const closeIfEscape = (event: Event) => {\n    if ((event as KeyboardEvent).key === \"Escape\") {\n      widget.close(); // no need to await\n    }\n  };\n\n  // ----------\n\n  const closeIfClickOutside = (event: Event) => {\n    const target = MH.targetOf(event);\n    if (\n      target === doc ||\n      (MH.isElement(target) &&\n        !content.contains(target) && // outside content\n        !isTrigger(target)) // handled by pointer watcher\n    ) {\n      widget.close();\n    }\n  };\n\n  // ----------\n\n  const maybeSetupAutoCloseListeners = (\n    trigger: Element | null,\n    remove: boolean,\n  ) => {\n    if (usesAutoClose(trigger)) {\n      const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n      addOrRemove(doc, \"keyup\", closeIfEscape);\n\n      // Add a short delay so that we don't catch the bubbling of the click event\n      // that opened the widget.\n      MH.setTimer(() => addOrRemove(doc, MC.S_CLICK, closeIfClickOutside), 100);\n\n      if (trigger && usesHover(trigger)) {\n        addOrRemove(trigger, MC.S_POINTERLEAVE, pointerLeft);\n      }\n    }\n  };\n\n  // ----------\n\n  const setupOrCleanup = (remove: boolean) => {\n    const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      // Always setup click listeners\n      addOrRemove(trigger, MC.S_CLICK, toggleTrigger);\n\n      if (triggerConfig[MC.S_HOVER]) {\n        addOrRemove(trigger, MC.S_POINTERENTER, pointerEntered);\n      }\n    }\n  };\n\n  // ----------\n\n  setupOrCleanup(false);\n\n  widget.onOpen(() => {\n    maybeSetupAutoCloseListeners(activeTrigger, false); // setup listeners if relevant\n  });\n\n  widget.onClose(() => {\n    hoverTimeOpened = 0;\n    isPointerOver = false;\n\n    removeEventListenerFrom(root, MC.S_POINTERENTER, setIsPointerOver);\n    removeEventListenerFrom(root, MC.S_POINTERLEAVE, pointerLeft);\n\n    maybeSetupAutoCloseListeners(activeTrigger, true); // remove listeners if any\n    activeTrigger = null;\n  });\n\n  widget.onDestroy(() => {\n    setupOrCleanup(true); // remove\n  });\n};\n\n// COLLAPSIBLE ------------------------------\n\nconst insertCollapsibleIcon = (\n  trigger: Element,\n  triggerConfig: OpenableTriggerConfig,\n  widget: Collapsible,\n  widgetConfig: CollapsibleConfig | undefined,\n) => {\n  const iconPosition = triggerConfig.icon ?? widgetConfig?.icon;\n  const iconClosed =\n    triggerConfig.iconClosed ?? widgetConfig?.iconClosed ?? \"plus\";\n  const iconOpen = triggerConfig.iconOpen ?? widgetConfig?.iconOpen ?? \"minus\";\n\n  if (iconPosition) {\n    addClasses(trigger, PREFIX_ICON_WRAPPER);\n    setData(trigger, PREFIX_ICON_POSITION, iconPosition);\n\n    const icon = MH.createElement(\"span\");\n    setDataNow(icon, PREFIX_TRIGGER_ICON, iconClosed);\n\n    for (let l = 0; l < 2; l++) {\n      const line = MH.createElement(\"span\");\n      addClassesNow(line, PREFIX_LINE);\n      moveElementNow(line, { to: icon });\n    }\n\n    moveElement(icon, { to: trigger, ignoreMove: true });\n\n    widget.onOpen(() => {\n      if (getBoolData(trigger, PREFIX_IS_OPEN)) {\n        setData(icon, PREFIX_TRIGGER_ICON, iconOpen);\n      }\n    });\n\n    widget.onClose(() => {\n      setData(icon, PREFIX_TRIGGER_ICON, iconClosed);\n    });\n  }\n};\n\n// POPUP ------------------------------\n\nconst fetchPopupPlacement = async (\n  contentSize: SizeData,\n  containerView: ViewData,\n) => {\n  const containerPosition = containerView.relative;\n  const containerTop = containerPosition[MC.S_TOP];\n  const containerBottom = containerPosition[MC.S_BOTTOM];\n  const containerLeft = containerPosition[MC.S_LEFT];\n  const containerRight = containerPosition[MC.S_RIGHT];\n  const containerHMiddle = containerPosition.hMiddle;\n  const containerVMiddle = containerPosition.vMiddle;\n  const vpSize = await fetchViewportSize();\n  const popupWidth = contentSize.border[MC.S_WIDTH] / vpSize[MC.S_WIDTH];\n  const popupHeight = contentSize.border[MC.S_HEIGHT] / vpSize[MC.S_HEIGHT];\n\n  // - Find the maximum of these quantities:\n  //   - containerTop - popupHeight:\n  //     the space on top if placed on top-(left|right|)\n  //   - 1 - (containerBottom + popupHeight):\n  //     the space on bottom be if placed on bottom-(left|right|)\n  //   - containerLeft - popupWidth:\n  //     the space on left if placed on left-(top|bottom|)\n  //   - 1 - (containerRight + popupWidth):\n  //     the space on right if placed on right-(top|bottom|)\n  //\n  // This determines the main placement: top|bottom|left|right\n\n  // Then to determine secondary alignment:\n  // - For top/bottom placement, determine horizontal alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerLeft + popupWidth):\n  //       the space on right if left-aligned\n  //     - containerRight - popupWidth:\n  //       the space on left if right-aligned\n  //     - min(\n  //           containerHMiddle - popupWidth / 2,\n  //           1 - (containerHMiddle + popupWidth / 2),\n  //       ):\n  //       the minimum of the space on either left or right if center-aligned\n  //\n  // - For left/right placement, determine vertical alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerTop + popupHeight):\n  //       the space on bottom if top-aligned\n  //     - containerBottom - popupHeight:\n  //       the space on top if bottom-aligned\n  //     - min(\n  //           containerVMiddle - popupHeight / 2,\n  //           1 - (containerVMiddle + popupHeight / 2),\n  //       ):\n  //       the minimum of the space on either top or bottom if center-aligned\n\n  const placementVars = {\n    top: containerTop - popupHeight,\n    bottom: 1 - (containerBottom + popupHeight),\n    left: containerLeft - popupWidth,\n    right: 1 - (containerRight + popupWidth),\n  };\n\n  const placement = keyWithMaxVal(placementVars);\n  if (placement === undefined) {\n    // container must be out-view and so left/right are NaN\n    return;\n  }\n  let finalPlacement = placement;\n\n  let alignmentVars;\n  switch (placement) {\n    case MC.S_TOP:\n    case MC.S_BOTTOM:\n      alignmentVars = {\n        left: 1 - (containerLeft + popupWidth),\n        right: containerRight - popupWidth,\n        middle: MH.min(\n          containerHMiddle - popupWidth / 2,\n          1 - (containerHMiddle + popupWidth / 2),\n        ),\n      };\n      break;\n\n    case MC.S_LEFT:\n    case MC.S_RIGHT:\n      alignmentVars = {\n        top: 1 - (containerTop + popupHeight),\n        bottom: containerBottom - popupHeight,\n        middle: MH.min(\n          containerVMiddle - popupHeight / 2,\n          1 - (containerVMiddle + popupHeight / 2),\n        ),\n      };\n      break;\n\n    default:\n      return;\n  }\n\n  const alignment = keyWithMaxVal(alignmentVars);\n  if (alignment !== \"middle\") {\n    finalPlacement += \"-\" + alignment;\n  }\n\n  return finalPlacement;\n};\n"],"mappings":"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","ignoreList":[]}