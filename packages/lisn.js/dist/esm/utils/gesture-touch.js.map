{"version":3,"file":"gesture-touch.js","names":["MC","MH","getVectorDirection","maxAbs","havingMaxAbs","distanceBetween","areAntiParallel","newXMap","getTouchGestureFragment","events","options","_options$dragHoldTime","_options$dragNumFinge","isIterableObject","moves","getTouchDiff","deltaThreshold","numMoves","lengthOf","holdTime","getHoldTime","canBeDrag","dragHoldTime","dragNumFingers","angleDiffThreshold","deltaX","apply","_toConsumableArray","map","m","deltaY","deltaZ","filter","d","isSignificant","direction","S_NONE","intent","S_UNKNOWN","vectorA","vectorB","startDistance","startX","startY","endDistance","endX","endY","S_IN","S_OUT","S_ZOOM","deltaSign","reverseScroll","isFirst","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","S_DRAG","S_SCROLL","thisDirection","S_AMBIGUOUS","err","e","f","lastTouchEvent","isTouchEvent","slice","touches","device","S_TOUCH","arguments","length","undefined","groupedTouches","_iterator2","_step2","event","type","S_TOUCHCANCEL","_iterator4","_step4","touch","sGet","identifier","push","_iterator3","values","_step3","touchList","nTouches","firstTouch","lastTouch","clientX","clientY","firstStart","findIndex","S_TOUCHSTART","firstMove","S_TOUCHMOVE","timeStamp"],"sources":["../../../src/ts/utils/gesture-touch.ts"],"sourcesContent":["/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureIntent, Vector } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport {\n  maxAbs,\n  havingMaxAbs,\n  distanceBetween,\n  areAntiParallel,\n} from \"@lisn/utils/math\";\nimport { GestureFragment } from \"@lisn/utils/gesture\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Gestures\n */\nexport type TouchDiff = {\n  startX: number;\n  startY: number;\n\n  endX: number;\n  endY: number;\n\n  deltaX: number;\n  deltaY: number;\n\n  isSignificant: boolean;\n};\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"touchmove\" events\n * will be considered.\n *\n * If there are less than 2 such events in the given list of events, returns `false`.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that by default swipe actions follow the natural direction: swipe up\n * with scroll intent results in direction down and swipe down results in\n * direction up. Drag intent always follows the direction of the gesture.\n *\n * For zoom intents, which necessarily involves exactly two fingers `deltaZ`\n * is based on the relative change in distance between the fingers.\n *\n * @param {} [options.deltaThreshold]\n *                          A change of x or y coordinate less than this is\n *                          considered insignificant, for the purposes of\n *                          determining:\n *                          1) whether the inferred direction is in one of the\n *                             four cardinal ones, or otherwise ambiguous; and\n *                          2) whether more than two fingers have moved and\n *                             therefore whether the direction could be zoom or\n *                             not\n * @param {} [options.angleDiffThreshold] See {@link getVectorDirection}\n * @param {} [options.reverseScroll]\n *                          If set to `true`, will disable natural scroll\n *                          direction.\n * @param {} [options.dragHoldTime]\n *                          If the user presses and holds for at least the\n *                          given amount of milliseconds before moving the\n *                          finger(s), gestures other than pinch will be\n *                          treated as a drag instead of scroll as long as the\n *                          number of fingers touching the screen is\n *                          `options.dragNumFingers`. Default is 500ms.\n * @param {} [options.dragNumFingers]\n *                          The number of fingers that could be considered a\n *                          drag intent. Default is 1.\n *\n * @return {} `false` if there are less than 2 \"touchmove\" events in the list,\n * `null` if the gesture is terminated, otherwise a {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getTouchGestureFragment = (\n  events: Event[],\n  options?: {\n    deltaThreshold?: number;\n    angleDiffThreshold?: number;\n    reverseScroll?: boolean;\n    dragHoldTime?: number;\n    dragNumFingers?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let moves = getTouchDiff(events, options?.deltaThreshold);\n\n  if (!moves) {\n    return null; // terminated\n  }\n\n  let numMoves = MH.lengthOf(moves);\n\n  const holdTime = getHoldTime(events);\n  const canBeDrag =\n    holdTime >= (options?.dragHoldTime ?? 500) &&\n    numMoves === (options?.dragNumFingers ?? 1);\n  const angleDiffThreshold = options?.angleDiffThreshold;\n\n  let deltaX = havingMaxAbs(...moves.map((m) => m.deltaX));\n  let deltaY = havingMaxAbs(...moves.map((m) => m.deltaY));\n  let deltaZ = 1;\n\n  if (numMoves > 2) {\n    // Take only the significant ones\n    moves = MH.filter(moves, (d) => d.isSignificant);\n    numMoves = MH.lengthOf(moves);\n  }\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent = MC.S_UNKNOWN;\n  if (numMoves === 2) {\n    // Check if it's a zoom\n    const vectorA: Vector = [moves[0].deltaX, moves[0].deltaY];\n    const vectorB: Vector = [moves[1].deltaX, moves[1].deltaY];\n\n    // If either finger is approx stationary, or if they move in opposite directions,\n    // treat it as zoom.\n    if (\n      !havingMaxAbs(...vectorA) || // finger A still\n      !havingMaxAbs(...vectorB) || // finger B still\n      areAntiParallel(vectorA, vectorB, angleDiffThreshold)\n    ) {\n      // It's a pinch motion => zoom\n      const startDistance = distanceBetween(\n        [moves[0].startX, moves[0].startY],\n        [moves[1].startX, moves[1].startY],\n      );\n\n      const endDistance = distanceBetween(\n        [moves[0].endX, moves[0].endY],\n        [moves[1].endX, moves[1].endY],\n      );\n\n      direction = startDistance < endDistance ? MC.S_IN : MC.S_OUT;\n      deltaZ = endDistance / startDistance;\n      deltaX = deltaY = 0;\n      intent = MC.S_ZOOM;\n    }\n  }\n\n  const deltaSign = canBeDrag || options?.reverseScroll ? 1 : -1;\n  // If scrolling, swap the deltas for natural scroll direction.\n  // Add +0 to force -0 to be +0 since jest doesn't think they're equal\n  deltaX = deltaSign * deltaX + 0;\n  deltaY = deltaSign * deltaY + 0;\n\n  if (direction === MC.S_NONE) {\n    // Wasn't a zoom. Check if all moves are aligned.\n    let isFirst = true;\n\n    for (const m of moves) {\n      // There's at least one significant move, assume scroll or drag intent.\n      intent = canBeDrag ? MC.S_DRAG : MC.S_SCROLL;\n\n      const thisDirection = getVectorDirection(\n        [deltaSign * m.deltaX, deltaSign * m.deltaY],\n        angleDiffThreshold,\n      );\n\n      if (thisDirection === MC.S_NONE) {\n        continue;\n      }\n\n      if (isFirst) {\n        direction = thisDirection;\n      } else if (direction !== thisDirection) {\n        direction = MC.S_AMBIGUOUS;\n        break;\n      }\n\n      isFirst = false;\n    }\n  }\n\n  if (direction === MC.S_NONE) {\n    const lastTouchEvent = events.filter(MH.isTouchEvent).slice(-1)[0];\n    // If all fingers have lifted off, consider it terminated, otherwise wait\n    // for more events.\n    return MH.lengthOf(lastTouchEvent?.touches) ? false : null;\n  }\n\n  return {\n    device: MC.S_TOUCH,\n    direction,\n    intent,\n    deltaX,\n    deltaY,\n    deltaZ,\n  };\n};\n\n/**\n * Returns a description of the changes in each finger between the first and\n * the last relevant TouchEvent in the list.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that, `deltaX`/`deltaY` are the end X/Y coordinate minus the start X/Y\n * coordinate. For natural scroll direction you should swap their signs.\n *\n * @param {} deltaThreshold If the change of x and y coordinate are both less\n *                          than this, it is marked as not significant.\n *\n * @category Gestures\n */\nexport const getTouchDiff = (\n  events: Event[],\n  deltaThreshold = 0,\n): TouchDiff[] | null => {\n  // Group each touch point of each event by identifier, so that we can get the\n  // start and end coordinate of each finger\n  const groupedTouches = newXMap<number, Touch[]>((): Touch[] => []);\n\n  for (const event of events) {\n    if (!MH.isTouchEvent(event)) {\n      continue;\n    }\n\n    if (event.type === MC.S_TOUCHCANCEL) {\n      return null; // gesture terminated\n    }\n\n    for (const touch of event.touches) {\n      groupedTouches.sGet(touch.identifier).push(touch);\n    }\n  }\n\n  const moves: TouchDiff[] = [];\n\n  for (const touchList of groupedTouches.values()) {\n    const nTouches = MH.lengthOf(touchList);\n    if (nTouches < 2) {\n      // Only one event had that finger in it, so there's no move for it\n      continue;\n    }\n\n    const firstTouch = touchList[0];\n    const lastTouch = touchList[nTouches - 1];\n    const startX = firstTouch.clientX;\n    const startY = firstTouch.clientY;\n\n    const endX = lastTouch.clientX;\n    const endY = lastTouch.clientY;\n\n    const deltaX = endX - startX;\n    const deltaY = endY - startY;\n\n    const isSignificant = maxAbs(deltaX, deltaY) >= deltaThreshold;\n\n    // Consider it a move in one of the 4 cardinal ones\n    moves.push({\n      startX,\n      startY,\n      endX,\n      endY,\n      deltaX,\n      deltaY,\n      isSignificant,\n    });\n  }\n\n  return moves;\n};\n\n// --------------------\n\nconst getHoldTime = (events: Event[]) => {\n  const firstStart = events.findIndex((e) => e.type === MC.S_TOUCHSTART);\n  const firstMove = events.findIndex((e) => e.type === MC.S_TOUCHMOVE);\n  if (firstStart < 0 || firstMove < 1) {\n    return 0;\n  }\n\n  return events[firstMove].timeStamp - events[firstStart].timeStamp;\n};\n"],"mappings":"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","ignoreList":[]}