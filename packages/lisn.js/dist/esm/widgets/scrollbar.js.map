{"version":3,"file":"scrollbar.js","names":["MC","MH","settings","showElement","hideElement","displayElement","undisplayElement","hasClass","addClasses","addClassesNow","removeClasses","removeClassesNow","getData","setData","setBooleanData","setBooleanDataNow","setDataNow","delData","delDataNow","getComputedStyleProp","getComputedStylePropNow","setStyleProp","setNumericStyleJsVars","moveElementNow","moveElement","moveChildrenNow","isAllowedToWrap","wrapChildren","getOrAssignID","waitForMeasureTime","waitForMutateTime","addEventListenerTo","removeEventListenerFrom","preventSelect","logError","logWarn","toArrayIfSingle","supportsSticky","isScrollable","getDefaultScrollingElement","getClientWidthNow","getClientHeightNow","mapScrollable","unmapScrollable","tryGetMainScrollableElement","formatAsString","validateStrList","validateNumber","validateBoolean","validateString","ScrollWatcher","SizeWatcher","Widget","registerWidget","debug","Scrollbar","get","scrollable","mainWidget","getDocElement","getBody","instance","DUMMY_ID","isInstanceOf","enableMain","config","fetchMainScrollableElement","widget","onDestroy","register","WIDGET_NAME","element","isHTMLElement","usageError","configValidator","constructor","_Scrollbar$get","destroyPromise","destroy","id","_defineProperty","props","getScrollableProps","ourScrollable","promiseResolve","then","isDestroyed","init","getScrollable","PREFIXED_NAME","prefixName","PREFIX_ROOT","PREFIX_CONTAINER","PREFIX_CONTENT","PREFIX_BAR","PREFIX_WRAPPER","PREFIX_FILL","PREFIX_SPACER","PREFIX_HANDLE","PREFIX_DRAGGABLE","PREFIX_CLICKABLE","PREFIX_HAS_WRAPPER","PREFIX_ALLOW_COLLAPSE","PREFIX_HAS_V_SCROLL","PREFIX_HAS_SCROLLBAR","PREFIX_HIDE_SCROLL","S_SET_POINTER_CAPTURE","S_RELEASE_POINTER_CAPTURE","S_ARIA_VALUENOW","ARIA_PREFIX","S_SCROLLBAR","className","hideNative","onMobile","positionH","positionV","autoHide","clickScroll","dragScroll","useHandle","containerElement","mainScrollableElement","body","defaultScrollable","isBody","isMainScrollable","root","isBodyInQuirks","allowedToWrap","needsSticky","barParent","hasVScroll","axis","contentWrapper","supported","createElement","_ref","_config$onMobile","_ref2","_config$hideNative","_config$autoHide","_config$clickScroll","_ref3","_config$dragScroll","_ref4","_config$useHandle","logger","Logger","name","logAtCreation","scrollbarOnMobile","scrollbarHideNative","scrollbarPositionH","scrollbarPositionV","autoHideDelay","scrollbarAutoHide","scrollbarClickScroll","scrollbarDragScroll","scrollbarUseHandle","IS_MOBILE","newScrollbar","wrapper","position","barIsHorizontal","S_TOP","S_BOTTOM","scrollbar","PREFIX_ORIENTATION","S_HORIZONTAL","S_VERTICAL","PREFIX_PLACE","setAttr","S_ROLE","S_ARIA_CONTROLS","scrollDomID","fill","handle","to","_bar","_handle","_fill","setProgress","scrollData","tracksH","scrollbarH","scrollbarV","hasBarPrefix","completeFraction","S_SCROLL_LEFT_FRACTION","S_SCROLL_TOP_FRACTION","viewFraction","S_CLIENT_WIDTH","S_SCROLL_WIDTH","S_CLIENT_HEIGHT","S_SCROLL_HEIGHT","debug9","round","viewFr","completeFr","_numDecimal","scrollAxis","updateProgress","target","setBoxMeasureProps","updatePropsOnResize","sizeData","barHeight","border","S_HEIGHT","_units","isDragging","lastOffset","lastTargetFraction","scrollAction","onClickOrDrag","event","preventDefault","handleH","handleV","targetOf","isMouseEvent","eventType","type","isClick","S_POINTERDOWN","S_MOUSEDOWN","isHandleClick","startsDrag","setOrReleasePointerCapture","debug10","isHorizontal","barLength","currScrollOffset","S_SCROLL_LEFT","S_SCROLL_TOP","maxScrollOffset","rect","getBoundingClientRect","offset","clientX","left","clientY","top","deltaOffset","handleLength","parseFloat","S_WIDTH","targetScrollOffset","targetCoordinates","scrollWatcher","scrollTo","weCanInterrupt","_scrollAction","cancel","elScrollTo","onRelease","onClickOrDragH","onClickOrDragV","onReleaseH","onReleaseV","maybeSetNativeHidden","setNativeShown","addWatchers","trackScroll","threshold","sizeWatcher","onResize","removeWatchers","noTrackScroll","offResize","ignoreMove","reuse","S_DEBOUNCE_WINDOW","PREFIX_NO_TOUCH_ACTION","PREFIX_POSITION","S_FIXED","S_STICKY","S_POINTERMOVE","S_POINTERUP","onDisable","onEnable","S_LEFT","S_RIGHT","side","key","padding","prefixCssJsVar","method","isPointerEvent","pointerId"],"sources":["../../../src/ts/widgets/scrollbar.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { Position } from \"@lisn/globals/types\";\n\nimport {\n  showElement,\n  hideElement,\n  displayElement,\n  undisplayElement,\n  hasClass,\n  addClasses,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n  getData,\n  setData,\n  setBooleanData,\n  setBooleanDataNow,\n  setDataNow,\n  delData,\n  delDataNow,\n  getComputedStyleProp,\n  getComputedStylePropNow,\n  setStyleProp,\n  setNumericStyleJsVars,\n} from \"@lisn/utils/css-alter\";\nimport {\n  moveElementNow,\n  moveElement,\n  moveChildrenNow,\n  isAllowedToWrap,\n  wrapChildren,\n  getOrAssignID,\n} from \"@lisn/utils/dom-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n} from \"@lisn/utils/event\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { toArrayIfSingle, supportsSticky } from \"@lisn/utils/misc\";\nimport {\n  isScrollable,\n  getDefaultScrollingElement,\n  getClientWidthNow,\n  getClientHeightNow,\n  mapScrollable,\n  unmapScrollable,\n  tryGetMainScrollableElement,\n  ScrollAction,\n} from \"@lisn/utils/scroll\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateNumber,\n  validateBoolean,\n  validateString,\n} from \"@lisn/utils/validation\";\n\nimport { ScrollWatcher, ScrollData } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * Configures the given element, which must be scrollable, to use a\n * {@link Scrollbar}.\n *\n * The Scrollbar widget is a customizable alternative to the native\n * scrollbars (vertical and horizontal). You can position each of the two\n * scrollbars on any of the four sides of the element, make them automatically\n * hide after certain time of inactivity, style them as a traditional handle\n * scrollbar or a percentage fill progress bar and so on.\n *\n * It is also itself draggable/clickable so it _can_ be used to scroll the\n * element similar to the native scrollbar. The drag/click functionality can be\n * disabled too.\n *\n * **NOTE:** If you have disabled the {@link Widgets.PageLoader | PageLoader}\n * and have left {@link ScrollbarConfig.hideNative} ON, but are seeing the\n * native scrollbars just for a fraction of a second at the beginning of the\n * page load, you may want to manually add `lisn-hide-scroll` class on the\n * scrollable element to make sure the scrollbars are hidden as soon as\n * possible (before the scrollbar widget has time to initialize.\n *\n * **IMPORTANT:** If you are using the Scrollbar on an element other than the\n * main scrollable element, it's highly recommended to enable (it is enabled by\n * default) {@link settings.contentWrappingAllowed}. Otherwise wrap all of its\n * children in a single element with a class `lisn-wrapper`:\n * ```html\n * <div class=\"scrollable\">\n *   <div class=\"lisn-wrapper\">\n *     <!-- CONTENT -->\n *   </div>\n * </div>\n * ```\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Scrollbar}\n * widget on a given element. Use {@link Scrollbar.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the element:\n * - `data-lisn-has-scrollbar-top`: `\"true\"` or `\"false\"`\n * - `data-lisn-has-scrollbar-bottom`: `\"true\"` or `\"false\"`\n * - `data-lisn-has-scrollbar-left`: `\"true\"` or `\"false\"`\n * - `data-lisn-has-scrollbar-right`: `\"true\"` or `\"false\"`\n *\n * The following dynamic attributes are set on each progressbar element:\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n * - `data-lisn-place`: `\"top\"`, `\"bottom\"`, `\"left\"` or `\"right\"`\n * - `data-lisn-draggable`: `\"true\"` or `\"false\"`\n * - `data-lisn-clickable`: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see {@link settings.autoWidgets}), the\n * following CSS classes or data attributes are recognized:\n * - `lisn-scrollbar` class or `data-lisn-scrollbar` attribute set on the\n *   scrollable element that you want to enable custom scrollbars for\n *\n * See below examples for what values you can use set for the data attribute\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This will create custom scrollbars for\n * {@link settings.mainScrollableElementSelector | the main scrolling element}.\n *\n * This will work even if {@link settings.autoWidgets}) is false\n *\n * ```html\n * <!-- LISN should be loaded beforehand -->\n * <script>\n *   // You can also just customise global default settings:\n *   // LISN.settings.scrollbarPositionV = \"top\";\n *   // LISN.settings.scrollbarAutoHide = 3000;\n *   // LISN.settings.scrollbarUseHandle = true;\n *\n *   LISN.widgets.Scrollbar.enableMain({\n *     position: \"top\",\n *     autoHide: 3000,\n *     useHandle: true\n *   });\n * </script>\n * ```\n *\n * @example\n * This will create custom scrollbars for a custom scrolling element (i.e. one\n * with overflow \"auto\" or \"scroll\").\n *\n * ```html\n * <div class=\"scrolling lisn-scrollbar\">\n *   <!-- content here... -->\n * </div>\n * ```\n *\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <div\n *   class=\"scrolling\"\n *   data-lisn-scrollbar=\"hide-native=false\n *                        | positionH=top\n *                        | positionV=left\n *                        | auto-hide=2000\n *                        | click-scroll=false\n *                        | drag-scroll=false\n *                        | use-handle=false\n *                        \">\n *   <!-- content here... -->\n * </div>\n * ```\n */\nexport class Scrollbar extends Widget {\n  /**\n   * Returns the actual scrollable element us which, unless the scrollable you\n   * passed to the constructor is the\n   * {@link settings.mainScrollableElementSelector | the main scrolling element}\n   * or unless {@link settings.contentWrappingAllowed} is false,\n   * will be a new element created by us that is a descendant of the original\n   * element you passed.\n   */\n  readonly getScrollable: () => Element;\n\n  /**\n   * If element is omitted, returns the instance created by {@link enableMain}\n   * if any.\n   */\n  static get(scrollable?: Element): Scrollbar | null {\n    if (!scrollable) {\n      return mainWidget;\n    }\n\n    if (scrollable === MH.getDocElement()) {\n      scrollable = MH.getBody();\n    }\n\n    const instance = super.get(scrollable, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Scrollbar)) {\n      return instance;\n    }\n    return null;\n  }\n\n  /**\n   * Enables scrollbars on the\n   * {@link settings.mainScrollableElementSelector | the main scrolling element}.\n   *\n   * **NOTE:** It returns a Promise to a widget because it will wait for the\n   * main scrollable element to be present in the DOM if not already.\n   */\n  static async enableMain(config?: ScrollbarConfig) {\n    const scrollable = await ScrollWatcher.fetchMainScrollableElement();\n    const widget = new Scrollbar(scrollable, config);\n    widget.onDestroy(() => {\n      if (mainWidget === widget) {\n        mainWidget = null;\n      }\n    });\n\n    mainWidget = widget;\n    return widget;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (MH.isHTMLElement(element)) {\n          if (!Scrollbar.get(element)) {\n            return new Scrollbar(element, config);\n          }\n        } else {\n          logError(\n            MH.usageError(\"Only HTMLElement is supported for Scrollbar widget\"),\n          );\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * Note that passing `document.body` is considered equivalent to\n   * `document.documentElement`.\n   */\n  constructor(scrollable: HTMLElement, config?: ScrollbarConfig) {\n    if (scrollable === MH.getDocElement()) {\n      scrollable = MH.getBody();\n    }\n\n    const destroyPromise = Scrollbar.get(scrollable)?.destroy();\n    super(scrollable, { id: DUMMY_ID });\n\n    const props = getScrollableProps(scrollable);\n    const ourScrollable = props.scrollable;\n\n    (destroyPromise || MH.promiseResolve()).then(async () => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, scrollable, props, config);\n    });\n\n    this.getScrollable = () => ourScrollable;\n  }\n}\n\n/**\n * @interface\n */\nexport type ScrollbarConfig = {\n  /**\n   * The DOM ID to set on the\n   * {@link Scrollbar.getScrollable | scrollable element}. Will result in the\n   * scrollable element getting this ID. This is useful if the element is a\n   * wrapper created by us and you want it to be assigned an ID.\n   *\n   * **IMPORTANT:** If the scrollable is the\n   * {@link settings.mainScrollableElementSelector | the main scrolling element}\n   * or if you've disabled {@link settings.contentWrappingAllowed}, then the\n   * scrollable element provided as the widget element will _not_ have its\n   * content wrapped and will remain the actual scrollable. In this case, its\n   * ID will be set to this, so if it already has an ID, it will be overridden\n   * with this value.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * A class name or a list of class names to set on the\n   * {@link Scrollbar.getScrollable | scrollable element}. Will result in the\n   * scrollable element getting these classes. This is useful if the element is\n   * a wrapper created by us and you want it to be assigned classes.\n   *\n   * See explanation for {@link id}.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Hide the native scroll bar.\n   *\n   * Note that the LISN scrollbar is itself draggable/clickable so it\n   * _can_ be used to scroll the element similar to the native scrollbar.\n   *\n   * @defaultValue {@link settings.scrollbarHideNative}\n   */\n  hideNative?: boolean;\n\n  /**\n   * Whether to enable also on mobile and tablet devices. Detection is based on\n   * user agent.\n   *\n   * @defaultValue {@link settings.scrollbarOnMobile}\n   */\n  onMobile?: boolean;\n\n  /**\n   * Where to place the scrollbar that tracks the horizontal scroll.\n   *\n   * It does not need to be a horizontal position; it can for example be \"left\"\n   * or \"right\".\n   *\n   * @defaultValue {@link settings.scrollbarPositionH}\n   */\n  positionH?: Position;\n\n  /**\n   * Where to place the scrollbar that tracks the vertical scroll.\n   *\n   * It does not need to be a vertical position; it can for example be \"top\"\n   * or \"bottom\".\n   *\n   * @defaultValue {@link settings.scrollbarPositionV}\n   */\n  positionV?: Position;\n\n  /**\n   * Auto-hide the scrollbar when there's no scrolling happening for the given\n   * number of milliseconds.\n   *\n   * Set to 0 or a negative value to disable hiding.\n   *\n   * @defaultValue {@link settings.scrollbarAutoHide}\n   */\n  autoHide?: number;\n\n  /**\n   * Whether to scroll the element when a user clicks anywhere on the\n   * scrollbar.\n   *\n   * @defaultValue {@link settings.scrollbarClickScroll}\n   */\n  clickScroll?: boolean;\n\n  /**\n   * Whether to scroll the element when a user drags the handle (if\n   * {@link useHandle}) or drags along anywhere on the scrollbar (if _not_\n   * {@link useHandle}).\n   *\n   * @defaultValue {@link settings.scrollbarDragScroll}\n   */\n  dragScroll?: boolean;\n\n  /**\n   * Whether to use a traditional fixed-length handle (like the native\n   * scrollbar) to indicate the position or the default style of a fill (that\n   * starts at the beginning and ends at the scroll fraction).\n   *\n   * @defaultValue {@link settings.scrollbarUseHandle}\n   */\n  useHandle?: boolean;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"scrollbar\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\n// Only one Scrollbar widget per element is allowed, but Widget\n// requires a non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_CONTAINER = `${PREFIXED_NAME}__container`;\nconst PREFIX_CONTENT = `${PREFIXED_NAME}__content`;\nconst PREFIX_BAR = `${PREFIXED_NAME}__bar`;\nconst PREFIX_WRAPPER = `${PREFIXED_NAME}__wrapper`;\nconst PREFIX_FILL = `${PREFIXED_NAME}__fill`;\nconst PREFIX_SPACER = `${PREFIXED_NAME}__spacer`;\nconst PREFIX_HANDLE = `${PREFIXED_NAME}__handle`;\nconst PREFIX_DRAGGABLE = MH.prefixName(\"draggable\");\nconst PREFIX_CLICKABLE = MH.prefixName(\"clickable\");\nconst PREFIX_HAS_WRAPPER = MH.prefixName(\"has-wrapper\");\nconst PREFIX_ALLOW_COLLAPSE = MH.prefixName(\"allow-collapse\");\nconst PREFIX_HAS_V_SCROLL = MH.prefixName(\"has-v-scroll\");\nconst PREFIX_HAS_SCROLLBAR = MH.prefixName(\"has-scrollbar\");\nconst PREFIX_HIDE_SCROLL = MH.prefixName(\"hide-scroll\");\n\nconst S_SET_POINTER_CAPTURE = \"setPointerCapture\";\nconst S_RELEASE_POINTER_CAPTURE = \"releasePointerCapture\";\nconst S_ARIA_VALUENOW = MC.ARIA_PREFIX + \"valuenow\";\nconst S_SCROLLBAR = \"scrollbar\";\n\nlet mainWidget: Scrollbar | null = null;\n\nconst configValidator: WidgetConfigValidatorObject<ScrollbarConfig> = {\n  id: validateString,\n  className: validateStrList,\n  hideNative: validateBoolean,\n  onMobile: validateBoolean,\n  positionH: validateString,\n  positionV: validateString,\n  autoHide: validateNumber,\n  clickScroll: validateBoolean,\n  dragScroll: validateBoolean,\n  useHandle: validateBoolean,\n};\n\nconst getScrollableProps = (containerElement: HTMLElement) => {\n  // If main scrollable element doesn't exist yet, then the containerElement\n  // passed can't be it anyway, so no need to use fetchMainScrollableElement.\n  const mainScrollableElement = tryGetMainScrollableElement();\n\n  const body = MH.getBody();\n  const defaultScrollable = getDefaultScrollingElement();\n\n  const isBody = containerElement === body;\n  const isMainScrollable =\n    (isBody ? defaultScrollable : containerElement) === mainScrollableElement;\n\n  const root: HTMLElement = isMainScrollable\n    ? mainScrollableElement\n    : isBody\n      ? defaultScrollable\n      : containerElement;\n\n  // check if we're using body in quirks mode\n  const isBodyInQuirks = root === body && defaultScrollable === body;\n\n  const allowedToWrap = isAllowedToWrap(containerElement);\n  const needsSticky = !isMainScrollable && !allowedToWrap;\n  const barParent = isMainScrollable ? body : containerElement;\n  const hasVScroll = isScrollable(root, { axis: \"y\" });\n\n  let contentWrapper: HTMLElement | null = null;\n  let scrollable = root;\n  let supported = true;\n  if (!isMainScrollable && !isBody && allowedToWrap) {\n    if (allowedToWrap) {\n      contentWrapper = MH.createElement(\"div\");\n      scrollable = contentWrapper;\n    } else if (supportsSticky()) {\n      logWarn(\n        \"Scrollbar on elements other than the main scrollable \" +\n          \"when settings.contentWrappingAllowed is false relies on \" +\n          \"position: sticky, is experimental and may not work properly\",\n      );\n    } else {\n      logError(\n        \"Scrollbar on elements other than the main scrollable \" +\n          \"when settings.contentWrappingAllowed is false relies on \" +\n          \"position: sticky, but this browser does not support sticky.\",\n      );\n      supported = false;\n    }\n  }\n\n  return {\n    supported,\n    isMainScrollable,\n    isBody,\n    isBodyInQuirks,\n    root,\n    scrollable,\n    barParent,\n    contentWrapper,\n    needsSticky,\n    hasVScroll,\n  };\n};\n\nconst init = (\n  widget: Scrollbar,\n  containerElement: HTMLElement,\n  props: ReturnType<typeof getScrollableProps>,\n  config: ScrollbarConfig | undefined,\n) => {\n  const {\n    supported,\n    isMainScrollable,\n    isBody,\n    isBodyInQuirks,\n    root,\n    scrollable,\n    barParent,\n    contentWrapper,\n    needsSticky,\n    hasVScroll,\n  } = props;\n\n  const logger = debug\n    ? new debug.Logger({\n        name: `Scrollbar-${formatAsString(root)}`,\n        logAtCreation: { props, config },\n      })\n    : null;\n\n  // config\n  const onMobile = config?.onMobile ?? settings.scrollbarOnMobile ?? false;\n  const hideNative =\n    config?.hideNative ?? settings.scrollbarHideNative ?? false;\n  const positionH = config?.positionH || settings.scrollbarPositionH;\n  const positionV = config?.positionV || settings.scrollbarPositionV;\n  const autoHideDelay = config?.autoHide ?? settings.scrollbarAutoHide;\n  const clickScroll = config?.clickScroll ?? settings.scrollbarClickScroll;\n  const dragScroll =\n    config?.dragScroll ?? settings.scrollbarDragScroll ?? false;\n  const useHandle = config?.useHandle ?? settings.scrollbarUseHandle ?? false;\n\n  if (MC.IS_MOBILE && !onMobile) {\n    return;\n  }\n\n  mapScrollable(root, scrollable);\n\n  // ----------\n\n  const newScrollbar = (wrapper: Element, position: string) => {\n    const barIsHorizontal = position === MC.S_TOP || position === MC.S_BOTTOM;\n\n    const scrollbar = MH.createElement(\"div\");\n    addClassesNow(scrollbar, PREFIX_BAR);\n    setDataNow(\n      scrollbar,\n      MC.PREFIX_ORIENTATION,\n      barIsHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL,\n    );\n    setDataNow(scrollbar, MC.PREFIX_PLACE, position);\n\n    if (clickScroll || dragScroll) {\n      MH.setAttr(scrollbar, MC.S_ROLE, S_SCROLLBAR);\n      MH.setAttr(scrollbar, MC.S_ARIA_CONTROLS, scrollDomID);\n    }\n\n    const fill = MH.createElement(\"div\");\n    addClassesNow(fill, useHandle ? PREFIX_SPACER : PREFIX_FILL);\n\n    let handle: Element | null = null;\n    if (useHandle) {\n      handle = MH.createElement(\"div\");\n      addClassesNow(handle, PREFIX_HANDLE);\n      setBooleanDataNow(handle, PREFIX_DRAGGABLE, dragScroll);\n    }\n\n    setBooleanDataNow(scrollbar, PREFIX_DRAGGABLE, dragScroll && !useHandle);\n    setBooleanDataNow(scrollbar, PREFIX_CLICKABLE, clickScroll);\n\n    moveElementNow(fill, { to: scrollbar });\n\n    if (handle) {\n      moveElementNow(handle, { to: scrollbar });\n    }\n    moveElementNow(scrollbar, { to: wrapper });\n\n    return {\n      _bar: scrollbar,\n      _handle: handle,\n      _fill: fill,\n    };\n  };\n\n  // ----------\n\n  const setProgress = async (scrollData: ScrollData, tracksH: boolean) => {\n    const scrollbar = tracksH ? scrollbarH : scrollbarV;\n    const hasBarPrefix = `${PREFIX_HAS_SCROLLBAR}-${tracksH ? positionH : positionV}`;\n\n    const completeFraction = tracksH\n      ? scrollData[MC.S_SCROLL_LEFT_FRACTION]\n      : scrollData[MC.S_SCROLL_TOP_FRACTION];\n\n    const viewFraction = tracksH\n      ? scrollData[MC.S_CLIENT_WIDTH] / scrollData[MC.S_SCROLL_WIDTH]\n      : scrollData[MC.S_CLIENT_HEIGHT] / scrollData[MC.S_SCROLL_HEIGHT];\n\n    logger?.debug9(\"Updating progress\", {\n      tracksH,\n      completeFraction,\n      viewFraction,\n    });\n\n    MH.setAttr(\n      scrollbar,\n      S_ARIA_VALUENOW,\n      MH.round(completeFraction * 100) + \"\",\n    );\n\n    setNumericStyleJsVars(\n      scrollbar,\n      { viewFr: viewFraction, completeFr: completeFraction },\n      { _numDecimal: 4 },\n    );\n\n    const scrollAxis = tracksH ? \"x\" : \"y\";\n    if (isScrollable(scrollable, { axis: scrollAxis }) && viewFraction < 1) {\n      setBooleanData(containerElement, hasBarPrefix);\n      displayElement(scrollbar);\n    } else {\n      delData(containerElement, hasBarPrefix);\n      undisplayElement(scrollbar);\n    }\n  };\n\n  // ----------\n\n  const updateProgress = (target: Element, scrollData: ScrollData) => {\n    setProgress(scrollData, true);\n    setProgress(scrollData, false);\n\n    if (!isMainScrollable && !isBody) {\n      setBoxMeasureProps(containerElement);\n    }\n\n    if (autoHideDelay > 0) {\n      showElement(wrapper).then(() => hideElement(wrapper, autoHideDelay));\n    }\n  };\n\n  const updatePropsOnResize = (target: Element, sizeData: SizeData) => {\n    setBoxMeasureProps(containerElement);\n    setNumericStyleJsVars(\n      containerElement,\n      { barHeight: sizeData.border[MC.S_HEIGHT] },\n      { _units: \"px\", _numDecimal: 2 },\n    );\n  };\n\n  // ----------\n\n  let isDragging = false;\n  let lastOffset = 0;\n  let lastTargetFraction = 0;\n  let scrollAction: ScrollAction | null;\n\n  const onClickOrDrag = async (event: Event, tracksH: boolean) => {\n    MH.preventDefault(event);\n    const scrollbar = tracksH ? scrollbarH : scrollbarV;\n    const handle = tracksH ? handleH : handleV;\n\n    const target = MH.targetOf(event);\n    if (!MH.isMouseEvent(event) || !MH.isHTMLElement(target)) {\n      return;\n    }\n\n    const eventType = event.type;\n\n    const isClick =\n      eventType === MC.S_POINTERDOWN || eventType === MC.S_MOUSEDOWN;\n    const isHandleClick =\n      isClick && useHandle && hasClass(target, PREFIX_HANDLE);\n    const startsDrag = isClick && dragScroll && (isHandleClick || !useHandle);\n\n    if (startsDrag) {\n      isDragging = true;\n      setOrReleasePointerCapture(event, scrollbar, S_SET_POINTER_CAPTURE);\n    }\n\n    logger?.debug10(\"Click or drag\", {\n      eventType,\n      isClick,\n      isHandleClick,\n      isDragging,\n      startsDrag,\n    });\n\n    if ((!isClick && !isDragging) || (isClick && !startsDrag && !clickScroll)) {\n      // - Either moving pointer when no drag scroll has been started OR\n      // - Clicking when no drag is allowed in the context of the click and no\n      //   click scroll is allowed either\n      return;\n    }\n\n    await waitForMeasureTime();\n    const barIsHorizontal = isHorizontal(scrollbar);\n\n    const barLength = barIsHorizontal\n      ? scrollbar[MC.S_CLIENT_WIDTH]\n      : scrollbar[MC.S_CLIENT_HEIGHT];\n\n    const currScrollOffset = tracksH\n      ? scrollable[MC.S_SCROLL_LEFT]\n      : scrollable[MC.S_SCROLL_TOP];\n\n    const maxScrollOffset = tracksH\n      ? scrollable[MC.S_SCROLL_WIDTH] - getClientWidthNow(scrollable)\n      : scrollable[MC.S_SCROLL_HEIGHT] - getClientHeightNow(scrollable);\n\n    // Get click offset relative to the scrollbar regardless of what the\n    // event target is and what transforms is has applied.\n    const rect = MH.getBoundingClientRect(scrollbar);\n    const offset = barIsHorizontal\n      ? event.clientX - rect.left\n      : event.clientY - rect.top;\n\n    logger?.debug10(\"Pointer offset\", offset);\n\n    if (offset === lastOffset) {\n      return;\n    }\n\n    const deltaOffset = isClick ? offset : offset - lastOffset;\n    lastOffset = offset;\n\n    if (!isClick && useHandle) {\n      // Dragging the handle\n      const handleLength = handle\n        ? MH.parseFloat(\n            getComputedStylePropNow(\n              handle,\n              barIsHorizontal ? MC.S_WIDTH : MC.S_HEIGHT,\n            ),\n          )\n        : 0;\n\n      lastTargetFraction =\n        lastTargetFraction + deltaOffset / (barLength - (handleLength || 0));\n    } else if (isHandleClick) {\n      // Starting a handle drag\n      lastTargetFraction = currScrollOffset / maxScrollOffset;\n    } else {\n      // Clicking or dragging on the bar -> scroll to the offset under the pointer\n      lastTargetFraction = offset / barLength;\n    }\n\n    if (isHandleClick || (isClick && !clickScroll)) {\n      return;\n    }\n\n    const targetScrollOffset = lastTargetFraction * maxScrollOffset;\n    const targetCoordinates = tracksH\n      ? { left: targetScrollOffset }\n      : { top: targetScrollOffset };\n\n    logger?.debug10(\"Scroll target offset\", {\n      lastTargetFraction,\n      targetCoordinates,\n    });\n\n    if (isClick) {\n      // smooth scroll\n      scrollAction = await scrollWatcher.scrollTo(targetCoordinates, {\n        scrollable,\n        weCanInterrupt: true,\n      });\n    } else {\n      scrollAction?.cancel();\n      scrollAction = null;\n      MH.elScrollTo(scrollable, targetCoordinates);\n    }\n  };\n\n  // ----------\n\n  const onRelease = (event: Event, tracksH: boolean) => {\n    const scrollbar = tracksH ? scrollbarH : scrollbarV;\n    setOrReleasePointerCapture(event, scrollbar, S_RELEASE_POINTER_CAPTURE);\n\n    isDragging = false;\n    scrollAction = null;\n  };\n\n  const onClickOrDragH = (event: Event) => onClickOrDrag(event, true);\n  const onClickOrDragV = (event: Event) => onClickOrDrag(event, false);\n  const onReleaseH = (event: Event) => onRelease(event, true);\n  const onReleaseV = (event: Event) => onRelease(event, false);\n\n  // ----------\n\n  const maybeSetNativeHidden = () => {\n    if (hideNative) {\n      addClasses(scrollable, PREFIX_HIDE_SCROLL);\n      if (isBodyInQuirks) {\n        addClasses(MH.getDocElement(), PREFIX_HIDE_SCROLL);\n      }\n    }\n  };\n\n  const setNativeShown = () => {\n    removeClasses(scrollable, PREFIX_HIDE_SCROLL);\n    if (isBodyInQuirks) {\n      removeClasses(MH.getDocElement(), PREFIX_HIDE_SCROLL);\n    }\n  };\n\n  // ----------\n\n  const addWatchers = () => {\n    // Track scroll in any direction as well as changes in border or content size\n    // of the element and its contents.\n    scrollWatcher.trackScroll(updateProgress, {\n      threshold: 0,\n      scrollable,\n    });\n\n    // Track changes in content or border size of the container element which\n    // would also detect changes in its padding.\n    sizeWatcher.onResize(updatePropsOnResize, {\n      target: containerElement,\n      threshold: 0,\n    });\n  };\n\n  const removeWatchers = () => {\n    scrollWatcher.noTrackScroll(updateProgress, scrollable);\n    sizeWatcher.offResize(updatePropsOnResize, containerElement);\n  };\n\n  // SETUP ------------------------------\n\n  if (!supported) {\n    setNativeShown();\n    return;\n  }\n\n  if (!isMainScrollable && !isBody) {\n    addClasses(containerElement, PREFIX_CONTAINER);\n  }\n\n  setBooleanData(containerElement, PREFIX_ALLOW_COLLAPSE, !MC.IS_MOBILE);\n\n  // Wrap children if needed\n  if (contentWrapper) {\n    wrapChildren(containerElement, {\n      wrapper: contentWrapper,\n      ignoreMove: true,\n    }); // no need to await here\n    addClasses(contentWrapper, PREFIX_CONTENT);\n\n    setBooleanData(containerElement, PREFIX_HAS_WRAPPER);\n    setBooleanData(containerElement, PREFIX_HAS_V_SCROLL, hasVScroll);\n  }\n\n  maybeSetNativeHidden();\n\n  if (config?.id) {\n    scrollable.id = config.id;\n  }\n\n  if (config?.className) {\n    addClasses(scrollable, ...toArrayIfSingle(config.className));\n  }\n\n  const scrollDomID = // for ARIA\n    clickScroll || dragScroll ? getOrAssignID(scrollable, S_SCROLLBAR) : \"\";\n  const scrollWatcher = ScrollWatcher.reuse({ [MC.S_DEBOUNCE_WINDOW]: 0 });\n  const sizeWatcher = SizeWatcher.reuse({ [MC.S_DEBOUNCE_WINDOW]: 0 });\n\n  addClasses(barParent, PREFIX_ROOT);\n\n  const wrapper = MH.createElement(\"div\");\n  preventSelect(wrapper);\n  addClasses(wrapper, MC.PREFIX_NO_TOUCH_ACTION);\n  addClasses(wrapper, PREFIX_WRAPPER);\n\n  if (isBody || isMainScrollable) {\n    setData(wrapper, MC.PREFIX_POSITION, MC.S_FIXED);\n  } else if (needsSticky) {\n    setData(wrapper, MC.PREFIX_POSITION, MC.S_STICKY);\n  }\n\n  const { _bar: scrollbarH, _handle: handleH } = newScrollbar(\n    wrapper,\n    positionH,\n  );\n  const { _bar: scrollbarV, _handle: handleV } = newScrollbar(\n    wrapper,\n    positionV,\n  );\n\n  moveElement(wrapper, {\n    to: barParent,\n    position: \"prepend\",\n  });\n\n  addWatchers();\n\n  // Track clicking and dragging on the two scrollbars\n  if (dragScroll) {\n    addEventListenerTo(scrollbarH, MC.S_POINTERMOVE, onClickOrDragH);\n    addEventListenerTo(scrollbarV, MC.S_POINTERMOVE, onClickOrDragV);\n\n    addEventListenerTo(scrollbarH, MC.S_POINTERUP, onReleaseH);\n    addEventListenerTo(scrollbarV, MC.S_POINTERUP, onReleaseV);\n  }\n\n  if (dragScroll || clickScroll) {\n    addEventListenerTo(scrollbarH, MC.S_POINTERDOWN, onClickOrDragH);\n    addEventListenerTo(scrollbarV, MC.S_POINTERDOWN, onClickOrDragV);\n  }\n\n  widget.onDisable(() => {\n    removeWatchers();\n    undisplayElement(scrollbarH);\n    undisplayElement(scrollbarV);\n    setNativeShown();\n  });\n\n  widget.onEnable(() => {\n    addWatchers();\n    displayElement(scrollbarH);\n    displayElement(scrollbarV);\n    maybeSetNativeHidden();\n  });\n\n  widget.onDestroy(async () => {\n    unmapScrollable(root);\n\n    await waitForMutateTime();\n    if (contentWrapper) {\n      moveChildrenNow(contentWrapper, containerElement, { ignoreMove: true });\n      moveElementNow(contentWrapper); // remove\n    }\n\n    moveElementNow(wrapper); // remove\n\n    if (dragScroll) {\n      removeEventListenerFrom(scrollbarH, MC.S_POINTERMOVE, onClickOrDragH);\n      removeEventListenerFrom(scrollbarV, MC.S_POINTERMOVE, onClickOrDragV);\n\n      removeEventListenerFrom(scrollbarH, MC.S_POINTERUP, onReleaseH);\n      removeEventListenerFrom(scrollbarV, MC.S_POINTERUP, onReleaseV);\n    }\n\n    if (dragScroll || clickScroll) {\n      removeEventListenerFrom(scrollbarH, MC.S_POINTERDOWN, onClickOrDragH);\n      removeEventListenerFrom(scrollbarV, MC.S_POINTERDOWN, onClickOrDragV);\n    }\n\n    removeClassesNow(barParent, PREFIX_ROOT);\n    removeClassesNow(containerElement, PREFIX_CONTAINER);\n\n    for (const position of [MC.S_TOP, MC.S_BOTTOM, MC.S_LEFT, MC.S_RIGHT]) {\n      delDataNow(containerElement, `${PREFIX_HAS_SCROLLBAR}-${position}`);\n    }\n\n    delDataNow(containerElement, PREFIX_HAS_WRAPPER);\n    delDataNow(containerElement, PREFIX_HAS_V_SCROLL);\n  });\n};\n\nconst isHorizontal = (scrollbar: Element) =>\n  getData(scrollbar, MC.PREFIX_ORIENTATION) === MC.S_HORIZONTAL;\n\nconst setBoxMeasureProps = async (element: HTMLElement) => {\n  for (const side of [MC.S_TOP, MC.S_RIGHT, MC.S_BOTTOM, MC.S_LEFT]) {\n    for (const key of [`padding-${side}`, `border-${side}-width`]) {\n      const padding = await getComputedStyleProp(element, key);\n      setStyleProp(element, MH.prefixCssJsVar(key), padding);\n    }\n  }\n};\n\nconst setOrReleasePointerCapture = (\n  event: Event,\n  scrollbar: Element,\n  method: \"setPointerCapture\" | \"releasePointerCapture\",\n) => {\n  if (MH.isPointerEvent(event) && method in scrollbar) {\n    scrollbar[method](event.pointerId);\n  }\n};\n"],"mappings":"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","ignoreList":[]}