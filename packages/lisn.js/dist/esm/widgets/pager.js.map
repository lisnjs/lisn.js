{"version":3,"file":"pager.js","names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","from","test","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","Boolean","valueOf","_inherits","_setPrototypeOf","bind","_superPropGet","_get","get","_superPropBase","getOwnPropertyDescriptor","_defineProperty","_toPrimitive","toPrimitive","String","Number","MC","MH","disableInitialTransition","addClasses","removeClassesNow","getData","setData","setBoolData","delDataNow","setStyleProp","delStylePropNow","waitForMeasureTime","waitForMutateTime","getVisibleContentChildren","addEventListenerTo","removeEventListenerFrom","isValidInputDevice","toInt","toBool","getClosestScrollable","validateStrList","validateNumber","validateString","validateBoolean","wrapCallback","GestureWatcher","ScrollWatcher","ViewWatcher","Widget","registerWidget","getDefaultWidgetSelector","Pager","_Widget","element","config","_Pager$get","_this","destroyPromise","destroy","id","DUMMY_ID","pages","toggles","switches","nextPrevSwitch","nextSwitch","_prev","prevSwitch","pageSelector","PREFIX_PAGE__FOR_SELECT","toggleSelector","PREFIX_TOGGLE__FOR_SELECT","switchSelector","PREFIX_SWITCH__FOR_SELECT","nextSwitchSelector","PREFIX_NEXT_SWITCH__FOR_SELECT","prevSwitchSelector","PREFIX_PREV_SWITCH__FOR_SELECT","lengthOf","querySelectorAll","filter","matches","querySelector","numPages","usageError","_iterator","_step","page","contains","err","components","_pages","_toggles","_switches","_nextPrevSwitch","methods","getMethods","promiseResolve","isDestroyed","init","nextPage","_nextPage","prevPage","_prevPage","goToPage","pageNum","_goToPage","disablePage","_disablePage","enablePage","_enablePage","togglePage","_togglePage","isPageDisabled","_isPageDisabled","getCurrentPage","_getCurrentPage","getPreviousPage","_getPreviousPage","getCurrentPageNum","_getCurrentPageNum","getPreviousPageNum","_getPreviousPageNum","onTransition","_onTransition","getPages","getSwitches","getToggles","instance","isInstanceOf","register","WIDGET_NAME","configValidator","MIN_TIME_BETWEEN_WHEEL","S_CURRENT","S_ARIA_CURRENT","ARIA_PREFIX","S_COVERED","S_NEXT","S_TOTAL_PAGES","S_CURRENT_PAGE","S_PAGE_NUMBER","PREFIXED_NAME","prefixName","PREFIX_ROOT","concat","PREFIX_PAGE_CONTAINER","PREFIX_PAGE","PREFIX_IS_FULLSCREEN","PREFIX_USE_PARALLAX","PREFIX_TOTAL_PAGES","PREFIX_CURRENT_PAGE","PREFIX_CURRENT_PAGE_IS_LAST","PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED","PREFIX_CURRENT_PAGE_IS_LAST_ENABLED","PREFIX_PAGE_STATE","PREFIX_PAGE_NUMBER","VAR_TOTAL_PAGES","prefixCssJsVar","VAR_CURRENT_PAGE","VAR_PAGE_NUMBER","initialPage","fullscreen","parallax","horizontal","useGestures","isNullish","undefined","bool","alignGestureDirection","preventDefault","fetchClosestScrollable","_getClosestScrollable","active","setPageNumber","lastPromise","_iterator2","_step2","el","setCurrentPage","pagerEl","currPageNum","isFirstEnabled","isLastEnabled","setPageState","_ref","_callee","state","_iterator3","_step3","_callee$","_context","t0","_x","_x2","_x3","widget","_pages$","_config$initialPage","_config$fullscreen","_config$parallax","_config$horizontal","_config$useGestures","_config$alignGestureD","_config$preventDefaul","pageContainer","parentElement","isFullscreen","isParallax","isHorizontal","orientation","S_HORIZONTAL","S_VERTICAL","scrollWatcher","reuse","gestureWatcher","viewWatcher","rootMargin","threshold","getGestureOptions","directions","devices","isBoolean","intents","S_DRAG","S_SCROLL","deltaThreshold","scrollToPager","_ref2","_callee2","_callee2$","_context2","t1","t2","t3","scrollable","scrollTo","transitionOnGesture","target","data","swapDirection","intent","includes","S_LEFT","S_UP","direction","addWatcher","_gestureWatcher","_viewWatcher","onGesture","S_RIGHT","S_DOWN","onView","views","getPageNumForEvent","event","currentTargetOf","isElement","toggleClickListener","switchClickListener","nextSwitchClickListener","prevSwitchClickListener","removeWatcher","_gestureWatcher2","_viewWatcher2","offGesture","offView","onDisable","onEnable","onDestroy","_callee3","idx","_iterator4","_step4","_step4$value","listener","_callee3$","_context3","PREFIX_ORIENTATION","_slicedToArray","S_CLICK","delAttr","_iterator5","_step5","_iterator6","_step6","_step6$value","disabledPages","callbacks","newSet","fetchScrollOptions","_ref4","_callee4","_callee4$","_context4","asFractionOf","weCanInterrupt","lastPageNum","lastTransition","canTransition","gestureData","isDisabled","device","S_WHEEL","timeNow","_ref5","_callee5","_iterator7","_step7","callback","_callee5$","_context5","scroll","setAttr","_x4","_x5","_ref6","_callee6","targetPage","_callee6$","_context6","_x6","_ref7","_callee7","_callee7$","_context7","_x7","_ref8","_callee8","_callee8$","_context8","S_DISABLED","_x8","_ref9","_callee9","_callee9$","_context9","_x9","handler","add"],"sources":["../../../src/ts/widgets/pager.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  addClasses,\n  removeClassesNow,\n  getData,\n  setData,\n  setBoolData,\n  delDataNow,\n  setStyleProp,\n  delStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { isValidInputDevice } from \"@lisn/utils/gesture\";\nimport { toInt } from \"@lisn/utils/math\";\nimport { toBool } from \"@lisn/utils/misc\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport {\n  validateStrList,\n  validateNumber,\n  validateString,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport {\n  GestureWatcher,\n  OnGestureOptions,\n  GestureData,\n} from \"@lisn/watchers/gesture-watcher\";\nimport { ScrollWatcher, ScrollOptions } from \"@lisn/watchers/scroll-watcher\";\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  WidgetCallback,\n  WidgetHandler,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as a {@link Pager} widget.\n *\n * The Pager widget sets up the elements that make up its pages to be overlayed\n * on top of each other with only one of them visible at a time. When a user\n * performs a scroll-like gesture (see {@link GestureWatcher}), the pages are\n * flicked through: gestures, whose direction is down (or left) result in the\n * next page being shown, otherwise the previous.\n *\n * The widget should have more than one page.\n *\n * Optionally, the widget can have a set of \"switch\" elements and a set of\n * \"toggle\" elements which correspond one-to-one to each page. Switches go to\n * the given page and toggles toggle the enabled/disabled state of the page.\n *\n * **IMPORTANT:** The page elements will be positioned absolutely, and\n * therefore the pager likely needs to have an explicit height. If you enable\n * {@link PagerConfig.fullscreen}, then the element will get `height: 100vh`\n * set. Otherwise, you need to set its height in your CSS.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Pager}\n * widget on a given element. Use {@link Pager.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the pager element:\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n * - `data-lisn-use-parallax`: `\"true\"` or `\"false\"`\n * - `data-lisn-total-pages`: the number of pages\n * - `data-lisn-current-page`: the current page number\n * - `data-lisn-current-page-is-last`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-first-enabled`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-last-enabled`: `\"true\"` or `\"false\"`\n *\n * The following dynamic CSS properties are also set on the pager element's style:\n * - `--lisn-js--total-pages`: the number of pages\n * - `--lisn-js--current-page`: the current page number\n *\n * The following dynamic attributes are set on each page, toggle or switch element:\n * - `data-lisn-page-state`: `\"current\"`, `\"next\"`, `\"covered\"` or `\"disabled\"`\n * - `data-lisn-page-number`: the corresponding page's number\n *\n * The following analogous dynamic CSS properties are also set on each page,\n * toggle or switch element's style:\n * - `--lisn-js--page-number`: the corresponding page's number\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-pager` class or `data-lisn-pager` attribute set on the container\n *   element that constitutes the pager\n * - `lisn-pager-page` class or `data-lisn-pager-page` attribute set on\n *   elements that should act as the pages.\n * - `lisn-pager-toggle` class or `data-lisn-pager-toggle` attribute set on\n *   elements that should act as the toggles.\n * - `lisn-pager-switch` class or `data-lisn-pager-switch` attribute set on\n *   elements that should act as the switches.\n *\n * When using auto-widgets, the elements that will be used as pages are\n * discovered in the following way:\n * 1. The top-level element that constitutes the widget is searched for any\n *    elements that contain the `lisn-pager-page` class or\n *    `data-lisn-pager-page` attribute. They do not have to be immediate\n *    children of the root element, but they **should** all be siblings.\n * 2. If there are no such elements, all of the immediate children of the\n *    widget element except any `script` or `style` elements are taken as the\n *    pages.\n *\n * The toggles and switches are descendants of the top-level element that\n * constitutes the widget, that contain the\n * `lisn-pager-toggle`/`lisn-pager-switch` class or `data-lisn-pager-toggle`/\n * `data-lisn-pager-switch` attribute. They do not have to be immediate\n * children of the root element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple pager with default settings.\n *\n * ```html\n * <div class=\"lisn-pager\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * As above but with all settings explicitly set to their default (`false`).\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen=false | parallax=false | horizontal=false\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>Horizontal: Page 1</div>\n *   <div>Horizontal: Page 2</div>\n *   <div>Horizontal: Page 3</div>\n *   <div>Horizontal: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings, as well as toggle and switch buttons.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>\n *     <div data-lisn-pager-page>Horizontal: Page 1</div>\n *     <div data-lisn-pager-page>Horizontal: Page 2</div>\n *     <div data-lisn-pager-page>Horizontal: Page 3</div>\n *     <div data-lisn-pager-page>Horizontal: Page 4</div>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-toggle>Toggle page 1</button>\n *     <button data-lisn-pager-toggle>Toggle page 2</button>\n *     <button data-lisn-pager-toggle>Toggle page 3</button>\n *     <button data-lisn-pager-toggle>Toggle page 4</button>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-switch>Go to page 1</button>\n *     <button data-lisn-pager-switch>Go to page 2</button>\n *     <button data-lisn-pager-switch>Go to page 3</button>\n *     <button data-lisn-pager-switch>Go to page 4</button>\n *   </div>\n * </div>\n * ```\n */\nexport class Pager extends Widget {\n  /**\n   * Advances the widget's page by 1. If the current page is the last one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled down/right\n   * (depending on the gesture direction).\n   */\n  readonly nextPage: () => Promise<void>;\n\n  /**\n   * Reverses the widget's page by 1. If the current page is the first one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled up/left\n   * (depending on the gesture direction).\n   */\n  readonly prevPage: () => Promise<void>;\n\n  /**\n   * Advances the widget to the given page. Note that page numbers start at 1.\n   *\n   * If this page is disabled, nothing is done.\n   */\n  readonly goToPage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Disables the given page number. Note that page numbers start at 1.\n   *\n   * The page will be skipped during transitioning to previous/next.\n   *\n   * If the page is the current one, then the current page will be switched to\n   * the previous one (that's not disabled), or if this is the first enabled\n   * page, then it will switch to the next one that's not disabled.\n   *\n   * If this is the last enabled page, nothing is done.\n   */\n  readonly disablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page number. Note that page numbers start at 1.\n   */\n  readonly enablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page if it is disabled, otherwise disables it. Note\n   * that page numbers start at 1.\n   */\n  readonly togglePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Returns true if the given page number is disabled. Note that page\n   * numbers start at 1.\n   */\n  readonly isPageDisabled: (pageNum: number) => boolean;\n\n  /**\n   * Returns the current page.\n   */\n  readonly getCurrentPage: () => Element;\n\n  /**\n   * Returns the previous page, before the last transition.\n   *\n   * If there has been no change of page, returns the first page, same as\n   * {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPage: () => Element;\n\n  /**\n   * Returns the number of the current page. Note that numbers start at 1.\n   */\n  readonly getCurrentPageNum: () => number;\n\n  /**\n   * Returns the number of the previous page, before the last transition. Note\n   * that numbers start at 1.\n   *\n   * If there has been no change of page, returns the number of the first page,\n   * same as {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPageNum: () => number;\n\n  /**\n   * The given handler will be called whenever there is a change of page. It\n   * will be called after the current page number is updated internally (so\n   * {@link getPreviousPageNum} and {@link getCurrentPageNum} will return the\n   * updated numbers), but before the page transition styles are updated.\n   *\n   * If the handler returns a promise, it will be awaited upon.\n   */\n  readonly onTransition: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns the page elements.\n   */\n  readonly getPages: () => Element[];\n\n  /**\n   * Returns the toggle elements if any.\n   */\n  readonly getToggles: () => Element[];\n\n  /**\n   * Returns the switch elements if any.\n   */\n  readonly getSwitches: () => Element[];\n\n  static get(element: Element): Pager | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Pager)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!Pager.get(element)) {\n          return new Pager(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If there are less than 2 pages given or found, or if any\n   *                page is not a descendant of the main pager element.\n   */\n  constructor(element: Element, config?: PagerConfig) {\n    const destroyPromise = Pager.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const pages = config?.pages || [];\n    const toggles = config?.toggles || [];\n    const switches = config?.switches || [];\n    const nextPrevSwitch = {\n      _next: config?.nextSwitch || null,\n      _prev: config?.prevSwitch || null,\n    };\n\n    const pageSelector = getDefaultWidgetSelector(PREFIX_PAGE__FOR_SELECT);\n    const toggleSelector = getDefaultWidgetSelector(PREFIX_TOGGLE__FOR_SELECT);\n    const switchSelector = getDefaultWidgetSelector(PREFIX_SWITCH__FOR_SELECT);\n    const nextSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_NEXT_SWITCH__FOR_SELECT,\n    );\n    const prevSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_PREV_SWITCH__FOR_SELECT,\n    );\n\n    if (!MH.lengthOf(pages)) {\n      pages.push(...MH.querySelectorAll(element, pageSelector));\n\n      if (!MH.lengthOf(pages)) {\n        pages.push(\n          ...getVisibleContentChildren(element).filter(\n            (e) => !e.matches(switchSelector),\n          ),\n        );\n      }\n    }\n\n    if (!MH.lengthOf(toggles)) {\n      toggles.push(...MH.querySelectorAll(element, toggleSelector));\n    }\n\n    if (!MH.lengthOf(switches)) {\n      switches.push(...MH.querySelectorAll(element, switchSelector));\n    }\n\n    if (!nextPrevSwitch._next) {\n      nextPrevSwitch._next = MH.querySelector(element, nextSwitchSelector);\n    }\n\n    if (!nextPrevSwitch._prev) {\n      nextPrevSwitch._prev = MH.querySelector(element, prevSwitchSelector);\n    }\n\n    const numPages = MH.lengthOf(pages);\n    if (numPages < 2) {\n      throw MH.usageError(\"Pager must have more than 1 page\");\n    }\n\n    for (const page of pages) {\n      if (!element.contains(page) || page === element) {\n        throw MH.usageError(\"Pager's pages must be its descendants\");\n      }\n    }\n\n    const components = {\n      _pages: pages,\n      _toggles: toggles,\n      _switches: switches,\n      _nextPrevSwitch: nextPrevSwitch,\n    };\n\n    const methods = getMethods(this, components, element, config);\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, element, components, config, methods);\n    });\n\n    this.nextPage = () => methods._nextPage();\n    this.prevPage = () => methods._prevPage();\n    this.goToPage = (pageNum) => methods._goToPage(pageNum);\n    this.disablePage = methods._disablePage;\n    this.enablePage = methods._enablePage;\n    this.togglePage = methods._togglePage;\n    this.isPageDisabled = methods._isPageDisabled;\n    this.getCurrentPage = methods._getCurrentPage;\n    this.getPreviousPage = methods._getPreviousPage;\n    this.getCurrentPageNum = methods._getCurrentPageNum;\n    this.getPreviousPageNum = methods._getPreviousPageNum;\n    this.onTransition = methods._onTransition;\n\n    this.getPages = () => [...pages];\n    this.getSwitches = () => [...switches];\n    this.getToggles = () => [...toggles];\n  }\n}\n\n/**\n * @interface\n */\nexport type PagerConfig = {\n  /**\n   * The elements that will make up the pages.\n   *\n   * They do not have to be immediate children of the root element, but they\n   * should all be siblings.\n   *\n   * The widget should have more than one page.\n   *\n   * If this is not specified, then\n   * 1. The top-level element that constitutes the widget is searched for any\n   *    elements that contain the `lisn-pager-page` class or the\n   *    `data-lisn-pager-page` attribute, and these are used as pages.\n   * 2. If there are no such elements, all of the immediate children of the\n   *    widget element (other than `script` and `style` elements) are taken as\n   *    the pages.\n   *\n   * **IMPORTANT:** The page elements will be positioned absolutely relative to\n   * their immediate parent, but their parent likely needs to have an explicit\n   * height. If you enable {@link PagerConfig.fullscreen}, then the page parent\n   * will get `height: 100vh` set. Otherwise, you need to set its height in\n   * your CSS.\n   *\n   * @defaultValue undefined\n   */\n  pages?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that toggles the\n   * enabled/disabled state of the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-toggle`\n   * class or the `data-lisn-pager-toggle` attribute, and these are used as\n   * toggles.\n   *\n   * @defaultValue undefined\n   */\n  toggles?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that switches the\n   * pager to the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-switch`\n   * class or the `data-lisn-pager-switch` attribute, and these are used as\n   * switches.\n   *\n   * @defaultValue undefined\n   */\n  switches?: Element[];\n\n  /**\n   * This element will be assigned a click listener that goes to the next page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-next-switch` class or the `data-lisn-pager-next-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  nextSwitch?: Element;\n\n  /**\n   * This element will be assigned a click listener that goes to the previous\n   * page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-prev-switch` class or the `data-lisn-pager-prev-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  prevSwitch?: Element;\n\n  /**\n   * Set the initial page number.\n   *\n   * @defaultValue 1\n   */\n  initialPage?: number;\n\n  /**\n   * If true, then:\n   * - the pager's height will be set to the viewport height (100vh)\n   * - the pager's scrolling ancestor will be scrolled to the top of the pager\n   *   when 30% of it is in view\n   * - scrolling beyond the first or last page will initiate scroll up/left or\n   *   down/right the pager's scrolling ancestor in order to allow \"leaving\"\n   *   the pager\n   *\n   * Note that since the pager's pages will be positioned absolutely, if you do\n   * _not_ enable this option, you will need to manually set the height of the\n   * page parent element via CSS.\n   *\n   * @defaultValue false\n   */\n  fullscreen?: boolean;\n\n  /**\n   * Use a parallax effect for switching pages.\n   *\n   * @defaultValue false\n   */\n  parallax?: boolean;\n\n  /**\n   * Transition pages sideways instead of vertically.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Transition pages upon user scroll-like and drag-like gestures via the\n   * given {@link GestureDevice}s. If set to true, then gestures using all\n   * device types are supported.\n   *\n   * Note that drag gesture is only supported by the \"pointer\" device and also\n   * the \"pointer\" device only supports drag gestures, so if you want to\n   * disable drag gestures, simply pass \"wheel,key,touch\" as this option.\n   *\n   * @defaultValue true\n   */\n  useGestures?: boolean | CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If true, then pages will be advanced backwards/forwards regardless if the\n   * gesture direction is horizontal or vertical.\n   *\n   * If false then, a gesture will go to the next page only if its direction is\n   * down (or right if {@link horizontal}), and to the previous page only if\n   * the gesture direction is up (or left if {@link horizontal}).\n   *\n   * **IMPORTANT:**\n   * If {@link fullscreen}, {@link preventDefault} and\n   * {@link alignGestureDirection} are all true, then the pager's scrollable\n   * parent must be scrollable in the same direction as the pager orientation,\n   * otherwise automatic scroll beyond the last/first page won't work.\n   *\n   * @defaultValue false\n   */\n  alignGestureDirection?: boolean;\n\n  /**\n   * Whether to prevent the default action for events that would result in\n   * gestures.\n   *\n   * **NOTE:**\n   * If true (default), then all events that originate from a device given in\n   * {@link useGestures} and that could result in a gesture will be prevented\n   * regardless of their direction and whether {@link alignGestureDirection} is\n   * true.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n};\n\n// --------------------\n\ntype Components = {\n  _pages: Element[];\n  _toggles: Element[];\n  _switches: Element[];\n  _nextPrevSwitch: { _next: Element | null; _prev: Element | null };\n};\n\n// Swiping on some trackpads results in \"trailing\" wheel events sent for some\n// while which results in multiple pages being advanced in a short while. So we\n// limit how often pages can be advanced.\nconst MIN_TIME_BETWEEN_WHEEL = 1000;\n\nconst S_CURRENT = \"current\";\nconst S_ARIA_CURRENT = MC.ARIA_PREFIX + S_CURRENT;\nconst S_COVERED = \"covered\";\nconst S_NEXT = \"next\";\nconst S_TOTAL_PAGES = \"total-pages\";\nconst S_CURRENT_PAGE = \"current-page\";\nconst S_PAGE_NUMBER = \"page-number\";\nconst WIDGET_NAME = \"pager\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_PAGE_CONTAINER = `${PREFIXED_NAME}__page-container`;\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_PAGE = `${PREFIXED_NAME}__page`;\nconst PREFIX_PAGE__FOR_SELECT = `${PREFIXED_NAME}-page`;\nconst PREFIX_TOGGLE__FOR_SELECT = `${PREFIXED_NAME}-toggle`;\nconst PREFIX_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-switch`;\nconst PREFIX_NEXT_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-next-switch`;\nconst PREFIX_PREV_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-prev-switch`;\n\nconst PREFIX_IS_FULLSCREEN = MH.prefixName(\"is-fullscreen\");\nconst PREFIX_USE_PARALLAX = MH.prefixName(\"use-parallax\");\nconst PREFIX_TOTAL_PAGES = MH.prefixName(S_TOTAL_PAGES);\nconst PREFIX_CURRENT_PAGE = MH.prefixName(S_CURRENT_PAGE);\nconst PREFIX_CURRENT_PAGE_IS_LAST = `${PREFIX_CURRENT_PAGE}-is-last`;\nconst PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED = `${PREFIX_CURRENT_PAGE}-is-first-enabled`;\nconst PREFIX_CURRENT_PAGE_IS_LAST_ENABLED = `${PREFIX_CURRENT_PAGE_IS_LAST}-enabled`;\nconst PREFIX_PAGE_STATE = MH.prefixName(\"page-state\");\nconst PREFIX_PAGE_NUMBER = MH.prefixName(S_PAGE_NUMBER);\nconst VAR_TOTAL_PAGES = MH.prefixCssJsVar(S_TOTAL_PAGES);\nconst VAR_CURRENT_PAGE = MH.prefixCssJsVar(S_CURRENT_PAGE);\nconst VAR_PAGE_NUMBER = MH.prefixCssJsVar(S_PAGE_NUMBER);\n\n// Only one Pager widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<PagerConfig> = {\n  initialPage: validateNumber,\n  fullscreen: validateBoolean,\n  parallax: validateBoolean,\n  horizontal: validateBoolean,\n  useGestures: (key, value) => {\n    if (MH.isNullish(value)) {\n      return undefined;\n    }\n\n    const bool = toBool(value);\n    if (bool !== null) {\n      return bool;\n    }\n\n    return (\n      validateStrList(\n        \"useGestures\",\n        validateString(key, value),\n        isValidInputDevice,\n      ) || true\n    );\n  },\n  alignGestureDirection: validateBoolean,\n  preventDefault: validateBoolean,\n};\n\nconst fetchClosestScrollable = (element: Element) =>\n  waitForMeasureTime().then(\n    () => getClosestScrollable(element, { active: true }) ?? undefined,\n  );\n\nconst setPageNumber = (components: Components, pageNum: number) => {\n  let lastPromise: Promise<void> = MH.promiseResolve();\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      setData(el, PREFIX_PAGE_NUMBER, pageNum + \"\");\n      lastPromise = setStyleProp(el, VAR_PAGE_NUMBER, pageNum + \"\");\n    }\n  }\n\n  return lastPromise;\n};\n\nconst setCurrentPage = (\n  pagerEl: Element,\n  currPageNum: number,\n  numPages: number,\n  isPageDisabled: (pageNum: number) => boolean,\n) => {\n  let isFirstEnabled = true;\n  let isLastEnabled = true;\n  for (let n = 1; n <= numPages; n++) {\n    if (!isPageDisabled(n)) {\n      if (n < currPageNum) {\n        isFirstEnabled = false;\n      } else if (n > currPageNum) {\n        isLastEnabled = false;\n      }\n    }\n  }\n\n  setStyleProp(pagerEl, VAR_CURRENT_PAGE, currPageNum + \"\");\n  setData(pagerEl, PREFIX_CURRENT_PAGE, currPageNum + \"\");\n  setBoolData(pagerEl, PREFIX_CURRENT_PAGE_IS_LAST, numPages === numPages);\n  setBoolData(pagerEl, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED, isFirstEnabled);\n  return setBoolData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST_ENABLED,\n    isLastEnabled,\n  );\n};\n\nconst setPageState = async (\n  components: Components,\n  pageNum: number,\n  state: string,\n) => {\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      await setData(el, PREFIX_PAGE_STATE, state);\n    }\n  }\n};\n\nconst init = (\n  widget: Pager,\n  element: Element,\n  components: Components,\n  config: PagerConfig | undefined,\n  methods: ReturnType<typeof getMethods>,\n) => {\n  const pages = components._pages;\n  const toggles = components._toggles;\n  const switches = components._switches;\n  const nextSwitch = components._nextPrevSwitch._next;\n  const prevSwitch = components._nextPrevSwitch._prev;\n  const pageContainer = pages[0]?.parentElement;\n\n  let initialPage = toInt(config?.initialPage ?? 1);\n  const isFullscreen = config?.fullscreen ?? false;\n  const isParallax = config?.parallax ?? false;\n  const isHorizontal = config?.horizontal ?? false;\n  const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n  const useGestures = config?.useGestures ?? true;\n  const alignGestureDirection = config?.alignGestureDirection ?? false;\n  const preventDefault = config?.preventDefault ?? true;\n\n  const scrollWatcher = ScrollWatcher.reuse();\n  let gestureWatcher: GestureWatcher | null = null;\n  let viewWatcher: ViewWatcher | null = null;\n  if (isFullscreen) {\n    viewWatcher = ViewWatcher.reuse({ rootMargin: \"0px\", threshold: 0.3 });\n  }\n\n  if (useGestures) {\n    gestureWatcher = GestureWatcher.reuse();\n  }\n\n  const getGestureOptions = (\n    directions: Direction | Direction[] | undefined,\n  ): OnGestureOptions => {\n    return {\n      devices: MH.isBoolean(useGestures) // i.e. true; if it's false, then gestureWatcher is null\n        ? undefined // all devices\n        : useGestures,\n      intents: [MC.S_DRAG, MC.S_SCROLL],\n      directions,\n      deltaThreshold: 25,\n      preventDefault,\n    };\n  };\n\n  const scrollToPager = async () => {\n    scrollWatcher.scrollTo(element, {\n      scrollable: await fetchClosestScrollable(element),\n    });\n  };\n\n  const transitionOnGesture = (target: EventTarget, data: GestureData) => {\n    const swapDirection = data.intent === MC.S_DRAG;\n\n    if (MH.includes([MC.S_LEFT, MC.S_UP], data.direction)) {\n      (swapDirection ? methods._nextPage : methods._prevPage)(data);\n    } else {\n      (swapDirection ? methods._prevPage : methods._nextPage)(data);\n    }\n  };\n\n  const addWatcher = () => {\n    gestureWatcher?.onGesture(\n      element,\n      transitionOnGesture,\n      getGestureOptions(\n        alignGestureDirection\n          ? isHorizontal\n            ? [MC.S_LEFT, MC.S_RIGHT]\n            : [MC.S_UP, MC.S_DOWN]\n          : undefined, // all directions\n      ),\n    );\n\n    viewWatcher?.onView(element, scrollToPager, { views: \"at\" });\n  };\n\n  const getPageNumForEvent = (event: Event) => {\n    const target = MH.currentTargetOf(event);\n    return MH.isElement(target)\n      ? toInt(getData(target, PREFIX_PAGE_NUMBER))\n      : 0;\n  };\n\n  const toggleClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._togglePage(pageNum);\n  };\n\n  const switchClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._goToPage(pageNum);\n  };\n\n  const nextSwitchClickListener = () => methods._nextPage();\n  const prevSwitchClickListener = () => methods._prevPage();\n\n  const removeWatcher = () => {\n    gestureWatcher?.offGesture(element, transitionOnGesture);\n\n    viewWatcher?.offView(element, scrollToPager);\n  };\n\n  // SETUP ------------------------------\n\n  widget.onDisable(removeWatcher);\n  widget.onEnable(addWatcher);\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n    delDataNow(element, MC.PREFIX_ORIENTATION);\n    delDataNow(element, PREFIX_IS_FULLSCREEN);\n    delDataNow(element, PREFIX_USE_PARALLAX);\n    delDataNow(element, PREFIX_CURRENT_PAGE);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST_ENABLED);\n    delDataNow(element, PREFIX_TOTAL_PAGES);\n    delStylePropNow(element, VAR_CURRENT_PAGE);\n    delStylePropNow(element, VAR_TOTAL_PAGES);\n\n    for (let idx = 0; idx < MH.lengthOf(pages); idx++) {\n      removeClassesNow(pages[idx], PREFIX_PAGE);\n\n      for (const [el, listener] of [\n        [pages[idx], null],\n        [toggles[idx], toggleClickListener],\n        [switches[idx], switchClickListener],\n      ] as const) {\n        if (el) {\n          delDataNow(el, PREFIX_PAGE_STATE);\n          delDataNow(el, PREFIX_PAGE_NUMBER);\n          delStylePropNow(el, VAR_PAGE_NUMBER);\n          if (listener) {\n            removeEventListenerFrom(el, MC.S_CLICK, listener);\n          }\n        }\n      }\n\n      MH.delAttr(pages[idx], S_ARIA_CURRENT);\n    }\n\n    if (nextSwitch) {\n      removeEventListenerFrom(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n    }\n\n    if (prevSwitch) {\n      removeEventListenerFrom(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n    }\n\n    removeClassesNow(element, PREFIX_ROOT);\n    if (pageContainer) {\n      removeClassesNow(pageContainer, PREFIX_PAGE_CONTAINER);\n    }\n  });\n\n  addWatcher();\n  addClasses(element, PREFIX_ROOT);\n  if (pageContainer) {\n    addClasses(pageContainer, PREFIX_PAGE_CONTAINER);\n  }\n\n  const numPages = MH.lengthOf(pages);\n  setData(element, MC.PREFIX_ORIENTATION, orientation);\n  setBoolData(element, PREFIX_IS_FULLSCREEN, isFullscreen);\n  setBoolData(element, PREFIX_USE_PARALLAX, isParallax);\n  setData(element, PREFIX_TOTAL_PAGES, numPages + \"\");\n  setStyleProp(element, VAR_TOTAL_PAGES, (numPages || 1) + \"\");\n\n  for (const page of pages) {\n    disableInitialTransition(page);\n    addClasses(page, PREFIX_PAGE);\n  }\n\n  for (let idx = 0; idx < numPages; idx++) {\n    setPageNumber(components, idx + 1);\n    setPageState(components, idx + 1, S_NEXT);\n\n    for (const [el, listener] of [\n      [toggles[idx], toggleClickListener],\n      [switches[idx], switchClickListener],\n    ] as const) {\n      if (el) {\n        addEventListenerTo(el, MC.S_CLICK, listener);\n      }\n    }\n  }\n\n  if (nextSwitch) {\n    addEventListenerTo(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n  }\n\n  if (prevSwitch) {\n    addEventListenerTo(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n  }\n\n  if (initialPage < 1 || initialPage > numPages) {\n    initialPage = 1;\n  }\n  methods._goToPage(initialPage);\n};\n\nconst getMethods = (\n  widget: Pager,\n  components: Components,\n  element: Element,\n  config: PagerConfig | undefined,\n) => {\n  const pages = components._pages;\n  const scrollWatcher = ScrollWatcher.reuse();\n  const isFullscreen = config?.fullscreen;\n  const disabledPages: Record<number, boolean> = {};\n  const callbacks = MH.newSet<WidgetCallback>();\n\n  const fetchScrollOptions = async (): Promise<ScrollOptions> => ({\n    scrollable: await fetchClosestScrollable(element),\n    // default amount is already 100%\n    asFractionOf: \"visible\",\n    weCanInterrupt: true,\n  });\n\n  let currPageNum = -1;\n  let lastPageNum = -1;\n  let lastTransition = 0;\n\n  const canTransition = (gestureData?: GestureData) => {\n    if (widget.isDisabled()) {\n      return false;\n    }\n\n    if (gestureData?.device !== MC.S_WHEEL) {\n      return true;\n    }\n\n    const timeNow = MH.timeNow();\n    if (timeNow - lastTransition > MIN_TIME_BETWEEN_WHEEL) {\n      lastTransition = timeNow;\n      return true;\n    }\n\n    return false;\n  };\n\n  const goToPage = async (pageNum: number, gestureData?: GestureData) => {\n    pageNum = toInt(pageNum, -1);\n    if (pageNum === currPageNum || !canTransition(gestureData)) {\n      return;\n    }\n\n    const numPages = MH.lengthOf(pages);\n\n    if (\n      (currPageNum === 1 && pageNum === 0) ||\n      (currPageNum === numPages && pageNum === numPages + 1)\n    ) {\n      // next/prev page beyond last/first\n      if (isFullscreen) {\n        scrollWatcher.scroll(\n          pageNum\n            ? gestureData?.direction === MC.S_RIGHT\n              ? MC.S_RIGHT\n              : MC.S_DOWN\n            : gestureData?.direction === MC.S_LEFT\n              ? MC.S_LEFT\n              : MC.S_UP,\n          await fetchScrollOptions(),\n        ); // no need to await\n      }\n\n      return;\n    }\n\n    if (isPageDisabled(pageNum) || pageNum < 1 || pageNum > numPages) {\n      // invalid or disabled\n      return;\n    }\n\n    lastPageNum = currPageNum > 0 ? currPageNum : pageNum;\n    currPageNum = pageNum;\n\n    for (const callback of callbacks) {\n      await callback.invoke(widget);\n    }\n\n    MH.delAttr(pages[lastPageNum - 1], S_ARIA_CURRENT);\n    for (\n      let n = lastPageNum;\n      n !== currPageNum;\n      currPageNum < lastPageNum ? n-- : n++\n    ) {\n      if (!isPageDisabled(n)) {\n        setPageState(\n          components,\n          n,\n          currPageNum < lastPageNum ? S_NEXT : S_COVERED,\n        );\n      }\n    }\n\n    setCurrentPage(element, currPageNum, numPages, isPageDisabled);\n    MH.setAttr(pages[currPageNum - 1], S_ARIA_CURRENT);\n    await setPageState(components, currPageNum, S_CURRENT);\n  };\n\n  const nextPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum + 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage++;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const prevPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum - 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage--;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const isPageDisabled = (pageNum: number) => disabledPages[pageNum] === true;\n\n  const disablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || pageNum < 1 || pageNum > MH.lengthOf(pages)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = true;\n\n    if (pageNum === currPageNum) {\n      await prevPage();\n\n      if (pageNum === currPageNum) {\n        await nextPage();\n\n        if (pageNum === currPageNum) {\n          disabledPages[pageNum] = false;\n          return; // only enabled one\n        }\n      }\n    }\n\n    setCurrentPage(element, currPageNum, MH.lengthOf(pages), isPageDisabled);\n    await setPageState(components, pageNum, MC.S_DISABLED);\n  };\n\n  const enablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || !isPageDisabled(pageNum)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = false;\n\n    setCurrentPage(element, currPageNum, MH.lengthOf(pages), isPageDisabled);\n    await setPageState(\n      components,\n      pageNum,\n      pageNum < currPageNum ? S_COVERED : S_NEXT,\n    );\n  };\n\n  const togglePage = (pageNum: number) =>\n    isPageDisabled(pageNum) ? enablePage(pageNum) : disablePage(pageNum);\n\n  const onTransition = (handler: WidgetHandler) =>\n    callbacks.add(wrapCallback(handler));\n\n  return {\n    _nextPage: nextPage,\n    _prevPage: prevPage,\n    _goToPage: goToPage,\n    _disablePage: disablePage,\n    _enablePage: enablePage,\n    _togglePage: togglePage,\n    _isPageDisabled: isPageDisabled,\n    _getCurrentPage: () => pages[currPageNum - 1],\n    _getPreviousPage: () => pages[lastPageNum - 1],\n    _getCurrentPageNum: () => (MH.lengthOf(pages) > 0 ? currPageNum : 0),\n    _getPreviousPageNum: () => (MH.lengthOf(pages) > 0 ? lastPageNum : 0),\n    _onTransition: onTransition,\n  };\n};\n"],"mappings":"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","ignoreList":[]}