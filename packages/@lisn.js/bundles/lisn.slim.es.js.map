{"version":3,"file":"lisn.slim.es.js","sources":["../../lisn.js/src/ts/globals/minification-constants.ts","../../lisn.js/src/ts/globals/errors.ts","../../lisn.js/src/ts/globals/minification-helpers.ts","../../lisn.js/src/ts/globals/settings.ts","../../lisn.js/src/ts/utils/math.ts","../../lisn.js/src/ts/utils/misc.ts","../../lisn.js/src/ts/utils/text.ts","../../lisn.js/src/ts/utils/validation.ts","../../lisn.js/src/ts/modules/bit-spaces.ts","../../lisn.js/src/ts/utils/dom.ts","../../lisn.js/src/ts/utils/tasks.ts","../../lisn.js/src/ts/modules/callback.ts","../../lisn.js/src/ts/utils/log.ts","../../lisn.js/src/ts/utils/dom-optimize.ts","../../lisn.js/src/ts/utils/dom-query.ts","../../lisn.js/src/ts/utils/css-alter.ts","../../lisn.js/src/ts/utils/dom-alter.ts","../../lisn.js/src/ts/utils/dom-events.ts","../../lisn.js/src/ts/modules/x-map.ts","../../lisn.js/src/ts/watchers/dom-watcher.ts","../../lisn.js/src/ts/utils/directions.ts","../../lisn.js/src/ts/utils/event.ts","../../lisn.js/src/ts/utils/gesture.ts","../../lisn.js/src/ts/utils/gesture-key.ts","../../lisn.js/src/ts/utils/gesture-pointer.ts","../../lisn.js/src/ts/utils/gesture-touch.ts","../../lisn.js/src/ts/utils/normalize-wheel.ts","../../lisn.js/src/ts/utils/gesture-wheel.ts","../../lisn.js/src/ts/watchers/gesture-watcher.ts","../../lisn.js/src/ts/utils/layout.ts","../../lisn.js/src/ts/utils/scroll.ts","../../lisn.js/src/ts/utils/overlays.ts","../../lisn.js/src/ts/utils/size.ts","../../lisn.js/src/ts/modules/x-resize-observer.ts","../../lisn.js/src/ts/watchers/size-watcher.ts","../../lisn.js/src/ts/watchers/layout-watcher.ts","../../lisn.js/src/ts/utils/pointer.ts","../../lisn.js/src/ts/watchers/pointer-watcher.ts","../../lisn.js/src/ts/watchers/scroll-watcher.ts","../../lisn.js/src/ts/utils/views.ts","../../lisn.js/src/ts/modules/x-intersection-observer.ts","../../lisn.js/src/ts/watchers/view-watcher.ts","../../lisn.js/src/ts/bundle-essentials.ts","../../lisn.js/src/ts/widgets/widget.ts","../../lisn.js/src/ts/actions/action.ts","../../lisn.js/src/ts/actions/add-class.ts","../../lisn.js/src/ts/utils/animations.ts","../../lisn.js/src/ts/actions/animate.ts","../../lisn.js/src/ts/actions/animate-play.ts","../../lisn.js/src/ts/actions/display.ts","../../lisn.js/src/ts/utils/dom-search.ts","../../lisn.js/src/ts/triggers/trigger.ts","../../lisn.js/src/ts/actions/trigger.ts","../../lisn.js/src/ts/actions/scroll-to.ts","../../lisn.js/src/ts/actions/set-attribute.ts","../../lisn.js/src/ts/actions/show.ts","../../lisn.js/src/ts/utils/position.ts","../../lisn.js/src/ts/widgets/openable.ts","../../lisn.js/src/ts/actions/open.ts","../../lisn.js/src/ts/widgets/pager.ts","../../lisn.js/src/ts/actions/pager.ts","../../lisn.js/src/ts/triggers/pointer-trigger.ts","../../lisn.js/src/ts/triggers/layout-trigger.ts","../../lisn.js/src/ts/triggers/load-trigger.ts","../../lisn.js/src/ts/triggers/scroll-trigger.ts","../../lisn.js/src/ts/triggers/view-trigger.ts","../../lisn.js/src/ts/bundle-slim.ts"],"sourcesContent":["/**\n * For minification optimization.\n *\n * @module\n * @ignore\n * @internal\n */\n\nexport const PREFIX = \"lisn\";\nexport const LOG_PREFIX = \"[LISN.js]\";\n\nexport const OBJECT = Object;\nexport const SYMBOL = Symbol;\nexport const ARRAY = Array;\nexport const STRING = String;\nexport const FUNCTION = Function;\nexport const MATH = Math;\nexport const NUMBER = Number;\nexport const PROMISE = Promise;\n\nexport const PI = MATH.PI;\nexport const INFINITY = Infinity;\n\nexport const S_ABSOLUTE = \"absolute\";\nexport const S_FIXED = \"fixed\";\nexport const S_STICKY = \"sticky\";\n\nexport const S_WIDTH = \"width\";\nexport const S_HEIGHT = \"height\";\n\nexport const S_TOP = \"top\";\nexport const S_BOTTOM = \"bottom\";\n\nexport const S_UP = \"up\";\nexport const S_DOWN = \"down\";\n\nexport const S_LEFT = \"left\";\nexport const S_RIGHT = \"right\";\n\nexport const S_AT = \"at\";\nexport const S_ABOVE = \"above\";\nexport const S_BELOW = \"below\";\n\nexport const S_IN = \"in\";\nexport const S_OUT = \"out\";\n\nexport const S_NONE = \"none\";\nexport const S_AMBIGUOUS = \"ambiguous\";\n\nexport const S_ADDED = \"added\";\nexport const S_REMOVED = \"removed\";\nexport const S_ATTRIBUTE = \"attribute\";\n\nexport const S_KEY = \"key\";\nexport const S_MOUSE = \"mouse\";\nexport const S_POINTER = \"pointer\";\nexport const S_TOUCH = \"touch\";\nexport const S_WHEEL = \"wheel\";\nexport const S_CLICK = \"click\";\nexport const S_HOVER = \"hover\";\nexport const S_PRESS = \"press\";\n\nexport const S_SCROLL = \"scroll\";\nexport const S_ZOOM = \"zoom\";\nexport const S_DRAG = \"drag\";\nexport const S_UNKNOWN = \"unknown\";\n\nexport const S_SCROLL_TOP = `${S_SCROLL}Top` as `${typeof S_SCROLL}Top`;\nexport const S_SCROLL_LEFT = `${S_SCROLL}Left` as `${typeof S_SCROLL}Left`;\n\nexport const S_SCROLL_WIDTH = `${S_SCROLL}Width` as `${typeof S_SCROLL}Width`;\nexport const S_SCROLL_HEIGHT =\n  `${S_SCROLL}Height` as `${typeof S_SCROLL}Height`;\n\nexport const S_CLIENT_WIDTH = \"clientWidth\";\nexport const S_CLIENT_HEIGHT = \"clientHeight\";\n\nexport const S_SCROLL_TOP_FRACTION =\n  `${S_SCROLL}TopFraction` as `${typeof S_SCROLL}TopFraction`;\nexport const S_SCROLL_LEFT_FRACTION =\n  `${S_SCROLL}LeftFraction` as `${typeof S_SCROLL}LeftFraction`;\n\nexport const S_HORIZONTAL = \"horizontal\";\nexport const S_VERTICAL = \"vertical\";\nexport const S_SKIP_INITIAL = \"skipInitial\";\nexport const S_DEBOUNCE_WINDOW = \"debounceWindow\";\nexport const S_TOGGLE = \"toggle\";\n\nexport const S_CANCEL = \"cancel\";\n\nexport const S_KEYDOWN = (S_KEY + S_DOWN) as `${typeof S_KEY}${typeof S_DOWN}`;\n\nexport const S_MOUSEUP = (S_MOUSE + S_UP) as `${typeof S_MOUSE}${typeof S_UP}`;\nexport const S_MOUSEDOWN = (S_MOUSE +\n  S_DOWN) as `${typeof S_MOUSE}${typeof S_DOWN}`;\nexport const S_MOUSEMOVE = `${S_MOUSE}move` as `${typeof S_MOUSE}move`;\n\nexport const S_POINTERUP = (S_POINTER +\n  S_UP) as `${typeof S_POINTER}${typeof S_UP}`;\nexport const S_POINTERDOWN = (S_POINTER +\n  S_DOWN) as `${typeof S_POINTER}${typeof S_DOWN}`;\nexport const S_POINTERENTER = `${S_POINTER}enter` as `${typeof S_POINTER}enter`;\nexport const S_POINTERLEAVE = `${S_POINTER}leave` as `${typeof S_POINTER}leave`;\nexport const S_POINTERMOVE = `${S_POINTER}move` as `${typeof S_POINTER}move`;\nexport const S_POINTERCANCEL = (S_POINTER +\n  S_CANCEL) as `${typeof S_POINTER}${typeof S_CANCEL}`;\n\nexport const S_TOUCHSTART = `${S_TOUCH}start` as `${typeof S_TOUCH}start`;\nexport const S_TOUCHEND = `${S_TOUCH}end` as `${typeof S_TOUCH}end`;\nexport const S_TOUCHMOVE = `${S_TOUCH}move` as `${typeof S_TOUCH}move`;\nexport const S_TOUCHCANCEL = (S_TOUCH +\n  S_CANCEL) as `${typeof S_TOUCH}${typeof S_CANCEL}`;\n\nexport const S_DRAGSTART = `${S_DRAG}start` as `${typeof S_DRAG}start`;\nexport const S_DRAGEND = `${S_DRAG}end` as `${typeof S_DRAG}end`;\nexport const S_DRAGENTER = `${S_DRAG}enter` as `${typeof S_DRAG}enter`;\nexport const S_DRAGOVER = `${S_DRAG}over` as `${typeof S_DRAG}over`;\nexport const S_DRAGLEAVE = `${S_DRAG}leave` as `${typeof S_DRAG}leave`;\nexport const S_DROP = \"drop\";\n\nexport const S_SELECTSTART = \"selectstart\";\n\nexport const S_ATTRIBUTES = \"attributes\";\nexport const S_CHILD_LIST = \"childList\";\n\nexport const S_REVERSE = \"reverse\";\nexport const S_DRAGGABLE = \"draggable\";\nexport const S_DISABLED = \"disabled\";\n\nexport const S_ARROW = \"arrow\";\n\nexport const S_ROLE = \"role\";\n\nexport const ARIA_PREFIX = \"aria-\";\nexport const S_ARIA_CONTROLS = ARIA_PREFIX + \"controls\";\n\nexport const PREFIX_WRAPPER = `${PREFIX}-wrapper`;\nexport const PREFIX_INLINE_WRAPPER = `${PREFIX_WRAPPER}-inline`;\nexport const PREFIX_TRANSITION = `${PREFIX}-transition`;\nexport const PREFIX_TRANSITION_DISABLE = `${PREFIX_TRANSITION}__disable`;\nexport const PREFIX_HIDE = `${PREFIX}-hide`;\nexport const PREFIX_SHOW = `${PREFIX}-show`;\nexport const PREFIX_DISPLAY = `${PREFIX}-display`;\nexport const PREFIX_UNDISPLAY = `${PREFIX}-undisplay`;\nexport const PREFIX_PLACE = `${PREFIX}-place`;\nexport const PREFIX_ORIENTATION = `${PREFIX}-orientation`;\nexport const PREFIX_POSITION = `${PREFIX}-position`;\nexport const PREFIX_GHOST = `${PREFIX}-ghost`;\nexport const PREFIX_BORDER_SIZE = `${PREFIX}-border-size`;\nexport const PREFIX_NO_SELECT = `${PREFIX}-no-select`;\nexport const PREFIX_NO_TOUCH_ACTION = `${PREFIX}-no-touch-action`;\nexport const PREFIX_NO_WRAP = `${PREFIX}-no-wrap`;\n\nexport const S_ANIMATE = \"animate\";\nexport const ANIMATE_PREFIX = `${PREFIX}-${S_ANIMATE}__`;\nexport const PREFIX_ANIMATE_DISABLE = `${ANIMATE_PREFIX}disable`;\nexport const PREFIX_ANIMATE_PAUSE = `${ANIMATE_PREFIX}pause`;\nexport const PREFIX_ANIMATE_REVERSE = `${ANIMATE_PREFIX}${S_REVERSE}`;\nexport const PREFIX_ANIMATE_INFINITE = `${ANIMATE_PREFIX}infinite`;\n\nexport const USER_AGENT =\n  typeof navigator === \"undefined\" ? \"\" : navigator.userAgent;\n\nexport const IS_MOBILE =\n  USER_AGENT.match(\n    /Mobile|Android|Silk\\/|Kindle|BlackBerry|Opera Mini|Opera Mobi/,\n  ) !== null;\n","/**\n * @module Errors\n */\n\nimport { LOG_PREFIX } from \"@lisn/globals/minification-constants\";\n\n/**\n * Base error type emitted by LISN.\n */\nexport abstract class LisnError extends Error {}\n\n/**\n * Error type emitted for invalid input or incorrect usage of a function.\n */\nexport class LisnUsageError extends LisnError {\n  constructor(message = \"\") {\n    super(`${LOG_PREFIX} Incorrect usage: ${message}`);\n    this.name = \"LisnUsageError\";\n  }\n}\n\n/**\n * Error type emitted if an assertion is wrong => report bug.\n */\nexport class LisnBugError extends LisnError {\n  constructor(message = \"\") {\n    super(`${LOG_PREFIX} Please report a bug: ${message}`);\n    this.name = \"LisnBugError\";\n  }\n}\n","/**\n * For minification optimization\n *\n * @module\n * @ignore\n * @internal\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  BoundingRect,\n  IterableObject,\n  Constructor,\n  InstanceType,\n  MapBase,\n  SetBase,\n  Spread,\n} from \"@lisn/globals/types\";\n\nimport { LisnUsageError, LisnBugError } from \"@lisn/globals/errors\";\n\n// credit: underscore.js\nconst root =\n  (typeof self === \"object\" && self.self === self && self) ||\n  (typeof global == \"object\" && global.global === global && global) ||\n  Function(\"return this\")() ||\n  {};\n\nexport const kebabToCamelCase = (str: string) =>\n  str.replace(/-./g, (m) => toUpperCase(m.charAt(1)));\n\nexport const camelToKebabCase = (str: string) =>\n  str\n    .replace(/[A-Z][a-z]/g, (m) => \"-\" + toLowerCase(m))\n    .replace(/[A-Z]+/, (m) => \"-\" + toLowerCase(m));\n\nexport const prefixName = (name: string) => `${MC.PREFIX}-${name}`;\n\nexport const prefixCssVar = (name: string) => \"--\" + prefixName(name);\n\nexport const prefixCssJsVar = (name: string) => prefixCssVar(\"js--\" + name);\n\nexport const prefixData = (name: string) => `data-${camelToKebabCase(name)}`;\n\nexport const prefixLisnData = (name: string) => prefixData(prefixName(name));\n\nexport const toLowerCase = (s: string) => s.toLowerCase();\n\nexport const toUpperCase = (s: string) => s.toUpperCase();\n\nexport const timeNow = Date.now.bind(Date);\n\nexport const timeSince = (startTime: number) => timeNow() - startTime;\n\nexport const hasDOM = () => typeof document !== \"undefined\";\n\nexport const getWindow = () => window;\n\nexport const getDoc = () => document;\n\nexport const getDocElement = () => getDoc().documentElement;\n\nexport const getDocScrollingElement = () =>\n  getDoc().scrollingElement as HTMLElement | null;\n\nexport const getBody = () => getDoc().body;\n\nexport const getReadyState = () => getDoc().readyState;\n\nexport const getPointerType = (event: Event) =>\n  isPointerEvent(event)\n    ? event.pointerType\n    : isMouseEvent(event)\n      ? \"mouse\"\n      : null;\n\nexport const onAnimationFrame = hasDOM()\n  ? root.requestAnimationFrame.bind(root)\n  : () => {};\n\nexport const createElement = (\n  tagName: string,\n  options?: ElementCreationOptions,\n) => getDoc().createElement(tagName, options);\n\nexport const createButton = (label = \"\", tag = \"button\") => {\n  const btn = createElement(tag);\n  setTabIndex(btn);\n  setAttr(btn, MC.S_ROLE, \"button\");\n  setAttr(btn, MC.ARIA_PREFIX + \"label\", label);\n  return btn;\n};\n\nexport const isNullish = (v: unknown): v is null | undefined =>\n  v === undefined || v === null;\n\nexport const isEmpty = (v: unknown): v is null | undefined | \"\" =>\n  isNullish(v) || v === \"\";\n\nexport const isIterableObject = (v: unknown): v is IterableObject<unknown> =>\n  isNonPrimitive(v) && MC.SYMBOL.iterator in v;\n\nexport const isArray = (v: unknown) => isInstanceOf(v, MC.ARRAY);\n\nexport const isObject = (v: unknown) => isInstanceOf(v, MC.OBJECT);\n\nexport const isNonPrimitive = (v: unknown): v is object =>\n  v !== null && typeOf(v) === \"object\";\n\n// only primitive number\nexport const isNumber = (v: unknown): v is number => typeOf(v) === \"number\";\n\n/* eslint-disable-next-line @typescript-eslint/no-wrapper-object-types */\nexport const isString = (v: unknown): v is string | String =>\n  typeOf(v) === \"string\" || isInstanceOf(v, MC.STRING);\n\nexport const isLiteralString = (v: unknown): v is string =>\n  typeOf(v) === \"string\";\n\nexport const isBoolean = (v: unknown): v is boolean => typeOf(v) === \"boolean\";\n\n/* eslint-disable-next-line @typescript-eslint/no-unsafe-function-type */\nexport const isFunction = (v: unknown): v is Function =>\n  typeOf(v) === \"function\" || isInstanceOf(v, MC.FUNCTION);\n\nexport const isDoc = (target: unknown): target is Document =>\n  target === getDoc();\n\nexport const isMouseEvent = (event: Event): event is MouseEvent =>\n  isInstanceOf(event, MouseEvent);\n\nexport const isPointerEvent = (event: Event): event is PointerEvent =>\n  isInstanceOf(event, PointerEvent);\n\nexport const isTouchPointerEvent = (event: Event): event is PointerEvent =>\n  isPointerEvent(event) && getPointerType(event) === MC.S_TOUCH;\n\nexport const isWheelEvent = (event: Event): event is WheelEvent =>\n  isInstanceOf(event, WheelEvent);\n\nexport const isKeyboardEvent = (event: Event): event is KeyboardEvent =>\n  isInstanceOf(event, KeyboardEvent);\n\nexport const isTouchEvent = (event: Event): event is TouchEvent =>\n  isInstanceOf(event, TouchEvent);\n\nexport const isNode = (target: unknown) => isInstanceOf(target, Node);\n\nexport const isElement = (target: unknown) => isInstanceOf(target, Element);\n\nexport const isHTMLElement = (target: unknown) =>\n  isInstanceOf(target, HTMLElement);\n\nexport const isNodeBAfterA = (nodeA: Node, nodeB: Node) =>\n  (nodeA.compareDocumentPosition(nodeB) & Node.DOCUMENT_POSITION_FOLLOWING) !==\n  0;\n\nexport const strReplace = (\n  s: string,\n  match: string | RegExp,\n  replacement: string,\n) => s.replace(match, replacement);\n\nexport const setTimer = root.setTimeout.bind(root);\n\nexport const clearTimer = root.clearTimeout.bind(root);\n\nexport const getBoundingClientRect = (el: Element) =>\n  el.getBoundingClientRect();\n\n// Copy size properties explicitly to another object so they can be used with\n// the spread operator (DOMRect/DOMRectReadOnly's properties are not enumerable)\nexport const copyBoundingRectProps = (rect: BoundingRect): BoundingRect => {\n  return {\n    x: rect.x,\n    left: rect.left,\n    right: rect.right,\n    [MC.S_WIDTH]: rect[MC.S_WIDTH],\n    y: rect.y,\n    top: rect.top,\n    bottom: rect.bottom,\n    [MC.S_HEIGHT]: rect[MC.S_HEIGHT],\n  };\n};\n\nexport const querySelector = (root: Element | Document, selector: string) =>\n  root.querySelector(selector);\n\nexport const querySelectorAll = (root: Element | Document, selector: string) =>\n  root.querySelectorAll(selector);\n\nexport const docQuerySelector = (selector: string) =>\n  querySelector(getDoc(), selector);\n\nexport const docQuerySelectorAll = (selector: string) =>\n  querySelectorAll(getDoc(), selector);\n\nexport const getElementById = (id: string) => getDoc().getElementById(id);\n\nexport const getAttr = (el: Element, name: string) => el.getAttribute(name);\n\nexport const setAttr = (el: Element, name: string, value = \"true\") =>\n  el.setAttribute(name, value);\n\nexport const unsetAttr = (el: Element, name: string) =>\n  el.setAttribute(name, \"false\");\n\nexport const delAttr = (el: Element, name: string) => el.removeAttribute(name);\n\nexport const includes = (\n  arr: readonly unknown[] | string,\n  v: unknown,\n  startAt?: number,\n) => (arr.indexOf as (v: unknown, startAt?: number) => number)(v, startAt) >= 0;\n\nexport const filter = <\n  A extends readonly unknown[],\n  T extends A[number],\n  C extends FilterFn<A[number]> | FilterFnTypeP<A[number], T>,\n>(\n  array: A,\n  filterFn: C,\n) => array.filter(filterFn) as FilteredType<C, A[number], T>[];\n\nexport const filterBlank = <A extends readonly unknown[]>(\n  array: A | null | undefined,\n) => {\n  const result = array\n    ? filter(array, (v): v is NonNullable<A[number]> => !isEmpty(v))\n    : undefined;\n\n  return lengthOf(result) ? result : undefined;\n};\n\nexport const sizeOf = (obj: { size: number } | null | undefined) =>\n  obj?.size ?? 0;\n\nexport const lengthOf = (obj: { length: number } | null | undefined) =>\n  obj?.length ?? 0;\n\nexport const tagName = (el: Element) => el.tagName;\n\nexport const preventDefault = (event: Event) => event.preventDefault();\n\nexport const arrayFrom = MC.ARRAY.from.bind(MC.ARRAY);\n\nexport const keysOf = <T extends Record<string | symbol, unknown>>(\n  obj: T,\n): Array<keyof T & string> => MC.OBJECT.keys(obj);\n\nexport const defineProperty = MC.OBJECT.defineProperty.bind(MC.OBJECT);\n\n// use it in place of object spread\nexport const merge = <A extends readonly (object | null | undefined)[]>(\n  ...a: [...A]\n) => {\n  return MC.OBJECT.assign({}, ...a) as Spread<A>;\n};\n\nexport const copyObject = <T extends object>(obj: T) => merge(obj);\n\nexport const promiseResolve = MC.PROMISE.resolve.bind(MC.PROMISE);\n\nexport const promiseAll = MC.PROMISE.all.bind(MC.PROMISE);\n\nexport const assign = MC.OBJECT.assign.bind(MC.OBJECT);\n\nexport const freezeObj = MC.OBJECT.freeze.bind(MC.OBJECT);\n\nexport const hasOwnProp = (o: object, prop: string | symbol) =>\n  MC.OBJECT.prototype.hasOwnProperty.call(o, prop);\n\nexport const preventExtensions = MC.OBJECT.preventExtensions.bind(MC.OBJECT);\n\nexport const stringify = JSON.stringify.bind(JSON);\n\nexport const floor = MC.MATH.floor.bind(MC.MATH);\n\nexport const ceil = MC.MATH.ceil.bind(MC.MATH);\n\nexport const log2 = MC.MATH.log2.bind(MC.MATH);\n\nexport const sqrt = MC.MATH.sqrt.bind(MC.MATH);\n\nexport const max = MC.MATH.max.bind(MC.MATH);\n\nexport const min = MC.MATH.min.bind(MC.MATH);\n\nexport const abs = MC.MATH.abs.bind(MC.MATH);\n\nexport const round = MC.MATH.round.bind(MC.MATH);\n\nexport const pow = MC.MATH.pow.bind(MC.MATH);\n\nexport const parseFloat = MC.NUMBER.parseFloat.bind(MC.NUMBER);\n\nexport const isNaN = MC.NUMBER.isNaN.bind(MC.NUMBER);\n\nexport const isInstanceOf = <C extends Constructor<unknown>>(\n  value: unknown,\n  Class: C,\n): value is InstanceType<C> => value instanceof Class;\n\nexport const constructorOf = (obj: object) => obj.constructor;\n\nexport const typeOf = (obj: unknown) => typeof obj;\n\nexport const typeOrClassOf = (obj: unknown) =>\n  isObject(obj) ? constructorOf(obj)?.name : typeOf(obj);\n\nexport const parentOf = (element: Element | undefined | null) =>\n  element?.parentElement || null;\n\nexport const childrenOf = (element: Element | undefined | null) =>\n  element?.children || [];\n\nexport const targetOf = <O extends { target?: unknown } | null | undefined>(\n  obj: O,\n) =>\n  obj?.target as O extends { target: infer T }\n    ? T\n    : O extends { target?: infer T }\n      ? T | undefined\n      : undefined;\n\nexport const currentTargetOf = <\n  O extends { currentTarget?: unknown } | null | undefined,\n>(\n  obj: O,\n) =>\n  obj?.currentTarget as O extends { currentTarget: infer T }\n    ? T\n    : O extends { currentTarget?: infer T }\n      ? T | undefined\n      : undefined;\n\nexport const classList = <T extends Element | null | undefined>(el: T) =>\n  el?.classList as T extends Element ? DOMTokenList : undefined;\n\nconst S_TABINDEX = \"tabindex\";\nexport const getTabIndex = (el: Element) => getAttr(el, S_TABINDEX);\n\nexport const setTabIndex = (el: Element, index = \"0\") =>\n  setAttr(el, S_TABINDEX, index);\n\nexport const unsetTabIndex = (el: Element) => delAttr(el, S_TABINDEX);\n\nexport const remove = (obj: { remove: () => void } | null | undefined) =>\n  obj?.remove();\n\nexport const deleteObjKey = <O extends object>(obj: O, key: keyof O) =>\n  delete obj[key];\n\nexport const deleteKey = <K, V>(\n  map: MapBase<K, V> | SetBase<K> | null | undefined,\n  key: K,\n) => map?.delete(key);\n\nexport const elScrollTo = (\n  el: Element,\n  coords: { top?: number; left?: number },\n  behavior: ScrollBehavior = \"instant\",\n) => el.scrollTo(merge({ behavior }, coords));\n\nexport const elScrollBy = (\n  el: Element,\n  coords: { top?: number; left?: number },\n  behavior: ScrollBehavior = \"instant\",\n) => el.scrollBy(merge({ behavior }, coords));\n\nexport const newPromise = <T>(\n  executor: (\n    resolve: (value: T) => void,\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    reject: (reason?: any) => void,\n  ) => void,\n) => new Promise(executor);\n\nexport const newMap = <K, V>(entries?: readonly (readonly [K, V])[] | null) =>\n  new Map(entries);\n\nexport const newWeakMap = <K extends WeakKey, V>(\n  entries?: readonly (readonly [K, V])[] | null,\n) => new WeakMap(entries);\n\nexport const newSet = <T>(values?: readonly T[] | null) => new Set(values);\n\nexport const newWeakSet = <T extends WeakKey>(values?: readonly T[] | null) =>\n  new WeakSet(values);\n\nexport const newIntersectionObserver = (\n  callback: IntersectionObserverCallback,\n  options?: IntersectionObserverInit,\n) => new IntersectionObserver(callback, options);\n\nexport const newResizeObserver = (callback: ResizeObserverCallback) =>\n  typeof ResizeObserver === \"undefined\" ? null : new ResizeObserver(callback);\n\nexport const newMutationObserver = (callback: MutationCallback) =>\n  new MutationObserver(callback);\n\nexport const usageError = (msg: string) => new LisnUsageError(msg);\n\nexport const bugError = (msg: string) => new LisnBugError(msg);\n\nexport const illegalConstructorError = (useWhat: string) =>\n  usageError(`Illegal constructor. Use ${useWhat}.`);\n\nconst CONSOLE = console;\nexport const consoleDebug = CONSOLE.debug.bind(CONSOLE);\n\nexport const consoleLog = CONSOLE.log.bind(CONSOLE);\n\nexport const consoleInfo = CONSOLE.info.bind(CONSOLE);\n\nexport const consoleWarn = CONSOLE.warn.bind(CONSOLE);\n\nexport const consoleError = CONSOLE.error.bind(CONSOLE);\n\n// --------------------\n\ntype FilterFn<V> = (value: V, index: number, array: readonly V[]) => unknown;\ntype FilterFnTypeP<V, T extends V> = (\n  value: V,\n  index: number,\n  array: readonly V[],\n) => value is T;\ntype FilteredType<C extends FilterFn<V> | FilterFnTypeP<V, T>, V, T extends V> =\n  C extends FilterFnTypeP<V, infer T> ? T : V;\n","/**\n * @module Settings\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\n/**\n * LISN's settings.\n * @readonly\n *\n * If you wish to modify them, then you need to do so immediately after loading\n * LISN before you instantiate any watchers, etc. For example:\n *\n * ```html\n * <!doctype html>\n * <html>\n *   <head>\n *     <meta charset=\"UTF-8\" />\n *     <meta name=\"viewport\" content=\"width=device-width\" />\n *     <script src=\"lisn.js\" charset=\"utf-8\"></script>\n *     <script charset=\"utf-8\">\n *       // modify LISN settings, for example:\n *       LISN.settings.deviceBreakpoints.desktop = 1024;\n *     </script>\n *   </head>\n *   <body>\n *   </body>\n * </html>\n * ```\n */\nexport const settings = MH.preventExtensions({\n  /**\n   * A unique selector (preferably `#some-id`) for the element that holds the\n   * main page content, if other than `document.body`.\n   *\n   * E.g. if your main content is inside a custom scrollable container, rather\n   * than directly in `document.body`, then pass a selector for it here.\n   *\n   * The element must be scrollable, i.e. have a fixed size and `overflow: scroll`.\n   *\n   * **IMPORTANT:** You must set this before initializing any watchers, widgets,\n   * etc. If you are using the HTML API, then you must set this before the\n   * document `readyState` becomes interactive.\n   *\n   * @defaultValue null\n   * @category Generic\n   */\n  mainScrollableElementSelector: null as string | null,\n\n  /**\n   * This setting allows us to automatically wrap certain elements or groups of\n   * elements into a single `div` or `span` element to allow for more reliable\n   * or efficient working of certain features. In particular:\n   *\n   * 1. View tracking using relative offsets and a scrolling root **requires wrapping**\n   *\n   * When using view position tracking with a percentage offset specification\n   * (e.g. `top: 50%`) _and_ a custom root element that is scrollable_ (and\n   * obviously has a size smaller than the content), you **MUST** enable\n   * content wrapping, otherwise the trigger offset elements cannot be\n   * positioned relative to the scrolling _content size_.\n   *\n   * 2. Scroll tracking\n   *\n   * When using scroll tracking, including scrollbars, on a scrolling element\n   * (that obviously has a size smaller than the content), it's recommended for\n   * the content of the scrollable element to be wrapped in a single `div`\n   * container, to allow for more efficient and reliable detection of changes\n   * in the _scrollable content_ size.\n   *\n   * If content wrapping is disabled, when scroll tracking is used on a given\n   * element (other than the root of the document), each of the immediate\n   * children of the scrollable element have their sizes tracked, which could\n   * lead to more resource usage.\n   *\n   * 3. Scrollbars on custom elements\n   *\n   * When you setup a {@link Widgets.Scrollbar} widget for a custom\n   * scrollable element that may not be the main scrollable (and therefore\n   * won't take up the full viewport all the time), then to be able to position\n   * to scrollbar relative to the scrollable element, its content needs to be\n   * wrapped.\n   *\n   * If this setting is OFF, then the scrollbars on custom elements have to\n   * rely on position sticky which doesn't have as wide browser support as the\n   * default option.\n   *\n   * 4. Animating on viewport enter/leave\n   *\n   * For elements that have transforms applied as part of an animation or\n   * transition, if you wish to run or reverse the animation when the element\n   * enters or leaves the viewport, then the transform can interfere with the\n   * viewport tracking. For example, if undoing the animation as soon as the\n   * element leaves the viewport makes it enter it again (because it's moved),\n   * then this will result in a glitch.\n   *\n   * If content wrapping is disabled, then to get around such issues, a dummy\n   * element is positioned on top of the actual element and is the one tracked\n   * across the viewport instead. Either approach could cause issues depending\n   * on your CSS, so it's your choice which one is applied.\n   *\n   * ----------\n   *\n   * If you can, it's recommended to leave this setting ON. You can still\n   * disable wrapping on a per-element basis by setting `data-lisn-no-wrap`\n   * attribute on it.\n   *\n   * @defaultValue true\n   * @category Generic\n   */\n  contentWrappingAllowed: true,\n\n  /**\n   * The timeout in milliseconds for waiting for the `document.readyState` to\n   * become `complete`. The timer begins _once the `readyState` becomes\n   * `interactive`_.\n   *\n   * The page will be considered \"ready\" either when the `readyState` becomes\n   * `complete` or this many milliseconds after it becomes `interactive`,\n   * whichever is first.\n   *\n   * Set to 0 or a negative number to disable timeout.\n   *\n   * @defaultValue 2000 // i.e. 2s\n   * @category Generic\n   */\n  pageLoadTimeout: 2000,\n\n  /**\n   * This enables LISN's HTML API. Then the page will be parsed (and watched\n   * for dynamically added elements at any time) for any elements matching a\n   * widget selector. Any element that has a matching CSS class or data\n   * attribute will be setup according to the relevant widget, which may wrap,\n   * clone or add attributes to the element.\n   *\n   * This is enabled by default for bundles, and disabled otherwise.\n   *\n   * **IMPORTANT:** You must set this before the document `readyState` becomes\n   * interactive.\n   *\n   * @defaultValue `false` in general, but `true` in browser bundles\n   * @category Widgets\n   */\n  autoWidgets: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.hideNative | ScrollbarConfig.hideNative}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarHideNative: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.onMobile | ScrollbarConfig.onMobile}.\n   *\n   * @defaultValue false\n   * @category Widgets/Scrollbar\n   */\n  scrollbarOnMobile: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.positionH | ScrollbarConfig.positionH}.\n   *\n   * @defaultValue \"bottom\"\n   * @category Widgets/Scrollbar\n   */\n  scrollbarPositionH: \"bottom\",\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.positionV | ScrollbarConfig.positionV}.\n   *\n   * @defaultValue \"right\"\n   * @category Widgets/Scrollbar\n   */\n  scrollbarPositionV: \"right\",\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.autoHide | ScrollbarConfig.autoHide}.\n   *\n   * @defaultValue -1\n   * @category Widgets/Scrollbar\n   */\n  scrollbarAutoHide: -1,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.clickScroll | ScrollbarConfig.clickScroll}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarClickScroll: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.dragScroll | ScrollbarConfig.dragScroll}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarDragScroll: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.useHandle | ScrollbarConfig.useHandle}.\n   *\n   * @defaultValue false\n   * @category Widgets/Scrollbar\n   */\n  scrollbarUseHandle: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.diffTolerance | SameHeightConfig.diffTolerance}.\n   *\n   * @defaultValue 15\n   * @category Widgets/SameHeight\n   */\n  sameHeightDiffTolerance: 15,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.resizeThreshold | SameHeightConfig.resizeThreshold}.\n   *\n   * @defaultValue 5\n   * @category Widgets/SameHeight\n   */\n  sameHeightResizeThreshold: 5,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.debounceWindow | SameHeightConfig.debounceWindow}.\n   *\n   * @defaultValue 100\n   * @category Widgets/SameHeight\n   */\n  sameHeightDebounceWindow: 100,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.minGap | SameHeightConfig.minGap}.\n   *\n   * @defaultValue 30\n   * @category Widgets/SameHeight\n   */\n  sameHeightMinGap: 30,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.maxFreeR | SameHeightConfig.maxFreeR}.\n   *\n   * @defaultValue 0.4\n   * @category Widgets/SameHeight\n   */\n  sameHeightMaxFreeR: 0.4,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.maxWidthR | SameHeightConfig.maxWidthR}.\n   *\n   * @defaultValue 1.7\n   * @category Widgets/SameHeight\n   */\n  sameHeightMaxWidthR: 1.7,\n\n  /**\n   * Set custom device breakpoints as width in pixels.\n   *\n   * The value of each sets its lower limit, i.e. it specifies a device whose\n   * width is larger than the given value (and up to the next larger one).\n   *\n   * If you specify only some of the below devices, then the other ones will\n   * keep their default breakpoint values.\n   *\n   * Adding device types, other than the ones listed below is not supported.\n   *\n   * @category Device layouts\n   */\n  deviceBreakpoints: {\n    /**\n     * This should be left as 0 as it's the catch-all for anything narrower\n     * than \"mobile-wide\".\n     *\n     * @defaultValue 0\n     */\n    mobile: 0,\n\n    /**\n     * Anything wider than the given value is \"mobile-wide\", up to the value of\n     * \"tablet\".\n     *\n     * @defaultValue 576\n     */\n    \"mobile-wide\": 576,\n\n    /**\n     * Anything wider than the given value is \"tablet\", up to the value of\n     * \"desktop\".\n     *\n     * @defaultValue 768\n     */\n    tablet: 768, // tablet is anything above this (up to desktop)\n\n    /**\n     * Anything wider than the given value is \"desktop\".\n     *\n     * @defaultValue 992\n     */\n    desktop: 992, // desktop is anything above this\n  },\n\n  /**\n   * Set custom aspect ratio breakpoints (as ratio of width to height).\n   *\n   * The value of each sets its lower limit, i.e. it specifies an aspect ratio\n   * that is wider than the given value (and up to the next wider one).\n   *\n   * If you specify only some of the below aspect ratios, then the other ones\n   * will keep their default breakpoint values.\n   *\n   * Adding aspect ratio types, other than the ones listed below is not\n   * supported.\n   *\n   * @category Device layouts\n   */\n  aspectRatioBreakpoints: {\n    /**\n     * This should be left as 0 as it's the catch-all for anything with\n     * a narrower aspect ratio than \"tall\".\n     *\n     * @defaultValue 0\n     */\n    \"very-tall\": 0, // very tall is up to 9:16\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"tall\", up to\n     * the value of \"square\".\n     *\n     * @defaultValue 9 / 16\n     */\n    tall: 9 / 16, // tall is between 9:16 and 3:4\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"square\", up\n     * to the value of \"wide\".\n     *\n     * @defaultValue 3 / 4\n     */\n    square: 3 / 4, // square is between 3:4 and 4:3\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"wide\", up to\n     * the value of \"very-wide\".\n     *\n     * @defaultValue 4 / 3\n     */\n    wide: 4 / 3, // wide is between 4:3 and 16:9\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"very-wide\".\n     *\n     * @defaultValue 16 / 9\n     */\n    \"very-wide\": 16 / 9, // very wide is above 16:9\n  },\n\n  /**\n   * The CSS class that enables light theme.\n   *\n   * **IMPORTANT:** If you change this, you should also change the\n   * `$light-theme-cls` variable in the SCSS configuration, or otherwise add the\n   * following to your CSS:\n   *\n   * :root,\n   * .custom-light-theme-cls {\n   *   --lisn-color-fg: some-dark-color;\n   *   --lisn-color-fg-t: some-dark-color-with-transparency;\n   *   --lisn-color-bg: some-light-color;\n   *   --lisn-color-bg-t: some-light-color-with-transparency;\n   * }\n   */\n  lightThemeClassName: \"light-theme\",\n\n  /**\n   * The CSS class that enables dark theme.\n   *\n   * **IMPORTANT:** If you change this, you should also change the\n   * `$dark-theme-cls` variable in the SCSS configuration, or otherwise add the\n   * following to your CSS:\n   *\n   * .custom-dark-theme-cls {\n   *   --lisn-color-fg: some-light-color;\n   *   --lisn-color-fg-t: some-light-color-with-transparency;\n   *   --lisn-color-bg: some-dark-color;\n   *   --lisn-color-bg-t: some-dark-color-with-transparency;\n   * }\n   */\n  darkThemeClassName: \"dark-theme\",\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some key (arrows) and wheel events (where the browser reports the delta\n   * mode to be LINE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 40\n   * @category Gestures\n   */\n  deltaLineHeight: 40,\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some wheel events (where the browser reports the delta mode to be PAGE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 1600\n   * @category Gestures\n   */\n  deltaPageWidth: 1600,\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some key (PageUp/PageDown/Space) and wheel events (where the browser\n   * reports the delta mode to be PAGE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 800\n   * @category Gestures\n   */\n  deltaPageHeight: 800,\n\n  /**\n   * Controls the debugging verbosity level. Values from 0 (none) to 10 (insane)\n   * are recognized.\n   *\n   * **Note:** Logging is not available in bundles except in the \"debug\" bundle.\n   *\n   * @defaultValue `0` except in the \"debug\" bundle where it defaults to 10\n   * @category Logging\n   */\n  verbosityLevel: 0,\n\n  /**\n   * The URL of the remote logger to connect to. LISN uses\n   * {@link https://socket.io/docs/v4/client-api/ | socket.io-client}\n   * to talk to the client and emits messages on the following namespaces:\n   *\n   * - `console.debug`\n   * - `console.log`\n   * - `console.info`\n   * - `console.warn`\n   * - `console.error`\n   *\n   * There is a simple logging server that ships with LISN, see the source\n   * code repository.\n   *\n   * You can always explicitly disable remote logging on a given page by\n   * setting `disableRemoteLog=1` query parameter in the URL.\n   *\n   * **Note:** Logging is not available in bundles (except in the `debug` bundle).\n   *\n   * @defaultValue null\n   * @category Logging\n   */\n  remoteLoggerURL: null as string | null,\n\n  /**\n   * Enable remote logging only on mobile devices.\n   *\n   * You can always disable remote logging for any page by setting\n   * `disableRemoteLog=1` URL query parameter.\n   *\n   * **Note:** Logging is not available in bundles (except in the `debug` bundle).\n   *\n   * @defaultValue false\n   * @category Logging\n   */\n  remoteLoggerOnMobileOnly: false,\n});\n\n// --------------------\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Point, Vector, AtLeastOne } from \"@lisn/globals/types\";\n\n/**\n * Round a number to the given decimal precision (default is 0).\n *\n * @param {} [numDecimal = 0]\n *\n * @category Math\n */\nexport const roundNumTo = (value: number, numDecimal = 0) => {\n  const multiplicationFactor = MH.pow(10, numDecimal);\n  return MH.round(value * multiplicationFactor) / multiplicationFactor;\n};\n\n/**\n * Returns true if the given value is a valid _finite_ number.\n *\n * @category Validation\n */\nexport const isValidNum = (value: unknown): value is number =>\n  MH.isNumber(value) && MC.NUMBER.isFinite(value);\n\n/**\n * If the given value is a valid _finite_ number, it is returned, otherwise\n * the default is returned.\n *\n * @category Math\n */\nexport const toNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = MH.isLiteralString(value) ? MH.parseFloat(value) : value;\n\n  // parseFloat will strip trailing non-numeric characters, so we check that\n  // the parsed number is equal to the string, if it was a string, using loose\n  // equality, in order to make sure the entire string was a number.\n  return isValidNum(numValue) && numValue == value ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid _finite integer_ number, it is returned,\n * otherwise the default is returned.\n *\n * @category Math\n */\nexport const toInt = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  let numValue = toNum(value, null);\n  numValue = numValue === null ? numValue : MH.floor(numValue);\n\n  // Ensure that the parsed int equaled the original by loose equality.\n  return isValidNum(numValue) && numValue == value ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid non-negative _finite_ number, it is returned,\n * otherwise the default is returned.\n *\n * @category Math\n */\nexport const toNonNegNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = toNum(value, null);\n  return numValue !== null && numValue >= 0 ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid positive number, it is returned, otherwise the\n * default is returned.\n *\n * @category Math\n */\nexport const toPosNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = toNum(value, null);\n  return numValue !== null && numValue > 0 ? numValue : defaultValue;\n};\n\n/**\n * Returns the given number bound by min and/or max value.\n *\n * If the value is not a valid number, then `defaultValue` is returned if given\n * (_including if it is null_), otherwise `limits.min` if given and not null,\n * otherwise `limits.max` if given and not null, or finally 0.\n *\n * If the value is outside the bounds, then:\n * - if `defaultValue` is given, `defaultValue` is returned (_including if it\n *   is null_)\n * - otherwise, the min or the max value (whichever one is violated) is\n *   returned\n *\n * @category Math\n */\nexport const toNumWithBounds = <D extends number | false | null = number>(\n  value: unknown,\n  limits: AtLeastOne<{ min: number | null; max: number | null }>,\n  defaultValue?: D,\n): number | D => {\n  const isDefaultGiven = defaultValue !== undefined;\n  const numValue = toNum(value, null);\n  const min = limits?.min ?? null;\n  const max = limits?.max ?? null;\n\n  let result: number | D;\n  if (!isValidNum(numValue)) {\n    result = isDefaultGiven ? defaultValue : (min ?? max ?? 0);\n  } else if (min !== null && numValue < min) {\n    result = isDefaultGiven ? defaultValue : min;\n  } else if (max !== null && numValue > max) {\n    result = isDefaultGiven ? defaultValue : max;\n  } else {\n    result = numValue;\n  }\n\n  return result;\n};\n\n/**\n * Returns the largest absolute value among the given ones.\n *\n * The result is always positive.\n *\n * @category Math\n */\nexport const maxAbs = (...values: number[]) =>\n  MH.max(...values.map((v) => MH.abs(v)));\n\n/**\n * Returns the smallest absolute value among the given ones.\n *\n * The result is always positive.\n *\n * @category Math\n */\nexport const minAbs = (...values: number[]) =>\n  MH.min(...values.map((v) => MH.abs(v)));\n\n/**\n * Returns the value with the largest absolute value among the given ones.\n *\n * The result can be negative.\n *\n * @category Math\n */\nexport const havingMaxAbs = (...values: number[]): number =>\n  MH.lengthOf(values)\n    ? values.sort((a, b) => MH.abs(b) - MH.abs(a))[0]\n    : -MC.INFINITY;\n\n/**\n * Returns the value with the smallest absolute value among the given ones.\n *\n * The result can be negative.\n *\n * @category Math\n */\nexport const havingMinAbs = (...values: number[]) =>\n  MH.lengthOf(values)\n    ? values.sort((a, b) => MH.abs(a) - MH.abs(b))[0]\n    : MC.INFINITY;\n\n/**\n * Returns the angle (in radians) that the vector defined by the given x, y\n * makes with the positive horizontal axis.\n *\n * The angle returned is in the range -PI to PI, not including -PI.\n *\n * @category Math\n */\nexport const hAngle = (x: number, y: number) =>\n  normalizeAngle(MC.MATH.atan2(y, x)); // ensure that -PI is transformed to +PI\n\n/**\n * Normalizes the given angle (in radians) so that it's in the range -PI to PI,\n * not including -PI.\n *\n * @category Math\n */\nexport const normalizeAngle = (a: number) => {\n  // ensure it's positive in the range 0 to 2 PI\n  while (a < 0 || a > MC.PI * 2) {\n    a += (a < 0 ? 1 : -1) * MC.PI * 2;\n  }\n\n  // then, if > PI, offset by - 2PI\n  return a > MC.PI ? a - MC.PI * 2 : a;\n};\n\n/**\n * Converts the given angle in degrees to radians.\n *\n * @category Math\n */\nexport const degToRad = (a: number) => (a * MC.PI) / 180;\n\n/**\n * Converts the given angle in radians to degrees.\n *\n * @category Math\n */\nexport const radToDeg = (a: number) => (a * 180) / MC.PI;\n\n/**\n * Returns true if the given vectors point in the same direction.\n *\n * @param {} angleDiffThreshold\n *                  Sets the threshold in degrees when comparing the angles of\n *                  two vectors. E.g. for 5 degrees threshold, directions\n *                  whose vectors are within 5 degrees of each other are\n *                  considered parallel.\n *                  It doesn't make sense for this value to be < 0 or >= 90\n *                  degrees. If it is, it's forced to be positive (absolute)\n *                  and <= 89.99.\n *\n * @category Math\n */\nexport const areParallel = (vA: Vector, vB: Vector, angleDiffThreshold = 0) => {\n  const angleA = hAngle(vA[0], vA[1]);\n  const angleB = hAngle(vB[0], vB[1]);\n  angleDiffThreshold = MH.min(89.99, MH.abs(angleDiffThreshold));\n\n  return (\n    MH.abs(normalizeAngle(angleA - angleB)) <= degToRad(angleDiffThreshold)\n  );\n};\n\n/**\n * Returns true if the given vectors point in the opposite direction.\n *\n * @param {} angleDiffThreshold\n *                  Sets the threshold in degrees when comparing the angles of\n *                  two vectors. E.g. for 5 degrees threshold, directions\n *                  whose vectors are within 175-185 degrees of each other are\n *                  considered antiparallel.\n *                  It doesn't make sense for this value to be < 0 or >= 90\n *                  degrees. If it is, it's forced to be positive (absolute)\n *                  and <= 89.99.\n *\n * @category Math\n */\nexport const areAntiParallel = (\n  vA: Vector,\n  vB: Vector,\n  angleDiffThreshold = 0,\n) => areParallel(vA, [-vB[0], -vB[1]], angleDiffThreshold);\n\n/**\n * Returns the distance between two points on the screen.\n *\n * @category Math\n */\nexport const distanceBetween = (ptA: Point, ptB: Point) =>\n  MH.sqrt(MH.pow(ptA[0] - ptB[0], 2) + MH.pow(ptA[1] - ptB[1], 2));\n\n/**\n * Returns the two roots of the quadratic equation with coefficients\n * `a`, `b` & `c`, i.e. `a * x^2 + b * x + c = 0`\n *\n * The roots may be `NaN` if the quadratic has no real solutions.\n *\n * @category Math\n */\nexport const quadraticRoots = (a: number, b: number, c: number) => {\n  const z = MH.sqrt(b * b - 4 * a * c);\n  return [(-b + z) / (2 * a), (-b - z) / (2 * a)];\n};\n\n/**\n * Returns the value that an \"easing\" quadratic function would have at the\n * given x.\n *\n * @see https://easings.net/#easeInOutQuad\n *\n * @category Math\n */\nexport const easeInOutQuad = (x: number) =>\n  x < 0.5 ? 2 * x * x : 1 - MH.pow(-2 * x + 2, 2) / 2;\n\n/**\n * Returns an array of object's keys sorted by the numeric value they hold.\n *\n * @category Math\n */\nexport const sortedKeysByVal = <T extends Record<string, number>>(\n  obj: T,\n  descending = false,\n): Array<keyof T> => {\n  if (descending) {\n    return MH.keysOf(obj).sort((x: keyof T, y: keyof T) => obj[y] - obj[x]);\n  }\n\n  return MH.keysOf(obj).sort((x: keyof T, y: keyof T) => obj[x] - obj[y]);\n};\n\n/**\n * Returns the key in the given object which holds the largest numeric value.\n *\n * If the object is empty, returns `undefined`.\n *\n * @category Math\n */\nexport const keyWithMaxVal = (\n  obj: Record<string, number>,\n): string | undefined => {\n  return sortedKeysByVal(obj).slice(-1)[0];\n};\n\n/**\n * Returns the key in the given object which holds the smallest numeric value.\n *\n * If the object is empty, returns `undefined`.\n *\n * @category Math\n */\nexport const keyWithMinVal = (\n  obj: Record<string, number>,\n): string | undefined => {\n  return sortedKeysByVal(obj).slice(0, 1)[0];\n};\n\n/**\n * Takes two integers and returns a bitmask that covers all values between\n * 1 << start and 1 << end, _including the starting and ending one_.\n *\n * If pStart > pEnd, they are reversed.\n *\n * getBitmask(start, start) always returns 1 << start\n * getBitmask(start, end) always returns same as getBitmask(end, start)\n *\n * @category Math\n */\nexport const getBitmask = (start: number, end: number): number =>\n  start > end\n    ? getBitmask(end, start)\n    : (~0 >>> (32 - end - 1 + start)) << start;\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { roundNumTo } from \"@lisn/utils/math\";\n\nexport const isTouchScreen = () =>\n  MH.hasDOM() ? matchMedia(\"(any-pointer: coarse)\").matches : false;\n\nexport const copyExistingKeys = <T extends object>(fromObj: T, toObj: T) => {\n  for (const key in toObj) {\n    if (!MH.hasOwnProp(toObj, key)) {\n      continue;\n    }\n\n    if (key in fromObj) {\n      if (MH.isNonPrimitive(fromObj[key]) && MH.isNonPrimitive(toObj[key])) {\n        copyExistingKeys(fromObj[key], toObj[key]);\n      } else {\n        toObj[key] = fromObj[key];\n      }\n    }\n  }\n};\n\n// Omits the keys in object keysToRm from obj. This is to avoid hardcording the\n// key names as a string so as to allow minifier to mangle them, and to avoid\n// using object spread.\nexport const omitKeys = <\n  O extends object,\n  R extends { [K in keyof O]?: unknown },\n>(\n  obj: O,\n  keysToRm: R,\n): Omit<O, keyof R> => {\n  const res: Partial<O> = {};\n  let key: keyof O;\n\n  for (key in obj) {\n    if (!(key in keysToRm)) {\n      res[key] = obj[key];\n    }\n  }\n\n  return res as Omit<O, keyof R>;\n};\n\n// Returns true if the two objects are equal. If values are numeric, it will\n// round to the given number of decimal places.\nexport const compareValuesIn = <T extends object>(\n  objA: T,\n  objB: T,\n  roundTo = 3,\n) => {\n  for (const key in objA) {\n    if (!MH.hasOwnProp(objA, key)) {\n      continue;\n    }\n\n    const valA = objA[key];\n    const valB = objB[key];\n\n    if (MH.isNonPrimitive(valA) && MH.isNonPrimitive(valB)) {\n      if (!compareValuesIn(valA, valB)) {\n        return false;\n      }\n    } else if (MH.isNumber(valA) && MH.isNumber(valB)) {\n      if (roundNumTo(valA, roundTo) !== roundNumTo(valB, roundTo)) {\n        return false;\n      }\n    } else if (valA !== valB) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const keyExists = <T extends object>(\n  obj: T,\n  key: string | number | symbol,\n): key is keyof T => MH.isNonPrimitive(obj) && key in obj;\n\nexport const toArrayIfSingle = <T>(value?: T | T[] | null | undefined): T[] =>\n  MH.isArray(value) ? value : !MH.isNullish(value) ? [value] : [];\n\nexport const toBool = (value: unknown) =>\n  value === true || value === \"true\" || value === \"\"\n    ? true\n    : MH.isNullish(value) || value === false || value === \"false\"\n      ? false\n      : null;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Size, StrRecord } from \"@lisn/globals/types\";\n\n/**\n * Formats an object as a string. It supports more meaningful formatting as\n * string for certain types rather than using the default string\n * representation.\n *\n * **NOTE:** This is not intended for serialization of data that needs to be\n * de-serialized. Only for debugging output.\n *\n * @param {} value     The value to format as string.\n * @param {} [maxLen]  Maximum length of the returned string. If not given or\n *                     is <= 0, the string is not truncated. Otherwise, if the\n *                     result is longer than maxLen, it is truncated to\n *                     `maxLen - 3` and added a suffix of \"...\".\n *                     Note that if `maxLen` is > 0 but <= 3, the result is\n *                     always \"...\"\n *\n * @category Text\n */\nexport const formatAsString = (value: unknown, maxLen?: number) => {\n  const result = maybeConvertToString(value, false);\n\n  if (!MH.isNullish(maxLen) && maxLen > 0 && MH.lengthOf(result) > maxLen) {\n    return result.slice(0, MH.max(0, maxLen - 3)) + \"...\";\n  }\n\n  return result;\n};\n\n/**\n * Join an array of values as string using separator. It uses\n * {@link formatAsString} rather than the default string representation as\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join | Array:join} would.\n *\n * @param {} separator  The separator to use to delimit each argument.\n * @param {} args       Objects or values to convert to string and join.\n *\n * @category Text\n */\nexport const joinAsString = (separator: string, ...args: unknown[]) =>\n  args.map((a) => formatAsString(a)).join(separator);\n\n/**\n * Similar to\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split | String.prototype.split}\n * except that\n * 1. `limit` is interpreted as the maximum number of splits, and the\n *   returned array contains `limit + 1` entries. Also if `limit` is given and\n *   the number of substrings is greater than the limit, all the remaining\n *   substrings are present in the final substring.\n * 2. If input is an empty string (or containing only whitespace), returns an\n *    empty array.\n *\n * @example\n * ```javascript\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 0); // -> ['foo, bar, baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 1); // -> ['foo', 'bar, baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 2); // -> ['foo', 'bar', 'baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 3); // -> ['foo', 'bar', 'baz']\n * ```\n *\n * @param {} trim  If true, entries will be trimmed for whitespace after splitting.\n *\n * @param {} limit If not given or < 0, the string will be split on every\n *                 occurrence of `separator`. Otherwise, it will be split on\n *                 the first `limit` number of occurrences of `separator`.\n *\n * @category Text\n */\nexport const splitOn = (\n  input: string,\n  separator: string | RegExp,\n  trim?: boolean,\n  limit?: number,\n) => {\n  if (!input.trim()) {\n    return [];\n  }\n\n  limit = limit ?? -1;\n\n  const output: string[] = [];\n  const addEntry = (s: string) => output.push(trim ? s.trim() : s);\n\n  while (limit--) {\n    let matchIndex = -1,\n      matchLength = 0;\n    if (MH.isLiteralString(separator)) {\n      matchIndex = input.indexOf(separator);\n      matchLength = MH.lengthOf(separator);\n    } else {\n      const match = separator.exec(input);\n      matchIndex = match?.index ?? -1;\n      matchLength = match ? MH.lengthOf(match[0]) : 0;\n    }\n\n    if (matchIndex < 0) {\n      break;\n    }\n\n    addEntry(input.slice(0, matchIndex));\n    input = input.slice(matchIndex + matchLength);\n  }\n\n  addEntry(input);\n  return output;\n};\n\n/**\n * Converts a kebab-cased-string to camelCase.\n * The result is undefined if the input string is not formatted in\n * kebab-case.\n *\n * @category Text\n */\nexport const kebabToCamelCase = MH.kebabToCamelCase;\n\n/**\n * Converts a camelCasedString to kebab-case.\n * The result is undefined if the input string is not formatted in\n * camelCase.\n *\n * @category Text\n */\nexport const camelToKebabCase = MH.camelToKebabCase;\n\n/**\n * Generates a random string of a fixed length.\n *\n * **IMPORTANT:** This is _not_ suitable for cryptographic applications.\n *\n * @param {} [nChars = 8]  The length of the returned stirng.\n *\n * @category Text\n */\nexport const randId = (nChars = 8) => {\n  const segment = () =>\n    MH.floor(100000 + MC.MATH.random() * 900000).toString(36);\n\n  let s = \"\";\n  while (MH.lengthOf(s) < nChars) {\n    s += segment();\n  }\n  return s.slice(0, nChars);\n};\n\n/**\n * Returns an array of numeric margins in pixels from the given margin string.\n * The string should contain margins in either pixels or percentage; other\n * units are not supported.\n *\n * Percentage values are converted to pixels relative to the given\n * `absoluteSize`: left/right margins relative to the width, and top/bottom\n * margins relative to the height.\n *\n * Note that for the margin property, percentages are always relative to the\n * WIDTH of the parent, so you should pass the parent width as both the width\n * and the height keys in `absoluteSize`. But for IntersectionObserver's\n * `rootMargin`, top/bottom margin is relative to the height of the root, so\n * pass the actual root size.\n *\n * @return {} [topMarginInPx, rightMarginInPx, bottomMarginInPx, leftMarginInPx]\n *\n * @category Text\n */\nexport const toMargins = (value: string, absoluteSize: Size) => {\n  const toPxValue = (strValue: string | undefined, index: number) => {\n    let margin = MH.parseFloat(strValue || \"\") || 0;\n\n    if (strValue === margin + \"%\") {\n      margin *=\n        index % 2 ? absoluteSize[MC.S_HEIGHT] : absoluteSize[MC.S_WIDTH];\n    }\n\n    return margin;\n  };\n\n  const parts = splitOn(value, \" \", true);\n  const margins: [number, number, number, number] = [\n    // top\n    toPxValue(parts[0], 0),\n    // right\n    toPxValue(parts[1] ?? parts[0], 1),\n    // bottom\n    toPxValue(parts[2] ?? parts[0], 2),\n    // left\n    toPxValue(parts[3] ?? parts[1] ?? parts[0], 3),\n  ];\n\n  return margins;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const objToStrKey = (obj: StrRecord): string =>\n  MH.stringify(flattenForSorting(obj));\n\n// --------------------\n\nconst flattenForSorting = (obj: StrRecord): unknown[] => {\n  const array = MH.isArray(obj)\n    ? obj\n    : MH.keysOf(obj)\n        .sort()\n        .map((k) => obj[k]);\n\n  return array.map((value) => {\n    if (\n      MH.isArray(value) ||\n      (MH.isNonPrimitive(value) && MH.constructorOf(value) === MC.OBJECT)\n    ) {\n      return flattenForSorting(value);\n    }\n    return value;\n  });\n};\n\nconst stringifyReplacer = (key: string, value: unknown) =>\n  key ? maybeConvertToString(value, true) : value;\n\nconst maybeConvertToString = <B extends boolean, V>(\n  value: V,\n  nested: B,\n): B extends false ? string : string | V => {\n  let result: string | V = \"\";\n\n  if (MH.isElement(value)) {\n    const classStr = MH.classList(value).toString().trim();\n\n    result = value.id\n      ? \"#\" + value.id\n      : `<${MH.tagName(value)}${classStr ? ' class=\"' + classStr + '\"' : \"\"}>`;\n\n    //\n  } else if (MH.isInstanceOf(value, Error)) {\n    /* istanbul ignore else */\n    if (\"stack\" in value && MH.isString(value.stack)) {\n      result = value.stack;\n    } else {\n      result = `Error: ${value.message}`;\n    }\n\n    //\n  } else if (MH.isArray(value)) {\n    result =\n      \"[\" +\n      value\n        .map((v) =>\n          MH.isString(v) ? MH.stringify(v) : maybeConvertToString(v, false),\n        )\n        .join(\",\") +\n      \"]\";\n\n    //\n  } else if (MH.isIterableObject(value)) {\n    result =\n      MH.typeOrClassOf(value) +\n      \"(\" +\n      maybeConvertToString(MH.arrayFrom(value), false) +\n      \")\";\n\n    //\n  } else if (MH.isNonPrimitive(value)) {\n    result = nested ? value : MH.stringify(value, stringifyReplacer);\n\n    //\n  } else {\n    // primitive\n    result = nested ? value : MC.STRING(value);\n  }\n\n  return result as B extends false ? string : string | V;\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\n\nimport { CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { toNum } from \"@lisn/utils/math\";\nimport { toBool } from \"@lisn/utils/misc\";\nimport { splitOn } from \"@lisn/utils/text\";\n\n/**\n * Returns true if the input is a string array or comma-separated string, whose\n * elements are valid according to the `validator` function.\n *\n * @param {} allowEmpty If `false`, then input without any entries is\n * considered _invalid_.\n *\n * @category Validation\n */\nexport const isValidStrList = <T extends string = string>(\n  value: unknown,\n  checkFn: (value: string) => value is T,\n  allowEmpty = true,\n): value is CommaSeparatedStr<T> | T[] => {\n  try {\n    const res = validateStrList(\"\", value, checkFn);\n    return allowEmpty || !MH.isNullish(res);\n  } catch (err) {\n    if (MH.isInstanceOf(err, LisnUsageError)) {\n      return false;\n    }\n    throw err;\n  }\n};\n\n/**\n * Returns an array of strings from the given list while validating each one\n * using the `checkFn` function.\n *\n * If it returns without throwing, the input is necessarily valid.\n * If the result is an empty array, it will return `null`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the input is not a string or array of strings, or if any\n *                entries do not pass `checkFn`.\n *\n * @param {} key Used in the error message thrown\n *\n * @return {} `undefined` if the input contains no non-empty values (after\n * trimming whitespace on left/right from each), otherwise a non-empty array of\n * values.\n *\n * @category Validation\n */\nexport const validateStrList = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n): T[] | undefined =>\n  MH.filterBlank(\n    toArray(value)?.map((v) =>\n      _validateString(key, v, checkFn, \"a string or a string array\"),\n    ),\n  );\n\n/**\n * Returns an array of numbers from the given list.\n *\n * If it returns without throwing, the input is necessarily valid.\n * If the result is an empty array, it will return `null`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the input is not a number or array of numbers. Numerical\n *                strings are accepted.\n *\n * @param {} key Used in the error message thrown\n *\n * @return {} `undefined` if the input contains no non-empty values (after\n * trimming whitespace on left/right from each), otherwise a non-empty array of\n * values.\n *\n * @category Validation\n */\nexport const validateNumList = (\n  key: string,\n  value: unknown,\n): number[] | undefined =>\n  MH.filterBlank(\n    toArray(value)?.map((v) =>\n      _validateNumber(key, v, \"a number or a number array\"),\n    ),\n  );\n\n/**\n * Returns a number corresponding to the supplied value, ensuring the supplied\n * value is a valid number or a string containing only a number.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @return {} `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateNumber = (key: string, value: unknown) =>\n  _validateNumber(key, value);\n\n/**\n * Returns a boolean corresponding to the given value as follows:\n *\n * - `null` and `undefined` result in `undefined`\n * - `false` and `\"false\"` result in `false`\n * - `\"\"`, `true` and `\"true\"` result in `true`\n * - other values throw an error error\n *\n * Note that an empty string is treated as `true`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is not a valid boolean or boolean string.\n *\n * @return {} `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateBoolean = (key: string, value: unknown) =>\n  _validateBoolean(key, value);\n\n/**\n * Returns a valid string from the supplied value, ensuring the supplied value\n * is a string that conforms to the given `checkFn`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @param {} checkFn      If given and the supplied value is a string, then it\n *                        is called with the value as a single argument. It\n *                        must return true if the value is valid and false\n *                        otherwise.\n *                        If it is not given, then any literal string is\n *                        accepted.\n *\n * @return {} `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n) => _validateString(key, value, checkFn);\n\n/**\n * Like {@link validateString} except it requires input to be given and\n * non-empty.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid or empty.\n *\n * @category Validation\n */\nexport const validateStringRequired = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n): T => {\n  const result = _validateString(key, value, checkFn);\n\n  if (MH.isEmpty(result)) {\n    throw MH.usageError(`'${key}' is required`);\n  }\n\n  return result;\n};\n\n/**\n * Returns a valid boolean or a string from the supplied value, ensuring the\n * supplied value is either a boolean or boolean string (see\n * {@link validateBoolean}), or a string that conforms to the given `checkFn`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @param {} stringCheckFn If given and the supplied value is a string _other\n *                         than a boolean string_, then it is called with the\n *                         value as a single argument. It must return true if\n *                         the value is valid and false otherwise.\n *                         If it is not given, then any literal string is\n *                         accepted.\n *\n * @category Validation\n */\nexport const validateBooleanOrString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  stringCheckFn?: (value: string) => value is T,\n) => _validateBooleanOrString(key, value, stringCheckFn);\n\n// --------------------\n\nconst toArray = (value: unknown): unknown[] | undefined => {\n  let result: unknown[] | null;\n  if (MH.isArray(value)) {\n    result = value;\n  } else if (MH.isIterableObject(value)) {\n    result = MH.arrayFrom(value);\n  } else if (MH.isLiteralString(value)) {\n    result = splitOn(value, \",\");\n  } else if (!MH.isNullish(value)) {\n    result = [value];\n  } else {\n    result = null;\n  }\n\n  return result\n    ? MH.filterBlank(result.map((v) => (MH.isLiteralString(v) ? v.trim() : v)))\n    : undefined;\n};\n\nconst _validateNumber = (\n  key: string,\n  value: unknown,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const numVal = toNum(value, null);\n  if (numVal === null) {\n    throw MH.usageError(`'${key}' must be ${typeDescription ?? \"a number\"}`);\n  }\n\n  return numVal;\n};\n\nconst _validateBoolean = (\n  key: string,\n  value: unknown,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const boolVal = toBool(value);\n  if (boolVal === null) {\n    throw MH.usageError(\n      `'${key}' must be ${typeDescription ?? '\"true\" or \"false\"'}`,\n    );\n  }\n\n  return boolVal;\n};\n\nconst _validateString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n  typeDescription?: string,\n): (typeof checkFn extends null | undefined ? string : T) | undefined => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  if (!MH.isLiteralString(value)) {\n    throw MH.usageError(`'${key}' must be ${typeDescription ?? \"a string\"}`);\n  } else if (checkFn && !checkFn(value)) {\n    throw MH.usageError(`Invalid value for '${key}'`);\n  }\n\n  return value as typeof checkFn extends null | undefined ? string : T;\n};\n\nconst _validateBooleanOrString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  stringCheckFn?: (value: string) => value is T,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const boolVal = toBool(value);\n  if (boolVal !== null) {\n    return boolVal;\n  }\n\n  if (!MH.isLiteralString(value)) {\n    throw MH.usageError(\n      `'${key}' must be ${typeDescription ?? \"a boolean or string\"}`,\n    );\n  }\n\n  return _validateString(key, value, stringCheckFn);\n};\n","/**\n * @module Modules/BitSpaces\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getBitmask } from \"@lisn/utils/math\";\n\nexport type BitPropName = string;\n\n/**\n * A union of all property names in the space.\n */\nexport type BitSpaceKey<S> = S extends BitSpace<infer T> ? T : never;\n\n/**\n * {@link BitSpace} represents a single set of mutually exclusive (or\n * orthogonal) properties.\n *\n * Each property has a numeric value equal to 1 bit-shifted by a certain number\n * of bits.\n *\n * Created using {@link BitSpaces.create}\n *\n * @interface\n */\nexport type BitSpace<T extends BitPropName> = {\n  /**\n   * The starting bit of the space. It's 0 for the first space created in a\n   * given set of {@link BitSpaces}.\n   */\n  start: number;\n\n  /**\n   * The ending bit of the space. It's always equal to\n   * start + (# of properties in space) - 1\n   */\n  end: number;\n\n  /**\n   * A bitmask of all values in the space.\n   */\n  bitmask: number;\n\n  /**\n   * Returns true if the given name is one of the properties in the space.\n   * It is case-sensitive.\n   */\n  has: (p: string) => p is T;\n\n  /**\n   * Takes the names of two properties within the space and returns a bitmask\n   * that covers all values between them _including the starting and ending\n   * one_.*\n   *\n   * If pStart > pEnd, they are reversed.\n   *\n   * * The numeric values of the properties are guaranteed to be in the same\n   *   order, increasing in value, as the keys passed to the `BitSpaces.create`,\n   *   function.\n   *\n   * @param {} pStart  The name of the property that holds the start value.\n   *                   If null the bitmask will cover from the lowest property.\n   * @param {} pEnd    The name of the property that holds the end cut-off\n   *                   value for the bitmask. The bitmask with _not_ include\n   *                   pEnd's value.\n   *                   If null the bitmask will cover to the highest property,\n   *                   _including_.\n   *\n   * @returns {} Returns a non-0 bitmask containing all values in the space\n   *             between the given ones.\n   *             Returns 0 if one or both of the given properties do not exist\n   *             in the space.\n   */\n  bitmaskFor: (pStart?: T | null, pEnd?: T | null) => number;\n\n  /**\n   * Returns the name of the property with the given value, or null if the\n   * value does not correspond to one of the space properties.\n   */\n  nameOf: (val: number) => T | null;\n\n  /**\n   * Holds properties whose numeric values are non-overlapping binary values,\n   * suitable for bitmasking.\n   *\n   * The given properties are set under the \"bit\" key in the object and hold\n   * the numeric value.\n   *\n   * @example\n   * ```javascript\n   * const space = new BitSpaces().create(\"up\", \"down\", \"left\", \"right\");\n   *\n   * // {\n   * //     bit: {\n   * //         up:    1, // at bit 0, i.e. 1 << 0\n   * //         down:  2, // at bit 1, i.e. 1 << 1\n   * //         left:  4, // at bit 2, i.e. 1 << 2\n   * //         right: 8, // at bit 3, i.e. 1 << 3\n   * //     },\n   * //     start:      0,\n   * //     end:        3,\n   * //     bitmask:    15, // 1 << 0 | 1 << 1 | 1 << 2 | 1 << 3\n   * //     has:        (p) => p === \"up\" || p === \"down\" || p === \"left\" || p === \"right\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 1 ? \"up\" : v === 2 ? \"down\" : v === 4 ...\n   * // }\n   *\n   * space.bitmaskFor(); // => space.bitmask (15)\n   * space.bitmaskFor(\"left\"); // => space.bit.left | space.bit.right (12)\n   * space.bitmaskFor(null, \"down\"); // => space.bit.up | space.bit.down (3)\n   * ```\n   */\n  bit: {\n    [key in T]: number;\n  };\n};\n\n/**\n * {@link BitSpaces} represents one or more related {@link BitSpace}s whose bit\n * values will not overlap.\n */\nexport class BitSpaces {\n  /**\n   * Creates and returns a new BitSpace that is bit shifted to the left as\n   * many bits as the ending bit of the previous space created by this\n   * instances, so that each new space created is non-overlapping with previous\n   * ones.\n   *\n   * The numeric values of the properties are guaranteed to be in the same\n   * order, increasing in value, as the keys passed to the function.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the number of bits in the space will exceed 32.\n   *\n   * @example\n   * ```javascript\n   * const spaces = new BitSpaces();\n   * const spaceA = spaces.create(\"up\", \"down\");\n   *\n   * // spaces.nBits   => 2\n   * // spaces.bitmask => 3\n   * //\n   * // spaceA:\n   * // {\n   * //     bit: {\n   * //         up:     1, // at bit 0, i.e. 1 << 0\n   * //         down:   2, // at bit 1, i.e. 1 << 1\n   * //     },\n   * //     start:      0,\n   * //     end:        1,\n   * //     bitmask:    3, // 1 << 0 | 1 << 1\n   * //     has:        (p) => p === \"up\" || p === \"down\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 1 ? \"up\" : v === 2 ? \"down\" : null\n   * // }\n   *\n   * const spaceB = spaces.create(\"left\", \"right\");\n   *\n   * // spaces.nBits   => 4\n   * // spaces.bitmask => 15\n   * //\n   * // spaceB:\n   * // {\n   * //     bit: {\n   * //         left:   4, // at bit 2, i.e. 1 << 2\n   * //         right:  8, // at bit 3, i.e. 1 << 3\n   * //     },\n   * //     start:      2,\n   * //     end:        3,\n   * //     bitmask:    12, // 1 << 2 | 1 << 3\n   * //     has:        (p) => p === \"left\" || p === \"right\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 4 ? \"left\" : v === 8 ? \"right\" : null\n   * // }\n   *\n   * ```\n   */\n  readonly create: <T extends BitPropName>(\n    ...propNames: readonly T[]\n  ) => BitSpace<T>;\n\n  /**\n   * Returns the number of bits all created spaces span, i.e. the end bit of\n   * the one + 1.\n   */\n  readonly nBits!: number;\n\n  /**\n   * Returns a bitmask containing all values in all created spaces.\n   */\n  readonly bitmask!: number;\n\n  constructor() {\n    const counter = newCounter();\n\n    this.create = (...propNames) => newBitSpace(counter, propNames);\n    MH.defineProperty(this, \"nBits\", { get: () => counter._nBits });\n    MH.defineProperty(this, \"bitmask\", { get: () => counter._bitmask });\n  }\n}\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newBitSpaces = () => new BitSpaces();\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const createBitSpace = <T extends BitPropName>(\n  spaces: BitSpaces,\n  ...propNames: readonly T[]\n): BitSpace<T> => spaces.create(...propNames);\n\n// ----------------------------------------\n\ntype BitCounter = {\n  _nBits: number;\n  _bitmask: number;\n};\n\nconst newCounter = (): BitCounter => ({\n  _nBits: 0,\n  _bitmask: 0,\n});\n\nconst newBitSpace = <T extends BitPropName>(\n  counter: BitCounter,\n  propNames: readonly T[],\n): BitSpace<T> => {\n  const start = counter._nBits;\n  const end = start + MH.lengthOf(propNames) - 1;\n  if (end >= 31) {\n    throw MH.usageError(\"BitSpaces overflow\");\n  }\n\n  const bitmask = getBitmask(start, end);\n  const space: BitSpace<T> = {\n    bit: {},\n    start,\n    end,\n    bitmask,\n\n    has: (p) =>\n      MH.isString(p) &&\n      p in space.bit &&\n      MH.isNumber((space.bit as Record<string, unknown>)[p]),\n\n    bitmaskFor: (pStart, pEnd) => {\n      if (\n        (!MH.isEmpty(pStart) && !space.has(pStart)) ||\n        (!MH.isEmpty(pEnd) && !space.has(pEnd))\n      ) {\n        return 0;\n      }\n\n      const thisStart = !MH.isEmpty(pStart)\n        ? MH.log2(space.bit[pStart])\n        : start;\n      const thisEnd = !MH.isEmpty(pEnd) ? MH.log2(space.bit[pEnd]) : end;\n\n      return getBitmask(thisStart, thisEnd);\n    },\n\n    nameOf: (val) => propNames[MH.log2(val) - start] ?? null,\n  } as BitSpace<T>;\n\n  for (const name of propNames) {\n    MH.defineProperty(space.bit, name, {\n      value: 1 << counter._nBits++,\n      enumerable: true,\n    });\n  }\n\n  counter._bitmask |= bitmask;\n\n  return space;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { MutationCategory } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newBitSpaces, createBitSpace } from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid category.\n *\n * @category Validation\n */\nexport const isValidMutationCategory = (\n  category: string,\n): category is MutationCategory => DOM_CATEGORIES_SPACE.has(category);\n\n/**\n * Returns true if the given string or array is a list of valid categories.\n *\n * @category Validation\n */\nexport const isValidMutationCategoryList = (categories: string | string[]) =>\n  isValidStrList(categories, isValidMutationCategory, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const DOM_CATEGORIES_SPACE = createBitSpace<MutationCategory>(\n  newBitSpaces(),\n  MC.S_ADDED,\n  MC.S_REMOVED,\n  MC.S_ATTRIBUTE,\n);\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\n/**\n * @category Tasks\n */\nexport type SchedulerPostTaskOptions = {\n  delay?: number;\n  priority?: TaskPriority;\n  signal?: AbortSignal;\n};\n\n/**\n * @category Tasks\n */\nexport type Scheduler = {\n  postTask<T, P extends readonly unknown[] | []>(\n    callback: (...params: P) => T,\n    options?: SchedulerPostTaskOptions,\n    ...args: P\n  ): Promise<T>;\n};\n\n/**\n * @category Tasks\n */\nexport type TaskPriority = \"user-blocking\" | \"user-visible\" | \"background\";\n\n/* eslint-disable-next-line no-var */\ndeclare var scheduler: Scheduler;\n\n/**\n * Schedules a task with high priority to be executed as soon as possible.\n *\n * It uses {@link https://developer.mozilla.org/en-US/docs/Web/API/Scheduler/postTask | Scheduler:postTask}\n * if available, otherwise falls back to\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MessageChannel | MessageChannel}.\n *\n * @category Tasks\n */\nexport const scheduleHighPriorityTask = (task: () => void) => {\n  if (typeof scheduler !== \"undefined\") {\n    scheduler.postTask(task, {\n      priority: \"user-blocking\",\n    });\n  } else {\n    // Fallback to MessageChannel\n    const channel = new MessageChannel();\n    channel.port1.onmessage = () => {\n      channel.port1.close();\n      task();\n    };\n    channel.port2.postMessage(\"\");\n  }\n};\n\n/**\n * Returns a wrapper around the given handler that is debounced by the given\n * debounce window.\n *\n * @category Tasks\n */\nexport const getDebouncedHandler = <Args extends unknown[]>(\n  debounceWindow: number,\n  handler: (...args: Args) => void,\n) => {\n  if (!debounceWindow) {\n    return handler;\n  }\n\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  let lastArgs: Args;\n\n  return (...args: Args) => {\n    lastArgs = args;\n\n    if (timer === null) {\n      timer = MH.setTimer(async () => {\n        await handler(...lastArgs);\n        timer = null;\n      }, debounceWindow);\n    }\n  };\n};\n\n/**\n * Returns a promise that resolves at least the given number of delay (in\n * milliseconds) later. Uses `setTimeout`.\n *\n * @category Tasks\n */\nexport const waitForDelay = (delay?: number) =>\n  MH.newPromise<void>((resolve) => {\n    MH.setTimer(resolve, delay);\n  });\n","/**\n * @module Modules/Callback\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getDebouncedHandler } from \"@lisn/utils/tasks\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * @typeParam Args  See {@link Callback}\n */\nexport type CallbackHandler<Args extends unknown[] = []> = (\n  ...args: Args\n) => CallbackReturnType | Promise<CallbackReturnType>;\n\nexport type CallbackReturnType =\n  | typeof Callback.KEEP\n  | typeof Callback.REMOVE\n  | void;\n\n/**\n * For minification optimization. Exposed through Callback.wrap.\n *\n * @ignore\n * @internal\n */\nexport const wrapCallback = <Args extends unknown[] = []>(\n  handlerOrCallback: CallbackHandler<Args> | Callback<Args>,\n  debounceWindow = 0,\n): Callback<Args> => {\n  const isFunction = MH.isFunction(handlerOrCallback);\n  let isRemoved = () => false;\n\n  if (isFunction) {\n    // check if it's an invoke method\n    const callback = callablesMap.get(handlerOrCallback);\n    if (callback) {\n      return wrapCallback(callback);\n    }\n  } else {\n    isRemoved = handlerOrCallback.isRemoved;\n  }\n\n  const handler: CallbackHandler<Args> = isFunction\n    ? handlerOrCallback\n    : (...args: Args) => handlerOrCallback.invoke(...args);\n\n  const wrapper = new Callback<Args>(\n    getDebouncedHandler(debounceWindow, (...args: Args) => {\n      if (!isRemoved()) {\n        return handler(...args);\n      }\n    }),\n  );\n\n  if (!isFunction) {\n    handlerOrCallback.onRemove(wrapper.remove);\n  }\n\n  return wrapper;\n};\n\n/**\n * {@link Callback} wraps user-supplied callbacks. Supports\n * - removing a callback either when calling {@link remove} or if the user\n *   handler returns {@link Callback.REMOVE}\n * - calling custom {@link onRemove} hooks\n * - debouncing (via {@link wrap})\n * - awaiting on an asynchronous handler and ensuring that the handler does not\n *  run concurrently to itself, i.e. subsequent {@link invoke}s will be queued\n *\n * @typeParam Args  The type of arguments that the callback expects.\n */\nexport class Callback<Args extends unknown[] = []> {\n  /**\n   * Possible return value for the handler.\n   *\n   * Do not do anything. Same as not retuning anything from the function.\n   */\n  static readonly KEEP: unique symbol = MC.SYMBOL(\n    \"KEEP\",\n  ) as typeof Callback.KEEP;\n\n  /**\n   * Possible return value for the handler.\n   *\n   * Will remove this callback.\n   */\n  static readonly REMOVE: unique symbol = MC.SYMBOL(\n    \"REMOVE\",\n  ) as typeof Callback.REMOVE;\n\n  /**\n   * Call the handler with the given arguments.\n   *\n   * If the handler is asynchronous, it awaits on it. Furthermore, calls will\n   * always wait for previous calls to this handler to complete first, i.e. it\n   * never runs concurrently to itself. If you need multiple calls to the async\n   * handler to run concurrently, then wrap it in a non-async function that\n   * does not await it.\n   *\n   * The returned promise is rejected in two cases:\n   * - If the callback throws an error or returns a rejected Promise.\n   * - If the callback is removed _after_ you call {@link invoke} but before the\n   *   handler is actually called (while it's waiting in the queue to be called)\n   *   In this case, the rejection reason is {@link Callback.REMOVE}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the callback is already removed.\n   */\n  readonly invoke: (...args: Args) => Promise<void>;\n\n  /**\n   * Mark the callback as removed and call the registered {@link onRemove} hooks.\n   *\n   * Future attempts to call it will result in\n   * {@link Errors.LisnUsageError | LisnUsageError}.\n   */\n  readonly remove: () => void;\n\n  /**\n   * Returns true if the callback has been removed and cannot be called again.\n   */\n  readonly isRemoved: () => boolean;\n\n  /**\n   * Registers the given function to be called when the callback is removed.\n   *\n   * You can call {@link onRemove} multiple times to register multiple hooks.\n   */\n  readonly onRemove: (fn: () => void) => void;\n\n  /**\n   * Wraps the given handler or callback as a callback, optionally debounced by\n   * the given debounce window.\n   *\n   * If the argument is already a callback _or an invoke method of a callback_,\n   * then the wrapper will call that callback and return the same value as it.\n   * It will also set up the returned wrapper callback so that it is removed\n   * when the original (given) callback is removed. However, removing the\n   * returned wrapper callback will _not_ cause the original callback (being\n   * wrapped) to be removed. If you want to do this, then do\n   * `wrapper.onRemove(wrapped.remove)`.\n   *\n   * Note that if the argument is a callback that's already debounced by a\n   * _larger_ window, then `debounceWindow` will have no effect.\n   *\n   * @param {} debounceWindow  If non-0, the callback will be called at most\n   *                           every `debounceWindow` ms. The arguments it will\n   *                           be called with will be the last arguments the\n   *                           wrapper was called with.\n   */\n  static readonly wrap = wrapCallback;\n\n  /**\n   * @param {} handler     The actual function to call. This should return one of\n   *                       the known {@link CallbackReturnType} values.\n   */\n  constructor(handler: CallbackHandler<Args>) {\n    const logger = debug\n      ? new debug.Logger({ name: \"Callback\", logAtCreation: handler })\n      : null;\n\n    let isRemoved = false;\n    const id = MC.SYMBOL();\n\n    const onRemove = MH.newSet<() => void>();\n\n    this.isRemoved = () => isRemoved;\n\n    this.remove = () => {\n      debug: logger?.debug8(\"Removing\");\n      if (!isRemoved) {\n        isRemoved = true;\n\n        for (const rmFn of onRemove) {\n          rmFn();\n        }\n\n        CallbackScheduler._clear(id);\n      }\n    };\n\n    this.onRemove = (fn) => onRemove.add(fn);\n\n    this.invoke = (...args) =>\n      MH.newPromise((resolve, reject) => {\n        debug: logger?.debug8(\"Calling with\", args);\n        if (isRemoved) {\n          reject(MH.usageError(\"Callback has been removed\"));\n          return;\n        }\n\n        CallbackScheduler._push(\n          id,\n          async () => {\n            let result;\n            try {\n              result = await handler(...args);\n            } catch (err) {\n              reject(err);\n            }\n\n            if (result === Callback.REMOVE) {\n              this.remove();\n            }\n\n            resolve();\n          },\n          reject,\n        );\n      });\n\n    callablesMap.set(this.invoke, this);\n  }\n}\n\n// ----------------------------------------\n\ntype CallbackSchedulerTask = () => Promise<void>;\ntype CallbackSchedulerQueueItem = {\n  _task: CallbackSchedulerTask;\n  _running: boolean;\n  _onRemove: (reason: typeof Callback.REMOVE) => void;\n};\n\ntype CallableCallback<Args extends unknown[] = []> = (...args: Args) => void;\n\nconst callablesMap = MH.newWeakMap<CallableCallback, Callback>();\n\nconst CallbackScheduler = (() => {\n  const queues = MH.newMap<symbol, CallbackSchedulerQueueItem[]>();\n\n  const flush = async (queue: CallbackSchedulerQueueItem[]) => {\n    // So that callbacks are always called asynchronously for consistency,\n    // await here before calling 1st\n    await null;\n    while (MH.lengthOf(queue)) {\n      // shouldn't throw anything as Callback must catch errors\n      queue[0]._running = true;\n      await queue[0]._task();\n\n      // only remove when done\n      queue.shift();\n    }\n  };\n\n  return {\n    _clear: (id: symbol) => {\n      const queue = queues.get(id);\n      if (queue) {\n        let item: CallbackSchedulerQueueItem | undefined;\n        while ((item = queue.shift())) {\n          if (!item._running) {\n            item._onRemove(Callback.REMOVE);\n          }\n        }\n\n        MH.deleteKey(queues, id);\n      }\n    },\n\n    _push: (id: symbol, task: CallbackSchedulerTask, onRemove: () => void) => {\n      let queue = queues.get(id);\n      if (!queue) {\n        queue = [];\n        queues.set(id, queue);\n      }\n\n      queue.push({ _task: task, _onRemove: onRemove, _running: false });\n      if (MH.lengthOf(queue) === 1) {\n        flush(queue);\n      }\n    },\n  };\n})();\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LogFunction } from \"@lisn/globals/types\";\n\nimport { joinAsString } from \"@lisn/utils/text\";\n\nimport { Callback } from \"@lisn/modules/callback\";\n\n/**\n * Like `console.info` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logInfo: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleInfo(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.warn` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logWarn: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleWarn(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.error` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logError: LogFunction = (...args) => {\n  if (\n    (MH.lengthOf(args) > 1 || args[0] !== Callback.REMOVE) &&\n    !isMessageSeen(args)\n  ) {\n    MH.consoleError(MC.LOG_PREFIX, ...args);\n  }\n};\n\nconst discardMessages = MH.newSet<string>();\nconst isMessageSeen = (args: unknown[]) => {\n  const msg = joinAsString(\" \", ...args);\n  const isSeen = discardMessages.has(msg);\n  discardMessages.add(msg);\n  return isSeen;\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Preventing layout trashing\n *\n * {@link waitForMeasureTime} allows you to schedule tasks that read or\n * \"measure\", the DOM, for example getting computed styles, taking the\n * `offsetWidth` or the `scrollTop` of an element, etc... anything that _would_\n * force a layout if it runs after the layout has been invalidated by a\n * \"mutation\".\n *\n * See https://gist.github.com/paulirish/5d52fb081b3570c81e3 for a list of\n * operations that should be run on a valid layout to avoid forced layouts.\n *\n * {@link waitForMutateTime} allows you to schedule tasks that invalidate the\n * DOM layout by making changes to the style, inserting or removing elements,\n * etc.\n *\n * These ensure that:\n * - All mutation tasks that would invalidate the style run together before the\n *   next repaint.\n * - All measurement tasks that need a valid style will run as soon as possible\n *   after the next repaint.\n * - If a mutation task is scheduled by another mutation task, it will run in\n *   the same batch.\n * - If a measurement task is scheduled by either a mutation or another\n *   measurement task, it will run in the same batch.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logError } from \"@lisn/utils/log\";\nimport { scheduleHighPriorityTask } from \"@lisn/utils/tasks\";\n\n/**\n * Returns a Promise that is resolved before the next repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForMutateTime = () =>\n  MH.newPromise<void>((resolve) => {\n    scheduleDOMTask(scheduledDOMMutations, resolve);\n  });\n\n/**\n * Returns a Promise that is resolved as soon as possible after the next\n * repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForMeasureTime = () =>\n  MH.newPromise<void>((resolve) => {\n    scheduleDOMTask(scheduledDOMMeasurements, resolve);\n  });\n\n/**\n * Returns a Promise that is resolved before the repaint that follows the next\n * repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForSubsequentMutateTime = () =>\n  waitForMutateTime().then(waitForMeasureTime).then(waitForMutateTime);\n\n/**\n * Returns a Promise that is resolved as soon as possible after the repaint\n * that follows the next repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForSubsequentMeasureTime = () =>\n  waitForMeasureTime().then(waitForMutateTime).then(waitForMeasureTime);\n\n// ----------------------------------------\n\ntype TaskResolver = () => void;\ntype DOMTaskQueue = TaskResolver[];\n\nconst scheduledDOMMeasurements: DOMTaskQueue = [];\nconst scheduledDOMMutations: DOMTaskQueue = [];\nlet hasScheduledDOMTasks = false;\n\nconst scheduleDOMTask = (queue: DOMTaskQueue, resolve: TaskResolver) => {\n  queue.push(resolve);\n  if (!hasScheduledDOMTasks) {\n    hasScheduledDOMTasks = true;\n    MH.onAnimationFrame(runAllDOMTasks);\n  }\n};\n\nconst runAllDOMTasks = async () => {\n  // We suspend (await null) after each queue to ensure that microtasks that\n  // have been added by await waitFor* or waitFor*().then run before the next\n  // queue, so that if they schedule more measurements and/or mutations, they\n  // can be flushed now, in the same batch.\n\n  // We're inside an animation frame. Run all mutation tasks now.\n  while (MH.lengthOf(scheduledDOMMutations)) {\n    runDOMTaskQueue(scheduledDOMMutations);\n    // wait for tasks awaiting on the resolved promises, then check queue again\n    await null;\n  }\n\n  // The measurement queue is now empty => scheduling measurements after\n  // this point will result in rescheduling both queues again in the next\n  // frame.\n  //\n  // Schedule the measurement tasks as soon as possible, after the upcoming\n  // paint. Use a macro task with as high priority as possible.\n  scheduleHighPriorityTask(async () => {\n    while (MH.lengthOf(scheduledDOMMeasurements)) {\n      runDOMTaskQueue(scheduledDOMMeasurements);\n      // wait for tasks awaiting on the resolved promises, then check queue again\n      await null;\n    }\n\n    if (MH.lengthOf(scheduledDOMMutations)) {\n      // There have been mutations added. Schedule another flush.\n      MH.onAnimationFrame(runAllDOMTasks);\n    } else {\n      hasScheduledDOMTasks = false;\n    }\n  });\n};\n\nconst runDOMTaskQueue = (queue: DOMTaskQueue) => {\n  let resolve: TaskResolver | undefined;\n  while ((resolve = queue.shift())) {\n    try {\n      resolve();\n    } catch (err) /* istanbul ignore next */ {\n      logError(err);\n    }\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement } from \"@lisn/globals/types\";\n\n/**\n * Returns all the child elements of the given element that are not `script` or\n * `style` tags.\n *\n * @category DOM: Querying\n */\nexport const getVisibleContentChildren = (el: Element) =>\n  MH.filter([...MH.childrenOf(el)], (e) => isVisibleContentTag(MH.tagName(e)));\n\n/**\n * Returns whether the given tag is _not_ `script` or `style`. Comparison is\n * case insensitive.\n *\n * @category DOM: Querying\n */\nexport const isVisibleContentTag = (tagName: string) =>\n  !MH.includes([\"script\", \"style\"], MH.toLowerCase(tagName));\n\n/**\n * Returns whether the given tag name has by default an inline display.\n * Comparison is case insensitive.\n *\n * @category DOM: Querying\n */\nexport const isInlineTag = (tagName: string) =>\n  inlineTags.has(tagName.toLowerCase());\n\n/**\n * Returns whether the given element is as {@link DOMElement}.\n *\n * @category DOM: Querying\n */\nexport const isDOMElement = (target: unknown): target is DOMElement =>\n  MH.isHTMLElement(target) ||\n  MH.isInstanceOf(target, SVGElement) ||\n  (typeof MathMLElement !== \"undefined\" &&\n    MH.isInstanceOf(target, MathMLElement));\n\n// --------------------\n\nconst inlineTags = MH.newSet([\n  \"a\",\n  \"abbr\",\n  \"acronym\",\n  \"b\",\n  \"bdi\",\n  \"bdo\",\n  \"big\",\n  \"button\",\n  \"cite\",\n  \"code\",\n  \"data\",\n  \"dfn\",\n  \"em\",\n  \"i\",\n  \"img\",\n  \"input\",\n  \"kbd\",\n  \"label\",\n  \"mark\",\n  \"map\",\n  \"object\",\n  \"output\",\n  \"q\",\n  \"rp\",\n  \"rt\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"select\",\n  \"small\",\n  \"span\",\n  \"strong\",\n  \"sub\",\n  \"sup\",\n  \"textarea\",\n  \"time\",\n  \"tt\",\n  \"u\",\n  \"var\",\n]);\n","/**\n * @module Utils\n *\n * @categoryDescription CSS: Altering\n * These functions transition an element from one CSS class to another, but\n * could lead to forced layout if not scheduled using {@link waitForMutateTime}.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n *\n * @categoryDescription CSS: Altering (optimized)\n * These functions transition an element from one CSS class to another in an\n * optimized way using {@link waitForMutateTime} and so are asynchronous.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement } from \"@lisn/globals/types\";\n\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n  waitForSubsequentMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isDOMElement } from \"@lisn/utils/dom-query\";\nimport { isValidNum, roundNumTo } from \"@lisn/utils/math\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { camelToKebabCase, splitOn } from \"@lisn/utils/text\";\n\n/**\n * Removes the given `fromCls` class and adds the given `toCls` class to the\n * element.\n *\n * Unlike {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace | DOMTokenList:replace},\n * this will always add `toCls` even if `fromCls` isn't in the element's class list.\n *\n * @returns {} True if there was a change made (class removed or added),\n *             false otherwise.\n *\n * @category CSS: Altering\n */\nexport const transitionElementNow = (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n) => {\n  cancelCSSTransitions(element, fromCls, toCls);\n\n  // Avoid triggering MutationObserver unnecessarily.\n  let didChange = false;\n  if (hasClass(element, fromCls)) {\n    didChange = true;\n    removeClassesNow(element, fromCls);\n  }\n\n  if (!hasClass(element, toCls)) {\n    addClassesNow(element, toCls);\n    didChange = true;\n  }\n\n  return didChange;\n};\n\n/**\n * Like {@link transitionElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay, and it finally awaits for the effective style's\n * transition-duration.\n *\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, this one is\n * cancelled.\n *\n * @example\n *\n * - {@link showElement} with delay of 100 schedules `lisn-hide` -> `lisn-show`\n *   in 100ms\n * - then if {@link hideElementNow} is called, or a scheduled\n *   {@link hideElement} completes  before that timer runs out, this call to\n *   {@link showElement} aborts\n *\n * ```javascript\n * hideElement(someElement, 10);\n * // this will be aborted in 10ms when the scheduled hideElement above\n * // completes\n * showElement(someElement, 100);\n * ```\n *\n * ```javascript\n * // this will be aborted in 10ms when the hideElement that will be scheduled\n * // below completes\n * showElement(someElement, 100);\n * hideElement(someElement, 10);\n * ```\n *\n * ```javascript\n * // this will be aborted immediately by hideElementNow that runs straight\n * // afterwards\n * showElement(someElement, 100);\n * hideElementNow(someElement);\n * ```\n *\n * ```javascript\n * hideElementNow(someElement);\n * // this will NOT be aborted because hideElementNow has completed already\n * showElement(someElement, 100);\n * ```\n *\n * @category CSS: Altering (optimized)\n */\nexport const transitionElement = async (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n  delay = 0,\n) => {\n  const thisTransition = scheduleCSSTransition(element, toCls);\n\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForMutateTime();\n  if (thisTransition._isCancelled()) {\n    // it has been overridden by a later transition\n    return false;\n  }\n\n  const didChange = transitionElementNow(element, fromCls, toCls);\n  thisTransition._finish();\n\n  if (!didChange) {\n    return false;\n  }\n\n  // Await for the transition duration so that caller awaiting on us knows when\n  // it's complete.\n  const transitionDuration = await getMaxTransitionDuration(element);\n  if (transitionDuration) {\n    await waitForDelay(transitionDuration);\n  }\n\n  return true;\n};\n\n/**\n * Transitions an element from class `lisn-undisplay` (which applies `display:\n * none`) to `lisn-display` (no style associated with this).\n *\n * The difference between this and simply removing the `lisn-undisplay` class\n * is that previously scheduled transitions to `lisn-undisplay` will be\n * cancelled.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const displayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY);\n\n/**\n * Like {@link displayElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const displayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY, delay);\n\n/**\n * The opposite of {@link displayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const undisplayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY);\n\n/**\n * Like {@link undisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const undisplayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY, delay);\n\n/**\n * Transitions an element from class `lisn-hide` (which makes the element\n * hidden) to `lisn-show` (which shows it). These classes have CSS\n * transitions applied so the element is faded into and out of view.\n *\n * @see {@link transitionElementNow}.\n *\n * @category CSS: Altering\n */\nexport const showElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW);\n\n/**\n * Like {@link showElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const showElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW, delay);\n\n/**\n * The opposite of {@link showElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const hideElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE);\n\n/**\n * Like {@link hideElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const hideElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE, delay);\n\n/**\n * If {@link isElementUndisplayed}, it will {@link displayElementNow},\n * otherwise it will {@link undisplayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleDisplayElementNow = (element: Element) =>\n  isElementUndisplayed(element)\n    ? displayElementNow(element)\n    : undisplayElementNow(element);\n\n/**\n * Like {@link toggleDisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleDisplayElement = (element: Element, delay = 0) =>\n  isElementUndisplayed(element)\n    ? displayElement(element, delay)\n    : undisplayElement(element, delay);\n\n/**\n * If {@link isElementHidden}, it will {@link showElementNow}, otherwise\n * {@link hideElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleShowElementNow = (element: Element) =>\n  isElementHidden(element) ? showElementNow(element) : hideElementNow(element);\n\n/**\n * Like {@link toggleShowElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleShowElement = (element: Element, delay = 0) =>\n  isElementHidden(element)\n    ? showElement(element, delay)\n    : hideElement(element, delay);\n\n/**\n * Returns true if the element's class list contains `lisn-hide`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementHidden = (element: Element) =>\n  hasClass(element, MC.PREFIX_HIDE);\n\n/**\n * Returns true if the element's class list contains `lisn-undisplay`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementUndisplayed = (element: Element) =>\n  hasClass(element, MC.PREFIX_UNDISPLAY);\n\n/**\n * Returns true if the element's class list contains the given class.\n *\n * @category CSS: Altering (optimized)\n */\nexport const hasClass = (el: Element, className: string) =>\n  MH.classList(el).contains(className);\n\n/**\n * Adds the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const addClassesNow = (el: Element, ...classNames: string[]) =>\n  MH.classList(el).add(...classNames);\n\n/**\n * Like {@link addClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const addClasses = (el: Element, ...classNames: string[]) =>\n  waitForMutateTime().then(() => addClassesNow(el, ...classNames));\n\n/**\n * Removes the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const removeClassesNow = (el: Element, ...classNames: string[]) =>\n  MH.classList(el).remove(...classNames);\n\n/**\n * Like {@link removeClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const removeClasses = (el: Element, ...classNames: string[]) =>\n  waitForMutateTime().then(() => removeClassesNow(el, ...classNames));\n\n/**\n * Toggles the given class on the element.\n *\n * @param {} force See {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle | DOMTokenList:toggle}\n *\n * @category CSS: Altering\n */\nexport const toggleClassNow = (\n  el: Element,\n  className: string,\n  force?: boolean,\n) => MH.classList(el).toggle(className, force);\n\n/**\n * Like {@link toggleClassNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleClass = (el: Element, className: string, force?: boolean) =>\n  waitForMutateTime().then(() => toggleClassNow(el, className, force));\n\n// For *Data: to avoid unnecessary type checking that ensures element is\n// HTMLElement or SVGElement, use getAttribute instead of dataset.\n\n/**\n * Returns the value of the given data attribute. The name of the attribute\n * must _not_ start with `data`. It can be in either camelCase or kebab-case,\n * it is converted as needed.\n *\n * @category CSS: Altering (optimized)\n */\nexport const getData = (el: Element, name: string) =>\n  MH.getAttr(el, MH.prefixData(name));\n\n/**\n * Returns the value of the given data attribute as a boolean. Its value is\n * expected to be either blank or \"true\" (which result in `true`), or \"false\"\n * (which results in `false`).\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering (optimized)\n */\nexport const getBoolData = (el: Element, name: string) => {\n  const value = getData(el, name);\n  return value !== null && value !== \"false\";\n};\n\n/**\n * Sets the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const setDataNow = (el: Element, name: string, value: string) =>\n  MH.setAttr(el, MH.prefixData(name), value);\n\n/**\n * Like {@link setDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const setData = (el: Element, name: string, value: string) =>\n  waitForMutateTime().then(() => setDataNow(el, name, value));\n\n/**\n * Sets the given data attribute with value \"true\" (default) or \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const setBoolDataNow = (el: Element, name: string, value = true) =>\n  MH.setAttr(el, MH.prefixData(name), value + \"\");\n\n/**\n * Like {@link setBoolDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const setBoolData = (el: Element, name: string, value = true) =>\n  waitForMutateTime().then(() => setBoolDataNow(el, name, value));\n\n/**\n * Sets the given data attribute with value \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const unsetBoolDataNow = (el: Element, name: string) =>\n  MH.unsetAttr(el, MH.prefixData(name));\n\n/**\n * Like {@link unsetBoolDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const unsetBoolData = (el: Element, name: string) =>\n  waitForMutateTime().then(() => unsetBoolDataNow(el, name));\n\n/**\n * Deletes the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const delDataNow = (el: Element, name: string) =>\n  MH.delAttr(el, MH.prefixData(name));\n\n/**\n * Like {@link delDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const delData = (el: Element, name: string) =>\n  waitForMutateTime().then(() => delDataNow(el, name));\n\n/**\n * Returns the value of the given property from the computed style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getComputedStylePropNow = (element: Element, prop: string) =>\n  getComputedStyle(element).getPropertyValue(prop);\n\n/**\n * Like {@link getComputedStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getComputedStyleProp = (element: Element, prop: string) =>\n  waitForMeasureTime().then(() => getComputedStylePropNow(element, prop));\n\n/**\n * Returns the value of the given property from the inline style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.getPropertyValue(prop);\n\n/**\n * Like {@link getStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getStyleProp = (element: Element, prop: string) =>\n  waitForMeasureTime().then(() => getStylePropNow(element, prop));\n\n/**\n * Sets the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const setStylePropNow = (\n  element: Element,\n  prop: string,\n  value: string,\n) => (element as DOMElement).style?.setProperty(prop, value);\n\n/**\n * Like {@link setStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const setStyleProp = (element: Element, prop: string, value: string) =>\n  waitForMutateTime().then(() => setStylePropNow(element, prop, value));\n\n/**\n * Deletes the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const delStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.removeProperty(prop);\n\n/**\n * Like {@link delStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const delStyleProp = (element: Element, prop: string) =>\n  waitForMutateTime().then(() => delStylePropNow(element, prop));\n\n/**\n * In milliseconds.\n *\n * @ignore\n * @internal\n */\nexport const getMaxTransitionDuration = async (element: Element) => {\n  const propVal = await getComputedStyleProp(element, \"transition-duration\");\n\n  return MH.max(\n    ...splitOn(propVal, \",\", true).map((strValue) => {\n      let duration = MH.parseFloat(strValue) || 0;\n\n      if (strValue === duration + \"s\") {\n        duration *= 1000;\n      }\n\n      return duration;\n    }),\n  );\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const disableInitialTransition = async (element: Element, delay = 0) => {\n  await addClasses(element, MC.PREFIX_TRANSITION_DISABLE);\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForSubsequentMutateTime();\n  removeClassesNow(element, MC.PREFIX_TRANSITION_DISABLE);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const setHasModal = () => setBoolData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const delHasModal = () => delData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const copyStyle = async (\n  fromElement: Element,\n  toElement: Element,\n  includeComputedProps?: string[],\n) => {\n  if (!isDOMElement(fromElement) || !isDOMElement(toElement)) {\n    return;\n  }\n\n  await waitForMeasureTime();\n  const props: Record<string, string> = {};\n\n  if (includeComputedProps) {\n    for (const prop of includeComputedProps) {\n      props[prop] = getComputedStylePropNow(fromElement, prop);\n    }\n  }\n\n  const style = fromElement.style; // only inline styles\n  for (const prop in style) {\n    const value = style.getPropertyValue(prop);\n    if (value) {\n      props[prop] = value;\n    }\n  }\n\n  for (const prop in props) {\n    setStyleProp(toElement, prop, props[prop]);\n  }\n\n  addClasses(toElement, ...MH.classList(fromElement));\n};\n\n/**\n * If the props keys are in camelCase they are converted to kebab-case\n *\n * If a value is null or undefined, the property is deleted.\n *\n * @ignore\n * @internal\n */\nexport const setNumericStyleProps = async (\n  element: Element,\n  props: CssNumericProps,\n  options: {\n    _prefix?: string;\n    _units?: string;\n    _numDecimal?: number;\n    _transformFn?: (prop: string, currVal: number, newVal: number) => number;\n  } = {},\n) => {\n  if (!isDOMElement(element)) {\n    return;\n  }\n\n  const transformFn = options._transformFn;\n\n  const varPrefix = MH.prefixCssJsVar(options?._prefix || \"\");\n  for (const prop in props) {\n    const cssPropSuffix = camelToKebabCase(prop);\n    const varName = `${varPrefix}${cssPropSuffix}`;\n\n    let value: number | null;\n\n    if (!isValidNum(props[prop])) {\n      value = null;\n    } else {\n      value = props[prop];\n      const thisNumDecimal =\n        options?._numDecimal ?? (value > 0 && value < 1 ? 2 : 0);\n\n      if (transformFn) {\n        const currValue = MH.parseFloat(await getStyleProp(element, varName));\n\n        value = transformFn(prop, currValue || 0, value);\n      }\n\n      value = roundNumTo(value, thisNumDecimal);\n    }\n\n    if (value === null) {\n      delStyleProp(element, varName);\n    } else {\n      setStyleProp(element, varName, value + (options?._units || \"\"));\n    }\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\ntype CssNumericProps = Record<string, number | undefined | null>;\n\n// ----------------------------------------\n\ntype CSSTransition = {\n  _cancel: () => undefined;\n  _finish: () => undefined;\n  _isCancelled: () => boolean;\n};\n\nconst PREFIX_HAS_MODAL = MH.prefixName(\"has-modal\");\n\nconst scheduledCSSTransitions = MH.newWeakMap<\n  Element,\n  Record<string, CSSTransition>\n>();\n\nconst cancelCSSTransitions = (element: Element, ...toClasses: string[]) => {\n  const scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    return;\n  }\n\n  for (const toCls of toClasses) {\n    const scheduledTransition = scheduledTransitions[toCls];\n    if (scheduledTransition) {\n      scheduledTransition._cancel();\n    }\n  }\n};\n\nconst scheduleCSSTransition = (element: Element, toCls: string) => {\n  let scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    scheduledTransitions = {};\n    scheduledCSSTransitions.set(element, scheduledTransitions);\n  }\n\n  let isCancelled = false;\n  scheduledTransitions[toCls] = {\n    _cancel: () => {\n      isCancelled = true;\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _finish: () => {\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _isCancelled: () => {\n      return isCancelled;\n    },\n  };\n\n  return scheduledTransitions[toCls];\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Altering\n * These functions alter the DOM tree, but could lead to forced layout if not\n * scheduled using {@link waitForMutateTime}.\n *\n * @categoryDescription DOM: Altering (optimized)\n * These functions alter the DOM tree in an optimized way using\n * {@link waitForMutateTime} and so are asynchronous.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  hideElement,\n  hasClass,\n  addClassesNow,\n  setDataNow,\n  setBoolData,\n} from \"@lisn/utils/css-alter\";\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { randId } from \"@lisn/utils/text\";\n\n/**\n * Wraps the element in the given wrapper, or a newly created element if not given.\n *\n * @param {} [options.wrapper]\n *              If it's an element, it is used as the wrapper. If it's a string\n *              tag name, then a new element with this tag is created as the\n *              wrapper. If not given, then `div` is used if the element to be\n *              wrapped has an block-display tag, or otherwise `span` (if the\n *              element to be wrapped has an inline tag name).\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n * @returns {} The wrapper element that was either passed in options or created.\n *\n * @category DOM: Altering\n */\nexport const wrapElementNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: wrapper,\n    });\n\n    ignoreMove(wrapper, {\n      to: MH.parentOf(element),\n    });\n  }\n\n  element.replaceWith(wrapper);\n  wrapper.append(element);\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapElementNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapElement = async (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => waitForMutateTime().then(() => wrapElementNow(element, options));\n\n/**\n * Wraps the element's children in the given wrapper, or a newly created element\n * if not given.\n *\n * @see {@link wrapElementNow}.\n *\n * @category DOM: Altering\n */\nexport const wrapChildrenNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n\n  moveChildrenNow(element, wrapper, { ignoreMove: true });\n  moveElementNow(wrapper, {\n    to: element,\n    ignoreMove: true,\n  });\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapChildrenNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapChildren = async (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => waitForMutateTime().then(() => wrapChildrenNow(element, options));\n\n/**\n * Replace an element with another one.\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const replaceElementNow = (\n  element: Element,\n  newElement: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    ignoreMove(\n      // remove element\n      element,\n      { from: MH.parentOf(element) },\n    );\n\n    ignoreMove(\n      // move newElement to element's current parent\n      newElement,\n      { from: MH.parentOf(newElement), to: MH.parentOf(element) },\n    );\n  }\n\n  element.replaceWith(newElement);\n};\n\n/**\n * Like {@link replaceElementNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const replaceElement = async (\n  element: Element,\n  newElement: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) =>\n  waitForMutateTime().then(() =>\n    replaceElementNow(element, newElement, options),\n  );\n\n/**\n * Replace an element with another one.\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const swapElementsNow = (\n  elementA: Element,\n  elementB: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  const temp = MH.createElement(\"div\");\n  replaceElementNow(elementA, temp, options);\n  replaceElementNow(elementB, elementA, options);\n  replaceElementNow(temp, elementB, options);\n};\n\n/**\n * Like {@link swapElementsNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const swapElements = async (\n  elementA: Element,\n  elementB: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) =>\n  waitForMutateTime().then(() => swapElementsNow(elementA, elementB, options));\n\n/**\n * Move an element's children to a new element\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the children (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveChildrenNow = (\n  oldParent: Element,\n  newParent: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    for (const child of MH.childrenOf(oldParent)) {\n      ignoreMove(child, {\n        from: oldParent,\n        to: newParent,\n      });\n    }\n  }\n\n  newParent.append(...MH.childrenOf(oldParent));\n};\n\n/**\n * Like {@link moveChildrenNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveChildren = async (\n  oldParent: Element,\n  newParent: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) =>\n  waitForMutateTime().then(() =>\n    moveChildrenNow(oldParent, newParent, options),\n  );\n\n/**\n * Moves an element to a new position.\n *\n * @param {} [options.to]         The new parent or sibling (depending on\n *                                `options.position`). If not given, the\n *                                element is removed from the DOM.\n * @param {} [options.position]   - append (default): append to `options.to`\n *                                - prepend: prepend to `options.to`\n *                                - before: insert before `options.to`\n *                                - after: insert after `options.to`\n * @param {} [options.ignoreMove] If true, the DOM watcher instances will\n *                                ignore the operation of moving the element\n *                                (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveElementNow = (\n  element: Element,\n  options?: {\n    to?: Element;\n    position?: \"append\" | \"prepend\" | \"before\" | \"after\";\n    ignoreMove?: boolean;\n  },\n) => {\n  let parentEl = options?.to || null;\n  const position = options?.position || \"append\";\n  if (position === \"before\" || position === \"after\") {\n    parentEl = MH.parentOf(options?.to);\n  }\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: parentEl,\n    });\n  }\n\n  if (options?.to) {\n    options.to[position](element);\n  } else {\n    MH.remove(element);\n  }\n};\n\n/**\n * Like {@link moveElementNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveElement = async (\n  element: Element,\n  options?: {\n    to?: Element;\n    position?: \"append\" | \"prepend\" | \"before\" | \"after\";\n    ignoreMove?: boolean;\n  },\n) => waitForMutateTime().then(() => moveElementNow(element, options));\n\n/**\n * It will {@link hideElement} and then remove it from the DOM.\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering (optimized)\n */\nexport const hideAndRemoveElement = async (\n  element: Element,\n  delay = 0,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  await hideElement(element, delay);\n  moveElementNow(element, options);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getOrAssignID = (element: Element, prefix = \"\") => {\n  let domID = element.id;\n  if (!domID) {\n    domID = `${prefix}-${randId()}`;\n    element.id = domID;\n  }\n\n  return domID;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const wrapScrollingContent = async (element: Element) => {\n  await waitForMutateTime();\n\n  let wrapper: HTMLElement;\n  const firstChild = MH.childrenOf(element)[0];\n  if (\n    MH.lengthOf(MH.childrenOf(element)) === 1 &&\n    MH.isHTMLElement(firstChild) &&\n    hasClass(firstChild, PREFIX_CONTENT_WRAPPER)\n  ) {\n    // Another concurrent call has just wrapped it\n    wrapper = firstChild;\n  } else {\n    wrapper = wrapChildrenNow(element, { ignoreMove: true });\n    addClassesNow(wrapper, PREFIX_CONTENT_WRAPPER);\n  }\n\n  return wrapper;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const cloneElement = <E extends Element>(element: E) => {\n  const clone = element.cloneNode(true) as E;\n  setBoolData(clone, MH.prefixName(\"clone\"));\n  return clone;\n};\n\n/**\n * Creates a dummy hidden clone that's got animation and transitions disabled\n * and absolute position, wrapped in a wrapper (of size 0) and inserts it just\n * before the `insertBefore` element (or if not given, the original element),\n * so that the hidden clone overlaps the actual element's regular\n * (pre-transformed) position.\n *\n * It clears the ID of the clone.\n *\n * Returns the clone.\n *\n * @ignore\n * @internal\n */\nexport const insertGhostCloneNow = <E extends Element>(\n  element: E,\n  insertBefore: Element | null = null,\n) => {\n  const clone = cloneElement(element);\n  clone.id = \"\";\n\n  addClassesNow(\n    clone,\n    MC.PREFIX_GHOST,\n    MC.PREFIX_TRANSITION_DISABLE,\n    MC.PREFIX_ANIMATE_DISABLE,\n  );\n\n  const wrapper = wrapElementNow(clone);\n  addClassesNow(wrapper, MC.PREFIX_WRAPPER);\n\n  moveElementNow(wrapper, {\n    to: insertBefore || element,\n    position: \"before\",\n    ignoreMove: true,\n  });\n\n  return { _wrapper: wrapper, _clone: clone };\n};\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const insertGhostClone = <E extends Element>(\n  element: E,\n  insertBefore: Element | null = null,\n) => waitForMutateTime().then(() => insertGhostCloneNow(element, insertBefore));\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const ignoreMove = (\n  target: Element,\n  options: { from?: Element | null; to?: Element | null },\n) =>\n  recordsToSkipOnce.set(target, {\n    from: options.from || null,\n    to: options.to || null,\n  });\n\n/**\n * @ignore\n * @internal\n */\nexport const getIgnoreMove = (\n  target: Element,\n): { from: Element | null; to: Element | null } | null =>\n  recordsToSkipOnce.get(target) || null;\n\n/**\n * @ignore\n * @internal\n */\nexport const clearIgnoreMove = (target: Element) => {\n  // We should not clear the entry the first time the operation is observed\n  // (when we return true here), because there may be multiple DOMWatcher\n  // instances that will observe it and need to query it. Instead do it shortly.\n  MH.setTimer(() => {\n    MH.deleteKey(recordsToSkipOnce, target);\n  }, 100);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const insertArrow = (\n  target: Element,\n  direction: \"up\" | \"down\" | \"left\" | \"right\",\n  position: \"prepend\" | \"append\" | \"before\" | \"after\" = \"append\",\n  tag = \"span\",\n) => {\n  const arrow = MH.createElement(tag);\n  addClassesNow(arrow, MH.prefixName(MC.S_ARROW));\n  setDataNow(arrow, MH.prefixName(\"direction\"), direction);\n  moveElement(arrow, { to: target, position, ignoreMove: true });\n  return arrow;\n};\n\n// ----------------------------------------\n\nconst PREFIX_CONTENT_WRAPPER = MH.prefixName(\"content-wrapper\");\n\nconst recordsToSkipOnce = MH.newMap<\n  /* target being moved */ Element,\n  { from: Element | null; to: Element | null }\n>();\n\nconst createWrapperFor = (\n  element: Element,\n  wrapper: HTMLElement | keyof HTMLElementTagNameMap | undefined,\n) => {\n  if (MH.isElement(wrapper)) {\n    return wrapper;\n  }\n\n  let tag = wrapper;\n  if (!tag) {\n    if (isInlineTag(MH.tagName(element))) {\n      tag = \"span\";\n    } else {\n      tag = \"div\";\n    }\n  }\n\n  return MH.createElement(tag);\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { NonNullableReturnType } from \"@lisn/globals/types\";\n\n/**\n * Returns a Promise that is resolved when the given `checkFn` function returns\n * a value other than `null` or `undefined`.\n *\n * The Promise is resolved with `checkFn`'s return value.\n *\n * The function is called initially, and then every time there are changes to\n * the DOM children. Uses\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * @param {} timeout If given, then if no such element is present after this\n *                    many milliseconds, the promise will resolve to `null`.\n *\n * @category DOM: Events\n */\nexport const waitForElement = <\n  F extends () => unknown,\n  T extends number | undefined = undefined,\n>(\n  checkFn: F,\n  timeout?: number,\n) =>\n  MH.newPromise<\n    T extends undefined\n      ? NonNullableReturnType<F>\n      : null | NonNullableReturnType<F>\n  >((resolve) => {\n    const callFn = () => {\n      const result = checkFn();\n      if (!MH.isNullish(result)) {\n        resolve(result as NonNullableReturnType<F>);\n        return true; // done\n      }\n      return false;\n    };\n\n    if (callFn()) {\n      return; // resolved already\n    }\n\n    if (!MH.isNullish(timeout)) {\n      MH.setTimer(() => {\n        resolve(\n          null as T extends undefined\n            ? NonNullableReturnType<F>\n            : null | NonNullableReturnType<F>,\n        );\n        observer.disconnect();\n      }, timeout);\n    }\n\n    const observer = MH.newMutationObserver(() => {\n      if (callFn()) {\n        observer.disconnect();\n      }\n    });\n\n    observer.observe(MH.getDocElement(), {\n      childList: true,\n      subtree: true,\n    });\n  });\n\n/**\n * Returns a Promise that is resolved when the given `checkFn` function returns\n * a value other than `null` or `undefined` or the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * becomes \"interactive\".\n *\n * It always calls the given `checkFn` first before examining the `readyState`.\n *\n * If the `readyState` became interactive before the element was found, the\n * Promise resolves to `null`. Otherwise the Promise is resolved with `checkFn`'s\n * return value.\n *\n * The function is called initially, and then every time there are changes to\n * the DOM children. Uses\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * @category DOM: Events\n */\nexport const waitForElementOrInteractive = <F extends () => unknown>(\n  checkFn: F,\n) =>\n  MH.newPromise<NonNullableReturnType<F> | null>((resolve) => {\n    let isInteractive = false;\n    // Check element first, then readyState. The callback to waitForElement is\n    // run synchronously first time, so isInteractive will be false and checkFn\n    // will run.\n    waitForElement(() => isInteractive || checkFn()).then((res) => {\n      if (!isInteractive) {\n        resolve(res as NonNullableReturnType<F>);\n      } // else already resolved to null\n    });\n\n    waitForInteractive().then(() => {\n      isInteractive = true;\n      resolve(null);\n    });\n  });\n\n/**\n * Returns a Promise that is resolved when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"interactive\" (or if it's already \"interactive\" or \"complete\", the\n * Promise is fulfilled immediately).\n *\n * @category DOM: Events\n */\nexport const waitForInteractive = () =>\n  MH.newPromise<void>((resolve) => {\n    const readyState = MH.getReadyState();\n    if (readyState === INTERACTIVE || readyState === COMPLETE) {\n      resolve();\n      return;\n    }\n\n    MH.getDoc().addEventListener(\"DOMContentLoaded\", () => resolve());\n  });\n\n/**\n * Returns a Promise that is resolved when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"complete\" (or if it's already \"complete\", the Promise is fulfilled\n * immediately).\n *\n * @category DOM: Events\n */\nexport const waitForComplete = () =>\n  MH.newPromise<void>((resolve) => {\n    if (MH.getReadyState() === COMPLETE) {\n      resolve();\n      return;\n    }\n\n    MH.getDoc().addEventListener(\"readystatechange\", () => {\n      if (MH.getReadyState() === COMPLETE) {\n        resolve();\n      }\n    });\n  });\n\n/**\n * Returns a Promise that is resolved either when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"complete\" or the `readyState` is \"interactive\" and at least\n * {@link settings.pageLoadTimeout} milliseconds have passed (if > 0) since it\n * became \"interactive\".\n *\n * @category DOM: Events\n */\nexport const waitForPageReady = () =>\n  MH.newPromise<void>((resolve) => {\n    if (pageIsReady) {\n      resolve();\n      return;\n    }\n\n    return waitForInteractive().then(() => {\n      // Setup a listener for the complete state but wait at most\n      // <pageLoadTimeout> (if specified)\n      let timer: ReturnType<typeof setTimeout> | null = null;\n\n      const dispatchReady = () => {\n        pageIsReady = true;\n        if (timer) {\n          MH.clearTimer(timer);\n          timer = null;\n        }\n        resolve();\n      };\n\n      if (settings.pageLoadTimeout > 0) {\n        timer = MH.setTimer(() => {\n          dispatchReady();\n        }, settings.pageLoadTimeout);\n      }\n\n      waitForComplete().then(dispatchReady);\n    });\n  });\n\n/**\n * Returns true if the page is \"ready\". See {@link waitForPageReady}.\n *\n * @category DOM: Events\n */\nexport const isPageReady = () => pageIsReady;\n\n// --------------------\n\nconst COMPLETE = \"complete\";\nconst INTERACTIVE = \"interactive\";\n\nlet pageIsReady = false;\n\nif (!MH.hasDOM()) {\n  pageIsReady = true;\n} else {\n  waitForPageReady(); // ensure pageIsReady is set even if waitForPageReady is not called\n}\n","/**\n * @module Modules/XMap\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { MapBase } from \"@lisn/globals/types\";\n\nexport type DefaultValueGetter<K, V> = (key: K) => V;\nexport type IteratorCallback<K, V> = (\n  value: V,\n  key: K,\n  map: XMap<K, V>,\n) => void;\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXMap = <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  new XMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXMapGetter =\n  <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXMap(getDefaultV);\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMap = <K extends WeakKey, V>(\n  getDefaultV: DefaultValueGetter<K, V>,\n) => new XWeakMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXWeakMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMapGetter =\n  <K extends WeakKey, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXWeakMap(getDefaultV);\n\nexport abstract class XMapBase<K, V> {\n  /**\n   * Returns the value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly get: (key: K) => V | undefined;\n\n  /**\n   * Like {@link get} except that if the key is not found in the map, then it\n   * will set and return a default value by calling `getDefaultV` passed to the\n   * constructor.\n   */\n  readonly sGet: (key: K) => V;\n\n  /**\n   * Sets a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly set: (key: K, value: V) => void;\n\n  /**\n   * Deletes a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly delete: (key: K) => void;\n\n  /**\n   * Deletes empty keys in the {@link XMap} or {@link XWeakMap} starting at the\n   * final nested path and checking the level above after deletion.\n   *\n   * A key is considered empty if it's value is undefined or it's an empty Map,\n   * Set, Array, etc (anything with size or length property equal to 0).\n   */\n  readonly prune: (sk: K, ...rest: unknown[]) => void;\n\n  /**\n   * Returns true if the {@link XMap} or {@link XWeakMap} contains the given key.\n   */\n  readonly has: (key: K) => boolean;\n\n  protected constructor(\n    root: MapBase<K, V>,\n    getDefaultV: DefaultValueGetter<K, V>,\n  ) {\n    this.get = (key) => root.get(key);\n    this.set = (key, value) => root.set(key, value);\n    this.delete = (key) => MH.deleteKey(root, key);\n    this.has = (key) => root.has(key);\n\n    this.sGet = (key) => {\n      let result = root.get(key);\n      if (result === undefined) {\n        result = getDefaultV(key);\n        root.set(key, result);\n      }\n      return result;\n    };\n\n    this.prune = (sk, ...rest) => {\n      const value = root.get(sk);\n      if (value instanceof XMapBase && MH.lengthOf(rest)) {\n        value.prune(rest[0], ...rest.slice(1));\n      }\n\n      if (\n        value === undefined ||\n        (MH.isIterableObject(value) &&\n          !(\n            (\"size\" in value && value.size) ||\n            (\"length\" in value && value.length)\n          ))\n      ) {\n        MH.deleteKey(root, sk);\n      }\n    };\n  }\n}\n\n/**\n * {@link XMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map | Map},\n * except that it supports automatically creating missing entries with\n * {@link sGet} according to a default value getter function.\n *\n * @typeParam K  The type of the keys the map holds.\n * @typeParam V  The type of the values the map holds.\n */\nexport class XMap<K, V> extends XMapBase<K, V> implements Iterable<[K, V]> {\n  /**\n   * Returns the number of entries in the {@link XMap}.\n   */\n  readonly size!: number;\n\n  /**\n   * Deletes all entries in the {@link XMap}.\n   */\n  readonly clear: () => void;\n\n  /**\n   * Returns an iterator over the {@link XMap} entries.\n   */\n  readonly entries: () => MapIterator<[K, V]>;\n\n  /**\n   * Returns an iterator over the {@link XMap} keys.\n   */\n  readonly keys: () => MapIterator<K>;\n\n  /**\n   * Returns an iterator over the {@link XMap} values.\n   */\n  readonly values: () => MapIterator<V>;\n\n  readonly [Symbol.iterator]!: () => IterableIterator<[K, V]>;\n\n  /**\n   * Returns a function that when called returns a new {@link XMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XMap}s.\n   */\n  static readonly newXMapGetter = newXMapGetter;\n\n  /**\n   * @param {} getDefaultV  This function is called each time\n   *                        {@link sGet} is called with a non-existent\n   *                        key and must return a value that is then set for\n   *                        that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newMap<K, V>();\n    super(root, getDefaultV);\n\n    MH.defineProperty(this, \"size\", { get: () => root.size });\n    this.clear = () => root.clear();\n    this.entries = () => root.entries();\n    this.keys = () => root.keys();\n    this.values = () => root.values();\n    this[MC.SYMBOL.iterator] = () => root[MC.SYMBOL.iterator]();\n  }\n}\n\n/**\n * {@link XWeakMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap | WeakMap},\n * except that it supports automatically creating missing entries with\n * with {@link sGet} according to a default value getter function.\n *\n * @typeParam K  The type of the keys the map holds.\n * @typeParam V  The type of the values the map holds.\n */\nexport class XWeakMap<K extends WeakKey, V> extends XMapBase<K, V> {\n  /**\n   * Returns a function that when called returns a new {@link XWeakMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XWeakMap}s.\n   */\n  static readonly newXWeakMapGetter = newXWeakMapGetter;\n\n  /**\n   * @param {} getDefaultV  This function is called each time\n   *                        {@link sGet} is called with a non-existent\n   *                        key and must return a value that is then set for\n   *                        that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newWeakMap<K, V>();\n    super(root, getDefaultV);\n  }\n}\n","/**\n * @module Watchers/DOMWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  MutationCategory,\n  CommaSeparatedStr,\n  AtLeastOne,\n} from \"@lisn/globals/types\";\n\nimport { DOM_CATEGORIES_SPACE } from \"@lisn/utils/dom\";\nimport {\n  getIgnoreMove,\n  clearIgnoreMove,\n  ignoreMove,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link DOMWatcher} listens for changes do the DOM tree. It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * It manages registered callbacks globally and reuses MutationObservers for\n * more efficient performance.\n *\n * Each instance of DOMWatcher manages up to two MutationObservers: one\n * for `childList` changes and one for attribute changes, and it disconnects\n * them when there are no active callbacks for the relevant type.\n *\n * `characterData` and changes to base\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Node | Node}s\n * (non-{@link https://developer.mozilla.org/en-US/docs/Web/API/Element | Element})\n * are not supported.\n */\nexport class DOMWatcher {\n  /**\n   * Call the given handler whenever there's a matching mutation within this\n   * DOMWatcher's {@link DOMWatcherConfig.root | root}.\n   *\n   * If {@link OnMutationOptions.skipInitial | options.skipInitial} is `false`\n   * (default), _and_ {@link OnMutationOptions.selector | options.selector} is\n   * given, _and_ {@link OnMutationOptions.categories | options.categories}\n   * includes \"added\", the handler is also called (almost) immediately with all\n   * existing elements matching the selector under this DOMWatcher's\n   * {@link DOMWatcherConfig.root | root}.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times, even if\n   * the options differ. If the handler has already been added, it is removed\n   * and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are not valid.\n   */\n  readonly onMutation: (\n    handler: OnMutationHandler,\n    options?: OnMutationOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offMutation: (handler: OnMutationHandler) => void;\n\n  /**\n   * Ignore an upcoming moving/adding/removing of an element.\n   *\n   * The operation must complete within the next cycle, by the time\n   * MutationObserver calls us.\n   *\n   * Use this to prevent this instance of DOMWatcher from calling any callbacks\n   * that listen for relevant changes as a result of this operation, to prevent\n   * loops for example.\n   *\n   * **IMPORTANT:**\n   *\n   * Ignoring moving of an element from a parent _inside_ this DOMWatcher's\n   * root to another parent that's _outside_ the root, will work as expected,\n   * even though the \"adding to the new parent\" mutation will not be observed.\n   * This is because the element's current parent at the time of the mutation\n   * callback can be examined.\n   *\n   * However if you want to ignore moving of an element _from a parent outside\n   * this DOMWatcher's root_ you need to specify from: null since the \"removal\n   * from the old parent\" mutation would not be observed and there's no way to\n   * examine it's previous parent at the time the \"adding to the new parent\"\n   * mutation is observed.\n   *\n   * For this reason, setting `options.from` to be an element that's not under\n   * the root is internally treated the same as `options.from: null`.\n   */\n  readonly ignoreMove: (target: Element, options: MoveOptions) => void;\n\n  /**\n   * Creates a new instance of DOMWatcher with the given\n   * {@link DOMWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: DOMWatcherConfig = {}) {\n    return new DOMWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of DOMWatcher with the given\n   * {@link DOMWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: DOMWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    const root = myConfig._root === MH.getBody() ? null : myConfig._root;\n    let instance = instances.get(root)?.get(configStrKey);\n    if (!instance) {\n      instance = new DOMWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: DOMWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"DOMWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"DOMWatcher\", logAtCreation: config })\n      : null;\n\n    const buffer = newXMap<Element, MutationOperationInternal>((t) => ({\n      _target: t,\n      _categoryBitmask: 0,\n      _attributes: MH.newSet(),\n      _addedTo: null,\n      _removedFrom: null,\n    }));\n\n    const allCallbacks = MH.newMap<\n      OnMutationHandler,\n      {\n        _callback: OnMutationCallback;\n        _options: OnMutationOptionsInternal;\n      }\n    >();\n\n    // ----------\n\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const mutationHandler = (records: MutationRecord[]) => {\n      debug: logger?.debug9(`Got ${records.length} new records`, records);\n\n      for (const record of records) {\n        const target = MH.targetOf(record);\n        const recType = record.type;\n\n        /* istanbul ignore next */\n        if (!MH.isElement(target)) {\n          continue;\n        }\n\n        if (recType === MC.S_CHILD_LIST) {\n          for (const child of record.addedNodes) {\n            if (MH.isElement(child)) {\n              const operation = buffer.sGet(child);\n              operation._addedTo = target;\n              operation._categoryBitmask |= ADDED_BIT;\n            }\n          }\n\n          for (const child of record.removedNodes) {\n            if (MH.isElement(child)) {\n              const operation = buffer.sGet(child);\n              operation._removedFrom = target;\n              operation._categoryBitmask |= REMOVED_BIT;\n            }\n          }\n\n          //\n        } else if (recType === MC.S_ATTRIBUTES && record.attributeName) {\n          const operation = buffer.sGet(target);\n          operation._attributes.add(record.attributeName);\n          operation._categoryBitmask |= ATTRIBUTE_BIT;\n        }\n      }\n\n      // Schedule flushing of the buffer asynchronously so that we can combine\n      // the records from the two MutationObservers.\n      if (!timer && MH.sizeOf(buffer)) {\n        timer = MH.setTimer(() => {\n          debug: logger?.debug9(`Processing ${buffer.size} operations`);\n          for (const operation of buffer.values()) {\n            if (shouldSkipOperation(operation)) {\n              debug: logger?.debug10(\"Skipping operation\", operation);\n            } else {\n              processOperation(operation);\n            }\n          }\n\n          buffer.clear();\n          timer = null;\n        }, 0);\n      }\n    };\n\n    const observers: Record<MutationType, MyObserver> = {\n      [MC.S_CHILD_LIST]: {\n        _observer: MH.newMutationObserver(mutationHandler),\n        _isActive: false,\n      },\n      [MC.S_ATTRIBUTES]: {\n        _observer: MH.newMutationObserver(mutationHandler),\n        _isActive: false,\n      },\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnMutationHandler,\n      options: OnMutationOptionsInternal,\n    ): OnMutationCallback => {\n      MH.remove(allCallbacks.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => deleteHandler(handler));\n\n      allCallbacks.set(handler, { _callback: callback, _options: options });\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnMutation = async (\n      handler: OnMutationHandler,\n      userOptions: OnMutationOptions | undefined,\n    ) => {\n      const options = getOptions(userOptions || {});\n      const callback = createCallback(handler, options);\n\n      let root = config._root || MH.getBody();\n      if (!root) {\n        root = await waitForElement(MH.getBody);\n      } else {\n        // So that the call is always async\n        await null;\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      if (options._categoryBitmask & (ADDED_BIT | REMOVED_BIT)) {\n        activateObserver(root, MC.S_CHILD_LIST);\n      }\n\n      if (options._categoryBitmask & ATTRIBUTE_BIT) {\n        activateObserver(root, MC.S_ATTRIBUTES);\n      }\n\n      if (\n        userOptions?.skipInitial ||\n        !options._selector ||\n        !(options._categoryBitmask & ADDED_BIT)\n      ) {\n        return;\n      }\n\n      // As some of the matching elements that currently exist in the root may\n      // have just been added and therefore in the MutationObserver's queue, to\n      // avoid calling the handler with those entries twice, we empty its queue\n      // now and process it (which would also invoke the newly added callback).\n      // Then we skip any elements returned in querySelectorAll that were in\n      // the queue.\n\n      const childQueue = observers[MC.S_CHILD_LIST]._observer.takeRecords();\n      mutationHandler(childQueue);\n\n      for (const element of [\n        ...MH.querySelectorAll(root, options._selector),\n        ...(root.matches(options._selector) ? [root] : []),\n      ]) {\n        const initOperation: MutationOperationInternal = {\n          _target: element,\n          _categoryBitmask: ADDED_BIT,\n          _attributes: MH.newSet(),\n          _addedTo: MH.parentOf(element),\n          _removedFrom: null,\n        };\n\n        const bufferedOperation = buffer.get(element);\n        const diffOperation = getDiffOperation(\n          initOperation,\n          bufferedOperation,\n        );\n\n        if (diffOperation) {\n          if (shouldSkipOperation(diffOperation)) {\n            debug: logger?.debug10(\"Skipping operation\", diffOperation);\n          } else {\n            debug: logger?.debug5(\"Calling initially with\", diffOperation);\n            await invokeCallback(callback, diffOperation);\n          }\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (handler: OnMutationHandler) => {\n      MH.deleteKey(allCallbacks, handler);\n\n      let activeCategories = 0;\n      for (const entry of allCallbacks.values()) {\n        activeCategories |= entry._options._categoryBitmask;\n      }\n\n      if (!(activeCategories & (ADDED_BIT | REMOVED_BIT))) {\n        deactivateObserver(MC.S_CHILD_LIST);\n      }\n\n      if (!(activeCategories & ATTRIBUTE_BIT)) {\n        deactivateObserver(MC.S_ATTRIBUTES);\n      }\n    };\n\n    // ----------\n\n    const processOperation = (operation: MutationOperationInternal) => {\n      debug: logger?.debug10(\"Processing operation\", operation);\n\n      for (const entry of allCallbacks.values()) {\n        const categoryBitmask = entry._options._categoryBitmask;\n        const target = entry._options._target;\n        const selector = entry._options._selector;\n\n        if (!(operation._categoryBitmask & categoryBitmask)) {\n          debug: logger?.debug10(`Category does not match: ${categoryBitmask}`);\n          continue;\n        }\n\n        const currentTargets = [];\n        if (target) {\n          if (!operation._target.contains(target)) {\n            debug: logger?.debug10(\"Target does not match\", target);\n            continue;\n          }\n\n          currentTargets.push(target);\n        }\n\n        if (selector) {\n          const matches = [...MH.querySelectorAll(operation._target, selector)];\n\n          if (operation._target.matches(selector)) {\n            matches.push(operation._target);\n          }\n\n          if (!MH.lengthOf(matches)) {\n            debug: logger?.debug10(`Selector does not match: ${selector}`);\n            continue;\n          }\n\n          currentTargets.push(...matches);\n        }\n\n        invokeCallback(entry._callback, operation, currentTargets);\n      }\n    };\n\n    // ----------\n\n    const activateObserver = (root: Element, mutationType: MutationType) => {\n      if (!observers[mutationType]._isActive) {\n        debug: logger?.debug3(\n          `Activating mutation observer for '${mutationType}'`,\n        );\n        observers[mutationType]._observer.observe(root, {\n          [mutationType]: true,\n          subtree: config._subtree,\n        });\n        observers[mutationType]._isActive = true;\n      }\n    };\n\n    // ----------\n\n    const deactivateObserver = (mutationType: MutationType) => {\n      if (observers[mutationType]._isActive) {\n        debug: logger?.debug3(\n          `Disconnecting mutation observer for '${mutationType}'`,\n        );\n        observers[mutationType]._observer.disconnect();\n        observers[mutationType]._isActive = false;\n      }\n    };\n\n    // ----------\n\n    const shouldSkipOperation = (\n      operation: MutationOperationInternal,\n    ): boolean => {\n      const target = operation._target;\n      const requestToSkip = getIgnoreMove(target);\n      if (!requestToSkip) {\n        return false;\n      }\n\n      const removedFrom = operation._removedFrom;\n      const addedTo = MH.parentOf(target);\n      const requestFrom = requestToSkip.from;\n      const requestTo = requestToSkip.to;\n\n      const root = config._root || MH.getBody();\n      // If \"from\" is currently outside our root, we may not have seen a\n      // removal operation.\n      if (\n        (removedFrom === requestFrom || !root.contains(requestFrom)) &&\n        addedTo === requestTo\n      ) {\n        clearIgnoreMove(target);\n        return true;\n      }\n\n      return false;\n    };\n\n    // ----------\n\n    this.ignoreMove = ignoreMove;\n\n    // ----------\n\n    this.onMutation = setupOnMutation;\n\n    // ----------\n\n    this.offMutation = (handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type DOMWatcherConfig = {\n  /**\n   * The root element to observe for changes.\n   *\n   * It cannot be overridden on a per-callback basis.\n   *\n   * @defaultValue document.body\n   */\n  root?: Element | null;\n\n  /**\n   * Whether to observe root's subtree for changes or just direct descendants.\n   *\n   * It cannot be overridden on a per-callback basis.\n   *\n   * @defaultValue true\n   */\n  subtree?: boolean;\n};\n\n/**\n * @interface\n */\nexport type OnMutationOptions = {\n  /**\n   * If this is given, then the handler would only be called for operations\n   * where the target is _either_ the given element or an ancestor of it, i.e.\n   * it {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/contains | Node:contains} it.\n   *\n   * @defaultValue undefined\n   */\n  target?: Element;\n\n  /**\n   * If this is given, then the handler would only be called for operations\n   * where the target matches the given selector _or contains an element\n   * matching the given selector_.\n   *\n   * @defaultValue undefined\n   */\n  selector?: string;\n\n  /**\n   * Specifies a list of {@link MutationCategory}s to target for.\n   *\n   * If not given, then the handler is called for any of the supported\n   * mutations.\n   *\n   * It can be a comma-separated list of category names or an array of such\n   * names.\n   *\n   * @defaultValue undefined\n   */\n  categories?: CommaSeparatedStr<MutationCategory> | MutationCategory[];\n\n  /**\n   * Do not call the handler until there's a future matching mutation.\n   *\n   * By default, if `selector` is given, and `categories` includes `added`, we\n   * call the handler (almost) immediately with all elements matching selector\n   * relative to this DOMWatcher's root.\n   *\n   * The initial operation will contain just the element and\n   * `addedTo: <current parent>`.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\nexport type MoveOptions = AtLeastOne<{\n  /**\n   * If to is missing or null, it's a removal operation.\n   */\n  to: Element | null;\n\n  /**\n   * If from is missing or null, it's an insertion operation.\n   */\n  from: Element | null;\n}>;\n\nexport type MutationOperation = {\n  /**\n   * The target that was changed.\n   */\n  target: Element;\n\n  /**\n   * The target that the callback was interested in.\n   *\n   * If `selector` is given as part of {@link OnMutationOptions}, then\n   * `currentTarget` will point to the target that matched the selector\n   * starting at the operation's `target` as the root. If the operation's\n   * `target` contains more than one element matching selector, the callback\n   * will be called once for _each_ matching child.\n   *\n   * If `target` is given as part of {@link OnMutationOptions}, then\n   * `currentTarget` will be that element.\n   */\n  currentTarget: Element;\n\n  /**\n   * The list of attributes that were changed in this round.\n   */\n  attributes: Set<string>;\n\n  /**\n   * The element that the target was added to, i.e. it's new parent. It is null\n   * if the target was not moved to a new element _during this round_. It does\n   * not mean that this is its current parent.\n   */\n  addedTo: Element | null;\n\n  /**\n   * The element that the target was removed from, i.e. it's old parent. It is\n   * null if the target was not removed from a previous element _during this\n   * round_. It does not mean it did not previously have a parent, but that its\n   * removal was not observed.\n   */\n  removedFrom: Element | null;\n};\n\n/**\n * The handler is invoked with one argument:\n *\n * - a {@link MutationOperation} for a set of mutations related to a particular\n *   element\n *\n * The handler could be invoked multiple times in each \"round\" (cycle of event\n * loop) if there are mutation operations for more than one element that match\n * the supplied {@link OnMutationOptions}.\n */\nexport type OnMutationHandlerArgs = [MutationOperation];\nexport type OnMutationCallback = Callback<OnMutationHandlerArgs>;\nexport type OnMutationHandler =\n  | CallbackHandler<OnMutationHandlerArgs>\n  | OnMutationCallback;\n\n// ----------------------------------------\n\ntype DOMWatcherConfigInternal = {\n  _root: Element | null;\n  _subtree: boolean;\n};\n\ntype OnMutationOptionsInternal = {\n  _target: Element | null;\n  _selector: string;\n  _categoryBitmask: number;\n};\n\ntype MyObserver = {\n  _observer: MutationObserver;\n  _isActive: boolean;\n};\n\ntype MutationType = \"childList\" | \"attributes\";\n\ntype MutationOperationInternal = {\n  _target: Element;\n  _attributes: Set<string>;\n  _addedTo: Element | null;\n  _removedFrom: Element | null;\n  _categoryBitmask: number;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, DOMWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (config: DOMWatcherConfig): DOMWatcherConfigInternal => {\n  return {\n    _root: config.root || null,\n    _subtree: config.subtree ?? true,\n  };\n};\n\nconst CATEGORIES_BITS = DOM_CATEGORIES_SPACE.bit;\nconst ADDED_BIT = CATEGORIES_BITS[MC.S_ADDED];\nconst REMOVED_BIT = CATEGORIES_BITS[MC.S_REMOVED];\nconst ATTRIBUTE_BIT = CATEGORIES_BITS[MC.S_ATTRIBUTE];\n\n// ----------------------------------------\n\nconst getOptions = (options: OnMutationOptions): OnMutationOptionsInternal => {\n  let categoryBitmask = 0;\n  const categories = validateStrList(\n    \"categories\",\n    options.categories,\n    DOM_CATEGORIES_SPACE.has,\n  );\n\n  if (categories) {\n    for (const cat of categories) {\n      categoryBitmask |= CATEGORIES_BITS[cat];\n    }\n  } else {\n    categoryBitmask = DOM_CATEGORIES_SPACE.bitmask; // default: all\n  }\n\n  const selector = options.selector || \"\";\n  if (!MH.isString(selector)) {\n    throw MH.usageError(\"'selector' must be a string\");\n  }\n\n  return {\n    _categoryBitmask: categoryBitmask,\n    _target: options.target || null,\n    _selector: options.selector || \"\",\n  };\n};\n\nconst getDiffOperation = (\n  operationA: MutationOperationInternal,\n  operationB: MutationOperationInternal | undefined,\n): MutationOperationInternal | null => {\n  if (!operationB || operationA._target !== operationB._target) {\n    return operationA;\n  }\n\n  const attributes = MH.newSet<string>();\n  for (const attr of operationA._attributes) {\n    if (!operationB._attributes.has(attr)) {\n      attributes.add(attr);\n    }\n  }\n\n  const categoryBitmask =\n    operationA._categoryBitmask ^ operationB._categoryBitmask;\n\n  const addedTo =\n    operationA._addedTo === operationB._addedTo ? null : operationA._addedTo;\n\n  const removedFrom =\n    operationA._removedFrom === operationB._removedFrom\n      ? null\n      : operationA._removedFrom;\n\n  if (!MH.sizeOf(attributes) && !categoryBitmask && !addedTo && !removedFrom) {\n    return null;\n  }\n\n  return {\n    _target: operationA._target,\n    _categoryBitmask: categoryBitmask,\n    _attributes: attributes,\n    _addedTo: addedTo,\n    _removedFrom: removedFrom,\n  };\n};\n\nconst invokeCallback = (\n  callback: OnMutationCallback,\n  operation: MutationOperationInternal,\n  currentTargets: Element[] = [],\n) => {\n  if (!MH.lengthOf(currentTargets)) {\n    currentTargets = [operation._target];\n  }\n\n  for (const currentTarget of currentTargets) {\n    callback\n      .invoke({\n        target: operation._target,\n        currentTarget,\n        attributes: operation._attributes,\n        addedTo: operation._addedTo,\n        removedFrom: operation._removedFrom,\n      })\n      .catch(logError);\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  XYDirection,\n  ZDirection,\n  NoDirection,\n  AmbiguousDirection,\n  CommaSeparatedStr,\n  Vector,\n} from \"@lisn/globals/types\";\n\nimport { maxAbs, areParallel } from \"@lisn/utils/math\";\nimport { isValidStrList, validateStrList } from \"@lisn/utils/validation\";\n\n/**\n * Returns the cardinal direction in the XY plane for the larger of the two\n * deltas (horizontal vs vertical).\n *\n * If both deltas are 0, returns \"none\".\n *\n * If both deltas are equal and non-0, returns \"ambiguous\".\n *\n * @category Directions\n */\nexport const getMaxDeltaDirection = (\n  deltaX: number,\n  deltaY: number,\n): XYDirection | NoDirection | AmbiguousDirection => {\n  if (!MH.abs(deltaX) && !MH.abs(deltaY)) {\n    return MC.S_NONE;\n  }\n\n  if (MH.abs(deltaX) === MH.abs(deltaY)) {\n    return MC.S_AMBIGUOUS;\n  }\n\n  if (MH.abs(deltaX) > MH.abs(deltaY)) {\n    return deltaX < 0 ? MC.S_LEFT : MC.S_RIGHT;\n  }\n  return deltaY < 0 ? MC.S_UP : MC.S_DOWN;\n};\n\n/**\n * Returns the approximate direction of the given 2D vector as one of the\n * cardinal (XY plane) ones: \"up\", \"down\", \"left\" or \"right\"; or \"ambiguous\".\n *\n * @param {} angleDiffThreshold  See {@link areParallel} or\n *                               {@link Utils.areAntiParallel | areAntiParallel}.\n *                               This determines whether the inferred direction\n *                               is ambiguous. For it to _not_ be ambiguous it\n *                               must align with one of the four cardinal\n *                               directions to within `angleDiffThreshold`.\n *                               It doesn't make sense for this value to be < 0\n *                               or >= 45 degrees. If it is, it's forced to be\n *                               positive (absolute) and <= 44.99.\n *\n * @category Directions\n */\nexport const getVectorDirection = (\n  vector: Vector,\n  angleDiffThreshold = 0,\n): XYDirection | AmbiguousDirection | NoDirection => {\n  angleDiffThreshold = MH.min(44.99, MH.abs(angleDiffThreshold));\n\n  if (!maxAbs(...vector)) {\n    return MC.S_NONE;\n  } else if (areParallel(vector, [1, 0], angleDiffThreshold)) {\n    return MC.S_RIGHT;\n  } else if (areParallel(vector, [0, 1], angleDiffThreshold)) {\n    return MC.S_DOWN;\n  } else if (areParallel(vector, [-1, 0], angleDiffThreshold)) {\n    return MC.S_LEFT;\n  } else if (areParallel(vector, [0, -1], angleDiffThreshold)) {\n    return MC.S_UP;\n  }\n\n  return MC.S_AMBIGUOUS;\n};\n\n/**\n * Returns the opposite direction to the given direction or null if the given\n * direction has no opposite.\n *\n * @example\n * ```javascript\n * getOppositeDirection(\"up\"); // -> \"down\"\n * getOppositeDirection(\"down\"); // -> \"up\"\n * getOppositeDirection(\"left\"); // -> \"right\"\n * getOppositeDirection(\"right\"); // -> \"left\"\n * getOppositeDirection(\"none\"); // -> null\n * getOppositeDirection(\"ambiguous\"); // -> null\n * ```\n *\n * @category Directions\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid.\n */\nexport const getOppositeDirection = (\n  direction: Direction,\n): Direction | null => {\n  if (!(direction in OPPOSITE_DIRECTIONS)) {\n    throw MH.usageError(\"Invalid 'direction'\");\n  }\n\n  return OPPOSITE_DIRECTIONS[direction];\n};\n\n/**\n * Returns the set of directions which are opposite to the given set of directions.\n *\n * There are two sets of opposite pairs (\"up\"/\"down\" and \"left\"/\"right\") and at\n * least one of the two opposing directions of a pair must be present for the\n * other one to be included. If both directions that constitute a pair of\n * opposites is given, then the other pair is returned instead (minus any that\n * are present in the input). See examples below for clarification.\n *\n * @example\n * ```javascript\n * getOppositeXYDirections(\"up\"); // -> [\"down\"]\n * getOppositeXYDirections(\"left\"); // -> [\"right\"]\n * getOppositeXYDirections(\"up,down\"); // -> [\"left\",\"right\"]\n * getOppositeXYDirections(\"up,left\"); // -> [\"down\",\"right\"]\n * getOppositeXYDirections(\"up,left,right\"); // -> [\"down\"]\n * getOppositeXYDirections(\"none\"); // -> throws\n * getOppositeXYDirections(\"ambiguous\"); // -> throws\n * getOppositeXYDirections(\"in\"); // -> throws\n * ```\n *\n * @category Directions\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid.\n */\nexport const getOppositeXYDirections = (\n  directions: CommaSeparatedStr<XYDirection> | XYDirection[],\n): XYDirection[] => {\n  const directionList = validateStrList(\n    \"directions\",\n    directions,\n    isValidXYDirection,\n  );\n\n  if (!directionList) {\n    throw MH.usageError(\"'directions' is required\");\n  }\n\n  const opposites: XYDirection[] = [];\n  for (const direction of directionList) {\n    const opposite = getOppositeDirection(direction);\n    if (\n      opposite &&\n      isValidXYDirection(opposite) &&\n      !MH.includes(directionList, opposite)\n    ) {\n      opposites.push(opposite);\n    }\n  }\n\n  if (!MH.lengthOf(opposites)) {\n    for (const direction of XY_DIRECTIONS) {\n      if (!MH.includes(directionList, direction)) {\n        opposites.push(direction);\n      }\n    }\n  }\n\n  return opposites;\n};\n\n/**\n * Returns true if the given direction is one of the known XY ones.\n *\n * @category Validation\n */\nexport const isValidXYDirection = (\n  direction: string,\n): direction is XYDirection => MH.includes(XY_DIRECTIONS, direction);\n\n/**\n * Returns true if the given direction is one of the known Z ones.\n *\n * @category Validation\n */\nexport const isValidZDirection = (direction: string): direction is ZDirection =>\n  MH.includes(Z_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string is a valid direction.\n *\n * @category Validation\n */\nexport const isValidDirection = (direction: string): direction is Direction =>\n  MH.includes(DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid directions.\n *\n * @category Validation\n */\nexport const isValidDirectionList = (\n  directions: string | string[],\n): directions is CommaSeparatedStr<Direction> | Direction[] =>\n  isValidStrList(directions, isValidDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const XY_DIRECTIONS = [\n  MC.S_UP,\n  MC.S_DOWN,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const Z_DIRECTIONS = [MC.S_IN, MC.S_OUT] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const SCROLL_DIRECTIONS = [\n  ...XY_DIRECTIONS,\n  MC.S_NONE,\n  MC.S_AMBIGUOUS,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const DIRECTIONS = [\n  ...XY_DIRECTIONS,\n  ...Z_DIRECTIONS,\n  MC.S_NONE,\n  MC.S_AMBIGUOUS,\n] as const;\n\n// --------------------\n\nconst OPPOSITE_DIRECTIONS = {\n  [MC.S_UP]: MC.S_DOWN,\n  [MC.S_DOWN]: MC.S_UP,\n  [MC.S_LEFT]: MC.S_RIGHT,\n  [MC.S_RIGHT]: MC.S_LEFT,\n  [MC.S_IN]: MC.S_OUT,\n  [MC.S_OUT]: MC.S_IN,\n  [MC.S_NONE]: null,\n  [MC.S_AMBIGUOUS]: null,\n} as const;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { addClasses, removeClasses } from \"@lisn/utils/css-alter\";\nimport { copyExistingKeys } from \"@lisn/utils/misc\";\n\nimport { XMap, newXMapGetter, newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * Calls the given event listener, which could be a function that's callable\n * directly, or an object that has a `handleEvent` function property.\n *\n * @category Events: Generic\n */\nexport const callEventListener = (\n  handler: EventListenerOrEventListenerObject,\n  event: Event,\n) => {\n  if (MH.isFunction(handler)) {\n    handler.call(event.currentTarget || self, event);\n  } else {\n    handler.handleEvent.call(event.currentTarget || self, event);\n  }\n};\n\n/**\n * Adds an event listener for the given event name to the given target.\n *\n * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener | EventTarget:addEventListener}\n * but it handles `options` object in case the browser does not support those.\n * Does not support the `signal` option unless browser natively supports that.\n *\n * @return {} `true` if successfully added, or `false` if the same handler has\n * already been added by us, or if the handler is not a valid event listener.\n *\n * @category Events: Generic\n */\nexport const addEventListenerTo = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions = {},\n): boolean => {\n  eventType = transformEventType(eventType);\n  if (getEventHandlerData(target, eventType, handler, options)) {\n    // already added\n    return false;\n  }\n\n  let thirdArg = options;\n  let wrappedHandler = handler;\n\n  // If the user passed an options object but the browser only supports a\n  // boolen for 'useCapture', then handle this.\n  const supports = getBrowserSupport();\n  if (MH.isNonPrimitive(options)) {\n    if (!supports._optionsArg) {\n      thirdArg = options.capture ?? false;\n    }\n\n    if (options.once && !supports._options.once) {\n      // Remove the handler once it's called once\n      wrappedHandler = (event) => {\n        removeEventListenerFrom(target, eventType, handler, options);\n        callEventListener(handler, event);\n      };\n    }\n  }\n\n  setEventHandlerData(target, eventType, handler, options, {\n    _wrappedHandler: wrappedHandler,\n    _thirdArg: thirdArg,\n  });\n\n  target.addEventListener(eventType, wrappedHandler, thirdArg);\n  return true;\n};\n\n/**\n * Removes an event listener that has been added using\n * {@link addEventListenerTo}.\n *\n * **IMPORTANT:** If you have added a listener using the built-in\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener | EventTarget:addEventListener},\n * then you should use\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener | EventTarget:removeEventListener},\n * to remove it, not this function.\n *\n * @return {} `true` if successfully removed, or `false` if the handler has not\n * been added by us.\n *\n * @category Events: Generic\n */\nexport const removeEventListenerFrom = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions = {},\n) => {\n  eventType = transformEventType(eventType);\n  const data = getEventHandlerData(target, eventType, handler, options);\n\n  if (!data) {\n    return false;\n  }\n\n  target.removeEventListener(eventType, data._wrappedHandler, data._thirdArg);\n  deleteEventHandlerData(target, eventType, handler, options);\n  return true;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const preventSelect = (target: EventTarget) => {\n  addEventListenerTo(target, MC.S_SELECTSTART, MH.preventDefault);\n  if (MH.isElement(target)) {\n    addClasses(target, MC.PREFIX_NO_SELECT);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const undoPreventSelect = (target: EventTarget) => {\n  removeEventListenerFrom(target, MC.S_SELECTSTART, MH.preventDefault);\n  if (MH.isElement(target)) {\n    removeClasses(target, MC.PREFIX_NO_SELECT);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getBrowserSupport = (): BrowserEventSupport => {\n  if (browserEventSupport) {\n    // already detected\n    return browserEventSupport;\n  }\n\n  const supports = {\n    _pointer: false,\n    _optionsArg: false,\n    _options: {\n      capture: false,\n      passive: false,\n      once: false,\n      signal: false,\n    },\n  };\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#safely_detecting_option_support\n  const optTest = {};\n  let opt: keyof typeof supports._options;\n  for (opt in supports._options) {\n    const thisOpt = opt;\n    MH.defineProperty(optTest, thisOpt, {\n      get: () => {\n        supports._options[thisOpt] = true;\n        if (thisOpt === \"signal\") {\n          return new AbortController().signal;\n        }\n        return false;\n      },\n    });\n  }\n\n  const dummyHandler = () => {}; // TypeScript does not accept null\n  const dummyElement = MH.createElement(\"div\");\n  try {\n    dummyElement.addEventListener(\"testOptionSupport\", dummyHandler, optTest);\n    dummyElement.removeEventListener(\n      \"testOptionSupport\",\n      dummyHandler,\n      optTest,\n    );\n    supports._optionsArg = true;\n  } catch (e__ignored) {\n    //\n  }\n\n  supports._pointer = \"onpointerup\" in dummyElement;\n\n  browserEventSupport = supports;\n  return supports;\n};\n\n// --------------------\n\ntype EventHandlerData = {\n  _wrappedHandler: EventListenerOrEventListenerObject;\n  _thirdArg: boolean | AddEventListenerOptions;\n};\n\nlet browserEventSupport: BrowserEventSupport;\n\nconst registeredEventHandlerData = newXWeakMap<\n  EventTarget,\n  XMap<\n    string, // event type\n    XMap<\n      EventListenerOrEventListenerObject, // user-supplied handler\n      Map<\n        string, // str repr of options\n        EventHandlerData\n      >\n    >\n  >\n>(newXMapGetter(newXMapGetter(() => MH.newMap())));\n\n// detect browser features, see below\ntype BrowserEventSupport = {\n  _pointer: boolean;\n  _optionsArg: boolean;\n  _options: {\n    capture: boolean;\n    passive: boolean;\n    once: boolean;\n    signal: boolean;\n  };\n};\n\nconst getEventOptionsStr = (\n  options: boolean | AddEventListenerOptions,\n): string => {\n  const finalOptions: AddEventListenerOptions = {\n    capture: false,\n    passive: false,\n    once: false,\n  };\n\n  if (options === false || options === true) {\n    finalOptions.capture = options;\n  } else if (MH.isObject(options)) {\n    copyExistingKeys(options, finalOptions);\n  }\n\n  return MH.stringify(finalOptions);\n};\n\nconst getEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  return registeredEventHandlerData\n    .get(target)\n    ?.get(eventType)\n    ?.get(handler)\n    ?.get(optionsStr);\n};\n\nconst deleteEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  MH.deleteKey(\n    registeredEventHandlerData.get(target)?.get(eventType)?.get(handler),\n    optionsStr,\n  );\n  registeredEventHandlerData.prune(target, eventType, handler);\n};\n\nconst setEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n  data: EventHandlerData,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  registeredEventHandlerData\n    .sGet(target)\n    .sGet(eventType)\n    .sGet(handler)\n    .set(optionsStr, data);\n};\n\nconst transformEventType = (eventType: string) => {\n  const supports = getBrowserSupport();\n  if (eventType.startsWith(MC.S_POINTER) && !supports._pointer) {\n    // TODO maybe log a warning message is it's not supported, e.g. there's no\n    // mousecancel\n    return MH.strReplace(eventType, MC.S_POINTER, MC.S_MOUSE);\n  }\n\n  return eventType;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureDevice, GestureIntent } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * `deltaX` and `deltaY` together specify the precise direction in the XY plane\n * of the move if relevant (i.e. other than zoom intent). The direction\n * specifies the effective X (\"left\"/\"right\"), Y (\"up\"/\"down\") or Z (\"in\"/\"out\")\n * direction, or \"none\"/\"ambiguous\".\n *\n * `deltaZ` specifies relative zoom in or out for zoom intents.\n * For zoom in, deltaZ is always > 1, and for zoom out it is < 1.\n * For non-zoom events it is 1.\n *\n * For zoom intents, `direction` would be either in, out or none.\n * For other intents, it would be up, down, left, right, none or ambiguous.\n *\n * For important notes on the delta values see\n * - {@link Utils.getKeyGestureFragment | getKeyGestureFragment}\n * - {@link Utils.getTouchGestureFragment | getTouchGestureFragment}\n * - {@link Utils.getWheelGestureFragment | getWheelGestureFragment}\n *\n * @category Gestures\n */\nexport type GestureFragment = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n  deltaX: number;\n  deltaY: number;\n  deltaZ: number;\n};\n\n/**\n * Returns true if the given string is a valid gesture device.\n *\n * @category Validation\n */\nexport const isValidInputDevice = (device: string): device is GestureDevice =>\n  MH.includes(DEVICES, device);\n\n/**\n * Returns true if the given string is a valid gesture intent.\n *\n * @category Validation\n */\nexport const isValidIntent = (intent: string): intent is GestureIntent =>\n  MH.includes(INTENTS, intent);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * devices.\n *\n * @category Validation\n */\nexport const isValidInputDeviceList = (devices: string | string[]) =>\n  isValidStrList(devices, isValidInputDevice, false);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * intents.\n *\n * @category Validation\n */\nexport const isValidIntentList = (intents: string | string[]) =>\n  isValidStrList(intents, isValidIntent, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const addDeltaZ = (current: number, increment: number) =>\n  MH.max(MIN_DELTA_Z, current * increment);\n\n/**\n * @ignore\n * @internal\n */\nexport const DEVICES: GestureDevice[] = [\n  MC.S_KEY,\n  MC.S_POINTER,\n  MC.S_TOUCH,\n  MC.S_WHEEL,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const INTENTS: GestureIntent[] = [\n  MC.S_SCROLL,\n  MC.S_ZOOM,\n  MC.S_DRAG,\n  MC.S_UNKNOWN,\n] as const;\n\n// Do not allow zooming out more than this value\nconst MIN_DELTA_Z = 0.1;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { Direction, GestureIntent } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport { GestureFragment, addDeltaZ } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"keydown\"\n * events will be considered.\n *\n * If there are no \"keydown\" events in the given list of events, returns\n * `false`.\n *\n * The deltas of all events are summed together before determining final delta\n * and direction.\n *\n * If the events are of conflicting types, i.e. some scroll, some zoom, then\n * the intent will be \"unknown\" and the direction will be \"ambiguous\".\n *\n * Otherwise, if the deltas sum up to 0, the direction will be \"none\".\n *\n * **IMPORTANT NOTES ON THE DELTA VALUES**\n *\n * For key gestures the deltas are unreliable. You should not assume they\n * correspond to the would-be scroll or zoom amount that the browser would do.\n * But they can be used to determine relative amounts for animating, etc.\n *\n * Key press events can be divided into 3 categories: that scroll by a \"line\"\n * (e.g. arrow keys), by a \"page\" (e.g. PageUp/PageDown) or by the full content\n * height/width (e.g. Home/End). The actual scroll amount that _would_ result\n * from the event is dependent on the browser, the window size or the element's\n * scroll width/height, so ours can only be a best guess.\n *\n * Since the actual pixel equivalent is browser specific, we use reasonable\n * default values of delta for each of these \"line\", \"page\" or \"content\" modes,\n * similar to what\n * {@link Utils.getWheelGestureFragment | getWheelGestureFragment} does:\n * - For \"line\", then a configurable fixed value is used\n *  ({@link settings.deltaLineHeight}).\n * - For \"page\", then a configurable fixed value is used\n *  ({@link settings.deltaPageHeight}).\n * - For \"content\", the element's scroll height is used if given, otherwise\n *   the viewport height (same as \"page\"). We do not try to get the current\n *   scroll height of the target element, (which would be the best guess value\n *   of `deltaY` in case of Home/End key presses), as that would either involve\n *   an asynchronous action or would result in forced layout. If the caller is\n *   already tracking the scroll height of the target, you can pass this as an\n *   argument. Otherwise, we'll default to using the viewport height, same as\n *   for PageUp/Down.\n *\n * If the key gesture fragment is a result of multiple events that were\n * accumulated, the deltas are summed as usual, e.g. if a \"page\" is equal to 20\n * \"lines\", then pressing PageDown and then 10 times Up, would result in a\n * delta equal to 10 \"lines\" down.\n *\n * For zoom intents, `deltaZ` gives a relative change of scale, whereby each\n * press of + or - steps up by 15% or down by ~13% (`1 / 1.15` to be exact)\n * since the previous one.\n *\n * @param {} [options.angleDiffThreshold]\n *                                  See {@link getVectorDirection}\n * @param {} [options.scrollHeight] Use this as deltaY when Home/End is pressed\n *\n * @return {} `false` if there are no \"keydown\" events in the list, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getKeyGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n    scrollHeight?: number;\n  },\n): GestureFragment | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  const LINE = settings.deltaLineHeight;\n  const PAGE = settings.deltaPageHeight;\n  const CONTENT = options?.scrollHeight ?? PAGE;\n\n  const deltasUp = (amount: number): DeltasArr => [0, -amount, 1];\n  const deltasDown = (amount: number): DeltasArr => [0, amount, 1];\n  const deltasLeft = (amount: number): DeltasArr => [-amount, 0, 1];\n  const deltasRight = (amount: number): DeltasArr => [amount, 0, 1];\n  const deltasIn: DeltasArr = [0, 0, 1.15];\n  const deltasOut: DeltasArr = [0, 0, 1 / 1.15];\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent | null = null;\n  let deltaX = 0,\n    deltaY = 0,\n    deltaZ = 1;\n\n  for (const event of events) {\n    if (!MH.isKeyboardEvent(event) || event.type !== MC.S_KEYDOWN) {\n      continue;\n    }\n\n    const deltasForKey: Record<string, DeltasArr | null> = {\n      [SK_UP]: deltasUp(LINE),\n      [SK_ARROWUP]: deltasUp(LINE),\n      [SK_PAGEUP]: deltasUp(PAGE),\n      Home: deltasUp(CONTENT),\n      [SK_DOWN]: deltasDown(LINE),\n      [SK_ARROWDOWN]: deltasDown(LINE),\n      [SK_PAGEDOWN]: deltasDown(PAGE),\n      End: deltasDown(CONTENT),\n      [SK_LEFT]: deltasLeft(LINE),\n      [SK_ARROWLEFT]: deltasLeft(LINE),\n      [SK_RIGHT]: deltasRight(LINE),\n      [SK_ARROWRIGHT]: deltasRight(LINE),\n      \" \": (event.shiftKey ? deltasUp : deltasDown)(PAGE),\n      \"+\": deltasIn,\n      \"=\": event.ctrlKey ? deltasIn : null,\n      \"-\": deltasOut,\n    };\n\n    const theseDeltas = deltasForKey[event.key] || null;\n    if (!theseDeltas) {\n      // not a relevant key\n      continue;\n    }\n\n    const [thisDeltaX, thisDeltaY, thisDeltaZ] = theseDeltas;\n    const thisIntent = thisDeltaZ !== 1 ? MC.S_ZOOM : MC.S_SCROLL;\n\n    deltaX += thisDeltaX;\n    deltaY += thisDeltaY;\n    deltaZ = addDeltaZ(deltaZ, thisDeltaZ);\n\n    if (!intent) {\n      intent = thisIntent;\n    } else if (intent !== thisIntent) {\n      // mixture of zoom and scroll\n      intent = MC.S_UNKNOWN;\n    }\n  }\n\n  if (!intent) {\n    return false; // no relevant events\n  } else if (intent === MC.S_UNKNOWN) {\n    direction = MC.S_AMBIGUOUS;\n  } else if (intent === MC.S_ZOOM) {\n    direction = deltaZ > 1 ? MC.S_IN : deltaZ < 1 ? MC.S_OUT : MC.S_NONE;\n  } else {\n    direction = getVectorDirection(\n      [deltaX, deltaY],\n      options?.angleDiffThreshold,\n    );\n  }\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_KEY,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n      };\n};\n\n// --------------------\n\ntype DeltasArr = [number, number, number];\n\nconst SK_UP = \"Up\";\nconst SK_DOWN = \"Down\";\nconst SK_LEFT = \"Left\";\nconst SK_RIGHT = \"Right\";\nconst SK_PAGE = \"Page\";\nconst SK_ARROW = \"Arrow\";\nconst SK_PAGEUP = (SK_PAGE + SK_UP) as `${typeof SK_PAGE}${typeof SK_UP}`;\nconst SK_PAGEDOWN = (SK_PAGE + SK_DOWN) as `${typeof SK_PAGE}${typeof SK_DOWN}`;\nconst SK_ARROWUP = (SK_ARROW + SK_UP) as `${typeof SK_ARROW}${typeof SK_UP}`;\nconst SK_ARROWDOWN = (SK_ARROW +\n  SK_DOWN) as `${typeof SK_ARROW}${typeof SK_DOWN}`;\nconst SK_ARROWLEFT = (SK_ARROW +\n  SK_LEFT) as `${typeof SK_ARROW}${typeof SK_LEFT}`;\nconst SK_ARROWRIGHT = (SK_ARROW +\n  SK_RIGHT) as `${typeof SK_ARROW}${typeof SK_RIGHT}`;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\nimport { getBrowserSupport } from \"@lisn/utils/event\";\nimport { GestureFragment } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. If the browser\n * supports Pointer events, then only \"pointermove\" events will be considered.\n * Otherwise, only \"mousemove\" events will be considered.\n *\n * If there are less than 2 such events in the given list of events, returns\n * `false`.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"pointercancel\" in the list or buttons other than the primary are pressed,\n * returns `null`.\n *\n * Pointer gestures always require the primary button to be pressed and the\n * resulting intent is always \"drag\", and `deltaZ` is always 1.\n *\n * @param {} [options.angleDiffThreshold] See {@link getVectorDirection}\n *\n * @return {} `false` if there are less than 2 \"pointermove\"/\"mousemove\" events\n * in the list, `null` if the gesture is terminated, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getPointerGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let isCancelled = false;\n  const supports = getBrowserSupport();\n\n  // If the browser supports pointer events, then only take those; otherwise\n  // take the mouse events\n  const pointerEventClass = supports._pointer ? PointerEvent : MouseEvent;\n  const pointerUpType = supports._pointer ? MC.S_POINTERUP : MC.S_MOUSEUP;\n\n  const filteredEvents: MouseEvent[] = MH.filter(\n    events,\n    (event): event is MouseEvent => {\n      const eType = event.type;\n      isCancelled = isCancelled || eType === MC.S_POINTERCANCEL;\n      if (eType !== MC.S_CLICK && MH.isInstanceOf(event, pointerEventClass)) {\n        // Only events where the primary button is pressed (unless it's a\n        // pointerup event, in which case no buttons should be pressed) are\n        // considered, otherwise consider it terminated\n        isCancelled =\n          isCancelled ||\n          (eType === pointerUpType && event.buttons !== 0) ||\n          (eType !== pointerUpType && event.buttons !== 1);\n        // we don't handle touch pointer events\n        return !MH.isTouchPointerEvent(event);\n      }\n      return false;\n    },\n  );\n\n  const numEvents = MH.lengthOf(filteredEvents);\n  if (numEvents < 2) {\n    return false; // no enough events\n  }\n\n  if (isCancelled) {\n    return null; // terminated\n  }\n\n  const firstEvent = filteredEvents[0];\n  const lastEvent = filteredEvents[numEvents - 1];\n  if (MH.getPointerType(firstEvent) !== MH.getPointerType(lastEvent)) {\n    return null; // different devices, consider it terminated\n  }\n\n  const deltaX = lastEvent.clientX - firstEvent.clientX;\n  const deltaY = lastEvent.clientY - firstEvent.clientY;\n  const direction = getVectorDirection(\n    [deltaX, deltaY],\n    options?.angleDiffThreshold,\n  );\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_POINTER,\n        direction,\n        intent: MC.S_DRAG,\n        deltaX,\n        deltaY,\n        deltaZ: 1,\n      };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureIntent, Vector } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport {\n  maxAbs,\n  havingMaxAbs,\n  distanceBetween,\n  areAntiParallel,\n} from \"@lisn/utils/math\";\nimport { GestureFragment } from \"@lisn/utils/gesture\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Gestures\n */\nexport type TouchDiff = {\n  startX: number;\n  startY: number;\n\n  endX: number;\n  endY: number;\n\n  deltaX: number;\n  deltaY: number;\n\n  isSignificant: boolean;\n};\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"touchmove\" events\n * will be considered.\n *\n * If there are less than 2 such events in the given list of events, returns `false`.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that by default swipe actions follow the natural direction: swipe up\n * with scroll intent results in direction down and swipe down results in\n * direction up. Drag intent always follows the direction of the gesture.\n *\n * For zoom intents, which necessarily involves exactly two fingers `deltaZ`\n * is based on the relative change in distance between the fingers.\n *\n * @param {} [options.deltaThreshold]\n *                          A change of x or y coordinate less than this is\n *                          considered insignificant, for the purposes of\n *                          determining:\n *                          1) whether the inferred direction is in one of the\n *                             four cardinal ones, or otherwise ambiguous; and\n *                          2) whether more than two fingers have moved and\n *                             therefore whether the direction could be zoom or\n *                             not\n * @param {} [options.angleDiffThreshold] See {@link getVectorDirection}\n * @param {} [options.reverseScroll]\n *                          If set to `true`, will disable natural scroll\n *                          direction.\n * @param {} [options.dragHoldTime]\n *                          If the user presses and holds for at least the\n *                          given amount of milliseconds before moving the\n *                          finger(s), gestures other than pinch will be\n *                          treated as a drag instead of scroll as long as the\n *                          number of fingers touching the screen is\n *                          `options.dragNumFingers`. Default is 500ms.\n * @param {} [options.dragNumFingers]\n *                          The number of fingers that could be considered a\n *                          drag intent. Default is 1.\n *\n * @return {} `false` if there are less than 2 \"touchmove\" events in the list,\n * `null` if the gesture is terminated, otherwise a {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getTouchGestureFragment = (\n  events: Event[],\n  options?: {\n    deltaThreshold?: number;\n    angleDiffThreshold?: number;\n    reverseScroll?: boolean;\n    dragHoldTime?: number;\n    dragNumFingers?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let moves = getTouchDiff(events, options?.deltaThreshold);\n\n  if (!moves) {\n    return null; // terminated\n  }\n\n  let numMoves = MH.lengthOf(moves);\n\n  const holdTime = getHoldTime(events);\n  const canBeDrag =\n    holdTime >= (options?.dragHoldTime ?? 500) &&\n    numMoves === (options?.dragNumFingers ?? 1);\n  const angleDiffThreshold = options?.angleDiffThreshold;\n\n  let deltaX = havingMaxAbs(...moves.map((m) => m.deltaX));\n  let deltaY = havingMaxAbs(...moves.map((m) => m.deltaY));\n  let deltaZ = 1;\n\n  if (numMoves > 2) {\n    // Take only the significant ones\n    moves = MH.filter(moves, (d) => d.isSignificant);\n    numMoves = MH.lengthOf(moves);\n  }\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent = MC.S_UNKNOWN;\n  if (numMoves === 2) {\n    // Check if it's a zoom\n    const vectorA: Vector = [moves[0].deltaX, moves[0].deltaY];\n    const vectorB: Vector = [moves[1].deltaX, moves[1].deltaY];\n\n    // If either finger is approx stationary, or if they move in opposite directions,\n    // treat it as zoom.\n    if (\n      !havingMaxAbs(...vectorA) || // finger A still\n      !havingMaxAbs(...vectorB) || // finger B still\n      areAntiParallel(vectorA, vectorB, angleDiffThreshold)\n    ) {\n      // It's a pinch motion => zoom\n      const startDistance = distanceBetween(\n        [moves[0].startX, moves[0].startY],\n        [moves[1].startX, moves[1].startY],\n      );\n\n      const endDistance = distanceBetween(\n        [moves[0].endX, moves[0].endY],\n        [moves[1].endX, moves[1].endY],\n      );\n\n      direction = startDistance < endDistance ? MC.S_IN : MC.S_OUT;\n      deltaZ = endDistance / startDistance;\n      deltaX = deltaY = 0;\n      intent = MC.S_ZOOM;\n    }\n  }\n\n  const deltaSign = canBeDrag || options?.reverseScroll ? 1 : -1;\n  // If scrolling, swap the deltas for natural scroll direction.\n  // Add +0 to force -0 to be +0 since jest doesn't think they're equal\n  deltaX = deltaSign * deltaX + 0;\n  deltaY = deltaSign * deltaY + 0;\n\n  if (direction === MC.S_NONE) {\n    // Wasn't a zoom. Check if all moves are aligned.\n    let isFirst = true;\n\n    for (const m of moves) {\n      // There's at least one significant move, assume scroll or drag intent.\n      intent = canBeDrag ? MC.S_DRAG : MC.S_SCROLL;\n\n      const thisDirection = getVectorDirection(\n        [deltaSign * m.deltaX, deltaSign * m.deltaY],\n        angleDiffThreshold,\n      );\n\n      if (thisDirection === MC.S_NONE) {\n        continue;\n      }\n\n      if (isFirst) {\n        direction = thisDirection;\n      } else if (direction !== thisDirection) {\n        direction = MC.S_AMBIGUOUS;\n        break;\n      }\n\n      isFirst = false;\n    }\n  }\n\n  if (direction === MC.S_NONE) {\n    const lastTouchEvent = events.filter(MH.isTouchEvent).slice(-1)[0];\n    // If all fingers have lifted off, consider it terminated, otherwise wait\n    // for more events.\n    return MH.lengthOf(lastTouchEvent?.touches) ? false : null;\n  }\n\n  return {\n    device: MC.S_TOUCH,\n    direction,\n    intent,\n    deltaX,\n    deltaY,\n    deltaZ,\n  };\n};\n\n/**\n * Returns a description of the changes in each finger between the first and\n * the last relevant TouchEvent in the list.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that, `deltaX`/`deltaY` are the end X/Y coordinate minus the start X/Y\n * coordinate. For natural scroll direction you should swap their signs.\n *\n * @param {} deltaThreshold If the change of x and y coordinate are both less\n *                          than this, it is marked as not significant.\n *\n * @category Gestures\n */\nexport const getTouchDiff = (\n  events: Event[],\n  deltaThreshold = 0,\n): TouchDiff[] | null => {\n  // Group each touch point of each event by identifier, so that we can get the\n  // start and end coordinate of each finger\n  const groupedTouches = newXMap<number, Touch[]>((): Touch[] => []);\n\n  for (const event of events) {\n    if (!MH.isTouchEvent(event)) {\n      continue;\n    }\n\n    if (event.type === MC.S_TOUCHCANCEL) {\n      return null; // gesture terminated\n    }\n\n    for (const touch of event.touches) {\n      groupedTouches.sGet(touch.identifier).push(touch);\n    }\n  }\n\n  const moves: TouchDiff[] = [];\n\n  for (const touchList of groupedTouches.values()) {\n    const nTouches = MH.lengthOf(touchList);\n    if (nTouches < 2) {\n      // Only one event had that finger in it, so there's no move for it\n      continue;\n    }\n\n    const firstTouch = touchList[0];\n    const lastTouch = touchList[nTouches - 1];\n    const startX = firstTouch.clientX;\n    const startY = firstTouch.clientY;\n\n    const endX = lastTouch.clientX;\n    const endY = lastTouch.clientY;\n\n    const deltaX = endX - startX;\n    const deltaY = endY - startY;\n\n    const isSignificant = maxAbs(deltaX, deltaY) >= deltaThreshold;\n\n    // Consider it a move in one of the 4 cardinal ones\n    moves.push({\n      startX,\n      startY,\n      endX,\n      endY,\n      deltaX,\n      deltaY,\n      isSignificant,\n    });\n  }\n\n  return moves;\n};\n\n// --------------------\n\nconst getHoldTime = (events: Event[]) => {\n  const firstStart = events.findIndex((e) => e.type === MC.S_TOUCHSTART);\n  const firstMove = events.findIndex((e) => e.type === MC.S_TOUCHMOVE);\n  if (firstStart < 0 || firstMove < 1) {\n    return 0;\n  }\n\n  return events[firstMove].timeStamp - events[firstStart].timeStamp;\n};\n","/**\n * @module\n * @ignore\n * @internal\n *\n * FULL CREDIT FOR THIS GOES TO\n * https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n *\n * ADAPTED FROM THE ABOVE SOURCE\n *\n * ORIGINAL COPYRIGHT IN FILE PRESERVED:\n *\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * ORIGINAL LICENSE\n *\n * BSD License\n *\n * For FixedDataTable software\n *\n * Copyright (c) 2015, Facebook, Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *\n *  * Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n *  * Neither the name Facebook nor the names of its contributors may be used to\n *    endorse or promote products derived from this software without specific\n *    prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { settings } from \"@lisn/globals/settings\";\n\n/**\n * ORIGINAL DEVELOPER COMMENT PRESERVED\n *\n * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n * complicated, thus this doc is long and (hopefully) detailed enough to answer\n * your questions.\n *\n * If you need to react to the mouse wheel in a predictable way, this code is\n * like your bestest friend. * hugs *\n *\n * As of today, there are 4 DOM event types you can listen to:\n *\n *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n *\n * So what to do?  The is the best:\n *\n *   normalizeWheel.getEventType();\n *\n * In your event callback, use this code to get sane interpretation of the\n * deltas.  This code will return an object with properties:\n *\n *   spinX   -- normalized spin speed (use for zoom) - x plane\n *   spinY   -- \" - y plane\n *   pixelX  -- normalized distance (to pixels) - x plane\n *   pixelY  -- \" - y plane\n *\n * Wheel values are provided by the browser assuming you are using the wheel to\n * scroll a web page by a number of lines or pixels (or pages).  Values can vary\n * significantly on different platforms and browsers, forgetting that you can\n * scroll at different speeds.  Some devices (like trackpads) emit more events\n * at smaller increments with fine granularity, and some emit massive jumps with\n * linear speed or acceleration.\n *\n * This code does its best to normalize the deltas for you:\n *\n *   - spin is trying to normalize how far the wheel was spun (or trackpad\n *     dragged).  This is super useful for zoom support where you want to\n *     throw away the chunky scroll steps on the PC and make those equal to\n *     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n *     resolve a single slow step on a wheel to 1.\n *\n *   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n *     get the crazy differences between browsers, but at least it'll be in\n *     pixels!\n *\n *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n *     should translate to positive value zooming IN, negative zooming OUT.\n *     This matches the newer 'wheel' event.\n *\n * Why are there spinX, spinY (or pixels)?\n *\n *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n *     with a mouse.  It results in side-scrolling in the browser by default.\n *\n *   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n *\n *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n *     probably is by browsers in conjunction with fancy 3D controllers .. but\n *     you know.\n *\n * Implementation info:\n *\n * Examples of 'wheel' event if you scroll slowly (down) by one step with an\n * average mouse:\n *\n *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n *\n * On the trackpad:\n *\n *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n *\n * On other/older browsers.. it's more complicated as there can be multiple and\n * also missing delta values.\n *\n * The 'wheel' event is more standard:\n *\n * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n *\n * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n * backward compatibility with older events.  Those other values help us\n * better normalize spin speed.  Example of what the browsers provide:\n *\n *                          | event.wheelDelta | event.detail\n *        ------------------+------------------+--------------\n *          Safari v5/OS X  |       -120       |       0\n *          Safari v5/Win7  |       -120       |       0\n *         Chrome v17/OS X  |       -120       |       0\n *         Chrome v17/Win7  |       -120       |       0\n *                IE9/Win7  |       -120       |   undefined\n *         Firefox v4/OS X  |     undefined    |       1\n *         Firefox v4/Win7  |     undefined    |       3\n */\nexport const normalizeWheel = (event: LegacyWheelEvent): WheelData => {\n  let spinX = 0,\n    spinY = 0,\n    pixelX = event.deltaX,\n    pixelY = event.deltaY;\n\n  const LINE = settings.deltaLineHeight;\n\n  // Legacy\n  if (event.detail !== undefined) {\n    spinY = event.detail;\n  }\n  if (event.wheelDelta !== undefined) {\n    spinY = -event.wheelDelta / 120;\n  }\n  if (event.wheelDeltaY !== undefined) {\n    spinY = -event.wheelDeltaY / 120;\n  }\n  if (event.wheelDeltaX !== undefined) {\n    spinX = -event.wheelDeltaX / 120;\n  }\n\n  if ((pixelX || pixelY) && event.deltaMode) {\n    if (event.deltaMode === 1) {\n      // delta in LINE units\n      pixelX *= LINE;\n      pixelY *= LINE;\n    } else {\n      // delta in PAGE units\n      pixelX *= settings.deltaPageWidth;\n      pixelY *= settings.deltaPageHeight;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pixelX && !spinX) {\n    spinX = pixelX < 1 ? -1 : 1;\n  }\n  if (pixelY && !spinY) {\n    spinY = pixelY < 1 ? -1 : 1;\n  }\n\n  return { spinX, spinY, pixelX, pixelY };\n};\n\nexport type WheelData = {\n  spinX: number;\n  spinY: number;\n  pixelX: number;\n  pixelY: number;\n};\n\n// --------------------\n\ntype LegacyWheelEvent = WheelEvent & {\n  wheelDelta?: number;\n  wheelDeltaX?: number;\n  wheelDeltaY?: number;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureIntent } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport { havingMaxAbs } from \"@lisn/utils/math\";\nimport { normalizeWheel } from \"@lisn/utils/normalize-wheel\";\n\nimport { GestureFragment, addDeltaZ } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"wheel\" events\n * will be considered.\n *\n * If there are no \"wheel\" events in the given list of events, returns `false`.\n *\n * The deltas of all events are summed together before determining final delta\n * and direction.\n *\n * If the events are of conflicting types, i.e. some scroll, some zoom, then\n * the intent will be \"unknown\" and the direction will be \"ambiguous\".\n *\n * If the deltas sum up to 0, the direction will be \"none\".\n *\n * **IMPORTANT NOTES ON THE DELTA VALUES**\n *\n * For wheel gestures the deltas are _highly_ unreliable, especially when\n * zooming (Control + wheel or pinching trackpad). You should not assume they\n * correspond to the would-be scroll or zoom amount that the browser would do.\n * But they can be used to determine relative amounts for animating, etc.\n *\n * If the browser reports the delta values of a WheelEvent to be in mode \"line\",\n * then a configurable fixed value is used\n * ({@link Settings.settings.deltaLineHeight | settings.deltaLineHeight}).\n *\n * If the browser reports the delta values of a WheelEvent to be in mode \"page\",\n * then a configurable fixed value is used\n * ({@link Settings.settings.deltaPageWidth | settings.deltaPageWidth} and\n * ({@link Settings.settings.deltaPageHeight | settings.deltaPageHeight}).\n *\n * For zoom intents `deltaZ` is based on what the browser reports as the\n * `deltaY`, which in most browsers roughly corresponds to a percentage zoom\n * factor.\n *\n * @param {} [options.angleDiffThreshold] See {@link getVectorDirection}.\n *                                        Default is 5.\n *\n * @return {} `false` if there are no \"wheel\" events in the list, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getWheelGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent | null = null;\n  let deltaX = 0,\n    deltaY = 0,\n    deltaZ = 1;\n\n  for (const event of events) {\n    if (!MH.isWheelEvent(event) || event.type !== MC.S_WHEEL) {\n      continue;\n    }\n\n    const data = normalizeWheel(event);\n    let thisIntent: GestureIntent = MC.S_SCROLL;\n    let thisDeltaX = data.pixelX;\n    let thisDeltaY = data.pixelY;\n    let thisDeltaZ = 1;\n    const maxDelta = havingMaxAbs(thisDeltaX, thisDeltaY);\n\n    if (event.ctrlKey && !thisDeltaX) {\n      // Browsers report negative deltaY for zoom in, so swap sign\n      let percentage = -maxDelta;\n      // If it's more than 50, assume it's a mouse wheel => delta is roughly\n      // multiple of 10%. Otherwise a trackpad => delta is roughly multiple of 1%\n      if (MH.abs(percentage) >= 50) {\n        percentage /= 10;\n      }\n\n      thisDeltaZ = 1 + percentage / 100;\n\n      thisDeltaX = thisDeltaY = 0;\n      thisIntent = MC.S_ZOOM;\n    } else if (event.shiftKey && !thisDeltaX) {\n      // Holding Shift while turning wheel or swiping trackpad in vertically\n      // results in sideways scroll.\n      thisDeltaX = thisDeltaY;\n      thisDeltaY = 0;\n    }\n\n    deltaX += thisDeltaX;\n    deltaY += thisDeltaY;\n    deltaZ = addDeltaZ(deltaZ, thisDeltaZ);\n\n    if (!thisIntent) {\n      // not a relevant key\n    } else if (!intent) {\n      intent = thisIntent;\n    } else if (intent !== thisIntent) {\n      // mixture of zoom and scroll\n      intent = MC.S_UNKNOWN;\n    }\n  }\n\n  if (!intent) {\n    return false; // no relevant events\n  } else if (intent === MC.S_UNKNOWN) {\n    direction = MC.S_AMBIGUOUS;\n  } else if (intent === MC.S_ZOOM) {\n    direction = deltaZ > 1 ? MC.S_IN : deltaZ < 1 ? MC.S_OUT : MC.S_NONE;\n  } else {\n    direction = getVectorDirection(\n      [deltaX, deltaY],\n      options?.angleDiffThreshold,\n    );\n  }\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_WHEEL,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n      };\n};\n","/**\n * @module Watchers/GestureWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureIntent,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  addClasses,\n  removeClasses,\n  setNumericStyleProps,\n} from \"@lisn/utils/css-alter\";\nimport { isValidDirection } from \"@lisn/utils/directions\";\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { getDebouncedHandler } from \"@lisn/utils/tasks\";\n\nimport { addDeltaZ } from \"@lisn/utils/gesture\";\n\nimport {\n  isValidInputDevice,\n  isValidIntent,\n  GestureFragment,\n  DEVICES,\n  INTENTS,\n} from \"@lisn/utils/gesture\";\nimport { getKeyGestureFragment } from \"@lisn/utils/gesture-key\";\nimport { getPointerGestureFragment } from \"@lisn/utils/gesture-pointer\";\nimport { getTouchGestureFragment } from \"@lisn/utils/gesture-touch\";\nimport { getWheelGestureFragment } from \"@lisn/utils/gesture-wheel\";\nimport { logError } from \"@lisn/utils/log\";\nimport {\n  maxAbs,\n  toNonNegNum,\n  toPosNum,\n  toNumWithBounds,\n} from \"@lisn/utils/math\";\nimport { randId, objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { LoggerInterface } from \"@lisn/debug/types\";\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link GestureWatcher} listens for user gestures resulting from wheel,\n * pointer, touch or key input events.\n *\n * It supports scroll, zoom or drag type gestures.\n *\n * It manages registered callbacks globally and reuses event listeners for more\n * efficient performance.\n */\nexport class GestureWatcher {\n  /**\n   * Call the given handler whenever the user performs a gesture on the target\n   * matching the given options.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same event target, even if the options differ. If the handler has already\n   * been added for this target, either using {@link onGesture} or\n   * {@link trackGesture}, then it will be removed and re-added with the\n   * current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onGesture: (\n    target: EventTarget,\n    handler: OnGestureHandler,\n    options?: OnGestureOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offGesture: (target: EventTarget, handler: OnGestureHandler) => void;\n\n  /**\n   * This is the same as {@link onGesture} except that if `handler` is not\n   * given, then it defaults to an internal handler that updates a set of CSS\n   * variables on the target's style:\n   *\n   *   - `--lisn-js--<Intent>-delta-x`\n   *   - `--lisn-js--<Intent>-delta-y`\n   *   - `--lisn-js--<Intent>-delta-z`\n   *\n   * where and `<Intent>` is one of {@link GestureIntent} and the delta X, Y\n   * and Z are the _total summed up_ `deltaX`, `deltaY` and `deltaZ` since the\n   * callback was added, summed over all devices used (key, touch, etc).\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackGesture} or using\n   * {@link onGesture}, then it will be removed and re-added with the current\n   * options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly trackGesture: (\n    element: Element,\n    handler?: OnGestureHandler | null,\n    options?: OnGestureOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackGesture}.\n   */\n  readonly noTrackGesture: (\n    element: Element,\n    handler?: OnGestureHandler | null,\n  ) => void;\n\n  /**\n   * Creates a new instance of GestureWatcher with the given\n   * {@link GestureWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: GestureWatcherConfig = {}) {\n    return new GestureWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of GestureWatcher with the given\n   * {@link GestureWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: GestureWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new GestureWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: GestureWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"GestureWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"GestureWatcher\", logAtCreation: config })\n      : null;\n\n    const allCallbacks = newXWeakMap<\n      EventTarget,\n      Map<\n        OnGestureHandler,\n        {\n          _callback: OnGestureCallback;\n          _wrapper: OnGestureHandlerWrapper;\n          _options: OnGestureOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    // For each target and event type, add only 1 global listener that will then\n    // manage the event queues and callbacks.\n    const allListeners = newXWeakMap<\n      EventTarget,\n      Map<GestureDevice, DeviceListeners>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const createCallback = (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      options: OnGestureOptionsInternal,\n    ): OnGestureCallback => {\n      MH.remove(allCallbacks.get(target)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler for\", options);\n      const { _callback, _wrapper } = getCallbackAndWrapper(\n        handler,\n        options,\n        logger,\n      );\n\n      _callback.onRemove(() => deleteHandler(target, handler, options));\n\n      allCallbacks.sGet(target).set(handler, {\n        _callback,\n        _wrapper,\n        _options: options,\n      });\n\n      return _callback;\n    };\n\n    // ----------\n\n    // async for consistency with other watchers and future compatibility in\n    // case of change needed\n    const setupOnGesture = async (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      userOptions: OnGestureOptions | undefined,\n    ) => {\n      const options = getOptions(config, userOptions || {});\n      createCallback(target, handler, options);\n\n      for (const device of options._devices || DEVICES) {\n        let listeners = allListeners.get(target)?.get(device);\n        if (listeners) {\n          debug: logger?.debug4(\n            `Listeners already added for ${device}`,\n            target,\n            options,\n          );\n        } else {\n          debug: logger?.debug4(\n            `Adding listeners for ${device}`,\n            target,\n            options,\n          );\n\n          listeners = setupListeners(target, device, options);\n          allListeners.sGet(target).set(device, listeners);\n        }\n\n        listeners._nCallbacks++;\n        if (options._preventDefault) {\n          listeners._nPreventDefault++;\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      options: OnGestureOptionsInternal,\n    ) => {\n      MH.deleteKey(allCallbacks.get(target), handler);\n      allCallbacks.prune(target);\n\n      for (const device of options._devices || DEVICES) {\n        const listeners = allListeners.get(target)?.get(device);\n        if (listeners) {\n          listeners._nCallbacks--;\n          if (options._preventDefault) {\n            listeners._nPreventDefault--;\n          }\n\n          if (!listeners._nCallbacks) {\n            debug: logger?.debug4(\n              `No more callbacks for target and device ${device}; removing listeners`,\n              target,\n            );\n\n            MH.deleteKey(allListeners.get(target), device);\n            listeners._remove();\n          }\n        }\n      }\n    };\n\n    // ----------\n\n    const invokeCallbacks = (\n      target: EventTarget,\n      device: GestureDevice,\n      event: Event,\n    ): boolean /* true if terminated */ => {\n      const preventDefault =\n        (allListeners.get(target)?.get(device)?._nPreventDefault || 0) > 0;\n\n      let isTerminated = false;\n      for (const { _wrapper } of allCallbacks.get(target)?.values() || []) {\n        isTerminated =\n          _wrapper(target, device, event, preventDefault) || isTerminated;\n      }\n\n      return isTerminated;\n    };\n\n    // ----------\n\n    const setupListeners = (\n      target: EventTarget,\n      device: GestureDevice,\n      options: OnGestureOptionsInternal,\n    ): DeviceListeners => {\n      const intents = options._intents;\n      let hasAddedTabIndex = false;\n      let hasPreventedSelect = false;\n\n      if (\n        device === MC.S_KEY &&\n        MH.isElement(target) &&\n        !MH.getTabIndex(target)\n      ) {\n        hasAddedTabIndex = true;\n        // enable element to receive keydown events\n        MH.setTabIndex(target);\n      } else if (MH.isElement(target) && device === MC.S_TOUCH) {\n        if (options._preventDefault) {\n          addClasses(target, MC.PREFIX_NO_TOUCH_ACTION);\n        }\n\n        if (!intents || MH.includes(intents, MC.S_DRAG)) {\n          hasPreventedSelect = true;\n          preventSelect(target);\n        }\n      }\n\n      const addOrRemoveListeners = (\n        action: \"add\" | \"remove\",\n        listener: EventListener,\n        eventTypes: readonly (keyof GlobalEventHandlersEventMap)[],\n      ) => {\n        const method =\n          action === \"add\" ? addEventListenerTo : removeEventListenerFrom;\n        for (const eventType of eventTypes) {\n          debug: logger?.debug8(`${action} listener for ${eventType}`, target);\n          method(target, eventType, listener, {\n            passive: false,\n            capture: true,\n          });\n        }\n      };\n\n      const addInitialListener = () =>\n        addOrRemoveListeners(\"add\", initialListener, initiatingEvents[device]);\n\n      const removeInitialListener = () =>\n        addOrRemoveListeners(\n          \"remove\",\n          initialListener,\n          initiatingEvents[device],\n        );\n\n      const addOngoingListener = () =>\n        addOrRemoveListeners(\"add\", processEvent, ongoingEvents[device]);\n\n      const removeOngoingListener = () =>\n        addOrRemoveListeners(\"remove\", processEvent, ongoingEvents[device]);\n\n      const initialListener = (event: Event) => {\n        processEvent(event);\n        removeInitialListener();\n        addOngoingListener();\n      };\n\n      const processEvent = (event: Event) => {\n        const isTerminated = invokeCallbacks(target, device, event);\n        if (isTerminated) {\n          removeOngoingListener();\n          addInitialListener();\n        }\n      };\n\n      addInitialListener();\n\n      return {\n        _nCallbacks: 0,\n        _nPreventDefault: 0,\n        _remove: () => {\n          if (MH.isElement(target)) {\n            if (hasAddedTabIndex) {\n              MH.unsetTabIndex(target);\n            }\n\n            removeClasses(target, MC.PREFIX_NO_TOUCH_ACTION);\n\n            if (hasPreventedSelect) {\n              undoPreventSelect(target);\n            }\n          }\n\n          removeOngoingListener();\n          removeInitialListener();\n        },\n      };\n    };\n\n    // ----------\n\n    this.trackGesture = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setGestureCssProps;\n        // initial values\n        for (const intent of INTENTS) {\n          setGestureCssProps(element, {\n            intent,\n            totalDeltaX: 0,\n            totalDeltaY: 0,\n            totalDeltaZ: 1,\n          });\n        }\n      }\n\n      return setupOnGesture(element, handler, options);\n    };\n\n    // ----------\n\n    this.noTrackGesture = (element, handler?) => {\n      if (!handler) {\n        handler = setGestureCssProps;\n\n        // delete the properties\n        for (const intent of INTENTS) {\n          setGestureCssProps(element, { intent });\n        }\n      }\n\n      this.offGesture(element, handler);\n    };\n\n    // ----------\n\n    this.onGesture = setupOnGesture;\n\n    // ----------\n\n    this.offGesture = (target, handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(target)?.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type GestureWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnGestureOptions.preventDefault | preventDefault} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.debounceWindow | debounceWindow} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 150\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.deltaThreshold | deltaThreshold} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 5\n   */\n  deltaThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.angleDiffThreshold | angleDiffThreshold} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * It does not make much sense to set this to 0.\n   *\n   * The value is in _degrees_, not radians.\n   *\n   * @defaultValue 35\n   */\n  angleDiffThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.naturalTouchScroll | naturalTouchScroll} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue true\n   */\n  naturalTouchScroll?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.touchDragHoldTime | touchDragHoldTime} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 500\n   */\n  touchDragHoldTime?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.touchDragNumFingers | touchDragNumFingers} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 1\n   */\n  touchDragNumFingers?: number;\n};\n\n/**\n * @interface\n */\nexport type OnGestureOptions = {\n  /**\n   * One or more device types to listen for. If not specified, then all devices\n   * are enabled.\n   *\n   * It can be a comma-separated list of {@link GestureDevice}s or an array of\n   * such devices.\n   *\n   * @defaultValue undefined\n   */\n  devices?: CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If given, callback will only be called if the gesture's direction is one\n   * of the given ones.\n   *\n   * It can be a comma-separated list of {@link Direction}s or an array of such\n   * directions.\n   *\n   * @defaultValue undefined\n   */\n  directions?: CommaSeparatedStr<Direction> | Direction[];\n\n  /**\n   * If given, callback will only be called if the gesture's intent is one\n   * of the given ones.\n   *\n   * It can be a comma-separated list of {@link GestureIntent}s or an\n   * array of such intents.\n   *\n   * @defaultValue undefined\n   */\n  intents?: CommaSeparatedStr<GestureIntent> | GestureIntent[];\n\n  /**\n   * Set minimum total delta X. Further reductions in delta X below this value\n   * will be ignored.\n   *\n   * The value is in pixels and can be negative.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaX?: number;\n\n  /**\n   * Set maximum total delta X. Further increase in delta X above this value\n   * will be ignored.\n   *\n   * The value is in pixels.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaX?: number;\n\n  /**\n   * Set minimum total delta Y. Further reductions in delta Y below this value\n   * will be ignored.\n   *\n   * The value is in pixels and can be negative.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaY?: number;\n\n  /**\n   * Set maximum total delta Y. Further increase in delta Y above this value\n   * will be ignored.\n   *\n   * The value is in pixels.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaY?: number;\n\n  /**\n   * Set minimum total delta Z. Further reductions in delta Z below this value\n   * will be ignored.\n   *\n   * The value is in percentage zoom, relative to 1, and can be less than 1 but\n   * must be > 0.1 which is a hard minimum.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaZ?: number;\n\n  /**\n   * Set maximum total delta Z. Further increase in delta Z above this value\n   * will be ignored.\n   *\n   * The value is in percentage zoom, relative to 1, and must be positive.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaZ?: number;\n\n  /**\n   * If true, the events of the gesture, e.g. relevant key presses or touch\n   * moves, etc, will have their default action prevented.\n   *\n   * **IMPORTANT:** For pointer gestures, then pointer/mouse down and click\n   * will be prevented.\n   *\n   * @defaultValue {@link GestureWatcherConfig.preventDefault}\n   */\n  preventDefault?: boolean;\n\n  /**\n   * If given, callback will be called at most once every `debounceWindow`\n   * milliseconds.\n   *\n   * Note that if both `debounceWindow` and `deltaThreshold` are set, _both_\n   * must be exceeded before callback is called.\n   *\n   * @defaultValue {@link GestureWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n\n  /**\n   * Callback will only be called when the gesture's accumulated delta, since\n   * the last time callback was called, exceeds `deltaThreshold`.\n   *\n   * At least one of the three deltas (X, Y or Z) must exceed this number (in\n   * absolute value). Note that when comparing `deltaZ`, it is multiplied by\n   * 100 since it represents fractions of 1 (100%). So supplying\n   * `deltaThreshold` of 10 means is equivalent to the following condition:\n   *\n   * ```\n   * abs(deltaX) >= 10 || abs(deltaY) >= 10 ||  abs(1 - deltaZ) >= 0.1\n   * ```\n   *\n   * Accumulation of the delta ends if the gesture is terminated, for example,\n   * in case of touch gestures, by a \"touchcancel\" event of by the final finger\n   * lifting off..\n   *\n   * Note that if both `debounceWindow` and `deltaThreshold` are set, _both_\n   * must be exceeded before callback is called.\n   *\n   * @defaultValue {@link GestureWatcherConfig.deltaThreshold}\n   */\n  deltaThreshold?: number;\n\n  /**\n   * See {@link Utils.getVectorDirection | getVectorDirection}.\n   *\n   * @defaultValue {@link GestureWatcherConfig.angleDiffThreshold}\n   */\n  angleDiffThreshold?: number;\n\n  /**\n   * Whether touch scroll gestures follow the natural direction: swipe up\n   * with scroll intent results in direction down and swipe down results in\n   * direction up.\n   *\n   * @defaultValue {@link GestureWatcherConfig.naturalTouchScroll}\n   */\n  naturalTouchScroll?: boolean;\n\n  /**\n   * If the user presses and holds on a touchscreen for at least the given\n   * amount of milliseconds before moving the finger(s), touch gestures other\n   * than pinch will be treated as a drag intent instead of scroll as long as\n   * the number of fingers touching the screen is {@link touchDragNumFingers}.\n   *\n   * Set to 0 in order to treat _all_ non-pinch touch gestures as drag.\n   *\n   * Set to a negative number in order to treat _all_ non-pinch touch gestures\n   * as scroll.\n   *\n   * @defaultValue {@link GestureWatcherConfig.touchDragHoldTime}\n   */\n  touchDragHoldTime?: number;\n\n  /**\n   * The number of fingers that could be considered a drag intent for touch\n   * gestures.\n   *\n   * @defaultValue {@link GestureWatcherConfig.touchDragHoldTime}\n   */\n  touchDragNumFingers?: number;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the event target that was passed to the {@link GestureWatcher.onGesture}\n *   call (equivalent to\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget | Event:currentTarget}).\n * - the {@link GestureData} that describes the gesture's progression since the\n *   last time the callback was called and since the callback was added.\n */\nexport type OnGestureHandlerArgs = [EventTarget, GestureData, Event[]];\nexport type OnGestureCallback = Callback<OnGestureHandlerArgs>;\nexport type OnGestureHandler =\n  | CallbackHandler<OnGestureHandlerArgs>\n  | OnGestureCallback;\n\nexport type GestureData = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n\n  /**\n   * Delta in the horizontal direction since the start of the gesture.\n   */\n  deltaX: number;\n\n  /**\n   * Delta in the vertical direction since the start of the gesture.\n   */\n  deltaY: number;\n\n  /**\n   * Relative fractional zoom in or out for zoom intents since the start of\n   * the gesture.\n   *\n   * For zoom in, `deltaZ` is always > 1, and for zoom out it is < 1.\n   *\n   * For non-zoom gestures it is 1.\n   */\n  deltaZ: number;\n\n  /**\n   * The time in milliseconds it took for the gesture. This will be the\n   * difference in timestamps between the first and last event that composed\n   * the gesture. For key and wheel gestures this could be 0, since 1 event is\n   * sufficient for them.\n   */\n  time: number;\n\n  /**\n   * Delta in the horizontal direction since the callback was added.\n   */\n  totalDeltaX: number;\n\n  /**\n   * Delta in the vertical direction since the callback was added.\n   */\n  totalDeltaY: number;\n\n  /**\n   * Percentage (relative) zoom in or out for zoom intents since the callback\n   * was added.\n   */\n  totalDeltaZ: number;\n};\n\n// ----------------------------------------\n\ntype GestureWatcherConfigInternal = {\n  _preventDefault: boolean;\n  _debounceWindow: number;\n  _deltaThreshold: number;\n  _angleDiffThreshold: number;\n  _naturalTouchScroll: boolean;\n  _touchDragHoldTime: number;\n  _touchDragNumFingers: number;\n};\n\ntype OnGestureOptionsInternal = {\n  _devices: GestureDevice[] | null;\n  _directions: Direction[] | null;\n  _intents: GestureIntent[] | null;\n  _minTotalDeltaX: number | null;\n  _maxTotalDeltaX: number | null;\n  _minTotalDeltaY: number | null;\n  _maxTotalDeltaY: number | null;\n  _minTotalDeltaZ: number | null;\n  _maxTotalDeltaZ: number | null;\n  _preventDefault: boolean;\n  _debounceWindow: number;\n  _deltaThreshold: number;\n  _angleDiffThreshold: number;\n  _naturalTouchScroll: boolean;\n  _touchDragHoldTime: number;\n  _touchDragNumFingers: number;\n};\n\ntype OnGestureHandlerWrapper = (\n  _target: EventTarget,\n  _device: GestureDevice,\n  _event: Event,\n  _preventDefault: boolean,\n) => boolean;\n\n// Specific to a combination of target + device\ntype DeviceListeners = {\n  _nCallbacks: number; // total number of callbacks\n  _nPreventDefault: number; // total number wanting to prevent default action\n  _remove: () => void;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, GestureWatcher>();\n\nconst getConfig = (\n  config: GestureWatcherConfig,\n): GestureWatcherConfigInternal => {\n  return {\n    _preventDefault: config.preventDefault ?? true,\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 150),\n    _deltaThreshold: toNonNegNum(config.deltaThreshold, 5),\n    _angleDiffThreshold: toPosNum(config.angleDiffThreshold, 35),\n    _naturalTouchScroll: config.naturalTouchScroll ?? true,\n    _touchDragHoldTime: config.touchDragHoldTime ?? 500,\n    _touchDragNumFingers: config.touchDragNumFingers ?? 1,\n  };\n};\n\nconst initiatingEvents: {\n  [D in GestureDevice]: readonly (keyof GlobalEventHandlersEventMap)[];\n} = {\n  key: [MC.S_KEYDOWN],\n  // If the browser doesn't support pointer events, then\n  // addEventListenerTo will transform it into mousedown\n  //\n  // We need to listen for click, since that occurs after a pointerup (i.e.\n  // after a gesure is terminated and the ongoing listeners removed), but it\n  // needs to have its default action prevented.\n  pointer: [MC.S_POINTERDOWN, MC.S_CLICK],\n  touch: [MC.S_TOUCHSTART],\n  wheel: [MC.S_WHEEL],\n} as const;\n\nconst ongoingEvents: {\n  [D in GestureDevice]: readonly (keyof GlobalEventHandlersEventMap)[];\n} = {\n  key: [MC.S_KEYDOWN],\n  pointer: [\n    // If the browser doesn't support point events, then\n    // addEventListenerTo will transform them into mouse*\n    MC.S_POINTERDOWN,\n    MC.S_POINTERUP, // would terminate\n    MC.S_POINTERMOVE,\n    MC.S_POINTERCANCEL, // would terminate\n    MC.S_CLICK, // would terminate; can be default-prevented\n  ],\n  touch: [MC.S_TOUCHSTART, MC.S_TOUCHEND, MC.S_TOUCHMOVE, MC.S_TOUCHCANCEL],\n  wheel: [MC.S_WHEEL],\n} as const;\n\nconst fragmentGetters: {\n  [D in GestureDevice]: (\n    events: Event[],\n    options: {\n      deltaThreshold?: number;\n      angleDiffThreshold?: number;\n      reverseScroll?: boolean;\n      dragHoldTime?: number;\n      dragNumFingers?: number;\n    },\n  ) => GestureFragment | null | false;\n} = {\n  [MC.S_KEY]: getKeyGestureFragment,\n  [MC.S_POINTER]: getPointerGestureFragment,\n  [MC.S_TOUCH]: getTouchGestureFragment,\n  [MC.S_WHEEL]: getWheelGestureFragment,\n};\n\nconst getOptions = (\n  config: GestureWatcherConfigInternal,\n  options: OnGestureOptions,\n): OnGestureOptionsInternal => {\n  const debounceWindow = toNonNegNum(\n    options[MC.S_DEBOUNCE_WINDOW],\n    config._debounceWindow, // watcher is never debounced, so apply default here\n  );\n  const deltaThreshold = toNonNegNum(\n    options.deltaThreshold,\n    config._deltaThreshold,\n  );\n\n  return {\n    _devices:\n      validateStrList(\"devices\", options.devices, isValidInputDevice) || null,\n    _directions:\n      validateStrList(\"directions\", options.directions, isValidDirection) ||\n      null,\n    _intents:\n      validateStrList(\"intents\", options.intents, isValidIntent) || null,\n    _minTotalDeltaX: options.minTotalDeltaX ?? null,\n    _maxTotalDeltaX: options.maxTotalDeltaX ?? null,\n    _minTotalDeltaY: options.minTotalDeltaY ?? null,\n    _maxTotalDeltaY: options.maxTotalDeltaY ?? null,\n    _minTotalDeltaZ: options.minTotalDeltaZ ?? null,\n    _maxTotalDeltaZ: options.maxTotalDeltaZ ?? null,\n    _preventDefault: options.preventDefault ?? config._preventDefault,\n    _debounceWindow: debounceWindow,\n    _deltaThreshold: deltaThreshold,\n    _angleDiffThreshold: toNonNegNum(\n      options.angleDiffThreshold,\n      config._angleDiffThreshold,\n    ),\n    _naturalTouchScroll:\n      options.naturalTouchScroll ?? config._naturalTouchScroll,\n    _touchDragHoldTime: options.touchDragHoldTime ?? config._touchDragHoldTime,\n    _touchDragNumFingers:\n      options.touchDragNumFingers ?? config._touchDragNumFingers,\n  };\n};\n\n// Since each callback needs to accumulate events during its debounce window\n// and until its threshold is exceeded, we use a wrapper around the\n// user-supplied handler to do that.\nconst getCallbackAndWrapper = (\n  handler: OnGestureHandler,\n  options: OnGestureOptionsInternal,\n  logger: LoggerInterface | null,\n): { _callback: OnGestureCallback; _wrapper: OnGestureHandlerWrapper } => {\n  let totalDeltaX = 0,\n    totalDeltaY = 0,\n    totalDeltaZ = 1;\n  // When there's a pointer down, drag then pointerup, since we prevent\n  // pointerdown default action, this results in a click event shortly\n  // afterwards even when there's been a movement of the mouse. We detect that\n  // and prevent this click.\n  let preventNextClick = false;\n\n  const directions = options._directions;\n  const intents = options._intents;\n  const minTotalDeltaX = options._minTotalDeltaX;\n  const maxTotalDeltaX = options._maxTotalDeltaX;\n  const minTotalDeltaY = options._minTotalDeltaY;\n  const maxTotalDeltaY = options._maxTotalDeltaY;\n  const minTotalDeltaZ = options._minTotalDeltaZ;\n  const maxTotalDeltaZ = options._maxTotalDeltaZ;\n  const deltaThreshold = options._deltaThreshold;\n  const angleDiffThreshold = options._angleDiffThreshold;\n  const reverseScroll = !options._naturalTouchScroll;\n  const dragHoldTime = options._touchDragHoldTime;\n  const dragNumFingers = options._touchDragNumFingers;\n\n  // The event queue is cleared when the threshold is exceeded AND the debounce\n  // window has passed. It's not necessary for the actual handler to be called\n  // then (e.g. if the direction or intent doesn't match, it won't be).\n  const eventQueue: Event[] = [];\n  const id = randId();\n\n  // Since handler could be a function or a callback (not callable), we wrap it\n  // so that in case it's already a callback, its removal will result in\n  // deleteHandler getting called. It is not debounced itself, instead there's\n  // a debounced wrapper that invokes it.\n  const callback = wrapCallback(handler);\n\n  // The debounced callback wrapper is what is debounced.\n  // It accumulates total deltas and checks if the conditions (of threshold,\n  // direction and intent) are satisfied before calling the real handler.\n  //\n  // Most importantly, since it is only called when the debounce window has\n  // expired it can clear the event queue if the threshold is also exceeded.\n  const debouncedWrapper = getDebouncedHandler(\n    options._debounceWindow,\n    (\n      target: EventTarget,\n      fragment: GestureFragment,\n      eventQueueCopy: Event[],\n    ) => {\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      const deltaX = fragment.deltaX;\n      const deltaY = fragment.deltaY;\n      const deltaZ = fragment.deltaZ;\n      const device = fragment.device;\n\n      if (\n        MH.round(maxAbs(deltaX, deltaY, (1 - deltaZ) * 100)) < deltaThreshold\n      ) {\n        debug: logger?.debug7(\n          `[${id}] Delta threshold not exceeded for callback`,\n        );\n        return;\n      }\n\n      debug: logger?.debug9(`[${id}] Done summing events for ${device}`);\n      clearEventQueue(device, eventQueue);\n\n      const newTotalDeltaX = toNumWithBounds(totalDeltaX + deltaX, {\n        min: minTotalDeltaX,\n        max: maxTotalDeltaX,\n      });\n\n      const newTotalDeltaY = toNumWithBounds(totalDeltaY + deltaY, {\n        min: minTotalDeltaY,\n        max: maxTotalDeltaY,\n      });\n\n      const newTotalDeltaZ = toNumWithBounds(addDeltaZ(totalDeltaZ, deltaZ), {\n        min: minTotalDeltaZ,\n        max: maxTotalDeltaZ,\n      });\n\n      if (\n        newTotalDeltaX === totalDeltaX &&\n        newTotalDeltaY === totalDeltaY &&\n        newTotalDeltaZ === totalDeltaZ\n      ) {\n        return;\n      }\n\n      totalDeltaX = newTotalDeltaX;\n      totalDeltaY = newTotalDeltaY;\n      totalDeltaZ = newTotalDeltaZ;\n\n      const direction = fragment.direction;\n      const intent = fragment.intent;\n      const time =\n        eventQueueCopy[MH.lengthOf(eventQueueCopy) - 1]?.timeStamp -\n          eventQueueCopy[0]?.timeStamp || 0;\n\n      const data = {\n        device,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n        time,\n        totalDeltaX,\n        totalDeltaY,\n        totalDeltaZ,\n      };\n\n      if (\n        direction !== MC.S_NONE &&\n        (!directions || MH.includes(directions, direction)) &&\n        (!intents || MH.includes(intents, intent))\n      ) {\n        callback.invoke(target, data, eventQueueCopy).catch(logError);\n      } else {\n        debug: logger?.debug7(\n          `[${id}] Directions or intents not matching for callback`,\n        );\n      }\n    },\n  );\n\n  // This wrapper is NOT debounced and adds the events to the queue, prevents\n  // default action if needed, and indicates whether the gesture is terminated.\n  const wrapper = (\n    target: EventTarget,\n    device: GestureDevice,\n    event: Event,\n    preventDefault: boolean,\n  ) => {\n    eventQueue.push(event);\n\n    const fragment = fragmentGetters[device](eventQueue, {\n      angleDiffThreshold,\n      deltaThreshold,\n      reverseScroll,\n      dragHoldTime,\n      dragNumFingers,\n    });\n\n    debug: logger?.debug8(\n      `[${id}] Got fragment for ${device} (${event.type})`,\n      fragment,\n      [...eventQueue].map((e) => e.type),\n    );\n\n    if (preventDefault) {\n      preventDefaultActionFor(\n        event,\n        !!fragment || (event.type === MC.S_CLICK && preventNextClick),\n      );\n    }\n\n    if (fragment === false) {\n      // not enough events in the queue, pass\n      debug: logger?.debug9(`[${id}] Not enough events for gesture ${device}`);\n      return false;\n    } else if (fragment === null) {\n      // consider the gesture terminated\n      clearEventQueue(device, eventQueue);\n      debug: logger?.debug9(`[${id}] Gesture for ${device} terminated`);\n      return true;\n    }\n\n    if (device === MC.S_POINTER) {\n      // If we're here, there's been a drag, expect a click immediately\n      // afterwards and prevent default action.\n      preventNextClick = true;\n      MH.setTimer(() => {\n        preventNextClick = false;\n      }, 10);\n    }\n\n    debouncedWrapper(\n      target,\n      fragment,\n      [...eventQueue], // copy\n    );\n\n    return false;\n  };\n\n  return { _callback: callback, _wrapper: wrapper };\n};\n\nconst clearEventQueue = (device: GestureDevice, queue: Event[]) => {\n  const keepLastEvent = device === MC.S_POINTER || device === MC.S_TOUCH;\n  queue.splice(0, MH.lengthOf(queue) - (keepLastEvent ? 1 : 0));\n};\n\nconst preventDefaultActionFor = (event: Event, isActualGesture: boolean) => {\n  const target = event.currentTarget;\n  const eventType = event.type;\n  const isPointerDown =\n    eventType === MC.S_POINTERDOWN || eventType === MC.S_MOUSEDOWN;\n\n  if (\n    eventType === MC.S_TOUCHMOVE ||\n    eventType === MC.S_WHEEL ||\n    ((eventType === MC.S_CLICK || eventType === MC.S_KEYDOWN) &&\n      isActualGesture) ||\n    (isPointerDown && (event as MouseEvent).buttons === 1)\n  ) {\n    MH.preventDefault(event);\n\n    if (isPointerDown && MH.isHTMLElement(target)) {\n      // Otherwise capturing key events won't work\n      target.focus({ preventScroll: true });\n    }\n  }\n};\n\nconst setGestureCssProps = (\n  target: EventTarget,\n  data: Partial<GestureData>,\n) => {\n  const intent = data.intent;\n\n  if (!MH.isElement(target) || !intent || intent === MC.S_UNKNOWN) {\n    return;\n  }\n\n  const prefix = `${intent}-`;\n\n  if (intent === MC.S_ZOOM) {\n    setNumericStyleProps(\n      target,\n      {\n        deltaZ: data.totalDeltaZ,\n      },\n      {\n        _prefix: prefix,\n        _numDecimal: 2,\n      },\n    ); // don't await here\n  } else {\n    setNumericStyleProps(\n      target,\n      {\n        deltaX: data.totalDeltaX,\n        deltaY: data.totalDeltaY,\n      },\n      {\n        _prefix: prefix,\n      },\n    ); // don't await here\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { sortedKeysByVal } from \"@lisn/utils/math\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  BitSpace,\n  newBitSpaces,\n  createBitSpace,\n} from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid device name.\n *\n * @category Validation\n */\nexport const isValidDevice = (device: string): device is Device =>\n  ORDERED_DEVICES.has(device);\n\n/**\n * Returns true if the given string is a valid aspect ratio name.\n *\n * @category Validation\n */\nexport const isValidAspectRatio = (\n  aspectRatio: string,\n): aspectRatio is AspectRatio => ORDERED_ASPECTR.has(aspectRatio);\n\n/**\n * Returns true if the given string is a valid device specification (including\n * `\"min <Device>\"`, etc).\n *\n * Returns false for \"\", although if you passed \"\" in\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} it would\n * accept it as specifying _all_ devices.\n *\n * @category Validation\n */\nexport const isValidDeviceList = (\n  device: string | string[],\n): device is DeviceSpec | Device[] =>\n  isValidForType(S_DEVICES, device, ORDERED_DEVICES);\n\n/**\n * Returns true if the given string is a valid aspect ratio specification\n * (including `\"min <AspectRatio>\"`, etc).\n *\n * Returns false for \"\", although if you passed \"\" in\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} it would\n * accept it as specifying _all_ aspect ratios.\n *\n * @category Validation\n */\nexport const isValidAspectRatioList = (\n  aspectR: string | string[],\n): aspectR is AspectRatioSpec | AspectRatio[] =>\n  isValidForType(S_ASPECTRS_CAMEL, aspectR, ORDERED_ASPECTR);\n\n/**\n * Returns a list of {@link Device}s that are not covered by the given device\n * specification. See\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for accepted\n * formats.\n *\n * Returns an empty for \"\" or for a specification that includes all devices.\n *\n * @category Layout\n */\nexport const getOtherDevices = (device: DeviceSpec | Device[]): Device[] =>\n  getOtherLayouts(S_DEVICES, device, ORDERED_DEVICES);\n\n/**\n * Returns a list of {@link AspectRatio}s that are not covered by the given\n * aspect ratio specification. See\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for accepted\n * formats.\n *\n * Returns an empty for \"\" or for a specification that includes all aspect\n * ratios.\n *\n * @category Layout\n */\nexport const getOtherAspectRatios = (\n  aspectR: AspectRatioSpec | AspectRatio[],\n): AspectRatio[] => getOtherLayouts(S_ASPECTRS_CAMEL, aspectR, ORDERED_ASPECTR);\n\n/**\n * @ignore\n * @internal\n */\nexport const getLayoutBitmask = (options?: {\n  devices?: DeviceSpec | Device[];\n  aspectRatios?: AspectRatioSpec | AspectRatio[];\n}): number => {\n  let layoutBitmask =\n    getBitmaskFromSpec(S_DEVICES, options?.devices, ORDERED_DEVICES) |\n    getBitmaskFromSpec(\n      S_ASPECTRS_CAMEL,\n      options?.aspectRatios,\n      ORDERED_ASPECTR,\n    );\n\n  if (!layoutBitmask) {\n    layoutBitmask = ORDERED_DEVICES.bitmask | ORDERED_ASPECTR.bitmask; // default: all\n  }\n\n  return layoutBitmask;\n};\n\n// In ascending order by width.\nconst ORDERED_DEVICE_NAMES = sortedKeysByVal(settings.deviceBreakpoints);\nconst ORDERED_ASPECTR_NAMES = sortedKeysByVal(settings.aspectRatioBreakpoints);\n\nconst bitSpaces = newBitSpaces();\n\n/**\n * @ignore\n * @internal\n */\nexport const ORDERED_DEVICES = createBitSpace(\n  bitSpaces,\n  ...ORDERED_DEVICE_NAMES,\n);\n\n/**\n * @ignore\n * @internal\n */\nexport const ORDERED_ASPECTR = createBitSpace(\n  bitSpaces,\n  ...ORDERED_ASPECTR_NAMES,\n);\n\n/**\n * @ignore\n * @internal\n */\nexport const NUM_LAYOUTS =\n  MH.lengthOf(ORDERED_DEVICE_NAMES) + MH.lengthOf(ORDERED_ASPECTR_NAMES);\n\n// --------------------\n\nconst S_DEVICES = \"devices\";\nconst S_ASPECTRS_CAMEL = \"aspectRatios\";\n\nconst LAYOUT_RANGE_REGEX = RegExp(\n  \"^ *(\" +\n    \"(?<layoutA>[a-z-]+) +to +(?<layoutB>[a-z-]+)|\" +\n    \"min +(?<minLayout>[a-z-]+)|\" +\n    \"max +(?<maxLayout>[a-z-]+)\" +\n    \") *$\",\n);\n\nconst getLayoutsFromBitmask = <T extends Device | AspectRatio>(\n  keyName: string,\n  bitmask: number,\n  bitSpace: BitSpace<T>,\n): T[] => {\n  const layouts: T[] = [];\n  for (let bit = bitSpace.start; bit <= bitSpace.end; bit++) {\n    const value = 1 << bit;\n    if (bitmask & value) {\n      const name = bitSpace.nameOf(value);\n      if (name) {\n        layouts.push(name);\n      }\n    }\n  }\n\n  return layouts;\n};\n\nconst getOtherLayouts = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[],\n  bitSpace: BitSpace<T>,\n): T[] => {\n  const bitmask = getBitmaskFromSpec(keyName, spec, bitSpace);\n  if (!bitmask) {\n    return [];\n  }\n\n  const oppositeBitmask = bitSpace.bitmask & ~bitmask;\n  return getLayoutsFromBitmask(keyName, oppositeBitmask, bitSpace);\n};\n\nconst isValidForType = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[],\n  bitSpace: BitSpace<T>,\n): boolean => {\n  try {\n    const bitmask = getBitmaskFromSpec(keyName, spec, bitSpace);\n    return bitmask !== 0;\n  } catch (err) {\n    if (MH.isInstanceOf(err, LisnUsageError)) {\n      return false;\n    }\n    throw err;\n  }\n};\n\nconst getBitmaskFromSpec = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[] | undefined | null,\n  bitSpace: BitSpace<T>,\n): number => {\n  if (MH.isEmpty(spec)) {\n    return 0;\n  }\n  const singleKeyName = keyName.slice(0, -1);\n\n  if (MH.isString(spec)) {\n    const rangeMatch = spec.match(LAYOUT_RANGE_REGEX);\n    if (rangeMatch) {\n      /* istanbul ignore next */ // shouldn't happen\n      if (!rangeMatch.groups) {\n        throw MH.bugError(\"Layout regex has no named groups\");\n      }\n\n      const minLayout =\n        rangeMatch.groups.layoutA || rangeMatch.groups.minLayout;\n      const maxLayout =\n        rangeMatch.groups.layoutB || rangeMatch.groups.maxLayout;\n\n      if (minLayout !== undefined && !bitSpace.has(minLayout)) {\n        throw MH.usageError(`Unknown ${singleKeyName} '${minLayout}'`);\n      }\n\n      if (maxLayout !== undefined && !bitSpace.has(maxLayout)) {\n        throw MH.usageError(`Unknown ${singleKeyName} '${maxLayout}'`);\n      }\n\n      return bitSpace.bitmaskFor(minLayout, maxLayout);\n    }\n  }\n\n  let bitmask = 0;\n  const layouts = validateStrList(keyName, spec, bitSpace.has);\n  if (layouts) {\n    for (const lt of layouts) {\n      bitmask |= bitSpace.bit[lt];\n    }\n  }\n\n  return bitmask;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  ScrollDirection,\n  ScrollTarget,\n  TargetCoordinates,\n  CoordinateOffset,\n  ScrollPosition,\n  Offset,\n} from \"@lisn/globals/types\";\n\nimport { getComputedStylePropNow } from \"@lisn/utils/css-alter\";\nimport { SCROLL_DIRECTIONS } from \"@lisn/utils/directions\";\nimport {\n  waitForInteractive,\n  waitForElementOrInteractive,\n} from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { maxAbs, easeInOutQuad } from \"@lisn/utils/math\";\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Scrolling\n */\nexport type ScrollAction = {\n  cancel: () => boolean;\n\n  /**\n   * Will reject if the scroll is cancelled.\n   */\n  waitFor: () => Promise<ScrollPosition>;\n};\n\n/**\n * @category Scrolling\n * @interface\n */\nexport type ScrollToOptions = {\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue If `document.body` is scrollable, will use that; otherwise `document.scrollingElement`\n   */\n  scrollable?: Element;\n\n  /**\n   * Offset the target coordinates by the given amount(s).\n   *\n   * E.g. if the final target coordinates are computed to be\n   * `{top: 100, left: 0}` and you specify offset as `{top: 10, left: 20}`, it\n   * will scroll to  `{top: 110, left: 20}`.\n   *\n   * @defaultValue undefined\n   */\n  offset?: CoordinateOffset;\n\n  // TODO maybe support fixed velocity as an alternative to fixed duration?\n  /**\n   * The duration of the scroll animation. If not given, it is instant.\n   *\n   * @defaultValue 0\n   */\n  duration?: number;\n\n  /**\n   * Whether another request to us to scroll the same target can interrupt this\n   * scroll before it finishes.\n   *\n   * @defaultValue false\n   */\n  weCanInterrupt?: boolean;\n\n  /**\n   * Whether a user attempt to scroll the target can interrupt this before it\n   * finishes.\n   *\n   * @defaultValue false\n   */\n  userCanInterrupt?: boolean;\n\n  /**\n   * If the scrolling element is already at the given coordinates (or strictly\n   * speaking we allow for 5 pixels difference), then if `altTarget` is given,\n   * this will become the target to scroll to.\n   *\n   * @defaultValue undefined\n   */\n  altTarget?: TargetCoordinates | Element | string;\n\n  /**\n   * Offset the target coordinates by the given amount(s) when `altTarget` is used.\n   *\n   * See {@link ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined\n   */\n  altOffset?: CoordinateOffset;\n};\n\n// ----------\n\n/**\n * Returns true if the given element is scrollable in the given direction, or\n * in either direction (if `axis` is not given).\n *\n * **IMPORTANT:** If you enable `active` then be aware that:\n * 1. It may attempt to scroll the target in order to determine whether it's\n *    scrollable in a more reliable way than the default method of comparing\n *    clientWidth/Height to scrollWidth/Height. If there is currently any\n *    ongoing scroll on the target, this will stop it, so never use that inside\n *    scroll-triggered handlers.\n * 2. If the layout has been invalidated and not yet recalculated,\n *    this will cause a forced layout, so always {@link waitForMeasureTime}\n *    before calling this function when possible.\n *\n * @param {} [options.axis]    One of \"x\" or \"y\" for horizontal or vertical\n *                             scroll respectively. If not given, it checks\n *                             both.\n * @param {} [options.active]  If true, then if the target's current scroll\n *                             offset is 0, it will attempt to scroll it rather\n *                             than looking at the clientWidth/Height to\n *                             scrollWidth/Height. This is more reliable but can\n *                             cause issues, see note above.\n * @param {} [options.noCache] By default the result of a check is cached for\n *                             1s and if there's already a cached result for\n *                             this element, it is returns. Set this to true to\n *                             disable checking the cache and also saving the\n *                             result into the cache.\n *\n * @category Scrolling\n */\nexport const isScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n): boolean => {\n  const { axis, active, noCache } = options || {};\n  if (!axis) {\n    return (\n      isScrollable(element, { axis: \"y\", active, noCache }) ||\n      isScrollable(element, { axis: \"x\", active, noCache })\n    );\n  }\n\n  if (!noCache) {\n    const cachedResult = isScrollableCache.get(element)?.get(axis);\n    if (!MH.isNullish(cachedResult)) {\n      return cachedResult;\n    }\n  }\n\n  const offset = axis === \"x\" ? \"Left\" : \"Top\";\n  let result = false;\n  let doCache = !noCache;\n\n  if (element[`scroll${offset}`]) {\n    result = true;\n  } else if (active) {\n    // Use scrollTo with explicit behavior set to instant instead of setting\n    // the scrollTop/Left properties since the latter doesn't work with\n    // scroll-behavior smooth.\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 1 });\n    const canScroll = element[`scroll${offset}`] > 0;\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 0 });\n    result = canScroll;\n  } else {\n    const dimension = axis === \"x\" ? \"Width\" : \"Height\";\n    result = element[`scroll${dimension}`] > element[`client${dimension}`];\n    // No need to cache a passive check.\n    doCache = false;\n  }\n\n  if (doCache) {\n    isScrollableCache.sGet(element).set(axis, result);\n    MH.setTimer(() => {\n      MH.deleteKey(isScrollableCache.get(element), axis);\n      isScrollableCache.prune(element);\n    }, IS_SCROLLABLE_CACHE_TIMEOUT);\n  }\n\n  return result;\n};\n\n/**\n * Returns the closest scrollable ancestor of the given element, _not including\n * it_.\n *\n * @param {} options See {@link isScrollable}\n *\n * @return {} `null` if no scrollable ancestors are found.\n *\n * @category Scrolling\n */\nexport const getClosestScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n) => {\n  // Walk up the tree, starting at the element in question but excluding it.\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = MH.parentOf(ancestor))) {\n    if (isScrollable(ancestor, options)) {\n      return ancestor;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Returns the current {@link ScrollAction} if any.\n *\n * @category Scrolling\n */\nexport const getCurrentScrollAction = (\n  scrollable?: Element,\n): ScrollAction | null => {\n  scrollable = toScrollableOrDefault(scrollable);\n  const action = currentScrollAction.get(scrollable);\n  if (action) {\n    return MH.copyObject(action);\n  }\n  return null;\n};\n\n/**\n * Scrolls the given scrollable element to the given `to` target.\n *\n * Returns `null` if there's an ongoing scroll that is not cancellable.\n *\n * Note that if `to` is an element or a selector, then it _must_ be a\n * descendant of the scrollable element.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *               If the target coordinates are invalid.\n *\n * @param {} to  If this is an element, then its top-left position is used as\n *               the target coordinates. If it is a string, then it is treated\n *               as a selector for an element using `querySelector`.\n *\n * @return {} `null` if there's an ongoing scroll that is not cancellable,\n * otherwise a {@link ScrollAction}.\n *\n * @category Scrolling\n */\nexport const scrollTo = (\n  to: TargetCoordinates | Element | string,\n  userOptions?: ScrollToOptions,\n): ScrollAction | null => {\n  const options = getOptions(to, userOptions);\n  const scrollable = options._scrollable;\n\n  // cancel current scroll action if any\n  const currentScroll = currentScrollAction.get(scrollable);\n  if (currentScroll) {\n    if (!currentScroll.cancel()) {\n      // current scroll action is not cancellable by us\n      return null;\n    }\n  }\n\n  let isCancelled = false;\n\n  const cancelFn = options._weCanInterrupt\n    ? () => (isCancelled = true)\n    : () => false;\n\n  const scrollEvents = [\"touchmove\", \"wheel\"]; // don't bother with keyboard\n  let preventScrollHandler: EventListener | null = null;\n\n  if (options._userCanInterrupt) {\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(\n        scrollable,\n        eventType,\n        () => {\n          isCancelled = true;\n        },\n        { once: true },\n      );\n    }\n  } else {\n    preventScrollHandler = MH.preventDefault;\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(scrollable, eventType, preventScrollHandler, {\n        passive: false,\n      });\n    }\n  }\n\n  const promise = initiateScroll(options, () => isCancelled);\n\n  const thisScrollAction: ScrollAction = {\n    waitFor: () => promise,\n    cancel: cancelFn,\n  };\n\n  const cleanup = () => {\n    if (currentScrollAction.get(scrollable) === thisScrollAction) {\n      MH.deleteKey(currentScrollAction, scrollable);\n    }\n\n    if (preventScrollHandler) {\n      for (const eventType of scrollEvents) {\n        removeEventListenerFrom(scrollable, eventType, preventScrollHandler, {\n          passive: false,\n        });\n      }\n    }\n  };\n\n  thisScrollAction.waitFor().then(cleanup).catch(cleanup);\n\n  currentScrollAction.set(scrollable, thisScrollAction);\n  return thisScrollAction;\n};\n\n/**\n * Returns true if the given string is a valid scroll direction.\n *\n * @category Validation\n */\nexport const isValidScrollDirection = (\n  direction: string,\n): direction is ScrollDirection => MH.includes(SCROLL_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid scroll\n * directions.\n *\n * @category Validation\n */\nexport const isValidScrollDirectionList = (directions: string | string[]) =>\n  isValidStrList(directions, isValidScrollDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const mapScrollable = (original: Element, actualScrollable: Element) =>\n  mappedScrollables.set(original, actualScrollable);\n\n/**\n * @ignore\n * @internal\n */\nexport const unmapScrollable = (original: Element) =>\n  MH.deleteKey(mappedScrollables, original);\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientWidthNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetWidth -\n      getBorderWidth(element, MC.S_LEFT) -\n      getBorderWidth(element, MC.S_RIGHT)\n    : element[MC.S_CLIENT_WIDTH];\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientHeightNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetHeight -\n      getBorderWidth(element, MC.S_TOP) -\n      getBorderWidth(element, MC.S_BOTTOM)\n    : element[MC.S_CLIENT_HEIGHT];\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainContentElement = (): HTMLElement | null =>\n  mainContentElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainContentElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainContentElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainScrollableElement = (): HTMLElement | null =>\n  mainScrollableElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainScrollableElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainScrollableElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultScrollingElement = () => {\n  const body = MH.getBody();\n  return isScrollable(body) ? body : MH.getDocScrollingElement() || body;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetScrollableElement = (\n  target: ScrollTarget | null | undefined,\n): Element | null => toScrollableOrMain(target, tryGetMainScrollableElement);\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchScrollableElement = async (\n  target: ScrollTarget | null | undefined,\n): Promise<Element> => toScrollableOrMain(target, fetchMainScrollableElement);\n\n// ----------------------------------------\n\ntype ScrollToOptionsInternal = {\n  _target: TargetCoordinates;\n  _offset: CoordinateOffset | null;\n  _altTarget: TargetCoordinates | null;\n  _altOffset: CoordinateOffset | null;\n  _scrollable: Element;\n  _duration: number;\n  _weCanInterrupt: boolean;\n  _userCanInterrupt: boolean;\n};\n\nconst IS_SCROLLABLE_CACHE_TIMEOUT = 1000;\n\nconst isScrollableCache = newXMap<Element, Map<\"x\" | \"y\", boolean>>(() =>\n  MH.newMap(),\n);\n\nconst mappedScrollables = MH.newMap<Element, Element>();\n\nconst currentScrollAction = MH.newMap<Element, ScrollAction>();\n\nconst DIFF_THRESHOLD = 5;\nconst arePositionsDifferent = (start: ScrollPosition, end: ScrollPosition) =>\n  maxAbs(start.top - end.top, start.left - end.left) >= DIFF_THRESHOLD;\n\nconst toScrollableOrMain = <R>(\n  target: ScrollTarget | null | undefined,\n  getMain: () => R,\n): Element | R => {\n  if (MH.isElement(target)) {\n    return mappedScrollables.get(target) || target;\n  }\n\n  if (!target || target === MH.getWindow() || target === MH.getDoc()) {\n    return getMain();\n  }\n\n  throw MH.usageError(\"Unsupported scroll target\");\n};\n\nconst toScrollableOrDefault = (scrollable: Element | undefined): Element =>\n  scrollable ?? getDefaultScrollingElement();\n\nconst getOptions = (\n  to: TargetCoordinates | Element | string,\n  options: ScrollToOptions | undefined,\n): ScrollToOptionsInternal => {\n  const scrollable = toScrollableOrDefault(options?.scrollable);\n  const target = getTargetCoordinates(scrollable, to);\n  const altTarget = options?.altTarget\n    ? getTargetCoordinates(scrollable, options?.altTarget)\n    : null;\n\n  return {\n    _target: target,\n    _offset: options?.offset || null,\n    _altTarget: altTarget,\n    _altOffset: options?.altOffset || null,\n    _scrollable: scrollable,\n    _duration: options?.duration || 0,\n    _weCanInterrupt: options?.weCanInterrupt ?? false,\n    _userCanInterrupt: options?.userCanInterrupt ?? false,\n  };\n};\n\nconst getTargetCoordinates = (\n  scrollable: Element,\n  target: TargetCoordinates | Element | string,\n): TargetCoordinates => {\n  const docScrollingElement = MH.getDocScrollingElement();\n\n  if (MH.isElement(target)) {\n    if (scrollable === target || !scrollable.contains(target)) {\n      throw MH.usageError(\"Target must be a descendant of the scrollable one\");\n    }\n\n    return {\n      top: () =>\n        scrollable[MC.S_SCROLL_TOP] +\n        MH.getBoundingClientRect(target).top -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).top),\n      left: () =>\n        scrollable[MC.S_SCROLL_LEFT] +\n        MH.getBoundingClientRect(target).left -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).left),\n    };\n  }\n\n  if (MH.isString(target)) {\n    const targetEl = MH.docQuerySelector(target);\n    if (!targetEl) {\n      throw MH.usageError(`No match for '${target}'`);\n    }\n\n    return getTargetCoordinates(scrollable, targetEl);\n  }\n\n  if (!MH.isObject(target) || !(\"top\" in target || \"left\" in target)) {\n    throw MH.usageError(\"Invalid coordinates\");\n  }\n\n  return target;\n};\n\nconst getStartEndPosition = async (\n  options: ScrollToOptionsInternal,\n): Promise<{ start: ScrollPosition; end: ScrollPosition }> => {\n  await waitForMeasureTime();\n\n  const applyOffset = (\n    position: ScrollPosition,\n    offset: CoordinateOffset | null,\n  ) => {\n    position.top += offset?.top || 0;\n    position.left += offset?.left || 0;\n  };\n\n  const scrollable = options._scrollable;\n  const start = {\n    top: scrollable[MC.S_SCROLL_TOP],\n    left: scrollable[MC.S_SCROLL_LEFT],\n  };\n\n  let end = getEndPosition(scrollable, start, options._target);\n  applyOffset(end, options._offset);\n\n  if (!arePositionsDifferent(start, end) && options._altTarget) {\n    end = getEndPosition(scrollable, start, options._altTarget);\n    applyOffset(end, options._altOffset);\n  }\n\n  return { start, end };\n};\n\n// must be called in \"measure time\"\nconst getEndPosition = (\n  scrollable: Element,\n  startPosition: ScrollPosition,\n  targetCoordinates: TargetCoordinates,\n): ScrollPosition => {\n  // by default no change in scroll top or left\n  const endPosition = MH.copyObject(startPosition);\n\n  if (!MH.isNullish(targetCoordinates?.top)) {\n    if (MH.isFunction(targetCoordinates.top)) {\n      endPosition.top = targetCoordinates.top(scrollable);\n    } else {\n      endPosition.top = targetCoordinates.top;\n    }\n  }\n\n  if (!MH.isNullish(targetCoordinates?.left)) {\n    if (MH.isFunction(targetCoordinates.left)) {\n      endPosition.left = targetCoordinates.left(scrollable);\n    } else {\n      endPosition.left = targetCoordinates.left;\n    }\n  }\n\n  // Set boundaries\n  const scrollH = scrollable[MC.S_SCROLL_HEIGHT];\n  const scrollW = scrollable[MC.S_SCROLL_WIDTH];\n  const clientH = getClientHeightNow(scrollable);\n  const clientW = getClientWidthNow(scrollable);\n  endPosition.top = MH.min(scrollH - clientH, endPosition.top);\n  endPosition.top = MH.max(0, endPosition.top);\n\n  endPosition.left = MH.min(scrollW - clientW, endPosition.left);\n  endPosition.left = MH.max(0, endPosition.left);\n\n  return endPosition;\n};\n\nconst initiateScroll = async (\n  options: ScrollToOptionsInternal,\n  isCancelled: () => boolean,\n) => {\n  const position = await getStartEndPosition(options);\n  const duration = options._duration;\n  const scrollable = options._scrollable;\n\n  let startTime: number, previousTimeStamp: number;\n  let currentPosition: ScrollPosition = position.start;\n\n  const step = async () => {\n    await waitForMutateTime(); // effectively next animation frame\n    // Element.scrollTo equates to a measurement and needs to run after\n    // painting to avoid forced layout.\n    await waitForMeasureTime();\n    const timeStamp = MH.timeNow();\n\n    if (isCancelled()) {\n      // Reject the promise\n      throw currentPosition;\n    }\n\n    if (!startTime) {\n      // If it's very close to the target, no need to scroll smoothly\n      if (\n        duration === 0 ||\n        !arePositionsDifferent(currentPosition, position.end)\n      ) {\n        MH.elScrollTo(scrollable, position.end);\n        return position.end;\n      }\n\n      startTime = timeStamp;\n    }\n\n    if (startTime !== timeStamp && previousTimeStamp !== timeStamp) {\n      const elapsed = timeStamp - startTime;\n      const progress = easeInOutQuad(MH.min(1, elapsed / duration));\n\n      currentPosition = {\n        top:\n          position.start.top +\n          (position.end.top - position.start.top) * progress,\n        left:\n          position.start.left +\n          (position.end.left - position.start.left) * progress,\n      };\n\n      MH.elScrollTo(scrollable, currentPosition);\n\n      if (progress === 1) {\n        return currentPosition;\n      }\n    }\n\n    previousTimeStamp = timeStamp;\n    return step();\n  };\n\n  return step();\n};\n\nconst isScrollableBodyInQuirks = (element: Element): element is HTMLElement =>\n  element === MH.getBody() && MH.getDocScrollingElement() === null;\n\n// must be called in \"measure time\"\nconst getBorderWidth = (element: Element, side: Offset) =>\n  MH.ceil(MH.parseFloat(getComputedStylePropNow(element, `border-${side}`)));\n\n// ------------------------------\n\nlet mainContentElement: HTMLElement;\nlet mainScrollableElement: HTMLElement;\n\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      const mainScrollableElementSelector =\n        settings.mainScrollableElementSelector;\n\n      const contentElement = await waitForElementOrInteractive(() => {\n        return mainScrollableElementSelector\n          ? MH.docQuerySelector(mainScrollableElementSelector)\n          : MH.getBody(); // default if no selector\n      });\n\n      // defaults\n      mainScrollableElement = getDefaultScrollingElement();\n      mainContentElement = MH.getBody();\n\n      if (!contentElement) {\n        logError(\n          MH.usageError(\n            `No match for '${mainScrollableElementSelector}'. ` +\n              \"Scroll tracking/capturing may not work as intended.\",\n          ),\n        );\n      } else if (!MH.isHTMLElement(contentElement)) {\n        logWarn(\"mainScrollableElementSelector should point to an HTMLElement\");\n      } else if (contentElement !== mainContentElement) {\n        mainScrollableElement = mainContentElement = contentElement;\n      }\n    })();\n  }\n\n  return initPromise;\n};\n\n// Try to find the main scrollable/content elements asap so that tryGetMain*\n// can return them if called before fetchMain*\nif (MH.hasDOM()) {\n  waitForInteractive().then(init);\n}\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  addClasses,\n  addClassesNow,\n  setDataNow,\n  setStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, wrapScrollingContent } from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { camelToKebabCase, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  isScrollable,\n  tryGetMainContentElement,\n  fetchMainContentElement,\n} from \"@lisn/utils/scroll\";\n\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Overlays\n * @interface\n */\nexport type OverlayOptions = {\n  /**\n   * The parent element to insert the overlay into.\n   *\n   * If not given, then:\n   * - if the overlay is to have a `position: fixed`, then `document.body` is used\n   * - otherwise,\n   *   {@link Watchers/ScrollWatcher.ScrollWatcher.fetchMainContentElement | ScrollWatcher.fetchMainContentElement} is\n   *   used\n   */\n  parent?: HTMLElement;\n\n  /**\n   * If set, then it will be assigned as the DOM element ID for the new\n   * overlay.\n   *\n   * Furthermore, the new overlay will be created and will not be saved for\n   * future reuse.\n   *\n   * By default, if `id` is not given, the overlay will be saved, and if\n   * {@link createOverlay} is called again with the same `style`, `data` and\n   * parent, the previous overlay is returned.\n   */\n  id?: string;\n\n  /**\n   * Every entry in this object will be set on the `style` of the new overlay.\n   *\n   * **IMPORTANT:** By default overlays are positioned absolutely, so if you need\n   * another positioning, override this here by setting a `position` key in\n   * `style`. If position is either \"absolute\" (by default or explicitly set) or\n   * \"fixed\", and none of `top` or `bottom` is given, `top: 0` is set; and\n   * similarly, if none of `left` or `right` is given, `left: 0` is set.\n   */\n  style?: Record<string, string>;\n\n  /**\n   * Every entry in this object will be set as a data attribute on the new\n   * overlay.\n   *\n   * Keys can be either kebab-case or camelCase (they will be converted if\n   * needed). Do _not_ include the \"data-\" prefix which will be added\n   * automatically. E.g. both \"foo-bar\" and \"fooBar\" will result in\n   * \"data-foo-bar\" being set.\n   */\n  data?: Record<string, string>;\n};\n\n/**\n * Returns an existing overlay for this specification. If the overlay was just\n * created it may not yet be attached to the DOM.\n *\n * @category Overlays\n */\nexport const getOverlay = (userOptions?: OverlayOptions) => {\n  const options = tryGetOverlayOptions(userOptions);\n  if (!options) {\n    return null;\n  }\n\n  return overlays.get(options._parent)?.get(options._overlayKey) || null;\n};\n\n/**\n * Creates a new overlay, and inserts it into the DOM as soon as\n * {@link waitForMutateTime} resolves, or returns an already existing matching\n * overlay.\n *\n * **Note** that if {@link OverlayOptions.id} is set, a new overlay will\n * _always_ be created.\n *\n * @category Overlays\n */\nexport const createOverlay = async (userOptions?: OverlayOptions) => {\n  const options = await fetchOverlayOptions(userOptions);\n  const canReuse = !options._id;\n\n  if (canReuse) {\n    const existingOverlay = overlays\n      .get(options._parent)\n      ?.get(options._overlayKey);\n\n    if (existingOverlay) {\n      if (!MH.parentOf(existingOverlay)) {\n        // not yet inserted into the DOM, so wait until it is\n        await waitForMutateTime();\n      }\n      return existingOverlay;\n    }\n  }\n\n  // Create a new one\n  const overlay = createOnlyOverlay(options);\n  if (canReuse) {\n    // Save it now before awating, so that concurrent requests to create the\n    // same one use it\n    overlays.sGet(options._parent).set(options._overlayKey, overlay);\n  } else {\n    overlay.id = options._id;\n  }\n\n  const isPercentageHOffset = MH.includes(\n    (options._style.left || \"\") + (options._style.right || \"\"),\n    \"%\",\n  );\n\n  const isPercentageVOffset = MH.includes(\n    (options._style.top || \"\") + (options._style.bottom || \"\"),\n    \"%\",\n  );\n\n  let needsContentWrapping = false;\n  let parentEl = options._parent;\n  if (isPercentageHOffset || isPercentageVOffset) {\n    needsContentWrapping =\n      (isPercentageHOffset && isScrollable(parentEl, { axis: \"x\" })) ||\n      (isPercentageVOffset && isScrollable(parentEl, { axis: \"y\" }));\n  }\n\n  if (needsContentWrapping) {\n    if (settings.contentWrappingAllowed) {\n      parentEl = await wrapScrollingContent(parentEl);\n    } else {\n      logWarn(\n        \"Percentage offset view trigger with scrolling root requires contentWrappingAllowed\",\n      );\n    }\n  }\n\n  if (options._style.position === MC.S_ABSOLUTE) {\n    // Ensure parent has non-static positioning\n    addClasses(parentEl, MH.prefixName(\"overlay-container\"));\n  }\n\n  await moveElement(overlay, { to: parentEl });\n\n  return overlay;\n};\n\n// ----------------------------------------\n\ntype OverlayOptionsInternal = {\n  _parent: HTMLElement;\n  _id: string;\n  _style: Record<string, string>;\n  _data: Record<string, string>;\n  _overlayKey: string;\n};\n\nconst overlays = newXWeakMap<HTMLElement, Map<string, HTMLElement>>(() =>\n  MH.newMap(),\n);\n\nconst tryGetOverlayOptions = (\n  userOptions: OverlayOptions | undefined,\n): OverlayOptionsInternal | null => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = tryGetParent(userOptions?.parent, style.position);\n  if (!parentEl) {\n    return null;\n  }\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst fetchOverlayOptions = async (\n  userOptions: OverlayOptions | undefined,\n): Promise<OverlayOptionsInternal> => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = await fetchParent(userOptions?.parent, style.position);\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst getOverlayKey = (\n  style: Record<string, string>,\n  data: Record<string, string>,\n) => objToStrKey(style) + \"|\" + objToStrKey(data);\n\nconst getCssProperties = (style: Record<string, string> | undefined) => {\n  const finalCssProperties: Record<string, string> = MH.merge(\n    { position: MC.S_ABSOLUTE }, // default\n    style,\n  );\n\n  if (\n    finalCssProperties.position === MC.S_ABSOLUTE ||\n    finalCssProperties.position === MC.S_FIXED\n  ) {\n    if (\n      MH.isEmpty(finalCssProperties.top) &&\n      MH.isEmpty(finalCssProperties.bottom)\n    ) {\n      finalCssProperties.top = \"0px\";\n    }\n\n    if (\n      MH.isEmpty(finalCssProperties.left) &&\n      MH.isEmpty(finalCssProperties.right)\n    ) {\n      finalCssProperties.left = \"0px\";\n    }\n  }\n\n  return finalCssProperties;\n};\n\nconst tryGetParent = (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED ? MH.getBody() : tryGetMainContentElement());\n\nconst fetchParent = async (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED\n    ? await waitForElement(MH.getBody)\n    : await fetchMainContentElement());\n\nconst createOnlyOverlay = (options: OverlayOptionsInternal) => {\n  const overlay = MH.createElement(\"div\");\n\n  addClassesNow(overlay, MH.prefixName(\"overlay\"));\n\n  const data = options._data;\n  for (const attr of MH.keysOf(data)) {\n    setDataNow(overlay, camelToKebabCase(attr), data[attr]);\n  }\n\n  const style = options._style;\n  for (const prop of MH.keysOf(style)) {\n    setStylePropNow(overlay, prop, style[prop]);\n  }\n\n  return overlay;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size } from \"@lisn/globals/types\";\n\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { createOverlay } from \"@lisn/utils/overlays\";\n\n/**\n * Returns the content box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @category Size measurements\n */\nexport const getEntryContentBox = (entry: ResizeObserverEntry): Size => {\n  const size = entry.contentBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  }\n\n  const rect = entry.contentRect;\n  return { [MC.S_WIDTH]: rect[MC.S_WIDTH], [MC.S_HEIGHT]: rect[MC.S_HEIGHT] };\n};\n\n/**\n * Returns the border box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @param {} fallbackToContent If the entry does not contain border box\n *                             measurements (depending on browser), then fall\n *                             back to using the content box size. Otherwise\n *                             (by default) will return `NaN` values for width\n *                             and height.\n *\n * @category Size measurements\n */\nexport const getEntryBorderBox = (\n  entry: ResizeObserverEntry,\n  fallbackToContent = false,\n): Size => {\n  const size = entry.borderBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  } else if (fallbackToContent) {\n    return getEntryContentBox(entry);\n  }\n\n  return { [MC.S_WIDTH]: NaN, [MC.S_HEIGHT]: NaN };\n};\n\n/**\n * Returns true if the given string is a valid box type.\n *\n * @category Validation\n */\nexport const isValidBox = (box: string): box is Box =>\n  MH.includes(ALL_BOXES, box);\n\n/**\n * Returns true if the given string is a valid dimension.\n *\n * @category Validation\n */\nexport const isValidDimension = (dimension: string): dimension is Dimension =>\n  MH.includes(ALL_DIMENSIONS, dimension);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetViewportOverlay = (): HTMLElement | null =>\n  viewportOverlay ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via SizeWatcher\n */\nexport const fetchViewportOverlay = async (): Promise<HTMLElement> => {\n  await init();\n\n  return viewportOverlay;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchViewportSize = async (realtime = false) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const root = MH.hasDOM()\n    ? (MH.getDocScrollingElement() ?? MH.getBody())\n    : null;\n\n  return {\n    [MC.S_WIDTH]: root?.clientWidth || 0,\n    [MC.S_HEIGHT]: root?.clientHeight || 0,\n  };\n};\n\n// ----------------------------------------\n\nconst S_INLINE_SIZE = \"inlineSize\";\nconst S_BLOCK_SIZE = \"blockSize\";\n\nconst ALL_BOXES: Box[] = [\"content\", \"border\"] as const;\nconst ALL_DIMENSIONS: Dimension[] = [MC.S_WIDTH, MC.S_HEIGHT] as const;\n\nconst getSizeFromInlineBlock = (\n  size: ResizeObserverSize | ReadonlyArray<ResizeObserverSize>,\n): Size => {\n  /* istanbul ignore else */\n  if (MH.isIterableObject(size)) {\n    return {\n      [MC.S_WIDTH]: size[0][S_INLINE_SIZE],\n      [MC.S_HEIGHT]: size[0][S_BLOCK_SIZE],\n    };\n  }\n  return {\n    // in some browsers inlineSize and blockSize are scalars and nor Arrays\n    [MC.S_WIDTH]: (size as { [S_INLINE_SIZE]: number })[S_INLINE_SIZE],\n    [MC.S_HEIGHT]: (size as { [S_BLOCK_SIZE]: number })[S_BLOCK_SIZE],\n  };\n};\n\n// ------------------------------\n\nlet viewportOverlay: HTMLElement;\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      viewportOverlay = await createOverlay({\n        id: MH.prefixName(\"vp-ovrl\"),\n        style: {\n          position: \"fixed\",\n          [MC.S_WIDTH]: \"100vw\",\n          [MC.S_HEIGHT]: \"100vh\",\n        },\n      });\n    })();\n  }\n\n  return initPromise;\n};\n","/**\n * @module Modules/XResizeObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logWarn, logError } from \"@lisn/utils/log\";\n\nimport debug from \"@lisn/debug/debug\";\n\nexport type XResizeObserverCallback = (\n  entries: ResizeObserverEntry[],\n  observer: XResizeObserver,\n) => void;\n\n/**\n * {@link XResizeObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}\n * - observes both border box and content box size changes\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n * - can debounce the callback\n */\nexport class XResizeObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe | ResizeObserver:observe} except it accepts multiple targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent resize.\n   *\n   * If the target is already being observed, nothing is done.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/unobserve | ResizeObserver:unobserve} except it accepts multiple targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/disconnect | ResizeObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * @param {} debounceWindow Debounce the handler so that it's called at most\n   *                          every `debounceWindow` ms.\n   */\n  constructor(callback: XResizeObserverCallback, debounceWindow?: number) {\n    const logger = debug ? new debug.Logger({ name: \"XResizeObserver\" }) : null;\n\n    // Keep the latest ResizeObserverEntry for each target during the\n    // debounceWindow. Short-lived, so ok to use a Map.\n    const buffer = MH.newMap<Element, ResizeObserverEntry>();\n\n    // Since internally we have two observers, one for border box, one for\n    // content box, we will get called initially twice for a target. So we keep\n    // a counter of 1 or 2 for how many more calls to ignore.\n    const targetsToSkip = MH.newWeakMap<Element, 1 | 2>();\n\n    let observedTargets = MH.newWeakSet<Element>();\n\n    debounceWindow = debounceWindow || 0;\n\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      // Override entries for previous targets, but keep entries whose targets\n      // were not resized in this round\n      for (const entry of entries) {\n        const target = MH.targetOf(entry);\n        const skipNum = targetsToSkip.get(target);\n        if (skipNum !== undefined) {\n          if (skipNum === 2) {\n            // expect one more call\n            targetsToSkip.set(target, 1);\n          } else {\n            // done\n            /* istanbul ignore next */\n            if (skipNum !== 1) {\n              logError(MH.bugError(`# targetsToSkip is ${skipNum}`));\n            }\n            MH.deleteKey(targetsToSkip, target);\n          }\n\n          continue;\n        }\n\n        buffer.set(target, entry);\n      }\n\n      debug: logger?.debug9(\n        `Got ${entries.length} new entries. ` +\n          `Have ${buffer.size} unique-target entries`,\n        entries,\n      );\n\n      if (!timer && MH.sizeOf(buffer)) {\n        timer = MH.setTimer(() => {\n          if (MH.sizeOf(buffer)) {\n            callback(MH.arrayFrom(buffer.values()), this);\n            buffer.clear();\n          }\n\n          timer = null;\n        }, debounceWindow);\n      }\n    };\n\n    const borderObserver = MH.newResizeObserver(resizeHandler);\n    const contentObserver = MH.newResizeObserver(resizeHandler);\n    if (!borderObserver || !contentObserver) {\n      logWarn(\n        \"This browser does not support ResizeObserver. Some features won't work.\",\n      );\n    }\n\n    const observeTarget = (target: Element) => {\n      observedTargets.add(target);\n      borderObserver?.observe(target, { box: \"border-box\" });\n      contentObserver?.observe(target);\n    };\n\n    // --------------------\n\n    this.observe = (...targets) => {\n      debug: logger?.debug10(\"Observing targets\", targets);\n\n      for (const target of targets) {\n        observeTarget(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      debug: logger?.debug10(\"Observing targets (later)\", targets);\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.set(target, 2);\n        observeTarget(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      debug: logger?.debug10(\"Unobserving targets\", targets);\n\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        borderObserver?.unobserve(target);\n        contentObserver?.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      debug: logger?.debug10(\"Disconnecting\");\n      observedTargets = MH.newWeakSet();\n      borderObserver?.disconnect();\n      contentObserver?.disconnect();\n    };\n  }\n}\n","/**\n * @module Watchers/SizeWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size, SizeTarget } from \"@lisn/globals/types\";\n\nimport { setNumericStyleProps } from \"@lisn/utils/css-alter\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum } from \"@lisn/utils/math\";\nimport {\n  isValidBox,\n  isValidDimension,\n  getEntryBorderBox,\n  getEntryContentBox,\n  tryGetViewportOverlay,\n  fetchViewportOverlay,\n} from \"@lisn/utils/size\";\nimport { objToStrKey } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XResizeObserver } from \"@lisn/modules/x-resize-observer\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link SizeWatcher} monitors the size of a given target. It's built on top\n * of {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}.\n *\n * It manages registered callbacks globally and reuses ResizeObservers.\n *\n * Each instance of SizeWatcher manages up to two ResizeObservers: one\n * for content-box size changes and one for border-box size changes.\n */\nexport class SizeWatcher {\n  /**\n   * Call the given handler whenever the target's size changes.\n   *\n   * Unless {@link OnResizeOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest size data.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly onResize: (\n    handler: OnResizeHandler,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offResize: (handler: OnResizeHandler, target?: SizeTarget) => void;\n\n  /**\n   * This is the same as {@link onResize} except that if `handler` is not given,\n   * then it defaults to an  handler that updates a set of CSS variables on the\n   * target's style:\n   *\n   * - If {@link OnResizeOptions.target | options.target} is not given, or is\n   *   `window`, the following CSS variables are set on the root (`html`)\n   *   element and represent the viewport size:\n   *   - `--lisn-js--window-border-width`\n   *   - `--lisn-js--window-border-height`\n   *   - `--lisn-js--window-content-width`\n   *   - `--lisn-js--window-content-height`\n   *\n   * - Otherwise, the following variables are set on the target itself and\n   *   represent its visible size:\n   *   - `--lisn-js--border-width`\n   *   - `--lisn-js--border-height`\n   *   - `--lisn-js--content-width`\n   *   - `--lisn-js--content-height`\n   *\n   * If `target` is `document`, then it will use `document.documentElement`.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly trackSize: (\n    handler?: OnResizeHandler | null,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackSize}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackSize: (\n    handler?: OnResizeHandler | null,\n    target?: SizeTarget,\n  ) => void;\n\n  /**\n   * Get the size of the given target. It will get the size from a\n   * ResizeObserverEntry and so it's always delayed by one frame at least.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly fetchCurrentSize: (target?: SizeTarget) => Promise<SizeData>;\n\n  /**\n   * Creates a new instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: SizeWatcherConfig = {}) {\n    return new SizeWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: SizeWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new SizeWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: SizeWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"SizeWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"SizeWatcher\", logAtCreation: config })\n      : null;\n\n    const allSizeData = MH.newWeakMap<Element, SizeData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnResizeHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    // Don't debounce the observer, only callbacks.\n    const xObserver = new XResizeObserver(resizeHandler);\n\n    // ----------\n\n    const fetchCurrentSize = async (\n      target: SizeTarget | undefined,\n    ): Promise<SizeData> => {\n      const element = await fetchElement(target);\n      const sizeData = allSizeData.get(element);\n      if (sizeData) {\n        return MH.copyObject(sizeData);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp ResizeObserver\n        const observer = MH.newResizeObserver((entries) => {\n          const sizeData = getSizeData(entries[0]);\n          observer?.disconnect();\n          resolve(sizeData); // no need to copy or save it\n        });\n\n        if (observer) {\n          observer.observe(element);\n        } else {\n          // Warning would have already been logged by XResizeObserver\n          resolve({\n            border: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n            content: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n          });\n        }\n      });\n    };\n\n    // ----------\n\n    const fetchOptions = async (\n      options: OnResizeOptions,\n    ): Promise<OnResizeOptionsInternal> => {\n      const box = options.box ?? null;\n      if (box && !isValidBox(box)) {\n        throw MH.usageError(`Unknown box type: '${box}'`);\n      }\n\n      const dimension = options.dimension ?? null;\n      if (dimension && !isValidDimension(dimension)) {\n        throw MH.usageError(`Unknown dimension: '${dimension}'`);\n      }\n\n      return {\n        _element: await fetchElement(MH.targetOf(options)),\n        _box: box,\n        _dimension: dimension,\n        // If threshold is 0, internally treat as 1 (pixel)\n        _threshold:\n          toNonNegNum(options.threshold, config._resizeThreshold) || 1,\n        _debounceWindow:\n          options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n      };\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = { _callback: callback, _options: options };\n      allCallbacks.sGet(element).set(handler, entry);\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnResize = async (\n      handler: OnResizeHandler,\n      userOptions: OnResizeOptions | undefined,\n    ) => {\n      const options = await fetchOptions(userOptions || {});\n      const element = options._element;\n\n      // Don't await for the size data before creating the callback so that\n      // setupOnResize and removeOnResize have the same \"timing\" and therefore\n      // calling onResize and offResize immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options);\n      const callback = entry._callback;\n      const sizeData = await fetchCurrentSize(element);\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = sizeData;\n      allSizeData.set(element, sizeData);\n\n      // Always use observeLater. This is because the initial call to callback\n      // shouldn't be debounced, and so we call it manually here, regardless if\n      // it's a new target or not. Therefore we don't want the observer to also\n      // call it in case it _is_ a new target.\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, sizeData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, sizeData);\n      }\n    };\n\n    // ----------\n\n    const removeOnResize = async (\n      handler: OnResizeHandler,\n      target: SizeTarget | undefined,\n    ) => {\n      const options = await fetchOptions({ target });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setSizeCssProps) {\n          // delete the properties\n          setSizeCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ) => {\n      const element = options._element;\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n        xObserver.unobserve(element);\n        MH.deleteKey(allSizeData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = (entry: ResizeObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      const latestData = getSizeData(entry);\n      allSizeData.set(element, latestData);\n\n      debug: logger?.debug9(\"New size data\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        const thresholdsExceeded = hasExceededThreshold(\n          entry._options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\"Threshold not exceeded\");\n          continue;\n        }\n\n        entry._data = latestData;\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentSize = fetchCurrentSize;\n\n    // ----------\n\n    this.trackSize = async (handler?, options?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      return setupOnResize(handler, options);\n    };\n\n    // ----------\n\n    this.noTrackSize = (handler?, target?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      removeOnResize(handler, target); // no need to await\n    };\n\n    // ----------\n\n    this.onResize = setupOnResize;\n\n    // ----------\n\n    this.offResize = (handler, target?) => {\n      removeOnResize(handler, target); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type SizeWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnResizeOptions.debounceWindow | debounceWindow} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnResizeOptions.threshold | threshold} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 50\n   */\n  resizeThreshold?: number;\n};\n\n/**\n * @interface\n */\nexport type OnResizeOptions = {\n  /**\n   * If it is not given, or is `null` or `window`, then it will track the size\n   * of the viewport (akin to `clientHeight` on `documentElement`).\n   *\n   * If it is `document`, then it will use `document.documentElement`.\n   *\n   * Other values of target must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  target?: SizeTarget;\n\n  /**\n   * Specifies whether to listen for changes in content box size or border box\n   * size.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  box?: Box;\n\n  /**\n   * Specifies whether to listen for changes in width or height.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  dimension?: Dimension;\n\n  /**\n   * If non-0, the handler will only be called when the target's size in the\n   * observed {@link OnResizeOptions.dimension} and {@link OnResizeOptions.box}\n   * type has changed at least `threshold` pixels since the last time the\n   * handler was called.\n   *\n   * Special case when `threshold` is 0 and at least one of\n   * {@link OnResizeOptions.dimension} or {@link OnResizeOptions.box} is given:\n   * if there's a resize event but the size in the observed dimensions/box\n   * types has not changed, the callback is _not_ called.\n   *\n   * @defaultValue {@link SizeWatcherConfig.resizeThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * @defaultValue {@link SizeWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * The handler is invoked with three arguments:\n *\n * - the element that has been resized: if the target you requested was the\n *   viewport, then this will be a fixed positioned overlay that tracks the\n *   size of the viewport\n * - the {@link SizeData} for the element\n */\nexport type OnResizeHandlerArgs = [Element, SizeData];\nexport type OnResizeCallback = Callback<OnResizeHandlerArgs>;\nexport type OnResizeHandler =\n  | CallbackHandler<OnResizeHandlerArgs>\n  | OnResizeCallback;\n\nexport type SizeData = Record<Box, Size>;\n\n// ----------------------------------------\n\ntype SizeWatcherConfigInternal = {\n  _debounceWindow: number;\n  _resizeThreshold: number;\n};\n\ntype OnResizeOptionsInternal = {\n  _element: Element;\n  _box: Box | null;\n  _dimension: Dimension | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnResizeCallback;\n  _options: OnResizeOptionsInternal;\n  _data?: SizeData;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, SizeWatcher>();\n\nconst getConfig = (config: SizeWatcherConfig): SizeWatcherConfigInternal => {\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _resizeThreshold: toNonNegNum(config.resizeThreshold, 50) || 1,\n  };\n};\n\n// --------------------\n\nconst hasExceededThreshold = (\n  options: OnResizeOptionsInternal,\n  latestData: SizeData,\n  lastThresholdData: SizeData | undefined,\n): boolean => {\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  let box: Box, dim: Dimension;\n  for (box in latestData) {\n    if (options._box && options._box !== box) {\n      continue;\n    }\n\n    for (dim in latestData[box]) {\n      if (options._dimension && options._dimension !== dim) {\n        continue;\n      }\n\n      const diff = MH.abs(latestData[box][dim] - lastThresholdData[box][dim]);\n      if (diff >= options._threshold) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nconst getSizeData = (entry: ResizeObserverEntry): SizeData => {\n  const borderBox = getEntryBorderBox(entry, true);\n  const contentBox = getEntryContentBox(entry);\n\n  return {\n    border: borderBox,\n    content: contentBox,\n  };\n};\n\nconst setSizeCssProps = (\n  element: Element,\n  sizeData: SizeData | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetViewportOverlay()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"window-\";\n  }\n\n  const props = {\n    borderWidth: sizeData?.border[MC.S_WIDTH],\n    borderHeight: sizeData?.border[MC.S_HEIGHT],\n    contentWidth: sizeData?.content[MC.S_WIDTH],\n    contentHeight: sizeData?.content[MC.S_HEIGHT],\n  };\n  setNumericStyleProps(element, props, { _prefix: prefix }); // don't await here\n};\n\nconst fetchElement = async (\n  target: SizeTarget | undefined,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  }\n\n  if (!target || target === MH.getWindow()) {\n    return fetchViewportOverlay();\n  }\n\n  if (target === MH.getDoc()) {\n    return MH.getDocElement();\n  }\n\n  throw MH.usageError(\"Unsupported resize target\");\n};\n\nconst invokeCallback = (\n  callback: OnResizeCallback,\n  element: Element,\n  sizeData: SizeData,\n) => callback.invoke(element, MH.copyObject(sizeData)).catch(logError);\n","/**\n * @module Watchers/LayoutWatcher\n */\n\n// NOTES FOR DEVELOPERS\n//\n// For each layout (device or aspect ratio), we create an overlay that has a\n// a width that corresponds to the layout:\n//  - for device layouts, it's a fixed width in pixels, equal to the minimum\n//    width of the device\n//  - for aspect ratio layouts, the overlay has a width that's relative to\n//    the root's height, equal to the minimum width of the aspect ratio\n//\n// Then we observe each overlay with an IntersectionObserver whose root\n// is this Watcher's root and whose root margin is -100% from the left (i.e.\n// right-most edge of the root).\n//\n// If the root is null, i.e. the viewport, the overlays will have a \"fixed\"\n// position and be inserted in document.body. Otherwise, they'll be inserted\n// in the root element with an \"absolute\" position. The root element, if not\n// body must be positioned. It gets a default position of \"relative\" through\n// the class `.lisn-overlay-container`, which Overlays ensures it gets.\n//\n// If using custom root we track its size through SizeWatcher as the\n// aspectRatio overlays are relative to the height, and we can't rely on CSS\n// alone as the root may not have a fixed height through CSS.\n//\n// Whenever any overlay intersects the root, this means that the viewport\n// width is now equal to or narrower than the overlay.\n//\n// ~~~~ The current device or aspect ratio corresponds to the _widest_\n// ~~~~ overlay that does not intersect.\n//\n// For example:\n//\n// | mobile\n// ========| mobile-wide\n// ======================| tablet\n// =========================================| desktop\n//\n// _________________________________| viewport width\n//\n// Here, mobile, mobile-wide and tablet overlays are _not_ intersecting, only\n// desktop intersects. The device layout is therefore tablet.\n//\n// Therefore:\n// - have the layout bit spaces ordered from narrowest layout at lowest bit\n//   to widest layout at hightest bit\n// - keep a running bitmask of which overlays are not intersecting and update\n//   it each time there is an IntersectionObserverEntry.\n// - get the highest device or aspect ratio bit in that bitmask to find out\n//   the widest non-intersecting overlay\n//\n// For simplicity we create overlays also for layouts that have a 0-width.\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  Layout,\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport {\n  getLayoutBitmask,\n  NUM_LAYOUTS,\n  ORDERED_DEVICES,\n  ORDERED_ASPECTR,\n} from \"@lisn/utils/layout\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { omitKeys, copyExistingKeys } from \"@lisn/utils/misc\";\nimport { createOverlay } from \"@lisn/utils/overlays\";\nimport { objToStrKey } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link LayoutWatcher} listens for changes in either the width or aspect\n * ratio of the viewport or the given {@link LayoutWatcherConfig.root | root}.\n *\n * It does not track resize events; rather it's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class LayoutWatcher {\n  /**\n   * Call the given handler whenever the layout changes.\n   *\n   * Unless {@link OnLayoutOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current layout.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times, even if\n   * the options differ. If the handler has already been added, it is removed\n   * and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onLayout: (\n    handler: OnLayoutHandler,\n    options?: OnLayoutOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offLayout: (handler: OnLayoutHandler) => void;\n\n  /**\n   * Get the current screen layout.\n   */\n  readonly fetchCurrentLayout: () => Promise<LayoutData>;\n\n  /**\n   * Creates a new instance of LayoutWatcher with the given\n   * {@link LayoutWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: LayoutWatcherConfig = {}) {\n    return new LayoutWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of LayoutWatcher with the given\n   * {@link LayoutWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: LayoutWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new LayoutWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: LayoutWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"LayoutWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"LayoutWatcher\", logAtCreation: config })\n      : null;\n    let nonIntersectingBitmask = 0;\n    let currentLayoutData: LayoutData = {\n      device: null,\n      aspectRatio: null,\n    };\n\n    const allCallbacks = MH.newMap<\n      OnLayoutHandler,\n      {\n        _callback: OnLayoutCallback;\n        _layoutBitmask: number;\n      }\n    >();\n\n    // ----------\n\n    const fetchCurrentLayout = async (): Promise<LayoutData> => {\n      await readyPromise;\n\n      return MH.copyObject(currentLayoutData);\n    };\n\n    // ----------\n\n    const setupOverlays = async () => {\n      const { root, overlays } = await createOverlays(\n        config._root,\n        config._deviceBreakpoints,\n        config._aspectRatioBreakpoints,\n      );\n\n      return MH.newPromise<void>((resolve) => {\n        let isReady = false;\n\n        const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n          const numEntries = MH.lengthOf(entries);\n          debug: logger?.debug9(`Got ${numEntries} new entries`, entries);\n\n          if (!isReady) {\n            /* istanbul ignore next */ // shouldn't happen\n            if (numEntries < NUM_LAYOUTS) {\n              logWarn(\n                MH.bugError(\n                  `Got IntersectionObserver ${numEntries}, ` +\n                    `expected >= ${NUM_LAYOUTS}`,\n                ),\n              );\n            }\n          }\n\n          for (const entry of entries) {\n            nonIntersectingBitmask = getNonIntersecting(\n              nonIntersectingBitmask,\n              entry,\n            );\n          }\n\n          // If this is the initial call from IntersectionObserver, skip callbacks.\n          // Those that have skipInitial: false would be called elsewhere, by\n          // setupOnLayout\n          processLayoutChange(!isReady);\n          isReady = true;\n          resolve(); // ready after IntersectionObserver has called us the 1st time\n        };\n\n        // ----------\n\n        const observeOptions = {\n          root,\n          rootMargin: \"5px 0% 5px -100%\",\n        };\n\n        const observer = MH.newIntersectionObserver(\n          intersectionHandler,\n          observeOptions,\n        );\n\n        for (const triggerOverlay of overlays) {\n          observer.observe(triggerOverlay);\n        }\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnLayoutHandler,\n      layoutBitmask: number,\n    ): OnLayoutCallback => {\n      MH.remove(allCallbacks.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", layoutBitmask);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler);\n      });\n\n      allCallbacks.set(handler, {\n        _callback: callback,\n        _layoutBitmask: layoutBitmask,\n      });\n      return callback;\n    };\n\n    const setupOnLayout = async (\n      handler: OnLayoutHandler,\n      options: OnLayoutOptions | undefined,\n    ) => {\n      const layoutBitmask = getLayoutBitmask(options);\n      const callback = createCallback(handler, layoutBitmask);\n\n      if (options?.skipInitial) {\n        return;\n      }\n\n      const layoutData = await fetchCurrentLayout();\n\n      if (\n        !callback.isRemoved() &&\n        changeMatches(layoutBitmask, layoutData, null)\n      ) {\n        debug: logger?.debug5(\"Calling initially with\", layoutData);\n        await invokeCallback(callback, layoutData);\n      }\n    };\n\n    const deleteHandler = (handler: OnLayoutHandler) => {\n      MH.deleteKey(allCallbacks, handler);\n      // no need to unobserve the overlays\n    };\n\n    const processLayoutChange = (skipCallbacks: boolean) => {\n      const deviceBit = MH.floor(\n        MH.log2(nonIntersectingBitmask & ORDERED_DEVICES.bitmask),\n      );\n\n      const aspectRatioBit = MH.floor(\n        MH.log2(nonIntersectingBitmask & ORDERED_ASPECTR.bitmask),\n      );\n\n      const layoutData: LayoutData = { device: null, aspectRatio: null };\n\n      // -Infinity means all of the overlays are intersecting, which would only\n      // happen if the narrowest overlay is not actually 0-width (which is not the\n      // case by default and against the recommended settings).\n      if (deviceBit !== -MC.INFINITY) {\n        layoutData.device = ORDERED_DEVICES.nameOf(1 << deviceBit);\n      }\n      if (aspectRatioBit !== -MC.INFINITY) {\n        layoutData.aspectRatio = ORDERED_ASPECTR.nameOf(1 << aspectRatioBit);\n      }\n\n      debug: logger?.debug8(\"New layout\", layoutData);\n\n      if (!skipCallbacks) {\n        for (const entry of allCallbacks.values()) {\n          const layoutBitmask = entry._layoutBitmask;\n          if (!changeMatches(layoutBitmask, layoutData, currentLayoutData)) {\n            debug: logger?.debug9(\n              `Layout change does not match bitmask ${layoutBitmask}`,\n            );\n            continue;\n          }\n\n          invokeCallback(entry._callback, layoutData);\n        }\n      }\n\n      currentLayoutData = layoutData;\n    };\n\n    const readyPromise = setupOverlays(); // no need to await\n\n    // ----------\n\n    this.fetchCurrentLayout = fetchCurrentLayout;\n\n    // ----------\n\n    this.onLayout = setupOnLayout;\n\n    // ----------\n\n    this.offLayout = (handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type LayoutWatcherConfig = {\n  /**\n   * The root element whose layout to watch. If not given or `null`, then the\n   * viewport layout is watched.\n   *\n   * @defaultValue null\n   */\n  root?: HTMLElement | null;\n\n  /**\n   * Use custom device breakpoints. Only known device names ({@link Device})\n   * are supported. If any are missing from the given dictionary, the value\n   * from {@link settings.deviceBreakpoints} is used.\n   *\n   * @defaultValue {@link settings.deviceBreakpoints}\n   */\n  deviceBreakpoints?: typeof settings.deviceBreakpoints;\n\n  /**\n   * Use custom aspect ratio breakpoints. Only known aspect ratio names\n   * ({@link AspectRatio}) are supported. If any are missing from the given\n   * dictionary, the value from {@link settings.aspectRatioBreakpoints} is\n   * used.\n   *\n   * @defaultValue {@link settings.aspectRatioBreakpoints}\n   */\n  aspectRatioBreakpoints?: typeof settings.aspectRatioBreakpoints;\n};\n\n/**\n * @interface\n */\nexport type OnLayoutOptions = {\n  /**\n   * Specifies a list of {@link Device}s to target for.\n   *\n   * The handler will only be called if there is a change of device to a device\n   * matching the specification.\n   *\n   * It can be:\n   * - \"min <Device>\": devices at least as wide as `<Device>`\n   * - \"max <Device>\": devices at most as wide as `<Device>`\n   * - \"<DeviceMin> to <DeviceMax>\": devices at least as wide as `<DeviceMin>`\n   *                                 and at most as wide as `<DeviceMax>`\n   * - a comma-separated list of device names\n   * - an array of device names\n   *\n   * **NOTE**\n   *\n   * If only one of {@link devices} or {@link aspectRatios} is specified, the\n   * handler will only be called for matching changes of device or aspect ratio\n   * respectively.\n   *\n   * If neither is specified, the handler will be called for any change of layout\n   * (device or aspect ratio).\n   *\n   * Also note that an empty array is treated the same as not given, or `null`.\n   *\n   * @defaultValue undefined\n   */\n  devices?: DeviceSpec | Device[];\n\n  /**\n   * Specifies a list of {@link AspectRatio}s to target for.\n   *\n   * The handler will only be called if there is a change of aspect ratio to\n   * an aspect ratios matching the specification.\n   *\n   * It can be:\n   * - \"min <AspectRatio>\": aspect ratios at least as wide as `<AspectRatio>`\n   * - \"max <AspectRatio>\": aspect ratios at most as wide as `<AspectRatio>`\n   * - \"<AspectRatioMin> to <AspectRatioMax>\": aspect ratios at least as wide\n   *                        as `<AspectRatioMin>` and at most as wide as\n   *                        `<AspectRatioMax>`\n   * - a comma-separated list of aspect ratio names\n   * - an array of aspect ratio names\n   *\n   * **NOTE**\n   *\n   * If only one of {@link devices} or {@link aspectRatios} is specified, the\n   * handler will only be called for matching changes of device or aspect ratio\n   * respectively.\n   *\n   * If neither is specified, the handler will be called for any change of layout\n   * (device or aspect ratio).\n   *\n   * @defaultValue undefined\n   */\n  aspectRatios?: AspectRatioSpec | AspectRatio[];\n\n  /**\n   * Do not call the handler until there's a future change of layout.\n   *\n   * By default, we call the handler (almost) immediately with the current\n   * layout data if it matches the given {@link devices} and {@link aspectRatios}.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with one argument:\n *\n * - the current {@link LayoutData}\n */\nexport type OnLayoutHandlerArgs = [LayoutData];\nexport type OnLayoutCallback = Callback<OnLayoutHandlerArgs>;\nexport type OnLayoutHandler =\n  | CallbackHandler<OnLayoutHandlerArgs>\n  | OnLayoutCallback;\n\n/**\n * Note that {@link device} or {@link aspectRatio} would only be null if the\n * viewport is narrower than the narrowest device/aspect ratio. This would only\n * happen if the narrowest device/aspect ratio is _not_ 0-width (which is not\n * the case with the default breakpoints and is against the recommendation for\n * setting breakpoints.\n */\nexport type LayoutData = {\n  device: Device | null;\n  aspectRatio: AspectRatio | null;\n};\n\n// ----------------------------------------\n\ntype LayoutWatcherConfigInternal = {\n  _root: HTMLElement | null;\n  _deviceBreakpoints: typeof settings.deviceBreakpoints;\n  _aspectRatioBreakpoints: typeof settings.aspectRatioBreakpoints;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<HTMLElement | null, Map<string, LayoutWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst VAR_BORDER_HEIGHT = MH.prefixCssJsVar(\"border-height\");\nconst PREFIX_DEVICE = MH.prefixName(\"device\");\nconst PREFIX_ASPECTR = MH.prefixName(\"aspect-ratio\");\n\nconst getConfig = (\n  config: LayoutWatcherConfig | undefined,\n): LayoutWatcherConfigInternal => {\n  const deviceBreakpoints = MH.copyObject(settings.deviceBreakpoints);\n  if (config?.deviceBreakpoints) {\n    copyExistingKeys(config.deviceBreakpoints, deviceBreakpoints);\n  }\n\n  const aspectRatioBreakpoints = MH.copyObject(settings.aspectRatioBreakpoints);\n\n  if (config?.aspectRatioBreakpoints) {\n    copyExistingKeys(config.aspectRatioBreakpoints, aspectRatioBreakpoints);\n  }\n\n  return {\n    _root: config?.root || null,\n    _deviceBreakpoints: deviceBreakpoints,\n    _aspectRatioBreakpoints: aspectRatioBreakpoints,\n  };\n};\n\n// ----------------------------------------\n\nconst createOverlays = async (\n  root: HTMLElement | null,\n  deviceBreakpoints: typeof settings.deviceBreakpoints,\n  aspectRatioBreakpoints: typeof settings.aspectRatioBreakpoints,\n) => {\n  const overlayPromises = [];\n\n  let overlayParent: HTMLElement;\n  if (root) {\n    overlayParent = root;\n  } else {\n    // Since modals remove the scrollbar on the body when active, the width of\n    // the body changes upon open/close of a modal, which would create\n    // glitching if it happens near a device breakpoint. So if the root is the\n    // viewport, we create a fixed positioned container to hold the overlays\n    // and set its width to be 100vw and use that as the root of\n    overlayParent = await createOverlay({\n      style: {\n        position: \"fixed\",\n        [MC.S_WIDTH]: \"100vw\",\n      },\n    });\n  }\n\n  let device: Device;\n  for (device in deviceBreakpoints) {\n    overlayPromises.push(\n      createOverlay({\n        parent: overlayParent,\n        style: {\n          position: \"absolute\",\n          [MC.S_WIDTH]: deviceBreakpoints[device] + \"px\",\n        },\n        data: {\n          [PREFIX_DEVICE]: device,\n        },\n      }),\n    );\n  }\n\n  const parentHeightCss = root ? `var(${VAR_BORDER_HEIGHT}, 0) * 1px` : \"100vh\";\n  if (root) {\n    SizeWatcher.reuse().trackSize(null, { target: root });\n  }\n\n  let aspectRatio: AspectRatio;\n  for (aspectRatio in aspectRatioBreakpoints) {\n    overlayPromises.push(\n      createOverlay({\n        parent: overlayParent,\n        style: {\n          position: \"absolute\",\n          [MC.S_WIDTH]:\n            `calc(${aspectRatioBreakpoints[aspectRatio]} ` +\n            `* ${parentHeightCss})`,\n        },\n        data: {\n          [PREFIX_ASPECTR]: aspectRatio,\n        },\n      }),\n    );\n  }\n\n  const overlays = await MH.promiseAll(overlayPromises);\n  return { root: overlayParent, overlays };\n};\n\nconst getOverlayLayout = (overlay: HTMLElement): Layout | null => {\n  const layout =\n    getData(overlay, PREFIX_DEVICE) || getData(overlay, PREFIX_ASPECTR);\n  /* istanbul ignore else */\n  if (layout && (ORDERED_DEVICES.has(layout) || ORDERED_ASPECTR.has(layout))) {\n    return layout;\n  } else {\n    // shouldn't happen\n    logError(MH.bugError(\"No device or aspectRatio data attribute\"));\n    return null;\n  }\n};\n\nconst changeMatches = (\n  layoutBitmask: number,\n  thisLayoutData: LayoutData,\n  prevLayoutData: LayoutData | undefined | null,\n): boolean => {\n  // True if the callback is interested in a change of device and there's a\n  // change of device and the new device is one of the ones it's interested in\n  // (or it's null, i.e. device is undefined).\n  // And the same for aspect ratios.\n\n  if (\n    prevLayoutData?.device !== thisLayoutData.device &&\n    (!thisLayoutData.device ||\n      ORDERED_DEVICES.bit[thisLayoutData.device] & layoutBitmask)\n  ) {\n    return true;\n  }\n\n  if (\n    prevLayoutData?.aspectRatio !== thisLayoutData.aspectRatio &&\n    (!thisLayoutData.aspectRatio ||\n      ORDERED_ASPECTR.bit[thisLayoutData.aspectRatio] & layoutBitmask)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nconst getNonIntersecting = (\n  nonIntersectingBitmask: number, // current\n  entry: IntersectionObserverEntry,\n): number => {\n  const target = MH.targetOf(entry);\n  /* istanbul ignore next */ // shouldn't happen\n  if (!MH.isHTMLElement(target)) {\n    logError(\n      MH.bugError(\n        `IntersectionObserver called us with '${MH.typeOrClassOf(target)}'`,\n      ),\n    );\n    return nonIntersectingBitmask;\n  }\n\n  const layout = getOverlayLayout(target);\n  let bit = 0;\n  if (!layout) {\n    // error already logged by getOverlayLayout\n  } else if (ORDERED_DEVICES.has(layout)) {\n    bit = ORDERED_DEVICES.bit[layout];\n  } else if (ORDERED_ASPECTR.has(layout)) {\n    bit = ORDERED_ASPECTR.bit[layout];\n  } else {\n    /* istanbul ignore next */ // shouldn't happen\n    logError(\n      MH.bugError(`Unknown device or aspectRatio data attribute: ${layout}`),\n    );\n  }\n\n  if (entry.isIntersecting) {\n    nonIntersectingBitmask &= ~bit;\n  } else {\n    nonIntersectingBitmask |= bit;\n  }\n\n  return nonIntersectingBitmask;\n};\n\nconst invokeCallback = (callback: OnLayoutCallback, layoutData: LayoutData) =>\n  callback.invoke(MH.copyObject(layoutData)).catch(logError);\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { PointerAction } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * Returns true if the given string is a valid pointer action.\n *\n * @category Validation\n */\nexport const isValidPointerAction = (action: string): action is PointerAction =>\n  MH.includes(POINTER_ACTIONS, action);\n\n/**\n * Returns true if the given string or array is a valid list of pointer\n * actions.\n *\n * @category Validation\n */\nexport const isValidPointerActionList = (actions: string | string[]) =>\n  isValidStrList(actions, isValidPointerAction, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const POINTER_ACTIONS: PointerAction[] = [\n  MC.S_CLICK,\n  MC.S_HOVER,\n  MC.S_PRESS,\n] as const;\n","/**\n * @module Watchers/PointerWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { PointerAction, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { isValidPointerAction, POINTER_ACTIONS } from \"@lisn/utils/pointer\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * {@link PointerWatcher} listens for simple pointer actions like clicks, press\n * and hold or hover.\n */\nexport class PointerWatcher {\n  /**\n   * Call the `startHandler` whenever the pointer action begins.\n   * Call the `endHandler` whenever the pointer action ends. If `endHandler` is\n   * not given, it defaults to `startHandler`.\n   *\n   * For an explanation of what \"begins\" and \"ends\" means for each supported\n   * action, see {@link OnPointerOptions.actions}.\n   *\n   * **IMPORTANT:** The same handlers can _not_ be added multiple times for the\n   * same event target, even if the options differ. If the handler has already\n   * been added for this target, then it will be removed and re-added with the\n   * current options.\n   */\n  readonly onPointer: (\n    target: EventTarget,\n    startHandler: OnPointerHandler,\n    endHandler?: OnPointerHandler,\n    options?: OnPointerOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes previously added handlers.\n   */\n  readonly offPointer: (\n    target: EventTarget,\n    startHandler: OnPointerHandler,\n    endHandler?: OnPointerHandler,\n  ) => void;\n\n  /**\n   * Creates a new instance of PointerWatcher with the given\n   * {@link PointerWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: PointerWatcherConfig = {}) {\n    return new PointerWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of PointerWatcher with the given\n   * {@link PointerWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: PointerWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new PointerWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: PointerWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"PointerWatcher.create\");\n    }\n\n    // Keep this watcher super simple. The events we listen for don't fire at a\n    // high rate and it's unlikely for there to be many many callbacks for each\n    // target and event type, so don't bother with using a delegating listener,\n    // etc.\n\n    // Keep a map of callbacks so we can lookup the callback by the handler\n    // (and also to prevent duplicate handler for each target, for consistency\n    // with other watchers).\n    const allCallbacks = newXWeakMap<\n      EventTarget,\n      Map<OnPointerHandler, OnPointerCallback>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const createCallback = (\n      target: EventTarget,\n      handler: OnPointerHandler,\n    ): OnPointerCallback => {\n      MH.remove(allCallbacks.get(target)?.get(handler));\n\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        MH.deleteKey(allCallbacks.get(target), handler);\n      });\n\n      allCallbacks.sGet(target).set(handler, callback);\n      return callback;\n    };\n\n    // async for consistency with other watchers and future compatibility in\n    // case of change needed\n    const setupOnPointer = async (\n      target: EventTarget,\n      startHandler: OnPointerHandler,\n      endHandler: OnPointerHandler | undefined,\n      userOptions: OnPointerOptions | undefined,\n    ) => {\n      const options = getOptions(config, userOptions);\n      const startCallback = createCallback(target, startHandler);\n      const endCallback =\n        endHandler && endHandler !== startHandler\n          ? createCallback(target, endHandler)\n          : startCallback;\n\n      for (const action of options._actions) {\n        listenerSetupFn[action](target, startCallback, endCallback, options);\n      }\n    };\n\n    // ----------\n\n    this.onPointer = setupOnPointer;\n\n    // ----------\n\n    this.offPointer = (target, startHandler, endHandler?) => {\n      const entry = allCallbacks.get(target);\n      MH.remove(entry?.get(startHandler));\n      if (endHandler) {\n        MH.remove(entry?.get(endHandler));\n      }\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type PointerWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnPointerOptions.preventDefault | preventDefault} in calls to\n   * {@link PointerWatcher.onPointer}.\n   *\n   * @defaultValue false\n   */\n  preventDefault?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnPointerOptions.preventSelect | preventSelect} in calls to\n   * {@link PointerWatcher.onPointer}.\n   *\n   * @defaultValue true\n   */\n  preventSelect?: boolean;\n};\n\n/**\n * @interface\n */\nexport type OnPointerOptions = {\n  /**\n   * One or more of of \"click\", \"hover\" or \"press\". If not specified, then all\n   * actions are enabled.\n   *\n   * It can be a comma-separated list of {@link PointerAction}s or an array of\n   * such actions.\n   *\n   * For click actions, the start handler is called for every odd number of\n   * clicks (1st, 3rd, 5th, etc), and the end handler is called for every other\n   * click. It functions like a toggle.\n   *\n   * For hover and press actions, the start handler is called when the pointer\n   * enters or presses down on the target respectively, and the end handler is\n   * called when the pointer leaves or comes off the target respectively.\n   *\n   * Note that on touch screens, hover and press actions behave identically.\n   *\n   * @defaultValue undefined\n   */\n  actions?: CommaSeparatedStr<PointerAction> | PointerAction[];\n\n  /**\n   * If true, the events of the pointer actions, e.g. click, will have their\n   * default action prevented.\n   *\n   * @defaultValue {@link PointerWatcherConfig.preventDefault}\n   */\n  preventDefault?: boolean;\n\n  /**\n   * If true (default), then for press actions (and hover actions on touch\n   * screens) it will prevent starting a text selection.\n   *\n   * @defaultValue {@link PointerWatcherConfig.preventSelect}\n   */\n  preventSelect?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the event target that was passed to the {@link PointerWatcher.onPointer}\n *   call (equivalent to\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget | Event:currentTarget}).\n * - the {@link PointerActionData} describing the state of the action.\n */\nexport type OnPointerHandlerArgs = [EventTarget, PointerActionData, Event];\nexport type OnPointerCallback = Callback<OnPointerHandlerArgs>;\nexport type OnPointerHandler =\n  | CallbackHandler<OnPointerHandlerArgs>\n  | OnPointerCallback;\n\nexport type PointerActionData = {\n  action: PointerAction;\n  state: \"ON\" | \"OFF\";\n};\n\n// ----------------------------------------\n\ntype PointerWatcherConfigInternal = {\n  _preventDefault: boolean;\n  _preventSelect: boolean;\n};\n\ntype OnPointerOptionsInternal = {\n  _actions: PointerAction[];\n  _preventDefault: boolean;\n  _preventSelect: boolean;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, PointerWatcher>();\n\nconst getConfig = (\n  config: PointerWatcherConfig | undefined,\n): PointerWatcherConfigInternal => {\n  return {\n    _preventDefault: config?.preventDefault ?? false,\n    _preventSelect: config?.preventSelect ?? true,\n  };\n};\n\nconst getOptions = (\n  config: PointerWatcherConfigInternal,\n  options: OnPointerOptions | undefined,\n): OnPointerOptionsInternal => {\n  return {\n    _actions:\n      validateStrList(\"actions\", options?.actions, isValidPointerAction) ||\n      POINTER_ACTIONS,\n    _preventDefault: options?.preventDefault ?? config._preventDefault,\n    _preventSelect: options?.preventSelect ?? config._preventSelect,\n  };\n};\n\nconst setupClickListener = (\n  target: EventTarget,\n  startCallback: OnPointerCallback,\n  endCallback: OnPointerCallback,\n  options: OnPointerOptionsInternal,\n) => {\n  // false if next will start; true if next will end.\n  let toggleState = false;\n\n  const wrapper = (event: Event) => {\n    if (options._preventDefault) {\n      MH.preventDefault(event);\n    }\n\n    toggleState = !toggleState;\n\n    const data: PointerActionData = {\n      action: MC.S_CLICK,\n      state: toggleState ? \"ON\" : \"OFF\",\n    };\n\n    invokeCallback(\n      toggleState ? startCallback : endCallback,\n      target,\n      data,\n      event,\n    );\n  };\n\n  addEventListenerTo(target, MC.S_CLICK, wrapper);\n\n  const remove = () => removeEventListenerFrom(target, MC.S_CLICK, wrapper);\n\n  startCallback.onRemove(remove);\n  endCallback.onRemove(remove);\n};\n\nconst setupPointerListeners = (\n  action: typeof MC.S_HOVER | typeof MC.S_PRESS,\n  target: EventTarget,\n  startCallback: OnPointerCallback,\n  endCallback: OnPointerCallback,\n  options: OnPointerOptionsInternal,\n) => {\n  // If the browser doesn't support pointer events, then\n  // addEventListenerTo will transform these into mouse*\n  const startEventSuff = action === MC.S_HOVER ? \"enter\" : \"down\";\n  const endEventSuff = action === MC.S_HOVER ? \"leave\" : \"up\";\n  const startEvent = MC.S_POINTER + startEventSuff;\n  const endEvent = MC.S_POINTER + endEventSuff;\n\n  const wrapper = (event: Event, callback: OnPointerCallback) => {\n    if (options._preventDefault) {\n      MH.preventDefault(event);\n    }\n\n    const data: PointerActionData = {\n      action,\n      state:\n        MH.strReplace(event.type, /pointer|mouse/, \"\") === startEventSuff\n          ? \"ON\"\n          : \"OFF\",\n    };\n\n    invokeCallback(callback, target, data, event);\n  };\n  const startListener = (event: Event) => wrapper(event, startCallback);\n  const endListener = (event: Event) => wrapper(event, endCallback);\n\n  addEventListenerTo(target, startEvent, startListener);\n  addEventListenerTo(target, endEvent, endListener);\n\n  // On some touch screen devices pressing and holding will initiate select\n  // and result in touchend, so we prevent text select\n  if (options._preventSelect) {\n    preventSelect(target);\n  }\n\n  startCallback.onRemove(() => {\n    undoPreventSelect(target);\n    removeEventListenerFrom(target, startEvent, startListener);\n  });\n\n  endCallback.onRemove(() => {\n    undoPreventSelect(target);\n    removeEventListenerFrom(target, endEvent, endListener);\n  });\n};\n\nconst listenerSetupFn: {\n  [D in PointerAction]: (\n    target: EventTarget,\n    startCallback: OnPointerCallback,\n    endCallback: OnPointerCallback,\n    options: OnPointerOptionsInternal,\n  ) => void;\n} = {\n  click: setupClickListener,\n  hover: (...args) => setupPointerListeners(MC.S_HOVER, ...args),\n  press: (...args) => setupPointerListeners(MC.S_PRESS, ...args),\n} as const;\n\nconst invokeCallback = (\n  callback: OnPointerCallback,\n  target: EventTarget,\n  actionData: PointerActionData,\n  event: Event,\n) => callback.invoke(target, MH.copyObject(actionData), event).catch(logError);\n","/**\n * @module Watchers/ScrollWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { XYDirection, ScrollDirection, SizeTarget } from \"@lisn/globals/types\";\n\nimport {\n  ScrollTarget,\n  TargetCoordinate,\n  TargetCoordinates,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { getData, setNumericStyleProps } from \"@lisn/utils/css-alter\";\nimport { getMaxDeltaDirection } from \"@lisn/utils/directions\";\nimport { moveElement, wrapScrollingContent } from \"@lisn/utils/dom-alter\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum, maxAbs } from \"@lisn/utils/math\";\nimport {\n  scrollTo,\n  getCurrentScrollAction,\n  getClientWidthNow,\n  getClientHeightNow,\n  tryGetMainScrollableElement,\n  fetchMainContentElement,\n  fetchMainScrollableElement,\n  fetchScrollableElement,\n  isValidScrollDirection,\n  ScrollAction,\n  ScrollToOptions,\n} from \"@lisn/utils/scroll\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { MutationOperation, DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n// re-export for convenience\nexport type { ScrollAction, ScrollToOptions } from \"@lisn/utils/scroll\";\n\n/**\n * {@link ScrollWatcher} listens for scroll events in any direction.\n *\n * It manages registered callbacks globally and reuses event listeners for more\n * efficient performance.\n */\nexport class ScrollWatcher {\n  /**\n   * Call the given handler whenever the given scrollable is scrolled.\n   *\n   * Unless {@link OnScrollOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest scroll data. If a scroll has\n   * not yet been observed on the scrollable and its `scrollTop` and\n   * `scrollLeft` are 0, then the direction is {@link Types.NoDirection} and\n   * the handler is only called if {@link Types.NoDirection} is part of the\n   * supplied {@link OnScrollOptions.directions | options.directions} (or\n   * {@link OnScrollOptions.directions | options.directions} is not given).\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking content size changes using\n   * {@link trackScroll}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onScroll: (\n    handler: OnScrollHandler,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly offScroll: (\n    handler: OnScrollHandler,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * This everything that {@link onScroll} does plus more:\n   *\n   * In addition to a scroll event, the handler is also called when either the\n   * offset size or scroll (content) size of the scrollable changes as that\n   * would affect its `scrollTopFraction` and `scrollLeftFraction` and possibly\n   * the `scrollTop` and `scrollLeft` as well.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates a set of CSS variables on the scrollable element's style:\n   *\n   * - If {@link OnScrollOptions.scrollable | options.scrollable} is not given,\n   *   or is `null`, `window` or `document`, the following CSS variables are\n   *   set on the root (`html`) element and represent the scroll of the\n   *   {@link fetchMainScrollableElement}:\n   *   - `--lisn-js--page-scroll-top`\n   *   - `--lisn-js--page-scroll-top-fraction`\n   *   - `--lisn-js--page-scroll-left`\n   *   - `--lisn-js--page-scroll-left-fraction`\n   *   - `--lisn-js--page-scroll-width`\n   *   - `--lisn-js--page-scroll-height`\n   *\n   * - Otherwise, the following variables are set on the scrollable itself,\n   *   and represent its scroll offset:\n   *   - `--lisn-js--scroll-top`\n   *   - `--lisn-js--scroll-top-fraction`\n   *   - `--lisn-js--scroll-left`\n   *   - `--lisn-js--scroll-left-fraction`\n   *   - `--lisn-js--scroll-width`\n   *   - `--lisn-js--scroll-height`\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly trackScroll: (\n    handler?: OnScrollHandler | null,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackScroll}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly noTrackScroll: (\n    handler?: OnScrollHandler | null,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * Get the scroll offset of the given scrollable. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param {} realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                    this only when doing realtime scroll-based animations\n   *                    as it may cause a forced layout.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScroll: (\n    scrollable?: ScrollTarget,\n    realtime?: boolean,\n  ) => Promise<ScrollData>;\n\n  /**\n   * Scrolls the given scrollable element to in the given direction.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the direction or options are invalid.\n   */\n  readonly scroll: (\n    direction: XYDirection,\n    options?: ScrollOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Scrolls the given scrollable element to the given `to` scrollable.\n   *\n   * Returns `null` if there's an ongoing scroll that is not cancellable.\n   *\n   * Note that if `to` is an element or a selector, then it _must_ be a\n   * descendant of the scrollable element.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the \"to\" coordinates or options are invalid.\n   *\n   * @param {} to  If this is an element, then its top-left position is used as\n   *               the target coordinates. If it is a string, then it is treated\n   *               as a selector for an element using `querySelector`.\n   * @param {} [options.scrollable]\n   *               If not given, it defaults to {@link fetchMainScrollableElement}\n   *\n   * @return {} `null` if there's an ongoing scroll that is not cancellable,\n   * otherwise a {@link ScrollAction}.\n   */\n  readonly scrollTo: (\n    to: TargetCoordinates | Element | string,\n    options?: ScrollToOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Returns the current {@link ScrollAction} if any.\n   *\n   * @param {} scrollable\n   *               If not given, it defaults to {@link fetchMainScrollableElement}\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScrollAction: (\n    scrollable?: Element,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Cancels the ongoing scroll that's resulting from smooth scrolling\n   * triggered in the past. Does not interrupt or prevent further scrolling.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   *\n   * @param {} [options.immediate]  If true, then it will not use\n   *                                {@link waitForMeasureTime} or\n   *                                {@link Utils.waitForMutateTime | waitForMutateTime}.\n   *                                Warning: this will likely result in forced layout.\n   */\n  readonly stopUserScrolling: (options?: {\n    scrollable?: ScrollTarget;\n    immediate?: boolean;\n  }) => Promise<void>;\n\n  /**\n   * Returns the element that holds the main page content. By default it's\n   * `document.body` but is overridden by\n   * {@link settings.mainScrollableElementSelector}.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainContentElement(): Promise<HTMLElement> {\n    return fetchMainContentElement();\n  }\n\n  /**\n   * Returns the scrollable element that holds the wrapper around the main page\n   * content. By default it's `document.scrollable` (unless `document.body` is\n   * actually scrollable, in which case it will be used) but it will be\n   * different if {@link settings.mainScrollableElementSelector} is set.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainScrollableElement(): Promise<HTMLElement> {\n    return fetchMainScrollableElement();\n  }\n\n  /**\n   * Creates a new instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: ScrollWatcherConfig = {}) {\n    return new ScrollWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: ScrollWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new ScrollWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ScrollWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ScrollWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ScrollWatcher\", logAtCreation: config })\n      : null;\n\n    const allScrollData = MH.newWeakMap<Element, ScrollData>();\n\n    const activeListeners = MH.newWeakMap<\n      ScrollTarget,\n      { _nRealtime: number }\n    >();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnScrollHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const fetchCurrentScroll = async (\n      element: Element,\n      realtime = false,\n      isScrollEvent = false,\n    ): Promise<ScrollData> => {\n      // The scroll data can change event without a scroll event, e.g. by the\n      // element changing size, so always get the latest here.\n      const previousEventData = allScrollData.get(element);\n      const latestData = await fetchScrollData(\n        element,\n        previousEventData,\n        realtime,\n      );\n\n      // If there hasn't been a scroll event, use the old scroll direction\n      if (!isScrollEvent && previousEventData) {\n        latestData.direction = previousEventData.direction;\n      }\n      return latestData;\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n      trackType: TrackType,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      };\n      allCallbacks.sGet(element).set(handler, entry);\n\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnScroll = async (\n      handler: OnScrollHandler,\n      userOptions: OnScrollOptions | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, userOptions || {});\n      const element = options._element;\n\n      // Don't await for the scroll data before creating the callback so that\n      // setupOnScroll and removeOnScroll have the same \"timing\" and therefore\n      // calling onScroll and offScroll immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options, trackType);\n      const callback = entry._callback;\n\n      const eventTarget = options._eventTarget;\n      const scrollData = await fetchCurrentScroll(\n        element,\n        options._debounceWindow === 0,\n      );\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = scrollData;\n      allScrollData.set(element, scrollData);\n\n      if (trackType === TRACK_FULL) {\n        await setupSizeTrack(entry);\n      }\n\n      let listenerOptions = activeListeners.get(eventTarget);\n      if (!listenerOptions) {\n        debug: logger?.debug4(\"Adding scroll listener\", eventTarget);\n        listenerOptions = { _nRealtime: 0 };\n        activeListeners.set(eventTarget, listenerOptions);\n        // Don't debounce the scroll handler, only the callbacks.\n        addEventListenerTo(eventTarget, MC.S_SCROLL, scrollHandler);\n      }\n\n      if (options._debounceWindow === 0) {\n        listenerOptions._nRealtime++;\n      }\n\n      const directions = options._directions;\n      if (\n        !callback.isRemoved() &&\n        !userOptions?.skipInitial &&\n        directionMatches(directions, scrollData.direction)\n      ) {\n        debug: logger?.debug5(\"Calling initially with\", element, scrollData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, scrollData);\n      }\n    };\n\n    // ----------\n\n    const removeOnScroll = async (\n      handler: OnScrollHandler,\n      scrollable: ScrollTarget | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, { scrollable });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setScrollCssProps) {\n          // delete the properties\n          setScrollCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n    ) => {\n      const element = options._element;\n      const eventTarget = options._eventTarget;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      const listenerOptions = activeListeners.get(eventTarget);\n      if (listenerOptions && options._debounceWindow === 0) {\n        listenerOptions._nRealtime--;\n      }\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for scrollable; removing listener\",\n          element,\n        );\n\n        MH.deleteKey(allScrollData, element);\n        removeEventListenerFrom(eventTarget, MC.S_SCROLL, scrollHandler);\n        MH.deleteKey(activeListeners, eventTarget);\n      }\n    };\n\n    // ----------\n\n    const setupSizeTrack = async (entry: CallbackEntry) => {\n      const options = entry._options;\n      const element = options._element;\n      const scrollCallback = entry._callback;\n      debug: logger?.debug8(\"Setting up size tracking\", element);\n\n      const doc = MH.getDoc();\n      const docScrollingElement = MH.getDocScrollingElement();\n\n      const resizeCallback = wrapCallback(async () => {\n        // Get the latest scroll data for the scrollable\n        // Currently, the resize callback is already delayed by a frame due to\n        // the SizeWatcher, so we don't need to treat this as realtime.\n        const latestData = await fetchCurrentScroll(element);\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n        } else if (!scrollCallback.isRemoved()) {\n          await invokeCallback(scrollCallback, element, latestData);\n        }\n      });\n\n      scrollCallback.onRemove(resizeCallback.remove);\n\n      // Don't use default instance as it has a high threshold.\n      const sizeWatcher = SizeWatcher.reuse();\n      const setupOnResize = (target?: SizeTarget) =>\n        sizeWatcher.onResize(resizeCallback, {\n          target,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          // TODO maybe accepts resizeThreshold option\n          threshold: options._threshold,\n        });\n\n      if (element === docScrollingElement) {\n        // In case we're tracking the main document scroll, then we only need to\n        // observe the viewport size and the size of the documentElement (which is\n        // the content size).\n\n        setupOnResize(); // viewport size\n        setupOnResize(doc); // content size\n\n        return;\n      }\n\n      // ResizeObserver only detects changes in offset width/height which is\n      // the visible size of the scrolling element, and that is not affected by the\n      // size of its content.\n      // But we also need to detect changes in the scroll width/height which is\n      // the size of the content.\n      // We also need to keep track of elements being added to the scrollable element.\n\n      const observedElements = MH.newSet<Element>([element]);\n\n      // Observe the scrolling element\n      setupOnResize(element);\n\n      // And also its children (if possible, single wrapper around children\n      const allowedToWrap =\n        settings.contentWrappingAllowed === true &&\n        element !== docScrollingElement &&\n        getData(element, MC.PREFIX_NO_WRAP) === null;\n\n      let wrapper: Element;\n      if (allowedToWrap) {\n        // Wrap the content and observe the wrapper\n        wrapper = await wrapScrollingContent(element);\n        setupOnResize(wrapper);\n        observedElements.add(wrapper);\n\n        //\n      } else {\n        for (const child of MH.childrenOf(element)) {\n          setupOnResize(child);\n          observedElements.add(child);\n        }\n      }\n\n      // Watch for newly added elements\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      const onAddedCallback = wrapCallback((operation: MutationOperation) => {\n        const child = MH.currentTargetOf(operation);\n        // If we've just added the wrapper, it will be in DOMWatcher's queue,\n        // so check.\n        if (child !== wrapper) {\n          if (allowedToWrap) {\n            // Move this child into the wrapper. If this results in change of size\n            // for wrapper, SizeWatcher will call us.\n            moveElement(child, { to: wrapper, ignoreMove: true });\n          } else {\n            // Track the size of this child.\n            // Don't skip initial, call the callback now\n            setupOnResize(child);\n            observedElements.add(child);\n          }\n        }\n      });\n\n      domWatcher.onMutation(onAddedCallback, { categories: [MC.S_ADDED] });\n      resizeCallback.onRemove(onAddedCallback.remove);\n    };\n\n    // ----------\n\n    const scrollHandler = async (event: Event) => {\n      // We cannot use event.currentTarget because scrollHandler is called inside\n      // a setTimeout so by that time, currentTarget is null or something else.\n      //\n      // However, target and currentTarget only differ when the event is in the\n      // bubbling or capturing phase. Because\n      //\n      // - the scroll event only bubbles when fired on document, and (it only\n      //   bubbles up to window)\n      // - and we never attach the listener to the capturing phase\n      // - and we always use document instead of window to listen for scroll on\n      //   document\n      //\n      // then event.target suffices.\n      const scrollable = MH.targetOf(event);\n      /* istanbul ignore next */\n      if (!scrollable || !(MH.isElement(scrollable) || MH.isDoc(scrollable))) {\n        return;\n      }\n\n      const element = await fetchScrollableElement(scrollable);\n      const realtime = (activeListeners.get(scrollable)?._nRealtime || 0) > 0;\n      const latestData = await fetchCurrentScroll(element, realtime, true);\n      allScrollData.set(element, latestData);\n\n      debug: logger?.debug9(\"Scroll event\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        // Consider the direction since the last scroll event and not the\n        // direction based on the largest delta the last time the callback\n        // was called.\n        const options = entry._options;\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n          continue;\n        }\n\n        // If threshold has been exceeded, always update the latest data for\n        // this callback.\n        entry._data = latestData;\n\n        if (!directionMatches(options._directions, latestData.direction)) {\n          debug: logger?.debug9(\n            \"Direction does not match\",\n            options,\n            latestData,\n          );\n          continue;\n        }\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentScroll = (scrollable?, realtime?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        fetchCurrentScroll(element, realtime),\n      );\n\n    // ----------\n\n    this.scroll = (direction, options = {}) => {\n      if (!isValidScrollDirection(direction)) {\n        throw MH.usageError(`Unknown scroll direction: '${direction}'`);\n      }\n\n      const isVertical = direction === MC.S_UP || direction === MC.S_DOWN;\n      const sign = direction === MC.S_UP || direction === MC.S_LEFT ? -1 : 1;\n      let targetCoordinate: TargetCoordinate;\n\n      const amount = options.amount ?? 100;\n      const asFractionOf = options.asFractionOf;\n\n      if (asFractionOf === \"visible\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * getClientHeightNow(el)) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * getClientWidthNow(el)) / 100;\n\n        //\n      } else if (asFractionOf === \"content\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * el[MC.S_SCROLL_HEIGHT]) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * el[MC.S_SCROLL_WIDTH]) / 100;\n\n        //\n      } else if (asFractionOf !== undefined && asFractionOf !== \"pixel\") {\n        throw MH.usageError(\n          `Unknown 'asFractionOf' keyword: '${asFractionOf}'`,\n        );\n\n        //\n      } else {\n        targetCoordinate = isVertical\n          ? (el) => el[MC.S_SCROLL_TOP] + sign * amount\n          : (el) => el[MC.S_SCROLL_LEFT] + sign * amount;\n      }\n\n      const target = isVertical\n        ? { top: targetCoordinate }\n        : { left: targetCoordinate };\n\n      return this.scrollTo(target, options);\n    };\n\n    // ----------\n\n    this.scrollTo = async (to, options = {}) =>\n      scrollTo(\n        to,\n        MH.merge(\n          { duration: config._scrollDuration }, // default\n          options,\n          {\n            scrollable: await fetchScrollableElement(options.scrollable),\n          }, // override\n        ),\n      );\n\n    // ----------\n\n    this.fetchCurrentScrollAction = (scrollable?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        getCurrentScrollAction(element),\n      );\n\n    // ----------\n\n    this.stopUserScrolling = async (options = {}) => {\n      const element = await fetchScrollableElement(options.scrollable);\n      const stopScroll = () =>\n        MH.elScrollTo(element, {\n          top: element[MC.S_SCROLL_TOP],\n          left: element[MC.S_SCROLL_LEFT],\n        });\n\n      if (options.immediate) {\n        stopScroll();\n      } else {\n        waitForMeasureTime().then(stopScroll);\n      }\n    };\n\n    // ----------\n\n    this.trackScroll = (handler?, options?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      return setupOnScroll(handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackScroll = (handler?, scrollable?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      removeOnScroll(handler, scrollable, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onScroll = (handler, options?) =>\n      setupOnScroll(handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offScroll = (handler, scrollable?) => {\n      removeOnScroll(handler, scrollable, TRACK_REGULAR); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type ScrollWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnScrollOptions.debounceWindow | debounceWindow} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnScrollOptions.threshold | threshold} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 50\n   */\n  scrollThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link ScrollOptions.duration | duration} in calls to\n   * {@link ScrollWatcher.scroll} and {@link ScrollWatcher.scrollTo}.\n   *\n   * @defaultValue 1000\n   */\n  scrollDuration?: number;\n};\n\n/**\n * @interface\n */\nexport type OnScrollOptions = {\n  /**\n   * If it is not given, or is `null`, `window` or `document`, then it will\n   * track the scroll of the {@link ScrollWatcher.fetchMainScrollableElement}.\n   *\n   * Other values must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  scrollable?: ScrollTarget;\n\n  /**\n   * If non-0, the scroll handler will only be called when the scrollable's\n   * scroll offset in the observed direction has changed at least\n   * `scrollThreshold` pixels since the last time the handler was called.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.scrollThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Specifies a list of {@link ScrollDirection}s to listen for.\n   *\n   * It can be a comma-separated list of direction names or an array of such\n   * names.\n   *\n   * If not given, then it listens for scrolls in any direction, including\n   * {@link Types.NoDirection} and {@link Types.AmbiguousDirection}.\n   *\n   * The {@link Types.NoDirection} occurs when the callback is called initially\n   * (if `skipInitial` is not `true`) and there hasn't yet been a scroll\n   * observed on the scrollable _and_ it's `scrollTop`/`scrollLeft` are 0.\n   *\n   * The {@link Types.AmbiguousDirection} occurs when the user scrolls\n   * diagonally with close to equal deltas in both horizontal and vertical\n   * direction.\n   *\n   * **IMPORTANT:**\n   *\n   * The direction of a scroll event is always based on comparing `deltaX` and\n   * `deltaY` relative to the _last scroll event_ (within the `debounceWindow`,\n   * and not to the scroll data for the last time the callback was called (in\n   * case it was skipped because `threshold` was not exceeded or in case it was\n   * debounced by a larger window than the watcher).\n   *\n   * I.e. if you have both `threshold` and `directions` restricted, or if the\n   * callback has a larger debounce window than the watcher, it is possible for\n   * there to be a change in the relevant `scrollTop`/`scrollLeft` offset that\n   * exceeds the threshold, and for the callback to _not_ be called.\n   *\n   * For a callback to be called, both of these must be true:\n   * - the change in `scrollTop`/`scrollLeft`, _compared to the last time the\n   *   callback was called_ must exceed the {@link threshold}\n   * - the effective scroll direction, _compared to the last scroll event_\n   *   prior to the _watcher's_ debounce window must be one of the given\n   *   {@link directions}.\n   *\n   * @defaultValue undefined\n   */\n  directions?: CommaSeparatedStr<ScrollDirection> | ScrollDirection[];\n\n  /**\n   * Do not call the handler until there's a future scroll of the element.\n   *\n   * By default we call the handler (almost) immediately if there's been a\n   * scroll in one of the given directions, or if there has not been a scroll\n   * but directions includes {@link Types.NoDirection}, but you can disable\n   * this initial call here.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts, but you probably need this when doing\n   * scroll-based animations.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * @interface\n */\nexport type ScrollOptions = ScrollToOptions & {\n  /**\n   * How much to scroll in the given direction.\n   *\n   * @defaultValue 100\n   */\n  amount?: number;\n\n  /**\n   * If set to \"pixel\" (default), `amount` is taken as absolute pixels.\n   *\n   * If set to \"visible\", `amount` is taken as percent of the element's visible\n   * size in the scrolling direction (100 means full client width for\n   * horizontal or height for vertical scroll).\n   *\n   * If set to \"content\", `amount` is taken as percent of the element's full\n   * content size in the scrolling direction (100 means full scroll width for\n   * horizontal or height for vertical scroll).\n   *\n   * @defaultValue \"pixel\"\n   */\n  asFractionOf?: \"pixel\" | \"visible\" | \"content\";\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the element that has been resized\n * - the {@link ScrollData} for the element\n */\nexport type OnScrollHandlerArgs = [Element, ScrollData];\nexport type OnScrollCallback = Callback<OnScrollHandlerArgs>;\nexport type OnScrollHandler =\n  | CallbackHandler<OnScrollHandlerArgs>\n  | OnScrollCallback;\n\nexport type ScrollData = {\n  clientWidth: number;\n  clientHeight: number;\n\n  scrollTop: number;\n\n  /**\n   * This is the `scrollTop` relative to the full `scrollHeight` minus the\n   * `clientHeight`, ranging from 0 to 1.\n   */\n  scrollTopFraction: number;\n\n  scrollLeft: number;\n\n  /**\n   * This is the `scrollLeft` relative to the full `scrollWidth` minus the\n   * `clientWidth`, ranging from 0 to 1.\n   */\n  scrollLeftFraction: number;\n\n  scrollWidth: number;\n  scrollHeight: number;\n\n  /**\n   * This is the direction of the last scroll action, i.e. _compared to the\n   * last scroll event_, not necessarily based on the deltas compared to the\n   * last time this callback was called.\n   */\n  direction: ScrollDirection;\n};\n\n// ----------------------------------------\n\ntype ScrollWatcherConfigInternal = {\n  _debounceWindow: number;\n  _scrollThreshold: number;\n  _scrollDuration: number;\n};\n\ntype OnScrollOptionsInternal = {\n  _element: Element;\n  _eventTarget: ScrollTarget;\n  _directions: ScrollDirection[] | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnScrollCallback;\n  _trackType: TrackType;\n  _options: OnScrollOptionsInternal;\n  _data?: ScrollData;\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, ScrollWatcher>();\n\nconst getConfig = (\n  config: ScrollWatcherConfig,\n): ScrollWatcherConfigInternal => {\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _scrollThreshold: toNonNegNum(config.scrollThreshold, 50) || 1,\n    _scrollDuration: toNonNegNum(config.scrollDuration, 1000),\n  };\n};\n\nconst TRACK_REGULAR = 1; // only scroll events\nconst TRACK_FULL = 2; // scroll + resizing of content and/or wrapper\n\n// --------------------\n\nconst fetchOnScrollOptions = async (\n  config: ScrollWatcherConfigInternal,\n  options: OnScrollOptions,\n): Promise<OnScrollOptionsInternal> => {\n  const directions =\n    validateStrList(\"directions\", options.directions, isValidScrollDirection) ||\n    null;\n\n  const element = await fetchScrollableElement(options.scrollable);\n\n  return {\n    _element: element,\n    _eventTarget: getEventTarget(element),\n    _directions: directions,\n    // If threshold is 0, internally treat as 1 (pixel)\n    _threshold: toNonNegNum(options.threshold, config._scrollThreshold) || 1,\n    _debounceWindow: options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n  };\n};\n\nconst directionMatches = (\n  userDirections: ScrollDirection[] | null,\n  latestDirection: ScrollDirection,\n) => !userDirections || MH.includes(userDirections, latestDirection);\n\nconst hasExceededThreshold = (\n  options: OnScrollOptionsInternal,\n  latestData: ScrollData,\n  lastThresholdData: ScrollData | undefined,\n): boolean => {\n  const directions = options._directions;\n  const threshold = options._threshold;\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  const topDiff = maxAbs(\n    latestData[MC.S_SCROLL_TOP] - lastThresholdData[MC.S_SCROLL_TOP],\n    latestData[MC.S_SCROLL_HEIGHT] - lastThresholdData[MC.S_SCROLL_HEIGHT],\n    latestData[MC.S_CLIENT_HEIGHT] - lastThresholdData[MC.S_CLIENT_HEIGHT],\n  );\n\n  const leftDiff = maxAbs(\n    latestData[MC.S_SCROLL_LEFT] - lastThresholdData[MC.S_SCROLL_LEFT],\n    latestData[MC.S_SCROLL_WIDTH] - lastThresholdData[MC.S_SCROLL_WIDTH],\n    latestData[MC.S_CLIENT_WIDTH] - lastThresholdData[MC.S_CLIENT_WIDTH],\n  );\n\n  // If the callback is only interested in up/down, then only check the\n  // scrollTop delta, and similarly for left/right.\n  let checkTop = false,\n    checkLeft = false;\n  if (\n    !directions ||\n    MH.includes(directions, MC.S_NONE) ||\n    MH.includes(directions, MC.S_AMBIGUOUS)\n  ) {\n    checkTop = checkLeft = true;\n  } else {\n    if (\n      MH.includes(directions, MC.S_UP) ||\n      MH.includes(directions, MC.S_DOWN)\n    ) {\n      checkTop = true;\n    }\n    if (\n      MH.includes(directions, MC.S_LEFT) ||\n      MH.includes(directions, MC.S_RIGHT)\n    ) {\n      checkLeft = true;\n    }\n  }\n\n  return (\n    (checkTop && topDiff >= threshold) || (checkLeft && leftDiff >= threshold)\n  );\n};\n\nconst fetchScrollData = async (\n  element: Element,\n  previousEventData: ScrollData | undefined,\n  realtime: boolean,\n): Promise<ScrollData> => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollTop = MH.ceil(element[MC.S_SCROLL_TOP]);\n  const scrollLeft = MH.ceil(element[MC.S_SCROLL_LEFT]);\n  const scrollWidth = element[MC.S_SCROLL_WIDTH];\n  const scrollHeight = element[MC.S_SCROLL_HEIGHT];\n  const clientWidth = getClientWidthNow(element);\n  const clientHeight = getClientHeightNow(element);\n\n  const scrollTopFraction =\n    MH.round(scrollTop) / (scrollHeight - clientHeight || MC.INFINITY);\n  const scrollLeftFraction =\n    MH.round(scrollLeft) / (scrollWidth - clientWidth || MC.INFINITY);\n\n  const prevScrollTop = previousEventData?.scrollTop || 0;\n  const prevScrollLeft = previousEventData?.scrollLeft || 0;\n\n  const direction = getMaxDeltaDirection(\n    scrollLeft - prevScrollLeft,\n    scrollTop - prevScrollTop,\n  );\n\n  return {\n    direction,\n    [MC.S_SCROLL_TOP]: scrollTop,\n    [MC.S_SCROLL_TOP_FRACTION]: scrollTopFraction,\n    [MC.S_SCROLL_LEFT]: scrollLeft,\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollLeftFraction,\n    [MC.S_SCROLL_WIDTH]: scrollWidth,\n    [MC.S_SCROLL_HEIGHT]: scrollHeight,\n    [MC.S_CLIENT_WIDTH]: clientWidth,\n    [MC.S_CLIENT_HEIGHT]: clientHeight,\n  };\n};\n\nconst setScrollCssProps = (\n  element: Element,\n  scrollData: Partial<ScrollData> | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetMainScrollableElement()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"page-\";\n  }\n\n  scrollData = scrollData || {};\n  const props = {\n    [MC.S_SCROLL_TOP]: scrollData[MC.S_SCROLL_TOP],\n    [MC.S_SCROLL_TOP_FRACTION]: scrollData[MC.S_SCROLL_TOP_FRACTION],\n    [MC.S_SCROLL_LEFT]: scrollData[MC.S_SCROLL_LEFT],\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollData[MC.S_SCROLL_LEFT_FRACTION],\n    [MC.S_SCROLL_WIDTH]: scrollData[MC.S_SCROLL_WIDTH],\n    [MC.S_SCROLL_HEIGHT]: scrollData[MC.S_SCROLL_HEIGHT],\n  };\n  setNumericStyleProps(element, props, { _prefix: prefix });\n};\n\nconst getEventTarget = (element: Element): ScrollTarget => {\n  if (element === MH.getDocScrollingElement()) {\n    return MH.getDoc();\n  }\n\n  return element;\n};\n\nconst invokeCallback = (\n  callback: OnScrollCallback,\n  element: Element,\n  scrollData: ScrollData,\n) => callback.invoke(element, MH.copyObject(scrollData)).catch(logError);\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { ScrollOffset, View, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { isValidStrList, validateStrList } from \"@lisn/utils/validation\";\n\nimport { newBitSpaces, createBitSpace } from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid {@link ScrollOffset}.\n *\n * @category Validation\n */\nexport const isValidScrollOffset = (offset: string): offset is ScrollOffset =>\n  offset.match(OFFSET_REGEX) !== null;\n\n/**\n * Returns true if the given string is a valid \"view\".\n *\n * @category Validation\n */\nexport const isValidView = (view: string): view is View =>\n  MH.includes(VIEWS, view);\n\n/**\n * Returns true if the given string or array is a list of valid views.\n *\n * @category Validation\n */\nexport const isValidViewList = (views: string | string[]) =>\n  isValidStrList(views, isValidView, false);\n\n/**\n * Returns the views that are opposite to the given set of views.\n *\n * Above and below are opposites, and so are left and right.\n *\n * \"at\" is a special case. It is considered opposite to any view in the sense\n * that if it is not present in `views` it will always be included in the\n * returned array. However it is not \"strongly\" opposite in the sense that it\n * will not cause other views to be included in the result unless it is the\n * only view in `views`. That is, there are two sets of strongly opposite pairs\n * (\"above\"/\"below\" and \"left\"/\"right\") and at least one of the two opposing\n * views of a pair must be present for the other one to be included, _except in\n * the special case of `views` being \"at\"_. See examples below for\n * clarification.\n *\n * **Note** that the order of the returned array is not defined.\n *\n * @example\n * Returns [\"above\", \"below\", \"left\", \"right\"] (not definite order), since\n * \"at\" is the only view present and is opposite to all:\n *\n * ```javascript\n * getOppositeViews(\"at\"); // -> [\"above\", \"below\", \"left\", \"right\"] (not necessarily in this order)\n * ```\n *\n * @example\n * Returns [\"below\"]. \"left\" and \"right\" are NOT included even though \"at\" is\n * given, because at least one of the two opposing views of a pair must be\n * present for the other one to be included (except in the special case of\n * `views` being \"at\").\n *\n * ```javascript\n * getOppositeViews(\"at,above\"); // -> [\"below\"]\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above\"); // -> [\"at\", \"below\"] (not necessarily in this order)\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above,below\"); // -> [\"at\"]\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"at,above,below\"); // -> []\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above,right\"); // -> [\"at\", \"below\", \"left\"] (not necessarily in this order)\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"at,above,right\"); // -> [\"below\", \"left\"] (not necessarily in this order)\n * ```\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid, including if it's empty \"\".\n *\n * @category Views\n */\nexport const getOppositeViews = (\n  views: CommaSeparatedStr<View> | View[],\n): View[] => {\n  if (!views) {\n    throw MH.usageError(\"'views' cannot be empty\");\n  }\n\n  const bitmask = getViewsBitmask(views);\n  let oppositeBitmask = VIEWS_SPACE.bitmask & ~bitmask; // initial, all not present in bitmask\n\n  // If the given view is \"at\", then include all the other ones.\n  // Otherwise include only the opposite views of those directional\n  // (above/below/left/right) that are present. I.e. if neither left not right\n  // is given, then don't include them\n  if (bitmask !== VIEWS_SPACE.bit.at) {\n    // remove the opposite ones to those not present\n    if (!(bitmask & VIEWS_SPACE.bit.above)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.below;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.below)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.above;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.left)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.right;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.right)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.left;\n    }\n  }\n\n  return getViewsFromBitmask(oppositeBitmask);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getViewsBitmask = (\n  viewsStr: View[] | string | undefined,\n): number => {\n  let viewsBitmask = 0;\n  const views = validateStrList(\"views\", viewsStr, isValidView);\n\n  if (views) {\n    for (const v of views) {\n      if (!isValidView(v)) {\n        throw MH.usageError(`Unknown view '${v}'`);\n      }\n\n      viewsBitmask |= VIEWS_SPACE.bit[v];\n    }\n  } else {\n    viewsBitmask = VIEWS_SPACE.bitmask; // default: all\n  }\n\n  return viewsBitmask;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const parseScrollOffset = (input: string) => {\n  const match = input.match(OFFSET_REGEX);\n  if (!match) {\n    throw MH.usageError(`Invalid offset: '${input}'`);\n  }\n\n  const reference = match.groups?.ref;\n  const value = match.groups?.value;\n  /* istanbul ignore next */ // shouldn't happen\n  if (!reference || !value) {\n    throw MH.bugError(\"Offset regex: blank named groups\");\n  }\n\n  return { reference, value };\n};\n\nconst VIEWS: View[] = [\n  MC.S_AT,\n  MC.S_ABOVE,\n  MC.S_BELOW,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const VIEWS_SPACE = createBitSpace<View>(newBitSpaces(), ...VIEWS);\n\n// --------------------\n\nconst OFFSET_REGEX = RegExp(\"(?<ref>top|bottom|left|right): *(?<value>[^ ].+)\");\n\nconst getViewsFromBitmask = (bitmask: number): View[] => {\n  const views: View[] = [];\n  for (let bit = VIEWS_SPACE.start; bit <= VIEWS_SPACE.end; bit++) {\n    const value = 1 << bit;\n    if (bitmask & value) {\n      const name = VIEWS_SPACE.nameOf(value);\n      if (name) {\n        views.push(name);\n      }\n    }\n  }\n\n  return views;\n};\n","/**\n * @module Modules/XIntersectionObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nexport type XIntersectionObserverCallback = (\n  entries: IntersectionObserverEntry[],\n  observer: XIntersectionObserver,\n) => void;\n\n/**\n * {@link XIntersectionObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}\n * with added capabilities:\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n */\nexport class XIntersectionObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root | IntersectionObserver:root}.\n   */\n  readonly root!: Element | Document | null;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin | IntersectionObserver:rootMargin}.\n   */\n  readonly rootMargin!: string;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/thresholds | IntersectionObserver:thresholds}.\n   */\n  readonly thresholds!: number[];\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/observe | IntersectionObserver:observe} except it accepts multiple\n   * targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent intersection change.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/unobserve | IntersectionObserver:unobserve} except it accepts multiple\n   * targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/disconnect | IntersectionObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * Like `IntersectionObserver.takeRecords`.\n   */\n  readonly takeRecords: () => void;\n\n  constructor(\n    callback: XIntersectionObserverCallback,\n    observeOptions?: IntersectionObserverInit,\n  ) {\n    let observedTargets = MH.newWeakSet<Element>();\n    const targetsToSkip = MH.newWeakSet<Element>();\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      const selectedEntries = [];\n\n      for (const entry of entries) {\n        if (targetsToSkip.has(MH.targetOf(entry))) {\n          MH.deleteKey(targetsToSkip, MH.targetOf(entry));\n          continue;\n        }\n\n        selectedEntries.push(entry);\n      }\n\n      if (MH.lengthOf(selectedEntries)) {\n        callback(selectedEntries, this);\n      }\n    };\n\n    const observer = MH.newIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    MH.defineProperty(this, \"root\", { get: () => observer.root });\n    MH.defineProperty(this, \"rootMargin\", {\n      get: () => observer.rootMargin,\n    });\n    MH.defineProperty(this, \"thresholds\", {\n      get: () => observer.thresholds,\n    });\n\n    this.observe = (...targets) => {\n      for (const target of targets) {\n        observedTargets.add(target);\n        observer.observe(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.add(target);\n        this.observe(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        observer.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      observedTargets = MH.newWeakSet();\n      observer.disconnect();\n    };\n\n    this.takeRecords = () => observer.takeRecords();\n  }\n}\n","/**\n * @module Watchers/ViewWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  ViewTarget,\n  View,\n  BoundingRect,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { setNumericStyleProps } from \"@lisn/utils/css-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForSubsequentMeasureTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys, compareValuesIn } from \"@lisn/utils/misc\";\nimport { createOverlay, OverlayOptions } from \"@lisn/utils/overlays\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport { toMargins, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  VIEWS_SPACE,\n  getViewsBitmask,\n  parseScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap, newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XIntersectionObserver } from \"@lisn/modules/x-intersection-observer\";\n\nimport { DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewWatcher} monitors the position of a given target relative to the\n * given {@link ViewWatcherConfig.root | root} or the viewport.\n *\n * It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class ViewWatcher {\n  /**\n   * Call the given handler whenever the {@link ViewWatcherConfig.root | root}'s\n   * view relative to the target position changes, i.e. when the target enters\n   * or leaves the root.\n   *\n   * Unless {@link OnViewOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current view if it matches this\n   * set of options*.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking position across root\n   * using {@link trackView}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or the options are invalid.\n   */\n  readonly onView: (\n    target: ViewTarget,\n    handler: OnViewHandler,\n    options?: OnViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offView: (target: ViewTarget, handler: OnViewHandler) => void;\n\n  /**\n   * This does more than just {@link onView}. The difference is that in\n   * addition to a change of {@link View}, such as the target entering or\n   * leaving the ViewWatcher's {@link ViewWatcherConfig.root | root} (by\n   * default the viewport), the handler is also called each time the target's\n   * relative view changes _while inside the root_.\n   *\n   * A change of relative position happens when:\n   * - the target is resized\n   * - the root is resized\n   * - the any of the target's scrollable ancestors is scrolled\n   * - the target's attributes changed that resulted in a change of position\n   *\n   * All of the above are accounted for. Internally it uses\n   * {@link ScrollWatcher}, {@link DOMWatcher} and {@link SizeWatcher} to keep\n   * track of all of this.\n   *\n   * If the target is leaves the ViewWatcher's\n   * {@link ViewWatcherConfig.root | root}, the handler will be called with\n   * the {@link ViewData}, and the above events will stop being tracked until\n   * the target enters the watcher's root again.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates the following set of CSS variables on the target's style and\n   * represent its relative position:\n   *\n   * - `--lisn-js--r-top`\n   * - `--lisn-js--r-bottom`\n   * - `--lisn-js--r-left`\n   * - `--lisn-js--r-right`\n   * - `--lisn-js--r-width`\n   * - `--lisn-js--r-height`\n   * - `--lisn-js--r-h-middle`\n   * - `--lisn-js--r-v-middle`\n   *\n   * See {@link ViewData.relative} for an explanation of each.\n   *\n   * Note that only Element targets are supported here and not offsets.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or \"views\" are invalid.\n   */\n  readonly trackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n    options?: TrackViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackView}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n  ) => void;\n\n  /**\n   * Get the current view relative to the target. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param {} realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                    this only when doing realtime scroll-based animations\n   *                    as it may cause a forced layout.\n   */\n  readonly fetchCurrentView: (\n    target: ViewTarget,\n    realtime?: boolean,\n  ) => Promise<ViewData>;\n\n  /**\n   * Creates a new instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: ViewWatcherConfig = {}) {\n    return new ViewWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing  instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: ViewWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new ViewWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ViewWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ViewWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ViewWatcher\", logAtCreation: config })\n      : null;\n\n    const allViewData = MH.newWeakMap<Element, ViewData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<\n        OnViewHandler,\n        {\n          _callback: OnViewCallback;\n          _trackType: TrackType;\n          _options: OnViewOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      debug: logger?.debug9(`Got ${entries.length} new entries`, entries);\n\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    const observeOptions = {\n      root: config._root,\n      threshold: config._threshold,\n      rootMargin: config._rootMargin,\n    };\n\n    const xObserver = new XIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    // ----------\n\n    const fetchCurrentView = (\n      element: Element,\n      realtime = false,\n    ): Promise<ViewData> => {\n      const fetchData = async (\n        entryOrElement: IntersectionObserverEntry | Element,\n      ) => {\n        const intersection = await fetchIntersectionData(\n          config,\n          entryOrElement,\n          realtime,\n        );\n        const data = await fetchViewData(intersection, realtime);\n        return data;\n      };\n\n      if (realtime) {\n        return fetchData(element);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp IntersectionObserver\n        const observer = MH.newIntersectionObserver((entries) => {\n          const promise = fetchData(entries[0]);\n          observer.disconnect();\n          promise.then(resolve);\n        }, observeOptions);\n\n        observer.observe(element);\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n      trackType: TrackType,\n    ): OnViewCallback => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      allCallbacks.sGet(element).set(handler, {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      });\n\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      userOptions: (OnViewOptions & TrackViewOptions) | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOptions(config._root, target, userOptions);\n      const element = options._element;\n\n      const callback = createCallback(handler, options, trackType);\n\n      // View watcher should be used before the DOM is loaded since the initial\n      // size of the root may be 0 or close to 0 and would lead to premature\n      // triggering.\n      await waitForInteractive();\n\n      // Initial call doesn't need to be realtime, and best to use an actual\n      // IntersectionObserverEntry for that one.\n      let viewData = await fetchCurrentView(element);\n\n      if (\n        viewData.rootBounds[MC.S_WIDTH] === 0 &&\n        viewData.rootBounds[MC.S_HEIGHT] === 0\n      ) {\n        // Possibly the root is being setup now, wait for one AF\n        debug: logger?.debug5(\n          \"Got zero root size, deferring for a bit\",\n          config._root,\n        );\n        await waitForSubsequentMeasureTime();\n        viewData = await fetchCurrentView(element);\n      }\n\n      if (trackType === TRACK_FULL) {\n        // Detect resize or scroll\n        await setupInviewTrack(options, callback, viewData);\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      // Always use observeLater to skip the initial call from the\n      // IntersectionObserver, and call callbacks that have skipInitial: false\n      // here. Otherwise, we can't tell from inside the intersectionHandler whether\n      // a callback wants to skip its initial call or not.\n      //\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, viewData);\n        if (viewsToBitmask(viewData.views) & options._viewsBitmask) {\n          await invokeCallback(callback, element, viewData);\n        }\n      }\n    };\n\n    // ----------\n\n    const removeOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      trackType: TrackType,\n    ) => {\n      // For time sync, so that if called immediately after onView without\n      // awaiting, it will remove the callback that is about to be added.\n      // But if no such handler has been added we may unnecessarily\n      // create an overlay... TODO\n      const options = await fetchOptions(config._root, target, {});\n      const element = options._element;\n\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setViewCssProps) {\n          // delete the properties\n          setViewCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n    ) => {\n      const element = options._element;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n\n        xObserver.unobserve(element);\n        MH.deleteKey(allViewData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = async (entry: IntersectionObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      // This doesn't need to be \"realtime\", since IntersectionObserver alone\n      // introduces a delay.\n      const intersection = await fetchIntersectionData(config, entry);\n      const latestData = await fetchViewData(intersection);\n      debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n      const viewsBitmask = viewsToBitmask(latestData.views);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        if (viewsBitmask & entry._options._viewsBitmask) {\n          invokeCallback(entry._callback, element, latestData);\n        }\n      }\n    };\n\n    // ----------\n\n    const setupInviewTrack = async (\n      options: OnViewOptionsInternal,\n      viewCallback: OnViewCallback,\n      viewData: ViewData,\n    ) => {\n      const element = options._element;\n      debug: logger?.debug8(\n        \"Setting up size, scroll and attribute tracking\",\n        element,\n      );\n\n      const sizeWatcher = SizeWatcher.reuse();\n      const scrollWatcher = ScrollWatcher.reuse();\n      const realtime = options._debounceWindow === 0;\n\n      // Detect when target's class or style attribute change\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      // We need to remove the tracking callback when target leaves view and re-add\n      // it when it enters view. But the OnViewCallback that is associated may have\n      // already been added prior, by calling onView with this handler, so we can't\n      // always wrap around it, in order to detect when it's called with a change\n      // of view. So we setup another OnViewCallback tied to the tracking callback.\n      let isInview = false;\n\n      let removeTrackCallback: (() => void) | null = null;\n\n      // Finds any scrollable ancestors of the element and detect scroll on them.\n      const scrollableAncestors = await fetchScrollableAncestors(\n        element,\n        realtime,\n      );\n      if (viewCallback.isRemoved()) {\n        return;\n      }\n\n      const addTrackCallback = () => {\n        const trackCallback = wrapCallback(async () => {\n          const prevData = allViewData.get(element);\n\n          // Get the latest view data for the target\n          const latestData = await fetchCurrentView(element, realtime);\n          debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n          const changed = viewChanged(latestData, prevData);\n          if (changed) {\n            // When comparing for changes, we round the numbers to certain number\n            // of decimal places, and allViewData serves as a \"last threshold\"\n            // state, so only update it if there was a significant change.\n            // Otherwise very quick changes in small increments would get\n            // rejected as \"no change\".\n            allViewData.set(element, latestData);\n\n            if (isInview && !viewCallback.isRemoved()) {\n              // Could have been removed during the debounce window\n              await invokeCallback(viewCallback, element, latestData);\n            }\n          } else {\n            debug: logger?.debug9(\"ViewData same as last\");\n          }\n        });\n\n        // TODO Is there a better way to detect when it's moved?\n        viewCallback.onRemove(trackCallback.remove);\n        removeTrackCallback = trackCallback.remove;\n\n        // Detect when target's class or style attribute change\n        domWatcher.onMutation(trackCallback, {\n          categories: [MC.S_ATTRIBUTE],\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when target is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: element,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the root is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: config._root ?? MH.getWindow(),\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the target's scrollable ancestors are scrolled (this\n        // will almost certainly include the main scrollable element).\n        for (const ancestor of scrollableAncestors) {\n          scrollWatcher.onScroll(trackCallback, {\n            scrollable: ancestor,\n            [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n            threshold: options._scrollThreshold,\n            [MC.S_SKIP_INITIAL]: true,\n          });\n        }\n      };\n\n      const enterOrLeaveCallback = createCallback(\n        (target__ignored, viewData) => {\n          if (viewData.views[0] === MC.S_AT) {\n            if (!isInview) {\n              isInview = true;\n              addTrackCallback();\n            }\n          } else if (removeTrackCallback) {\n            isInview = false;\n            removeTrackCallback();\n            removeTrackCallback = null;\n          }\n        },\n        MH.assign(options, {\n          _viewsBitmask: VIEWS_SPACE.bitmask,\n        }),\n        TRACK_REGULAR,\n      );\n\n      viewCallback.onRemove(enterOrLeaveCallback.remove);\n\n      allViewData.set(element, viewData); // to avoid duplicate initial call\n      // Setup the track and the \"inView\" state\n      if (!enterOrLeaveCallback.isRemoved()) {\n        invokeCallback(enterOrLeaveCallback, element, viewData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentView = (target, realtime = false) =>\n      fetchElement(config._root, target).then((element) =>\n        fetchCurrentView(element, realtime),\n      );\n\n    // ----------\n\n    this.trackView = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      return setupOnView(element, handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackView = (element, handler?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      removeOnView(element, handler, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onView = (target, handler, options?) =>\n      setupOnView(target, handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offView = (target, handler) =>\n      removeOnView(target, handler, TRACK_REGULAR); // no need to await\n  }\n}\n\n/**\n * @interface\n */\nexport type ViewWatcherConfig = {\n  /**\n   * The root element to use for the IntersectionObserver.\n   *\n   * **NOTE:** If the target you want to observe (via\n   * {@link ViewWatcher.onView}) is inside a scrolling element, then you should\n   * probably set the watcher's root to be that scrolling element or a wrapper\n   * around it. However, even if you don't or can't do that, the watcher will\n   * try to be smart about that, and when the target is no longer intercepting\n   * because it's scrolled outside its scrolling container, and yet its\n   * bounding box is still inside the watcher root (e.g. the viewport) the\n   * watcher will determine the relative view based on the scrolling container\n   * and not the actual watcher root.\n   *\n   * @defaultValue null\n   */\n  root?: Element | null;\n\n  /**\n   * The rootMargin to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue \"0px 0px 0px 0px\"\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue 0\n   */\n  threshold?: number | number[];\n};\n\n/**\n * @interface\n */\nexport type OnViewOptions = {\n  /**\n   * Specifies a list of {@link View}s to target for.\n   *\n   * The handler will only be called if there is a change of view relative to\n   * the target that matches the given ones.\n   *\n   * It can be a comma-separated list of \"views\" or an array of such names.\n   *\n   * @defaultValue undefined\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * @interface\n */\nexport type TrackViewOptions = {\n  /**\n   * Use this debounce window for the {@link ScrollWatcher} and\n   * {@link SizeWatcher} involved in the view tracking.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts during scroll, but you probably need this when\n   * doing scroll-based animations.\n   *\n   * @defaultValue undefined // ScrollWatcher and SizeWatcher defaults\n   */\n  debounceWindow?: number;\n\n  /**\n   * Use this resize threshold for the {@link SizeWatcher} involved in the view\n   * tracking.\n   *\n   * @defaultValue undefined // SizeWatcher default\n   */\n  resizeThreshold?: number;\n\n  /**\n   * Use this scroll threshold for the {@link ScrollWatcher} involved in the\n   * view tracking.\n   *\n   * @defaultValue undefined // ScrollWatcher default\n   */\n  scrollThreshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - The element that is the target of the IntersectionObserver. If the call to\n *   {@link ViewWatcher.onView} specified an element as the target, it will be\n *   the same. If it specified an offset, then the element passed to the\n *   callback will be an absolutely positioned trigger overlay that's created\n *   as a result.\n * - the {@link ViewData} for relative to the target\n */\nexport type OnViewHandlerArgs = [Element, ViewData];\nexport type OnViewCallback = Callback<OnViewHandlerArgs>;\nexport type OnViewHandler = CallbackHandler<OnViewHandlerArgs> | OnViewCallback;\n\nexport type ViewData = {\n  isIntersecting: boolean;\n\n  targetBounds: BoundingRect;\n\n  rootBounds: BoundingRect;\n\n  /**\n   * The current view or views of the target. There would be two views given\n   * only if the target is _not_ in view and it's diagonally across from the\n   * root, e.g. both below and to the right.\n   */\n  views: [View, View?];\n\n  /**\n   * This is the target's position relative to the\n   * {@link ViewWatcherConfig.root | root} with values relative to the root\n   * size.\n   *\n   * It is like the {@link targetBounds} except that each quantity is scaled by\n   * the root's width or height, and having two additional computed values.\n   */\n  relative: {\n    x: number;\n    y: number;\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n    width: number;\n    height: number;\n\n    /**\n     * Average of the relative left and right.\n     */\n    hMiddle: number;\n\n    /**\n     * Average of the relative top and bottom.\n     */\n    vMiddle: number;\n  };\n};\n\n// ----------------------------------------\n\ntype ViewWatcherConfigInternal = {\n  _root: Element | null;\n  _rootMargin: string;\n  _threshold: number | number[];\n};\n\ntype OnViewOptionsInternal = {\n  _element: Element;\n  _viewsBitmask: number;\n  _debounceWindow: number | undefined;\n  _resizeThreshold: number | undefined;\n  _scrollThreshold: number | undefined;\n};\n\ntype IntersectionData = {\n  _target: Element;\n  _targetBounds: BoundingRect;\n  _root: Element | null;\n  _rootMargins: [number, number, number, number];\n  _rootBounds: BoundingRect;\n  _isIntersecting: boolean | null; // null means unknown, no IntersectionObserverEntry\n  _isCrossOrigin: boolean | null; // null means unknown, no IntersectionObserverEntry\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, ViewWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (\n  config: ViewWatcherConfig | undefined,\n): ViewWatcherConfigInternal => {\n  return {\n    _root: config?.root || null,\n    _rootMargin: config?.rootMargin ?? \"0px 0px 0px 0px\",\n    _threshold: config?.threshold || 0,\n  };\n};\n\nconst TRACK_REGULAR = 1; // only entering/leaving root\nconst TRACK_FULL = 2; // entering/leaving + moving across (fine-grained)\n\n// --------------------\n\nconst fetchOptions = async (\n  root: Element | null,\n  target: ViewTarget,\n  options: (OnViewOptions & TrackViewOptions) | undefined,\n): Promise<OnViewOptionsInternal> => {\n  return {\n    _element: await fetchElement(root, target),\n    _viewsBitmask: getViewsBitmask(options?.views),\n    _debounceWindow: options?.debounceWindow,\n    _resizeThreshold: options?.resizeThreshold,\n    _scrollThreshold: options?.scrollThreshold,\n  };\n};\n\nconst fetchScrollableAncestors = async (\n  element: Element,\n  realtime: boolean,\n) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollableAncestors = [];\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = getClosestScrollable(ancestor, { active: true }))) {\n    scrollableAncestors.push(ancestor);\n  }\n\n  return scrollableAncestors;\n};\n\nconst viewChanged = (latestData: ViewData, prevData: ViewData | undefined) =>\n  !prevData ||\n  viewsToBitmask(prevData.views) !== viewsToBitmask(latestData.views) ||\n  !compareValuesIn(\n    MH.copyBoundingRectProps(prevData.targetBounds),\n    MH.copyBoundingRectProps(latestData.targetBounds),\n  ) ||\n  !compareValuesIn(prevData.rootBounds, latestData.rootBounds) ||\n  !compareValuesIn(prevData.relative, latestData.relative);\n\nconst viewsToBitmask = (views: [View, View?]) =>\n  VIEWS_SPACE.bit[views[0]] | (views[1] ? VIEWS_SPACE.bit[views[1]] : 0);\n\nconst fetchIntersectionData = async (\n  config: ViewWatcherConfigInternal,\n  entryOrTarget: IntersectionObserverEntry | Element,\n  realtime = false,\n): Promise<IntersectionData> => {\n  const root = config._root;\n  const vpSize = await fetchViewportSize(realtime);\n  const rootMargins = toMargins(config._rootMargin, vpSize);\n\n  let target: Element;\n  let targetBounds: BoundingRect;\n  let rootBounds: BoundingRect | null = null;\n  let isIntersecting: boolean | null = null;\n  let isCrossOrigin: boolean | null = null;\n\n  if (MH.isInstanceOf(entryOrTarget, IntersectionObserverEntry)) {\n    target = entryOrTarget.target;\n    targetBounds = entryOrTarget.boundingClientRect;\n    rootBounds = entryOrTarget.rootBounds;\n    isIntersecting = entryOrTarget.isIntersecting;\n    isCrossOrigin = !entryOrTarget.rootBounds;\n  } else {\n    target = entryOrTarget;\n    targetBounds = await fetchBounds(target, realtime);\n  }\n\n  if (!rootBounds) {\n    rootBounds = await fetchBounds(root, realtime, rootMargins);\n  }\n\n  return {\n    _target: target,\n    _targetBounds: targetBounds,\n    _root: root,\n    _rootMargins: rootMargins,\n    _rootBounds: rootBounds,\n    _isIntersecting: isIntersecting,\n    _isCrossOrigin: isCrossOrigin,\n  };\n};\n\nconst fetchBounds = async (\n  root: Element | null,\n  realtime: boolean,\n  rootMargins?: [number, number, number, number],\n): Promise<BoundingRect> => {\n  let rect: BoundingRect;\n\n  if (root) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    rect = MH.copyBoundingRectProps(MH.getBoundingClientRect(root));\n  } else {\n    const { width, height } = await fetchViewportSize(realtime);\n    rect = {\n      x: 0,\n      left: 0,\n      right: width,\n      width,\n      y: 0,\n      top: 0,\n      bottom: height,\n      height,\n    };\n  }\n\n  if (rootMargins) {\n    rect.x = rect[MC.S_LEFT] -= rootMargins[3];\n    rect[MC.S_RIGHT] += rootMargins[1];\n    rect[MC.S_WIDTH] += rootMargins[1] + rootMargins[3];\n\n    rect.y = rect[MC.S_TOP] -= rootMargins[0];\n    rect[MC.S_BOTTOM] += rootMargins[2];\n    rect[MC.S_HEIGHT] += rootMargins[0] + rootMargins[2];\n  }\n\n  return rect;\n};\n\nconst fetchViewData = async (\n  intersection: IntersectionData,\n  realtime = false,\n): Promise<ViewData> => {\n  const vpSize = await fetchViewportSize(realtime);\n  const vpHeight = vpSize[MC.S_HEIGHT];\n  const vpWidth = vpSize[MC.S_WIDTH];\n\n  const views = await fetchViews(intersection, realtime);\n\n  const relative = MH.merge(\n    { hMiddle: NaN, vMiddle: NaN },\n    MH.copyBoundingRectProps(intersection._targetBounds),\n  );\n\n  relative.y /= vpHeight;\n  relative[MC.S_TOP] /= vpHeight;\n  relative[MC.S_BOTTOM] /= vpHeight;\n  relative[MC.S_HEIGHT] /= vpHeight;\n\n  relative.x /= vpWidth;\n  relative[MC.S_LEFT] /= vpWidth;\n  relative[MC.S_RIGHT] /= vpWidth;\n  relative[MC.S_WIDTH] /= vpWidth;\n\n  relative.hMiddle = (relative[MC.S_LEFT] + relative[MC.S_RIGHT]) / 2;\n  relative.vMiddle = (relative[MC.S_TOP] + relative[MC.S_BOTTOM]) / 2;\n\n  const viewData: ViewData = {\n    isIntersecting: intersection._isIntersecting ?? views[0] === MC.S_AT,\n    targetBounds: intersection._targetBounds,\n    rootBounds: intersection._rootBounds,\n    views,\n    relative,\n  };\n\n  return viewData;\n};\n\nconst fetchViews = async (\n  intersection: IntersectionData,\n  realtime: boolean,\n  useScrollingAncestor?: Element,\n): Promise<[View, View?]> => {\n  if (intersection._isIntersecting) {\n    return [MC.S_AT];\n  }\n\n  let rootBounds: BoundingRect;\n  if (useScrollingAncestor) {\n    rootBounds = await fetchBounds(\n      useScrollingAncestor,\n      realtime,\n      intersection._rootMargins,\n    );\n  } else {\n    rootBounds = intersection._rootBounds;\n  }\n\n  const targetBounds = intersection._targetBounds;\n  const delta = {\n    _left: rootBounds[MC.S_LEFT] - targetBounds[MC.S_LEFT],\n    _right: targetBounds[MC.S_RIGHT] - rootBounds[MC.S_RIGHT],\n    _top: rootBounds[MC.S_TOP] - targetBounds[MC.S_TOP],\n    _bottom: targetBounds[MC.S_BOTTOM] - rootBounds[MC.S_BOTTOM],\n  };\n\n  let xView: View | null = null;\n  let yView: View | null = null;\n  if (delta._left > 0 && delta._right > 0) {\n    // Target is wider than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    xView = delta._left > delta._right ? MC.S_RIGHT : MC.S_LEFT;\n  } else if (delta._left > 0) {\n    // Target is to the left of the root\n    xView = MC.S_RIGHT;\n  } else if (delta._right > 0) {\n    // Target is to the right of the root\n    xView = MC.S_LEFT;\n  } // else target is horizontally contained in root, see below\n\n  if (delta._top > 0 && delta._bottom > 0) {\n    // Target is taller than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    yView = delta._top > delta._bottom ? MC.S_BELOW : MC.S_ABOVE;\n  } else if (delta._top > 0) {\n    // Target is above the root\n    yView = MC.S_BELOW;\n  } else if (delta._bottom > 0) {\n    // Target is below the root\n    yView = MC.S_ABOVE;\n  } // else target is vertically contained in root, see below\n\n  if (xView && yView) {\n    // diagonally out of vide\n    return [xView, yView];\n  } else if (xView) {\n    // horizontally out of vide\n    return [xView];\n  } else if (yView) {\n    // vertically out of vide\n    return [yView];\n  }\n\n  // The target is contained in the root bounds and yet isIntersecting was\n  // not true. This means that either:\n  //\n  // 1. It may be intersecting, but we didn't get an actual\n  //    IntersectionObserverEntry and we don't know if it's intersecting\n  //    or not\n  // 2. The target is inside a scrolling element that is _not_ being used as\n  //    the observer root, and the target has scrolled out of the scrollable\n  //    bounds but still inside the viewport\n  // 3. We're inside a cross-origin iFrame and the iFrame is partially or\n  //    fully not-intersecting\n\n  if (!intersection._isCrossOrigin) {\n    // This is case 1. or 2. => get the views relative to the closest\n    // scrollable ancestor relative to which it is _not_ intersecting, if\n    // any. If it's nested inside several scrolling elements, we'll end up\n    // looping over each one until we find the one for which the target is\n    // outside its box.\n    //\n    // It is too risky to use active isScrollable check here since we could be\n    // inside an onScroll handler, so just use passive.\n    const scrollingAncestor = getClosestScrollable(\n      useScrollingAncestor ?? intersection._target,\n    );\n\n    if (scrollingAncestor) {\n      return fetchViews(intersection, realtime, scrollingAncestor);\n    }\n  }\n\n  // Either case 3. (cross-origin iframe outside the viewport) or case 1. and\n  // the target is actually intersecting the root. Either way, it's to be\n  // considered in-view of its root.\n  return [MC.S_AT];\n};\n\nconst setViewCssProps = (\n  element: Element,\n  viewData: ViewData | undefined | null,\n) => {\n  const relative: Record<string, number> = viewData?.relative || {};\n  const props = {\n    top: relative.top,\n    bottom: relative.bottom,\n    left: relative.left,\n    right: relative.right,\n    [MC.S_WIDTH]: relative[MC.S_WIDTH],\n    [MC.S_HEIGHT]: relative[MC.S_HEIGHT],\n    hMiddle: relative.hMiddle,\n    vMiddle: relative.vMiddle,\n  };\n  setNumericStyleProps(element, props, { _prefix: \"r-\", _numDecimal: 4 }); // don't await here\n};\n\nconst fetchElement = async (\n  root: Element | null,\n  target: ViewTarget,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  } else if (!MH.isString(target)) {\n    throw MH.usageError(\n      \"'target' must be an offset string or an HTMLElement | SVGElement | MathMLElement\",\n    );\n  }\n\n  const overlayOptions = getOverlayOptions(root, target);\n  return await createOverlay(overlayOptions);\n};\n\nconst getOverlayOptions = (\n  root: Element | null,\n  target: string,\n): OverlayOptions => {\n  const { reference, value } = parseScrollOffset(target);\n\n  let ovrDimension: \"width\" | \"height\";\n  if (reference === MC.S_TOP || reference === MC.S_BOTTOM) {\n    ovrDimension = MC.S_WIDTH;\n  } else if (reference === MC.S_LEFT || reference === MC.S_RIGHT) {\n    ovrDimension = MC.S_HEIGHT;\n  } else {\n    throw MH.usageError(`Invalid offset reference: '${reference}'`);\n  }\n\n  return {\n    parent: MH.isHTMLElement(root) ? root : undefined,\n    style: {\n      [reference]: value,\n      [ovrDimension]: \"100%\",\n    },\n  };\n};\n\nconst invokeCallback = (\n  callback: OnViewCallback,\n  element: Element,\n  viewData: ViewData,\n) => callback.invoke(element, MH.copyObject(viewData)).catch(logError);\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport { settings } from \"@lisn/globals/settings\";\nsettings.autoWidgets = true;\n\nexport { settings } from \"@lisn/globals/settings\";\nexport * as watchers from \"@lisn/watchers/index\";\n","/**\n * ## Specification for the HTML API for widgets\n *\n * The following describes the general syntax when using the HTML API for\n * automatic creation of widgets based on data attributes\n * ({@link Settings.settings.autoWidgets | settings.autoWidgets} must be true.\n *\n * A widget specification should be given as a\n * `data-lisn-<WidgetName>=\"<WidgetConfList>\"` attribute.\n *\n * Alternatively, if using all default configurations, you can simply add the\n * `lisn-<WidgetName>` CSS class. Specifying a configuration using CSS classes\n * is not currently possible for widgets, only triggers.\n *\n * The general specification for a widget is of the form:\n *\n * ```\n * <WidgetConfList> ::= <WidgetConf> { \";\" <WidgetConf> }\n *\n * <WidgetConf> ::= [ <WidgetOption> { \"|\" <WidgetOption> } ]\n *\n * <WidgetOption> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n * ```\n *\n * **NOTE:**\n *\n * There can be 0 or more spaces around any of the separator characters.\n *\n * Not all widgets support multiple instances per single element and therefore\n * multiple configurations. Refer to the specific widget.\n *\n * The characters \"|\", \";\", \"=\" are reserved separators and cannot be used\n * literally as part of an option value.\n *\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { hasClass, getData } from \"@lisn/utils/css-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { toArrayIfSingle } from \"@lisn/utils/misc\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString, kebabToCamelCase, splitOn } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { DOMWatcher } from \"@lisn/watchers/dom-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\nexport class Widget {\n  /**\n   * Disables the functionality of the widget. What this means is specific to\n   * each widget.\n   */\n  readonly disable: () => Promise<void>;\n\n  /**\n   * Re-enables the functionality of the widget. What this means is specific to\n   * each widget.\n   */\n  readonly enable: () => Promise<void>;\n\n  /**\n   * Re-enables the widget if disabled, otherwise disables it.\n   */\n  readonly toggleEnable: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is disabled.\n   */\n  readonly onDisable: (handler: WidgetHandler) => void;\n\n  /**\n   * The given handler will be called when the widget is enabled.\n   */\n  readonly onEnable: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is currently disabled.\n   */\n  readonly isDisabled: () => boolean;\n\n  /**\n   * Undoes all modifications to the element and returns it to its original state.\n   *\n   * You will need to recreate it if you want to enable its functionality again.\n   */\n  readonly destroy: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is destroyed.\n   */\n  readonly onDestroy: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is destroyed.\n   */\n  readonly isDestroyed: () => boolean;\n\n  /**\n   * Returns the element passed to the widget constructor.\n   */\n  readonly getElement: () => Element;\n\n  /**\n   * Retrieve an existing widget by element and ID.\n   */\n  static get(element: Element, id: string): Widget | null {\n    return instances.get(element)?.get(id) || null;\n  }\n\n  /**\n   * **IMPORTANT:** If ID is given and there's already a widget with this ID on\n   * this element, it will be destroyed!\n   */\n  constructor(element: Element, config?: { id?: string }) {\n    const logger = debug\n      ? new debug.Logger({\n          name: `${this.constructor.name}-${formatAsString(element)}`,\n          logAtCreation: this,\n        })\n      : null;\n\n    const id = config?.id;\n    if (id) {\n      instances.get(element)?.get(id)?.destroy(); // don't await here\n      instances.sGet(element).set(id, this);\n    }\n\n    let isDisabled = false;\n    let isDestroyed = false;\n    let destroyPromise: Promise<void>;\n\n    const enableCallbacks = MH.newSet<WidgetCallback>();\n    const disableCallbacks = MH.newSet<WidgetCallback>();\n    const destroyCallbacks = MH.newSet<WidgetCallback>();\n\n    this.disable = async () => {\n      if (!isDisabled) {\n        debug: logger?.debug8(\"Disabling\");\n        isDisabled = true;\n\n        for (const callback of disableCallbacks) {\n          await callback.invoke(this);\n        }\n      }\n    };\n\n    this.enable = async () => {\n      if (!isDestroyed && isDisabled) {\n        debug: logger?.debug8(\"Enabling\");\n        isDisabled = false;\n\n        for (const callback of enableCallbacks) {\n          await callback.invoke(this);\n        }\n      }\n    };\n\n    this.toggleEnable = async () => {\n      if (!isDestroyed) {\n        await (isDisabled ? this.enable : this.disable)();\n      }\n    };\n\n    this.onDisable = (handler) => disableCallbacks.add(wrapCallback(handler));\n    this.onEnable = (handler) => enableCallbacks.add(wrapCallback(handler));\n\n    this.isDisabled = () => isDisabled;\n\n    this.destroy = () => {\n      if (!destroyPromise) {\n        destroyPromise = (async () => {\n          debug: logger?.debug8(\"Destroying\");\n          isDestroyed = true;\n          await this.disable();\n\n          for (const callback of destroyCallbacks) {\n            await callback.invoke(this);\n          }\n\n          enableCallbacks.clear();\n          disableCallbacks.clear();\n          destroyCallbacks.clear();\n\n          if (id) {\n            const elInstances = instances.get(element);\n            if (elInstances?.get(id) === this) {\n              MH.deleteKey(elInstances, id);\n              instances.prune(element);\n            }\n          }\n        })();\n      }\n\n      return destroyPromise;\n    };\n\n    this.onDestroy = (handler) => destroyCallbacks.add(wrapCallback(handler));\n\n    this.isDestroyed = () => isDestroyed;\n\n    this.getElement = () => element;\n  }\n}\n\nexport type WidgetCallbackArgs = [Widget];\nexport type WidgetCallback = Callback<WidgetCallbackArgs>;\nexport type WidgetHandler =\n  | WidgetCallback\n  | CallbackHandler<WidgetCallbackArgs>;\n\n/**\n * **NOTE:** If the function returns a widget or a list of widgets created for\n * the given element, then each one will be automatically destroyed if the\n * element is removed from the DOM.\n */\nexport type WidgetCreateFn<Config extends Record<string, unknown>> = (\n  element: Element,\n  config?: Config,\n) => Widget | Widget[] | null | Promise<Widget | Widget[] | null>;\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidatorObject<\n  Config extends Record<string, unknown>,\n> = {\n  [K in keyof Config]: (key: K, v: unknown) => Config[K];\n};\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigAsyncValidatorObject<\n  Config extends Record<string, unknown>,\n> = {\n  [K in keyof Config]: (key: K, v: unknown) => Config[K] | Promise<Config[K]>;\n};\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidatorFunc<Config extends Record<string, unknown>> =\n  (\n    element: Element,\n  ) =>\n    | WidgetConfigValidatorObject<Config>\n    | WidgetConfigAsyncValidatorObject<Config>;\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidator<Config extends Record<string, unknown>> =\n  | WidgetConfigValidatorObject<Config>\n  | WidgetConfigValidatorFunc<Config>;\n\n/**\n * Enables automatic setting up of a widget from an elements matching the given\n * selector.\n *\n * If {@link settings.autoWidgets} is true, nothing is done. Otherwise,\n * when an element matching the selector is added to the DOM, `newWidget` will\n * be called and it's expected to setup the widget.\n *\n * **IMPORTANT:** The widget that is returned by `newWidget` will be\n * automatically destroyed when the element that created them is removed from\n * the DOM.\n *\n * **IMPORTANT:** If a widget by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param {} name       The name of the widget. Should be in kebab-case.\n * @param {} newWidget  Called for every element matching the widget selector.\n * @param {} configValidator\n *                      A validator object, or a function that returns such an\n *                      object, for all options supported by the widget. If\n *                      given, then the `newWidget` function will also be\n *                      passed a configuration object constructed from the\n *                      element's data attribute.\n * @param {} [options.selector]\n *                      The selector to match elements for. If not given, then\n *                      uses a default value of `[data-lisn-<name>], .lisn-<name>`\n * @param {} [options.supportsMultiple]\n *                      If true, and if `configValidator` is given, then the\n *                      value of the element's widget specific data attribute\n *                      will be split on \";\" and each one parsed individually\n *                      as a configuration. Then the `newWidget` function will\n *                      be called once for each configuration.\n */\nexport const registerWidget = async <Config extends Record<string, unknown>>(\n  name: string,\n  newWidget: WidgetCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n  options?: {\n    selector?: string;\n    supportsMultiple?: boolean;\n  },\n) => {\n  if (registeredWidgets.has(name)) {\n    return;\n  }\n\n  registeredWidgets.add(name);\n\n  // init after DOM loaded so that the settings can be configured by the user\n  // straight after loading LISN.js\n  await waitForInteractive();\n\n  const prefixedName = MH.prefixName(name);\n  const selector = options?.selector ?? getDefaultWidgetSelector(prefixedName);\n\n  if (settings.autoWidgets) {\n    const domWatcher = DOMWatcher.reuse();\n    domWatcher.onMutation(\n      async (operation) => {\n        const element = MH.currentTargetOf(operation);\n        const thisConfigValidator = MH.isFunction(configValidator)\n          ? await configValidator(element)\n          : configValidator;\n\n        const widgets: Widget[] = [];\n        const configSpecs: string[] = [];\n        const dataAttr = getData(element, prefixedName);\n\n        if (options?.supportsMultiple) {\n          if (hasClass(element, prefixedName)) {\n            configSpecs.push(\"\");\n          }\n\n          if (dataAttr !== null) {\n            configSpecs.push(\n              ...(dataAttr ? splitOn(dataAttr, \";\", true) : [\"\"]),\n            );\n          }\n        } else {\n          configSpecs.push(dataAttr ?? \"\");\n        }\n\n        for (const spec of configSpecs) {\n          const config = thisConfigValidator\n            ? await fetchWidgetConfig(spec, thisConfigValidator)\n            : undefined;\n\n          const theseWidgets = await newWidget(element, config);\n          if (theseWidgets) {\n            widgets.push(...toArrayIfSingle(theseWidgets));\n          }\n        }\n\n        // auto-destroy on element remove\n        if (MH.lengthOf(widgets)) {\n          domWatcher.onMutation(\n            () => {\n              for (const w of widgets) {\n                w.destroy();\n              }\n            },\n            {\n              target: element,\n              categories: [MC.S_REMOVED],\n            },\n          );\n        }\n      },\n      {\n        selector,\n        categories: [MC.S_ADDED],\n      },\n    );\n  }\n};\n\n/**\n * Returns a configuration object from the given user input, which can be\n * either an object or a `<separator>` separated string of key=values.\n *\n * If `input` is a string, it must be of the format:\n *\n * ```\n * <UserConfigString> ::= <OptionSpec> { <Separator> <OptionSpec> }\n *\n * <OptionSpec> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n * ```\n *\n * By default, for widgets `<separator>` is \"|\".\n *\n * **NOTE:** If `input` is a string, option names will be converted from\n * kebab-case to camelCase.\n *\n * The given `validator` defines the shape of the returned object. It is called\n * for each entry _in the `validator` object_, with that key and the\n * corresponding value from the input configuration, as the two parameters.\n *\n * If a key is not found in the input, the value passed to the validating\n * function will be `undefined`.\n *\n * If the input is a string and a key has no value, the value passed to the\n * validating function will be an empty string `\"\"`.\n *\n * The final configuration contains all keys from the `validator` object with\n * the value that the validating function for each key returned.\n *\n * There are several built-in validating functions that you can make use of.\n *\n * @see {@link Utils.validateStrList}\n * @see {@link Utils.validateNumber}\n * @see {@link Utils.validateBoolean}\n * @see {@link Utils.validateString}\n * @see {@link Utils.validateBooleanOrString}\n */\nexport const getWidgetConfig = <Config extends Record<string, unknown>>(\n  input: Record<string, unknown> | string | null | undefined,\n  validator: WidgetConfigValidatorObject<Config>,\n  separator = \"|\",\n): Config => {\n  const config = {} as Config;\n  if (!(input instanceof Object)) {\n    input = toOptionsObject(input, separator);\n  }\n\n  for (const key in validator) {\n    config[key] = validator[key](key, input[key]);\n  }\n  return config;\n};\n\n/**\n * Like {@link getWidgetConfig} but it accepts an object whose validator\n * functions may return a promise.\n */\nexport const fetchWidgetConfig = async <Config extends Record<string, unknown>>(\n  input: Record<string, unknown> | string | null | undefined,\n  validator: WidgetConfigAsyncValidatorObject<Config>,\n  separator = \"|\",\n): Promise<Config> => {\n  const config = {} as Config;\n  const configPromises = getWidgetConfig<{\n    [K in keyof Config]: Config[K] | Promise<Config[K]>;\n  }>(input, validator, separator);\n\n  for (const key in configPromises) {\n    config[key] = await configPromises[key];\n  }\n\n  return config;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultWidgetSelector = (prefix: string) =>\n  `.${prefix},[data-${prefix}]`;\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchUniqueWidget = async <W extends Widget>(\n  name: string,\n  element: Element,\n  Type: { get: (element: Element) => W | null },\n): Promise<W | null> => {\n  let widget = Type.get(element);\n  if (!widget) {\n    await waitForDelay(0); // in case it's being processed now\n    widget = Type.get(element);\n\n    if (!widget) {\n      logWarn(`No ${name} widget for element ${formatAsString(element)}`);\n      return null;\n    }\n  }\n\n  return widget;\n};\n\nconst instances = newXWeakMap<Element, Map<string, Widget>>(() => MH.newMap());\nconst registeredWidgets = MH.newSet<string>();\n\n// --------------------\n\nconst toOptionsObject = (\n  input: string | null | undefined,\n  separator: string,\n) => {\n  const options: Record<string, string> = {};\n  for (const entry of MH.filter(\n    splitOn(input ?? \"\", separator, true),\n    (v) => !MH.isEmpty(v),\n  )) {\n    const [key, value] = splitOn(entry, /\\s*=\\s*/, true, 1);\n    options[kebabToCamelCase(key)] = value ?? \"\";\n  }\n  return options;\n};\n","/**\n * @module Actions\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { splitOn } from \"@lisn/utils/text\";\n\nimport { WidgetConfigValidator, fetchWidgetConfig } from \"@lisn/widgets/widget\";\n\n/**\n * @interface\n */\nexport type Action = {\n  do: () => void;\n  undo: () => void;\n  toggle: () => void;\n};\n\nexport type ActionCreateFn<Config extends Record<string, unknown>> = (\n  element: Element,\n  args: string[],\n  config?: Config,\n) => Action | Promise<Action>;\n\n/**\n * Registers the given action so that it can be parsed by\n * {@link Triggers.registerTrigger}.\n *\n * **IMPORTANT:** If an action by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param {} name      The name of the action. Should be in kebab-case.\n * @param {} newAction Called for every action specification for a trigger\n *                     parsed by {@link Triggers.registerTrigger}\n */\nexport const registerAction = <Config extends Record<string, unknown>>(\n  name: string,\n  newAction: ActionCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  if (registeredActions.has(name)) {\n    return;\n  }\n\n  const newActionFromSpec = async (\n    element: Element,\n    argsAndOptions: string,\n  ) => {\n    const thisConfigValidator = MH.isFunction(configValidator)\n      ? await configValidator(element)\n      : configValidator;\n\n    const args: string[] = [];\n    const config = thisConfigValidator\n      ? await fetchWidgetConfig(argsAndOptions, thisConfigValidator, \",\")\n      : undefined;\n\n    for (const entry of splitOn(argsAndOptions, \",\", true)) {\n      if (entry) {\n        if (!MH.includes(entry, \"=\")) {\n          args.push(entry);\n        }\n      }\n    }\n\n    return newAction(element, args, config);\n  };\n\n  registeredActions.set(name, newActionFromSpec);\n};\n\n/**\n * Returns an {@link Action} registered under the given name and instantiated\n * with the given element and arguments and options parsed from the given string.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given spec is not valid.\n */\nexport const fetchAction = async (\n  element: Element,\n  name: string,\n  argsAndOptions?: string,\n): Promise<Action> => {\n  const newActionFromSpec = registeredActions.get(name);\n  if (!newActionFromSpec) {\n    throw MH.usageError(`Unknown action '${name}'`);\n  }\n\n  return await newActionFromSpec(element, argsAndOptions || \"\");\n};\n\n// --------------------\n\nconst registeredActions = MH.newMap<\n  string,\n  (element: Element, spec: string) => Action | Promise<Action>\n>();\n","/**\n * @module Actions\n *\n * @categoryDescription Adding/removing class\n * {@link AddClass} and {@link RemoveClass} add or remove a list of CSS classes\n * to/from the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { addClasses, removeClasses, toggleClass } from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Adds or removes a list of CSS classes to/from the given element.\n *\n * **IMPORTANT:** When constructed, it removes all given classes from the\n * element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"add-class\".\n * - Accepted string arguments: one or more CSS classes\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@add-class: clsA, clsB\"></div>\n * ```\n *\n * @category Adding/removing class\n */\nexport class AddClass implements Action {\n  /**\n   * Adds the classes given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Removes the classes given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles each class given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"add-class\",\n      (element, classNames) => new AddClass(element, ...classNames),\n    );\n  }\n\n  constructor(element: Element, ...classNames: string[]) {\n    const { _add, _remove, _toggle } = getMethods(element, classNames);\n    _remove(); // initial state\n\n    this.do = _add;\n    this.undo = _remove;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Removes or adds a list of CSS classes to/from the given element.\n *\n * **IMPORTANT:** When constructed, it adds all given classes from the element\n * as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"remove-class\".\n * - Accepted string arguments: one or more CSS classes\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@remove-class: clsA, clsB\"></div>\n * ```\n *\n * @category Adding/removing class\n */\nexport class RemoveClass implements Action {\n  /**\n   * Removes the classes given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Adds the classes given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles each class given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"remove-class\",\n      (element, classNames) => new RemoveClass(element, ...classNames),\n    );\n  }\n\n  constructor(element: Element, ...classNames: string[]) {\n    const { _add, _remove, _toggle } = getMethods(element, classNames);\n    _add(); // initial state\n\n    this.do = _remove;\n    this.undo = _add;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element, classNames: string[]) => {\n  return {\n    _add: () => addClasses(element, ...classNames),\n\n    _remove: () => removeClasses(element, ...classNames),\n\n    _toggle: async () => {\n      for (const cls of classNames) {\n        await toggleClass(element, cls);\n      }\n    },\n  };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  addClassesNow,\n  removeClassesNow,\n  getData,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\n\n/**\n * @param {} webAnimationCallback This function is called for each\n *                                {@link https://developer.mozilla.org/en-US/docs/Web/API/Animation | Animation}\n *                                on the element. It {@link waitForMeasureTime}\n *                                before reading the animations.\n * @param {} legacyCallback       This function is called if the browser does\n *                                not support the Web Animations API. It is\n *                                called after {@link waitForMutateTime} so it\n *                                can safely modify styles.\n * @param {} realtime             If true, then it does not\n *                                {@link waitForMeasureTime} or\n *                                {@link waitForMutateTime} and runs\n *                                synchronously.\n *\n * @category Animations\n */\nexport const iterateAnimations = async (\n  element: Element,\n  webAnimationCallback: (animation: Animation) => void,\n  legacyCallback: (element: Element) => void,\n  realtime = false,\n) => {\n  /* istanbul ignore next */ // jsdom doesn't support Web Animations\n  if (\n    \"getAnimations\" in element &&\n    getData(element, MH.prefixName(\"test-legacy\")) === null\n  ) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    for (const animation of element.getAnimations()) {\n      webAnimationCallback(animation);\n    }\n\n    // Old browsers, no Animation API\n  } else {\n    if (!realtime) {\n      await waitForMutateTime();\n    }\n\n    legacyCallback(element);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const resetCssAnimationsNow = (element: Element) => {\n  addClassesNow(element, MC.PREFIX_ANIMATE_DISABLE); // cause it to reset\n  // If we remove the disable class immediately, then it will not have the\n  // effect to reset the animation, since the browser won't see any change in\n  // the classList at the start of the frame. So we ideally need to remove the\n  // disable class after the next paint. However, depending on the animation,\n  // and its state, disabling animation and waiting for the next animation\n  // frame may cause a visible glitch, so we need to force layout now.\n  /* eslint-disable-next-line @typescript-eslint/no-unused-expressions */\n  element[MC.S_CLIENT_WIDTH]; // forces layout\n\n  removeClassesNow(element, MC.PREFIX_ANIMATE_DISABLE);\n};\n","/**\n * @module Actions\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  iterateAnimations,\n  resetCssAnimationsNow,\n} from \"@lisn/utils/animations\";\nimport {\n  hasClass,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n} from \"@lisn/utils/css-alter\";\nimport { isPageReady, waitForPageReady } from \"@lisn/utils/dom-events\";\nimport { formatAsString } from \"@lisn/utils/text\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport debug from \"@lisn/debug/debug\";\nimport { LoggerInterface } from \"@lisn/debug/types\";\n\n/**\n * Plays or reverses all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it resets and pauses the animations as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@animate\"></div>\n * ```\n *\n * @category Animation\n */\nexport class Animate implements Action {\n  /**\n   * (Re)plays the animations forwards.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * (Re)plays the animations backwards.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Reverses the animations from its current direction.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate\", (element) => new Animate(element));\n  }\n\n  constructor(element: Element) {\n    const logger = debug\n      ? new debug.Logger({\n          name: `Animate-${formatAsString(element)}`,\n        })\n      : null;\n\n    // initial state is 0% and paused\n    animate(element, GO_FORWARD, logger, true);\n    let isFirst = true;\n\n    this.do = () => animate(element, GO_FORWARD, logger);\n    this.undo = () => animate(element, GO_BACKWARD, logger);\n    this[MC.S_TOGGLE] = () => {\n      const res = animate(element, isFirst ? GO_FORWARD : GO_TOGGLE, logger);\n      isFirst = false;\n      return res;\n    };\n  }\n}\n\n// --------------------\n\ntype AnimateDirection =\n  | typeof GO_FORWARD\n  | typeof GO_BACKWARD\n  | typeof GO_TOGGLE;\n\nconst GO_FORWARD = 0;\nconst GO_BACKWARD = 1;\nconst GO_TOGGLE = 2;\n\nconst animate = (\n  element: Element,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial = false,\n) => {\n  debug: logger?.debug8(\"Animating element\");\n  return iterateAnimations(\n    element,\n    /* istanbul ignore next */ // jsdom doesn't support Web Animations\n    (animation) => setupAnimation(animation, direction, logger, isInitial),\n    (element) => setupAnimationLegacy(element, direction, logger, isInitial),\n    isInitial,\n  );\n};\n\n/* istanbul ignore next */ // jsdom doesn't support Web Animations\nconst setupAnimation = (\n  animation: Animation,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  const pauseTillReady = !isPageReady();\n  const isBackward = animation.playbackRate === -1;\n\n  debug: logger?.debug9(\"Setting up animation\", animation, {\n    direction,\n    isBackward,\n  });\n\n  if (\n    direction === GO_TOGGLE ||\n    (direction === GO_FORWARD && isBackward) ||\n    (direction === GO_BACKWARD && !isBackward)\n  ) {\n    debug: logger?.debug9(\"Reversing animation\", animation.playState);\n    animation.reverse();\n  } else if (animation.playState === \"paused\") {\n    debug: logger?.debug9(\"Playing animation\", animation.playState);\n    animation.play();\n  } else {\n    debug: logger?.debug9(\n      \"Animation has played or is playing already\",\n      animation.playState,\n    );\n  }\n\n  if (isInitial || pauseTillReady) {\n    debug: logger?.debug9(\"Pausing animation\", animation.playState);\n    animation.pause();\n\n    if (!isInitial) {\n      // we were only pausing until ready\n      /* istanbul ignore next */\n      waitForPageReady().then(() => {\n        debug: logger?.debug9(\"Restarting animation\", animation.playState);\n        animation.play();\n      });\n    }\n  }\n\n  // If the element is moved (including if wrapped, such as by the ViewTrigger),\n  // this will cancel CSS animations and replace them with new running ones\n  if (MH.isInstanceOf(animation, CSSAnimation)) {\n    const cancelHandler = (event: AnimationPlaybackEvent) =>\n      onAnimationCancel(event, animation, direction, logger, isInitial);\n\n    animation.addEventListener(MC.S_CANCEL, cancelHandler);\n    animation.addEventListener(\"finish\", () =>\n      animation.removeEventListener(MC.S_CANCEL, cancelHandler),\n    );\n  }\n};\n\n/* istanbul ignore next */ // jsdom doesn't support Web Animations\nconst onAnimationCancel = (\n  event: AnimationPlaybackEvent,\n  animation: CSSAnimation,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  // setup again the new animation\n  debug: logger?.debug9(\"Animation cancelled, re-setting up new one\");\n  const target = MH.targetOf(event);\n  if (!MH.isInstanceOf(target, Animation)) {\n    return;\n  }\n\n  const effect = target.effect;\n  if (!MH.isInstanceOf(effect, KeyframeEffect)) {\n    return;\n  }\n\n  for (const newAnimation of MH.targetOf(effect)?.getAnimations() || []) {\n    if (\n      MH.isInstanceOf(newAnimation, CSSAnimation) &&\n      newAnimation.animationName === animation.animationName\n    ) {\n      setupAnimation(newAnimation, direction, logger, isInitial);\n      break;\n    }\n  }\n};\n\nconst setupAnimationLegacy = (\n  element: Element,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  const isBackward = hasClass(element, MC.PREFIX_ANIMATE_REVERSE);\n  const isPaused = hasClass(element, MC.PREFIX_ANIMATE_PAUSE);\n\n  const pauseTillReady = !isPageReady();\n\n  const goBackwards =\n    direction === GO_BACKWARD || (direction === GO_TOGGLE && !isBackward);\n\n  const doPause = isInitial || pauseTillReady;\n\n  debug: logger?.debug9(\"Setting up legacy animations\", element, {\n    direction,\n    isBackward,\n    isPaused,\n    goBackwards,\n    doPause,\n  });\n\n  if (goBackwards === isBackward && doPause === isPaused) {\n    // nothing to do\n    debug: logger?.debug9(\"No need to reset or pause animation\");\n    return;\n  }\n\n  resetCssAnimationsNow(element);\n\n  removeClassesNow(element, MC.PREFIX_ANIMATE_PAUSE, MC.PREFIX_ANIMATE_REVERSE);\n  addClassesNow(\n    element,\n    ...(goBackwards ? [MC.PREFIX_ANIMATE_REVERSE] : []),\n    ...(doPause ? [MC.PREFIX_ANIMATE_PAUSE] : []),\n  );\n\n  if (!isInitial && pauseTillReady) {\n    waitForPageReady().then(() =>\n      removeClasses(element, MC.PREFIX_ANIMATE_PAUSE),\n    );\n  }\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Animation\n * {@link AnimatePlay} and {@link AnimatePause} resume or pause all animations\n * on the given element. They work with CSS or Web Animations.\n *\n * {@link Actions.Animate | Animate} plays or reverses all animations on the\n * given element. It works with CSS or Web Animations.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  iterateAnimations,\n  resetCssAnimationsNow,\n} from \"@lisn/utils/animations\";\nimport {\n  hasClass,\n  addClassesNow,\n  removeClassesNow,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Resumes or pauses all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it resets and pauses the animations as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate-play\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Play/pause</button>\n * <div data-lisn-on-click=\"@animate-play +target=#btn\"></div>\n * ```\n *\n * @category Animation\n */\nexport class AnimatePlay implements Action {\n  /**\n   * Resumes the animations without resetting them.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Pauses the animations without resetting them.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Resumes the animations if paused, otherwise pauses them.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate-play\", (element) => new AnimatePlay(element));\n  }\n\n  constructor(element: Element) {\n    const { _play, _pause, _toggle } = getMethods(element);\n\n    // initial state is 0% and paused\n    animate(element, PAUSE, true);\n\n    this.do = _play;\n    this.undo = _pause;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Pauses or resumes all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it plays the animations as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate-pause\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Play/pause</button>\n * <div data-lisn-on-click=\"@animate-pause +target=#btn\"></div>\n * ```\n *\n * @category Animation\n */\nexport class AnimatePause implements Action {\n  /**\n   * Pauses the animations without resetting them.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Resumes the animations without resetting them.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Resumes the animations if paused, otherwise pauses them.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate-pause\", (element) => new AnimatePause(element));\n  }\n\n  constructor(element: Element) {\n    const { _play, _pause, _toggle } = getMethods(element);\n\n    // Initial state is playing\n    _play();\n\n    this.do = _pause;\n    this.undo = _play;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\ntype AnimateAction = typeof PLAY | typeof PAUSE | typeof TOGGLE;\n\nconst PLAY = 0;\nconst PAUSE = 1;\nconst TOGGLE = 2;\n\nconst getMethods = (element: Element) => {\n  return {\n    _play: () => animate(element, PLAY),\n    _pause: () => animate(element, PAUSE),\n    _toggle: () => animate(element, TOGGLE),\n  };\n};\n\nconst animate = (\n  element: Element,\n  action: AnimateAction,\n  isInitial = false,\n) => {\n  return iterateAnimations(\n    element,\n    /* istanbul ignore next */ // jsdom doesn't support Web Animations\n    (animation) => {\n      const isPaused = animation.playState === \"paused\";\n      if (action === PLAY || (isPaused && action === TOGGLE)) {\n        animation.play();\n      } else {\n        animation.pause();\n      }\n    },\n    (element) => {\n      if (isInitial) {\n        resetCssAnimationsNow(element);\n      }\n\n      const isPaused = hasClass(element, MC.PREFIX_ANIMATE_PAUSE);\n      if (action === PLAY || (isPaused && action === TOGGLE)) {\n        removeClassesNow(element, MC.PREFIX_ANIMATE_PAUSE);\n      } else {\n        addClassesNow(element, MC.PREFIX_ANIMATE_PAUSE);\n      }\n    },\n    isInitial,\n  );\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Showing/hiding elements\n * {@link Display} and {@link Undisplay} displays or \"undisplays\" (display:\n * none) the given element.\n *\n * {@link Actions.Show | Show} and {@link Actions.Hide | Hide} show or hide the\n * given element with a smooth fading transition.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  displayElement,\n  displayElementNow,\n  undisplayElement,\n  undisplayElementNow,\n  toggleDisplayElement,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Displays or \"undisplays\" (display: none) the given element.\n *\n * **IMPORTANT:** When constructed, it adds `display: none` to the element as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"display\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Display/undisplay</button>\n * <div data-lisn-on-click=\"@display +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Display implements Action {\n  /**\n   * It reverts the element to its original `display` property.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Sets `display: none` on the element.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Displays the element if it's \"undisplayed\", otherwise \"undisplays\" it.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"display\", (element) => new Display(element));\n  }\n\n  constructor(element: Element) {\n    undisplayElementNow(element); // initial state\n\n    const { _display, _undisplay, _toggle } = getMethods(element);\n    this.do = _display;\n    this.undo = _undisplay;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * \"Undisplays\" (display: none) or displays the given element.\n *\n * **IMPORTANT:** When constructed, it removes the `lisn-undisplay` class if\n * present on the element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"undisplay\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Display/undisplay</button>\n * <div data-lisn-on-click=\"@undisplay +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Undisplay implements Action {\n  /**\n   * Sets `display: none` on the element.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * It reverts the element to its original `display` property.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Displays the element if it's \"undisplayed\", otherwise \"undisplays\" it.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"undisplay\", (element) => new Undisplay(element));\n  }\n\n  constructor(element: Element) {\n    displayElementNow(element); // initial state\n\n    const { _display, _undisplay, _toggle } = getMethods(element);\n    this.do = _undisplay;\n    this.undo = _display;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  return {\n    _display: async () => {\n      await displayElement(element); // ignore return val\n    },\n\n    _undisplay: async () => {\n      await undisplayElement(element); // ignore return val\n    },\n\n    _toggle: async () => {\n      await toggleDisplayElement(element); // ignore return val\n    },\n  };\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Searching for reference elements\n * The functions allow you to find elements that match a given string\n * specification.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { logError } from \"@lisn/utils/log\";\n\n/**\n * Get the element that matches the given reference specification.\n *\n * The specification is of the form:\n *\n * ```\n * <FullSpec> ::=\n *     <Relation> \".\" <ClassName>  |\n *     <Relation> [\"-\" <ReferenceName>] |\n *     #<DOM_ID>\n *\n * <Relation> :==\n *     \"next\"  |\n *     \"prev\"  |\n *     \"this\"  |\n *     \"first\" |\n *     \"last\"\n * ```\n *\n * - `<DOM_ID>` is the unique ID of the element\n * - `<ClassName>` is a CSS class on the element\n * - `<ReferenceName>` is the value of the `data-lisn-ref` attribute on the\n *   element you are targeting. If not given, defaults to the value of the\n *   `data-lisn-ref` attribute on `thisElement`.\n *\n * There now follows an explanation of how \"next\", \"prev\", \"this\", \"first\" and\n * \"last\" search the DOM:\n * - \"next\": the tree is search in document order (depth first, then breadth),\n *   so the returned element could be a descendant of `thisElement`\n * - \"prev\": the tree is search in document order (depth first, then breadth),\n *   but excluding ancestors of `thisElement`, so the returned element is\n *   guaranteed to _not_ be an ancestor or descendant of `thisElement`.\n * - \"this\": if the given element itself matches the specification, it is\n *   returned, otherwise the closest ancestor of the given element that matches\n *   the specification\n * - \"first\": the first element matching; the tree is search in document order\n *   (depth first, then breadth).\n * - \"last\": the last element matching; the tree is search in document order\n *   (depth first, then breadth).\n *\n * @category DOM: Searching for reference elements\n *\n * @param {} thisElement The element to search relative to\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                        If the specification is invalid or if thisElement is\n *                        not given for a specification of \"next\", \"prev\" or \"this\"\n */\nexport const getReferenceElement = (\n  spec: string,\n  thisElement: Element,\n): Element | null => {\n  if (!spec) {\n    return thisElement;\n  }\n\n  if (spec[0] === \"#\") {\n    // element ID\n    const referenceElement = MH.getElementById(spec.slice(1));\n    if (!referenceElement) {\n      return null;\n    }\n    return referenceElement;\n  }\n\n  const relation = [\"next\", \"prev\", \"this\", \"first\", \"last\"].find(\n    (p) => spec.startsWith(`${p}.`) || spec.startsWith(`${p}-`) || spec === p,\n  );\n\n  if (!relation) {\n    throw MH.usageError(`Invalid search specification '${spec}'`);\n  }\n\n  const rest = spec.slice(MH.lengthOf(relation));\n  const matchOp = rest.slice(0, 1);\n  let refOrCls = rest.slice(1);\n\n  let selector: string;\n  if (matchOp === \".\") {\n    selector = matchOp + refOrCls;\n  } else {\n    if (!refOrCls) {\n      refOrCls = getData(thisElement, PREFIX_REF) || \"\";\n    }\n\n    if (!refOrCls) {\n      throw MH.usageError(`No reference name in '${spec}'`);\n    }\n\n    selector = `[${DATA_REF}=\"${refOrCls}\"]`;\n  }\n\n  let referenceElement;\n  if (relation === \"first\") {\n    referenceElement = getFirstReferenceElement(selector);\n  } else if (relation === \"last\") {\n    referenceElement = getLastReferenceElement(selector);\n  } else {\n    if (relation === \"this\") {\n      referenceElement = getThisReferenceElement(selector, thisElement);\n    } else if (relation === \"next\") {\n      referenceElement = getNextReferenceElement(selector, thisElement);\n    } else if (relation === \"prev\") {\n      referenceElement = getPrevReferenceElement(selector, thisElement);\n    } else {\n      /* istanbul ignore next */ {\n        logError(MH.bugError(`Unhandled relation case ${relation}`));\n        return null;\n      }\n    }\n  }\n\n  if (!referenceElement) {\n    return null;\n  }\n\n  return referenceElement;\n};\n\n/**\n * Like {@link getReferenceElement} excepts if no element matches the\n * specification if will wait for at most the given time for such an element.\n *\n * @category DOM: Searching for reference elements\n */\nexport const waitForReferenceElement = (\n  spec: string,\n  thisElement: Element,\n  timeout = 200,\n) => waitForElement(() => getReferenceElement(spec, thisElement), timeout);\n\n// ----------------------------------------\n\nconst PREFIX_REF = MH.prefixName(\"ref\");\nconst DATA_REF = MH.prefixData(PREFIX_REF);\n\nconst getAllReferenceElements = (\n  selector: string,\n): NodeListOf<Element> | null => MH.docQuerySelectorAll(selector);\n\nconst getFirstReferenceElement = (selector: string): Element | null =>\n  MH.docQuerySelector(selector);\n\nconst getLastReferenceElement = (selector: string): Element | null => {\n  const allRefs = getAllReferenceElements(selector);\n  return (allRefs && allRefs[MH.lengthOf(allRefs) - 1]) || null;\n};\n\nconst getThisReferenceElement = (\n  selector: string,\n  thisElement: Element,\n): Element | null => thisElement.closest(selector);\n\nconst getNextReferenceElement = (selector: string, thisElement: Element) =>\n  getNextOrPrevReferenceElement(selector, thisElement, false);\n\nconst getPrevReferenceElement = (selector: string, thisElement: Element) =>\n  getNextOrPrevReferenceElement(selector, thisElement, true);\n\nconst getNextOrPrevReferenceElement = (\n  selector: string,\n  thisElement: Element,\n  goBackward: boolean,\n): Element | null => {\n  thisElement = getThisReferenceElement(selector, thisElement) || thisElement;\n\n  if (!MH.getDoc().contains(thisElement)) {\n    return null;\n  }\n\n  const allRefs = getAllReferenceElements(selector);\n  if (!allRefs) {\n    return null;\n  }\n\n  const numRefs = MH.lengthOf(allRefs);\n  let refIndex = goBackward ? numRefs - 1 : -1;\n  for (let i = 0; i < numRefs; i++) {\n    const currentIsAfter = MH.isNodeBAfterA(thisElement, allRefs[i]);\n\n    // As soon as we find either the starting element or the first element\n    // that follows it, stop iteration.\n    // - If we're looking for the previous reference, then take the previous\n    //   element in the iteration.\n    // - Otherwise, if the current element in the iteration is the same as the\n    //   starting one, then take either the next element in the iteration.\n    //   - Otherwise, (if the current element follows the starting one, as\n    //     would happen if the starting element was not in the list of matched\n    //     elements, take the current element in the iteration.\n    if (allRefs[i] === thisElement || currentIsAfter) {\n      refIndex = i + (goBackward ? -1 : currentIsAfter ? 0 : 1);\n      break;\n    }\n  }\n\n  return allRefs[refIndex] || null;\n};\n","/**\n * ## Specification for the HTML API for triggers\n *\n * The following describes the general syntax when using the HTML API and\n * automatic widgets\n * ({@link Settings.settings.autoWidgets | settings.autoWidgets} is true)\n * specifically for triggers and actions.\n *\n * A trigger specification should be given as a\n * `data-lisn-on-<TriggerName>=\"<TriggerSpecList>\"` attribute.\n * A fallback option of using a CSS class of the form\n * `lisn-on-<TriggerName>--<TriggerSpec>` is also supported but not recommended.\n *\n * The general specification for a trigger is of the form:\n *\n * ```\n * <TriggerSpecList> ::= <TriggerSpec> { \";\" <TriggerSpec> }\n *\n * <TriggerSpec> ::= [ <TriggerArg> { \",\" <TriggerArg> } ]\n *                   \"@\" <ActionSpec> { \"@\" <ActionSpec> }\n *                   { \"+\" <TriggerOption> }\n *\n * <TriggerOption> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n *\n * <ActionSpec> ::= <ActionName> [ \":\" <ActionArgOrOption> { \",\" <ActionArgOrOption> } ]\n *\n * <ActionArgOrOption> ::= <ActionArg> | <OptionName> \"=\" <OptionValue>\n * ```\n *\n * where `<TriggerArg>` is the particular trigger's main argument, which could\n * be required or optional (and not all triggers accept an argument). See each\n * trigger's specification for their arguments and options.\n *\n * Also refer to each action for their accepted arguments and/or options if any.\n *\n * **NOTE:**\n *\n * There can be 0 or more spaces around any of the separator characters.\n *\n * At least one action (with a preceding \"@\" character) is always required.\n *\n * The characters \";\", \",\", \"=\", \"@\", \"+\" and \":\" are reserved separators and\n * cannot be used literally as part of an argument or option value.\n *\n * @module Triggers\n *\n * @categoryDescription Manual run\n * {@link Trigger} is the base trigger class that you can extend when building\n * custom triggers and it also registers a trigger that needs to be run\n * manually (by e.g. the {@link Actions.Run | Run} action).\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString, randId, splitOn } from \"@lisn/utils/text\";\nimport {\n  validateString,\n  validateNumber,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { Action, fetchAction } from \"@lisn/actions/action\";\n\nimport {\n  Widget,\n  WidgetConfigValidator,\n  WidgetConfigValidatorFunc,\n  WidgetConfigAsyncValidatorObject,\n  registerWidget,\n  fetchWidgetConfig,\n} from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link Trigger} is the base trigger class that you can extend when building\n * custom triggers and it also registers a trigger that needs to be run\n * manually (by e.g. the {@link Actions.Run | Run} action).\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * @example\n * Show the element 1000ms after the first time the trigger is run.\n *\n * ```html\n * <div data-lisn-on-run=\"@show +once +delay=1000\"></div>\n * ```\n *\n * @category Manual run\n */\nexport class Trigger extends Widget {\n  /**\n   * \"Do\"es all the {@link Action}s linked to the trigger.\n   */\n  readonly run: () => Promise<void>;\n\n  /**\n   * \"Undo\"es all the {@link Action}s linked to the trigger.\n   */\n  readonly reverse: () => Promise<void>;\n\n  /**\n   * \"Toggle\"s all the {@link Action}s linked to the trigger.\n   */\n  readonly toggle: () => Promise<void>;\n\n  /**\n   * Returns the trigger's actions.\n   */\n  readonly getActions: () => Action[];\n\n  /**\n   * Returns the trigger config.\n   */\n  readonly getConfig: () => TriggerConfig;\n\n  static get(element: Element, id: string): Trigger | null {\n    const instance = super.get(element, id);\n    if (MH.isInstanceOf(instance, Trigger)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerTrigger(\n      \"run\",\n      (element, a, actions, config) => new Trigger(element, actions, config),\n      {},\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config?: TriggerConfig) {\n    super(element, config);\n\n    const logger = debug\n      ? new debug.Logger({\n          name: `Trigger-${formatAsString(element)}`,\n          logAtCreation: { actions, config },\n        })\n      : null;\n\n    const once = config?.once ?? false;\n    const oneWay = config?.oneWay ?? false;\n    const delay = config?.delay || 0;\n    const doDelay = config?.doDelay ?? delay;\n    const undoDelay = config?.undoDelay ?? delay;\n\n    let lastCallId: string;\n    // false if next should be do; true if next should be undo.\n    // Used for determining delays only.\n    let toggleState = false;\n\n    const callActions = async (\n      delay: number,\n      callFn: (action: Action) => void,\n      newToggleState: boolean,\n    ) => {\n      if (this.isDisabled()) {\n        return;\n      }\n\n      const myCallId = randId();\n      lastCallId = myCallId;\n      debug: logger?.debug10(\n        `callActions [${myCallId}] (new toggle state ${newToggleState})`,\n        callFn,\n      );\n\n      if (delay) {\n        await waitForDelay(delay);\n        if (lastCallId !== myCallId) {\n          // overriden by subsequent call\n          debug: logger?.debug10(\n            `callActions [${myCallId}]: overriden by ${lastCallId}`,\n          );\n          return;\n        }\n      }\n\n      for (const action of actions) {\n        debug: logger?.debug10(`callActions [${myCallId}]`, action);\n        callFn(action);\n      }\n\n      toggleState = newToggleState;\n\n      if (toggleState && once) {\n        MH.remove(run);\n        MH.remove(reverse);\n        MH.remove(toggle);\n      }\n    };\n\n    const run = wrapCallback(() => {\n      callActions(\n        doDelay,\n        (action) => {\n          action.do();\n        },\n        true,\n      ); // don't await\n    });\n\n    const reverse = wrapCallback(() => {\n      if (!oneWay) {\n        callActions(\n          undoDelay,\n          (action) => {\n            action.undo();\n          },\n          false,\n        ); // don't await\n      }\n    });\n\n    const toggle = wrapCallback(() => {\n      callActions(\n        toggleState ? undoDelay : doDelay,\n        (action) => {\n          action[MC.S_TOGGLE]();\n        },\n        !toggleState,\n      ); // don't await\n    });\n\n    // ----------\n\n    this.run = run.invoke;\n    this.reverse = reverse.invoke;\n    this[MC.S_TOGGLE] = oneWay ? run.invoke : toggle.invoke;\n    this.getActions = () => [...actions]; // copy\n    this.getConfig = () => MH.copyObject(config || {});\n  }\n}\n\n/**\n * @interface\n */\nexport type TriggerConfig = {\n  /**\n   * An ID for the trigger so that it can be looked up by ID. It has to be\n   * unique for each element, but you can use the same ID on different\n   * elements.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * If true, the trigger will run at most once. This will result in the `run`\n   * or `toggle` methods removing all three of `run`, `reverse` and `toggle`\n   * when called, so that the actions are done at most once.\n   *\n   * @defaultValue false\n   */\n  once?: boolean;\n\n  /**\n   * If true, then the `reverse` method of the trigger will do nothing and the\n   * `toggle` method will always do the actions, i.e. will be equivalent to\n   * `run`.\n   *\n   * @defaultValue false\n   */\n  oneWay?: boolean;\n\n  /**\n   * Delay in milliseconds before doing, undoing or toggling actions.\n   *\n   * @defaultValue 0\n   */\n  delay?: number;\n\n  /**\n   * Delay in milliseconds before doing actions.\n   *\n   * @defaultValue {@link TriggerConfig.delay}\n   */\n  doDelay?: number;\n\n  /**\n   * Delay in milliseconds before undoing actions.\n   *\n   * @defaultValue {@link TriggerConfig.delay}\n   */\n  undoDelay?: number;\n\n  /**\n   * The element to instantiate all actions on this trigger for.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  actOn?: Element;\n};\n\nexport type TriggerCreateFn<Config extends TriggerConfig> = (\n  element: Element,\n  args: string[],\n  actions: Action[],\n  config: Config,\n) => Trigger | Promise<Trigger>;\n\n/**\n * Registers the given trigger as a widget to be automatically configured for\n * all elements that have a trigger specification with the given name.\n *\n * A trigger specification can be given as a\n * `data-lisn-on-<TriggerName>=\"<TriggerSpec> { \";\" <TriggerSpec> }\"` attribute\n * or as one or more `lisn-on-<TriggerName>--<TriggerSpec>` classes.\n *\n * See the top of the {@link Triggers} page for an explanation of `<TriggerSpec>`.\n *\n * Using classes instead of attributes is not recommended and only available as\n * a fallback option.\n *\n * **IMPORTANT:** If a trigger by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param {} name       The name of the trigger. Should be in kebab-case.\n * @param {} newTrigger Called for every trigger specification on any element\n *                      that has one or more trigger specifications.\n * @param {} configValidator\n *                      A validator object, or a function that returns such an\n *                      object, for all options that are specific to the\n *                      trigger. Base options (in {@link TriggerConfig}) will\n *                      be parsed automatically and don't need to be handled by\n *                      `configValidator`.\n *                      If the parameter is a function, it will be called with\n *                      the element on which the trigger is being defined.\n *\n * @see {@link registerWidget}\n */\nexport const registerTrigger = <Config extends TriggerConfig = TriggerConfig>(\n  name: string,\n  newTrigger: TriggerCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  const clsPref = MH.prefixName(`on-${name}`);\n\n  const newWidget = async (element: Element) => {\n    const widgets: Widget[] = [];\n    const baseConfigValidator = newBaseConfigValidator(element);\n    const thisConfigValidator = MH.isFunction(configValidator)\n      ? await configValidator(element)\n      : configValidator;\n\n    const allSpecs = splitOn(\n      getData(element, MH.prefixName(`on-${name}`)) ?? \"\",\n      TRIGGER_SEP,\n      true,\n    );\n\n    for (const cls of MH.classList(element)) {\n      if (cls.startsWith(`${clsPref}--`)) {\n        allSpecs.push(cls.slice(MH.lengthOf(clsPref) + 2));\n      }\n    }\n\n    for (const spec of allSpecs) {\n      const [tmp, configSpec] = splitOn(spec, OPTION_PREF_CHAR, true, 1);\n      const [argSpec, allActionSpecs] = splitOn(tmp, ACTION_PREF_CHAR, true, 1);\n\n      const args = MH.filterBlank(splitOn(argSpec, \",\", true)) || [];\n\n      const config = await fetchWidgetConfig(\n        configSpec,\n        MH.assign(\n          baseConfigValidator,\n          thisConfigValidator,\n        ) as WidgetConfigAsyncValidatorObject<Required<TriggerConfig> & Config>,\n        OPTION_PREF_CHAR,\n      );\n\n      const actionTarget = config.actOn ?? element;\n\n      const actions = [];\n      for (const actionSpec of splitOn(\n        allActionSpecs || \"\",\n        ACTION_PREF_CHAR,\n        true,\n      )) {\n        const [name, actionArgsAndOptions] = splitOn(\n          actionSpec,\n          ACTION_ARGS_PREF_CHAR,\n          true,\n          1,\n        );\n\n        try {\n          actions.push(\n            await fetchAction(actionTarget, name, actionArgsAndOptions || \"\"),\n          );\n        } catch (err) {\n          if (MH.isInstanceOf(err, LisnUsageError)) {\n            // fetchAction would have logged an error\n            continue;\n          }\n\n          throw err;\n        }\n      }\n\n      widgets.push(await newTrigger(element, args, actions, config));\n    }\n\n    return widgets;\n  };\n\n  registerWidget(name, newWidget, null, {\n    selector: `[class^=\"${clsPref}--\"],[class*=\" ${clsPref}--\"],[data-${clsPref}]`,\n  });\n};\n\n// --------------------\n\nconst TRIGGER_SEP = \";\";\nconst OPTION_PREF_CHAR = \"+\";\nconst ACTION_PREF_CHAR = \"@\";\nconst ACTION_ARGS_PREF_CHAR = \":\";\n\nconst newBaseConfigValidator: WidgetConfigValidatorFunc<TriggerConfig> = (\n  element,\n) => {\n  return {\n    id: validateString,\n    once: validateBoolean,\n    oneWay: validateBoolean,\n    delay: validateNumber,\n    doDelay: validateNumber,\n    undoDelay: validateNumber,\n    actOn: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling triggers\n * {@link Enable} and {@link Disable} enable or disable a list of triggers\n * defined on the given element.\n *\n * {@link Run} runs or reverses a list of triggers defined on the given\n * element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logWarn } from \"@lisn/utils/log\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString } from \"@lisn/utils/text\";\n\nimport { Trigger } from \"@lisn/triggers/trigger\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Enables or disables a list of triggers defined on the given element.\n *\n * **IMPORTANT:** When constructed, it disables all given triggers as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"enable\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button id=\"btn\">Enable/disable</button>\n * <button data-lisn-on-click=\"\n *         @enable=triggerA,triggerB +target=#btn\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-click=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Enable implements Action {\n  /**\n   * Enables the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Disables the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the enabled state on each trigger given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"enable\", (element, ids) => new Enable(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _enable, _disable, _toggleEnable } = getMethods(element, ids);\n    _disable(); // initial state\n\n    this.do = _enable;\n    this.undo = _disable;\n    this[MC.S_TOGGLE] = _toggleEnable;\n  }\n}\n\n/**\n * Disables or enables a list of triggers defined on the given element.\n *\n * **IMPORTANT:** When constructed, it enables all given triggers as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"disable\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button id=\"btn\">Enable/disable</button>\n * <button data-lisn-on-click=\"\n *         @disable=triggerA,triggerB +target=#btn\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-click=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Disable implements Action {\n  /**\n   * Disables the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Enables the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the enabled state on each trigger given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"disable\", (element, ids) => new Disable(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _enable, _disable, _toggleEnable } = getMethods(element, ids);\n    _enable(); // initial state\n\n    this.do = _disable;\n    this.undo = _enable;\n    this[MC.S_TOGGLE] = _toggleEnable;\n  }\n}\n\n/**\n * Runs or reverses a list of triggers defined on the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"run\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button data-lisn-on-click=\"\n *         @run=triggerA,triggerB\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-run=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Run implements Action {\n  /**\n   * Runs the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Reverses the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the triggers with IDs given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"run\", (element, ids) => new Run(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _run, _reverse, _toggle } = getMethods(element, ids);\n\n    this.do = _run;\n    this.undo = _reverse;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element, ids: string[]) => {\n  const triggerPromises = getTriggers(element, ids);\n  const call = async (\n    method:\n      | \"enable\"\n      | \"disable\"\n      | \"toggleEnable\"\n      | \"run\"\n      | \"reverse\"\n      | \"toggle\",\n  ) => {\n    const triggers = await triggerPromises;\n    for (const trigger of triggers) {\n      trigger[method]();\n    }\n  };\n\n  return {\n    _enable: () => call(\"enable\"),\n    _disable: () => call(\"disable\"),\n    _toggleEnable: () => call(\"toggleEnable\"),\n    _run: () => call(\"run\"),\n    _reverse: () => call(\"reverse\"),\n    _toggle: () => call(MC.S_TOGGLE),\n  };\n};\n\nconst getTriggers = async (element: Element, ids: string[]) => {\n  const triggers: Trigger[] = [];\n  if (!MH.lengthOf(ids)) {\n    logWarn(\"At least 1 ID is required for enable action\");\n    return triggers;\n  }\n\n  for (const id of ids) {\n    let trigger = Trigger.get(element, id);\n    if (!trigger) {\n      await waitForDelay(0); // in case it's being processed now\n      trigger = Trigger.get(element, id);\n\n      if (!trigger) {\n        logWarn(\n          `No trigger with ID ${id} for element ${formatAsString(element)}`,\n        );\n        continue;\n      }\n    }\n\n    triggers.push(trigger);\n  }\n\n  return triggers;\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Scrolling\n * {@link ScrollTo} scrolls to the given element or to the previous scroll\n * position.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { CoordinateOffset } from \"@lisn/globals/types\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { validateNumber } from \"@lisn/utils/validation\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * Scrolls to the given element or to the previous scroll position.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"scroll-to\".\n * - Accepted string arguments: none\n * - Accepted options:\n *   - `offsetX`: A number.\n *   - `offsetY`: A number.\n *   - `scrollable`: A string element specification for an element (see\n *     {@link Utils.getReferenceElement | getReferenceElement}). Note that,\n *     unless it's a DOM ID, the specification is parsed relative to the\n *     element being acted on and not the element the trigger is defined on (in\n *     case you've used the `act-on` trigger option).\n *\n * **NOTE:** Do not place a + sign in front of the offset values (just omit it\n * if you want a positive offset). Otherwise it will be interpreted as a\n * trigger option.\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position +10px down:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to: offsetY=10 +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position 10px _down_ and 50px _left_:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to: offsetY=10, offsetX=-50 +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the closest parent element with\n * class `scrollable` to the element's position:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div class=\"scrollable\">\n *   <div data-lisn-on-click=\"@scroll-to: scrollable=this.scrollable +target=#btn\"></div>\n * </div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-ref=\"scrollable\">\n *   <div data-lisn-on-click=\"@scroll-to: scrollable=this-scrollable +target=#btn\"></div>\n * </div>\n * ```\n *\n * @category Scrolling\n */\nexport class ScrollTo implements Action {\n  /**\n   * Scrolls the main scrolling element to the element's position.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Scrolls the main scrolling element to the last scroll position before the\n   * action was {@link do}ne. If the action had never been done, does nothing.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Scrolls the main scrolling element to the element's position, if it's not\n   * already there, or otherwise scrolls the main scrolling element to the\n   * previous saved scroll position.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"scroll-to\",\n      (element, args, config) => {\n        const offset = config\n          ? {\n              left: config.offsetX,\n              top: config.offsetY,\n            }\n          : undefined;\n\n        return new ScrollTo(element, {\n          scrollable: config?.scrollable,\n          offset,\n        });\n      },\n      newConfigValidator,\n    );\n  }\n\n  constructor(element: Element, config?: ScrollToConfig) {\n    const offset = config?.offset;\n    const scrollable = config?.scrollable;\n\n    const watcher = ScrollWatcher.reuse();\n    let prevScrollTop = -1,\n      prevScrollLeft = -1;\n\n    this.do = async () => {\n      const current = await watcher.fetchCurrentScroll();\n      prevScrollTop = current[MC.S_SCROLL_TOP];\n      prevScrollLeft = current[MC.S_SCROLL_LEFT];\n\n      const action = await watcher.scrollTo(element, {\n        offset,\n        scrollable,\n      });\n      await action?.waitFor();\n    };\n\n    this.undo = async () => {\n      if (prevScrollTop !== -1) {\n        const action = await watcher.scrollTo({\n          top: prevScrollTop,\n          left: prevScrollLeft,\n        });\n        await action?.waitFor();\n      }\n    };\n\n    this[MC.S_TOGGLE] = async () => {\n      const start = await watcher.fetchCurrentScroll();\n\n      const canReverse = prevScrollTop !== -1;\n      let hasReversed = false;\n\n      // Try to scroll to the element, but if we're already at it, then reverse\n      // to previous position if any.\n      const altTarget = {\n        top: () => {\n          hasReversed = true;\n          return prevScrollTop;\n        },\n        left: prevScrollLeft,\n      };\n\n      const action = await watcher.scrollTo(\n        element,\n        canReverse ? { altTarget, offset } : { offset },\n      );\n      await action?.waitFor();\n\n      if (!hasReversed) {\n        // We've scrolled to the element, so save the starting position as the\n        // previous one.\n        prevScrollTop = start[MC.S_SCROLL_TOP];\n        prevScrollLeft = start[MC.S_SCROLL_LEFT];\n      }\n    };\n  }\n}\n\n/**\n * @interface\n * @category Scrolling\n */\nexport type ScrollToConfig = {\n  /**\n   * See {@link Utils.ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined // none\n   */\n  offset?: CoordinateOffset;\n\n  /**\n   * See {@link Utils.ScrollToOptions.scrollable}.\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  scrollable?: Element;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<{\n  offsetX: number;\n  offsetY: number;\n  scrollable?: Element;\n}> = (element) => {\n  return {\n    offsetX: (key, value) => validateNumber(key, value) ?? 0,\n    offsetY: (key, value) => validateNumber(key, value) ?? 0,\n    scrollable: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Setting/deleting attributes\n * {@link SetAttribute} sets or deletes an attribute on the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { camelToKebabCase } from \"@lisn/utils/text\";\nimport { validateString } from \"@lisn/utils/validation\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport { WidgetConfigValidatorObject } from \"@lisn/widgets/widget\";\n\n/**\n * Either sets or deletes an attribute, or toggles between two values of an\n * attribute, on the given element.\n *\n * **IMPORTANT:** When constructed, it sets all given attributes on the\n * element to their _OFF_ (undone) state as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"set-attribute\".\n * - Accepted string arguments: name of attribute\n * - Accepted options:\n *   - `on`: A string value for the attribute. Can be blank. Omit this option\n *     in order to have the attribute deleted when the action is done.\n *   - `off`: A string value for the attribute. Can be blank. Omit this option\n *     in order to have the attribute deleted when the action is undone.\n *\n * Note that with the HTML API you can only specify one attribute per action.\n * But of course you can add the same action multiple times per trigger. See\n * examples below.\n *\n * @example\n * This is an overview of the various combinations that you can use to set an\n * attribute to a non-empty value, a blank value or delete the attribute when\n * the action is either done or undone:\n *\n * | Specification                         | Value when done | Value when undone |\n * | ------------------------------------- | --------------- | ----------------- |\n * | @set-attr: attr, on=onVal, off=offVal | \"onVal\"         | \"offVal\"          |\n * | @set-attr: attr, on=value             | \"value\"         | _deleted_         |\n * | @set-attr: attr, off=value            | _deleted_       | \"value\"           |\n * | @set-attr: attr, on=                  | \"\"              | _deleted_         |\n * | @set-attr: attr, off=                 | _deleted_       | \"\"                |\n * | @set-attr: attr, on=value, off=       | \"value\"         | \"\"                |\n * | @set-attr: attr, on= , off=value      | \"\"              | \"value\"           |\n *\n * @example\n * This will set attribute `attrA` to `valueA-ON` and `attrB` to `valueB-ON`\n * when the element enters the viewport and set `attrA` to `valueA-OFF` and\n * `attrB` to `valueB-OFF` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attrA, on=valueA-ON, off=valueA-OFF\n *                         @set-attribute: attrB, on=valueB-ON, off=valueB-OFF\"\n * ></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to `value` when the element enters the\n * viewport and _delete_ the attribute when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=value\"></div>\n * ```\n *\n * @example\n * This will _delete_ attribute `attr` when the element enters the viewport and\n * set it to `value` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, off=value\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to a blank value when the element enters the\n * viewport and _delete_ the attribute when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=\"></div>\n * ```\n *\n * @example\n * This will _delete_ attribute `attr` when the element enters the viewport and\n * set it to a blank value when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, off=\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to `value` when the element enters the\n * viewport and set it to a blank value when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=value, off=\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to a blank value when the element enters the\n * viewport and set it to `value` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=, off=value\"></div>\n * ```\n *\n * @category Setting/deleting attributes\n */\nexport class SetAttribute implements Action {\n  /**\n   * Sets the attribute to its \"ON\" value, or deletes it if that value is null.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Sets the attribute to its \"OFF\" value, or deletes it if that value is null.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the attribute from its \"ON\" to \"OFF\" value or vice versa.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"set-attribute\",\n      (element, args, config) => {\n        return new SetAttribute(element, { [args[0]]: config || {} });\n      },\n      configValidator,\n    );\n  }\n\n  constructor(element: Element, attributes: Attributes) {\n    if (!attributes) {\n      throw MH.usageError(\"Attributes are required\");\n    }\n\n    let isOn = false;\n\n    const setAttrs = async (on: boolean) => {\n      isOn = on;\n\n      await waitForMutateTime();\n\n      for (const attr in attributes) {\n        const value = attributes[attr][on ? \"on\" : \"off\"];\n        const attrName = camelToKebabCase(attr);\n\n        if (MH.isNullish(value)) {\n          MH.delAttr(element, attrName);\n        } else {\n          MH.setAttr(element, attrName, value);\n        }\n      }\n    };\n\n    this.do = () => setAttrs(true);\n\n    this.undo = () => setAttrs(false);\n\n    this[MC.S_TOGGLE] = () => setAttrs(!isOn);\n\n    this.undo(); // initial state\n  }\n}\n\n/**\n * Each key in the object is an attribute name. The `on` value is set when the\n * action is done and the `off` value is set when the action is undone. To set\n * the attribute to an empty value, use an empty string. To _delete_ the\n * attribute, use `null` as the value or simply omit the relevant `on` or `off`\n * key.\n *\n * **IMPORTANT:** Attribute names in camelCase are converted to kebab-case.\n * E.g. `dataFooBar` will translate to `data-foo-bar`.\n *\n * @category Setting/deleting attributes\n */\nexport type Attributes = Record<\n  string,\n  { on?: string | null; off?: string | null }\n>;\n\n// --------------------\n\nconst configValidator: WidgetConfigValidatorObject<Attributes[string]> = {\n  on: validateString,\n  off: validateString,\n};\n","/**\n * @module Actions\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  showElement,\n  hideElement,\n  toggleShowElement,\n  disableInitialTransition,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Shows or hides the given element with a smooth fading transition.\n *\n * **IMPORTANT:** When constructed, it will hide the element as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"show\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Show/hide</button>\n * <div data-lisn-on-click=\"@show +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Show implements Action {\n  /**\n   * Shows the element with a smooth fade in transition.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Hides the element with a smooth fade out transition.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Shows the element if it is hidden, hides it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"show\", (element) => new Show(element));\n  }\n\n  constructor(element: Element) {\n    disableInitialTransition(element);\n    hideElement(element); // initial state\n\n    const { _show, _hide, _toggle } = getMethods(element);\n    this.do = _show;\n    this.undo = _hide;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Hides or shows the given element with a smooth fading transition.\n *\n * **IMPORTANT:** When constructed, it will remove any `lisn-hide` class from\n * the element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"hide\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Show/hide</button>\n * <div data-lisn-on-click=\"@hide +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Hide implements Action {\n  /**\n   * Hides the element with a smooth fade out transition.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Shows the element with a smooth fade in transition.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Shows the element if it is hidden, hides it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"hide\", (element) => new Hide(element));\n  }\n\n  constructor(element: Element) {\n    disableInitialTransition(element);\n    showElement(element); // initial state\n\n    const { _show, _hide, _toggle } = getMethods(element);\n    this.do = _hide;\n    this.undo = _show;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  return {\n    _show: async () => {\n      await showElement(element); // ignore return val\n    },\n\n    _hide: async () => {\n      await hideElement(element); // ignore return val\n    },\n\n    _toggle: async () => {\n      await toggleShowElement(element); // ignore return val\n    },\n  };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Position } from \"@lisn/globals/types\";\n\n/**\n * @category Validation\n */\nexport const isValidPosition = (position: string): position is Position =>\n  MH.includes(POSITIONS as readonly string[], position);\n\n/**\n * @category Validation\n */\nexport const isValidTwoFoldPosition = (\n  position: string,\n): position is `${Position}-${Position}` =>\n  position.match(TWO_FOLD_POSITION_REGEX) !== null;\n\n/**\n * @ignore\n * @internal\n */\nexport const POSITIONS = [\n  MC.S_TOP,\n  MC.S_BOTTOM,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n// --------------------\n\nconst POSITIONS_OPTIONS_STR = \"(\" + POSITIONS.join(\"|\") + \")\";\n\nconst TWO_FOLD_POSITION_REGEX = RegExp(\n  `^${POSITIONS_OPTIONS_STR}-${POSITIONS_OPTIONS_STR}$`,\n);\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { XYDirection, Position } from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  hasClass,\n  addClasses,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n  getData,\n  getBoolData,\n  setData,\n  setDataNow,\n  setBoolData,\n  setBoolDataNow,\n  unsetBoolData,\n  unsetBoolDataNow,\n  delData,\n  delDataNow,\n  setHasModal,\n  delHasModal,\n  getStyleProp,\n  setStyleProp,\n  delStyleProp,\n  getComputedStyleProp,\n  getMaxTransitionDuration,\n} from \"@lisn/utils/css-alter\";\nimport {\n  wrapElement,\n  wrapElementNow,\n  moveElement,\n  moveElementNow,\n  replaceElementNow,\n  getOrAssignID,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { keyWithMaxVal } from \"@lisn/utils/math\";\nimport { toBool, toArrayIfSingle } from \"@lisn/utils/misc\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { isValidPosition, isValidTwoFoldPosition } from \"@lisn/utils/position\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport {\n  validateStrList,\n  validateBoolean,\n  validateBooleanOrString,\n  validateString,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\nimport { ViewWatcher, ViewData } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetHandler,\n  WidgetCallback,\n  WidgetConfigValidator,\n  WidgetConfigValidatorObject,\n  registerWidget,\n  getWidgetConfig,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/* ********************\n * Base Openable\n * ********************/\n\nexport type OpenableCreateFn<Config extends Record<string, unknown>> = (\n  element: HTMLElement,\n  config?: Config,\n) => Openable;\n\n/**\n * Enables automatic setting up of an {@link Openable} widget from an\n * elements matching its content element selector (`[data-lisn-<name>]` or\n * `.lisn-<name>`).\n *\n * The name you specify here should generally be the same name you pass in\n * {@link OpenableProperties.name | options.name} to the\n * {@link Openable.constructor} but it does not need to be the same.\n *\n * @param {} name        The name of the openable. Should be in kebab-case.\n * @param {} newOpenable Called for every element matching the selector.\n * @param {} configValidator\n *                        A validator object, or a function that returns such\n *                        an object, for all options supported by the widget.\n *\n * @see {@link registerWidget}\n */\nexport const registerOpenable = <Config extends Record<string, unknown>>(\n  name: string,\n  newOpenable: OpenableCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  registerWidget(\n    name,\n    (element, config) => {\n      if (MH.isHTMLElement(element)) {\n        if (!Openable.get(element)) {\n          return newOpenable(element, config);\n        }\n      } else {\n        logError(MH.usageError(\"Openable widget supports only HTMLElement\"));\n      }\n\n      return null;\n    },\n    configValidator,\n  );\n};\n\n/**\n * {@link Openable} is an abstract base class. You should not directly\n * instantiate it but can inherit it to create your own custom openable widget.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * @see {@link registerOpenable}\n */\nexport abstract class Openable extends Widget {\n  /**\n   * Opens the widget unless it is disabled.\n   */\n  readonly open: () => Promise<void>;\n\n  /**\n   * Closes the widget.\n   */\n  readonly close: () => Promise<void>;\n\n  /**\n   * Closes the widget if it is open, or opens it if it is closed (unless\n   * it is disabled).\n   */\n  readonly toggle: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is open.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onOpen: (handler: WidgetHandler) => void;\n\n  /**\n   * The given handler will be called when the widget is closed.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onClose: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is currently open.\n   */\n  readonly isOpen: () => boolean;\n\n  /**\n   * Returns the root element created by us that wraps the original content\n   * element passed to the constructor. It is located in the content element's\n   * original place.\n   */\n  readonly getRoot: () => HTMLElement;\n\n  /**\n   * Returns the element that was found to be the container. It is the closest\n   * ancestor that has a `lisn-collapsible-container` class, or if no such\n   * ancestor then the immediate parent of the content element.\n   */\n  readonly getContainer: () => HTMLElement | null;\n\n  /**\n   * Returns the trigger elements, if any. Note that these may be wrappers\n   * around the original triggers passed.\n   */\n  readonly getTriggers: () => Element[];\n\n  /**\n   * Returns the trigger elements along with their configuration.\n   */\n  readonly getTriggerConfigs: () => Map<Element, OpenableTriggerConfig>;\n\n  /**\n   * Retrieve an existing widget by its content element or any of its triggers.\n   *\n   * If the element is already part of a configured {@link Openable} widget,\n   * the widget instance is returned. Otherwise `null`.\n   *\n   * Note that trigger elements are not guaranteed to be unique among openable\n   * widgets as the same element can be a trigger for multiple such widgets. If\n   * the element you pass is a trigger, then the last openable widget that was\n   * created for it will be returned.\n   */\n  static get(element: Element): Openable | null {\n    // We manage the instances here since we also map associated elements and\n    // not just the main content element that created the widget.\n    return instances.get(element) || null;\n  }\n\n  constructor(element: HTMLElement, properties: OpenableProperties) {\n    super(element);\n\n    const { isModal, isOffcanvas } = properties;\n\n    const openCallbacks = MH.newSet<WidgetCallback>();\n    const closeCallbacks = MH.newSet<WidgetCallback>();\n\n    let isOpen = false;\n\n    // ----------\n\n    const open = async () => {\n      if (this.isDisabled() || isOpen) {\n        return;\n      }\n\n      isOpen = true;\n\n      for (const callback of openCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        setHasModal();\n      }\n\n      await setBoolData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const close = async () => {\n      if (this.isDisabled() || !isOpen) {\n        return;\n      }\n\n      isOpen = false;\n\n      for (const callback of closeCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        delHasModal();\n      }\n\n      if (isOffcanvas) {\n        scrollWrapperToTop(); // no need to await\n      }\n\n      await unsetBoolData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const scrollWrapperToTop = async () => {\n      // Wait a bit before scrolling since the hiding of the element is animated.\n      // Assume no more than 1s animation time.\n      await waitForDelay(1000);\n      await waitForMeasureTime();\n      MH.elScrollTo(outerWrapper, {\n        top: 0,\n        left: 0,\n      });\n    };\n\n    // --------------------\n\n    this.open = open;\n    this.close = close;\n    this[MC.S_TOGGLE] = () => (isOpen ? close() : open());\n    this.onOpen = (handler) => openCallbacks.add(wrapCallback(handler));\n    this.onClose = (handler) => closeCallbacks.add(wrapCallback(handler));\n    this.isOpen = () => isOpen;\n    this.getRoot = () => root;\n    this.getContainer = () => container;\n    this.getTriggers = () => [...triggers.keys()];\n    this.getTriggerConfigs = () => MH.newMap([...triggers.entries()]);\n\n    this.onDestroy(() => {\n      openCallbacks.clear();\n      closeCallbacks.clear();\n    });\n\n    const { root, container, triggers, outerWrapper } = setupElements(\n      this,\n      element,\n      properties,\n    );\n  }\n}\n\n/**\n * Per-trigger based configuration. Can either be given as an object as the\n * value of the {@link OpenableProperties.triggers} map, or it can be set as a\n * string configuration in the `data-lisn-<name>-trigger` data attribute. See\n * {@link getWidgetConfig} for the syntax.\n *\n * @example\n * ```html\n * <div data-lisn-collapsible-trigger=\"auto-close\n *                                     | icon=right\n *                                     | icon-closed=arrow-down\n *                                     | icon-open=x\"\n * ></div>\n * ```\n *\n * @interface\n */\nexport type OpenableTriggerConfig = {\n  /**\n   * The DOM ID of the trigger. Will result in the trigger element, which could\n   * be a wrapper around the original element (as in the case of\n   * {@link Collapsible} you passed, getting this ID.\n   *\n   * **IMPORTANT:** If the trigger element already has an ID and is not being\n   * wrapped, then this will override the ID and it _won't_ be restored on destroy.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) for the trigger. Will result in the trigger element, which\n   * could be a wrapper around the original element you passed, getting these\n   * classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Override the widget's {@link OpenableProperties.autoClose} for this trigger.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  autoClose?: boolean;\n\n  /**\n   * Open the openable when this trigger is hovered.\n   *\n   * If the device is touch and {@link OpenableProperties.autoClose} is enabled,\n   * the widget will be closed shortly after the pointer leaves both the\n   * trigger and the root element.\n   *\n   * @defaultValue false\n   */\n  hover?: boolean;\n\n  /**\n   * Whether to prevent default click action.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.icon} for this trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  icon?: false | Position;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconClosed} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconOpen} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/**\n * @interface\n */\nexport type OpenableProperties = {\n  /**\n   * The name of the _type_ of the openable. Will set the class prefix to\n   * `lisn-<name>`.\n   */\n  name: string;\n\n  /**\n   * The DOM ID of the openable. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the openable. Will result in the\n   * top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Whether to auto-close the widget on clicking outside the content element\n   * or on pressing Escape key. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * This is true by default for {@link Popup}, {@link Modal} and {@link Offcanvas}.\n   */\n  autoClose: boolean;\n\n  /**\n   * If true, then while the widget is open, the `document.body` will be set to\n   * `overflow: hidden`.\n   *\n   * This is true for {@link Modal}.\n   */\n  isModal: boolean;\n\n  /**\n   * If true, then the content element is assumed to be possibly scrollable and\n   * will be scrolled back to its top after the widget is closed.\n   *\n   * This is true for {@link Modal} and {@link Offcanvas}.\n   */\n  isOffcanvas: boolean;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * This is true by default for {@link Modal} and {@link Offcanvas}.\n   */\n  closeButton: boolean;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way (`<name>` is what is given as\n   * {@link name}):\n   * 1. If the content element has a `data-lisn-<name>-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-<name>-trigger` class or `data-lisn-<name>-trigger` attribute\n   *    and the same `data-lisn-<name>-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-<name>-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-<name>-trigger`\n   *    class or `data-lisn-<name>-trigger` attribute and that do _not_ have a\n   *    `data-lisn-<name>-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Whether to wrap each trigger in a new element.\n   *\n   * @defaultValue false\n   */\n  wrapTriggers?: boolean;\n\n  /**\n   * Hook to run once the widget is fully setup (which happens asynchronously).\n   *\n   * It is called during \"mutate time\". See {@link waitForMutateTime}.\n   *\n   * @defaultValue undefined\n   */\n  onSetup?: () => void;\n};\n\n/* ********************\n * Collapsible\n * ********************/\n\n/**\n * Configures the given element as a {@link Collapsible} widget.\n *\n * The Collapsible widget sets up the given element to be collapsed and\n * expanded upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link CollapsibleConfig.triggers | triggers}.\n *\n * **NOTE:** The Collapsible widget always wraps each trigger element in\n * another element in order to allow positioning the icon, if any.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-collapsible__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-reverse`: `\"true\"` or `\"false\"`\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-collapsible` class or `data-lisn-collapsible` attribute set on the\n *   element that holds the content of the collapsible\n * - `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     collapsible on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close\"` in order to have this trigger\n *     open the collapsible on hover but and override\n *     {@link CollapsibleConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-collapsible-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and the same `data-lisn-collapsible-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple collapsible with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-collapsible-trigger\">Expand</div>\n *   <div class=\"lisn-collapsible\">\n *     Some long content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a collapsible that is partially visible when collapsed, and\n * where the trigger is in a different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all other possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek=50px\n *                               | horizontal=false\n *                               | reverse=false\n *                               | auto-close\n *                               | icon=right\n *                               | icon-closed=arrow-up\"\n *                               | icon-open=arrow-down\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n */\nexport class Collapsible extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_COLLAPSIBLE,\n      (el, config) => new Collapsible(el, config),\n      collapsibleConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: CollapsibleConfig) {\n    const isHorizontal = config?.horizontal;\n    const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n\n    const onSetup = () => {\n      // The triggers here are wrappers around the original which will be\n      // replaced by the original on destroy, so no need to clean up this.\n      for (const [\n        trigger,\n        triggerConfig,\n      ] of this.getTriggerConfigs().entries()) {\n        insertCollapsibleIcon(trigger, triggerConfig, this, config);\n        setDataNow(trigger, MC.PREFIX_ORIENTATION, orientation);\n      }\n    };\n\n    super(element, {\n      name: WIDGET_NAME_COLLAPSIBLE,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? false,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: false,\n      triggers: config?.triggers,\n      wrapTriggers: true,\n      onSetup,\n    });\n\n    const root = this.getRoot();\n    const wrapper = MH.childrenOf(root)[0];\n\n    setData(root, MC.PREFIX_ORIENTATION, orientation);\n    setBoolData(root, PREFIX_REVERSE, config?.reverse ?? false);\n\n    // -------------------- Transitions\n    disableInitialTransition(element, 100);\n    disableInitialTransition(root, 100);\n    disableInitialTransition(wrapper, 100);\n\n    let disableTransitionTimer: ReturnType<typeof setTimeout> | null = null;\n    const tempEnableTransition = async () => {\n      await removeClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n      await removeClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n\n      if (disableTransitionTimer) {\n        MH.clearTimer(disableTransitionTimer);\n      }\n\n      const transitionDuration = await getMaxTransitionDuration(root);\n      disableTransitionTimer = MH.setTimer(() => {\n        if (this.isOpen()) {\n          addClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n          addClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n          disableTransitionTimer = null;\n        }\n      }, transitionDuration);\n    };\n\n    // Disable transitions except during open/close, so that resizing the\n    // window for example doesn't result in lagging width/height transition.\n    this.onOpen(tempEnableTransition);\n    this.onClose(tempEnableTransition);\n\n    // -------------------- Peek\n    const peek = config?.peek;\n    if (peek) {\n      (async () => {\n        let peekSize: string | null = null;\n        if (MH.isString(peek)) {\n          peekSize = peek;\n        } else {\n          peekSize = await getStyleProp(element, VAR_PEEK_SIZE);\n        }\n\n        addClasses(root, PREFIX_PEEK);\n        if (peekSize) {\n          setStyleProp(root, VAR_PEEK_SIZE, peekSize);\n        }\n      })();\n    }\n\n    // -------------------- Width in horizontal mode\n    if (isHorizontal) {\n      const updateWidth = async () => {\n        const width = await getComputedStyleProp(root, MC.S_WIDTH);\n        await setStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH, width);\n      };\n\n      MH.setTimer(updateWidth);\n\n      // Save its current width so that if it contains text, it does not\n      // \"collapse\" and end up super tall.\n      this.onClose(updateWidth);\n\n      this.onOpen(async () => {\n        // Update the content width before opening.\n        await updateWidth();\n\n        // Delete the fixed width property soon after opening to allow it to\n        // resize again while it's open.\n        waitForDelay(2000).then(() => {\n          if (this.isOpen()) {\n            delStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH);\n          }\n        });\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type CollapsibleConfig = {\n  /**\n   * The DOM ID of the collapsible. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the\n   * `data-lisn-collapsible-content-id` attribute used to link triggers to the\n   * collapsible.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the collapsible. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-collapsible-content-id`\n   *    attribute, then it must be a unique (for the current page) ID. In this\n   *    case, the trigger elements will be any element in the document that\n   *    has a `lisn-collapsible-trigger` class or\n   *    `data-lisn-collapsible-trigger` attribute and the same\n   *    `data-lisn-collapsible-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n   *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Open sideways (to the right) instead of downwards (default).\n   *\n   * **IMPORTANT:** In horizontal mode the width of the content element should\n   * not be set (or be `auto`), but you can use `min-width` or `max-width` in\n   * your CSS if needed.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Open to the left if horizontal or upwards if vertical.\n   *\n   * @defaultValue false\n   */\n  reverse?: boolean;\n\n  /**\n   * If not false, part of the content will be visible when the collapsible is\n   * closed. The value can be any valid CSS width specification.\n   *\n   * If you set this to `true`, then the size of the peek window will be\n   * dictated by CSS. By default the size is 100px, but you can change this by\n   * setting `--lisn-peek-size` CSS property on the content element or any of\n   * its ancestors.\n   *\n   * Otherwise, if the value is a string, it must be a CSS length including units.\n   *\n   * @defaultValue false\n   */\n  peek?: boolean | string;\n\n  /**\n   * Automatically close the collapsible when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue false\n   */\n  autoClose?: boolean;\n\n  /**\n   * Add an icon to each trigger.\n   *\n   * If set to something other than `false`, then by default the icon in the\n   * closed state is a plus (+) and in the open state it's a minus (-), but\n   * this can be configured with {@link iconClosed} and {@link iconOpen}.\n   *\n   * @defaultValue false\n   */\n  icon?: false | Position;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the closed state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"plus\"\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the open state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"minus\";\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/* ********************\n * Popup\n * ********************/\n\n/**\n * Configures the given element as a {@link Popup} widget.\n *\n * The Popup widget sets up the given element to be hidden and open in a\n * floating popup upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link PopupConfig.triggers | triggers}.\n *\n * **IMPORTANT:** The popup is positioned absolutely in its container and the\n * position is relative to the container. The container gets `width:\n * fit-content` by default but you can override this in your CSS. The popup\n * also gets a configurable `min-width` set.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-popup__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position (top, bottom, left, top-left, etc)\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-popup` class or `data-lisn-popup` attribute set on the element that\n *   holds the content of the popup\n * - `lisn-popup-trigger` class or `data-lisn-popup-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     popup on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the popup on hover but and override\n *     {@link PopupConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-popup-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and the\n *    same `data-lisn-popup-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-popup-trigger` class or\n *    `data-lisn-popup-trigger` attribute and that do _not_ have a\n *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple popup with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-popup-trigger\">Open</div>\n *   <div class=\"lisn-popup\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a popup that has a close button, and where the trigger is in a\n * different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button | position=bottom | auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n * ```\n */\nexport class Popup extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_POPUP,\n      (el, config) => new Popup(el, config),\n      popupConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: PopupConfig) {\n    super(element, {\n      name: WIDGET_NAME_POPUP,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: config?.closeButton ?? false,\n      triggers: config?.triggers,\n    });\n\n    const root = this.getRoot();\n    const container = this.getContainer();\n\n    const position = config?.position ?? S_AUTO;\n    if (position !== S_AUTO) {\n      setData(root, MC.PREFIX_PLACE, position);\n    }\n\n    if (container && position === S_AUTO) {\n      // Automatic position\n      this.onOpen(async () => {\n        const [contentSize, containerView] = await MH.promiseAll([\n          SizeWatcher.reuse().fetchCurrentSize(element),\n          ViewWatcher.reuse().fetchCurrentView(container),\n        ]);\n\n        const placement = await fetchPopupPlacement(contentSize, containerView);\n        if (placement) {\n          await setData(root, MC.PREFIX_PLACE, placement);\n        }\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type PopupConfig = {\n  /**\n   * The DOM ID of the popup. Will result in the top-level root element that's\n   * created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-popup-content-id`\n   * attribute used to link triggers to the popup.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the popup. Will result in the\n   * top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-popup-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and\n   *    the same `data-lisn-popup-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-popup-trigger`\n   *    class or `data-lisn-popup-trigger` attribute and that do _not_ have a\n   *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue false\n   */\n  closeButton?: boolean;\n\n  /**\n   * Specify the popup position _relative to its container_. Supported\n   * positions include `\"top\"`, `\"bottom\"`, `\"left\"`, `\"right\" `(which result\n   * on the popup being placed on top, bottom, etc, but center-aligned), or\n   * `\"top-left\"`, `\"left-top\"`, etc, as well as `\"auto\"`. If set to `\"auto\"`,\n   * then popup position will be based on the container position within the\n   * viewport at the time it's open.\n   *\n   * @defaultValue \"auto\"\n   */\n  position?: Position | `${Position}-${Position}` | \"auto\";\n\n  /**\n   * Automatically close the popup when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Modal\n * ********************/\n\n/**\n * Configures the given element as a {@link Modal} widget.\n *\n * The Modal widget sets up the given element to be hidden and open in a fixed\n * full-screen modal popup upon activation. Activation can be done manually by\n * calling {@link open} or when clicking on any of the given\n * {@link ModalConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-modal__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-modal` class or `data-lisn-modal` attribute set on the element that\n *   holds the content of the modal\n * - `lisn-modal-trigger` class or `data-lisn-modal-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     modal on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the modal on hover but and override\n *     {@link ModalConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-modal-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and the\n *    same `data-lisn-modal-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-modal-trigger` class or\n *    `data-lisn-modal-trigger` attribute and that do _not_ have a\n *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple modal with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-modal-trigger\">Open</div>\n *   <div class=\"lisn-modal\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a modal that doesn't automatically close on click outside or\n * Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Modal extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_MODAL,\n      (el, config) => new Modal(el, config),\n      modalConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: ModalConfig) {\n    super(element, {\n      name: WIDGET_NAME_MODAL,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: true,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type ModalConfig = {\n  /**\n   * The DOM ID of the modal. Will result in the top-level root element that's\n   * created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-modal-content-id`\n   * attribute used to link triggers to the modal.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the modal. Will result in the\n   * top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-modal-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and\n   *    the same `data-lisn-modal-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-modal-trigger`\n   *    class or `data-lisn-modal-trigger` attribute and that do _not_ have a\n   *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the modal when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * If you set this to false, then you should ensure {@link closeButton} is\n   * enabled.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Offcanvas\n * ********************/\n\n/**\n * Configures the given element as a {@link Offcanvas} widget.\n *\n * The Offcanvas widget sets up the given element to be hidden and open in a\n * fixed overlay (non full-screen) upon activation. Activation can be done\n * manually by calling {@link open} or when clicking on any of the given\n * {@link OffcanvasConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-offcanvas__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position `\"top\"`, `\"bottom\"`, `\"left\"` or\n *   `\"right\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-offcanvas` class or `data-lisn-offcanvas` attribute set on the\n *   element that holds the content of the offcanvas\n * - `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     offcanvas on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the offcanvas on hover but and override\n *     {@link OffcanvasConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and the same `data-lisn-offcanvas-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and that do _not_ have a `data-lisn-offcanvas-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple offcanvas with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-offcanvas-trigger\">Open</div>\n *   <div class=\"lisn-offcanvas\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a offcanvas that doesn't automatically close on click outside\n * or Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"position=top | auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Offcanvas extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_OFFCANVAS,\n      (el, config) => new Offcanvas(el, config),\n      offcanvasConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: OffcanvasConfig) {\n    super(element, {\n      name: WIDGET_NAME_OFFCANVAS,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n\n    const position = config?.position || MC.S_RIGHT;\n    setData(this.getRoot(), MC.PREFIX_PLACE, position);\n  }\n}\n\n/**\n * @interface\n */\nexport type OffcanvasConfig = {\n  /**\n   * The DOM ID of the offcanvas. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-offcanvas-content-id`\n   * attribute used to link triggers to the offcanvas.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the offcanvas. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and the same `data-lisn-offcanvas-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and that do _not_ have a `data-lisn-offcanvas-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Specify the offcanvas position. Supported positions are top, bottom, left,\n   * right.\n   *\n   * @defaultValue \"right\"\n   */\n  position?: Position;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the offcanvas when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n// ------------------------------\n\ntype ElementsCollection = {\n  content: HTMLElement;\n  root: HTMLElement;\n  container: HTMLElement | null;\n  outerWrapper: HTMLElement;\n  triggers: Map<Element, OpenableTriggerConfig>;\n};\n\nconst instances = MH.newWeakMap<Element, Openable>();\n\nconst WIDGET_NAME_COLLAPSIBLE = \"collapsible\";\nconst WIDGET_NAME_POPUP = \"popup\";\nconst WIDGET_NAME_MODAL = \"modal\";\nconst WIDGET_NAME_OFFCANVAS = \"offcanvas\";\n\nconst PREFIX_CLOSE_BTN = MH.prefixName(\"close-button\");\nconst PREFIX_IS_OPEN = MH.prefixName(\"is-open\");\nconst PREFIX_REVERSE = MH.prefixName(MC.S_REVERSE);\nconst PREFIX_PEEK = MH.prefixName(\"peek\");\nconst PREFIX_OPENS_ON_HOVER = MH.prefixName(\"opens-on-hover\");\nconst PREFIX_LINE = MH.prefixName(\"line\");\nconst PREFIX_ICON_POSITION = MH.prefixName(\"icon-position\");\nconst PREFIX_TRIGGER_ICON = MH.prefixName(\"trigger-icon\");\nconst PREFIX_ICON_WRAPPER = MH.prefixName(\"icon-wrapper\");\nconst S_AUTO = \"auto\";\nconst S_ARIA_EXPANDED = MC.ARIA_PREFIX + \"expanded\";\nconst S_ARIA_MODAL = MC.ARIA_PREFIX + \"modal\";\nconst VAR_PEEK_SIZE = MH.prefixCssVar(\"peek-size\");\nconst VAR_JS_COLLAPSIBLE_WIDTH = MH.prefixCssJsVar(\"collapsible-width\");\nconst MIN_CLICK_TIME_AFTER_HOVER_OPEN = 1000;\nconst S_ARROW_UP =\n  `${MC.S_ARROW}-${MC.S_UP}` as `${typeof MC.S_ARROW}-${typeof MC.S_UP}`;\nconst S_ARROW_DOWN =\n  `${MC.S_ARROW}-${MC.S_DOWN}` as `${typeof MC.S_ARROW}-${typeof MC.S_DOWN}`;\nconst S_ARROW_LEFT =\n  `${MC.S_ARROW}-${MC.S_LEFT}` as `${typeof MC.S_ARROW}-${typeof MC.S_LEFT}`;\nconst S_ARROW_RIGHT =\n  `${MC.S_ARROW}-${MC.S_RIGHT}` as `${typeof MC.S_ARROW}-${typeof MC.S_RIGHT}`;\n\nconst ARROW_TYPES = [\n  S_ARROW_UP,\n  S_ARROW_DOWN,\n  S_ARROW_LEFT,\n  S_ARROW_RIGHT,\n] as const;\n\nconst ICON_CLOSED_TYPES = [\"plus\", ...ARROW_TYPES] as const;\nconst ICON_OPEN_TYPES = [\"minus\", \"x\", ...ARROW_TYPES] as const;\ntype IconCloseType = (typeof ICON_CLOSED_TYPES)[number];\ntype IconOpenType = (typeof ICON_OPEN_TYPES)[number];\n\nconst isValidIconClosed = (value: string): value is IconCloseType =>\n  MH.includes(ICON_CLOSED_TYPES, value);\n\nconst isValidIconOpen = (value: string): value is IconOpenType =>\n  MH.includes(ICON_OPEN_TYPES, value);\n\nconst triggerConfigValidator: WidgetConfigValidatorObject<OpenableTriggerConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      value && toBool(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n    hover: validateBoolean,\n  };\n\nconst collapsibleConfigValidator: WidgetConfigValidatorObject<CollapsibleConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    horizontal: validateBoolean,\n    reverse: validateBoolean,\n    peek: validateBooleanOrString,\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      toBool(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n  };\n\nconst popupConfigValidator: WidgetConfigValidatorObject<PopupConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) =>\n    validateString(\n      key,\n      value,\n      (v) => v === S_AUTO || isValidPosition(v) || isValidTwoFoldPosition(v),\n    ),\n  autoClose: validateBoolean,\n};\n\nconst modalConfigValidator: WidgetConfigValidatorObject<ModalConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  autoClose: validateBoolean,\n};\n\nconst offcanvasConfigValidator: WidgetConfigValidatorObject<OffcanvasConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) => validateString(key, value, isValidPosition),\n  autoClose: validateBoolean,\n};\n\nconst getPrefixedNames = (name: string) => {\n  const pref = MH.prefixName(name);\n  return {\n    _root: `${pref}__root`,\n    _overlay: `${pref}__overlay`, // only used for modal/offcanvas\n    _innerWrapper: `${pref}__inner-wrapper`,\n    _outerWrapper: `${pref}__outer-wrapper`,\n    _content: `${pref}__content`,\n    _container: `${pref}__container`,\n    _trigger: `${pref}__trigger`,\n    // Use different classes for styling to the ones used for auto-discovering\n    // elements, so that re-creating existing widgets can correctly find the\n    // elements to be used by the new widget synchronously before the current\n    // one is destroyed.\n    _containerForSelect: `${pref}-container`,\n    _triggerForSelect: `${pref}-trigger`,\n    _contentId: `${pref}-content-id`,\n  };\n};\n\nconst findContainer = (content: Element, cls: string) => {\n  const currWidget = instances.get(content);\n  // If there's an existing widget that we're about to destroy, the content\n  // element will be wrapped in several elements and won't be restored until\n  // the next mutate time. In that case, to correctly determine the container\n  // element, use the current widget's root element, which is located in the\n  // content element's original place.\n  let childRef = currWidget?.getRoot() || content;\n  if (!MH.parentOf(childRef)) {\n    // The current widget is not yet initialized (i.e. we are re-creating it\n    // immediately after it was constructed)\n    childRef = content;\n  }\n\n  // Find the content container\n  let container: HTMLElement | null = childRef.closest(`.${cls}`);\n  if (!container) {\n    container = MH.parentOf(childRef);\n  }\n\n  return container;\n};\n\nconst findTriggers = (\n  content: Element,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const container = findContainer(content, prefixedNames._containerForSelect);\n  // jsdom does not like the below selector when suffixed by [data-*] or :not()...\n  // const triggerSelector = `:is(.${prefixedNames._triggerForSelect},[data-${prefixedNames._triggerForSelect}])`;\n  // So use this:\n  const getTriggerSelector = (suffix: string) =>\n    `.${prefixedNames._triggerForSelect}${suffix},` +\n    `[data-${prefixedNames._triggerForSelect}]${suffix}`;\n\n  const contentId = getData(content, prefixedNames._contentId);\n  let triggers: Element[] = [];\n\n  if (contentId) {\n    triggers = [\n      ...MH.docQuerySelectorAll(\n        getTriggerSelector(`[data-${prefixedNames._contentId}=\"${contentId}\"]`),\n      ),\n    ];\n  } else if (container) {\n    triggers = [\n      ...MH.arrayFrom(\n        MH.querySelectorAll(\n          container,\n          getTriggerSelector(`:not([data-${prefixedNames._contentId}])`),\n        ),\n      ).filter((t) => !content.contains(t)),\n    ];\n  }\n\n  return triggers;\n};\n\nconst getTriggersFrom = (\n  content: Element,\n  inputTriggers:\n    | Element[]\n    | Map<Element, OpenableTriggerConfig | null>\n    | undefined,\n  wrapTriggers: boolean,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const triggerMap = MH.newMap<Element, OpenableTriggerConfig>();\n\n  inputTriggers = inputTriggers || findTriggers(content, prefixedNames);\n\n  const addTrigger = (\n    trigger: Element,\n    triggerConfig: OpenableTriggerConfig,\n  ) => {\n    if (wrapTriggers) {\n      const wrapper = MH.createElement(\n        isInlineTag(MH.tagName(trigger)) ? \"span\" : \"div\",\n      );\n      wrapElement(trigger, { wrapper, ignoreMove: true }); // no need to await\n      trigger = wrapper;\n    }\n\n    triggerMap.set(trigger, triggerConfig);\n  };\n\n  if (MH.isArray(inputTriggers)) {\n    for (const trigger of inputTriggers) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(\n          getData(trigger, prefixedNames._triggerForSelect),\n          triggerConfigValidator,\n        ),\n      );\n    }\n  } else if (MH.isInstanceOf(inputTriggers, Map)) {\n    for (const [trigger, triggerConfig] of inputTriggers.entries()) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(triggerConfig, triggerConfigValidator),\n      );\n    }\n  }\n\n  return triggerMap;\n};\n\nconst setupElements = (\n  widget: Openable,\n  content: HTMLElement,\n  properties: OpenableProperties,\n): ElementsCollection => {\n  const prefixedNames = getPrefixedNames(properties.name);\n  const container = findContainer(content, prefixedNames._containerForSelect);\n\n  const wrapTriggers = properties.wrapTriggers ?? false;\n  const triggers = getTriggersFrom(\n    content,\n    properties.triggers,\n    wrapTriggers,\n    prefixedNames,\n  );\n\n  // Create two wrappers\n  const innerWrapper = MH.createElement(\"div\");\n  addClasses(innerWrapper, prefixedNames._innerWrapper);\n\n  const outerWrapper = wrapElementNow(innerWrapper);\n\n  // Setup the root element.\n  // For off-canvas types we need another wrapper to serve as the root and we\n  // need a placeholder element to save the content's original position so it\n  // can be restored on destroy.\n  // Otherwise use outerWrapper for root and insert the root where the content\n  // was.\n  let root: HTMLElement;\n  let placeholder: HTMLElement;\n  if (properties.isOffcanvas) {\n    addClasses(outerWrapper, prefixedNames._outerWrapper);\n    root = wrapElementNow(outerWrapper);\n    placeholder = MH.createElement(\"div\");\n\n    const overlay = MH.createElement(\"div\");\n    addClasses(overlay, prefixedNames._overlay);\n    moveElement(overlay, { to: root });\n  } else {\n    // Otherwise use the outer wrapper as the root\n    root = placeholder = outerWrapper;\n  }\n\n  if (properties.id) {\n    root.id = properties.id;\n  }\n\n  if (properties.className) {\n    addClassesNow(root, ...toArrayIfSingle(properties.className));\n  }\n\n  unsetBoolData(root, PREFIX_IS_OPEN);\n  const domID = getOrAssignID(root, properties.name);\n\n  if (properties.isModal) {\n    MH.setAttr(root, MC.S_ROLE, \"dialog\");\n    MH.setAttr(root, S_ARIA_MODAL);\n  }\n\n  addClasses(root, prefixedNames._root);\n  disableInitialTransition(root);\n\n  // Add a close button?\n  if (properties.closeButton) {\n    const closeBtn = MH.createButton(\"Close\");\n    addClasses(closeBtn, PREFIX_CLOSE_BTN);\n\n    // If autoClose is true, it will be closed on click anyway, because the\n    // close button is outside the content.\n    addEventListenerTo(closeBtn, MC.S_CLICK, () => {\n      widget.close();\n    });\n\n    moveElement(closeBtn, { to: properties.isOffcanvas ? root : innerWrapper });\n  }\n\n  // Transfer the relevant classes/data attrs from content to root element, so\n  // that our CSS can work without :has.\n  // This won't cause forced layout since the root is not yet attached to the\n  // DOM.\n  for (const cls of [\n    settings.lightThemeClassName,\n    settings.darkThemeClassName,\n  ]) {\n    if (hasClass(content, cls)) {\n      addClasses(root, cls);\n    }\n  }\n\n  const elements = {\n    content,\n    root,\n    container,\n    outerWrapper,\n    triggers,\n  };\n\n  // -------------------- Close / destroy hooks\n  widget.onClose(async () => {\n    for (const trigger of triggers.keys()) {\n      delData(trigger, PREFIX_OPENS_ON_HOVER);\n      MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n      await unsetBoolData(trigger, PREFIX_IS_OPEN);\n    }\n  });\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n\n    replaceElementNow(placeholder, content, { ignoreMove: true });\n    moveElementNow(root); // remove\n    removeClassesNow(content, prefixedNames._content);\n\n    if (container) {\n      removeClassesNow(container, prefixedNames._container);\n    }\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      MH.delAttr(trigger, MC.S_ARIA_CONTROLS);\n      MH.delAttr(trigger, S_ARIA_EXPANDED);\n\n      delDataNow(trigger, PREFIX_OPENS_ON_HOVER);\n      delDataNow(trigger, PREFIX_IS_OPEN);\n\n      removeClassesNow(\n        trigger,\n        prefixedNames._trigger,\n        ...(triggerConfig?.className || []),\n      );\n\n      if (trigger.id === triggerConfig?.id) {\n        trigger.id = \"\";\n      }\n\n      if (wrapTriggers) {\n        replaceElementNow(trigger, MH.childrenOf(trigger)[0], {\n          ignoreMove: true,\n        });\n      }\n    }\n\n    triggers.clear();\n\n    for (const el of [content, ...triggers.keys()]) {\n      if (instances.get(el) === widget) {\n        MH.deleteKey(instances, el);\n      }\n    }\n  });\n\n  // -------------------- SETUP\n  // Save the elements so we can lookup the instance\n  const currWidget = instances.get(content);\n  for (const el of [content, ...triggers.keys()]) {\n    instances.set(el, widget);\n  }\n\n  // Wait for the DOMWatcher to be active, which may not be before interactive.\n  waitForInteractive()\n    .then(currWidget?.destroy)\n    .then(waitForMutateTime)\n    .then(() => {\n      if (widget.isDestroyed()) {\n        return;\n      }\n\n      addClassesNow(content, prefixedNames._content);\n\n      if (container) {\n        addClassesNow(container, prefixedNames._container);\n      }\n\n      if (properties.isOffcanvas) {\n        moveElementNow(root, {\n          to: MH.getBody(),\n          ignoreMove: true,\n        });\n      }\n\n      // Move the placeholder element to before the content and then move\n      // content into inner wrapper.\n      moveElementNow(placeholder, {\n        // for not-offcanvas it's also the root\n        to: content,\n        position: \"before\",\n        ignoreMove: true,\n      });\n\n      moveElementNow(content, { to: innerWrapper, ignoreMove: true });\n\n      // Setup the triggers\n      for (const [trigger, triggerConfig] of triggers.entries()) {\n        MH.setAttr(trigger, MC.S_ARIA_CONTROLS, domID);\n        MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n\n        setBoolDataNow(\n          trigger,\n          PREFIX_OPENS_ON_HOVER,\n          triggerConfig[MC.S_HOVER],\n        );\n        unsetBoolDataNow(trigger, PREFIX_IS_OPEN);\n\n        addClassesNow(\n          trigger,\n          prefixedNames._trigger,\n          ...(triggerConfig?.className || []),\n        );\n\n        if (triggerConfig?.id) {\n          trigger.id = triggerConfig.id;\n        }\n      }\n\n      setupListeners(widget, elements, properties, prefixedNames);\n\n      if (properties.onSetup) {\n        properties.onSetup();\n      }\n    });\n\n  return elements;\n};\n\nconst setupListeners = (\n  widget: Openable,\n  elements: ElementsCollection,\n  properties: OpenableProperties,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const { content, root, triggers } = elements;\n  const doc = MH.getDoc();\n\n  let hoverTimeOpened = 0;\n  let isPointerOver = false;\n  let activeTrigger: Element | null = null;\n\n  // ----------\n\n  const isTrigger = (element: Element) =>\n    MH.includes(\n      MH.arrayFrom(triggers.keys()),\n      element.closest(getDefaultWidgetSelector(prefixedNames._trigger)),\n    );\n\n  const shouldPreventDefault = (trigger: Element) =>\n    triggers.get(trigger)?.preventDefault ?? true;\n\n  const usesHover = (trigger: Element) => triggers.get(trigger)?.hover;\n\n  const usesAutoClose = (trigger: Element | null) =>\n    (trigger ? triggers.get(trigger)?.autoClose : null) ?? properties.autoClose;\n\n  // ----------\n\n  const toggleTrigger = (event: Event, openIt?: boolean) => {\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger)) {\n      if (shouldPreventDefault(trigger)) {\n        MH.preventDefault(event);\n      }\n\n      // If a click was fired shortly after opening on hover, ignore\n      if (\n        openIt !== false && // not explicitly asked to close\n        widget.isOpen() &&\n        MH.timeSince(hoverTimeOpened) < MIN_CLICK_TIME_AFTER_HOVER_OPEN\n      ) {\n        return;\n      }\n\n      if (openIt ?? !widget.isOpen()) {\n        // open it\n        activeTrigger = trigger;\n        MH.setAttr(trigger, S_ARIA_EXPANDED); // will be unset on close\n        setBoolData(trigger, PREFIX_IS_OPEN); // will be unset on close\n\n        widget.open(); // no need to await\n\n        if (usesAutoClose(trigger)) {\n          if (usesHover(trigger)) {\n            addEventListenerTo(root, MC.S_POINTERENTER, setIsPointerOver);\n            addEventListenerTo(root, MC.S_POINTERLEAVE, pointerLeft);\n          }\n\n          // auto-close listeners setup by the onOpen handler below\n        }\n      } else {\n        widget.close(); // out onClose handler below will remove listeners\n      }\n    }\n  };\n\n  // ----------\n\n  const setIsPointerOver = () => {\n    isPointerOver = true;\n  };\n\n  // ----------\n\n  const unsetIsPointerOver = (event: Event) => {\n    // Keep it set to true if this is a touch pointer type; otherwise unset\n    isPointerOver = isPointerOver && MH.isTouchPointerEvent(event);\n  };\n\n  // ----------\n\n  const pointerEntered = (event: Event) => {\n    setIsPointerOver();\n    if (!widget.isOpen()) {\n      hoverTimeOpened = MH.timeNow();\n      toggleTrigger(event, true);\n    }\n  };\n\n  // ----------\n\n  const pointerLeft = (event: Event) => {\n    unsetIsPointerOver(event);\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger) && usesAutoClose(trigger)) {\n      MH.setTimer(\n        () => {\n          if (!isPointerOver) {\n            widget.close();\n          }\n        },\n        // use a delay that allows the mouse to move from trigger to content\n        // without closing it\n        // TODO make this user-configurable\n        properties.isOffcanvas ? 300 : 50,\n      );\n    }\n  };\n\n  // ----------\n\n  const closeIfEscape = (event: Event) => {\n    if ((event as KeyboardEvent).key === \"Escape\") {\n      widget.close(); // no need to await\n    }\n  };\n\n  // ----------\n\n  const closeIfClickOutside = (event: Event) => {\n    const target = MH.targetOf(event);\n    if (\n      target === doc ||\n      (MH.isElement(target) &&\n        !content.contains(target) && // outside content\n        !isTrigger(target)) // handled by pointer watcher\n    ) {\n      widget.close();\n    }\n  };\n\n  // ----------\n\n  const maybeSetupAutoCloseListeners = (\n    trigger: Element | null,\n    remove: boolean,\n  ) => {\n    if (usesAutoClose(trigger)) {\n      const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n      addOrRemove(doc, \"keyup\", closeIfEscape);\n\n      // Add a short delay so that we don't catch the bubbling of the click event\n      // that opened the widget.\n      MH.setTimer(() => addOrRemove(doc, MC.S_CLICK, closeIfClickOutside), 100);\n\n      if (trigger && usesHover(trigger)) {\n        addOrRemove(trigger, MC.S_POINTERLEAVE, pointerLeft);\n      }\n    }\n  };\n\n  // ----------\n\n  const setupOrCleanup = (remove: boolean) => {\n    const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      // Always setup click listeners\n      addOrRemove(trigger, MC.S_CLICK, toggleTrigger);\n\n      if (triggerConfig[MC.S_HOVER]) {\n        addOrRemove(trigger, MC.S_POINTERENTER, pointerEntered);\n      }\n    }\n  };\n\n  // ----------\n\n  setupOrCleanup(false);\n\n  widget.onOpen(() => {\n    maybeSetupAutoCloseListeners(activeTrigger, false); // setup listeners if relevant\n  });\n\n  widget.onClose(() => {\n    hoverTimeOpened = 0;\n    isPointerOver = false;\n\n    removeEventListenerFrom(root, MC.S_POINTERENTER, setIsPointerOver);\n    removeEventListenerFrom(root, MC.S_POINTERLEAVE, pointerLeft);\n\n    maybeSetupAutoCloseListeners(activeTrigger, true); // remove listeners if any\n    activeTrigger = null;\n  });\n\n  widget.onDestroy(() => {\n    setupOrCleanup(true); // remove\n  });\n};\n\n// COLLAPSIBLE ------------------------------\n\nconst insertCollapsibleIcon = (\n  trigger: Element,\n  triggerConfig: OpenableTriggerConfig,\n  widget: Collapsible,\n  widgetConfig: CollapsibleConfig | undefined,\n) => {\n  const iconPosition = triggerConfig.icon ?? widgetConfig?.icon;\n  const iconClosed =\n    triggerConfig.iconClosed ?? widgetConfig?.iconClosed ?? \"plus\";\n  const iconOpen = triggerConfig.iconOpen ?? widgetConfig?.iconOpen ?? \"minus\";\n\n  if (iconPosition) {\n    addClasses(trigger, PREFIX_ICON_WRAPPER);\n    setData(trigger, PREFIX_ICON_POSITION, iconPosition);\n\n    const icon = MH.createElement(\"span\");\n    setDataNow(icon, PREFIX_TRIGGER_ICON, iconClosed);\n\n    for (let l = 0; l < 2; l++) {\n      const line = MH.createElement(\"span\");\n      addClassesNow(line, PREFIX_LINE);\n      moveElementNow(line, { to: icon });\n    }\n\n    moveElement(icon, { to: trigger, ignoreMove: true });\n\n    widget.onOpen(() => {\n      if (getBoolData(trigger, PREFIX_IS_OPEN)) {\n        setData(icon, PREFIX_TRIGGER_ICON, iconOpen);\n      }\n    });\n\n    widget.onClose(() => {\n      setData(icon, PREFIX_TRIGGER_ICON, iconClosed);\n    });\n  }\n};\n\n// POPUP ------------------------------\n\nconst fetchPopupPlacement = async (\n  contentSize: SizeData,\n  containerView: ViewData,\n) => {\n  const containerPosition = containerView.relative;\n  const containerTop = containerPosition[MC.S_TOP];\n  const containerBottom = containerPosition[MC.S_BOTTOM];\n  const containerLeft = containerPosition[MC.S_LEFT];\n  const containerRight = containerPosition[MC.S_RIGHT];\n  const containerHMiddle = containerPosition.hMiddle;\n  const containerVMiddle = containerPosition.vMiddle;\n  const vpSize = await fetchViewportSize();\n  const popupWidth = contentSize.border[MC.S_WIDTH] / vpSize[MC.S_WIDTH];\n  const popupHeight = contentSize.border[MC.S_HEIGHT] / vpSize[MC.S_HEIGHT];\n\n  // - Find the maximum of these quantities:\n  //   - containerTop - popupHeight:\n  //     the space on top if placed on top-(left|right|)\n  //   - 1 - (containerBottom + popupHeight):\n  //     the space on bottom be if placed on bottom-(left|right|)\n  //   - containerLeft - popupWidth:\n  //     the space on left if placed on left-(top|bottom|)\n  //   - 1 - (containerRight + popupWidth):\n  //     the space on right if placed on right-(top|bottom|)\n  //\n  // This determines the main placement: top|bottom|left|right\n\n  // Then to determine secondary alignment:\n  // - For top/bottom placement, determine horizontal alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerLeft + popupWidth):\n  //       the space on right if left-aligned\n  //     - containerRight - popupWidth:\n  //       the space on left if right-aligned\n  //     - min(\n  //           containerHMiddle - popupWidth / 2,\n  //           1 - (containerHMiddle + popupWidth / 2),\n  //       ):\n  //       the minimum of the space on either left or right if center-aligned\n  //\n  // - For left/right placement, determine vertical alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerTop + popupHeight):\n  //       the space on bottom if top-aligned\n  //     - containerBottom - popupHeight:\n  //       the space on top if bottom-aligned\n  //     - min(\n  //           containerVMiddle - popupHeight / 2,\n  //           1 - (containerVMiddle + popupHeight / 2),\n  //       ):\n  //       the minimum of the space on either top or bottom if center-aligned\n\n  const placementVars = {\n    top: containerTop - popupHeight,\n    bottom: 1 - (containerBottom + popupHeight),\n    left: containerLeft - popupWidth,\n    right: 1 - (containerRight + popupWidth),\n  };\n\n  const placement = keyWithMaxVal(placementVars);\n  if (placement === undefined) {\n    // container must be out-view and so left/right are NaN\n    return;\n  }\n  let finalPlacement = placement;\n\n  let alignmentVars;\n  switch (placement) {\n    case MC.S_TOP:\n    case MC.S_BOTTOM:\n      alignmentVars = {\n        left: 1 - (containerLeft + popupWidth),\n        right: containerRight - popupWidth,\n        middle: MH.min(\n          containerHMiddle - popupWidth / 2,\n          1 - (containerHMiddle + popupWidth / 2),\n        ),\n      };\n      break;\n\n    case MC.S_LEFT:\n    case MC.S_RIGHT:\n      alignmentVars = {\n        top: 1 - (containerTop + popupHeight),\n        bottom: containerBottom - popupHeight,\n        middle: MH.min(\n          containerVMiddle - popupHeight / 2,\n          1 - (containerVMiddle + popupHeight / 2),\n        ),\n      };\n      break;\n\n    default:\n      return;\n  }\n\n  const alignment = keyWithMaxVal(alignmentVars);\n  if (alignment !== \"middle\") {\n    finalPlacement += \"-\" + alignment;\n  }\n\n  return finalPlacement;\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling openables\n * {@link Open} opens or closes the {@link Openable} widget setup for the given\n * element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { Openable } from \"@lisn/widgets/openable\";\nimport { fetchUniqueWidget } from \"@lisn/widgets/widget\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Opens or closes the {@link Openable} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"open\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-modal\" data-lisn-on-view=\"@open +reference=top:50%\"></div>\n * ```\n *\n * @category Controlling openables\n */\nexport class Open implements Action {\n  /**\n   * Opens the Openable widget setup for the element.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Closes the Openable widget setup for the element.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the Openable widget setup for the element.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"open\", (element) => new Open(element));\n  }\n\n  constructor(element: Element) {\n    const open = (widget: Openable | null) => widget?.open();\n    const close = (widget: Openable | null) => widget?.close();\n    const toggle = (widget: Openable | null) => widget?.toggle();\n\n    const widgetPromise = fetchUniqueWidget(\"openable\", element, Openable);\n\n    this.do = () => widgetPromise.then(open);\n    this.undo = () => widgetPromise.then(close);\n    this[MC.S_TOGGLE] = () => widgetPromise.then(toggle);\n  }\n}\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  addClasses,\n  removeClassesNow,\n  getData,\n  setData,\n  setBoolData,\n  delDataNow,\n  setStyleProp,\n  delStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { isValidInputDevice } from \"@lisn/utils/gesture\";\nimport { toInt } from \"@lisn/utils/math\";\nimport { toBool } from \"@lisn/utils/misc\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport {\n  validateStrList,\n  validateNumber,\n  validateString,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport {\n  GestureWatcher,\n  OnGestureOptions,\n  GestureData,\n} from \"@lisn/watchers/gesture-watcher\";\nimport { ScrollWatcher, ScrollOptions } from \"@lisn/watchers/scroll-watcher\";\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  WidgetCallback,\n  WidgetHandler,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as a {@link Pager} widget.\n *\n * The Pager widget sets up the elements that make up its pages to be overlayed\n * on top of each other with only one of them visible at a time. When a user\n * performs a scroll-like gesture (see {@link GestureWatcher}), the pages are\n * flicked through: gestures, whose direction is down (or left) result in the\n * next page being shown, otherwise the previous.\n *\n * The widget should have more than one page.\n *\n * Optionally, the widget can have a set of \"switch\" elements and a set of\n * \"toggle\" elements which correspond one-to-one to each page. Switches go to\n * the given page and toggles toggle the enabled/disabled state of the page.\n *\n * **IMPORTANT:** The page elements will be positioned absolutely, and\n * therefore the pager likely needs to have an explicit height. If you enable\n * {@link PagerConfig.fullscreen}, then the element will get `height: 100vh`\n * set. Otherwise, you need to set its height in your CSS.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Pager}\n * widget on a given element. Use {@link Pager.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the pager element:\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n * - `data-lisn-use-parallax`: `\"true\"` or `\"false\"`\n * - `data-lisn-total-pages`: the number of pages\n * - `data-lisn-current-page`: the current page number\n * - `data-lisn-current-page-is-last`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-first-enabled`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-last-enabled`: `\"true\"` or `\"false\"`\n *\n * The following dynamic CSS properties are also set on the pager element's style:\n * - `--lisn-js--total-pages`: the number of pages\n * - `--lisn-js--current-page`: the current page number\n *\n * The following dynamic attributes are set on each page, toggle or switch element:\n * - `data-lisn-page-state`: `\"current\"`, `\"next\"`, `\"covered\"` or `\"disabled\"`\n * - `data-lisn-page-number`: the corresponding page's number\n *\n * The following analogous dynamic CSS properties are also set on each page,\n * toggle or switch element's style:\n * - `--lisn-js--page-number`: the corresponding page's number\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-pager` class or `data-lisn-pager` attribute set on the container\n *   element that constitutes the pager\n * - `lisn-pager-page` class or `data-lisn-pager-page` attribute set on\n *   elements that should act as the pages.\n * - `lisn-pager-toggle` class or `data-lisn-pager-toggle` attribute set on\n *   elements that should act as the toggles.\n * - `lisn-pager-switch` class or `data-lisn-pager-switch` attribute set on\n *   elements that should act as the switches.\n *\n * When using auto-widgets, the elements that will be used as pages are\n * discovered in the following way:\n * 1. The top-level element that constitutes the widget is searched for any\n *    elements that contain the `lisn-pager-page` class or\n *    `data-lisn-pager-page` attribute. They do not have to be immediate\n *    children of the root element, but they **should** all be siblings.\n * 2. If there are no such elements, all of the immediate children of the\n *    widget element except any `script` or `style` elements are taken as the\n *    pages.\n *\n * The toggles and switches are descendants of the top-level element that\n * constitutes the widget, that contain the\n * `lisn-pager-toggle`/`lisn-pager-switch` class or `data-lisn-pager-toggle`/\n * `data-lisn-pager-switch` attribute. They do not have to be immediate\n * children of the root element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple pager with default settings.\n *\n * ```html\n * <div class=\"lisn-pager\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * As above but with all settings explicitly set to their default (`false`).\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen=false | parallax=false | horizontal=false\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>Horizontal: Page 1</div>\n *   <div>Horizontal: Page 2</div>\n *   <div>Horizontal: Page 3</div>\n *   <div>Horizontal: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings, as well as toggle and switch buttons.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>\n *     <div data-lisn-pager-page>Horizontal: Page 1</div>\n *     <div data-lisn-pager-page>Horizontal: Page 2</div>\n *     <div data-lisn-pager-page>Horizontal: Page 3</div>\n *     <div data-lisn-pager-page>Horizontal: Page 4</div>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-toggle>Toggle page 1</button>\n *     <button data-lisn-pager-toggle>Toggle page 2</button>\n *     <button data-lisn-pager-toggle>Toggle page 3</button>\n *     <button data-lisn-pager-toggle>Toggle page 4</button>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-switch>Go to page 1</button>\n *     <button data-lisn-pager-switch>Go to page 2</button>\n *     <button data-lisn-pager-switch>Go to page 3</button>\n *     <button data-lisn-pager-switch>Go to page 4</button>\n *   </div>\n * </div>\n * ```\n */\nexport class Pager extends Widget {\n  /**\n   * Advances the widget's page by 1. If the current page is the last one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled down/right\n   * (depending on the gesture direction).\n   */\n  readonly nextPage: () => Promise<void>;\n\n  /**\n   * Reverses the widget's page by 1. If the current page is the first one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled up/left\n   * (depending on the gesture direction).\n   */\n  readonly prevPage: () => Promise<void>;\n\n  /**\n   * Advances the widget to the given page. Note that page numbers start at 1.\n   *\n   * If this page is disabled, nothing is done.\n   */\n  readonly goToPage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Disables the given page number. Note that page numbers start at 1.\n   *\n   * The page will be skipped during transitioning to previous/next.\n   *\n   * If the page is the current one, then the current page will be switched to\n   * the previous one (that's not disabled), or if this is the first enabled\n   * page, then it will switch to the next one that's not disabled.\n   *\n   * If this is the last enabled page, nothing is done.\n   */\n  readonly disablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page number. Note that page numbers start at 1.\n   */\n  readonly enablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page if it is disabled, otherwise disables it. Note\n   * that page numbers start at 1.\n   */\n  readonly togglePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Returns true if the given page number is disabled. Note that page\n   * numbers start at 1.\n   */\n  readonly isPageDisabled: (pageNum: number) => boolean;\n\n  /**\n   * Returns the current page.\n   */\n  readonly getCurrentPage: () => Element;\n\n  /**\n   * Returns the previous page, before the last transition.\n   *\n   * If there has been no change of page, returns the first page, same as\n   * {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPage: () => Element;\n\n  /**\n   * Returns the number of the current page. Note that numbers start at 1.\n   */\n  readonly getCurrentPageNum: () => number;\n\n  /**\n   * Returns the number of the previous page, before the last transition. Note\n   * that numbers start at 1.\n   *\n   * If there has been no change of page, returns the number of the first page,\n   * same as {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPageNum: () => number;\n\n  /**\n   * The given handler will be called whenever there is a change of page. It\n   * will be called after the current page number is updated internally (so\n   * {@link getPreviousPageNum} and {@link getCurrentPageNum} will return the\n   * updated numbers), but before the page transition styles are updated.\n   *\n   * If the handler returns a promise, it will be awaited upon.\n   */\n  readonly onTransition: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns the page elements.\n   */\n  readonly getPages: () => Element[];\n\n  /**\n   * Returns the toggle elements if any.\n   */\n  readonly getToggles: () => Element[];\n\n  /**\n   * Returns the switch elements if any.\n   */\n  readonly getSwitches: () => Element[];\n\n  static get(element: Element): Pager | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Pager)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!Pager.get(element)) {\n          return new Pager(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If there are less than 2 pages given or found, or if any\n   *                page is not a descendant of the main pager element.\n   */\n  constructor(element: Element, config?: PagerConfig) {\n    const destroyPromise = Pager.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const pages = config?.pages || [];\n    const toggles = config?.toggles || [];\n    const switches = config?.switches || [];\n    const nextPrevSwitch = {\n      _next: config?.nextSwitch || null,\n      _prev: config?.prevSwitch || null,\n    };\n\n    const pageSelector = getDefaultWidgetSelector(PREFIX_PAGE__FOR_SELECT);\n    const toggleSelector = getDefaultWidgetSelector(PREFIX_TOGGLE__FOR_SELECT);\n    const switchSelector = getDefaultWidgetSelector(PREFIX_SWITCH__FOR_SELECT);\n    const nextSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_NEXT_SWITCH__FOR_SELECT,\n    );\n    const prevSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_PREV_SWITCH__FOR_SELECT,\n    );\n\n    if (!MH.lengthOf(pages)) {\n      pages.push(...MH.querySelectorAll(element, pageSelector));\n\n      if (!MH.lengthOf(pages)) {\n        pages.push(\n          ...getVisibleContentChildren(element).filter(\n            (e) => !e.matches(switchSelector),\n          ),\n        );\n      }\n    }\n\n    if (!MH.lengthOf(toggles)) {\n      toggles.push(...MH.querySelectorAll(element, toggleSelector));\n    }\n\n    if (!MH.lengthOf(switches)) {\n      switches.push(...MH.querySelectorAll(element, switchSelector));\n    }\n\n    if (!nextPrevSwitch._next) {\n      nextPrevSwitch._next = MH.querySelector(element, nextSwitchSelector);\n    }\n\n    if (!nextPrevSwitch._prev) {\n      nextPrevSwitch._prev = MH.querySelector(element, prevSwitchSelector);\n    }\n\n    const numPages = MH.lengthOf(pages);\n    if (numPages < 2) {\n      throw MH.usageError(\"Pager must have more than 1 page\");\n    }\n\n    for (const page of pages) {\n      if (!element.contains(page) || page === element) {\n        throw MH.usageError(\"Pager's pages must be its descendants\");\n      }\n    }\n\n    const components = {\n      _pages: pages,\n      _toggles: toggles,\n      _switches: switches,\n      _nextPrevSwitch: nextPrevSwitch,\n    };\n\n    const methods = getMethods(this, components, element, config);\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, element, components, config, methods);\n    });\n\n    this.nextPage = () => methods._nextPage();\n    this.prevPage = () => methods._prevPage();\n    this.goToPage = (pageNum) => methods._goToPage(pageNum);\n    this.disablePage = methods._disablePage;\n    this.enablePage = methods._enablePage;\n    this.togglePage = methods._togglePage;\n    this.isPageDisabled = methods._isPageDisabled;\n    this.getCurrentPage = methods._getCurrentPage;\n    this.getPreviousPage = methods._getPreviousPage;\n    this.getCurrentPageNum = methods._getCurrentPageNum;\n    this.getPreviousPageNum = methods._getPreviousPageNum;\n    this.onTransition = methods._onTransition;\n\n    this.getPages = () => [...pages];\n    this.getSwitches = () => [...switches];\n    this.getToggles = () => [...toggles];\n  }\n}\n\n/**\n * @interface\n */\nexport type PagerConfig = {\n  /**\n   * The elements that will make up the pages.\n   *\n   * They do not have to be immediate children of the root element, but they\n   * should all be siblings.\n   *\n   * The widget should have more than one page.\n   *\n   * If this is not specified, then\n   * 1. The top-level element that constitutes the widget is searched for any\n   *    elements that contain the `lisn-pager-page` class or the\n   *    `data-lisn-pager-page` attribute, and these are used as pages.\n   * 2. If there are no such elements, all of the immediate children of the\n   *    widget element (other than `script` and `style` elements) are taken as\n   *    the pages.\n   *\n   * **IMPORTANT:** The page elements will be positioned absolutely relative to\n   * their immediate parent, but their parent likely needs to have an explicit\n   * height. If you enable {@link PagerConfig.fullscreen}, then the page parent\n   * will get `height: 100vh` set. Otherwise, you need to set its height in\n   * your CSS.\n   *\n   * @defaultValue undefined\n   */\n  pages?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that toggles the\n   * enabled/disabled state of the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-toggle`\n   * class or the `data-lisn-pager-toggle` attribute, and these are used as\n   * toggles.\n   *\n   * @defaultValue undefined\n   */\n  toggles?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that switches the\n   * pager to the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-switch`\n   * class or the `data-lisn-pager-switch` attribute, and these are used as\n   * switches.\n   *\n   * @defaultValue undefined\n   */\n  switches?: Element[];\n\n  /**\n   * This element will be assigned a click listener that goes to the next page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-next-switch` class or the `data-lisn-pager-next-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  nextSwitch?: Element;\n\n  /**\n   * This element will be assigned a click listener that goes to the previous\n   * page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-prev-switch` class or the `data-lisn-pager-prev-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  prevSwitch?: Element;\n\n  /**\n   * Set the initial page number.\n   *\n   * @defaultValue 1\n   */\n  initialPage?: number;\n\n  /**\n   * If true, then:\n   * - the pager's height will be set to the viewport height (100vh)\n   * - the pager's scrolling ancestor will be scrolled to the top of the pager\n   *   when 30% of it is in view\n   * - scrolling beyond the first or last page will initiate scroll up/left or\n   *   down/right the pager's scrolling ancestor in order to allow \"leaving\"\n   *   the pager\n   *\n   * Note that since the pager's pages will be positioned absolutely, if you do\n   * _not_ enable this option, you will need to manually set the height of the\n   * page parent element via CSS.\n   *\n   * @defaultValue false\n   */\n  fullscreen?: boolean;\n\n  /**\n   * Use a parallax effect for switching pages.\n   *\n   * @defaultValue false\n   */\n  parallax?: boolean;\n\n  /**\n   * Transition pages sideways instead of vertically.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Transition pages upon user scroll-like and drag-like gestures via the\n   * given {@link GestureDevice}s. If set to true, then gestures using all\n   * device types are supported.\n   *\n   * Note that drag gesture is only supported by the \"pointer\" device and also\n   * the \"pointer\" device only supports drag gestures, so if you want to\n   * disable drag gestures, simply pass \"wheel,key,touch\" as this option.\n   *\n   * @defaultValue true\n   */\n  useGestures?: boolean | CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If true, then pages will be advanced backwards/forwards regardless if the\n   * gesture direction is horizontal or vertical.\n   *\n   * If false then, a gesture will go to the next page only if its direction is\n   * down (or right if {@link horizontal}), and to the previous page only if\n   * the gesture direction is up (or left if {@link horizontal}).\n   *\n   * **IMPORTANT:**\n   * If {@link fullscreen}, {@link preventDefault} and\n   * {@link alignGestureDirection} are all true, then the pager's scrollable\n   * parent must be scrollable in the same direction as the pager orientation,\n   * otherwise automatic scroll beyond the last/first page won't work.\n   *\n   * @defaultValue false\n   */\n  alignGestureDirection?: boolean;\n\n  /**\n   * Whether to prevent the default action for events that would result in\n   * gestures.\n   *\n   * **NOTE:**\n   * If true (default), then all events that originate from a device given in\n   * {@link useGestures} and that could result in a gesture will be prevented\n   * regardless of their direction and whether {@link alignGestureDirection} is\n   * true.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n};\n\n// --------------------\n\ntype Components = {\n  _pages: Element[];\n  _toggles: Element[];\n  _switches: Element[];\n  _nextPrevSwitch: { _next: Element | null; _prev: Element | null };\n};\n\n// Swiping on some trackpads results in \"trailing\" wheel events sent for some\n// while which results in multiple pages being advanced in a short while. So we\n// limit how often pages can be advanced.\nconst MIN_TIME_BETWEEN_WHEEL = 1000;\n\nconst S_CURRENT = \"current\";\nconst S_ARIA_CURRENT = MC.ARIA_PREFIX + S_CURRENT;\nconst S_COVERED = \"covered\";\nconst S_NEXT = \"next\";\nconst S_TOTAL_PAGES = \"total-pages\";\nconst S_CURRENT_PAGE = \"current-page\";\nconst S_PAGE_NUMBER = \"page-number\";\nconst WIDGET_NAME = \"pager\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_PAGE_CONTAINER = `${PREFIXED_NAME}__page-container`;\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_PAGE = `${PREFIXED_NAME}__page`;\nconst PREFIX_PAGE__FOR_SELECT = `${PREFIXED_NAME}-page`;\nconst PREFIX_TOGGLE__FOR_SELECT = `${PREFIXED_NAME}-toggle`;\nconst PREFIX_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-switch`;\nconst PREFIX_NEXT_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-next-switch`;\nconst PREFIX_PREV_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-prev-switch`;\n\nconst PREFIX_IS_FULLSCREEN = MH.prefixName(\"is-fullscreen\");\nconst PREFIX_USE_PARALLAX = MH.prefixName(\"use-parallax\");\nconst PREFIX_TOTAL_PAGES = MH.prefixName(S_TOTAL_PAGES);\nconst PREFIX_CURRENT_PAGE = MH.prefixName(S_CURRENT_PAGE);\nconst PREFIX_CURRENT_PAGE_IS_LAST = `${PREFIX_CURRENT_PAGE}-is-last`;\nconst PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED = `${PREFIX_CURRENT_PAGE}-is-first-enabled`;\nconst PREFIX_CURRENT_PAGE_IS_LAST_ENABLED = `${PREFIX_CURRENT_PAGE_IS_LAST}-enabled`;\nconst PREFIX_PAGE_STATE = MH.prefixName(\"page-state\");\nconst PREFIX_PAGE_NUMBER = MH.prefixName(S_PAGE_NUMBER);\nconst VAR_TOTAL_PAGES = MH.prefixCssJsVar(S_TOTAL_PAGES);\nconst VAR_CURRENT_PAGE = MH.prefixCssJsVar(S_CURRENT_PAGE);\nconst VAR_PAGE_NUMBER = MH.prefixCssJsVar(S_PAGE_NUMBER);\n\n// Only one Pager widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<PagerConfig> = {\n  initialPage: validateNumber,\n  fullscreen: validateBoolean,\n  parallax: validateBoolean,\n  horizontal: validateBoolean,\n  useGestures: (key, value) => {\n    if (MH.isNullish(value)) {\n      return undefined;\n    }\n\n    const bool = toBool(value);\n    if (bool !== null) {\n      return bool;\n    }\n\n    return (\n      validateStrList(\n        \"useGestures\",\n        validateString(key, value),\n        isValidInputDevice,\n      ) || true\n    );\n  },\n  alignGestureDirection: validateBoolean,\n  preventDefault: validateBoolean,\n};\n\nconst fetchClosestScrollable = (element: Element) =>\n  waitForMeasureTime().then(\n    () => getClosestScrollable(element, { active: true }) ?? undefined,\n  );\n\nconst setPageNumber = (components: Components, pageNum: number) => {\n  let lastPromise: Promise<void> = MH.promiseResolve();\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      setData(el, PREFIX_PAGE_NUMBER, pageNum + \"\");\n      lastPromise = setStyleProp(el, VAR_PAGE_NUMBER, pageNum + \"\");\n    }\n  }\n\n  return lastPromise;\n};\n\nconst setCurrentPage = (\n  pagerEl: Element,\n  currPageNum: number,\n  numPages: number,\n  isPageDisabled: (pageNum: number) => boolean,\n) => {\n  let isFirstEnabled = true;\n  let isLastEnabled = true;\n  for (let n = 1; n <= numPages; n++) {\n    if (!isPageDisabled(n)) {\n      if (n < currPageNum) {\n        isFirstEnabled = false;\n      } else if (n > currPageNum) {\n        isLastEnabled = false;\n      }\n    }\n  }\n\n  setStyleProp(pagerEl, VAR_CURRENT_PAGE, currPageNum + \"\");\n  setData(pagerEl, PREFIX_CURRENT_PAGE, currPageNum + \"\");\n  setBoolData(pagerEl, PREFIX_CURRENT_PAGE_IS_LAST, numPages === numPages);\n  setBoolData(pagerEl, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED, isFirstEnabled);\n  return setBoolData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST_ENABLED,\n    isLastEnabled,\n  );\n};\n\nconst setPageState = async (\n  components: Components,\n  pageNum: number,\n  state: string,\n) => {\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      await setData(el, PREFIX_PAGE_STATE, state);\n    }\n  }\n};\n\nconst init = (\n  widget: Pager,\n  element: Element,\n  components: Components,\n  config: PagerConfig | undefined,\n  methods: ReturnType<typeof getMethods>,\n) => {\n  const pages = components._pages;\n  const toggles = components._toggles;\n  const switches = components._switches;\n  const nextSwitch = components._nextPrevSwitch._next;\n  const prevSwitch = components._nextPrevSwitch._prev;\n  const pageContainer = pages[0]?.parentElement;\n\n  let initialPage = toInt(config?.initialPage ?? 1);\n  const isFullscreen = config?.fullscreen ?? false;\n  const isParallax = config?.parallax ?? false;\n  const isHorizontal = config?.horizontal ?? false;\n  const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n  const useGestures = config?.useGestures ?? true;\n  const alignGestureDirection = config?.alignGestureDirection ?? false;\n  const preventDefault = config?.preventDefault ?? true;\n\n  const scrollWatcher = ScrollWatcher.reuse();\n  let gestureWatcher: GestureWatcher | null = null;\n  let viewWatcher: ViewWatcher | null = null;\n  if (isFullscreen) {\n    viewWatcher = ViewWatcher.reuse({ rootMargin: \"0px\", threshold: 0.3 });\n  }\n\n  if (useGestures) {\n    gestureWatcher = GestureWatcher.reuse();\n  }\n\n  const getGestureOptions = (\n    directions: Direction | Direction[] | undefined,\n  ): OnGestureOptions => {\n    return {\n      devices: MH.isBoolean(useGestures) // i.e. true; if it's false, then gestureWatcher is null\n        ? undefined // all devices\n        : useGestures,\n      intents: [MC.S_DRAG, MC.S_SCROLL],\n      directions,\n      deltaThreshold: 25,\n      preventDefault,\n    };\n  };\n\n  const scrollToPager = async () => {\n    scrollWatcher.scrollTo(element, {\n      scrollable: await fetchClosestScrollable(element),\n    });\n  };\n\n  const transitionOnGesture = (target: EventTarget, data: GestureData) => {\n    const swapDirection = data.intent === MC.S_DRAG;\n\n    if (MH.includes([MC.S_LEFT, MC.S_UP], data.direction)) {\n      (swapDirection ? methods._nextPage : methods._prevPage)(data);\n    } else {\n      (swapDirection ? methods._prevPage : methods._nextPage)(data);\n    }\n  };\n\n  const addWatcher = () => {\n    gestureWatcher?.onGesture(\n      element,\n      transitionOnGesture,\n      getGestureOptions(\n        alignGestureDirection\n          ? isHorizontal\n            ? [MC.S_LEFT, MC.S_RIGHT]\n            : [MC.S_UP, MC.S_DOWN]\n          : undefined, // all directions\n      ),\n    );\n\n    viewWatcher?.onView(element, scrollToPager, { views: \"at\" });\n  };\n\n  const getPageNumForEvent = (event: Event) => {\n    const target = MH.currentTargetOf(event);\n    return MH.isElement(target)\n      ? toInt(getData(target, PREFIX_PAGE_NUMBER))\n      : 0;\n  };\n\n  const toggleClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._togglePage(pageNum);\n  };\n\n  const switchClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._goToPage(pageNum);\n  };\n\n  const nextSwitchClickListener = () => methods._nextPage();\n  const prevSwitchClickListener = () => methods._prevPage();\n\n  const removeWatcher = () => {\n    gestureWatcher?.offGesture(element, transitionOnGesture);\n\n    viewWatcher?.offView(element, scrollToPager);\n  };\n\n  // SETUP ------------------------------\n\n  widget.onDisable(removeWatcher);\n  widget.onEnable(addWatcher);\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n    delDataNow(element, MC.PREFIX_ORIENTATION);\n    delDataNow(element, PREFIX_IS_FULLSCREEN);\n    delDataNow(element, PREFIX_USE_PARALLAX);\n    delDataNow(element, PREFIX_CURRENT_PAGE);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST_ENABLED);\n    delDataNow(element, PREFIX_TOTAL_PAGES);\n    delStylePropNow(element, VAR_CURRENT_PAGE);\n    delStylePropNow(element, VAR_TOTAL_PAGES);\n\n    for (let idx = 0; idx < MH.lengthOf(pages); idx++) {\n      removeClassesNow(pages[idx], PREFIX_PAGE);\n\n      for (const [el, listener] of [\n        [pages[idx], null],\n        [toggles[idx], toggleClickListener],\n        [switches[idx], switchClickListener],\n      ] as const) {\n        if (el) {\n          delDataNow(el, PREFIX_PAGE_STATE);\n          delDataNow(el, PREFIX_PAGE_NUMBER);\n          delStylePropNow(el, VAR_PAGE_NUMBER);\n          if (listener) {\n            removeEventListenerFrom(el, MC.S_CLICK, listener);\n          }\n        }\n      }\n\n      MH.delAttr(pages[idx], S_ARIA_CURRENT);\n    }\n\n    if (nextSwitch) {\n      removeEventListenerFrom(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n    }\n\n    if (prevSwitch) {\n      removeEventListenerFrom(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n    }\n\n    removeClassesNow(element, PREFIX_ROOT);\n    if (pageContainer) {\n      removeClassesNow(pageContainer, PREFIX_PAGE_CONTAINER);\n    }\n  });\n\n  addWatcher();\n  addClasses(element, PREFIX_ROOT);\n  if (pageContainer) {\n    addClasses(pageContainer, PREFIX_PAGE_CONTAINER);\n  }\n\n  const numPages = MH.lengthOf(pages);\n  setData(element, MC.PREFIX_ORIENTATION, orientation);\n  setBoolData(element, PREFIX_IS_FULLSCREEN, isFullscreen);\n  setBoolData(element, PREFIX_USE_PARALLAX, isParallax);\n  setData(element, PREFIX_TOTAL_PAGES, numPages + \"\");\n  setStyleProp(element, VAR_TOTAL_PAGES, (numPages || 1) + \"\");\n\n  for (const page of pages) {\n    disableInitialTransition(page);\n    addClasses(page, PREFIX_PAGE);\n  }\n\n  for (let idx = 0; idx < numPages; idx++) {\n    setPageNumber(components, idx + 1);\n    setPageState(components, idx + 1, S_NEXT);\n\n    for (const [el, listener] of [\n      [toggles[idx], toggleClickListener],\n      [switches[idx], switchClickListener],\n    ] as const) {\n      if (el) {\n        addEventListenerTo(el, MC.S_CLICK, listener);\n      }\n    }\n  }\n\n  if (nextSwitch) {\n    addEventListenerTo(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n  }\n\n  if (prevSwitch) {\n    addEventListenerTo(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n  }\n\n  if (initialPage < 1 || initialPage > numPages) {\n    initialPage = 1;\n  }\n  methods._goToPage(initialPage);\n};\n\nconst getMethods = (\n  widget: Pager,\n  components: Components,\n  element: Element,\n  config: PagerConfig | undefined,\n) => {\n  const pages = components._pages;\n  const scrollWatcher = ScrollWatcher.reuse();\n  const isFullscreen = config?.fullscreen;\n  const disabledPages: Record<number, boolean> = {};\n  const callbacks = MH.newSet<WidgetCallback>();\n\n  const fetchScrollOptions = async (): Promise<ScrollOptions> => ({\n    scrollable: await fetchClosestScrollable(element),\n    // default amount is already 100%\n    asFractionOf: \"visible\",\n    weCanInterrupt: true,\n  });\n\n  let currPageNum = -1;\n  let lastPageNum = -1;\n  let lastTransition = 0;\n\n  const canTransition = (gestureData?: GestureData) => {\n    if (widget.isDisabled()) {\n      return false;\n    }\n\n    if (gestureData?.device !== MC.S_WHEEL) {\n      return true;\n    }\n\n    const timeNow = MH.timeNow();\n    if (timeNow - lastTransition > MIN_TIME_BETWEEN_WHEEL) {\n      lastTransition = timeNow;\n      return true;\n    }\n\n    return false;\n  };\n\n  const goToPage = async (pageNum: number, gestureData?: GestureData) => {\n    pageNum = toInt(pageNum, -1);\n    if (pageNum === currPageNum || !canTransition(gestureData)) {\n      return;\n    }\n\n    const numPages = MH.lengthOf(pages);\n\n    if (\n      (currPageNum === 1 && pageNum === 0) ||\n      (currPageNum === numPages && pageNum === numPages + 1)\n    ) {\n      // next/prev page beyond last/first\n      if (isFullscreen) {\n        scrollWatcher.scroll(\n          pageNum\n            ? gestureData?.direction === MC.S_RIGHT\n              ? MC.S_RIGHT\n              : MC.S_DOWN\n            : gestureData?.direction === MC.S_LEFT\n              ? MC.S_LEFT\n              : MC.S_UP,\n          await fetchScrollOptions(),\n        ); // no need to await\n      }\n\n      return;\n    }\n\n    if (isPageDisabled(pageNum) || pageNum < 1 || pageNum > numPages) {\n      // invalid or disabled\n      return;\n    }\n\n    lastPageNum = currPageNum > 0 ? currPageNum : pageNum;\n    currPageNum = pageNum;\n\n    for (const callback of callbacks) {\n      await callback.invoke(widget);\n    }\n\n    MH.delAttr(pages[lastPageNum - 1], S_ARIA_CURRENT);\n    for (\n      let n = lastPageNum;\n      n !== currPageNum;\n      currPageNum < lastPageNum ? n-- : n++\n    ) {\n      if (!isPageDisabled(n)) {\n        setPageState(\n          components,\n          n,\n          currPageNum < lastPageNum ? S_NEXT : S_COVERED,\n        );\n      }\n    }\n\n    setCurrentPage(element, currPageNum, numPages, isPageDisabled);\n    MH.setAttr(pages[currPageNum - 1], S_ARIA_CURRENT);\n    await setPageState(components, currPageNum, S_CURRENT);\n  };\n\n  const nextPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum + 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage++;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const prevPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum - 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage--;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const isPageDisabled = (pageNum: number) => disabledPages[pageNum] === true;\n\n  const disablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || pageNum < 1 || pageNum > MH.lengthOf(pages)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = true;\n\n    if (pageNum === currPageNum) {\n      await prevPage();\n\n      if (pageNum === currPageNum) {\n        await nextPage();\n\n        if (pageNum === currPageNum) {\n          disabledPages[pageNum] = false;\n          return; // only enabled one\n        }\n      }\n    }\n\n    setCurrentPage(element, currPageNum, MH.lengthOf(pages), isPageDisabled);\n    await setPageState(components, pageNum, MC.S_DISABLED);\n  };\n\n  const enablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || !isPageDisabled(pageNum)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = false;\n\n    setCurrentPage(element, currPageNum, MH.lengthOf(pages), isPageDisabled);\n    await setPageState(\n      components,\n      pageNum,\n      pageNum < currPageNum ? S_COVERED : S_NEXT,\n    );\n  };\n\n  const togglePage = (pageNum: number) =>\n    isPageDisabled(pageNum) ? enablePage(pageNum) : disablePage(pageNum);\n\n  const onTransition = (handler: WidgetHandler) =>\n    callbacks.add(wrapCallback(handler));\n\n  return {\n    _nextPage: nextPage,\n    _prevPage: prevPage,\n    _goToPage: goToPage,\n    _disablePage: disablePage,\n    _enablePage: enablePage,\n    _togglePage: togglePage,\n    _isPageDisabled: isPageDisabled,\n    _getCurrentPage: () => pages[currPageNum - 1],\n    _getPreviousPage: () => pages[lastPageNum - 1],\n    _getCurrentPageNum: () => (MH.lengthOf(pages) > 0 ? currPageNum : 0),\n    _getPreviousPageNum: () => (MH.lengthOf(pages) > 0 ? lastPageNum : 0),\n    _onTransition: onTransition,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling pagers\n * {@link NextPage} and {@link PrevPage} advance or reverse the {@link Pager}\n * widget setup for the given element.\n *\n * {@link GoToPage} sets the {@link Pager} to the given page or toggles to the\n * last saved one.\n *\n * {@link EnablePage} and {@link DisablePage} enable or disable the given page\n * of the {@link Pager} widget setup for the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { toInt } from \"@lisn/utils/math\";\n\nimport { Pager } from \"@lisn/widgets/pager\";\nimport { fetchUniqueWidget } from \"@lisn/widgets/widget\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Advances or reverses the {@link Pager} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"next-page\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@next-page +target=#myNextButton\"></div>\n * <button id=\"myNextButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class NextPage implements Action {\n  /**\n   * Advances the pager by one page.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Reverses the pager by one page.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Undoes the last action: reverses the pager if {@link do} was last called\n   * or advances it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"next-page\", (element) => new NextPage(element));\n  }\n\n  constructor(element: Element) {\n    let toggleState = false;\n    const { _nextPage, _prevPage } = getMethods(element);\n\n    this.do = () => {\n      toggleState = true;\n      return _nextPage();\n    };\n\n    this.undo = () => {\n      toggleState = false;\n      return _prevPage();\n    };\n\n    this[MC.S_TOGGLE] = () => {\n      const method = toggleState ? _prevPage : _nextPage;\n      toggleState = !toggleState;\n      return method();\n    };\n  }\n}\n\n/**\n * Reverses or advances the {@link Pager} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"prev-page\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@prev-page +target=#myPrevButton\"></div>\n * <button id=\"myPrevButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class PrevPage implements Action {\n  /**\n   * Reverses the pager by one page.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Advances the pager by one page.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Undoes the last action: advances the pager if {@link do} was last called\n   * or reverses it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"prev-page\", (element) => new PrevPage(element));\n  }\n\n  constructor(element: Element) {\n    let toggleState = false;\n    const { _nextPage, _prevPage } = getMethods(element);\n\n    this.do = () => {\n      toggleState = true;\n      return _prevPage();\n    };\n\n    this.undo = () => {\n      toggleState = false;\n      return _nextPage();\n    };\n\n    this[MC.S_TOGGLE] = () => {\n      const method = toggleState ? _nextPage : _prevPage;\n      toggleState = !toggleState;\n      return method();\n    };\n  }\n}\n\n/**\n * Goes to a given page, or to the last one beforehand, of the {@link Pager}\n * widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"go-to-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@go-to-page:2 +target=#myGoToButton\"></div>\n * <button id=\"myGoToButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class GoToPage implements Action {\n  /**\n   * Goes to the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Goes to the last saved page number before the action was {@link do}ne. If\n   * the action had never been done, does nothing.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Goes to the page number given to the constructor, or if already at this\n   * number, goes to the last saved page if any. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"go-to-page\",\n      (element, args) => new GoToPage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page is required\");\n    }\n\n    const { _goToPage } = getMethods(element);\n\n    this.do = () => _goToPage(pageNum);\n    this.undo = () => _goToPage(-1);\n    this[MC.S_TOGGLE] = () => _goToPage(pageNum, -1);\n  }\n}\n\n/**\n * Enables or disables the given page of the {@link Pager} widget setup for the\n * given element.\n *\n * **IMPORTANT:** When constructed, it disables the given page as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"enable-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@enable-page:2 +target=#myEnableButton\"></div>\n * <button id=\"myEnableButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class EnablePage implements Action {\n  /**\n   * Enables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Disables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Enables the page number given to the constructor, if it is disabled,\n   * otherwise disables it. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"enable-page\",\n      (element, args) => new EnablePage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page number is required\");\n    }\n\n    const { _enablePage, _disablePage, _togglePage } = getMethods(element);\n    _disablePage(pageNum); // initial state\n\n    this.do = () => _enablePage(pageNum);\n    this.undo = () => _disablePage(pageNum);\n    this[MC.S_TOGGLE] = () => _togglePage(pageNum);\n  }\n}\n\n/**\n * Disables or enables the given page of the {@link Pager} widget setup for the\n * given element.\n *\n * **IMPORTANT:** When constructed, it enables the given page as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"disable-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"myDisableButton\"></button>\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@disable-page:2 +target=#myDisableButton\"></div>\n * ```\n *\n * @category Controlling pagers\n */\nexport class DisablePage implements Action {\n  /**\n   * Disables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Enables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Disables the page number given to the constructor, if it is enabled,\n   * otherwise enables it. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"disable-page\",\n      (element, args) => new DisablePage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page number is required\");\n    }\n\n    const { _enablePage, _disablePage, _togglePage } = getMethods(element);\n    _enablePage(pageNum); // initial state\n\n    this.do = () => _disablePage(pageNum);\n    this.undo = () => _enablePage(pageNum);\n    this[MC.S_TOGGLE] = () => _togglePage(pageNum);\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  let lastPageNum: number | null | undefined = null;\n\n  const nextPage = (widget: Pager | null) => widget?.nextPage();\n  const prevPage = (widget: Pager | null) => widget?.prevPage();\n\n  const goToPage = async (\n    widget: Pager | null,\n    pageNum: number,\n    altPageNum: number | null,\n  ) => {\n    const currentNum = widget?.getCurrentPageNum();\n    let targetNum: number | null | undefined =\n      currentNum === pageNum ? altPageNum : pageNum;\n    if (targetNum === -1) {\n      targetNum = lastPageNum;\n    }\n\n    if (targetNum) {\n      if (pageNum !== -1) {\n        // save the current number unless this is \"undo\"\n        lastPageNum = currentNum;\n      }\n\n      await widget?.goToPage(targetNum);\n    }\n  };\n\n  const enablePage = (widget: Pager | null, pageNum: number) =>\n    widget?.enablePage(pageNum);\n  const disablePage = (widget: Pager | null, pageNum: number) =>\n    widget?.disablePage(pageNum);\n  const togglePage = (widget: Pager | null, pageNum: number) =>\n    widget?.togglePage(pageNum);\n\n  const widgetPromise = fetchUniqueWidget(\"pager\", element, Pager);\n\n  return {\n    _nextPage: () => widgetPromise.then(nextPage),\n    _prevPage: () => widgetPromise.then(prevPage),\n\n    _goToPage: (pageNum: number, altPageNum: number | null = null) =>\n      widgetPromise.then((w) => goToPage(w, pageNum, altPageNum)),\n\n    _enablePage: (pageNum: number) =>\n      widgetPromise.then((w) => enablePage(w, pageNum)),\n    _disablePage: (pageNum: number) =>\n      widgetPromise.then((w) => disablePage(w, pageNum)),\n    _togglePage: (pageNum: number) =>\n      widgetPromise.then((w) => togglePage(w, pageNum)),\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Pointer\n * {@link ClickTrigger} allows you to run actions when a user clicks a target\n * element (first time and every other time, i.e. odd number of click), and\n * undo them when a user clicks the target element again (or every even number\n * of clicks). It always acts as a toggle.\n *\n * {@link PressTrigger} allows you to run actions when the user presses and\n * holds a pointing device (or their finger) on a target element, and undo\n * those actions when they release their pointing device or lift their finger\n * off.\n *\n * {@link HoverTrigger} allows you to run actions when the user hovers overs\n * a target element, and undo those actions when their pointing device moves\n * off the target. On touch devices it acts just like {@link PressTrigger}.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport { validateBoolean } from \"@lisn/utils/validation\";\n\nimport {\n  PointerWatcher,\n  OnPointerHandler,\n} from \"@lisn/watchers/pointer-watcher\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link ClickTrigger} allows you to run actions when a user clicks a target\n * element (first time and every other time, i.e. odd number of click), and\n * undo them when a user clicks the target element again (or every even number\n * of clicks). It always acts as a toggle.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: A boolean.\n *   - `prevent-select`: A boolean.\n *\n * @example\n * Add classes `active` and `toggled-on` when the user clicks the element\n * (first time and every other time, i.e. odd number of click), remove them\n * when clicked again (or even number of click);\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=active,toggled-on\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-click--@add-class=active,toggled-on\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * clicks it.\n *\n * ```html\n * <div data-lisn-on-click=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `visited` the first time the user clicks the element, and\n * play or reverse the animations on the element 1000ms each time the\n * user clicks it.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=visited +once ;\n *                          @animate +delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * When the user clicks the next element with class `box` then add classes `c1`\n * and `c2` to the element (that the trigger is defined on) and enable trigger\n * `my-trigger` defined on this same element; undo all of that on even number\n * of clicks on the reference box element.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class ClickTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_CLICK,\n      (element, args, actions, config) =>\n        new ClickTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: PointerTriggerConfig = {},\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_CLICK);\n  }\n}\n\n/**\n * {@link PressTrigger} allows you to run actions when the user presses and\n * holds a pointing device (or their finger) on a target element, and undo\n * those actions when they release their pointing device or lift their finger\n * off.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: boolean\n *   - `prevent-select`: boolean\n *\n * @example\n * Add classes `active` and `pressed` when the user presses and holds (with\n * mouse, finger or any pointer) the element, remove them when they release\n * the mouse.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=active,pressed\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-press--@add-class=active,pressed\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * presses on the element it.\n *\n * ```html\n * <div data-lisn-on-press=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `pressed` the first time the user presses on the element, and\n * play the animations on the element while the user is pressing on the element\n * with a delay of 100ms, reverse the animations as soon as the user releases\n * the mouse.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=pressed +once ;\n *                          @animate +do-delay=100\"\n * ></div>\n * ```\n *\n * @example\n * When the user presses and holds the next element with class `box` then add\n * classes `c1` and `c2` to the element (that the trigger is defined on) and\n * enable trigger `my-trigger` defined on this same element; undo all of that\n * when they release the mouse (or lift their finger/pointer device) from the\n * reference box element.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class PressTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_PRESS,\n      (element, args, actions, config) =>\n        new PressTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: PointerTriggerConfig = {},\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_PRESS);\n  }\n}\n\n/**\n * {@link HoverTrigger} allows you to run actions when the user hovers overs\n * a target element, and undo those actions when their pointing device moves\n * off the target. On touch devices it acts just like {@link PressTrigger}.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: boolean\n *   - `prevent-select`: boolean\n *\n * @example\n * Add classes `active` and `hovered` when the user hovers over the element,\n * remove them otherwise.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=active,hovered\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-press--@add-class=active,hovered\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * hovers over the element it.\n *\n * ```html\n * <div data-lisn-on-hover=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `hovered` the first time the user hovers over the element, and\n * play the animations on the element while the user is hovering over the\n * element with a delay of 100ms, reverse the animations as soon as the user\n * mouse leaves the element.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=hovered +once ;\n *                          @animate +do-delay=100\"\n * ></div>\n * ```\n *\n * @example\n * When the user hovers over the next element with class `box` then add classes\n * `c1` and `c2` to the element (that the trigger is defined on) and enable\n * trigger `my-trigger` defined on this same element; undo all of that when\n * their pointing device (or finger) moves off the reference element.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class HoverTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_HOVER,\n      (element, args, actions, config) =>\n        new HoverTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: PointerTriggerConfig = {},\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_HOVER);\n  }\n}\n\n/**\n * @category Pointer\n * @interface\n */\nexport type PointerTriggerConfig = TriggerConfig & {\n  /**\n   * The target to use for the hover action.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  target?: Element;\n\n  /**\n   * See {@link Watchers/PointerWatcher.OnPointerOptions | OnPointerOptions}.\n   *\n   * @defaultValue {@link PointerWatcher} default, false\n   */\n  preventDefault?: boolean;\n\n  /**\n   * See {@link Watchers/PointerWatcher.OnPointerOptions | OnPointerOptions}.\n   *\n   * @defaultValue {@link PointerWatcher} default, true\n   */\n  preventSelect?: boolean;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<PointerTriggerConfig> = (\n  element,\n) => {\n  return {\n    target: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    preventDefault: validateBoolean,\n    preventSelect: validateBoolean,\n  };\n};\n\nconst setupWatcher = (\n  widget: ClickTrigger | HoverTrigger | PressTrigger,\n  element: Element,\n  actions: Action[],\n  config: PointerTriggerConfig,\n  action: \"click\" | \"hover\" | \"press\",\n) => {\n  if (!MH.lengthOf(actions)) {\n    return;\n  }\n\n  const target = MH.targetOf(config) || element;\n\n  // For clicks use the trigger's own toggle function so that it remembers ITS\n  // state rather than the odd/even clicks. Otherwise if the trigger is\n  // disabled, then clicking will \"swap\" the state.\n  let startHandler: OnPointerHandler;\n  let endHandler: OnPointerHandler;\n  if (action === MC.S_CLICK) {\n    startHandler = endHandler = widget[MC.S_TOGGLE];\n  } else {\n    startHandler = widget.run;\n    endHandler = widget.reverse;\n  }\n\n  PointerWatcher.reuse().onPointer(\n    target,\n    startHandler,\n    endHandler,\n    MH.merge(\n      {\n        actions: action,\n      },\n      omitKeys(config, { target: null }),\n    ),\n  );\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Layout\n * {@link LayoutTrigger} allows you to run actions when the viewport or a\n * target element's width or aspect ratio matches a given specification, and\n * undo those actions when the target's width or aspect ratio no longer\n * matches.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport {\n  isValidDeviceList,\n  isValidAspectRatioList,\n  getOtherDevices,\n  getOtherAspectRatios,\n} from \"@lisn/utils/layout\";\nimport { validateStringRequired } from \"@lisn/utils/validation\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport { LayoutWatcher } from \"@lisn/watchers/layout-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link LayoutTrigger} allows you to run actions when the viewport or a\n * target element's width or aspect ratio matches a given specification, and\n * undo those actions when the target's width or aspect ratio no longer\n * matches.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (required): A single {@link DeviceSpec} or\n *   {@link AspectRatioSpec}. In this case you can use a dash (\"-\") instead of\n *   space if needed (for example if using CSS classes instead of data\n *   attributes), e.g. \"min-tablet\" instead of \"min tablet\".\n *\n * - Additional trigger options:\n *   - `root`: A string element specification. See\n *     {@link Utils.getReferenceElement | getReferenceElement}.\n *\n * @example\n * Show the element when the window width matches \"tablet\" breakpoint, hide\n * otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"tablet @show\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-layout--tablet@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the window width matches \"tablet\" breakpoint,\n * hide otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"tablet @show +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `tablet` when the window width is at least \"tablet\", hide\n * otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"min tablet @add-class=tablet\"></div>\n * ```\n *\n * @example\n * Add class `mobile` when the window width is \"mobile\" or mobile-wide, add\n * class `tablet`, when it's \"tablet\" and so on; undo that otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"max mobile-wide @add-class=mobile ;\n *                           tablet @add-class=tablet ;\n *                           desktop @add-class=desktop\"\n * ></div>\n * ```\n *\n * @example\n * Show the element when window width is at least \"mobile-wide\" and at most\n * \"tablet\", hide otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"mobile-wide to tablet @show\"></div>\n * ```\n *\n * @example\n * When the aspect ratio of the next element with class `box` is square, then\n * add classes `c1` and `c2` to the element (that the trigger is defined on) and\n * enable trigger `my-trigger` defined on this same element; undo all of that\n * otherwise (on other aspect ratios of the reference root):\n *\n * ```html\n * <div data-lisn-on-layout=\"square @add-class=c1,c2 @enable=my-trigger +root=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-layout=\"square @add-class=c1,c2 @enable=my-trigger +root=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n *\n * @category Layout\n */\nexport class LayoutTrigger extends Trigger {\n  readonly getConfig: () => LayoutTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"layout\",\n      (element, args, actions, config) => {\n        return new LayoutTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            layout: validateStringRequired(\n              \"layout\",\n              MH.strReplace(\n                MH.strReplace(args[0] || \"\", /(min|max)-/g, \"$1 \"),\n                /-to-/g,\n                \" to \",\n              ),\n              (value) =>\n                isValidDeviceList(value) || isValidAspectRatioList(value),\n            ),\n          }),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: LayoutTriggerConfig,\n  ) {\n    const layout = config?.layout || \"\";\n    if (!layout) {\n      throw MH.usageError(\"'layout' is required\");\n    }\n\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    let devices: DeviceSpec | Device[] = [];\n    let aspectRatios: AspectRatioSpec | AspectRatio[] = [];\n    let otherDevices: Device[] = [];\n    let otherAspectRatios: AspectRatio[] = [];\n\n    if (isValidDeviceList(layout)) {\n      devices = layout;\n      otherDevices = getOtherDevices(layout);\n    } else {\n      aspectRatios = layout;\n      otherAspectRatios = getOtherAspectRatios(layout);\n    }\n\n    const root = config.root;\n    const watcher = LayoutWatcher.reuse({ root });\n\n    watcher.onLayout(this.run, { devices, aspectRatios });\n\n    if (MH.lengthOf(otherDevices) || MH.lengthOf(otherAspectRatios)) {\n      watcher.onLayout(this.reverse, {\n        devices: otherDevices,\n        aspectRatios: otherAspectRatios,\n      });\n    }\n  }\n}\n\n/**\n * @category Layout\n * @interface\n */\nexport type LayoutTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link DeviceSpec} or {@link AspectRatioSpec} to use. Required.\n   * See {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for\n   * accepted formats.\n   *\n   * Actions will be \"done\" when the layout of the root matches the given spec\n   * and \"undone\" otherwise.\n   */\n  layout: DeviceSpec | Device[] | AspectRatioSpec | AspectRatio[];\n\n  /**\n   * The root to use for the {@link LayoutWatcher}.\n   * See {@link Watchers/LayoutWatcher.LayoutWatcherConfig | LayoutWatcherConfig}\n   *\n   * @defaultValue {@link LayoutWatcher} default, the viewport\n   */\n  root?: HTMLElement | null;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<LayoutTriggerConfig, \"layout\">\n> = (element) => {\n  return {\n    root: async (key, value) => {\n      const root = MH.isLiteralString(value)\n        ? await waitForReferenceElement(value, element)\n        : undefined;\n      if (root && !MH.isHTMLElement(root)) {\n        throw MH.usageError(\"root must be HTMLElement\");\n      }\n      return root;\n    },\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Load\n * {@link LoadTrigger} allows you to run actions once when the page is loaded.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForPageReady } from \"@lisn/utils/dom-events\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\n/**\n * {@link LoadTrigger} allows you to run actions one when the page is loaded.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *\n * @example\n * Scroll to the given element when the page is loaded:\n *\n * ```html\n * <div data-lisn-on-load=\":scroll-to\"></div>\n * ```\n *\n * @example\n * Scroll to 100px above the given element 500ms after the page is loaded:\n *\n * ```html\n * <div data-lisn-on-load=\"@scroll-to=0,-100 +delay=500\"></div>\n * ```\n *\n * @example\n * Scroll to 100px above the given element 500ms after the page is loaded, and\n * play animations defined on it 500ms later (1000ms after it's loaded):\n *\n * ```html\n * <div data-lisn-on-load=\"@scroll-to=0,-100 +delay=500 ;\n *                         @animate +delay=1000\"\n * ></div>\n * ```\n *\n * @category Load\n */\nexport class LoadTrigger extends Trigger {\n  readonly getConfig: () => TriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"load\",\n      (element, args, actions, config) =>\n        new LoadTrigger(element, actions, config),\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config: TriggerConfig) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    waitForPageReady().then(this.run);\n  }\n}\n","/**\n * @module Triggers\n *\n * @categoryDescription Scroll\n * {@link ScrollTrigger} allows you to run actions when the user scrolls a\n * target element (or the main scrollable element) in a given direction, and\n * undo those actions when they scroll in the opposite direction.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  XYDirection,\n  CommaSeparatedStr,\n  ScrollTarget,\n} from \"@lisn/globals/types\";\n\nimport {\n  getOppositeXYDirections,\n  isValidXYDirection,\n} from \"@lisn/utils/directions\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { validateStrList, validateNumber } from \"@lisn/utils/validation\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link ScrollTrigger} allows you to run actions when the user scrolls a\n * target element (or the main scrollable element) in a given direction, and\n * undo those actions when they scroll in the opposite direction.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (optional): One or more (comma-separated) scroll directions.\n *   Note that if you do not specify any directions, then the trigger will just\n *   run once, on any scroll.\n * - Additional trigger options:\n *   - `scrollable`: A string element specification.\n *      See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `threshold`: A number.\n *\n * @example\n * Show the element when the user scrolls the page up, hide when scrolling\n * down. User scrolling left or right not trigger the action. See\n * {@link getOppositeXYDirections}:\n *\n * ```html\n * <div data-lisn-on-scroll=\"up @show\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-scroll--up@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the first time the user scrolls the page up:\n *\n * ```html\n * <div data-lisn-on-scroll=\"up @show +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `scrolled` the first time the user scrolls the page in any\n * direction (note that the `once` option is implied here), and show the\n * element 1000ms after each time the user scrolls the page up, hide it as soon\n * as they scroll down:\n *\n * ```html\n * <div data-lisn-on-scroll=\"@add-class=scrolled ;\n *                           up @show +do-delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * When the user scrolls up or down the closest ancestor with class `section`,\n * then add classes `c1` and `c2` and enable trigger `my-trigger` defined on\n * this same element; undo all of that when scrolling right or left:\n *\n * ```html\n * <div class=\"section\">\n *   <div data-lisn-on-scroll=\"up,down @add-class=c1,c2 @enable=my-trigger +scrollable=this.section\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n *   ></div>\n *</div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-ref=\"section\">\n *   <div data-lisn-on-scroll=\"up,down @add-class=c1,c2 @enable=my-trigger +scrollable=this-section\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n *   ></div>\n *</div>\n * ```\n *\n * @category Scroll\n */\nexport class ScrollTrigger extends Trigger {\n  readonly getConfig: () => ScrollTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_SCROLL,\n      (element, args, actions, config) => {\n        return new ScrollTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            directions: validateStrList(\"directions\", args, isValidXYDirection),\n          }),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config?: ScrollTriggerConfig,\n  ) {\n    config = config ?? {};\n\n    let directions = config.directions;\n    if (!directions) {\n      config.once = true;\n      directions = [MC.S_UP, MC.S_DOWN, MC.S_LEFT, MC.S_RIGHT];\n    }\n\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const watcher = ScrollWatcher.reuse();\n    const scrollable = config.scrollable;\n    const threshold = config.threshold;\n\n    const oppositeDirections = directions\n      ? getOppositeXYDirections(directions)\n      : [];\n\n    watcher.onScroll(this.run, {\n      directions,\n      scrollable,\n      threshold,\n    });\n\n    if (MH.lengthOf(oppositeDirections)) {\n      watcher.onScroll(this.reverse, {\n        directions: oppositeDirections,\n        scrollable,\n        threshold,\n      });\n    }\n  }\n}\n\n/**\n * @category Scroll\n * @interface\n */\nexport type ScrollTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link XYDirection}s to use as the trigger.\n   * See also {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * Actions will be \"done\" when the scroll direction is one of the given ones\n   * and \"undone\" when it's the opposite direction. E.g. for \"up\" the opposite\n   * is \"down\".\n   */\n  directions?: CommaSeparatedStr<XYDirection> | XYDirection[];\n\n  /**\n   * The scrolling element target to use for the ScrollWatcher.\n   * See {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * @defaultValue {@link ScrollWatcher} default, the main scrolling element\n   */\n  scrollable?: ScrollTarget;\n\n  /**\n   * The scroll threshold to pass to the {@link ScrollWatcher}.\n   * See also {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  threshold?: number;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<ScrollTriggerConfig, \"directions\">\n> = (element) => {\n  return {\n    scrollable: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    threshold: validateNumber,\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription View\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { ViewTarget, View, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { hasClass, addClasses, getData } from \"@lisn/utils/css-alter\";\nimport { wrapElement, insertGhostClone } from \"@lisn/utils/dom-alter\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateString,\n  validateNumList,\n} from \"@lisn/utils/validation\";\nimport {\n  getOppositeViews,\n  isValidView,\n  isValidScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport { Action } from \"@lisn/actions/action\";\nimport { Animate } from \"@lisn/actions/animate\";\nimport { AnimatePlay } from \"@lisn/actions/animate-play\";\n\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (optional): One or more (comma-separated) {@link View}s.\n *   Default is \"at\".\n * - Additional trigger options:\n *   - `target`: A string element specification for an element (see\n *     {@link Utils.getReferenceElement | getReferenceElement}) or a\n *     {@link Types.ScrollOffset | ScrollOffset}.\n *   - `root`: A string element specification. See\n *     {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `rootMargin`: A string.\n *   - `threshold`: A number or list (comma-separated) of numbers.\n *\n * @example\n * Show the element when it's in the viewport, hide otherwise.\n *\n * ```html\n * <div data-lisn-on-view=\"at @show\"></div>\n * ```\n *\n * @example\n * Same as above. \"views\" is optional and defaults to \"at\".\n *\n * ```html\n * <div data-lisn-on-view=\"@show\"></div>\n * ```\n *\n * @example\n * As above but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-view--@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the first time it enters the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@show +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `seen` the first time the element enters the viewport, and play\n * the animations defined on it 1000ms after each time it enters the viewport,\n * reverse the animations as soon as it goes out of view.\n *\n * ```html\n * <div data-lisn-on-view=\"@add-class=seen +once ;\n *                         @animate +do-delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * Add class `seen` when the viewport is at or below the element (element\n * above viewport), remove it when the viewport is above the element.\n * Element going to the left or right of the viewport will not trigger the\n * action. See {@link getOppositeViews}:\n *\n * ```html\n * <div data-lisn-on-view=\"at,below @add-class=seen\"></div>\n * ```\n *\n * @example\n * Add class `cls` when the viewport is above or to the left the element\n * (element below or to the right of the viewport), remove it when the\n * viewport is either at, below or to the right of the element.\n *\n * ```html\n * <div data-lisn-on-view=\"above,left @add-class=cls\"></div>\n * ```\n *\n * @example\n * Hide the element when the viewport is above the next element with class\n * `section`, show it when the viewport is below or at the target element.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next.section\"></div>\n * <div class=\"section\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next-section\"></div>\n * <div data-lisn-ref=\"section\"></div>\n * ```\n *\n * @example\n * Open the {@link Widgets.Openable | Openable} widget configured for this\n * element when the viewport is 75% down from the top of the page.\n *\n * ```html\n * <div data-lisn-on-view=\"@open +target=top:75%\"></div>\n * ```\n *\n * @category View\n */\nexport class ViewTrigger extends Trigger {\n  readonly getConfig: () => ViewTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"view\",\n      (element, args, actions, config) => {\n        return new ViewTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            views: validateStrList(\"views\", args, isValidView),\n          } as const),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config?: ViewTriggerConfig) {\n    super(element, actions, config);\n\n    const logger = debug\n      ? new debug.Logger({\n          name: `ViewTrigger-${formatAsString(element)}`,\n        })\n      : null;\n\n    this.getConfig = () => MH.copyObject(config || {});\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const watcher = ViewWatcher.reuse({\n      root: config?.root,\n      rootMargin: config?.rootMargin?.replace(/,/g, \" \"),\n      threshold: config?.threshold,\n    });\n\n    const target = config?.target || element;\n    const views = config?.views || MC.S_AT;\n    const oppositeViews = getOppositeViews(views);\n\n    const setupWatcher = (target: ViewTarget) => {\n      if (!MH.lengthOf(oppositeViews)) {\n        debug: logger?.debug6(\"Trigger can never be reversed, running now\");\n        // The action is never undone\n        this.run();\n      } else {\n        debug: logger?.debug6(\"Setting up trigger\", views, oppositeViews);\n        watcher.onView(target, this.run, { views });\n        watcher.onView(target, this.reverse, { views: oppositeViews });\n      }\n    };\n\n    // See comment in globals/settings under contentWrappingAllowed\n    let willAnimate = false;\n    for (const action of actions) {\n      if (\n        MH.isInstanceOf(action, Animate) ||\n        MH.isInstanceOf(action, AnimatePlay)\n      ) {\n        willAnimate = true;\n        break;\n      }\n    }\n\n    if (willAnimate) {\n      setupRepresentative(element).then(setupWatcher);\n    } else {\n      setupWatcher(target);\n    }\n  }\n}\n\n/**\n * @category View\n * @interface\n */\nexport type ViewTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link View} to use as the trigger.\n   * See also {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * Actions will be \"done\" when the view matches the given spec and \"undone\"\n   * otherwise. What the opposite views are depends on the given view. E.g. for\n   * \"at\", opposites are all the other ones;  for \"above\", the opposite ones\n   * are \"at\" and \"below\"; for \"at,above\" opposite is \"below\", etc.\n   *\n   * @defaultValue \"at\"\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * The target to use for the ViewWatcher. It can be a string offset\n   * specification.\n   * See {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * @defaultValue The element on which the {@link ViewTrigger} is defined\n   */\n  target?: ViewTarget;\n\n  /**\n   * The root to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  root?: Element | null;\n\n  /**\n   * The root margin to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * It can be either space-separated or comma-separated.\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  threshold?: number | number[];\n};\n\n// ----------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<ViewTriggerConfig, \"views\">\n> = (element) => {\n  return {\n    target: (key, value) =>\n      MH.isLiteralString(value) && isValidScrollOffset(value)\n        ? value\n        : ((MH.isLiteralString(value)\n            ? waitForReferenceElement(value, element)\n            : null) ?? undefined),\n    root: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    rootMargin: validateString,\n    threshold: (key, value) => validateNumList(key, value),\n  };\n};\n\nconst setupRepresentative = async (element: Element): Promise<Element> => {\n  const allowedToWrap =\n    settings.contentWrappingAllowed === true &&\n    getData(element, MC.PREFIX_NO_WRAP) === null &&\n    // Done by another animate action?\n    !MH.classList(MH.parentOf(element))?.contains(MC.PREFIX_WRAPPER);\n\n  let target: Element;\n  if (allowedToWrap) {\n    target = await wrapElement(element, { ignoreMove: true });\n    addClasses(target, MC.PREFIX_WRAPPER);\n\n    if (isInlineTag(MH.tagName(target))) {\n      addClasses(target, MC.PREFIX_INLINE_WRAPPER);\n    }\n  } else {\n    // Otherwise create a dummy hidden clone that's not animated and position\n    // it absolutely in a wrapper of size 0 that's inserted just before the\n    // actual element, so that the hidden clone overlaps the actual element's\n    // regular (pre-transformed) position.\n\n    const prev = element.previousElementSibling;\n    const prevChild = MH.childrenOf(prev)[0];\n    if (\n      prev &&\n      hasClass(prev, MC.PREFIX_WRAPPER) &&\n      prevChild &&\n      hasClass(prevChild, MC.PREFIX_GHOST)\n    ) {\n      // Done by a previous animate action?\n      target = prevChild;\n    } else {\n      target = (await insertGhostClone(element))._clone;\n    }\n  }\n\n  return target;\n};\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport \"@lisn/bundle-essentials\"; // side effects\n\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport * as _actions from \"@lisn/actions/index\";\nimport * as triggers from \"@lisn/triggers/index\";\n\nexport * from \"@lisn/bundle-essentials\";\n\n// --- remove widget specific actions\nexport const actions = omitKeys(_actions, {\n  Open: true,\n  NextPage: true,\n  PrevPage: true,\n  GoToPage: true,\n  EnablePage: true,\n  DisablePage: true,\n} as const);\n\nexport * as triggers from \"@lisn/triggers/index\";\n\nactions.AddClass.register();\nactions.RemoveClass.register();\nactions.AnimatePlay.register();\nactions.AnimatePause.register();\nactions.Animate.register();\nactions.Display.register();\nactions.Undisplay.register();\nactions.ScrollTo.register();\nactions.SetAttribute.register();\nactions.Show.register();\nactions.Hide.register();\nactions.Enable.register();\nactions.Disable.register();\nactions.Run.register();\n\ntriggers.LayoutTrigger.register();\ntriggers.LoadTrigger.register();\ntriggers.ClickTrigger.register();\ntriggers.PressTrigger.register();\ntriggers.HoverTrigger.register();\ntriggers.ScrollTrigger.register();\ntriggers.Trigger.register();\ntriggers.ViewTrigger.register();\n"],"names":["PREFIX","LOG_PREFIX","OBJECT","Object","SYMBOL","Symbol","ARRAY","Array","STRING","String","FUNCTION","Function","MATH","Math","NUMBER","Number","PROMISE","Promise","PI","INFINITY","Infinity","S_ABSOLUTE","S_FIXED","S_WIDTH","S_HEIGHT","S_TOP","S_BOTTOM","S_UP","S_DOWN","S_LEFT","S_RIGHT","S_AT","S_ABOVE","S_BELOW","S_IN","S_OUT","S_NONE","S_AMBIGUOUS","S_ADDED","S_REMOVED","S_ATTRIBUTE","S_KEY","S_MOUSE","S_POINTER","S_TOUCH","S_WHEEL","S_CLICK","S_HOVER","S_PRESS","S_SCROLL","S_ZOOM","S_DRAG","S_UNKNOWN","S_SCROLL_TOP","concat","S_SCROLL_LEFT","S_SCROLL_WIDTH","S_SCROLL_HEIGHT","S_CLIENT_WIDTH","S_CLIENT_HEIGHT","S_SCROLL_TOP_FRACTION","S_SCROLL_LEFT_FRACTION","S_HORIZONTAL","S_VERTICAL","S_SKIP_INITIAL","S_DEBOUNCE_WINDOW","S_TOGGLE","S_CANCEL","S_KEYDOWN","S_MOUSEUP","S_MOUSEDOWN","S_POINTERUP","S_POINTERDOWN","S_POINTERENTER","S_POINTERLEAVE","S_POINTERMOVE","S_POINTERCANCEL","S_TOUCHSTART","S_TOUCHEND","S_TOUCHMOVE","S_TOUCHCANCEL","S_SELECTSTART","S_ATTRIBUTES","S_CHILD_LIST","S_REVERSE","S_DISABLED","S_ARROW","S_ROLE","ARIA_PREFIX","S_ARIA_CONTROLS","PREFIX_WRAPPER","PREFIX_INLINE_WRAPPER","PREFIX_TRANSITION","PREFIX_TRANSITION_DISABLE","PREFIX_HIDE","PREFIX_SHOW","PREFIX_DISPLAY","PREFIX_UNDISPLAY","PREFIX_PLACE","PREFIX_ORIENTATION","PREFIX_GHOST","PREFIX_NO_SELECT","PREFIX_NO_TOUCH_ACTION","PREFIX_NO_WRAP","S_ANIMATE","ANIMATE_PREFIX","PREFIX_ANIMATE_DISABLE","PREFIX_ANIMATE_PAUSE","PREFIX_ANIMATE_REVERSE","USER_AGENT","navigator","userAgent","match","LisnError","_Error","_classCallCheck","_callSuper","arguments","_inherits","_createClass","_wrapNativeSuper","Error","LisnUsageError","_LisnError","_this","message","length","undefined","name","LisnBugError","_LisnError2","_this2","root","self","_typeof","global","kebabToCamelCase","str","replace","m","toUpperCase","charAt","camelToKebabCase","toLowerCase","prefixName","MC","prefixCssVar","prefixCssJsVar","prefixData","prefixLisnData","s","timeNow","Date","now","bind","timeSince","startTime","hasDOM","document","getWindow","window","getDoc","getDocElement","documentElement","getDocScrollingElement","scrollingElement","getBody","body","getReadyState","readyState","getPointerType","event","isPointerEvent","pointerType","isMouseEvent","onAnimationFrame","requestAnimationFrame","createElement","tagName","options","createButton","label","tag","btn","setTabIndex","setAttr","isNullish","v","isEmpty","isIterableObject","isNonPrimitive","iterator","isArray","isInstanceOf","isObject","typeOf","isNumber","isString","isLiteralString","isBoolean","isFunction","isDoc","target","MouseEvent","PointerEvent","isTouchPointerEvent","isWheelEvent","WheelEvent","isKeyboardEvent","KeyboardEvent","isTouchEvent","TouchEvent","isNode","Node","isElement","Element","isHTMLElement","HTMLElement","isNodeBAfterA","nodeA","nodeB","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","strReplace","replacement","setTimer","setTimeout","clearTimer","clearTimeout","getBoundingClientRect","el","copyBoundingRectProps","rect","_defineProperty","x","left","right","y","top","bottom","querySelector","selector","querySelectorAll","docQuerySelector","docQuerySelectorAll","getElementById","id","getAttr","getAttribute","value","setAttribute","unsetAttr","delAttr","removeAttribute","includes","arr","startAt","indexOf","filter","array","filterFn","filterBlank","result","lengthOf","sizeOf","obj","_obj$size","size","_obj$length","preventDefault","arrayFrom","from","keysOf","keys","defineProperty","merge","_MC$OBJECT","_len","a","_key","assign","apply","copyObject","promiseResolve","resolve","promiseAll","all","freezeObj","freeze","hasOwnProp","o","prop","prototype","hasOwnProperty","call","preventExtensions","stringify","JSON","floor","ceil","log2","sqrt","max","min","abs","round","pow","parseFloat","isNaN","Class","constructorOf","constructor","typeOrClassOf","_constructorOf","parentOf","element","parentElement","childrenOf","children","targetOf","currentTargetOf","currentTarget","classList","S_TABINDEX","getTabIndex","index","unsetTabIndex","remove","deleteObjKey","key","deleteKey","map","elScrollTo","coords","behavior","scrollTo","elScrollBy","scrollBy","newPromise","executor","newMap","entries","Map","newWeakMap","WeakMap","newSet","values","Set","newWeakSet","WeakSet","newIntersectionObserver","callback","IntersectionObserver","newResizeObserver","ResizeObserver","newMutationObserver","MutationObserver","usageError","msg","bugError","illegalConstructorError","useWhat","CONSOLE","console","consoleDebug","debug","consoleLog","log","consoleInfo","info","consoleWarn","warn","consoleError","error","settings","MH","mainScrollableElementSelector","contentWrappingAllowed","pageLoadTimeout","autoWidgets","scrollbarHideNative","scrollbarOnMobile","scrollbarPositionH","scrollbarPositionV","scrollbarAutoHide","scrollbarClickScroll","scrollbarDragScroll","scrollbarUseHandle","sameHeightDiffTolerance","sameHeightResizeThreshold","sameHeightDebounceWindow","sameHeightMinGap","sameHeightMaxFreeR","sameHeightMaxWidthR","deviceBreakpoints","mobile","tablet","desktop","aspectRatioBreakpoints","tall","square","wide","lightThemeClassName","darkThemeClassName","deltaLineHeight","deltaPageWidth","deltaPageHeight","verbosityLevel","remoteLoggerURL","remoteLoggerOnMobileOnly","roundNumTo","numDecimal","multiplicationFactor","isValidNum","isFinite","toNum","defaultValue","numValue","toInt","toNonNegNum","toPosNum","toNumWithBounds","limits","_limits$min","_limits$max","_ref","maxAbs","_toConsumableArray","havingMaxAbs","_len3","_key3","sort","b","hAngle","normalizeAngle","atan2","degToRad","areParallel","vA","vB","angleDiffThreshold","angleA","angleB","areAntiParallel","distanceBetween","ptA","ptB","easeInOutQuad","sortedKeysByVal","descending","keyWithMaxVal","slice","getBitmask","start","end","copyExistingKeys","fromObj","toObj","omitKeys","keysToRm","res","compareValuesIn","objA","objB","roundTo","valA","valB","toArrayIfSingle","toBool","formatAsString","maxLen","maybeConvertToString","joinAsString","separator","args","join","splitOn","input","trim","limit","output","addEntry","push","matchIndex","matchLength","_match$index","exec","randId","nChars","segment","random","toString","toMargins","absoluteSize","_parts$","_parts$2","_parts$3","toPxValue","strValue","margin","parts","margins","objToStrKey","flattenForSorting","k","stringifyReplacer","nested","classStr","stack","validateStrList","checkFn","_toArray","toArray","_validateString","validateNumList","_toArray2","_validateNumber","validateNumber","validateBoolean","_validateBoolean","validateString","validateStringRequired","validateBooleanOrString","stringCheckFn","_validateBooleanOrString","typeDescription","numVal","boolVal","BitSpaces","counter","newCounter","create","propNames","newBitSpace","get","_nBits","_bitmask","newBitSpaces","createBitSpace","spaces","_len2","_key2","bitmask","space","bit","has","p","bitmaskFor","pStart","pEnd","thisStart","thisEnd","nameOf","val","_propNames","_iterator","_createForOfIteratorHelper","_step","n","done","enumerable","err","e","f","DOM_CATEGORIES_SPACE","scheduleHighPriorityTask","task","scheduler","postTask","priority","channel","MessageChannel","port1","onmessage","close","port2","postMessage","getDebouncedHandler","debounceWindow","handler","timer","lastArgs","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop","waitForDelay","delay","wrapCallback","handlerOrCallback","isRemoved","callablesMap","invoke","wrapper","Callback","onRemove","rmFn","CallbackScheduler","_clear","fn","add","reject","_push","sent","t0","REMOVE","set","queues","flush","_ref2","_callee2","queue","_callee2$","_context2","_running","_task","shift","_x","item","_onRemove","logWarn","isMessageSeen","logError","discardMessages","isSeen","waitForMutateTime","scheduleDOMTask","scheduledDOMMutations","waitForMeasureTime","scheduledDOMMeasurements","waitForSubsequentMutateTime","then","waitForSubsequentMeasureTime","hasScheduledDOMTasks","runAllDOMTasks","runDOMTaskQueue","getVisibleContentChildren","isVisibleContentTag","isInlineTag","inlineTags","isDOMElement","SVGElement","MathMLElement","transitionElementNow","fromCls","toCls","cancelCSSTransitions","didChange","hasClass","removeClassesNow","addClassesNow","transitionElement","thisTransition","transitionDuration","_args","scheduleCSSTransition","_isCancelled","abrupt","_finish","getMaxTransitionDuration","_x2","_x3","displayElementNow","displayElement","undisplayElementNow","undisplayElement","showElement","hideElement","toggleDisplayElement","isElementUndisplayed","toggleShowElement","isElementHidden","className","contains","_MH$classList","classNames","addClasses","_MH$classList2","removeClasses","_len4","_key4","toggleClassNow","force","toggle","toggleClass","getData","getBoolData","setDataNow","setData","setBoolDataNow","setBoolData","unsetBoolDataNow","unsetBoolData","delDataNow","delData","getComputedStylePropNow","getComputedStyle","getPropertyValue","getComputedStyleProp","getStylePropNow","_style","style","getStyleProp","setStylePropNow","_style2","setProperty","setStyleProp","delStylePropNow","_style3","removeProperty","delStyleProp","propVal","duration","_x4","disableInitialTransition","_ref3","_callee3","_args3","_callee3$","_context3","_x5","setHasModal","PREFIX_HAS_MODAL","delHasModal","_ref4","_callee4","fromElement","toElement","includeComputedProps","props","_prop","_prop2","_callee4$","_context4","copyStyle","_x6","_x7","_x8","setNumericStyleProps","_ref5","_callee5","transformFn","varPrefix","cssPropSuffix","varName","_options$_numDecimal","thisNumDecimal","currValue","_args5","_callee5$","_context5","_transformFn","_prefix","t1","_numDecimal","t2","t3","_units","_x9","_x10","scheduledCSSTransitions","scheduledTransitions","_len5","toClasses","_key5","_i","_toClasses","scheduledTransition","_cancel","isCancelled","wrapElementNow","createWrapperFor","ignoreMove","to","replaceWith","append","wrapElement","wrapChildrenNow","moveChildrenNow","moveElementNow","wrapChildren","replaceElementNow","newElement","replaceElement","swapElementsNow","elementA","elementB","temp","swapElements","oldParent","newParent","child","moveChildren","_x11","_x12","_x13","parentEl","position","moveElement","_ref6","_callee6","_callee6$","_context6","_x14","_x15","_ref7","_callee7","_args7","_callee7$","_context7","hideAndRemoveElement","_x16","getOrAssignID","prefix","domID","wrapScrollingContent","_ref8","_callee8","firstChild","_callee8$","_context8","PREFIX_CONTENT_WRAPPER","_x17","cloneElement","clone","cloneNode","insertGhostCloneNow","insertBefore","_wrapper","_clone","insertGhostClone","recordsToSkipOnce","getIgnoreMove","clearIgnoreMove","waitForElement","timeout","callFn","observer","disconnect","observe","childList","subtree","waitForElementOrInteractive","isInteractive","waitForInteractive","INTERACTIVE","COMPLETE","addEventListener","waitForComplete","waitForPageReady","pageIsReady","dispatchReady","isPageReady","newXMap","getDefaultV","XMap","newXMapGetter","newXWeakMap","XWeakMap","newXWeakMapGetter","XMapBase","sGet","prune","sk","rest","_XMapBase","clear","_XMapBase2","DOMWatcher","config","CONSTRUCTOR_KEY","buffer","t","_target","_categoryBitmask","_attributes","_addedTo","_removedFrom","allCallbacks","mutationHandler","records","record","recType","type","_iterator3","addedNodes","_step3","operation","ADDED_BIT","_iterator4","removedNodes","_step4","REMOVED_BIT","attributeName","ATTRIBUTE_BIT","_iterator2","_step2","shouldSkipOperation","processOperation","observers","_observer","_isActive","createCallback","_allCallbacks$get","_callback","deleteHandler","_options","setupOnMutation","userOptions","childQueue","_arr","initOperation","bufferedOperation","diffOperation","getOptions","_root","activateObserver","skipInitial","_selector","takeRecords","matches","getDiffOperation","invokeCallback","activeCategories","_iterator5","_step5","entry","deactivateObserver","_iterator6","_step6","categoryBitmask","currentTargets","mutationType","_subtree","requestToSkip","removedFrom","addedTo","requestFrom","requestTo","onMutation","offMutation","_allCallbacks$get2","getConfig","reuse","_instances$get","myConfig","configStrKey","instance","instances","_config$subtree","CATEGORIES_BITS","categories","_iterator7","_step7","cat","operationA","operationB","attributes","_iterator8","_step8","attr","_iterator9","_step9","getMaxDeltaDirection","deltaX","deltaY","getVectorDirection","vector","getOppositeDirection","direction","OPPOSITE_DIRECTIONS","getOppositeXYDirections","directions","directionList","isValidXYDirection","opposites","opposite","XY_DIRECTIONS","isValidDirection","DIRECTIONS","Z_DIRECTIONS","SCROLL_DIRECTIONS","callEventListener","handleEvent","addEventListenerTo","eventType","transformEventType","getEventHandlerData","thirdArg","wrappedHandler","supports","getBrowserSupport","_optionsArg","_options$capture","capture","once","removeEventListenerFrom","setEventHandlerData","_wrappedHandler","_thirdArg","data","removeEventListener","deleteEventHandlerData","preventSelect","undoPreventSelect","browserEventSupport","_pointer","passive","signal","optTest","opt","_loop","thisOpt","AbortController","dummyHandler","dummyElement","e__ignored","registeredEventHandlerData","getEventOptionsStr","finalOptions","_registeredEventHandl","optionsStr","_registeredEventHandl2","startsWith","isValidInputDevice","device","DEVICES","isValidIntent","intent","INTENTS","addDeltaZ","current","increment","MIN_DELTA_Z","getKeyGestureFragment","events","_options$scrollHeight","LINE","PAGE","CONTENT","scrollHeight","deltasUp","amount","deltasDown","deltasLeft","deltasRight","deltasIn","deltasOut","deltaZ","_deltasForKey","deltasForKey","SK_UP","SK_ARROWUP","SK_PAGEUP","SK_DOWN","SK_ARROWDOWN","SK_PAGEDOWN","SK_LEFT","SK_ARROWLEFT","SK_RIGHT","SK_ARROWRIGHT","shiftKey","ctrlKey","theseDeltas","_theseDeltas","_slicedToArray","thisDeltaX","thisDeltaY","thisDeltaZ","thisIntent","SK_PAGE","SK_ARROW","getPointerGestureFragment","pointerEventClass","pointerUpType","filteredEvents","eType","buttons","numEvents","firstEvent","lastEvent","clientX","clientY","getTouchGestureFragment","_options$dragHoldTime","_options$dragNumFinge","moves","getTouchDiff","deltaThreshold","numMoves","holdTime","getHoldTime","canBeDrag","dragHoldTime","dragNumFingers","d","isSignificant","vectorA","vectorB","startDistance","startX","startY","endDistance","endX","endY","deltaSign","reverseScroll","isFirst","thisDirection","lastTouchEvent","touches","groupedTouches","touch","identifier","touchList","nTouches","firstTouch","lastTouch","firstStart","findIndex","firstMove","timeStamp","normalizeWheel","spinX","spinY","pixelX","pixelY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","deltaMode","getWheelGestureFragment","maxDelta","percentage","GestureWatcher","allListeners","_getCallbackAndWrappe","getCallbackAndWrapper","setupOnGesture","_allListeners$get","listeners","_devices","setupListeners","_nCallbacks","_preventDefault","_nPreventDefault","_allListeners$get2","_remove","invokeCallbacks","_allListeners$get3","isTerminated","intents","_intents","hasAddedTabIndex","hasPreventedSelect","addOrRemoveListeners","action","listener","eventTypes","method","addInitialListener","initialListener","initiatingEvents","removeInitialListener","addOngoingListener","processEvent","ongoingEvents","removeOngoingListener","trackGesture","setGestureCssProps","totalDeltaX","totalDeltaY","totalDeltaZ","noTrackGesture","offGesture","onGesture","_allCallbacks$get3","_config$preventDefaul","_config$naturalTouchS","_config$touchDragHold","_config$touchDragNumF","_debounceWindow","_deltaThreshold","_angleDiffThreshold","_naturalTouchScroll","naturalTouchScroll","_touchDragHoldTime","touchDragHoldTime","_touchDragNumFingers","touchDragNumFingers","pointer","wheel","fragmentGetters","_options$minTotalDelt","_options$maxTotalDelt","_options$minTotalDelt2","_options$maxTotalDelt2","_options$minTotalDelt3","_options$maxTotalDelt3","_options$preventDefau","_options$naturalTouch","_options$touchDragHol","_options$touchDragNum","devices","_directions","_minTotalDeltaX","minTotalDeltaX","_maxTotalDeltaX","maxTotalDeltaX","_minTotalDeltaY","minTotalDeltaY","_maxTotalDeltaY","maxTotalDeltaY","_minTotalDeltaZ","minTotalDeltaZ","_maxTotalDeltaZ","maxTotalDeltaZ","logger","preventNextClick","eventQueue","debouncedWrapper","fragment","eventQueueCopy","_eventQueueCopy","_eventQueueCopy$","clearEventQueue","newTotalDeltaX","newTotalDeltaY","newTotalDeltaZ","time","preventDefaultActionFor","keepLastEvent","splice","isActualGesture","isPointerDown","focus","preventScroll","isValidDeviceList","isValidForType","S_DEVICES","ORDERED_DEVICES","isValidAspectRatioList","aspectR","S_ASPECTRS_CAMEL","ORDERED_ASPECTR","getOtherDevices","getOtherLayouts","getOtherAspectRatios","getLayoutBitmask","layoutBitmask","getBitmaskFromSpec","aspectRatios","ORDERED_DEVICE_NAMES","ORDERED_ASPECTR_NAMES","bitSpaces","NUM_LAYOUTS","LAYOUT_RANGE_REGEX","RegExp","getLayoutsFromBitmask","keyName","bitSpace","layouts","spec","oppositeBitmask","singleKeyName","rangeMatch","groups","minLayout","layoutA","maxLayout","layoutB","lt","isScrollable","axis","active","noCache","_isScrollableCache$ge","cachedResult","isScrollableCache","offset","doCache","canScroll","dimension","IS_SCROLLABLE_CACHE_TIMEOUT","getClosestScrollable","ancestor","getCurrentScrollAction","scrollable","toScrollableOrDefault","currentScrollAction","_scrollable","currentScroll","cancel","cancelFn","_weCanInterrupt","scrollEvents","preventScrollHandler","_userCanInterrupt","promise","initiateScroll","thisScrollAction","waitFor","cleanup","_scrollEvents","isValidScrollDirection","getClientWidthNow","isScrollableBodyInQuirks","offsetWidth","getBorderWidth","getClientHeightNow","offsetHeight","fetchMainContentElement","init","mainContentElement","tryGetMainScrollableElement","mainScrollableElement","fetchMainScrollableElement","getDefaultScrollingElement","fetchScrollableElement","toScrollableOrMain","mappedScrollables","DIFF_THRESHOLD","arePositionsDifferent","getMain","_options$weCanInterru","_options$userCanInter","getTargetCoordinates","altTarget","_offset","_altTarget","_altOffset","altOffset","_duration","weCanInterrupt","userCanInterrupt","docScrollingElement","targetEl","getStartEndPosition","applyOffset","getEndPosition","startPosition","targetCoordinates","endPosition","scrollH","scrollW","clientH","clientW","previousTimeStamp","currentPosition","step","elapsed","progress","side","initPromise","contentElement","createOverlay","canReuse","_overlays$get2","existingOverlay","overlay","isPercentageHOffset","isPercentageVOffset","needsContentWrapping","fetchOverlayOptions","_id","overlays","_parent","_overlayKey","createOnlyOverlay","_userOptions$data2","_userOptions$id2","getCssProperties","fetchParent","parent","_data","getOverlayKey","finalCssProperties","userSuppliedParent","getEntryContentBox","contentBoxSize","getSizeFromInlineBlock","contentRect","getEntryBorderBox","fallbackToContent","borderBoxSize","NaN","isValidBox","box","ALL_BOXES","isValidDimension","ALL_DIMENSIONS","tryGetViewportOverlay","viewportOverlay","fetchViewportOverlay","fetchViewportSize","_MH$getDocScrollingEl","realtime","_args2","clientWidth","clientHeight","S_INLINE_SIZE","S_BLOCK_SIZE","XResizeObserver","targetsToSkip","observedTargets","resizeHandler","skipNum","borderObserver","contentObserver","observeTarget","targets","_targets","observeLater","_i2","_targets2","unobserve","_i3","_targets3","SizeWatcher","allSizeData","processEntry","xObserver","fetchCurrentSize","sizeData","fetchElement","getSizeData","border","content","fetchOptions","_options$box","_options$dimension","_options$MC$S_DEBOUNC","threshold","_resizeThreshold","t4","_element","_box","_dimension","_threshold","setupOnResize","removeOnResize","currEntry","setSizeCssProps","latestData","thresholdsExceeded","hasExceededThreshold","trackSize","noTrackSize","onResize","offResize","resizeThreshold","lastThresholdData","dim","diff","borderBox","contentBox","borderWidth","borderHeight","contentWidth","contentHeight","LayoutWatcher","nonIntersectingBitmask","currentLayoutData","aspectRatio","fetchCurrentLayout","readyPromise","setupOverlays","_yield$createOverlays","createOverlays","_deviceBreakpoints","_aspectRatioBreakpoints","isReady","intersectionHandler","numEntries","getNonIntersecting","processLayoutChange","observeOptions","rootMargin","triggerOverlay","_layoutBitmask","setupOnLayout","layoutData","changeMatches","skipCallbacks","deviceBit","aspectRatioBit","onLayout","offLayout","VAR_BORDER_HEIGHT","PREFIX_DEVICE","PREFIX_ASPECTR","overlayPromises","overlayParent","parentHeightCss","getOverlayLayout","layout","thisLayoutData","prevLayoutData","isIntersecting","isValidPointerAction","POINTER_ACTIONS","PointerWatcher","setupOnPointer","startHandler","endHandler","startCallback","endCallback","_actions","listenerSetupFn","onPointer","offPointer","_config$preventSelect","_preventSelect","_options$preventSelec","actions","setupClickListener","toggleState","state","setupPointerListeners","startEventSuff","endEventSuff","startEvent","endEvent","startListener","endListener","click","hover","press","actionData","ScrollWatcher","allScrollData","activeListeners","fetchCurrentScroll","isScrollEvent","previousEventData","fetchScrollData","trackType","_trackType","setupOnScroll","eventTarget","scrollData","listenerOptions","fetchOnScrollOptions","_eventTarget","TRACK_FULL","setupSizeTrack","_nRealtime","scrollHandler","directionMatches","removeOnScroll","setScrollCssProps","scrollCallback","doc","resizeCallback","sizeWatcher","observedElements","allowedToWrap","domWatcher","onAddedCallback","_activeListeners$get","finish","scroll","_options$amount","isVertical","sign","targetCoordinate","asFractionOf","_scrollDuration","t5","t6","t7","fetchCurrentScrollAction","stopUserScrolling","stopScroll","_args8","immediate","trackScroll","noTrackScroll","onScroll","TRACK_REGULAR","offScroll","_scrollThreshold","scrollThreshold","scrollDuration","_ref9","_callee9","_callee9$","_context9","getEventTarget","userDirections","latestDirection","topDiff","leftDiff","checkTop","checkLeft","_ref10","_callee10","scrollTop","scrollLeft","scrollWidth","scrollTopFraction","scrollLeftFraction","prevScrollTop","prevScrollLeft","_callee10$","_context10","isValidScrollOffset","OFFSET_REGEX","isValidView","view","VIEWS","getOppositeViews","views","getViewsBitmask","VIEWS_SPACE","at","above","below","getViewsFromBitmask","viewsStr","viewsBitmask","parseScrollOffset","_match$groups","_match$groups2","reference","ref","XIntersectionObserver","selectedEntries","thresholds","ViewWatcher","allViewData","_rootMargin","fetchCurrentView","fetchData","entryOrElement","intersection","fetchIntersectionData","fetchViewData","setupOnView","viewData","rootBounds","setupInviewTrack","viewsToBitmask","_viewsBitmask","removeOnView","setViewCssProps","_entry","viewCallback","scrollWatcher","isInview","removeTrackCallback","scrollableAncestors","addTrackCallback","enterOrLeaveCallback","fetchScrollableAncestors","_config$_root","trackCallback","prevData","changed","viewChanged","target__ignored","trackView","noTrackView","onView","offView","_config$rootMargin","targetBounds","relative","entryOrTarget","vpSize","rootMargins","isCrossOrigin","_args9","IntersectionObserverEntry","boundingClientRect","fetchBounds","_targetBounds","_rootMargins","_rootBounds","_isIntersecting","_isCrossOrigin","_x18","_x19","_yield$fetchViewportS","width","height","_x20","_x21","_x22","_ref11","_callee11","_intersection$_isInte","vpHeight","vpWidth","_args11","_callee11$","_context11","fetchViews","hMiddle","vMiddle","_x23","_ref12","_callee12","useScrollingAncestor","delta","xView","yView","scrollingAncestor","_callee12$","_context12","_left","_right","_top","_bottom","_x24","_x25","_x26","_ref13","_callee13","overlayOptions","_callee13$","_context13","getOverlayOptions","_x27","_x28","_parseScrollOffset","ovrDimension","Widget","destroy","isDisabled","isDestroyed","destroyPromise","enableCallbacks","disableCallbacks","destroyCallbacks","disable","enable","toggleEnable","onDisable","onEnable","elInstances","onDestroy","getElement","_instances$get2","registerWidget","newWidget","configValidator","_options$selector","prefixedName","registeredWidgets","getDefaultWidgetSelector","thisConfigValidator","widgets","configSpecs","dataAttr","_configSpecs","_config","theseWidgets","supportsMultiple","fetchWidgetConfig","w","getWidgetConfig","validator","toOptionsObject","configPromises","fetchUniqueWidget","Type","widget","_splitOn","_splitOn2","registerAction","newAction","registeredActions","newActionFromSpec","argsAndOptions","fetchAction","AddClass","_getMethods","getMethods","_add","_toggle","undo","register","_construct","RemoveClass","_getMethods2","_toggle2","cls","iterateAnimations","webAnimationCallback","legacyCallback","animation","getAnimations","resetCssAnimationsNow","Animate","animate","GO_FORWARD","GO_BACKWARD","GO_TOGGLE","isInitial","setupAnimation","setupAnimationLegacy","pauseTillReady","isBackward","playbackRate","reverse","playState","play","pause","CSSAnimation","cancelHandler","onAnimationCancel","_MH$targetOf","Animation","effect","KeyframeEffect","newAnimation","animationName","isPaused","goBackwards","doPause","AnimatePlay","_play","_pause","PAUSE","AnimatePause","PLAY","TOGGLE","Display","_display","_undisplay","Undisplay","_display2","_undisplay2","getReferenceElement","thisElement","referenceElement","relation","find","matchOp","refOrCls","PREFIX_REF","DATA_REF","getFirstReferenceElement","getLastReferenceElement","getThisReferenceElement","getNextReferenceElement","getPrevReferenceElement","waitForReferenceElement","getAllReferenceElements","allRefs","closest","getNextOrPrevReferenceElement","goBackward","numRefs","refIndex","i","currentIsAfter","Trigger","_Widget","_config$once","_config$oneWay","_config$doDelay","_config$undoDelay","oneWay","doDelay","undoDelay","lastCallId","callActions","newToggleState","myCallId","run","getActions","_superPropGet","registerTrigger","newTrigger","clsPref","_getData","baseConfigValidator","allSpecs","_config$actOn","tmp","configSpec","_splitOn3","_splitOn4","argSpec","allActionSpecs","actionTarget","actionSpec","_splitOn5","_splitOn6","_name","actionArgsAndOptions","newBaseConfigValidator","TRIGGER_SEP","OPTION_PREF_CHAR","ACTION_PREF_CHAR","actOn","ACTION_ARGS_PREF_CHAR","Enable","ids","_enable","_disable","_toggleEnable","Disable","Run","_getMethods3","_run","_reverse","triggerPromises","getTriggers","triggers","trigger","ScrollTo","watcher","canReverse","hasReversed","offsetX","offsetY","newConfigValidator","_validateNumber2","SetAttribute","isOn","setAttrs","on","attrName","off","Show","_show","_hide","Hide","_show2","_hide2","isValidPosition","POSITIONS","isValidTwoFoldPosition","TWO_FOLD_POSITION_REGEX","POSITIONS_OPTIONS_STR","registerOpenable","newOpenable","Openable","properties","isModal","isOffcanvas","openCallbacks","closeCallbacks","isOpen","open","PREFIX_IS_OPEN","scrollWrapperToTop","outerWrapper","onOpen","onClose","getRoot","getContainer","container","getTriggerConfigs","_setupElements","setupElements","_Openable","Collapsible","_config$autoClose","_config$reverse","isHorizontal","horizontal","orientation","onSetup","_step3$value","triggerConfig","insertCollapsibleIcon","_assertThisInitialized","WIDGET_NAME_COLLAPSIBLE","autoClose","closeButton","wrapTriggers","PREFIX_REVERSE","disableTransitionTimer","tempEnableTransition","peek","peekSize","VAR_PEEK_SIZE","PREFIX_PEEK","updateWidth","VAR_JS_COLLAPSIBLE_WIDTH","collapsibleConfigValidator","_Openable2","Popup","_config$autoClose2","_config$closeButton","_config$position","_this3","WIDGET_NAME_POPUP","S_AUTO","_yield$MH$promiseAll","_yield$MH$promiseAll2","contentSize","containerView","placement","fetchPopupPlacement","popupConfigValidator","_Openable3","Modal","_config$autoClose3","_config$closeButton2","WIDGET_NAME_MODAL","modalConfigValidator","_Openable4","Offcanvas","_config$autoClose4","_config$closeButton3","_this4","WIDGET_NAME_OFFCANVAS","offcanvasConfigValidator","PREFIX_CLOSE_BTN","PREFIX_OPENS_ON_HOVER","PREFIX_LINE","PREFIX_ICON_POSITION","PREFIX_TRIGGER_ICON","PREFIX_ICON_WRAPPER","S_ARIA_EXPANDED","S_ARIA_MODAL","MIN_CLICK_TIME_AFTER_HOVER_OPEN","S_ARROW_UP","S_ARROW_DOWN","S_ARROW_LEFT","S_ARROW_RIGHT","ARROW_TYPES","ICON_CLOSED_TYPES","ICON_OPEN_TYPES","isValidIconClosed","isValidIconOpen","triggerConfigValidator","icon","iconClosed","iconOpen","getPrefixedNames","pref","_overlay","_innerWrapper","_outerWrapper","_content","_container","_trigger","_containerForSelect","_triggerForSelect","_contentId","findContainer","currWidget","childRef","findTriggers","prefixedNames","getTriggerSelector","suffix","contentId","getTriggersFrom","inputTriggers","triggerMap","addTrigger","_step5$value","_properties$wrapTrigg","innerWrapper","placeholder","closeBtn","elements","_step7$value","_arr2","_arr3","_step8$value","hoverTimeOpened","isPointerOver","activeTrigger","isTrigger","shouldPreventDefault","_triggers$get$prevent","_triggers$get","usesHover","_triggers$get2","usesAutoClose","_triggers$get3","toggleTrigger","openIt","setIsPointerOver","pointerLeft","unsetIsPointerOver","pointerEntered","closeIfEscape","closeIfClickOutside","maybeSetupAutoCloseListeners","addOrRemove","setupOrCleanup","_step9$value","widgetConfig","_triggerConfig$icon","_triggerConfig$iconCl","_triggerConfig$iconOp","iconPosition","l","line","_ref14","containerPosition","containerTop","containerBottom","containerLeft","containerRight","containerHMiddle","containerVMiddle","popupWidth","popupHeight","placementVars","finalPlacement","alignmentVars","alignment","middle","Open","widgetPromise","Pager","_Pager$get","DUMMY_ID","pages","toggles","switches","nextPrevSwitch","_next","nextSwitch","_prev","prevSwitch","pageSelector","PREFIX_PAGE__FOR_SELECT","toggleSelector","PREFIX_TOGGLE__FOR_SELECT","switchSelector","PREFIX_SWITCH__FOR_SELECT","nextSwitchSelector","PREFIX_NEXT_SWITCH__FOR_SELECT","prevSwitchSelector","PREFIX_PREV_SWITCH__FOR_SELECT","numPages","page","components","_pages","_toggles","_switches","_nextPrevSwitch","methods","nextPage","_nextPage","prevPage","_prevPage","goToPage","pageNum","_goToPage","disablePage","_disablePage","enablePage","_enablePage","togglePage","_togglePage","isPageDisabled","_isPageDisabled","getCurrentPage","_getCurrentPage","getPreviousPage","_getPreviousPage","getCurrentPageNum","_getCurrentPageNum","getPreviousPageNum","_getPreviousPageNum","onTransition","_onTransition","getPages","getSwitches","getToggles","WIDGET_NAME","MIN_TIME_BETWEEN_WHEEL","S_CURRENT","S_ARIA_CURRENT","S_COVERED","S_NEXT","S_TOTAL_PAGES","S_CURRENT_PAGE","S_PAGE_NUMBER","PREFIXED_NAME","PREFIX_ROOT","PREFIX_PAGE_CONTAINER","PREFIX_PAGE","PREFIX_IS_FULLSCREEN","PREFIX_USE_PARALLAX","PREFIX_TOTAL_PAGES","PREFIX_CURRENT_PAGE","PREFIX_CURRENT_PAGE_IS_LAST","PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED","PREFIX_CURRENT_PAGE_IS_LAST_ENABLED","PREFIX_PAGE_STATE","PREFIX_PAGE_NUMBER","VAR_TOTAL_PAGES","VAR_CURRENT_PAGE","VAR_PAGE_NUMBER","initialPage","fullscreen","parallax","useGestures","bool","alignGestureDirection","fetchClosestScrollable","_getClosestScrollable","setPageNumber","lastPromise","setCurrentPage","pagerEl","currPageNum","isFirstEnabled","isLastEnabled","setPageState","_pages$","_config$initialPage","_config$fullscreen","_config$parallax","_config$horizontal","_config$useGestures","_config$alignGestureD","pageContainer","isFullscreen","isParallax","gestureWatcher","viewWatcher","getGestureOptions","scrollToPager","transitionOnGesture","swapDirection","addWatcher","_gestureWatcher","_viewWatcher","getPageNumForEvent","toggleClickListener","switchClickListener","nextSwitchClickListener","prevSwitchClickListener","removeWatcher","_gestureWatcher2","_viewWatcher2","idx","_step4$value","_step6$value","disabledPages","callbacks","fetchScrollOptions","lastPageNum","lastTransition","canTransition","gestureData","targetPage","NextPage","PrevPage","GoToPage","EnablePage","_getMethods4","DisablePage","_getMethods5","altPageNum","currentNum","targetNum","ClickTrigger","_Trigger","setupWatcher","PressTrigger","_Trigger2","HoverTrigger","_Trigger3","LayoutTrigger","_possibleConstructorReturn","otherDevices","otherAspectRatios","LoadTrigger","ScrollTrigger","oppositeDirections","ViewTrigger","oppositeViews","willAnimate","setupRepresentative","prevChild","previousElementSibling"],"mappings":"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"}