{"version":3,"file":"layout-trigger.js","names":["MH","waitForReferenceElement","isValidDeviceList","isValidAspectRatioList","getOtherDevices","getOtherAspectRatios","validateStringRequired","LayoutWatcher","registerTrigger","Trigger","LayoutTrigger","register","element","args","actions","config","assign","layout","strReplace","value","newConfigValidator","constructor","usageError","_defineProperty","getConfig","copyObject","lengthOf","devices","aspectRatios","otherDevices","otherAspectRatios","root","watcher","reuse","onLayout","run","reverse","key","isLiteralString","undefined","isHTMLElement"],"sources":["../../../src/ts/triggers/layout-trigger.ts"],"sourcesContent":["/**\n * @module Triggers\n *\n * @categoryDescription Layout\n * {@link LayoutTrigger} allows you to run actions when the viewport or a\n * target element's width or aspect ratio matches a given specification, and\n * undo those actions when the target's width or aspect ratio no longer\n * matches.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport {\n  isValidDeviceList,\n  isValidAspectRatioList,\n  getOtherDevices,\n  getOtherAspectRatios,\n} from \"@lisn/utils/layout\";\nimport { validateStringRequired } from \"@lisn/utils/validation\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport { LayoutWatcher } from \"@lisn/watchers/layout-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link LayoutTrigger} allows you to run actions when the viewport or a\n * target element's width or aspect ratio matches a given specification, and\n * undo those actions when the target's width or aspect ratio no longer\n * matches.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (required): A single {@link DeviceSpec} or\n *   {@link AspectRatioSpec}. In this case you can use a dash (\"-\") instead of\n *   space if needed (for example if using CSS classes instead of data\n *   attributes), e.g. \"min-tablet\" instead of \"min tablet\".\n *\n * - Additional trigger options:\n *   - `root`: A string element specification. See\n *     {@link Utils.getReferenceElement | getReferenceElement}.\n *\n * @example\n * Show the element when the window width matches \"tablet\" breakpoint, hide\n * otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"tablet @show\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-layout--tablet@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the window width matches \"tablet\" breakpoint,\n * hide otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"tablet @show +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `tablet` when the window width is at least \"tablet\", hide\n * otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"min tablet @add-class=tablet\"></div>\n * ```\n *\n * @example\n * Add class `mobile` when the window width is \"mobile\" or mobile-wide, add\n * class `tablet`, when it's \"tablet\" and so on; undo that otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"max mobile-wide @add-class=mobile ;\n *                           tablet @add-class=tablet ;\n *                           desktop @add-class=desktop\"\n * ></div>\n * ```\n *\n * @example\n * Show the element when window width is at least \"mobile-wide\" and at most\n * \"tablet\", hide otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"mobile-wide to tablet @show\"></div>\n * ```\n *\n * @example\n * When the aspect ratio of the next element with class `box` is square, then\n * add classes `c1` and `c2` to the element (that the trigger is defined on) and\n * enable trigger `my-trigger` defined on this same element; undo all of that\n * otherwise (on other aspect ratios of the reference root):\n *\n * ```html\n * <div data-lisn-on-layout=\"square @add-class=c1,c2 @enable=my-trigger +root=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-layout=\"square @add-class=c1,c2 @enable=my-trigger +root=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n *\n * @category Layout\n */\nexport class LayoutTrigger extends Trigger {\n  readonly getConfig: () => LayoutTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"layout\",\n      (element, args, actions, config) => {\n        return new LayoutTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            layout: validateStringRequired(\n              \"layout\",\n              MH.strReplace(\n                MH.strReplace(args[0] || \"\", /(min|max)-/g, \"$1 \"),\n                /-to-/g,\n                \" to \",\n              ),\n              (value) =>\n                isValidDeviceList(value) || isValidAspectRatioList(value),\n            ),\n          }),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: LayoutTriggerConfig,\n  ) {\n    const layout = config?.layout || \"\";\n    if (!layout) {\n      throw MH.usageError(\"'layout' is required\");\n    }\n\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    let devices: DeviceSpec | Device[] = [];\n    let aspectRatios: AspectRatioSpec | AspectRatio[] = [];\n    let otherDevices: Device[] = [];\n    let otherAspectRatios: AspectRatio[] = [];\n\n    if (isValidDeviceList(layout)) {\n      devices = layout;\n      otherDevices = getOtherDevices(layout);\n    } else {\n      aspectRatios = layout;\n      otherAspectRatios = getOtherAspectRatios(layout);\n    }\n\n    const root = config.root;\n    const watcher = LayoutWatcher.reuse({ root });\n\n    watcher.onLayout(this.run, { devices, aspectRatios });\n\n    if (MH.lengthOf(otherDevices) || MH.lengthOf(otherAspectRatios)) {\n      watcher.onLayout(this.reverse, {\n        devices: otherDevices,\n        aspectRatios: otherAspectRatios,\n      });\n    }\n  }\n}\n\n/**\n * @category Layout\n * @interface\n */\nexport type LayoutTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link DeviceSpec} or {@link AspectRatioSpec} to use. Required.\n   * See {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for\n   * accepted formats.\n   *\n   * Actions will be \"done\" when the layout of the root matches the given spec\n   * and \"undone\" otherwise.\n   */\n  layout: DeviceSpec | Device[] | AspectRatioSpec | AspectRatio[];\n\n  /**\n   * The root to use for the {@link LayoutWatcher}.\n   * See {@link Watchers/LayoutWatcher.LayoutWatcherConfig | LayoutWatcherConfig}\n   *\n   * @defaultValue {@link LayoutWatcher} default, the viewport\n   */\n  root?: HTMLElement | null;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<LayoutTriggerConfig, \"layout\">\n> = (element) => {\n  return {\n    root: async (key, value) => {\n      const root = MH.isLiteralString(value)\n        ? await waitForReferenceElement(value, element)\n        : undefined;\n      if (root && !MH.isHTMLElement(root)) {\n        throw MH.usageError(\"root must be HTMLElement\");\n      }\n      return root;\n    },\n  };\n};\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,EAAE;AASd,SAASC,uBAAuB;AAChC,SACEC,iBAAiB,EACjBC,sBAAsB,EACtBC,eAAe,EACfC,oBAAoB;AAEtB,SAASC,sBAAsB;AAI/B,SAASC,aAAa;AAEtB,SACEC,eAAe,EACfC,OAAO;AAMT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,SAASD,OAAO,CAAC;EAGzC,OAAOE,QAAQA,CAAA,EAAG;IAChBH,eAAe,CACb,QAAQ,EACR,CAACI,OAAO,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,KAAK;MAClC,OAAO,IAAIL,aAAa,CACtBE,OAAO,EACPE,OAAO,EACPd,EAAE,CAACgB,MAAM,CAACD,MAAM,EAAE;QAChBE,MAAM,EAAEX,sBAAsB,CAC5B,QAAQ,EACRN,EAAE,CAACkB,UAAU,CACXlB,EAAE,CAACkB,UAAU,CAACL,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,aAAa,EAAE,KAAK,CAAC,EAClD,OAAO,EACP,MACF,CAAC,EACAM,KAAK,IACJjB,iBAAiB,CAACiB,KAAK,CAAC,IAAIhB,sBAAsB,CAACgB,KAAK,CAC5D;MACF,CAAC,CACH,CAAC;IACH,CAAC,EACDC,kBACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,WAAWA,CACTT,OAAgB,EAChBE,OAAiB,EACjBC,MAA2B,EAC3B;IACA,MAAME,MAAM,GAAG,CAAAF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,MAAM,KAAI,EAAE;IACnC,IAAI,CAACA,MAAM,EAAE;MACX,MAAMjB,EAAE,CAACsB,UAAU,CAAC,sBAAsB,CAAC;IAC7C;IAEA,KAAK,CAACV,OAAO,EAAEE,OAAO,EAAEC,MAAM,CAAC;IAACQ,eAAA;IAChC,IAAI,CAACC,SAAS,GAAG,MAAMxB,EAAE,CAACyB,UAAU,CAACV,MAAM,CAAC;IAE5C,IAAI,CAACf,EAAE,CAAC0B,QAAQ,CAACZ,OAAO,CAAC,EAAE;MACzB;IACF;IAEA,IAAIa,OAA8B,GAAG,EAAE;IACvC,IAAIC,YAA6C,GAAG,EAAE;IACtD,IAAIC,YAAsB,GAAG,EAAE;IAC/B,IAAIC,iBAAgC,GAAG,EAAE;IAEzC,IAAI5B,iBAAiB,CAACe,MAAM,CAAC,EAAE;MAC7BU,OAAO,GAAGV,MAAM;MAChBY,YAAY,GAAGzB,eAAe,CAACa,MAAM,CAAC;IACxC,CAAC,MAAM;MACLW,YAAY,GAAGX,MAAM;MACrBa,iBAAiB,GAAGzB,oBAAoB,CAACY,MAAM,CAAC;IAClD;IAEA,MAAMc,IAAI,GAAGhB,MAAM,CAACgB,IAAI;IACxB,MAAMC,OAAO,GAAGzB,aAAa,CAAC0B,KAAK,CAAC;MAAEF;IAAK,CAAC,CAAC;IAE7CC,OAAO,CAACE,QAAQ,CAAC,IAAI,CAACC,GAAG,EAAE;MAAER,OAAO;MAAEC;IAAa,CAAC,CAAC;IAErD,IAAI5B,EAAE,CAAC0B,QAAQ,CAACG,YAAY,CAAC,IAAI7B,EAAE,CAAC0B,QAAQ,CAACI,iBAAiB,CAAC,EAAE;MAC/DE,OAAO,CAACE,QAAQ,CAAC,IAAI,CAACE,OAAO,EAAE;QAC7BT,OAAO,EAAEE,YAAY;QACrBD,YAAY,EAAEE;MAChB,CAAC,CAAC;IACJ;EACF;AACF;;AAEA;AACA;AACA;AACA;;AAqBA;;AAEA,MAAMV,kBAEL,GAAIR,OAAO,IAAK;EACf,OAAO;IACLmB,IAAI,EAAE,MAAAA,CAAOM,GAAG,EAAElB,KAAK,KAAK;MAC1B,MAAMY,IAAI,GAAG/B,EAAE,CAACsC,eAAe,CAACnB,KAAK,CAAC,GAClC,MAAMlB,uBAAuB,CAACkB,KAAK,EAAEP,OAAO,CAAC,GAC7C2B,SAAS;MACb,IAAIR,IAAI,IAAI,CAAC/B,EAAE,CAACwC,aAAa,CAACT,IAAI,CAAC,EAAE;QACnC,MAAM/B,EAAE,CAACsB,UAAU,CAAC,0BAA0B,CAAC;MACjD;MACA,OAAOS,IAAI;IACb;EACF,CAAC;AACH,CAAC","ignoreList":[]}