{"version":3,"file":"load-trigger.js","names":["MH","waitForPageReady","registerTrigger","Trigger","LoadTrigger","_Trigger","element","actions","config","_this","_classCallCheck","_callSuper","_defineProperty","getConfig","copyObject","lengthOf","_possibleConstructorReturn","then","run","_inherits","_createClass","key","value","register","args"],"sources":["../../../src/ts/triggers/load-trigger.ts"],"sourcesContent":["/**\n * @module Triggers\n *\n * @categoryDescription Load\n * {@link LoadTrigger} allows you to run actions once when the page is loaded.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForPageReady } from \"@lisn/utils/dom-events\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\n/**\n * {@link LoadTrigger} allows you to run actions one when the page is loaded.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *\n * @example\n * Scroll to the given element when the page is loaded:\n *\n * ```html\n * <div data-lisn-on-load=\":scroll-to\"></div>\n * ```\n *\n * @example\n * Scroll to 100px above the given element 500ms after the page is loaded:\n *\n * ```html\n * <div data-lisn-on-load=\"@scroll-to=0,-100 +delay=500\"></div>\n * ```\n *\n * @example\n * Scroll to 100px above the given element 500ms after the page is loaded, and\n * play animations defined on it 500ms later (1000ms after it's loaded):\n *\n * ```html\n * <div data-lisn-on-load=\"@scroll-to=0,-100 +delay=500 ;\n *                         @animate +delay=1000\"\n * ></div>\n * ```\n *\n * @category Load\n */\nexport class LoadTrigger extends Trigger {\n  readonly getConfig: () => TriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"load\",\n      (element, args, actions, config) =>\n        new LoadTrigger(element, actions, config),\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config: TriggerConfig) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    waitForPageReady().then(this.run);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,EAAE;AAEd,SAASC,gBAAgB;AAIzB,SACEC,eAAe,EACfC,OAAO;;AAIT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAaC,WAAW,0BAAAC,QAAA;EAWtB;AACF;AACA;AACA;AACA;AACA;EACE,SAAAD,YAAYE,OAAgB,EAAEC,OAAiB,EAAEC,MAAqB,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAN,WAAA;IACtEK,KAAA,GAAAE,UAAA,OAAAP,WAAA,GAAME,OAAO,EAAEC,OAAO,EAAEC,MAAM;IAAEI,eAAA,CAAAH,KAAA;IAChCA,KAAA,CAAKI,SAAS,GAAG;MAAA,OAAMb,EAAE,CAACc,UAAU,CAACN,MAAM,CAAC;IAAA;IAE5C,IAAI,CAACR,EAAE,CAACe,QAAQ,CAACR,OAAO,CAAC,EAAE;MACzB,OAAAS,0BAAA,CAAAP,KAAA;IACF;IAEAR,gBAAgB,CAAC,CAAC,CAACgB,IAAI,CAACR,KAAA,CAAKS,GAAG,CAAC;IAAC,OAAAT,KAAA;EACpC;EAACU,SAAA,CAAAf,WAAA,EAAAC,QAAA;EAAA,OAAAe,YAAA,CAAAhB,WAAA;IAAAiB,GAAA;IAAAC,KAAA,EAvBD,SAAOC,QAAQA,CAAA,EAAG;MAChBrB,eAAe,CACb,MAAM,EACN,UAACI,OAAO,EAAEkB,IAAI,EAAEjB,OAAO,EAAEC,MAAM;QAAA,OAC7B,IAAIJ,WAAW,CAACE,OAAO,EAAEC,OAAO,EAAEC,MAAM,CAAC;MAAA,CAC7C,CAAC;IACH;EAAC;AAAA,EAT8BL,OAAO","ignoreList":[]}