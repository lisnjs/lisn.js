{"version":3,"file":"x-resize-observer.js","names":["MH","logWarn","logError","debug","XResizeObserver","_createClass","callback","debounceWindow","_this","_classCallCheck","_defineProperty","logger","Logger","name","buffer","newMap","targetsToSkip","newWeakMap","observedTargets","newWeakSet","timer","resizeHandler","entries","_iterator","_createForOfIteratorHelper","_step","s","n","done","entry","value","target","targetOf","skipNum","get","undefined","set","bugError","concat","deleteKey","err","e","f","debug9","length","size","sizeOf","setTimer","arrayFrom","values","clear","borderObserver","newResizeObserver","contentObserver","observeTarget","add","observe","box","_len","arguments","targets","Array","_key","debug10","_i","_targets","observeLater","_len2","_key2","_i2","_targets2","has","unobserve","_len3","_key3","_i3","_targets3","disconnect"],"sources":["../../../src/ts/modules/x-resize-observer.ts"],"sourcesContent":["/**\n * @module Modules/XResizeObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logWarn, logError } from \"@lisn/utils/log\";\n\nimport debug from \"@lisn/debug/debug\";\n\nexport type XResizeObserverCallback = (\n  entries: ResizeObserverEntry[],\n  observer: XResizeObserver,\n) => void;\n\n/**\n * {@link XResizeObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}\n * - observes both border box and content box size changes\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n * - can debounce the callback\n */\nexport class XResizeObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe | ResizeObserver:observe} except it accepts multiple targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent resize.\n   *\n   * If the target is already being observed, nothing is done.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/unobserve | ResizeObserver:unobserve} except it accepts multiple targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/disconnect | ResizeObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * @param {} debounceWindow Debounce the handler so that it's called at most\n   *                          every `debounceWindow` ms.\n   */\n  constructor(callback: XResizeObserverCallback, debounceWindow?: number) {\n    const logger = debug ? new debug.Logger({ name: \"XResizeObserver\" }) : null;\n\n    // Keep the latest ResizeObserverEntry for each target during the\n    // debounceWindow. Short-lived, so ok to use a Map.\n    const buffer = MH.newMap<Element, ResizeObserverEntry>();\n\n    // Since internally we have two observers, one for border box, one for\n    // content box, we will get called initially twice for a target. So we keep\n    // a counter of 1 or 2 for how many more calls to ignore.\n    const targetsToSkip = MH.newWeakMap<Element, 1 | 2>();\n\n    let observedTargets = MH.newWeakSet<Element>();\n\n    debounceWindow = debounceWindow || 0;\n\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      // Override entries for previous targets, but keep entries whose targets\n      // were not resized in this round\n      for (const entry of entries) {\n        const target = MH.targetOf(entry);\n        const skipNum = targetsToSkip.get(target);\n        if (skipNum !== undefined) {\n          if (skipNum === 2) {\n            // expect one more call\n            targetsToSkip.set(target, 1);\n          } else {\n            // done\n            /* istanbul ignore next */\n            if (skipNum !== 1) {\n              logError(MH.bugError(`# targetsToSkip is ${skipNum}`));\n            }\n            MH.deleteKey(targetsToSkip, target);\n          }\n\n          continue;\n        }\n\n        buffer.set(target, entry);\n      }\n\n      debug: logger?.debug9(\n        `Got ${entries.length} new entries. ` +\n          `Have ${buffer.size} unique-target entries`,\n        entries,\n      );\n\n      if (!timer && MH.sizeOf(buffer)) {\n        timer = MH.setTimer(() => {\n          if (MH.sizeOf(buffer)) {\n            callback(MH.arrayFrom(buffer.values()), this);\n            buffer.clear();\n          }\n\n          timer = null;\n        }, debounceWindow);\n      }\n    };\n\n    const borderObserver = MH.newResizeObserver(resizeHandler);\n    const contentObserver = MH.newResizeObserver(resizeHandler);\n    if (!borderObserver || !contentObserver) {\n      logWarn(\n        \"This browser does not support ResizeObserver. Some features won't work.\",\n      );\n    }\n\n    const observeTarget = (target: Element) => {\n      observedTargets.add(target);\n      borderObserver?.observe(target, { box: \"border-box\" });\n      contentObserver?.observe(target);\n    };\n\n    // --------------------\n\n    this.observe = (...targets) => {\n      debug: logger?.debug10(\"Observing targets\", targets);\n\n      for (const target of targets) {\n        observeTarget(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      debug: logger?.debug10(\"Observing targets (later)\", targets);\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.set(target, 2);\n        observeTarget(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      debug: logger?.debug10(\"Unobserving targets\", targets);\n\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        borderObserver?.unobserve(target);\n        contentObserver?.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      debug: logger?.debug10(\"Disconnecting\");\n      observedTargets = MH.newWeakSet();\n      borderObserver?.disconnect();\n      contentObserver?.disconnect();\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]}