{"version":3,"file":"lisn.slim.js","sources":["../../lisn.js/src/ts/globals/minification-constants.ts","../../lisn.js/src/ts/globals/errors.ts","../../lisn.js/src/ts/globals/minification-helpers.ts","../../lisn.js/src/ts/globals/settings.ts","../../lisn.js/src/ts/utils/math.ts","../../lisn.js/src/ts/utils/misc.ts","../../lisn.js/src/ts/utils/text.ts","../../lisn.js/src/ts/utils/validation.ts","../../lisn.js/src/ts/modules/bit-spaces.ts","../../lisn.js/src/ts/utils/dom.ts","../../lisn.js/src/ts/utils/tasks.ts","../../lisn.js/src/ts/modules/callback.ts","../../lisn.js/src/ts/utils/log.ts","../../lisn.js/src/ts/utils/dom-optimize.ts","../../lisn.js/src/ts/utils/dom-query.ts","../../lisn.js/src/ts/utils/css-alter.ts","../../lisn.js/src/ts/utils/dom-alter.ts","../../lisn.js/src/ts/utils/dom-events.ts","../../lisn.js/src/ts/modules/x-map.ts","../../lisn.js/src/ts/watchers/dom-watcher.ts","../../lisn.js/src/ts/utils/directions.ts","../../lisn.js/src/ts/utils/event.ts","../../lisn.js/src/ts/utils/gesture.ts","../../lisn.js/src/ts/utils/gesture-key.ts","../../lisn.js/src/ts/utils/gesture-pointer.ts","../../lisn.js/src/ts/utils/gesture-touch.ts","../../lisn.js/src/ts/utils/normalize-wheel.ts","../../lisn.js/src/ts/utils/gesture-wheel.ts","../../lisn.js/src/ts/watchers/gesture-watcher.ts","../../lisn.js/src/ts/utils/layout.ts","../../lisn.js/src/ts/utils/scroll.ts","../../lisn.js/src/ts/utils/overlays.ts","../../lisn.js/src/ts/utils/size.ts","../../lisn.js/src/ts/modules/x-resize-observer.ts","../../lisn.js/src/ts/watchers/size-watcher.ts","../../lisn.js/src/ts/watchers/layout-watcher.ts","../../lisn.js/src/ts/utils/pointer.ts","../../lisn.js/src/ts/watchers/pointer-watcher.ts","../../lisn.js/src/ts/watchers/scroll-watcher.ts","../../lisn.js/src/ts/utils/views.ts","../../lisn.js/src/ts/modules/x-intersection-observer.ts","../../lisn.js/src/ts/watchers/view-watcher.ts","../../lisn.js/src/ts/watchers/index.ts","../../lisn.js/src/ts/bundle-essentials.ts","../../lisn.js/src/ts/widgets/widget.ts","../../lisn.js/src/ts/actions/action.ts","../../lisn.js/src/ts/actions/add-class.ts","../../lisn.js/src/ts/utils/animations.ts","../../lisn.js/src/ts/actions/animate.ts","../../lisn.js/src/ts/actions/animate-play.ts","../../lisn.js/src/ts/actions/display.ts","../../lisn.js/src/ts/utils/dom-search.ts","../../lisn.js/src/ts/triggers/trigger.ts","../../lisn.js/src/ts/actions/trigger.ts","../../lisn.js/src/ts/actions/scroll-to.ts","../../lisn.js/src/ts/actions/set-attribute.ts","../../lisn.js/src/ts/actions/show.ts","../../lisn.js/src/ts/utils/position.ts","../../lisn.js/src/ts/widgets/openable.ts","../../lisn.js/src/ts/actions/open.ts","../../lisn.js/src/ts/widgets/pager.ts","../../lisn.js/src/ts/actions/pager.ts","../../lisn.js/src/ts/actions/index.ts","../../lisn.js/src/ts/triggers/check-trigger.ts","../../lisn.js/src/ts/triggers/pointer-trigger.ts","../../lisn.js/src/ts/triggers/layout-trigger.ts","../../lisn.js/src/ts/triggers/load-trigger.ts","../../lisn.js/src/ts/triggers/scroll-trigger.ts","../../lisn.js/src/ts/triggers/view-trigger.ts","../../lisn.js/src/ts/triggers/index.ts","../../lisn.js/src/ts/bundle-slim.ts"],"sourcesContent":["/**\n * For minification optimization.\n *\n * @module\n * @ignore\n * @internal\n */\n\nexport const PREFIX = \"lisn\";\nexport const LOG_PREFIX = \"[LISN.js]\";\n\nexport const OBJECT = Object;\nexport const SYMBOL = Symbol;\nexport const ARRAY = Array;\nexport const STRING = String;\nexport const FUNCTION = Function;\nexport const MATH = Math;\nexport const NUMBER = Number;\nexport const PROMISE = Promise;\n\nexport const PI = MATH.PI;\nexport const INFINITY = Infinity;\n\nexport const S_ABSOLUTE = \"absolute\";\nexport const S_FIXED = \"fixed\";\nexport const S_STICKY = \"sticky\";\n\nexport const S_WIDTH = \"width\";\nexport const S_HEIGHT = \"height\";\n\nexport const S_TOP = \"top\";\nexport const S_BOTTOM = \"bottom\";\n\nexport const S_UP = \"up\";\nexport const S_DOWN = \"down\";\n\nexport const S_LEFT = \"left\";\nexport const S_RIGHT = \"right\";\n\nexport const S_AT = \"at\";\nexport const S_ABOVE = \"above\";\nexport const S_BELOW = \"below\";\n\nexport const S_IN = \"in\";\nexport const S_OUT = \"out\";\n\nexport const S_NONE = \"none\";\nexport const S_AMBIGUOUS = \"ambiguous\";\n\nexport const S_ADDED = \"added\";\nexport const S_REMOVED = \"removed\";\nexport const S_ATTRIBUTE = \"attribute\";\n\nexport const S_KEY = \"key\";\nexport const S_MOUSE = \"mouse\";\nexport const S_POINTER = \"pointer\";\nexport const S_TOUCH = \"touch\";\nexport const S_WHEEL = \"wheel\";\nexport const S_CLICK = \"click\";\nexport const S_HOVER = \"hover\";\nexport const S_PRESS = \"press\";\n\nexport const S_SCROLL = \"scroll\";\nexport const S_ZOOM = \"zoom\";\nexport const S_DRAG = \"drag\";\nexport const S_UNKNOWN = \"unknown\";\n\nexport const S_SCROLL_TOP = `${S_SCROLL}Top` as `${typeof S_SCROLL}Top`;\nexport const S_SCROLL_LEFT = `${S_SCROLL}Left` as `${typeof S_SCROLL}Left`;\n\nexport const S_SCROLL_WIDTH = `${S_SCROLL}Width` as `${typeof S_SCROLL}Width`;\nexport const S_SCROLL_HEIGHT =\n  `${S_SCROLL}Height` as `${typeof S_SCROLL}Height`;\n\nexport const S_CLIENT_WIDTH = \"clientWidth\";\nexport const S_CLIENT_HEIGHT = \"clientHeight\";\n\nexport const S_SCROLL_TOP_FRACTION =\n  `${S_SCROLL}TopFraction` as `${typeof S_SCROLL}TopFraction`;\nexport const S_SCROLL_LEFT_FRACTION =\n  `${S_SCROLL}LeftFraction` as `${typeof S_SCROLL}LeftFraction`;\n\nexport const S_HORIZONTAL = \"horizontal\";\nexport const S_VERTICAL = \"vertical\";\nexport const S_SKIP_INITIAL = \"skipInitial\";\nexport const S_DEBOUNCE_WINDOW = \"debounceWindow\";\nexport const S_TOGGLE = \"toggle\";\n\nexport const S_CANCEL = \"cancel\";\n\nexport const S_KEYDOWN = (S_KEY + S_DOWN) as `${typeof S_KEY}${typeof S_DOWN}`;\n\nexport const S_MOUSEUP = (S_MOUSE + S_UP) as `${typeof S_MOUSE}${typeof S_UP}`;\nexport const S_MOUSEDOWN = (S_MOUSE +\n  S_DOWN) as `${typeof S_MOUSE}${typeof S_DOWN}`;\nexport const S_MOUSEMOVE = `${S_MOUSE}move` as `${typeof S_MOUSE}move`;\n\nexport const S_POINTERUP = (S_POINTER +\n  S_UP) as `${typeof S_POINTER}${typeof S_UP}`;\nexport const S_POINTERDOWN = (S_POINTER +\n  S_DOWN) as `${typeof S_POINTER}${typeof S_DOWN}`;\nexport const S_POINTERENTER = `${S_POINTER}enter` as `${typeof S_POINTER}enter`;\nexport const S_POINTERLEAVE = `${S_POINTER}leave` as `${typeof S_POINTER}leave`;\nexport const S_POINTERMOVE = `${S_POINTER}move` as `${typeof S_POINTER}move`;\nexport const S_POINTERCANCEL = (S_POINTER +\n  S_CANCEL) as `${typeof S_POINTER}${typeof S_CANCEL}`;\n\nexport const S_TOUCHSTART = `${S_TOUCH}start` as `${typeof S_TOUCH}start`;\nexport const S_TOUCHEND = `${S_TOUCH}end` as `${typeof S_TOUCH}end`;\nexport const S_TOUCHMOVE = `${S_TOUCH}move` as `${typeof S_TOUCH}move`;\nexport const S_TOUCHCANCEL = (S_TOUCH +\n  S_CANCEL) as `${typeof S_TOUCH}${typeof S_CANCEL}`;\n\nexport const S_DRAGSTART = `${S_DRAG}start` as `${typeof S_DRAG}start`;\nexport const S_DRAGEND = `${S_DRAG}end` as `${typeof S_DRAG}end`;\nexport const S_DRAGENTER = `${S_DRAG}enter` as `${typeof S_DRAG}enter`;\nexport const S_DRAGOVER = `${S_DRAG}over` as `${typeof S_DRAG}over`;\nexport const S_DRAGLEAVE = `${S_DRAG}leave` as `${typeof S_DRAG}leave`;\nexport const S_DROP = \"drop\";\n\nexport const S_SELECTSTART = \"selectstart\";\n\nexport const S_ATTRIBUTES = \"attributes\";\nexport const S_CHILD_LIST = \"childList\";\n\nexport const S_REVERSE = \"reverse\";\nexport const S_DRAGGABLE = \"draggable\";\nexport const S_DISABLED = \"disabled\";\n\nexport const S_ARROW = \"arrow\";\n\nexport const S_ROLE = \"role\";\n\nexport const ARIA_PREFIX = \"aria-\";\nexport const S_ARIA_CONTROLS = ARIA_PREFIX + \"controls\";\n\nexport const PREFIX_WRAPPER = `${PREFIX}-wrapper`;\nexport const PREFIX_INLINE_WRAPPER = `${PREFIX_WRAPPER}-inline`;\nexport const PREFIX_TRANSITION = `${PREFIX}-transition`;\nexport const PREFIX_TRANSITION_DISABLE = `${PREFIX_TRANSITION}__disable`;\nexport const PREFIX_HIDE = `${PREFIX}-hide`;\nexport const PREFIX_SHOW = `${PREFIX}-show`;\nexport const PREFIX_DISPLAY = `${PREFIX}-display`;\nexport const PREFIX_UNDISPLAY = `${PREFIX}-undisplay`;\nexport const PREFIX_PLACE = `${PREFIX}-place`;\nexport const PREFIX_ORIENTATION = `${PREFIX}-orientation`;\nexport const PREFIX_POSITION = `${PREFIX}-position`;\nexport const PREFIX_GHOST = `${PREFIX}-ghost`;\nexport const PREFIX_BORDER_SIZE = `${PREFIX}-border-size`;\nexport const PREFIX_NO_SELECT = `${PREFIX}-no-select`;\nexport const PREFIX_NO_TOUCH_ACTION = `${PREFIX}-no-touch-action`;\nexport const PREFIX_NO_WRAP = `${PREFIX}-no-wrap`;\n\nexport const S_ANIMATE = \"animate\";\nexport const ANIMATE_PREFIX = `${PREFIX}-${S_ANIMATE}__`;\nexport const PREFIX_ANIMATE_DISABLE = `${ANIMATE_PREFIX}disable`;\nexport const PREFIX_ANIMATE_PAUSE = `${ANIMATE_PREFIX}pause`;\nexport const PREFIX_ANIMATE_REVERSE = `${ANIMATE_PREFIX}${S_REVERSE}`;\nexport const PREFIX_ANIMATE_INFINITE = `${ANIMATE_PREFIX}infinite`;\n\nexport const USER_AGENT =\n  typeof navigator === \"undefined\" ? \"\" : navigator.userAgent;\n\nexport const IS_MOBILE =\n  USER_AGENT.match(\n    /Mobile|Android|Silk\\/|Kindle|BlackBerry|Opera Mini|Opera Mobi/,\n  ) !== null;\n","/**\n * @module Errors\n */\n\nimport { LOG_PREFIX } from \"@lisn/globals/minification-constants\";\n\n/**\n * Base error type emitted by LISN.\n */\nexport abstract class LisnError extends Error {}\n\n/**\n * Error type emitted for invalid input or incorrect usage of a function.\n */\nexport class LisnUsageError extends LisnError {\n  constructor(message = \"\") {\n    super(`${LOG_PREFIX} Incorrect usage: ${message}`);\n    this.name = \"LisnUsageError\";\n  }\n}\n\n/**\n * Error type emitted if an assertion is wrong => report bug.\n */\nexport class LisnBugError extends LisnError {\n  constructor(message = \"\") {\n    super(`${LOG_PREFIX} Please report a bug: ${message}`);\n    this.name = \"LisnBugError\";\n  }\n}\n","/**\n * For minification optimization\n *\n * @module\n * @ignore\n * @internal\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  BoundingRect,\n  IterableObject,\n  Constructor,\n  InstanceType,\n  MapBase,\n  SetBase,\n  Spread,\n} from \"@lisn/globals/types\";\n\nimport { LisnUsageError, LisnBugError } from \"@lisn/globals/errors\";\n\n// credit: underscore.js\nconst root =\n  (typeof self === \"object\" && self.self === self && self) ||\n  (typeof global == \"object\" && global.global === global && global) ||\n  Function(\"return this\")() ||\n  {};\n\nexport const kebabToCamelCase = (str: string) =>\n  str.replace(/-./g, (m) => toUpperCase(m.charAt(1)));\n\nexport const camelToKebabCase = (str: string) =>\n  str\n    .replace(/[A-Z][a-z]/g, (m) => \"-\" + toLowerCase(m))\n    .replace(/[A-Z]+/, (m) => \"-\" + toLowerCase(m));\n\nexport const prefixName = (name: string) => `${MC.PREFIX}-${name}`;\n\nexport const prefixCssVar = (name: string) => \"--\" + prefixName(name);\n\nexport const prefixCssJsVar = (name: string) => prefixCssVar(\"js--\" + name);\n\nexport const prefixData = (name: string) => `data-${camelToKebabCase(name)}`;\n\nexport const prefixLisnData = (name: string) => prefixData(prefixName(name));\n\nexport const toLowerCase = (s: string) => s.toLowerCase();\n\nexport const toUpperCase = (s: string) => s.toUpperCase();\n\nexport const timeNow = Date.now.bind(Date);\n\nexport const timeSince = (startTime: number) => timeNow() - startTime;\n\nexport const hasDOM = () => typeof document !== \"undefined\";\n\nexport const getWindow = () => window;\n\nexport const getDoc = () => document;\n\nexport const getDocElement = () => getDoc().documentElement;\n\nexport const getDocScrollingElement = () =>\n  getDoc().scrollingElement as HTMLElement | null;\n\nexport const getBody = () => getDoc().body;\n\nexport const getReadyState = () => getDoc().readyState;\n\nexport const getPointerType = (event: Event) =>\n  isPointerEvent(event)\n    ? event.pointerType\n    : isMouseEvent(event)\n      ? \"mouse\"\n      : null;\n\nexport const onAnimationFrame = (callback: FrameRequestCallback) =>\n  requestAnimationFrame(callback);\n\nexport const createElement = (\n  tagName: string,\n  options?: ElementCreationOptions,\n) => getDoc().createElement(tagName, options);\n\nexport const createButton = (label = \"\", tag = \"button\") => {\n  const btn = createElement(tag);\n  setTabIndex(btn);\n  setAttr(btn, MC.S_ROLE, \"button\");\n  setAttr(btn, MC.ARIA_PREFIX + \"label\", label);\n  return btn;\n};\n\nexport const isNullish = (v: unknown): v is null | undefined =>\n  v === undefined || v === null;\n\nexport const isEmpty = (v: unknown): v is null | undefined | \"\" =>\n  isNullish(v) || v === \"\";\n\nexport const isIterableObject = (v: unknown): v is IterableObject<unknown> =>\n  isNonPrimitive(v) && MC.SYMBOL.iterator in v;\n\nexport const isArray = (v: unknown) => isInstanceOf(v, MC.ARRAY);\n\nexport const isObject = (v: unknown) => isInstanceOf(v, MC.OBJECT);\n\nexport const isNonPrimitive = (v: unknown): v is object =>\n  v !== null && typeOf(v) === \"object\";\n\n// only primitive number\nexport const isNumber = (v: unknown): v is number => typeOf(v) === \"number\";\n\n/* eslint-disable-next-line @typescript-eslint/no-wrapper-object-types */\nexport const isString = (v: unknown): v is string | String =>\n  typeOf(v) === \"string\" || isInstanceOf(v, MC.STRING);\n\nexport const isLiteralString = (v: unknown): v is string =>\n  typeOf(v) === \"string\";\n\nexport const isBoolean = (v: unknown): v is boolean => typeOf(v) === \"boolean\";\n\n/* eslint-disable-next-line @typescript-eslint/no-unsafe-function-type */\nexport const isFunction = (v: unknown): v is Function =>\n  typeOf(v) === \"function\" || isInstanceOf(v, MC.FUNCTION);\n\nexport const isDoc = (target: unknown): target is Document =>\n  target === getDoc();\n\nexport const isMouseEvent = (event: Event): event is MouseEvent =>\n  isInstanceOf(event, MouseEvent);\n\nexport const isPointerEvent = (event: Event): event is PointerEvent =>\n  typeof PointerEvent !== \"undefined\" && isInstanceOf(event, PointerEvent);\n\nexport const isTouchPointerEvent = (event: Event): event is PointerEvent =>\n  isPointerEvent(event) && getPointerType(event) === MC.S_TOUCH;\n\nexport const isWheelEvent = (event: Event): event is WheelEvent =>\n  isInstanceOf(event, WheelEvent);\n\nexport const isKeyboardEvent = (event: Event): event is KeyboardEvent =>\n  isInstanceOf(event, KeyboardEvent);\n\nexport const isTouchEvent = (event: Event): event is TouchEvent =>\n  typeof TouchEvent !== \"undefined\" && isInstanceOf(event, TouchEvent);\n\nexport const isNode = (target: unknown) => isInstanceOf(target, Node);\n\nexport const isElement = (target: unknown) => isInstanceOf(target, Element);\n\nexport const isHTMLElement = (target: unknown) =>\n  isInstanceOf(target, HTMLElement);\n\nexport const isNodeBAfterA = (nodeA: Node, nodeB: Node) =>\n  (nodeA.compareDocumentPosition(nodeB) & Node.DOCUMENT_POSITION_FOLLOWING) !==\n  0;\n\nexport const strReplace = (\n  s: string,\n  match: string | RegExp,\n  replacement: string,\n) => s.replace(match, replacement);\n\nexport const setTimer = root.setTimeout.bind(root);\n\nexport const clearTimer = root.clearTimeout.bind(root);\n\nexport const getBoundingClientRect = (el: Element) =>\n  el.getBoundingClientRect();\n\n// Copy size properties explicitly to another object so they can be used with\n// the spread operator (DOMRect/DOMRectReadOnly's properties are not enumerable)\nexport const copyBoundingRectProps = (rect: BoundingRect): BoundingRect => {\n  return {\n    x: rect.x,\n    left: rect.left,\n    right: rect.right,\n    [MC.S_WIDTH]: rect[MC.S_WIDTH],\n    y: rect.y,\n    top: rect.top,\n    bottom: rect.bottom,\n    [MC.S_HEIGHT]: rect[MC.S_HEIGHT],\n  };\n};\n\nexport const querySelector = (root: Element | Document, selector: string) =>\n  root.querySelector(selector);\n\nexport const querySelectorAll = (root: Element | Document, selector: string) =>\n  root.querySelectorAll(selector);\n\nexport const docQuerySelector = (selector: string) =>\n  querySelector(getDoc(), selector);\n\nexport const docQuerySelectorAll = (selector: string) =>\n  querySelectorAll(getDoc(), selector);\n\nexport const getElementById = (id: string) => getDoc().getElementById(id);\n\nexport const getAttr = (el: Element, name: string) => el.getAttribute(name);\n\nexport const setAttr = (el: Element, name: string, value = \"true\") =>\n  el.setAttribute(name, value);\n\nexport const unsetAttr = (el: Element, name: string) =>\n  el.setAttribute(name, \"false\");\n\nexport const delAttr = (el: Element, name: string) => el.removeAttribute(name);\n\nexport const includes = (\n  arr: readonly unknown[] | string,\n  v: unknown,\n  startAt?: number,\n) => (arr.indexOf as (v: unknown, startAt?: number) => number)(v, startAt) >= 0;\n\nexport const filter = <\n  A extends readonly unknown[],\n  T extends A[number],\n  C extends FilterFn<A[number]> | FilterFnTypeP<A[number], T>,\n>(\n  array: A,\n  filterFn: C,\n) => array.filter(filterFn) as FilteredType<C, A[number], T>[];\n\nexport const filterBlank = <A extends readonly unknown[]>(\n  array: A | null | undefined,\n) => {\n  const result = array\n    ? filter(array, (v): v is NonNullable<A[number]> => !isEmpty(v))\n    : undefined;\n\n  return lengthOf(result) ? result : undefined;\n};\n\nexport const sizeOf = (obj: { size: number } | null | undefined) =>\n  obj?.size ?? 0;\n\nexport const lengthOf = (obj: { length: number } | null | undefined) =>\n  obj?.length ?? 0;\n\nexport const lastOf = <A extends readonly unknown[]>(a: A | null | undefined) =>\n  a?.slice(-1)[0] as LastElement<A>;\n\nexport const firstOf = <A extends readonly unknown[]>(\n  a: A | null | undefined,\n) => a?.slice(0, 1)[0] as FirstElement<A>;\n\nexport const tagName = (el: Element) => el.tagName;\n\nexport const preventDefault = (event: Event) => event.preventDefault();\n\nexport const arrayFrom = MC.ARRAY.from.bind(MC.ARRAY);\n\nexport const keysOf = <T extends Record<string | symbol, unknown>>(\n  obj: T,\n): Array<keyof T & string> => MC.OBJECT.keys(obj);\n\nexport const defineProperty = MC.OBJECT.defineProperty.bind(MC.OBJECT);\n\n// use it in place of object spread\nexport const merge = <A extends readonly (object | null | undefined)[]>(\n  ...a: [...A]\n) => {\n  return MC.OBJECT.assign({}, ...a) as Spread<A>;\n};\n\n// alias for clarity of purpose\nexport const copyObject = <T extends object>(obj: T) => merge(obj);\n\nexport const promiseResolve = MC.PROMISE.resolve.bind(MC.PROMISE);\n\nexport const promiseAll = MC.PROMISE.all.bind(MC.PROMISE);\n\nexport const assign = MC.OBJECT.assign.bind(MC.OBJECT);\n\nexport const freezeObj = MC.OBJECT.freeze.bind(MC.OBJECT);\n\nexport const hasOwnProp = (o: object, prop: string | symbol) =>\n  MC.OBJECT.prototype.hasOwnProperty.call(o, prop);\n\nexport const preventExtensions = MC.OBJECT.preventExtensions.bind(MC.OBJECT);\n\nexport const stringify = JSON.stringify.bind(JSON);\n\nexport const floor = MC.MATH.floor.bind(MC.MATH);\n\nexport const ceil = MC.MATH.ceil.bind(MC.MATH);\n\nexport const log2 = MC.MATH.log2.bind(MC.MATH);\n\nexport const sqrt = MC.MATH.sqrt.bind(MC.MATH);\n\nexport const max = MC.MATH.max.bind(MC.MATH);\n\nexport const min = MC.MATH.min.bind(MC.MATH);\n\nexport const abs = MC.MATH.abs.bind(MC.MATH);\n\nexport const round = MC.MATH.round.bind(MC.MATH);\n\nexport const pow = MC.MATH.pow.bind(MC.MATH);\n\nexport const parseFloat = MC.NUMBER.parseFloat.bind(MC.NUMBER);\n\nexport const isNaN = MC.NUMBER.isNaN.bind(MC.NUMBER);\n\nexport const isInstanceOf = <C extends Constructor<unknown>>(\n  value: unknown,\n  Class: C,\n): value is InstanceType<C> => value instanceof Class;\n\nexport const constructorOf = (obj: object) => obj.constructor;\n\nexport const typeOf = (obj: unknown) => typeof obj;\n\nexport const typeOrClassOf = (obj: unknown) =>\n  isObject(obj) ? constructorOf(obj)?.name : typeOf(obj);\n\nexport const parentOf = (element: Element | undefined | null) =>\n  element?.parentElement || null;\n\nexport const childrenOf = (element: Element | undefined | null) =>\n  element?.children || [];\n\nexport const targetOf = <O extends { target?: unknown } | null | undefined>(\n  obj: O,\n) =>\n  obj?.target as O extends { target: infer T }\n    ? T\n    : O extends { target?: infer T }\n      ? T | undefined\n      : undefined;\n\nexport const currentTargetOf = <\n  O extends { currentTarget?: unknown } | null | undefined,\n>(\n  obj: O,\n) =>\n  obj?.currentTarget as O extends { currentTarget: infer T }\n    ? T\n    : O extends { currentTarget?: infer T }\n      ? T | undefined\n      : undefined;\n\nexport const classList = <T extends Element | null | undefined>(el: T) =>\n  el?.classList as T extends Element ? DOMTokenList : undefined;\n\nconst S_TABINDEX = \"tabindex\";\nexport const getTabIndex = (el: Element) => getAttr(el, S_TABINDEX);\n\nexport const setTabIndex = (el: Element, index = \"0\") =>\n  setAttr(el, S_TABINDEX, index);\n\nexport const unsetTabIndex = (el: Element) => delAttr(el, S_TABINDEX);\n\nexport const remove = (obj: { remove: () => void } | null | undefined) =>\n  obj?.remove();\n\nexport const deleteObjKey = <O extends object>(obj: O, key: keyof O) =>\n  delete obj[key];\n\nexport const deleteKey = <K, V>(\n  map: MapBase<K, V> | SetBase<K> | null | undefined,\n  key: K,\n) => map?.delete(key);\n\nexport const elScrollTo = (\n  el: Element,\n  coords: { top?: number; left?: number },\n  behavior: ScrollBehavior = \"instant\",\n) => el.scrollTo(merge({ behavior }, coords));\n\nexport const elScrollBy = (\n  el: Element,\n  coords: { top?: number; left?: number },\n  behavior: ScrollBehavior = \"instant\",\n) => el.scrollBy(merge({ behavior }, coords));\n\nexport const newPromise = <T>(\n  executor: (\n    resolve: (value: T) => void,\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    reject: (reason?: any) => void,\n  ) => void,\n) => new Promise(executor);\n\nexport const newMap = <K, V>(entries?: readonly (readonly [K, V])[] | null) =>\n  new Map(entries);\n\nexport const newWeakMap = <K extends WeakKey, V>(\n  entries?: readonly (readonly [K, V])[] | null,\n) => new WeakMap(entries);\n\nexport const newSet = <T>(values?: readonly T[] | null) => new Set(values);\n\nexport const newWeakSet = <T extends WeakKey>(values?: readonly T[] | null) =>\n  new WeakSet(values);\n\nexport const newIntersectionObserver = (\n  callback: IntersectionObserverCallback,\n  options?: IntersectionObserverInit,\n) => new IntersectionObserver(callback, options);\n\nexport const newResizeObserver = (callback: ResizeObserverCallback) =>\n  typeof ResizeObserver === \"undefined\" ? null : new ResizeObserver(callback);\n\nexport const newMutationObserver = (callback: MutationCallback) =>\n  new MutationObserver(callback);\n\nexport const usageError = (msg: string) => new LisnUsageError(msg);\n\nexport const bugError = (msg: string) => new LisnBugError(msg);\n\nexport const illegalConstructorError = (useWhat: string) =>\n  usageError(`Illegal constructor. Use ${useWhat}.`);\n\nconst CONSOLE = console;\nexport const consoleDebug = CONSOLE.debug.bind(CONSOLE);\n\nexport const consoleLog = CONSOLE.log.bind(CONSOLE);\n\nexport const consoleInfo = CONSOLE.info.bind(CONSOLE);\n\nexport const consoleWarn = CONSOLE.warn.bind(CONSOLE);\n\nexport const consoleError = CONSOLE.error.bind(CONSOLE);\n\n// --------------------\n\ntype FirstElement<T extends readonly unknown[]> = T extends readonly [\n  infer Head,\n  ...infer Last,\n]\n  ? Head\n  : T[number] | undefined;\n\ntype LastElement<T extends readonly unknown[]> = T extends readonly [\n  ...infer Head,\n  infer Last,\n]\n  ? Last\n  : T[number] | undefined;\n\ntype FilterFn<V> = (value: V, index: number, array: readonly V[]) => unknown;\ntype FilterFnTypeP<V, T extends V> = (\n  value: V,\n  index: number,\n  array: readonly V[],\n) => value is T;\ntype FilteredType<C extends FilterFn<V> | FilterFnTypeP<V, T>, V, T extends V> =\n  C extends FilterFnTypeP<V, infer T> ? T : V;\n","/**\n * @module Settings\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\n/**\n * LISN's settings.\n * @readonly\n *\n * If you wish to modify them, then you need to do so immediately after loading\n * LISN before you instantiate any watchers, etc. For example:\n *\n * ```html\n * <!doctype html>\n * <html>\n *   <head>\n *     <meta charset=\"UTF-8\" />\n *     <meta name=\"viewport\" content=\"width=device-width\" />\n *     <script src=\"lisn.js\" charset=\"utf-8\"></script>\n *     <script charset=\"utf-8\">\n *       // modify LISN settings, for example:\n *       LISN.settings.deviceBreakpoints.desktop = 1024;\n *     </script>\n *   </head>\n *   <body>\n *   </body>\n * </html>\n * ```\n */\nexport const settings = MH.preventExtensions({\n  /**\n   * A unique selector (preferably `#some-id`) for the element that holds the\n   * main page content, if other than `document.body`.\n   *\n   * E.g. if your main content is inside a custom scrollable container, rather\n   * than directly in `document.body`, then pass a selector for it here.\n   *\n   * The element must be scrollable, i.e. have a fixed size and `overflow: scroll`.\n   *\n   * **IMPORTANT:** You must set this before initializing any watchers, widgets,\n   * etc. If you are using the HTML API, then you must set this before the\n   * document `readyState` becomes interactive.\n   *\n   * @defaultValue null // document.scrollingElement\n   * @category Generic\n   */\n  mainScrollableElementSelector: null as string | null,\n\n  /**\n   * This setting allows us to automatically wrap certain elements or groups of\n   * elements into a single `div` or `span` element to allow for more reliable\n   * or efficient working of certain features. In particular:\n   *\n   * 1. View tracking using relative offsets and a scrolling root **requires wrapping**\n   *\n   * When using view position tracking with a percentage offset specification\n   * (e.g. `top: 50%`) _and_ a custom root element that is scrollable_ (and\n   * obviously has a size smaller than the content), you **MUST** enable\n   * content wrapping, otherwise the trigger offset elements cannot be\n   * positioned relative to the scrolling _content size_.\n   *\n   * 2. Scroll tracking\n   *\n   * When using scroll tracking, including scrollbars, on a scrolling element\n   * (that obviously has a size smaller than the content), it's recommended for\n   * the content of the scrollable element to be wrapped in a single `div`\n   * container, to allow for more efficient and reliable detection of changes\n   * in the _scrollable content_ size.\n   *\n   * If content wrapping is disabled, when scroll tracking is used on a given\n   * element (other than the root of the document), each of the immediate\n   * children of the scrollable element have their sizes tracked, which could\n   * lead to more resource usage.\n   *\n   * 3. Scrollbars on custom elements\n   *\n   * When you setup a {@link Widgets.Scrollbar} widget for a custom\n   * scrollable element that may not be the main scrollable (and therefore\n   * won't take up the full viewport all the time), then to be able to position\n   * to scrollbar relative to the scrollable element, its content needs to be\n   * wrapped.\n   *\n   * If this setting is OFF, then the scrollbars on custom elements have to\n   * rely on position sticky which doesn't have as wide browser support as the\n   * default option.\n   *\n   * 4. Animating on viewport enter/leave\n   *\n   * For elements that have transforms applied as part of an animation or\n   * transition, if you wish to run or reverse the animation when the element\n   * enters or leaves the viewport, then the transform can interfere with the\n   * viewport tracking. For example, if undoing the animation as soon as the\n   * element leaves the viewport makes it enter it again (because it's moved),\n   * then this will result in a glitch.\n   *\n   * If content wrapping is disabled, then to get around such issues, a dummy\n   * element is positioned on top of the actual element and is the one tracked\n   * across the viewport instead. Either approach could cause issues depending\n   * on your CSS, so it's your choice which one is applied.\n   *\n   * ----------\n   *\n   * **IMPORTANT:** Certain widgets always require wrapping of elements or their\n   * children. This setting only applies in cases where wrapping is optional.\n   * If you can, it's recommended to leave this setting ON. You can still try to\n   * disable wrapping on a per-element basis by setting `data-lisn-no-wrap`\n   * attribute on it. Alternatively, if the elements that need wrapping are\n   * already wrapped in an element with a class `lisn-wrapper`, this will be\n   * used as the wrapper.\n   *\n   * @defaultValue true\n   * @category Generic\n   */\n  contentWrappingAllowed: true,\n  // [TODO v2] rename this setting\n\n  /**\n   * The timeout in milliseconds for waiting for the `document.readyState` to\n   * become `complete`. The timer begins _once the `readyState` becomes\n   * `interactive`_.\n   *\n   * The page will be considered \"ready\" either when the `readyState` becomes\n   * `complete` or this many milliseconds after it becomes `interactive`,\n   * whichever is first.\n   *\n   * Set to 0 or a negative number to disable timeout.\n   *\n   * @defaultValue 2000 // i.e. 2s\n   * @category Generic\n   */\n  pageLoadTimeout: 2000,\n\n  /**\n   * This enables LISN's HTML API. Then the page will be parsed (and watched\n   * for dynamically added elements at any time) for any elements matching a\n   * widget selector. Any element that has a matching CSS class or data\n   * attribute will be setup according to the relevant widget, which may wrap,\n   * clone or add attributes to the element.\n   *\n   * This is enabled by default for bundles, and disabled otherwise.\n   *\n   * **IMPORTANT:** You must set this before the document `readyState` becomes\n   * interactive.\n   *\n   * @defaultValue `false` in general, but `true` in browser bundles\n   * @category Widgets\n   */\n  autoWidgets: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.hideNative | ScrollbarConfig.hideNative}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarHideNative: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.onMobile | ScrollbarConfig.onMobile}.\n   *\n   * @defaultValue false\n   * @category Widgets/Scrollbar\n   */\n  scrollbarOnMobile: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.positionH | ScrollbarConfig.positionH}.\n   *\n   * @defaultValue \"bottom\"\n   * @category Widgets/Scrollbar\n   */\n  scrollbarPositionH: \"bottom\",\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.positionV | ScrollbarConfig.positionV}.\n   *\n   * @defaultValue \"right\"\n   * @category Widgets/Scrollbar\n   */\n  scrollbarPositionV: \"right\",\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.autoHide | ScrollbarConfig.autoHide}.\n   *\n   * @defaultValue -1\n   * @category Widgets/Scrollbar\n   */\n  scrollbarAutoHide: -1,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.clickScroll | ScrollbarConfig.clickScroll}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarClickScroll: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.dragScroll | ScrollbarConfig.dragScroll}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarDragScroll: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.useHandle | ScrollbarConfig.useHandle}.\n   *\n   * @defaultValue false\n   * @category Widgets/Scrollbar\n   */\n  scrollbarUseHandle: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.diffTolerance | SameHeightConfig.diffTolerance}.\n   *\n   * @defaultValue 15\n   * @category Widgets/SameHeight\n   */\n  sameHeightDiffTolerance: 15,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.resizeThreshold | SameHeightConfig.resizeThreshold}.\n   *\n   * @defaultValue 5\n   * @category Widgets/SameHeight\n   */\n  sameHeightResizeThreshold: 5,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.debounceWindow | SameHeightConfig.debounceWindow}.\n   *\n   * @defaultValue 100\n   * @category Widgets/SameHeight\n   */\n  sameHeightDebounceWindow: 100,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.minGap | SameHeightConfig.minGap}.\n   *\n   * @defaultValue 30\n   * @category Widgets/SameHeight\n   */\n  sameHeightMinGap: 30,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.maxFreeR | SameHeightConfig.maxFreeR}.\n   *\n   * @defaultValue 0.4\n   * @category Widgets/SameHeight\n   */\n  sameHeightMaxFreeR: 0.4,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.maxWidthR | SameHeightConfig.maxWidthR}.\n   *\n   * @defaultValue 1.7\n   * @category Widgets/SameHeight\n   */\n  sameHeightMaxWidthR: 1.7,\n\n  /**\n   * Set custom device breakpoints as width in pixels.\n   *\n   * The value of each sets its lower limit, i.e. it specifies a device whose\n   * width is larger than the given value (and up to the next larger one).\n   *\n   * If you specify only some of the below devices, then the other ones will\n   * keep their default breakpoint values.\n   *\n   * Adding device types, other than the ones listed below is not supported.\n   *\n   * @category Device layouts\n   */\n  deviceBreakpoints: {\n    /**\n     * This should be left as 0 as it's the catch-all for anything narrower\n     * than \"mobile-wide\".\n     *\n     * @defaultValue 0\n     */\n    mobile: 0,\n\n    /**\n     * Anything wider than the given value is \"mobile-wide\", up to the value of\n     * \"tablet\".\n     *\n     * @defaultValue 576\n     */\n    \"mobile-wide\": 576,\n\n    /**\n     * Anything wider than the given value is \"tablet\", up to the value of\n     * \"desktop\".\n     *\n     * @defaultValue 768\n     */\n    tablet: 768, // tablet is anything above this (up to desktop)\n\n    /**\n     * Anything wider than the given value is \"desktop\".\n     *\n     * @defaultValue 992\n     */\n    desktop: 992, // desktop is anything above this\n  },\n\n  /**\n   * Set custom aspect ratio breakpoints (as ratio of width to height).\n   *\n   * The value of each sets its lower limit, i.e. it specifies an aspect ratio\n   * that is wider than the given value (and up to the next wider one).\n   *\n   * If you specify only some of the below aspect ratios, then the other ones\n   * will keep their default breakpoint values.\n   *\n   * Adding aspect ratio types, other than the ones listed below is not\n   * supported.\n   *\n   * @category Device layouts\n   */\n  aspectRatioBreakpoints: {\n    /**\n     * This should be left as 0 as it's the catch-all for anything with\n     * a narrower aspect ratio than \"tall\".\n     *\n     * @defaultValue 0\n     */\n    \"very-tall\": 0, // very tall is up to 9:16\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"tall\", up to\n     * the value of \"square\".\n     *\n     * @defaultValue 9 / 16\n     */\n    tall: 9 / 16, // tall is between 9:16 and 3:4\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"square\", up\n     * to the value of \"wide\".\n     *\n     * @defaultValue 3 / 4\n     */\n    square: 3 / 4, // square is between 3:4 and 4:3\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"wide\", up to\n     * the value of \"very-wide\".\n     *\n     * @defaultValue 4 / 3\n     */\n    wide: 4 / 3, // wide is between 4:3 and 16:9\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"very-wide\".\n     *\n     * @defaultValue 16 / 9\n     */\n    \"very-wide\": 16 / 9, // very wide is above 16:9\n  },\n\n  /**\n   * The CSS class that enables light theme.\n   *\n   * **IMPORTANT:** If you change this, you should also change the\n   * `$light-theme-cls` variable in the SCSS configuration, or otherwise add the\n   * following to your CSS:\n   *\n   * :root,\n   * .custom-light-theme-cls {\n   *   --lisn-color-fg: some-dark-color;\n   *   --lisn-color-fg-t: some-dark-color-with-transparency;\n   *   --lisn-color-bg: some-light-color;\n   *   --lisn-color-bg-t: some-light-color-with-transparency;\n   * }\n   */\n  lightThemeClassName: \"light-theme\",\n\n  /**\n   * The CSS class that enables dark theme.\n   *\n   * **IMPORTANT:** If you change this, you should also change the\n   * `$dark-theme-cls` variable in the SCSS configuration, or otherwise add the\n   * following to your CSS:\n   *\n   * .custom-dark-theme-cls {\n   *   --lisn-color-fg: some-light-color;\n   *   --lisn-color-fg-t: some-light-color-with-transparency;\n   *   --lisn-color-bg: some-dark-color;\n   *   --lisn-color-bg-t: some-dark-color-with-transparency;\n   * }\n   */\n  darkThemeClassName: \"dark-theme\",\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some key (arrows) and wheel events (where the browser reports the delta\n   * mode to be LINE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 40\n   * @category Gestures\n   */\n  deltaLineHeight: 40,\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some wheel events (where the browser reports the delta mode to be PAGE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 1600\n   * @category Gestures\n   */\n  deltaPageWidth: 1600,\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some key (PageUp/PageDown/Space) and wheel events (where the browser\n   * reports the delta mode to be PAGE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 800\n   * @category Gestures\n   */\n  deltaPageHeight: 800,\n\n  /**\n   * Controls the debugging verbosity level. Values from 0 (none) to 10 (insane)\n   * are recognized.\n   *\n   * **Note:** Logging is not available in bundles except in the \"debug\" bundle.\n   *\n   * @defaultValue `0` except in the \"debug\" bundle where it defaults to 10\n   * @category Logging\n   */\n  verbosityLevel: 0,\n\n  /**\n   * The URL of the remote logger to connect to. LISN uses\n   * {@link https://socket.io/docs/v4/client-api/ | socket.io-client}\n   * to talk to the client and emits messages on the following namespaces:\n   *\n   * - `console.debug`\n   * - `console.log`\n   * - `console.info`\n   * - `console.warn`\n   * - `console.error`\n   *\n   * There is a simple logging server that ships with LISN, see the source\n   * code repository.\n   *\n   * You can always explicitly disable remote logging on a given page by\n   * setting `disableRemoteLog=1` query parameter in the URL.\n   *\n   * **Note:** Logging is not available in bundles (except in the `debug` bundle).\n   *\n   * @defaultValue null\n   * @category Logging\n   */\n  remoteLoggerURL: null as string | null,\n\n  /**\n   * Enable remote logging only on mobile devices.\n   *\n   * You can always disable remote logging for any page by setting\n   * `disableRemoteLog=1` URL query parameter.\n   *\n   * **Note:** Logging is not available in bundles (except in the `debug` bundle).\n   *\n   * @defaultValue false\n   * @category Logging\n   */\n  remoteLoggerOnMobileOnly: false,\n});\n\n// --------------------\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Point, Vector, AtLeastOne } from \"@lisn/globals/types\";\n\n/**\n * Round a number to the given decimal precision (default is 0).\n *\n * @param {} [numDecimal = 0]\n *\n * @category Math\n */\nexport const roundNumTo = (value: number, numDecimal = 0) => {\n  const multiplicationFactor = MH.pow(10, numDecimal);\n  return MH.round(value * multiplicationFactor) / multiplicationFactor;\n};\n\n/**\n * Returns true if the given value is a valid _finite_ number.\n *\n * @category Validation\n */\nexport const isValidNum = (value: unknown): value is number =>\n  MH.isNumber(value) && MC.NUMBER.isFinite(value);\n\n/**\n * If the given value is a valid _finite_ number, it is returned, otherwise\n * the default is returned.\n *\n * @category Math\n */\nexport const toNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = MH.isLiteralString(value) ? MH.parseFloat(value) : value;\n\n  // parseFloat will strip trailing non-numeric characters, so we check that\n  // the parsed number is equal to the string, if it was a string, using loose\n  // equality, in order to make sure the entire string was a number.\n  return isValidNum(numValue) && numValue == value ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid _finite integer_ number, it is returned,\n * otherwise the default is returned.\n *\n * @category Math\n */\nexport const toInt = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  let numValue = toNum(value, null);\n  numValue = numValue === null ? numValue : MH.floor(numValue);\n\n  // Ensure that the parsed int equaled the original by loose equality.\n  return isValidNum(numValue) && numValue == value ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid non-negative _finite_ number, it is returned,\n * otherwise the default is returned.\n *\n * @category Math\n */\nexport const toNonNegNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = toNum(value, null);\n  return numValue !== null && numValue >= 0 ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid positive number, it is returned, otherwise the\n * default is returned.\n *\n * @category Math\n */\nexport const toPosNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = toNum(value, null);\n  return numValue !== null && numValue > 0 ? numValue : defaultValue;\n};\n\n/**\n * Returns the given number bound by min and/or max value.\n *\n * If the value is not a valid number, then `defaultValue` is returned if given\n * (_including if it is null_), otherwise `limits.min` if given and not null,\n * otherwise `limits.max` if given and not null, or finally 0.\n *\n * If the value is outside the bounds, then:\n * - if `defaultValue` is given, `defaultValue` is returned (_including if it\n *   is null_)\n * - otherwise, the min or the max value (whichever one is violated) is\n *   returned\n *\n * @category Math\n */\nexport const toNumWithBounds = <D extends number | false | null = number>(\n  value: unknown,\n  limits: AtLeastOne<{ min: number | null; max: number | null }>,\n  defaultValue?: D,\n): number | D => {\n  const isDefaultGiven = defaultValue !== undefined;\n  const numValue = toNum(value, null);\n  const min = limits?.min ?? null;\n  const max = limits?.max ?? null;\n\n  let result: number | D;\n  if (!isValidNum(numValue)) {\n    result = isDefaultGiven ? defaultValue : (min ?? max ?? 0);\n  } else if (min !== null && numValue < min) {\n    result = isDefaultGiven ? defaultValue : min;\n  } else if (max !== null && numValue > max) {\n    result = isDefaultGiven ? defaultValue : max;\n  } else {\n    result = numValue;\n  }\n\n  return result;\n};\n\n/**\n * Returns the largest absolute value among the given ones.\n *\n * The result is always positive.\n *\n * @category Math\n */\nexport const maxAbs = (...values: number[]) =>\n  MH.max(...values.map((v) => MH.abs(v)));\n\n/**\n * Returns the smallest absolute value among the given ones.\n *\n * The result is always positive.\n *\n * @category Math\n */\nexport const minAbs = (...values: number[]) =>\n  MH.min(...values.map((v) => MH.abs(v)));\n\n/**\n * Returns the value with the largest absolute value among the given ones.\n *\n * The result can be negative.\n *\n * @category Math\n */\nexport const havingMaxAbs = (...values: number[]): number =>\n  MH.lengthOf(values)\n    ? values.sort((a, b) => MH.abs(b) - MH.abs(a))[0]\n    : -MC.INFINITY;\n\n/**\n * Returns the value with the smallest absolute value among the given ones.\n *\n * The result can be negative.\n *\n * @category Math\n */\nexport const havingMinAbs = (...values: number[]) =>\n  MH.lengthOf(values)\n    ? values.sort((a, b) => MH.abs(a) - MH.abs(b))[0]\n    : MC.INFINITY;\n\n/**\n * Returns the angle (in radians) that the vector defined by the given x, y\n * makes with the positive horizontal axis.\n *\n * The angle returned is in the range -PI to PI, not including -PI.\n *\n * @category Math\n */\nexport const hAngle = (x: number, y: number) =>\n  normalizeAngle(MC.MATH.atan2(y, x)); // ensure that -PI is transformed to +PI\n\n/**\n * Normalizes the given angle (in radians) so that it's in the range -PI to PI,\n * not including -PI.\n *\n * @category Math\n */\nexport const normalizeAngle = (a: number) => {\n  // ensure it's positive in the range 0 to 2 PI\n  while (a < 0 || a > MC.PI * 2) {\n    a += (a < 0 ? 1 : -1) * MC.PI * 2;\n  }\n\n  // then, if > PI, offset by - 2PI\n  return a > MC.PI ? a - MC.PI * 2 : a;\n};\n\n/**\n * Converts the given angle in degrees to radians.\n *\n * @category Math\n */\nexport const degToRad = (a: number) => (a * MC.PI) / 180;\n\n/**\n * Converts the given angle in radians to degrees.\n *\n * @category Math\n */\nexport const radToDeg = (a: number) => (a * 180) / MC.PI;\n\n/**\n * Returns true if the given vectors point in the same direction.\n *\n * @param {} angleDiffThreshold\n *                  Sets the threshold in degrees when comparing the angles of\n *                  two vectors. E.g. for 5 degrees threshold, directions\n *                  whose vectors are within 5 degrees of each other are\n *                  considered parallel.\n *                  It doesn't make sense for this value to be < 0 or >= 90\n *                  degrees. If it is, it's forced to be positive (absolute)\n *                  and <= 89.99.\n *\n * @category Math\n */\nexport const areParallel = (vA: Vector, vB: Vector, angleDiffThreshold = 0) => {\n  const angleA = hAngle(vA[0], vA[1]);\n  const angleB = hAngle(vB[0], vB[1]);\n  angleDiffThreshold = MH.min(89.99, MH.abs(angleDiffThreshold));\n\n  return (\n    MH.abs(normalizeAngle(angleA - angleB)) <= degToRad(angleDiffThreshold)\n  );\n};\n\n/**\n * Returns true if the given vectors point in the opposite direction.\n *\n * @param {} angleDiffThreshold\n *                  Sets the threshold in degrees when comparing the angles of\n *                  two vectors. E.g. for 5 degrees threshold, directions\n *                  whose vectors are within 175-185 degrees of each other are\n *                  considered antiparallel.\n *                  It doesn't make sense for this value to be < 0 or >= 90\n *                  degrees. If it is, it's forced to be positive (absolute)\n *                  and <= 89.99.\n *\n * @category Math\n */\nexport const areAntiParallel = (\n  vA: Vector,\n  vB: Vector,\n  angleDiffThreshold = 0,\n) => areParallel(vA, [-vB[0], -vB[1]], angleDiffThreshold);\n\n/**\n * Returns the distance between two points on the screen.\n *\n * @category Math\n */\nexport const distanceBetween = (ptA: Point, ptB: Point) =>\n  MH.sqrt(MH.pow(ptA[0] - ptB[0], 2) + MH.pow(ptA[1] - ptB[1], 2));\n\n/**\n * Returns the two roots of the quadratic equation with coefficients\n * `a`, `b` & `c`, i.e. `a * x^2 + b * x + c = 0`\n *\n * The roots may be `NaN` if the quadratic has no real solutions.\n *\n * @category Math\n */\nexport const quadraticRoots = (a: number, b: number, c: number) => {\n  const z = MH.sqrt(b * b - 4 * a * c);\n  return [(-b + z) / (2 * a), (-b - z) / (2 * a)];\n};\n\n/**\n * Returns the value that an \"easing\" quadratic function would have at the\n * given x (between 0 and 1).\n *\n * @see https://easings.net/#easeInOutQuad\n *\n * @category Math\n */\nexport const easeInOutQuad = (x: number) =>\n  x < 0.5 ? 2 * x * x : 1 - MH.pow(-2 * x + 2, 2) / 2;\n\n/**\n * Returns an array of object's keys sorted by the numeric value they hold.\n *\n * @category Math\n */\nexport const sortedKeysByVal = <T extends Record<string, number>>(\n  obj: T,\n  descending = false,\n): Array<keyof T> => {\n  if (descending) {\n    return MH.keysOf(obj).sort((x: keyof T, y: keyof T) => obj[y] - obj[x]);\n  }\n\n  return MH.keysOf(obj).sort((x: keyof T, y: keyof T) => obj[x] - obj[y]);\n};\n\n/**\n * Returns the key in the given object which holds the largest numeric value.\n *\n * If the object is empty, returns `undefined`.\n *\n * @category Math\n */\nexport const keyWithMaxVal = (\n  obj: Record<string, number>,\n): string | undefined => {\n  return MH.lastOf(sortedKeysByVal(obj));\n};\n\n/**\n * Returns the key in the given object which holds the smallest numeric value.\n *\n * If the object is empty, returns `undefined`.\n *\n * @category Math\n */\nexport const keyWithMinVal = (\n  obj: Record<string, number>,\n): string | undefined => {\n  return MH.firstOf(sortedKeysByVal(obj));\n};\n\n/**\n * Takes two integers and returns a bitmask that covers all values between\n * 1 << start and 1 << end, _including the starting and ending one_.\n *\n * If pStart > pEnd, they are reversed.\n *\n * getBitmask(start, start) always returns 1 << start\n * getBitmask(start, end) always returns same as getBitmask(end, start)\n *\n * @category Math\n */\nexport const getBitmask = (start: number, end: number): number =>\n  start > end\n    ? getBitmask(end, start)\n    : (~0 >>> (32 - end - 1 + start)) << start;\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { roundNumTo } from \"@lisn/utils/math\";\n\nexport const isTouchScreen = () =>\n  MH.hasDOM() ? matchMedia(\"(any-pointer: coarse)\").matches : false;\n\nexport const supportsSticky = () =>\n  MH.hasDOM() ? !!CSS?.supports?.(\"position\", \"sticky\") : false;\n\nexport const copyExistingKeys = <T extends object>(fromObj: T, toObj: T) => {\n  for (const key in toObj) {\n    if (!MH.hasOwnProp(toObj, key)) {\n      continue;\n    }\n\n    if (key in fromObj) {\n      if (MH.isNonPrimitive(fromObj[key]) && MH.isNonPrimitive(toObj[key])) {\n        copyExistingKeys(fromObj[key], toObj[key]);\n      } else {\n        toObj[key] = fromObj[key];\n      }\n    }\n  }\n};\n\n// Omits the keys in object keysToRm from obj. This is to avoid hardcording the\n// key names as a string so as to allow minifier to mangle them, and to avoid\n// using object spread.\nexport const omitKeys = <\n  O extends object,\n  R extends { [K in keyof O]?: unknown },\n>(\n  obj: O,\n  keysToRm: R,\n): Omit<O, keyof R> => {\n  const res: Partial<O> = {};\n  let key: keyof O;\n\n  for (key in obj) {\n    if (!(key in keysToRm)) {\n      res[key] = obj[key];\n    }\n  }\n\n  return res as Omit<O, keyof R>;\n};\n\n// Returns true if the two objects are equal. If values are numeric, it will\n// round to the given number of decimal places.\nexport const compareValuesIn = <T extends object>(\n  objA: T,\n  objB: T,\n  roundTo = 3,\n) => {\n  for (const key in objA) {\n    if (!MH.hasOwnProp(objA, key)) {\n      continue;\n    }\n\n    const valA = objA[key];\n    const valB = objB[key];\n\n    if (MH.isNonPrimitive(valA) && MH.isNonPrimitive(valB)) {\n      if (!compareValuesIn(valA, valB)) {\n        return false;\n      }\n    } else if (MH.isNumber(valA) && MH.isNumber(valB)) {\n      if (roundNumTo(valA, roundTo) !== roundNumTo(valB, roundTo)) {\n        return false;\n      }\n    } else if (valA !== valB) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const keyExists = <T extends object>(\n  obj: T,\n  key: string | number | symbol,\n): key is keyof T => MH.isNonPrimitive(obj) && key in obj;\n\nexport const toArrayIfSingle = <T>(value?: T | T[] | null | undefined): T[] =>\n  MH.isArray(value) ? value : !MH.isNullish(value) ? [value] : [];\n\nexport const toBoolean = (value: unknown) =>\n  value === true || value === \"true\" || value === \"\"\n    ? true\n    : MH.isNullish(value) || value === false || value === \"false\"\n      ? false\n      : null;\n\n/**\n * @deprecated\n */\nexport const toBool = toBoolean;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Size, StrRecord } from \"@lisn/globals/types\";\n\n/**\n * Formats an object as a string. It supports more meaningful formatting as\n * string for certain types rather than using the default string\n * representation.\n *\n * **NOTE:** This is not intended for serialization of data that needs to be\n * de-serialized. Only for debugging output.\n *\n * @param {} value     The value to format as string.\n * @param {} [maxLen]  Maximum length of the returned string. If not given or\n *                     is <= 0, the string is not truncated. Otherwise, if the\n *                     result is longer than maxLen, it is truncated to\n *                     `maxLen - 3` and added a suffix of \"...\".\n *                     Note that if `maxLen` is > 0 but <= 3, the result is\n *                     always \"...\"\n *\n * @category Text\n */\nexport const formatAsString = (value: unknown, maxLen?: number) => {\n  const result = maybeConvertToString(value, false);\n\n  if (!MH.isNullish(maxLen) && maxLen > 0 && MH.lengthOf(result) > maxLen) {\n    return result.slice(0, MH.max(0, maxLen - 3)) + \"...\";\n  }\n\n  return result;\n};\n\n/**\n * Join an array of values as string using separator. It uses\n * {@link formatAsString} rather than the default string representation as\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join | Array:join} would.\n *\n * @param {} separator  The separator to use to delimit each argument.\n * @param {} args       Objects or values to convert to string and join.\n *\n * @category Text\n */\nexport const joinAsString = (separator: string, ...args: unknown[]) =>\n  args.map((a) => formatAsString(a)).join(separator);\n\n/**\n * Similar to\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split | String.prototype.split}\n * except that\n * 1. `limit` is interpreted as the maximum number of splits, and the\n *   returned array contains `limit + 1` entries. Also if `limit` is given and\n *   the number of substrings is greater than the limit, all the remaining\n *   substrings are present in the final substring.\n * 2. If input is an empty string (or containing only whitespace), returns an\n *    empty array.\n *\n * @example\n * ```javascript\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 0); // -> ['foo, bar, baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 1); // -> ['foo', 'bar, baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 2); // -> ['foo', 'bar', 'baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 3); // -> ['foo', 'bar', 'baz']\n * ```\n *\n * @param {} trim  If true, entries will be trimmed for whitespace after splitting.\n *\n * @param {} limit If not given or < 0, the string will be split on every\n *                 occurrence of `separator`. Otherwise, it will be split on\n *                 the first `limit` number of occurrences of `separator`.\n *\n * @category Text\n */\nexport const splitOn = (\n  input: string,\n  separator: string | RegExp,\n  trim?: boolean,\n  limit?: number,\n) => {\n  if (!input.trim()) {\n    return [];\n  }\n\n  limit = limit ?? -1;\n\n  const output: string[] = [];\n  const addEntry = (s: string) => output.push(trim ? s.trim() : s);\n\n  while (limit--) {\n    let matchIndex = -1,\n      matchLength = 0;\n    if (MH.isLiteralString(separator)) {\n      matchIndex = input.indexOf(separator);\n      matchLength = MH.lengthOf(separator);\n    } else {\n      const match = separator.exec(input);\n      matchIndex = match?.index ?? -1;\n      matchLength = match ? MH.lengthOf(match[0]) : 0;\n    }\n\n    if (matchIndex < 0) {\n      break;\n    }\n\n    addEntry(input.slice(0, matchIndex));\n    input = input.slice(matchIndex + matchLength);\n  }\n\n  addEntry(input);\n  return output;\n};\n\n/**\n * Converts a kebab-cased-string to camelCase.\n * The result is undefined if the input string is not formatted in\n * kebab-case.\n *\n * @category Text\n */\nexport const kebabToCamelCase = MH.kebabToCamelCase;\n\n/**\n * Converts a camelCasedString to kebab-case.\n * The result is undefined if the input string is not formatted in\n * camelCase.\n *\n * @category Text\n */\nexport const camelToKebabCase = MH.camelToKebabCase;\n\n/**\n * Generates a random string of a fixed length.\n *\n * **IMPORTANT:** This is _not_ suitable for cryptographic applications.\n *\n * @param {} [nChars = 8]  The length of the returned stirng.\n *\n * @category Text\n */\nexport const randId = (nChars = 8) => {\n  const segment = () =>\n    MH.floor(100000 + MC.MATH.random() * 900000).toString(36);\n\n  let s = \"\";\n  while (MH.lengthOf(s) < nChars) {\n    s += segment();\n  }\n  return s.slice(0, nChars);\n};\n\n/**\n * Returns an array of numeric margins in pixels from the given margin string.\n * The string should contain margins in either pixels or percentage; other\n * units are not supported.\n *\n * Percentage values are converted to pixels relative to the given\n * `absoluteSize`: left/right margins relative to the width, and top/bottom\n * margins relative to the height.\n *\n * Note that for the margin property, percentages are always relative to the\n * WIDTH of the parent, so you should pass the parent width as both the width\n * and the height keys in `absoluteSize`. But for IntersectionObserver's\n * `rootMargin`, top/bottom margin is relative to the height of the root, so\n * pass the actual root size.\n *\n * @returns {} [topMarginInPx, rightMarginInPx, bottomMarginInPx, leftMarginInPx]\n *\n * @category Text\n */\nexport const toMargins = (value: string, absoluteSize: Size) => {\n  const toPxValue = (strValue: string | undefined, index: number) => {\n    let margin = MH.parseFloat(strValue || \"\") || 0;\n\n    if (strValue === margin + \"%\") {\n      margin *=\n        index % 2 ? absoluteSize[MC.S_HEIGHT] : absoluteSize[MC.S_WIDTH];\n    }\n\n    return margin;\n  };\n\n  const parts = splitOn(value, \" \", true);\n  const margins: [number, number, number, number] = [\n    // top\n    toPxValue(parts[0], 0),\n    // right\n    toPxValue(parts[1] ?? parts[0], 1),\n    // bottom\n    toPxValue(parts[2] ?? parts[0], 2),\n    // left\n    toPxValue(parts[3] ?? parts[1] ?? parts[0], 3),\n  ];\n\n  return margins;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const objToStrKey = (obj: StrRecord): string =>\n  MH.stringify(flattenForSorting(obj));\n\n// --------------------\n\nconst flattenForSorting = (obj: StrRecord): unknown[] => {\n  const array = MH.isArray(obj)\n    ? obj\n    : MH.keysOf(obj)\n        .sort()\n        .map((k) => obj[k]);\n\n  return array.map((value) => {\n    if (\n      MH.isArray(value) ||\n      (MH.isNonPrimitive(value) && MH.constructorOf(value) === MC.OBJECT)\n    ) {\n      return flattenForSorting(value);\n    }\n    return value;\n  });\n};\n\nconst stringifyReplacer = (key: string, value: unknown) =>\n  key ? maybeConvertToString(value, true) : value;\n\nconst maybeConvertToString = <B extends boolean, V>(\n  value: V,\n  nested: B,\n): B extends false ? string : string | V => {\n  let result: string | V = \"\";\n\n  if (MH.isElement(value)) {\n    const classStr = MH.classList(value).toString().trim();\n\n    result = value.id\n      ? \"#\" + value.id\n      : `<${MH.tagName(value)}${classStr ? ' class=\"' + classStr + '\"' : \"\"}>`;\n\n    //\n  } else if (MH.isInstanceOf(value, Error)) {\n    /* istanbul ignore else */\n    if (\"stack\" in value && MH.isString(value.stack)) {\n      result = value.stack;\n    } else {\n      result = `Error: ${value.message}`;\n    }\n\n    //\n  } else if (MH.isArray(value)) {\n    result =\n      \"[\" +\n      value\n        .map((v) =>\n          MH.isString(v) ? MH.stringify(v) : maybeConvertToString(v, false),\n        )\n        .join(\",\") +\n      \"]\";\n\n    //\n  } else if (MH.isIterableObject(value)) {\n    result =\n      MH.typeOrClassOf(value) +\n      \"(\" +\n      maybeConvertToString(MH.arrayFrom(value), false) +\n      \")\";\n\n    //\n  } else if (MH.isNonPrimitive(value)) {\n    result = nested ? value : MH.stringify(value, stringifyReplacer);\n\n    //\n  } else {\n    // primitive\n    result = nested ? value : MC.STRING(value);\n  }\n\n  return result as B extends false ? string : string | V;\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\n\nimport { CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { toNum } from \"@lisn/utils/math\";\nimport { toBoolean } from \"@lisn/utils/misc\";\nimport { splitOn } from \"@lisn/utils/text\";\n\n/**\n * Returns true if the input is a string array or comma-separated string, whose\n * elements are valid according to the `validator` function.\n *\n * @param {} allowEmpty If `false`, then input without any entries is\n * considered _invalid_.\n *\n * @category Validation\n */\nexport const isValidStrList = <T extends string = string>(\n  value: unknown,\n  checkFn: (value: string) => value is T,\n  allowEmpty = true,\n): value is CommaSeparatedStr<T> | T[] => {\n  try {\n    const res = validateStrList(\"\", value, checkFn);\n    return allowEmpty || !MH.isNullish(res);\n  } catch (err) {\n    if (MH.isInstanceOf(err, LisnUsageError)) {\n      return false;\n    }\n    throw err;\n  }\n};\n\n/**\n * Returns an array of strings from the given list while validating each one\n * using the `checkFn` function.\n *\n * If it returns without throwing, the input is necessarily valid.\n * If the result is an empty array, it will return `null`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the input is not a string or array of strings, or if any\n *                entries do not pass `checkFn`.\n *\n * @param {} key Used in the error message thrown\n *\n * @returns {} `undefined` if the input contains no non-empty values (after\n * trimming whitespace on left/right from each), otherwise a non-empty array of\n * values.\n *\n * @category Validation\n */\nexport const validateStrList = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n): T[] | undefined =>\n  MH.filterBlank(\n    toArray(value)?.map((v) =>\n      _validateString(key, v, checkFn, \"a string or a string array\"),\n    ),\n  );\n\n/**\n * Returns an array of numbers from the given list.\n *\n * If it returns without throwing, the input is necessarily valid.\n * If the result is an empty array, it will return `null`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the input is not a number or array of numbers. Numerical\n *                strings are accepted.\n *\n * @param {} key Used in the error message thrown\n *\n * @returns {} `undefined` if the input contains no non-empty values (after\n * trimming whitespace on left/right from each), otherwise a non-empty array of\n * values.\n *\n * @category Validation\n */\nexport const validateNumList = (\n  key: string,\n  value: unknown,\n): number[] | undefined =>\n  MH.filterBlank(\n    toArray(value)?.map((v) =>\n      _validateNumber(key, v, \"a number or a number array\"),\n    ),\n  );\n\n/**\n * Returns a number corresponding to the supplied value, ensuring the supplied\n * value is a valid number or a string containing only a number.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @returns {} `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateNumber = (key: string, value: unknown) =>\n  _validateNumber(key, value);\n\n/**\n * Returns a boolean corresponding to the given value as follows:\n *\n * - `null` and `undefined` result in `undefined`\n * - `false` and `\"false\"` result in `false`\n * - `\"\"`, `true` and `\"true\"` result in `true`\n * - other values throw an error error\n *\n * Note that an empty string is treated as `true`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is not a valid boolean or boolean string.\n *\n * @returns {} `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateBoolean = (key: string, value: unknown) =>\n  _validateBoolean(key, value);\n\n/**\n * Returns a valid string from the supplied value, ensuring the supplied value\n * is a string that conforms to the given `checkFn`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @param {} checkFn      If given and the supplied value is a string, then it\n *                        is called with the value as a single argument. It\n *                        must return true if the value is valid and false\n *                        otherwise.\n *                        If it is not given, then any literal string is\n *                        accepted.\n *\n * @returns {} `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n) => _validateString(key, value, checkFn);\n\n/**\n * Like {@link validateString} except it requires input to be given and\n * non-empty.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid or empty.\n *\n * @category Validation\n */\nexport const validateStringRequired = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n): T => {\n  const result = _validateString(key, value, checkFn);\n\n  if (MH.isEmpty(result)) {\n    throw MH.usageError(`'${key}' is required`);\n  }\n\n  return result;\n};\n\n/**\n * Returns a valid boolean or a string from the supplied value, ensuring the\n * supplied value is either a boolean or boolean string (see\n * {@link validateBoolean}), or a string that conforms to the given `checkFn`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @param {} stringCheckFn If given and the supplied value is a string _other\n *                         than a boolean string_, then it is called with the\n *                         value as a single argument. It must return true if\n *                         the value is valid and false otherwise.\n *                         If it is not given, then any literal string is\n *                         accepted.\n *\n * @category Validation\n */\nexport const validateBooleanOrString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  stringCheckFn?: (value: string) => value is T,\n) => _validateBooleanOrString(key, value, stringCheckFn);\n\n// --------------------\n\nconst toArray = (value: unknown): unknown[] | undefined => {\n  let result: unknown[] | null;\n  if (MH.isArray(value)) {\n    result = value;\n  } else if (MH.isIterableObject(value)) {\n    result = MH.arrayFrom(value);\n  } else if (MH.isLiteralString(value)) {\n    result = splitOn(value, \",\");\n  } else if (!MH.isNullish(value)) {\n    result = [value];\n  } else {\n    result = null;\n  }\n\n  return result\n    ? MH.filterBlank(result.map((v) => (MH.isLiteralString(v) ? v.trim() : v)))\n    : undefined;\n};\n\nconst _validateNumber = (\n  key: string,\n  value: unknown,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const numVal = toNum(value, null);\n  if (numVal === null) {\n    throw MH.usageError(`'${key}' must be ${typeDescription ?? \"a number\"}`);\n  }\n\n  return numVal;\n};\n\nconst _validateBoolean = (\n  key: string,\n  value: unknown,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const boolVal = toBoolean(value);\n  if (boolVal === null) {\n    throw MH.usageError(\n      `'${key}' must be ${typeDescription ?? '\"true\" or \"false\"'}`,\n    );\n  }\n\n  return boolVal;\n};\n\nconst _validateString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n  typeDescription?: string,\n): (typeof checkFn extends null | undefined ? string : T) | undefined => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  if (!MH.isLiteralString(value)) {\n    throw MH.usageError(`'${key}' must be ${typeDescription ?? \"a string\"}`);\n  } else if (checkFn && !checkFn(value)) {\n    throw MH.usageError(`Invalid value for '${key}'`);\n  }\n\n  return value as typeof checkFn extends null | undefined ? string : T;\n};\n\nconst _validateBooleanOrString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  stringCheckFn?: (value: string) => value is T,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const boolVal = toBoolean(value);\n  if (boolVal !== null) {\n    return boolVal;\n  }\n\n  if (!MH.isLiteralString(value)) {\n    throw MH.usageError(\n      `'${key}' must be ${typeDescription ?? \"a boolean or string\"}`,\n    );\n  }\n\n  return _validateString(key, value, stringCheckFn);\n};\n","/**\n * @module Modules/BitSpaces\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getBitmask } from \"@lisn/utils/math\";\n\nexport type BitPropName = string;\n\n/**\n * A union of all property names in the space.\n */\nexport type BitSpaceKey<S> = S extends BitSpace<infer T> ? T : never;\n\n/**\n * {@link BitSpace} represents a single set of mutually exclusive (or\n * orthogonal) properties.\n *\n * Each property has a numeric value equal to 1 bit-shifted by a certain number\n * of bits.\n *\n * Created using {@link BitSpaces.create}\n *\n * @interface\n */\nexport type BitSpace<T extends BitPropName> = {\n  /**\n   * The starting bit of the space. It's 0 for the first space created in a\n   * given set of {@link BitSpaces}.\n   */\n  start: number;\n\n  /**\n   * The ending bit of the space. It's always equal to\n   * start + (# of properties in space) - 1\n   */\n  end: number;\n\n  /**\n   * A bitmask of all values in the space.\n   */\n  bitmask: number;\n\n  /**\n   * Returns true if the given name is one of the properties in the space.\n   * It is case-sensitive.\n   */\n  has: (p: string) => p is T;\n\n  /**\n   * Takes the names of two properties within the space and returns a bitmask\n   * that covers all values between them _including the starting and ending\n   * one_.*\n   *\n   * If pStart > pEnd, they are reversed.\n   *\n   * * The numeric values of the properties are guaranteed to be in the same\n   *   order, increasing in value, as the keys passed to the `BitSpaces.create`,\n   *   function.\n   *\n   * @param {} pStart  The name of the property that holds the start value.\n   *                   If null the bitmask will cover from the lowest property.\n   * @param {} pEnd    The name of the property that holds the end cut-off\n   *                   value for the bitmask. The bitmask with _not_ include\n   *                   pEnd's value.\n   *                   If null the bitmask will cover to the highest property,\n   *                   _including_.\n   *\n   * @returns {} Returns a non-0 bitmask containing all values in the space\n   *             between the given ones.\n   *             Returns 0 if one or both of the given properties do not exist\n   *             in the space.\n   */\n  bitmaskFor: (pStart?: T | null, pEnd?: T | null) => number;\n\n  /**\n   * Returns the name of the property with the given value, or null if the\n   * value does not correspond to one of the space properties.\n   */\n  nameOf: (val: number) => T | null;\n\n  /**\n   * Holds properties whose numeric values are non-overlapping binary values,\n   * suitable for bitmasking.\n   *\n   * The given properties are set under the \"bit\" key in the object and hold\n   * the numeric value.\n   *\n   * @example\n   * ```javascript\n   * const space = new BitSpaces().create(\"up\", \"down\", \"left\", \"right\");\n   *\n   * // {\n   * //     bit: {\n   * //         up:    1, // at bit 0, i.e. 1 << 0\n   * //         down:  2, // at bit 1, i.e. 1 << 1\n   * //         left:  4, // at bit 2, i.e. 1 << 2\n   * //         right: 8, // at bit 3, i.e. 1 << 3\n   * //     },\n   * //     start:      0,\n   * //     end:        3,\n   * //     bitmask:    15, // 1 << 0 | 1 << 1 | 1 << 2 | 1 << 3\n   * //     has:        (p) => p === \"up\" || p === \"down\" || p === \"left\" || p === \"right\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 1 ? \"up\" : v === 2 ? \"down\" : v === 4 ...\n   * // }\n   *\n   * space.bitmaskFor(); // => space.bitmask (15)\n   * space.bitmaskFor(\"left\"); // => space.bit.left | space.bit.right (12)\n   * space.bitmaskFor(null, \"down\"); // => space.bit.up | space.bit.down (3)\n   * ```\n   */\n  bit: {\n    [key in T]: number;\n  };\n};\n\n/**\n * {@link BitSpaces} represents one or more related {@link BitSpace}s whose bit\n * values will not overlap.\n */\nexport class BitSpaces {\n  /**\n   * Creates and returns a new BitSpace that is bit shifted to the left as\n   * many bits as the ending bit of the previous space created by this\n   * instances, so that each new space created is non-overlapping with previous\n   * ones.\n   *\n   * The numeric values of the properties are guaranteed to be in the same\n   * order, increasing in value, as the keys passed to the function.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the number of bits in the space will exceed 32.\n   *\n   * @example\n   * ```javascript\n   * const spaces = new BitSpaces();\n   * const spaceA = spaces.create(\"up\", \"down\");\n   *\n   * // spaces.nBits   => 2\n   * // spaces.bitmask => 3\n   * //\n   * // spaceA:\n   * // {\n   * //     bit: {\n   * //         up:     1, // at bit 0, i.e. 1 << 0\n   * //         down:   2, // at bit 1, i.e. 1 << 1\n   * //     },\n   * //     start:      0,\n   * //     end:        1,\n   * //     bitmask:    3, // 1 << 0 | 1 << 1\n   * //     has:        (p) => p === \"up\" || p === \"down\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 1 ? \"up\" : v === 2 ? \"down\" : null\n   * // }\n   *\n   * const spaceB = spaces.create(\"left\", \"right\");\n   *\n   * // spaces.nBits   => 4\n   * // spaces.bitmask => 15\n   * //\n   * // spaceB:\n   * // {\n   * //     bit: {\n   * //         left:   4, // at bit 2, i.e. 1 << 2\n   * //         right:  8, // at bit 3, i.e. 1 << 3\n   * //     },\n   * //     start:      2,\n   * //     end:        3,\n   * //     bitmask:    12, // 1 << 2 | 1 << 3\n   * //     has:        (p) => p === \"left\" || p === \"right\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 4 ? \"left\" : v === 8 ? \"right\" : null\n   * // }\n   *\n   * ```\n   */\n  readonly create: <T extends BitPropName>(\n    ...propNames: readonly T[]\n  ) => BitSpace<T>;\n\n  /**\n   * Returns the number of bits all created spaces span, i.e. the end bit of\n   * the one + 1.\n   */\n  readonly nBits!: number;\n\n  /**\n   * Returns a bitmask containing all values in all created spaces.\n   */\n  readonly bitmask!: number;\n\n  constructor() {\n    const counter = newCounter();\n\n    this.create = (...propNames) => newBitSpace(counter, propNames);\n    MH.defineProperty(this, \"nBits\", { get: () => counter._nBits });\n    MH.defineProperty(this, \"bitmask\", { get: () => counter._bitmask });\n  }\n}\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newBitSpaces = () => new BitSpaces();\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const createBitSpace = <T extends BitPropName>(\n  spaces: BitSpaces,\n  ...propNames: readonly T[]\n): BitSpace<T> => spaces.create(...propNames);\n\n// ----------------------------------------\n\ntype BitCounter = {\n  _nBits: number;\n  _bitmask: number;\n};\n\nconst newCounter = (): BitCounter => ({\n  _nBits: 0,\n  _bitmask: 0,\n});\n\nconst newBitSpace = <T extends BitPropName>(\n  counter: BitCounter,\n  propNames: readonly T[],\n): BitSpace<T> => {\n  const start = counter._nBits;\n  const end = start + MH.lengthOf(propNames) - 1;\n  if (end >= 31) {\n    throw MH.usageError(\"BitSpaces overflow\");\n  }\n\n  const bitmask = getBitmask(start, end);\n  const space: BitSpace<T> = {\n    bit: {},\n    start,\n    end,\n    bitmask,\n\n    has: (p) =>\n      MH.isString(p) &&\n      p in space.bit &&\n      MH.isNumber((space.bit as Record<string, unknown>)[p]),\n\n    bitmaskFor: (pStart, pEnd) => {\n      if (\n        (!MH.isEmpty(pStart) && !space.has(pStart)) ||\n        (!MH.isEmpty(pEnd) && !space.has(pEnd))\n      ) {\n        return 0;\n      }\n\n      const thisStart = !MH.isEmpty(pStart)\n        ? MH.log2(space.bit[pStart])\n        : start;\n      const thisEnd = !MH.isEmpty(pEnd) ? MH.log2(space.bit[pEnd]) : end;\n\n      return getBitmask(thisStart, thisEnd);\n    },\n\n    nameOf: (val) => propNames[MH.log2(val) - start] ?? null,\n  } as BitSpace<T>;\n\n  for (const name of propNames) {\n    MH.defineProperty(space.bit, name, {\n      value: 1 << counter._nBits++,\n      enumerable: true,\n    });\n  }\n\n  counter._bitmask |= bitmask;\n\n  return space;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { MutationCategory } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newBitSpaces, createBitSpace } from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid category.\n *\n * @category Validation\n */\nexport const isValidMutationCategory = (\n  category: string,\n): category is MutationCategory => DOM_CATEGORIES_SPACE.has(category);\n\n/**\n * Returns true if the given string or array is a list of valid categories.\n *\n * @category Validation\n */\nexport const isValidMutationCategoryList = (categories: string | string[]) =>\n  isValidStrList(categories, isValidMutationCategory, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const DOM_CATEGORIES_SPACE = createBitSpace<MutationCategory>(\n  newBitSpaces(),\n  MC.S_ADDED,\n  MC.S_REMOVED,\n  MC.S_ATTRIBUTE,\n);\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\n/**\n * @category Tasks\n */\nexport type SchedulerPostTaskOptions = {\n  delay?: number;\n  priority?: TaskPriority;\n  signal?: AbortSignal;\n};\n\n/**\n * @category Tasks\n */\nexport type Scheduler = {\n  postTask<T, P extends readonly unknown[] | []>(\n    callback: (...params: P) => T,\n    options?: SchedulerPostTaskOptions,\n    ...args: P\n  ): Promise<T>;\n};\n\n/**\n * @category Tasks\n */\nexport type TaskPriority = \"user-blocking\" | \"user-visible\" | \"background\";\n\n/* eslint-disable-next-line no-var */\ndeclare var scheduler: Scheduler;\n\n/**\n * Schedules a task with high priority to be executed as soon as possible.\n *\n * It uses {@link https://developer.mozilla.org/en-US/docs/Web/API/Scheduler/postTask | Scheduler:postTask}\n * if available, otherwise falls back to\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MessageChannel | MessageChannel}.\n *\n * @category Tasks\n */\nexport const scheduleHighPriorityTask = (task: () => void) => {\n  if (typeof scheduler !== \"undefined\") {\n    scheduler.postTask(task, {\n      priority: \"user-blocking\",\n    });\n  } else {\n    // Fallback to MessageChannel\n    const channel = new MessageChannel();\n    channel.port1.onmessage = () => {\n      channel.port1.close();\n      task();\n    };\n    channel.port2.postMessage(\"\");\n  }\n};\n\n/**\n * Returns a wrapper around the given handler that is debounced by the given\n * debounce window.\n *\n * @category Tasks\n */\nexport const getDebouncedHandler = <Args extends unknown[]>(\n  debounceWindow: number,\n  handler: (...args: Args) => void,\n) => {\n  if (!debounceWindow) {\n    return handler;\n  }\n\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  let lastArgs: Args;\n\n  return (...args: Args) => {\n    lastArgs = args;\n\n    if (timer === null) {\n      timer = MH.setTimer(async () => {\n        await handler(...lastArgs);\n        timer = null;\n      }, debounceWindow);\n    }\n  };\n};\n\n/**\n * Returns a promise that resolves at least the given number of delay (in\n * milliseconds) later. Uses `setTimeout`.\n *\n * @category Tasks\n */\nexport const waitForDelay = (delay?: number) =>\n  MH.newPromise<void>((resolve) => {\n    MH.setTimer(resolve, delay);\n  });\n\n/**\n * Returns a promise that resolves at the next animation frame. Async/await\n * version of requestAnimationFrame.\n *\n * @returns {} The timestamp gotten from requestAnimationFrame\n *\n * @category Tasks\n */\nexport const waitForAnimationFrame = async () =>\n  MH.newPromise<number>((resolve) => {\n    MH.onAnimationFrame(resolve);\n  });\n","/**\n * @module Modules/Callback\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getDebouncedHandler } from \"@lisn/utils/tasks\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * @typeParam Args  See {@link Callback}\n */\nexport type CallbackHandler<Args extends unknown[] = []> = (\n  ...args: Args\n) => CallbackReturnType | Promise<CallbackReturnType>;\n\nexport type CallbackReturnType =\n  | typeof Callback.KEEP\n  | typeof Callback.REMOVE\n  | void;\n\n/**\n * For minification optimization. Exposed through Callback.wrap.\n *\n * @ignore\n * @internal\n */\nexport const wrapCallback = <Args extends unknown[] = []>(\n  handlerOrCallback: CallbackHandler<Args> | Callback<Args>,\n  debounceWindow = 0,\n): Callback<Args> => {\n  const isFunction = MH.isFunction(handlerOrCallback);\n  let isRemoved = () => false;\n\n  if (isFunction) {\n    // check if it's an invoke method\n    const callback = callablesMap.get(handlerOrCallback);\n    if (callback) {\n      return wrapCallback(callback);\n    }\n  } else {\n    isRemoved = handlerOrCallback.isRemoved;\n  }\n\n  const handler: CallbackHandler<Args> = isFunction\n    ? handlerOrCallback\n    : (...args: Args) => handlerOrCallback.invoke(...args);\n\n  const wrapper = new Callback<Args>(\n    getDebouncedHandler(debounceWindow, (...args: Args) => {\n      if (!isRemoved()) {\n        return handler(...args);\n      }\n    }),\n  );\n\n  if (!isFunction) {\n    handlerOrCallback.onRemove(wrapper.remove);\n  }\n\n  return wrapper;\n};\n\n/**\n * {@link Callback} wraps user-supplied callbacks. Supports\n * - removing a callback either when calling {@link remove} or if the user\n *   handler returns {@link Callback.REMOVE}\n * - calling custom {@link onRemove} hooks\n * - debouncing (via {@link wrap})\n * - awaiting on an asynchronous handler and ensuring that the handler does not\n *  run concurrently to itself, i.e. subsequent {@link invoke}s will be queued\n *\n * @typeParam Args  The type of arguments that the callback expects.\n */\nexport class Callback<Args extends unknown[] = []> {\n  /**\n   * Possible return value for the handler.\n   *\n   * Do not do anything. Same as not retuning anything from the function.\n   */\n  static readonly KEEP: unique symbol = MC.SYMBOL(\n    \"KEEP\",\n  ) as typeof Callback.KEEP;\n\n  /**\n   * Possible return value for the handler.\n   *\n   * Will remove this callback.\n   */\n  static readonly REMOVE: unique symbol = MC.SYMBOL(\n    \"REMOVE\",\n  ) as typeof Callback.REMOVE;\n\n  /**\n   * Call the handler with the given arguments.\n   *\n   * If the handler is asynchronous, it awaits on it. Furthermore, calls will\n   * always wait for previous calls to this handler to complete first, i.e. it\n   * never runs concurrently to itself. If you need multiple calls to the async\n   * handler to run concurrently, then wrap it in a non-async function that\n   * does not await it.\n   *\n   * The returned promise is rejected in two cases:\n   * - If the callback throws an error or returns a rejected Promise.\n   * - If the callback is removed _after_ you call {@link invoke} but before the\n   *   handler is actually called (while it's waiting in the queue to be called)\n   *   In this case, the rejection reason is {@link Callback.REMOVE}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the callback is already removed.\n   */\n  readonly invoke: (...args: Args) => Promise<void>;\n\n  /**\n   * Mark the callback as removed and call the registered {@link onRemove} hooks.\n   *\n   * Future attempts to call it will result in\n   * {@link Errors.LisnUsageError | LisnUsageError}.\n   */\n  readonly remove: () => void;\n\n  /**\n   * Returns true if the callback has been removed and cannot be called again.\n   */\n  readonly isRemoved: () => boolean;\n\n  /**\n   * Registers the given function to be called when the callback is removed.\n   *\n   * You can call {@link onRemove} multiple times to register multiple hooks.\n   */\n  readonly onRemove: (fn: () => void) => void;\n\n  /**\n   * Wraps the given handler or callback as a callback, optionally debounced by\n   * the given debounce window.\n   *\n   * If the argument is already a callback _or an invoke method of a callback_,\n   * then the wrapper will call that callback and return the same value as it.\n   * It will also set up the returned wrapper callback so that it is removed\n   * when the original (given) callback is removed. However, removing the\n   * returned wrapper callback will _not_ cause the original callback (being\n   * wrapped) to be removed. If you want to do this, then do\n   * `wrapper.onRemove(wrapped.remove)`.\n   *\n   * Note that if the argument is a callback that's already debounced by a\n   * _larger_ window, then `debounceWindow` will have no effect.\n   *\n   * @param {} debounceWindow  If non-0, the callback will be called at most\n   *                           every `debounceWindow` ms. The arguments it will\n   *                           be called with will be the last arguments the\n   *                           wrapper was called with.\n   */\n  static readonly wrap = wrapCallback;\n\n  /**\n   * @param {} handler     The actual function to call. This should return one of\n   *                       the known {@link CallbackReturnType} values.\n   */\n  constructor(handler: CallbackHandler<Args>) {\n    const logger = debug\n      ? new debug.Logger({ name: \"Callback\", logAtCreation: handler })\n      : null;\n\n    let isRemoved = false;\n    const id = MC.SYMBOL();\n\n    const onRemove = MH.newSet<() => void>();\n\n    this.isRemoved = () => isRemoved;\n\n    this.remove = () => {\n      if (!isRemoved) {\n        debug: logger?.debug8(\"Removing\");\n        isRemoved = true;\n\n        for (const rmFn of onRemove) {\n          rmFn();\n        }\n\n        CallbackScheduler._clear(id);\n      }\n    };\n\n    this.onRemove = (fn) => onRemove.add(fn);\n\n    this.invoke = (...args) =>\n      MH.newPromise((resolve, reject) => {\n        debug: logger?.debug8(\"Calling with\", args);\n        if (isRemoved) {\n          reject(MH.usageError(\"Callback has been removed\"));\n          return;\n        }\n\n        CallbackScheduler._push(\n          id,\n          async () => {\n            let result;\n            try {\n              result = await handler(...args);\n            } catch (err) {\n              reject(err);\n            }\n\n            if (result === Callback.REMOVE) {\n              this.remove();\n            }\n\n            resolve();\n          },\n          reject,\n        );\n      });\n\n    callablesMap.set(this.invoke, this);\n  }\n}\n\n// ----------------------------------------\n\ntype CallbackSchedulerTask = () => Promise<void>;\ntype CallbackSchedulerQueueItem = {\n  _task: CallbackSchedulerTask;\n  _running: boolean;\n  _onRemove: (reason: typeof Callback.REMOVE) => void;\n};\n\ntype CallableCallback<Args extends unknown[] = []> = (...args: Args) => void;\n\nconst callablesMap = MH.newWeakMap<CallableCallback, Callback>();\n\nconst CallbackScheduler = (() => {\n  const queues = MH.newMap<symbol, CallbackSchedulerQueueItem[]>();\n\n  const flush = async (queue: CallbackSchedulerQueueItem[]) => {\n    // So that callbacks are always called asynchronously for consistency,\n    // await here before calling 1st\n    await null;\n    while (MH.lengthOf(queue)) {\n      // shouldn't throw anything as Callback must catch errors\n      queue[0]._running = true;\n      await queue[0]._task();\n\n      // only remove when done\n      queue.shift();\n    }\n  };\n\n  return {\n    _clear: (id: symbol) => {\n      const queue = queues.get(id);\n      if (queue) {\n        let item: CallbackSchedulerQueueItem | undefined;\n        while ((item = queue.shift())) {\n          if (!item._running) {\n            item._onRemove(Callback.REMOVE);\n          }\n        }\n\n        MH.deleteKey(queues, id);\n      }\n    },\n\n    _push: (id: symbol, task: CallbackSchedulerTask, onRemove: () => void) => {\n      let queue = queues.get(id);\n      if (!queue) {\n        queue = [];\n        queues.set(id, queue);\n      }\n\n      queue.push({ _task: task, _onRemove: onRemove, _running: false });\n      if (MH.lengthOf(queue) === 1) {\n        flush(queue);\n      }\n    },\n  };\n})();\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LogFunction } from \"@lisn/globals/types\";\n\nimport { joinAsString } from \"@lisn/utils/text\";\n\nimport { Callback } from \"@lisn/modules/callback\";\n\n/**\n * Like `console.info` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logInfo: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleInfo(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.warn` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logWarn: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleWarn(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.error` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logError: LogFunction = (...args) => {\n  if (\n    (MH.lengthOf(args) > 1 || args[0] !== Callback.REMOVE) &&\n    !isMessageSeen(args)\n  ) {\n    MH.consoleError(MC.LOG_PREFIX, ...args);\n  }\n};\n\nconst discardMessages = MH.newSet<string>();\nconst isMessageSeen = (args: unknown[]) => {\n  const msg = joinAsString(\" \", ...args);\n  const isSeen = discardMessages.has(msg);\n  discardMessages.add(msg);\n  return isSeen;\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Preventing layout trashing\n *\n * {@link waitForMeasureTime} allows you to schedule tasks that read or\n * \"measure\", the DOM, for example getting computed styles, taking the\n * `offsetWidth` or the `scrollTop` of an element, etc... anything that _would_\n * force a layout if it runs after the layout has been invalidated by a\n * \"mutation\".\n *\n * See https://gist.github.com/paulirish/5d52fb081b3570c81e3 for a list of\n * operations that should be run on a valid layout to avoid forced layouts.\n *\n * {@link waitForMutateTime} allows you to schedule tasks that invalidate the\n * DOM layout by making changes to the style, inserting or removing elements,\n * etc.\n *\n * These ensure that:\n * - All mutation tasks that would invalidate the style run together before the\n *   next repaint.\n * - All measurement tasks that need a valid style will run as soon as possible\n *   after the next repaint.\n * - If a mutation task is scheduled by another mutation task, it will run in\n *   the same batch.\n * - If a measurement task is scheduled by either a mutation or another\n *   measurement task, it will run in the same batch.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logError } from \"@lisn/utils/log\";\nimport { scheduleHighPriorityTask } from \"@lisn/utils/tasks\";\n\n/**\n * Returns a Promise that is resolved before the next repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForMutateTime = () =>\n  MH.newPromise<void>((resolve) => {\n    scheduleDOMTask(scheduledDOMMutations, resolve);\n  });\n\n/**\n * Returns a Promise that is resolved as soon as possible after the next\n * repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForMeasureTime = () =>\n  MH.newPromise<void>((resolve) => {\n    scheduleDOMTask(scheduledDOMMeasurements, resolve);\n  });\n\n/**\n * Returns a Promise that is resolved before the repaint that follows the next\n * repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForSubsequentMutateTime = () =>\n  waitForMutateTime().then(waitForMeasureTime).then(waitForMutateTime);\n\n/**\n * Returns a Promise that is resolved as soon as possible after the repaint\n * that follows the next repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForSubsequentMeasureTime = () =>\n  waitForMeasureTime().then(waitForMutateTime).then(waitForMeasureTime);\n\n// ----------------------------------------\n\ntype TaskResolver = () => void;\ntype DOMTaskQueue = TaskResolver[];\n\nconst scheduledDOMMeasurements: DOMTaskQueue = [];\nconst scheduledDOMMutations: DOMTaskQueue = [];\nlet hasScheduledDOMTasks = false;\n\nconst scheduleDOMTask = (queue: DOMTaskQueue, resolve: TaskResolver) => {\n  queue.push(resolve);\n  if (!hasScheduledDOMTasks) {\n    hasScheduledDOMTasks = true;\n    MH.onAnimationFrame(runAllDOMTasks);\n  }\n};\n\nconst runAllDOMTasks = async () => {\n  // We suspend (await null) after each queue to ensure that microtasks that\n  // have been added by await waitFor* or waitFor*().then run before the next\n  // queue, so that if they schedule more measurements and/or mutations, they\n  // can be flushed now, in the same batch.\n\n  // We're inside an animation frame. Run all mutation tasks now.\n  while (MH.lengthOf(scheduledDOMMutations)) {\n    runDOMTaskQueue(scheduledDOMMutations);\n    // wait for tasks awaiting on the resolved promises, then check queue again\n    await null;\n  }\n\n  // The measurement queue is now empty => scheduling measurements after\n  // this point will result in rescheduling both queues again in the next\n  // frame.\n  //\n  // Schedule the measurement tasks as soon as possible, after the upcoming\n  // paint. Use a macro task with as high priority as possible.\n  scheduleHighPriorityTask(async () => {\n    while (MH.lengthOf(scheduledDOMMeasurements)) {\n      runDOMTaskQueue(scheduledDOMMeasurements);\n      // wait for tasks awaiting on the resolved promises, then check queue again\n      await null;\n    }\n\n    if (MH.lengthOf(scheduledDOMMutations)) {\n      // There have been mutations added. Schedule another flush.\n      MH.onAnimationFrame(runAllDOMTasks);\n    } else {\n      hasScheduledDOMTasks = false;\n    }\n  });\n};\n\nconst runDOMTaskQueue = (queue: DOMTaskQueue) => {\n  let resolve: TaskResolver | undefined;\n  while ((resolve = queue.shift())) {\n    try {\n      resolve();\n    } catch (err) /* istanbul ignore next */ {\n      logError(err);\n    }\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement } from \"@lisn/globals/types\";\n\n/**\n * Returns all the child elements of the given element that are not `script` or\n * `style` tags.\n *\n * @category DOM: Querying\n */\nexport const getVisibleContentChildren = (el: Element) =>\n  MH.filter([...MH.childrenOf(el)], (e) => isVisibleContentTag(MH.tagName(e)));\n\n/**\n * Returns whether the given tag is _not_ `script` or `style`. Comparison is\n * case insensitive.\n *\n * @category DOM: Querying\n */\nexport const isVisibleContentTag = (tagName: string) =>\n  !MH.includes([\"script\", \"style\"], MH.toLowerCase(tagName));\n\n/**\n * Returns whether the given tag name has by default an inline display.\n * Comparison is case insensitive.\n *\n * @category DOM: Querying\n */\nexport const isInlineTag = (tagName: string) =>\n  inlineTags.has(tagName.toLowerCase());\n\n/**\n * Returns whether the given element is as {@link DOMElement}.\n *\n * @category DOM: Querying\n */\nexport const isDOMElement = (target: unknown): target is DOMElement =>\n  MH.isHTMLElement(target) ||\n  MH.isInstanceOf(target, SVGElement) ||\n  (typeof MathMLElement !== \"undefined\" &&\n    MH.isInstanceOf(target, MathMLElement));\n\n// --------------------\n\nconst inlineTags = MH.newSet([\n  \"a\",\n  \"abbr\",\n  \"acronym\",\n  \"b\",\n  \"bdi\",\n  \"bdo\",\n  \"big\",\n  \"button\",\n  \"cite\",\n  \"code\",\n  \"data\",\n  \"dfn\",\n  \"em\",\n  \"i\",\n  \"img\",\n  \"input\",\n  \"kbd\",\n  \"label\",\n  \"mark\",\n  \"map\",\n  \"object\",\n  \"output\",\n  \"q\",\n  \"rp\",\n  \"rt\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"select\",\n  \"small\",\n  \"span\",\n  \"strong\",\n  \"sub\",\n  \"sup\",\n  \"textarea\",\n  \"time\",\n  \"tt\",\n  \"u\",\n  \"var\",\n]);\n","/**\n * @module Utils\n *\n * @categoryDescription CSS: Altering\n * These functions transition an element from one CSS class to another, but\n * could lead to forced layout if not scheduled using {@link waitForMutateTime}.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n *\n * @categoryDescription CSS: Altering (optimized)\n * These functions transition an element from one CSS class to another in an\n * optimized way using {@link waitForMutateTime} and so are asynchronous.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement, FlexDirection } from \"@lisn/globals/types\";\n\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n  waitForSubsequentMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isDOMElement } from \"@lisn/utils/dom-query\";\nimport { isValidNum, roundNumTo } from \"@lisn/utils/math\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { camelToKebabCase, splitOn } from \"@lisn/utils/text\";\n\n/**\n * Removes the given `fromCls` class and adds the given `toCls` class to the\n * element.\n *\n * Unlike {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace | DOMTokenList:replace},\n * this will always add `toCls` even if `fromCls` isn't in the element's class list.\n *\n * @returns {} True if there was a change made (class removed or added),\n *             false otherwise.\n *\n * @category CSS: Altering\n */\nexport const transitionElementNow = (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n) => {\n  cancelCSSTransitions(element, fromCls, toCls);\n\n  // Avoid triggering MutationObserver unnecessarily.\n  let didChange = false;\n  if (hasClass(element, fromCls)) {\n    didChange = true;\n    removeClassesNow(element, fromCls);\n  }\n\n  if (!hasClass(element, toCls)) {\n    addClassesNow(element, toCls);\n    didChange = true;\n  }\n\n  return didChange;\n};\n\n/**\n * Like {@link transitionElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay, and it finally awaits for the effective style's\n * transition-duration.\n *\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, this one is\n * cancelled.\n *\n * @example\n *\n * - {@link showElement} with delay of 100 schedules `lisn-hide` -> `lisn-show`\n *   in 100ms\n * - then if {@link hideElementNow} is called, or a scheduled\n *   {@link hideElement} completes  before that timer runs out, this call to\n *   {@link showElement} aborts\n *\n * ```javascript\n * hideElement(someElement, 10);\n * // this will be aborted in 10ms when the scheduled hideElement above\n * // completes\n * showElement(someElement, 100);\n * ```\n *\n * ```javascript\n * // this will be aborted in 10ms when the hideElement that will be scheduled\n * // below completes\n * showElement(someElement, 100);\n * hideElement(someElement, 10);\n * ```\n *\n * ```javascript\n * // this will be aborted immediately by hideElementNow that runs straight\n * // afterwards\n * showElement(someElement, 100);\n * hideElementNow(someElement);\n * ```\n *\n * ```javascript\n * hideElementNow(someElement);\n * // this will NOT be aborted because hideElementNow has completed already\n * showElement(someElement, 100);\n * ```\n *\n * @category CSS: Altering (optimized)\n */\nexport const transitionElement = async (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n  delay = 0,\n) => {\n  const thisTransition = scheduleCSSTransition(element, toCls);\n\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForMutateTime();\n  if (thisTransition._isCancelled()) {\n    // it has been overridden by a later transition\n    return false;\n  }\n\n  const didChange = transitionElementNow(element, fromCls, toCls);\n  thisTransition._finish();\n\n  if (!didChange) {\n    return false;\n  }\n\n  // Await for the transition duration so that caller awaiting on us knows when\n  // it's complete.\n  const transitionDuration = await getMaxTransitionDuration(element);\n  if (transitionDuration) {\n    await waitForDelay(transitionDuration);\n  }\n\n  return true;\n};\n\n/**\n * Transitions an element from class `lisn-undisplay` (which applies `display:\n * none`) to `lisn-display` (no style associated with this).\n *\n * The difference between this and simply removing the `lisn-undisplay` class\n * is that previously scheduled transitions to `lisn-undisplay` will be\n * cancelled.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const displayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY);\n\n/**\n * Like {@link displayElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const displayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY, delay);\n\n/**\n * The opposite of {@link displayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const undisplayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY);\n\n/**\n * Like {@link undisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const undisplayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY, delay);\n\n/**\n * Transitions an element from class `lisn-hide` (which makes the element\n * hidden) to `lisn-show` (which shows it). These classes have CSS\n * transitions applied so the element is faded into and out of view.\n *\n * @see {@link transitionElementNow}.\n *\n * @category CSS: Altering\n */\nexport const showElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW);\n\n/**\n * Like {@link showElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const showElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW, delay);\n\n/**\n * The opposite of {@link showElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const hideElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE);\n\n/**\n * Like {@link hideElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const hideElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE, delay);\n\n/**\n * If {@link isElementUndisplayed}, it will {@link displayElementNow},\n * otherwise it will {@link undisplayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleDisplayElementNow = (element: Element) =>\n  isElementUndisplayed(element)\n    ? displayElementNow(element)\n    : undisplayElementNow(element);\n\n/**\n * Like {@link toggleDisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleDisplayElement = (element: Element, delay = 0) =>\n  isElementUndisplayed(element)\n    ? displayElement(element, delay)\n    : undisplayElement(element, delay);\n\n/**\n * If {@link isElementHidden}, it will {@link showElementNow}, otherwise\n * {@link hideElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleShowElementNow = (element: Element) =>\n  isElementHidden(element) ? showElementNow(element) : hideElementNow(element);\n\n/**\n * Like {@link toggleShowElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleShowElement = (element: Element, delay = 0) =>\n  isElementHidden(element)\n    ? showElement(element, delay)\n    : hideElement(element, delay);\n\n/**\n * Returns true if the element's class list contains `lisn-hide`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementHidden = (element: Element) =>\n  hasClass(element, MC.PREFIX_HIDE);\n\n/**\n * Returns true if the element's class list contains `lisn-undisplay`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementUndisplayed = (element: Element) =>\n  hasClass(element, MC.PREFIX_UNDISPLAY);\n\n/**\n * Returns true if the element's class list contains the given class.\n *\n * @category CSS: Altering (optimized)\n */\nexport const hasClass = (el: Element, className: string) =>\n  MH.classList(el).contains(className);\n\n/**\n * Adds the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const addClassesNow = (el: Element, ...classNames: string[]) =>\n  MH.classList(el).add(...classNames);\n\n/**\n * Like {@link addClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const addClasses = (el: Element, ...classNames: string[]) =>\n  waitForMutateTime().then(() => addClassesNow(el, ...classNames));\n\n/**\n * Removes the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const removeClassesNow = (el: Element, ...classNames: string[]) =>\n  MH.classList(el).remove(...classNames);\n\n/**\n * Like {@link removeClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const removeClasses = (el: Element, ...classNames: string[]) =>\n  waitForMutateTime().then(() => removeClassesNow(el, ...classNames));\n\n/**\n * Toggles the given class on the element.\n *\n * @param {} force See {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle | DOMTokenList:toggle}\n *\n * @category CSS: Altering\n */\nexport const toggleClassNow = (\n  el: Element,\n  className: string,\n  force?: boolean,\n) => MH.classList(el).toggle(className, force);\n\n/**\n * Like {@link toggleClassNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleClass = (el: Element, className: string, force?: boolean) =>\n  waitForMutateTime().then(() => toggleClassNow(el, className, force));\n\n// For *Data: to avoid unnecessary type checking that ensures element is\n// HTMLElement or SVGElement, use getAttribute instead of dataset.\n\n/**\n * Returns the value of the given data attribute. The name of the attribute\n * must _not_ start with `data`. It can be in either camelCase or kebab-case,\n * it is converted as needed.\n *\n * @category CSS: Altering (optimized)\n */\nexport const getData = (el: Element, name: string) =>\n  MH.getAttr(el, MH.prefixData(name));\n\n/**\n * Returns the value of the given data attribute as a boolean. Its value is\n * expected to be either blank or \"true\" (which result in `true`), or \"false\"\n * (which results in `false`).\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering (optimized)\n */\nexport const getBooleanData = (el: Element, name: string) => {\n  const value = getData(el, name);\n  return value !== null && value !== \"false\";\n};\n\n/**\n * @ignore\n * @deprecated\n */\nexport const getBoolData = getBooleanData;\n\n/**\n * Sets the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const setDataNow = (el: Element, name: string, value: string) =>\n  MH.setAttr(el, MH.prefixData(name), value);\n\n/**\n * Like {@link setDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const setData = (el: Element, name: string, value: string) =>\n  waitForMutateTime().then(() => setDataNow(el, name, value));\n\n/**\n * Sets the given data attribute with value \"true\" (default) or \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const setBooleanDataNow = (el: Element, name: string, value = true) =>\n  MH.setAttr(el, MH.prefixData(name), value + \"\");\n\n/**\n * @ignore\n * @deprecated\n */\nexport const setBoolDataNow = setBooleanDataNow;\n\n/**\n * Like {@link setBooleanDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const setBooleanData = (el: Element, name: string, value = true) =>\n  waitForMutateTime().then(() => setBooleanDataNow(el, name, value));\n\n/**\n * @ignore\n * @deprecated\n */\nexport const setBoolData = setBooleanData;\n\n/**\n * Sets the given data attribute with value \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const unsetBooleanDataNow = (el: Element, name: string) =>\n  MH.unsetAttr(el, MH.prefixData(name));\n\n/**\n * @ignore\n * @deprecated\n */\nexport const unsetBoolDataNow = unsetBooleanDataNow;\n\n/**\n * Like {@link unsetBooleanDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const unsetBooleanData = (el: Element, name: string) =>\n  waitForMutateTime().then(() => unsetBooleanDataNow(el, name));\n\n/**\n * @ignore\n * @deprecated\n */\nexport const unsetBoolData = unsetBooleanData;\n\n/**\n * Deletes the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const delDataNow = (el: Element, name: string) =>\n  MH.delAttr(el, MH.prefixData(name));\n\n/**\n * Like {@link delDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const delData = (el: Element, name: string) =>\n  waitForMutateTime().then(() => delDataNow(el, name));\n\n/**\n * Returns the value of the given property from the computed style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getComputedStylePropNow = (element: Element, prop: string) =>\n  getComputedStyle(element).getPropertyValue(prop);\n\n/**\n * Like {@link getComputedStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getComputedStyleProp = (element: Element, prop: string) =>\n  waitForMeasureTime().then(() => getComputedStylePropNow(element, prop));\n\n/**\n * Returns the value of the given property from the inline style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.getPropertyValue(prop);\n\n/**\n * Like {@link getStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getStyleProp = (element: Element, prop: string) =>\n  waitForMeasureTime().then(() => getStylePropNow(element, prop));\n\n/**\n * Sets the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const setStylePropNow = (\n  element: Element,\n  prop: string,\n  value: string,\n) => (element as DOMElement).style?.setProperty(prop, value);\n\n/**\n * Like {@link setStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const setStyleProp = (element: Element, prop: string, value: string) =>\n  waitForMutateTime().then(() => setStylePropNow(element, prop, value));\n\n/**\n * Deletes the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const delStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.removeProperty(prop);\n\n/**\n * Like {@link delStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const delStyleProp = (element: Element, prop: string) =>\n  waitForMutateTime().then(() => delStylePropNow(element, prop));\n\n/**\n * Returns the flex direction of the given element **if it has a flex layout**.\n *\n * @returns {} `null` if the element does not have a flex layout.\n */\nexport const getFlexDirection = async (\n  element: Element,\n): Promise<FlexDirection | null> => {\n  const displayStyle = await getComputedStyleProp(element, \"display\");\n  if (!displayStyle.includes(\"flex\")) {\n    return null;\n  }\n\n  return (await getComputedStyleProp(\n    element,\n    \"flex-direction\",\n  )) as FlexDirection;\n};\n\n/**\n * Returns the flex direction of the given element's parent **if it has a flex\n * layout**.\n *\n * @returns {} `null` if the element's parent does not have a flex layout.\n */\nexport const getParentFlexDirection = async (\n  element: Element,\n): Promise<FlexDirection | null> => {\n  const parent = MH.parentOf(element);\n  return parent ? getFlexDirection(parent) : null;\n};\n\n/**\n * Returns true if the given element has a flex layout. If direction is given,\n * then it also needs to match.\n */\nexport const isFlex = async (element: Element, direction?: FlexDirection) => {\n  const flexDirection = await getFlexDirection(element);\n\n  if (direction) {\n    return direction === flexDirection;\n  }\n\n  return flexDirection !== null;\n};\n\n/**\n * Returns true if the given element's parent has a flex layout. If direction is\n * given, then it also needs to match.\n */\nexport const isFlexChild = async (\n  element: Element,\n  direction?: FlexDirection,\n) => {\n  const parent = MH.parentOf(element);\n  return parent ? isFlex(parent, direction) : false;\n};\n\n/**\n * In milliseconds.\n *\n * @ignore\n * @internal\n */\nexport const getMaxTransitionDuration = async (element: Element) => {\n  const propVal = await getComputedStyleProp(element, \"transition-duration\");\n\n  return MH.max(\n    ...splitOn(propVal, \",\", true).map((strValue) => {\n      let duration = MH.parseFloat(strValue) || 0;\n\n      if (strValue === duration + \"s\") {\n        duration *= 1000;\n      }\n\n      return duration;\n    }),\n  );\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const disableInitialTransition = async (element: Element, delay = 0) => {\n  await addClasses(element, MC.PREFIX_TRANSITION_DISABLE);\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForSubsequentMutateTime();\n  removeClassesNow(element, MC.PREFIX_TRANSITION_DISABLE);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const setHasModal = () => setBooleanData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const delHasModal = () => delData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const copyStyle = async (\n  fromElement: Element,\n  toElement: Element,\n  includeComputedProps?: string[],\n) => {\n  if (!isDOMElement(fromElement) || !isDOMElement(toElement)) {\n    return;\n  }\n\n  await waitForMeasureTime();\n  const props: Record<string, string> = {};\n\n  if (includeComputedProps) {\n    for (const prop of includeComputedProps) {\n      props[prop] = getComputedStylePropNow(fromElement, prop);\n    }\n  }\n\n  const style = fromElement.style; // only inline styles\n  for (const prop in style) {\n    const value = style.getPropertyValue(prop);\n    if (value) {\n      props[prop] = value;\n    }\n  }\n\n  for (const prop in props) {\n    setStyleProp(toElement, prop, props[prop]);\n  }\n\n  addClasses(toElement, ...MH.classList(fromElement));\n};\n\n/**\n * If the props keys are in camelCase they are converted to kebab-case\n *\n * If a value is null or undefined, the property is deleted.\n *\n * @ignore\n * @internal\n */\nexport const setNumericStyleJsVars = async (\n  element: Element,\n  props: CssNumericProps,\n  options: {\n    _prefix?: string;\n    _units?: string;\n    _numDecimal?: number;\n    _transformFn?: (prop: string, currVal: number, newVal: number) => number;\n  } = {},\n) => {\n  if (!isDOMElement(element)) {\n    return;\n  }\n\n  const transformFn = options._transformFn;\n\n  const varPrefix = MH.prefixCssJsVar(options?._prefix || \"\");\n  for (const prop in props) {\n    const cssPropSuffix = camelToKebabCase(prop);\n    const varName = `${varPrefix}${cssPropSuffix}`;\n\n    let value: number | null;\n\n    if (!isValidNum(props[prop])) {\n      value = null;\n    } else {\n      value = props[prop];\n      const thisNumDecimal =\n        options?._numDecimal ?? (value > 0 && value < 1 ? 2 : 0);\n\n      if (transformFn) {\n        const currValue = MH.parseFloat(await getStyleProp(element, varName));\n\n        value = transformFn(prop, currValue || 0, value);\n      }\n\n      value = roundNumTo(value, thisNumDecimal);\n    }\n\n    if (value === null) {\n      delStyleProp(element, varName);\n    } else {\n      setStyleProp(element, varName, value + (options?._units || \"\"));\n    }\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\ntype CssNumericProps = Record<string, number | undefined | null>;\n\n// ----------------------------------------\n\ntype CSSTransition = {\n  _cancel: () => undefined;\n  _finish: () => undefined;\n  _isCancelled: () => boolean;\n};\n\nconst PREFIX_HAS_MODAL = MH.prefixName(\"has-modal\");\n\nconst scheduledCSSTransitions = MH.newWeakMap<\n  Element,\n  Record<string, CSSTransition>\n>();\n\nconst cancelCSSTransitions = (element: Element, ...toClasses: string[]) => {\n  const scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    return;\n  }\n\n  for (const toCls of toClasses) {\n    const scheduledTransition = scheduledTransitions[toCls];\n    if (scheduledTransition) {\n      scheduledTransition._cancel();\n    }\n  }\n};\n\nconst scheduleCSSTransition = (element: Element, toCls: string) => {\n  let scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    scheduledTransitions = {};\n    scheduledCSSTransitions.set(element, scheduledTransitions);\n  }\n\n  let isCancelled = false;\n  scheduledTransitions[toCls] = {\n    _cancel: () => {\n      isCancelled = true;\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _finish: () => {\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _isCancelled: () => {\n      return isCancelled;\n    },\n  };\n\n  return scheduledTransitions[toCls];\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Altering\n * These functions alter the DOM tree, but could lead to forced layout if not\n * scheduled using {@link waitForMutateTime}.\n *\n * @categoryDescription DOM: Altering (optimized)\n * These functions alter the DOM tree in an optimized way using\n * {@link waitForMutateTime} and so are asynchronous.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  hideElement,\n  hasClass,\n  addClassesNow,\n  getData,\n  setDataNow,\n  setBooleanData,\n} from \"@lisn/utils/css-alter\";\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { randId } from \"@lisn/utils/text\";\n\n/**\n * Wraps the element in the given wrapper, or a newly created element if not given.\n *\n * @param {} [options.wrapper]\n *              If it's an element, it is used as the wrapper. If it's a string\n *              tag name, then a new element with this tag is created as the\n *              wrapper. If not given, then `div` is used if the element to be\n *              wrapped has an block-display tag, or otherwise `span` (if the\n *              element to be wrapped has an inline tag name).\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n * @returns {} The wrapper element that was either passed in options or created.\n *\n * @category DOM: Altering\n */\nexport const wrapElementNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: wrapper,\n    });\n\n    ignoreMove(wrapper, {\n      to: MH.parentOf(element),\n    });\n  }\n\n  element.replaceWith(wrapper);\n  wrapper.append(element);\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapElementNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapElement = async (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => waitForMutateTime().then(() => wrapElementNow(element, options));\n\n/**\n * Wraps the element's children in the given wrapper, or a newly created element\n * if not given.\n *\n * @see {@link wrapElementNow}.\n *\n * @category DOM: Altering\n */\nexport const wrapChildrenNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n\n  moveChildrenNow(element, wrapper, { ignoreMove: true });\n  moveElementNow(wrapper, {\n    to: element,\n    ignoreMove: true,\n  });\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapChildrenNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapChildren = async (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => waitForMutateTime().then(() => wrapChildrenNow(element, options));\n\n/**\n * Replace an element with another one.\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const replaceElementNow = (\n  element: Element,\n  newElement: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    ignoreMove(\n      // remove element\n      element,\n      { from: MH.parentOf(element) },\n    );\n\n    ignoreMove(\n      // move newElement to element's current parent\n      newElement,\n      { from: MH.parentOf(newElement), to: MH.parentOf(element) },\n    );\n  }\n\n  element.replaceWith(newElement);\n};\n\n/**\n * Like {@link replaceElementNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const replaceElement = async (\n  element: Element,\n  newElement: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) =>\n  waitForMutateTime().then(() =>\n    replaceElementNow(element, newElement, options),\n  );\n\n/**\n * Replace an element with another one.\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const swapElementsNow = (\n  elementA: Element,\n  elementB: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  const temp = MH.createElement(\"div\");\n  replaceElementNow(elementA, temp, options);\n  replaceElementNow(elementB, elementA, options);\n  replaceElementNow(temp, elementB, options);\n};\n\n/**\n * Like {@link swapElementsNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const swapElements = async (\n  elementA: Element,\n  elementB: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) =>\n  waitForMutateTime().then(() => swapElementsNow(elementA, elementB, options));\n\n/**\n * Move an element's children to a new element\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the children (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveChildrenNow = (\n  oldParent: Element,\n  newParent: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    for (const child of MH.childrenOf(oldParent)) {\n      ignoreMove(child, {\n        from: oldParent,\n        to: newParent,\n      });\n    }\n  }\n\n  newParent.append(...MH.childrenOf(oldParent));\n};\n\n/**\n * Like {@link moveChildrenNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveChildren = async (\n  oldParent: Element,\n  newParent: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) =>\n  waitForMutateTime().then(() =>\n    moveChildrenNow(oldParent, newParent, options),\n  );\n\n/**\n * Moves an element to a new position.\n *\n * @param {} [options.to]         The new parent or sibling (depending on\n *                                `options.position`). If not given, the\n *                                element is removed from the DOM.\n * @param {} [options.position]   - append (default): append to `options.to`\n *                                - prepend: prepend to `options.to`\n *                                - before: insert before `options.to`\n *                                - after: insert after `options.to`\n * @param {} [options.ignoreMove] If true, the DOM watcher instances will\n *                                ignore the operation of moving the element\n *                                (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveElementNow = (\n  element: Element,\n  options?: {\n    to?: Element;\n    position?: \"append\" | \"prepend\" | \"before\" | \"after\";\n    ignoreMove?: boolean;\n  },\n) => {\n  let parentEl = options?.to || null;\n  const position = options?.position || \"append\";\n  if (position === \"before\" || position === \"after\") {\n    parentEl = MH.parentOf(options?.to);\n  }\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: parentEl,\n    });\n  }\n\n  if (options?.to) {\n    options.to[position](element);\n  } else {\n    MH.remove(element);\n  }\n};\n\n/**\n * Like {@link moveElementNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveElement = async (\n  element: Element,\n  options?: {\n    to?: Element;\n    position?: \"append\" | \"prepend\" | \"before\" | \"after\";\n    ignoreMove?: boolean;\n  },\n) => waitForMutateTime().then(() => moveElementNow(element, options));\n\n/**\n * It will {@link hideElement} and then remove it from the DOM.\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering (optimized)\n */\nexport const hideAndRemoveElement = async (\n  element: Element,\n  delay = 0,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  await hideElement(element, delay);\n  moveElementNow(element, options);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getOrAssignID = (element: Element, prefix = \"\") => {\n  let domID = element.id;\n  if (!domID) {\n    domID = `${prefix}-${randId()}`;\n    element.id = domID;\n  }\n\n  return domID;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const isAllowedToWrap = (element: Element) =>\n  settings.contentWrappingAllowed === true &&\n  getData(element, MC.PREFIX_NO_WRAP) === null;\n\n/**\n * @ignore\n * @internal\n */\nexport const getWrapper = (\n  element: Element,\n  options?: {\n    tagName?: keyof HTMLElementTagNameMap;\n    className?: string;\n  },\n) => {\n  const { tagName, className = MC.PREFIX_WRAPPER } = options ?? {};\n  const parent = MH.parentOf(element);\n  if (\n    MH.lengthOf(MH.childrenOf(parent)) === 1 &&\n    MH.isHTMLElement(parent) &&\n    (!tagName ||\n      MH.toLowerCase(MH.tagName(parent)) === MH.toLowerCase(tagName)) &&\n    (!className || hasClass(parent, className))\n  ) {\n    // Already wrapped\n    return parent;\n  }\n\n  return null; // don't check the element itself, only its parent\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getContentWrapper = (\n  element: Element,\n  options?: {\n    tagName?: keyof HTMLElementTagNameMap;\n    className?: string;\n  },\n) => {\n  const { tagName, className = MC.PREFIX_WRAPPER } = options ?? {};\n  const firstChild = MH.childrenOf(element)[0];\n  if (\n    MH.lengthOf(MH.childrenOf(element)) === 1 &&\n    MH.isHTMLElement(firstChild) &&\n    (!tagName ||\n      MH.toLowerCase(MH.tagName(firstChild)) === MH.toLowerCase(tagName)) &&\n    (!className || hasClass(firstChild, className))\n  ) {\n    // Already wrapped\n    return firstChild;\n  }\n\n  return null;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrapNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options?: O,\n) => _tryWrapNow(element, options);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrap = <O extends ContentWrappingOptions>(\n  element: Element,\n  options?: O,\n) => _tryWrap(element, options);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrapContentNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options?: O,\n) => _tryWrapNow(element, options, true);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrapContent = <O extends ContentWrappingOptions>(\n  element: Element,\n  options?: O,\n) => _tryWrap(element, options, true);\n\n/**\n * @ignore\n * @internal\n */\nexport const cloneElement = <E extends Element>(element: E) => {\n  const clone = element.cloneNode(true) as E;\n  setBooleanData(clone, MH.prefixName(\"clone\"));\n  return clone;\n};\n\n/**\n * Creates a dummy hidden clone that's got animation and transitions disabled\n * and absolute position, wrapped in a wrapper (of size 0) and inserts it just\n * before the `insertBefore` element (or if not given, the original element),\n * so that the hidden clone overlaps the actual element's regular\n * (pre-transformed) position.\n *\n * It clears the ID of the clone.\n *\n * Returns the clone.\n *\n * @ignore\n * @internal\n */\nexport const insertGhostCloneNow = <E extends Element>(\n  element: E,\n  insertBefore: Element | null = null,\n) => {\n  const clone = cloneElement(element);\n  clone.id = \"\";\n\n  addClassesNow(\n    clone,\n    MC.PREFIX_GHOST,\n    MC.PREFIX_TRANSITION_DISABLE,\n    MC.PREFIX_ANIMATE_DISABLE,\n  );\n\n  const wrapper = _tryWrapNow(clone, { required: true });\n\n  moveElementNow(wrapper, {\n    to: insertBefore || element,\n    position: \"before\",\n    ignoreMove: true,\n  });\n\n  return { _wrapper: wrapper, _clone: clone };\n};\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const insertGhostClone = <E extends Element>(\n  element: E,\n  insertBefore: Element | null = null,\n) => waitForMutateTime().then(() => insertGhostCloneNow(element, insertBefore));\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const ignoreMove = (\n  target: Element,\n  options: { from?: Element | null; to?: Element | null },\n) =>\n  recordsToSkipOnce.set(target, {\n    from: options.from || null,\n    to: options.to || null,\n  });\n\n/**\n * @ignore\n * @internal\n */\nexport const getIgnoreMove = (\n  target: Element,\n): { from: Element | null; to: Element | null } | null =>\n  recordsToSkipOnce.get(target) || null;\n\n/**\n * @ignore\n * @internal\n */\nexport const clearIgnoreMove = (target: Element) => {\n  // We should not clear the entry the first time the operation is observed\n  // (when we return true here), because there may be multiple DOMWatcher\n  // instances that will observe it and need to query it. Instead do it shortly.\n  MH.setTimer(() => {\n    MH.deleteKey(recordsToSkipOnce, target);\n  }, 100);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const insertArrow = (\n  target: Element,\n  direction: \"up\" | \"down\" | \"left\" | \"right\",\n  position: \"prepend\" | \"append\" | \"before\" | \"after\" = \"append\",\n  tag = \"span\",\n) => {\n  const arrow = MH.createElement(tag);\n  addClassesNow(arrow, MH.prefixName(MC.S_ARROW));\n  setDataNow(arrow, MH.prefixName(\"direction\"), direction);\n  moveElement(arrow, { to: target, position, ignoreMove: true });\n  return arrow;\n};\n\n// ----------------------------------------\n\ntype ContentWrappingOptions = {\n  tagName?: keyof HTMLElementTagNameMap;\n  className?: string;\n  ignoreMove?: boolean; // default is true here\n  required?: boolean; // if true, will ignore contentWrappingAllowed and data-lisn-no-wrap\n  requiredBy?: string; // for logging purposes\n};\n\nconst recordsToSkipOnce = MH.newMap<\n  /* target being moved */ Element,\n  { from: Element | null; to: Element | null }\n>();\n\nconst createWrapperFor = (\n  element: Element,\n  wrapper: HTMLElement | keyof HTMLElementTagNameMap | undefined,\n) => {\n  if (MH.isElement(wrapper)) {\n    return wrapper;\n  }\n\n  let tag = wrapper;\n  if (!tag) {\n    if (isInlineTag(MH.tagName(element))) {\n      tag = \"span\";\n    } else {\n      tag = \"div\";\n    }\n  }\n\n  return MH.createElement(tag);\n};\n\nconst _tryWrapNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options: O | undefined,\n  wrapContent = false, // if true, wrap its children, otherwise given element\n) => {\n  const {\n    tagName,\n    className = MC.PREFIX_WRAPPER,\n    ignoreMove = true,\n    required = false,\n    requiredBy = \"\",\n  } = options ?? {};\n\n  const getWrapperFn = wrapContent ? getContentWrapper : getWrapper;\n  const wrapFn = wrapContent ? wrapChildrenNow : wrapElementNow;\n  const allowedToWrap = isAllowedToWrap(element);\n\n  let wrapper = getWrapperFn(element, options);\n  if (!wrapper && (required || allowedToWrap)) {\n    wrapper = wrapFn(element, { wrapper: tagName, ignoreMove });\n    addClassesNow(wrapper, className);\n    if (isInlineTag(MH.tagName(wrapper))) {\n      addClassesNow(wrapper, MC.PREFIX_INLINE_WRAPPER);\n    }\n\n    if (!allowedToWrap && requiredBy) {\n      logWarn(\n        `content wrapping is disabled for element but wrapping is required by ${requiredBy}`,\n      );\n    }\n  }\n\n  return wrapper as O extends { required: true }\n    ? HTMLElement\n    : HTMLElement | null;\n};\n\nconst _tryWrap = <O extends ContentWrappingOptions>(\n  element: Element,\n  options: O | undefined,\n  wrapContent = false, // if true, wrap its children, otherwise given element\n) => waitForMutateTime().then(() => _tryWrapNow(element, options, wrapContent));\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { NonNullableReturnType } from \"@lisn/globals/types\";\n\n/**\n * Returns a Promise that is resolved when the given `checkFn` function returns\n * a value other than `null` or `undefined`.\n *\n * The Promise is resolved with `checkFn`'s return value.\n *\n * The function is called initially, and then every time there are changes to\n * the DOM children. Uses\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * @param {} timeout If given, then if no such element is present after this\n *                    many milliseconds, the promise will resolve to `null`.\n *\n * @category DOM: Events\n */\nexport const waitForElement = <\n  F extends () => unknown,\n  T extends number | undefined = undefined,\n>(\n  checkFn: F,\n  timeout?: number,\n) =>\n  MH.newPromise<\n    T extends undefined\n      ? NonNullableReturnType<F>\n      : null | NonNullableReturnType<F>\n  >((resolve) => {\n    const callFn = () => {\n      const result = checkFn();\n      if (!MH.isNullish(result)) {\n        resolve(result as NonNullableReturnType<F>);\n        return true; // done\n      }\n      return false;\n    };\n\n    if (callFn()) {\n      return; // resolved already\n    }\n\n    if (!MH.isNullish(timeout)) {\n      MH.setTimer(() => {\n        resolve(\n          null as T extends undefined\n            ? NonNullableReturnType<F>\n            : null | NonNullableReturnType<F>,\n        );\n        observer.disconnect();\n      }, timeout);\n    }\n\n    const observer = MH.newMutationObserver(() => {\n      if (callFn()) {\n        observer.disconnect();\n      }\n    });\n\n    observer.observe(MH.getDocElement(), {\n      childList: true,\n      subtree: true,\n    });\n  });\n\n/**\n * Returns a Promise that is resolved when the given `checkFn` function returns\n * a value other than `null` or `undefined` or the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * becomes \"interactive\".\n *\n * It always calls the given `checkFn` first before examining the `readyState`.\n *\n * If the `readyState` became interactive before the element was found, the\n * Promise resolves to `null`. Otherwise the Promise is resolved with `checkFn`'s\n * return value.\n *\n * The function is called initially, and then every time there are changes to\n * the DOM children. Uses\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * @category DOM: Events\n */\nexport const waitForElementOrInteractive = <F extends () => unknown>(\n  checkFn: F,\n) =>\n  MH.newPromise<NonNullableReturnType<F> | null>((resolve) => {\n    let isInteractive = false;\n    // Check element first, then readyState. The callback to waitForElement is\n    // run synchronously first time, so isInteractive will be false and checkFn\n    // will run.\n    waitForElement(() => isInteractive || checkFn()).then((res) => {\n      if (!isInteractive) {\n        resolve(res as NonNullableReturnType<F>);\n      } // else already resolved to null\n    });\n\n    waitForInteractive().then(() => {\n      isInteractive = true;\n      resolve(null);\n    });\n  });\n\n/**\n * Returns a Promise that is resolved when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"interactive\" (or if it's already \"interactive\" or \"complete\", the\n * Promise is fulfilled immediately).\n *\n * @category DOM: Events\n */\nexport const waitForInteractive = () =>\n  MH.newPromise<void>((resolve) => {\n    const readyState = MH.getReadyState();\n    if (readyState === INTERACTIVE || readyState === COMPLETE) {\n      resolve();\n      return;\n    }\n\n    MH.getDoc().addEventListener(\"DOMContentLoaded\", () => resolve());\n  });\n\n/**\n * Returns a Promise that is resolved when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"complete\" (or if it's already \"complete\", the Promise is fulfilled\n * immediately).\n *\n * @category DOM: Events\n */\nexport const waitForComplete = () =>\n  MH.newPromise<void>((resolve) => {\n    if (MH.getReadyState() === COMPLETE) {\n      resolve();\n      return;\n    }\n\n    MH.getDoc().addEventListener(\"readystatechange\", () => {\n      if (MH.getReadyState() === COMPLETE) {\n        resolve();\n      }\n    });\n  });\n\n/**\n * Returns a Promise that is resolved either when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"complete\" or the `readyState` is \"interactive\" and at least\n * {@link settings.pageLoadTimeout} milliseconds have passed (if > 0) since it\n * became \"interactive\".\n *\n * @category DOM: Events\n */\nexport const waitForPageReady = () =>\n  MH.newPromise<void>((resolve) => {\n    if (pageIsReady) {\n      resolve();\n      return;\n    }\n\n    return waitForInteractive().then(() => {\n      // Setup a listener for the complete state but wait at most\n      // <pageLoadTimeout> (if specified)\n      let timer: ReturnType<typeof setTimeout> | null = null;\n\n      const dispatchReady = () => {\n        pageIsReady = true;\n        if (timer) {\n          MH.clearTimer(timer);\n          timer = null;\n        }\n        resolve();\n      };\n\n      if (settings.pageLoadTimeout > 0) {\n        timer = MH.setTimer(() => {\n          dispatchReady();\n        }, settings.pageLoadTimeout);\n      }\n\n      waitForComplete().then(dispatchReady);\n    });\n  });\n\n/**\n * Returns true if the page is \"ready\". See {@link waitForPageReady}.\n *\n * @category DOM: Events\n */\nexport const isPageReady = () => pageIsReady;\n\n// --------------------\n\nconst COMPLETE = \"complete\";\nconst INTERACTIVE = \"interactive\";\n\nlet pageIsReady = false;\n\nif (!MH.hasDOM()) {\n  pageIsReady = true;\n} else {\n  waitForPageReady(); // ensure pageIsReady is set even if waitForPageReady is not called\n}\n","/**\n * @module Modules/XMap\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { MapBase } from \"@lisn/globals/types\";\n\nexport type DefaultValueGetter<K, V> = (key: K) => V;\nexport type IteratorCallback<K, V> = (\n  value: V,\n  key: K,\n  map: XMap<K, V>,\n) => void;\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXMap = <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  new XMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXMapGetter =\n  <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXMap(getDefaultV);\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMap = <K extends WeakKey, V>(\n  getDefaultV: DefaultValueGetter<K, V>,\n) => new XWeakMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXWeakMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMapGetter =\n  <K extends WeakKey, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXWeakMap(getDefaultV);\n\nexport abstract class XMapBase<K, V> {\n  /**\n   * Returns the value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly get: (key: K) => V | undefined;\n\n  /**\n   * Like {@link get} except that if the key is not found in the map, then it\n   * will set and return a default value by calling `getDefaultV` passed to the\n   * constructor.\n   */\n  readonly sGet: (key: K) => V;\n\n  /**\n   * Sets a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly set: (key: K, value: V) => void;\n\n  /**\n   * Deletes a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly delete: (key: K) => void;\n\n  /**\n   * Deletes empty keys in the {@link XMap} or {@link XWeakMap} starting at the\n   * final nested path and checking the level above after deletion.\n   *\n   * A key is considered empty if it's value is undefined or it's an empty Map,\n   * Set, Array, etc (anything with size or length property equal to 0).\n   */\n  readonly prune: (sk: K, ...rest: unknown[]) => void;\n\n  /**\n   * Returns true if the {@link XMap} or {@link XWeakMap} contains the given key.\n   */\n  readonly has: (key: K) => boolean;\n\n  protected constructor(\n    root: MapBase<K, V>,\n    getDefaultV: DefaultValueGetter<K, V>,\n  ) {\n    this.get = (key) => root.get(key);\n    this.set = (key, value) => root.set(key, value);\n    this.delete = (key) => MH.deleteKey(root, key);\n    this.has = (key) => root.has(key);\n\n    this.sGet = (key) => {\n      let result = root.get(key);\n      if (result === undefined) {\n        result = getDefaultV(key);\n        root.set(key, result);\n      }\n      return result;\n    };\n\n    this.prune = (sk, ...rest) => {\n      const value = root.get(sk);\n      if (value instanceof XMapBase && MH.lengthOf(rest)) {\n        value.prune(rest[0], ...rest.slice(1));\n      }\n\n      if (\n        value === undefined ||\n        (MH.isIterableObject(value) &&\n          !(\n            (\"size\" in value && value.size) ||\n            (\"length\" in value && value.length)\n          ))\n      ) {\n        MH.deleteKey(root, sk);\n      }\n    };\n  }\n}\n\n/**\n * {@link XMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map | Map},\n * except that it supports automatically creating missing entries with\n * {@link sGet} according to a default value getter function.\n *\n * @typeParam K  The type of the keys the map holds.\n * @typeParam V  The type of the values the map holds.\n */\nexport class XMap<K, V> extends XMapBase<K, V> implements Iterable<[K, V]> {\n  /**\n   * Returns the number of entries in the {@link XMap}.\n   */\n  readonly size!: number;\n\n  /**\n   * Deletes all entries in the {@link XMap}.\n   */\n  readonly clear: () => void;\n\n  /**\n   * Returns an iterator over the {@link XMap} entries.\n   */\n  readonly entries: () => MapIterator<[K, V]>;\n\n  /**\n   * Returns an iterator over the {@link XMap} keys.\n   */\n  readonly keys: () => MapIterator<K>;\n\n  /**\n   * Returns an iterator over the {@link XMap} values.\n   */\n  readonly values: () => MapIterator<V>;\n\n  readonly [Symbol.iterator]!: () => IterableIterator<[K, V]>;\n\n  /**\n   * Returns a function that when called returns a new {@link XMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XMap}s.\n   */\n  static readonly newXMapGetter = newXMapGetter;\n\n  /**\n   * @param {} getDefaultV  This function is called each time\n   *                        {@link sGet} is called with a non-existent\n   *                        key and must return a value that is then set for\n   *                        that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newMap<K, V>();\n    super(root, getDefaultV);\n\n    MH.defineProperty(this, \"size\", { get: () => root.size });\n    this.clear = () => root.clear();\n    this.entries = () => root.entries();\n    this.keys = () => root.keys();\n    this.values = () => root.values();\n    this[MC.SYMBOL.iterator] = () => root[MC.SYMBOL.iterator]();\n  }\n}\n\n/**\n * {@link XWeakMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap | WeakMap},\n * except that it supports automatically creating missing entries with\n * with {@link sGet} according to a default value getter function.\n *\n * @typeParam K  The type of the keys the map holds.\n * @typeParam V  The type of the values the map holds.\n */\nexport class XWeakMap<K extends WeakKey, V> extends XMapBase<K, V> {\n  /**\n   * Returns a function that when called returns a new {@link XWeakMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XWeakMap}s.\n   */\n  static readonly newXWeakMapGetter = newXWeakMapGetter;\n\n  /**\n   * @param {} getDefaultV  This function is called each time\n   *                        {@link sGet} is called with a non-existent\n   *                        key and must return a value that is then set for\n   *                        that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newWeakMap<K, V>();\n    super(root, getDefaultV);\n  }\n}\n","/**\n * @module Watchers/DOMWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  MutationCategory,\n  CommaSeparatedStr,\n  AtLeastOne,\n} from \"@lisn/globals/types\";\n\nimport { DOM_CATEGORIES_SPACE } from \"@lisn/utils/dom\";\nimport {\n  getIgnoreMove,\n  clearIgnoreMove,\n  ignoreMove,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link DOMWatcher} listens for changes do the DOM tree. It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * It manages registered callbacks globally and reuses MutationObservers for\n * more efficient performance.\n *\n * Each instance of DOMWatcher manages up to two MutationObservers: one\n * for `childList` changes and one for attribute changes, and it disconnects\n * them when there are no active callbacks for the relevant type.\n *\n * `characterData` and changes to base\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Node | Node}s\n * (non-{@link https://developer.mozilla.org/en-US/docs/Web/API/Element | Element})\n * are not supported.\n */\nexport class DOMWatcher {\n  /**\n   * Call the given handler whenever there's a matching mutation within this\n   * DOMWatcher's {@link DOMWatcherConfig.root | root}.\n   *\n   * If {@link OnMutationOptions.skipInitial | options.skipInitial} is `false`\n   * (default), _and_ {@link OnMutationOptions.selector | options.selector} is\n   * given, _and_ {@link OnMutationOptions.categories | options.categories}\n   * includes \"added\", the handler is also called (almost) immediately with all\n   * existing elements matching the selector under this DOMWatcher's\n   * {@link DOMWatcherConfig.root | root}.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times, even if\n   * the options differ. If the handler has already been added, it is removed\n   * and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are not valid.\n   */\n  readonly onMutation: (\n    handler: OnMutationHandler,\n    options?: OnMutationOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offMutation: (handler: OnMutationHandler) => void;\n\n  /**\n   * Ignore an upcoming moving/adding/removing of an element.\n   *\n   * The operation must complete within the next cycle, by the time\n   * MutationObserver calls us.\n   *\n   * Use this to prevent this instance of DOMWatcher from calling any callbacks\n   * that listen for relevant changes as a result of this operation, to prevent\n   * loops for example.\n   *\n   * **IMPORTANT:**\n   *\n   * Ignoring moving of an element from a parent _inside_ this DOMWatcher's\n   * root to another parent that's _outside_ the root, will work as expected,\n   * even though the \"adding to the new parent\" mutation will not be observed.\n   * This is because the element's current parent at the time of the mutation\n   * callback can be examined.\n   *\n   * However if you want to ignore moving of an element _from a parent outside\n   * this DOMWatcher's root_ you need to specify from: null since the \"removal\n   * from the old parent\" mutation would not be observed and there's no way to\n   * examine it's previous parent at the time the \"adding to the new parent\"\n   * mutation is observed.\n   *\n   * For this reason, setting `options.from` to be an element that's not under\n   * the root is internally treated the same as `options.from: null`.\n   */\n  readonly ignoreMove: (target: Element, options: MoveOptions) => void;\n\n  /**\n   * Creates a new instance of DOMWatcher with the given\n   * {@link DOMWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: DOMWatcherConfig = {}) {\n    return new DOMWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of DOMWatcher with the given\n   * {@link DOMWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: DOMWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    const root = myConfig._root === MH.getBody() ? null : myConfig._root;\n    let instance = instances.get(root)?.get(configStrKey);\n    if (!instance) {\n      instance = new DOMWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: DOMWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"DOMWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"DOMWatcher\", logAtCreation: config })\n      : null;\n\n    const buffer = newXMap<Element, MutationOperationInternal>((t) => ({\n      _target: t,\n      _categoryBitmask: 0,\n      _attributes: MH.newSet(),\n      _addedTo: null,\n      _removedFrom: null,\n    }));\n\n    const allCallbacks = MH.newMap<\n      OnMutationHandler,\n      {\n        _callback: OnMutationCallback;\n        _options: OnMutationOptionsInternal;\n      }\n    >();\n\n    // ----------\n\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const mutationHandler = (records: MutationRecord[]) => {\n      debug: logger?.debug9(`Got ${records.length} new records`, records);\n\n      for (const record of records) {\n        const target = MH.targetOf(record);\n        const recType = record.type;\n\n        /* istanbul ignore next */\n        if (!MH.isElement(target)) {\n          continue;\n        }\n\n        if (recType === MC.S_CHILD_LIST) {\n          for (const child of record.addedNodes) {\n            if (MH.isElement(child)) {\n              const operation = buffer.sGet(child);\n              operation._addedTo = target;\n              operation._categoryBitmask |= ADDED_BIT;\n            }\n          }\n\n          for (const child of record.removedNodes) {\n            if (MH.isElement(child)) {\n              const operation = buffer.sGet(child);\n              operation._removedFrom = target;\n              operation._categoryBitmask |= REMOVED_BIT;\n            }\n          }\n\n          //\n        } else if (recType === MC.S_ATTRIBUTES && record.attributeName) {\n          const operation = buffer.sGet(target);\n          operation._attributes.add(record.attributeName);\n          operation._categoryBitmask |= ATTRIBUTE_BIT;\n        }\n      }\n\n      // Schedule flushing of the buffer asynchronously so that we can combine\n      // the records from the two MutationObservers.\n      if (!timer && MH.sizeOf(buffer)) {\n        timer = MH.setTimer(() => {\n          debug: logger?.debug9(`Processing ${buffer.size} operations`);\n          for (const operation of buffer.values()) {\n            if (shouldSkipOperation(operation)) {\n              debug: logger?.debug10(\"Skipping operation\", operation);\n            } else {\n              processOperation(operation);\n            }\n          }\n\n          buffer.clear();\n          timer = null;\n        }, 0);\n      }\n    };\n\n    const observers: Record<MutationType, MyObserver> = {\n      [MC.S_CHILD_LIST]: {\n        _observer: MH.newMutationObserver(mutationHandler),\n        _isActive: false,\n      },\n      [MC.S_ATTRIBUTES]: {\n        _observer: MH.newMutationObserver(mutationHandler),\n        _isActive: false,\n      },\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnMutationHandler,\n      options: OnMutationOptionsInternal,\n    ): OnMutationCallback => {\n      MH.remove(allCallbacks.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => deleteHandler(handler));\n\n      allCallbacks.set(handler, { _callback: callback, _options: options });\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnMutation = async (\n      handler: OnMutationHandler,\n      userOptions: OnMutationOptions | undefined,\n    ) => {\n      const options = getOptions(userOptions || {});\n      const callback = createCallback(handler, options);\n\n      let root = config._root || MH.getBody();\n      if (!root) {\n        root = await waitForElement(MH.getBody);\n      } else {\n        // So that the call is always async\n        await null;\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      if (options._categoryBitmask & (ADDED_BIT | REMOVED_BIT)) {\n        activateObserver(root, MC.S_CHILD_LIST);\n      }\n\n      if (options._categoryBitmask & ATTRIBUTE_BIT) {\n        activateObserver(root, MC.S_ATTRIBUTES);\n      }\n\n      if (\n        userOptions?.skipInitial ||\n        !options._selector ||\n        !(options._categoryBitmask & ADDED_BIT)\n      ) {\n        return;\n      }\n\n      // As some of the matching elements that currently exist in the root may\n      // have just been added and therefore in the MutationObserver's queue, to\n      // avoid calling the handler with those entries twice, we empty its queue\n      // now and process it (which would also invoke the newly added callback).\n      // Then we skip any elements returned in querySelectorAll that were in\n      // the queue.\n\n      const childQueue = observers[MC.S_CHILD_LIST]._observer.takeRecords();\n      mutationHandler(childQueue);\n\n      for (const element of [\n        ...MH.querySelectorAll(root, options._selector),\n        ...(root.matches(options._selector) ? [root] : []),\n      ]) {\n        const initOperation: MutationOperationInternal = {\n          _target: element,\n          _categoryBitmask: ADDED_BIT,\n          _attributes: MH.newSet(),\n          _addedTo: MH.parentOf(element),\n          _removedFrom: null,\n        };\n\n        const bufferedOperation = buffer.get(element);\n        const diffOperation = getDiffOperation(\n          initOperation,\n          bufferedOperation,\n        );\n\n        if (diffOperation) {\n          if (shouldSkipOperation(diffOperation)) {\n            debug: logger?.debug10(\"Skipping operation\", diffOperation);\n          } else {\n            debug: logger?.debug5(\"Calling initially with\", diffOperation);\n            await invokeCallback(callback, diffOperation);\n          }\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (handler: OnMutationHandler) => {\n      MH.deleteKey(allCallbacks, handler);\n\n      let activeCategories = 0;\n      for (const entry of allCallbacks.values()) {\n        activeCategories |= entry._options._categoryBitmask;\n      }\n\n      if (!(activeCategories & (ADDED_BIT | REMOVED_BIT))) {\n        deactivateObserver(MC.S_CHILD_LIST);\n      }\n\n      if (!(activeCategories & ATTRIBUTE_BIT)) {\n        deactivateObserver(MC.S_ATTRIBUTES);\n      }\n    };\n\n    // ----------\n\n    const processOperation = (operation: MutationOperationInternal) => {\n      debug: logger?.debug10(\"Processing operation\", operation);\n\n      for (const entry of allCallbacks.values()) {\n        const categoryBitmask = entry._options._categoryBitmask;\n        const target = entry._options._target;\n        const selector = entry._options._selector;\n\n        if (!(operation._categoryBitmask & categoryBitmask)) {\n          debug: logger?.debug10(`Category does not match: ${categoryBitmask}`);\n          continue;\n        }\n\n        const currentTargets = [];\n        if (target) {\n          if (!operation._target.contains(target)) {\n            debug: logger?.debug10(\"Target does not match\", target);\n            continue;\n          }\n\n          currentTargets.push(target);\n        }\n\n        if (selector) {\n          const matches = [...MH.querySelectorAll(operation._target, selector)];\n\n          if (operation._target.matches(selector)) {\n            matches.push(operation._target);\n          }\n\n          if (!MH.lengthOf(matches)) {\n            debug: logger?.debug10(`Selector does not match: ${selector}`);\n            continue;\n          }\n\n          currentTargets.push(...matches);\n        }\n\n        invokeCallback(entry._callback, operation, currentTargets);\n      }\n    };\n\n    // ----------\n\n    const activateObserver = (root: Element, mutationType: MutationType) => {\n      if (!observers[mutationType]._isActive) {\n        debug: logger?.debug3(\n          `Activating mutation observer for '${mutationType}'`,\n        );\n        observers[mutationType]._observer.observe(root, {\n          [mutationType]: true,\n          subtree: config._subtree,\n        });\n        observers[mutationType]._isActive = true;\n      }\n    };\n\n    // ----------\n\n    const deactivateObserver = (mutationType: MutationType) => {\n      if (observers[mutationType]._isActive) {\n        debug: logger?.debug3(\n          `Disconnecting mutation observer for '${mutationType}'`,\n        );\n        observers[mutationType]._observer.disconnect();\n        observers[mutationType]._isActive = false;\n      }\n    };\n\n    // ----------\n\n    const shouldSkipOperation = (\n      operation: MutationOperationInternal,\n    ): boolean => {\n      const target = operation._target;\n      const requestToSkip = getIgnoreMove(target);\n      if (!requestToSkip) {\n        return false;\n      }\n\n      const removedFrom = operation._removedFrom;\n      const addedTo = MH.parentOf(target);\n      const requestFrom = requestToSkip.from;\n      const requestTo = requestToSkip.to;\n\n      const root = config._root || MH.getBody();\n      // If \"from\" is currently outside our root, we may not have seen a\n      // removal operation.\n      if (\n        (removedFrom === requestFrom || !root.contains(requestFrom)) &&\n        addedTo === requestTo\n      ) {\n        clearIgnoreMove(target);\n        return true;\n      }\n\n      return false;\n    };\n\n    // ----------\n\n    this.ignoreMove = ignoreMove;\n\n    // ----------\n\n    this.onMutation = setupOnMutation;\n\n    // ----------\n\n    this.offMutation = (handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type DOMWatcherConfig = {\n  /**\n   * The root element to observe for changes.\n   *\n   * It cannot be overridden on a per-callback basis.\n   *\n   * @defaultValue document.body\n   */\n  root?: Element | null;\n\n  /**\n   * Whether to observe root's subtree for changes or just direct descendants.\n   *\n   * It cannot be overridden on a per-callback basis.\n   *\n   * @defaultValue true\n   */\n  subtree?: boolean;\n};\n\n/**\n * @interface\n */\nexport type OnMutationOptions = {\n  /**\n   * If this is given, then the handler would only be called for operations\n   * where the target is _either_ the given element or an ancestor of it, i.e.\n   * it {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/contains | Node:contains} it.\n   *\n   * @defaultValue undefined\n   */\n  target?: Element;\n\n  /**\n   * If this is given, then the handler would only be called for operations\n   * where the target matches the given selector _or contains an element\n   * matching the given selector_.\n   *\n   * @defaultValue undefined\n   */\n  selector?: string;\n\n  /**\n   * Specifies a list of {@link MutationCategory}s to target for.\n   *\n   * If not given, then the handler is called for any of the supported\n   * mutations.\n   *\n   * It can be a comma-separated list of category names or an array of such\n   * names.\n   *\n   * @defaultValue undefined\n   */\n  categories?: CommaSeparatedStr<MutationCategory> | MutationCategory[];\n\n  /**\n   * Do not call the handler until there's a future matching mutation.\n   *\n   * By default, if `selector` is given, and `categories` includes `added`, we\n   * call the handler (almost) immediately with all elements matching selector\n   * relative to this DOMWatcher's root.\n   *\n   * The initial operation will contain just the element and\n   * `addedTo: <current parent>`.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\nexport type MoveOptions = AtLeastOne<{\n  /**\n   * If to is missing or null, it's a removal operation.\n   */\n  to: Element | null;\n\n  /**\n   * If from is missing or null, it's an insertion operation.\n   */\n  from: Element | null;\n}>;\n\nexport type MutationOperation = {\n  /**\n   * The target that was changed.\n   */\n  target: Element;\n\n  /**\n   * The target that the callback was interested in.\n   *\n   * If `selector` is given as part of {@link OnMutationOptions}, then\n   * `currentTarget` will point to the target that matched the selector\n   * starting at the operation's `target` as the root. If the operation's\n   * `target` contains more than one element matching selector, the callback\n   * will be called once for _each_ matching child.\n   *\n   * If `target` is given as part of {@link OnMutationOptions}, then\n   * `currentTarget` will be that element.\n   */\n  currentTarget: Element;\n\n  /**\n   * The list of attributes that were changed in this round.\n   */\n  attributes: Set<string>;\n\n  /**\n   * The element that the target was added to, i.e. it's new parent. It is null\n   * if the target was not moved to a new element _during this round_. It does\n   * not mean that this is its current parent.\n   */\n  addedTo: Element | null;\n\n  /**\n   * The element that the target was removed from, i.e. it's old parent. It is\n   * null if the target was not removed from a previous element _during this\n   * round_. It does not mean it did not previously have a parent, but that its\n   * removal was not observed.\n   */\n  removedFrom: Element | null;\n};\n\n/**\n * The handler is invoked with one argument:\n *\n * - a {@link MutationOperation} for a set of mutations related to a particular\n *   element\n *\n * The handler could be invoked multiple times in each \"round\" (cycle of event\n * loop) if there are mutation operations for more than one element that match\n * the supplied {@link OnMutationOptions}.\n */\nexport type OnMutationHandlerArgs = [MutationOperation];\nexport type OnMutationCallback = Callback<OnMutationHandlerArgs>;\nexport type OnMutationHandler =\n  | CallbackHandler<OnMutationHandlerArgs>\n  | OnMutationCallback;\n\n// ----------------------------------------\n\ntype DOMWatcherConfigInternal = {\n  _root: Element | null;\n  _subtree: boolean;\n};\n\ntype OnMutationOptionsInternal = {\n  _target: Element | null;\n  _selector: string;\n  _categoryBitmask: number;\n};\n\ntype MyObserver = {\n  _observer: MutationObserver;\n  _isActive: boolean;\n};\n\ntype MutationType = \"childList\" | \"attributes\";\n\ntype MutationOperationInternal = {\n  _target: Element;\n  _attributes: Set<string>;\n  _addedTo: Element | null;\n  _removedFrom: Element | null;\n  _categoryBitmask: number;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, DOMWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (config: DOMWatcherConfig): DOMWatcherConfigInternal => {\n  return {\n    _root: config.root || null,\n    _subtree: config.subtree ?? true,\n  };\n};\n\nconst CATEGORIES_BITS = DOM_CATEGORIES_SPACE.bit;\nconst ADDED_BIT = CATEGORIES_BITS[MC.S_ADDED];\nconst REMOVED_BIT = CATEGORIES_BITS[MC.S_REMOVED];\nconst ATTRIBUTE_BIT = CATEGORIES_BITS[MC.S_ATTRIBUTE];\n\n// ----------------------------------------\n\nconst getOptions = (options: OnMutationOptions): OnMutationOptionsInternal => {\n  let categoryBitmask = 0;\n  const categories = validateStrList(\n    \"categories\",\n    options.categories,\n    DOM_CATEGORIES_SPACE.has,\n  );\n\n  if (categories) {\n    for (const cat of categories) {\n      categoryBitmask |= CATEGORIES_BITS[cat];\n    }\n  } else {\n    categoryBitmask = DOM_CATEGORIES_SPACE.bitmask; // default: all\n  }\n\n  const selector = options.selector || \"\";\n  if (!MH.isString(selector)) {\n    throw MH.usageError(\"'selector' must be a string\");\n  }\n\n  return {\n    _categoryBitmask: categoryBitmask,\n    _target: options.target || null,\n    _selector: options.selector || \"\",\n  };\n};\n\nconst getDiffOperation = (\n  operationA: MutationOperationInternal,\n  operationB: MutationOperationInternal | undefined,\n): MutationOperationInternal | null => {\n  if (!operationB || operationA._target !== operationB._target) {\n    return operationA;\n  }\n\n  const attributes = MH.newSet<string>();\n  for (const attr of operationA._attributes) {\n    if (!operationB._attributes.has(attr)) {\n      attributes.add(attr);\n    }\n  }\n\n  const categoryBitmask =\n    operationA._categoryBitmask ^ operationB._categoryBitmask;\n\n  const addedTo =\n    operationA._addedTo === operationB._addedTo ? null : operationA._addedTo;\n\n  const removedFrom =\n    operationA._removedFrom === operationB._removedFrom\n      ? null\n      : operationA._removedFrom;\n\n  if (!MH.sizeOf(attributes) && !categoryBitmask && !addedTo && !removedFrom) {\n    return null;\n  }\n\n  return {\n    _target: operationA._target,\n    _categoryBitmask: categoryBitmask,\n    _attributes: attributes,\n    _addedTo: addedTo,\n    _removedFrom: removedFrom,\n  };\n};\n\nconst invokeCallback = (\n  callback: OnMutationCallback,\n  operation: MutationOperationInternal,\n  currentTargets: Element[] = [],\n) => {\n  if (!MH.lengthOf(currentTargets)) {\n    currentTargets = [operation._target];\n  }\n\n  for (const currentTarget of currentTargets) {\n    callback\n      .invoke({\n        target: operation._target,\n        currentTarget,\n        attributes: operation._attributes,\n        addedTo: operation._addedTo,\n        removedFrom: operation._removedFrom,\n      })\n      .catch(logError);\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  XYDirection,\n  ZDirection,\n  NoDirection,\n  AmbiguousDirection,\n  CommaSeparatedStr,\n  Vector,\n} from \"@lisn/globals/types\";\n\nimport { maxAbs, areParallel } from \"@lisn/utils/math\";\nimport { isValidStrList, validateStrList } from \"@lisn/utils/validation\";\n\n/**\n * Returns the cardinal direction in the XY plane for the larger of the two\n * deltas (horizontal vs vertical).\n *\n * If both deltas are 0, returns \"none\".\n *\n * If both deltas are equal and non-0, returns \"ambiguous\".\n *\n * @category Directions\n */\nexport const getMaxDeltaDirection = (\n  deltaX: number,\n  deltaY: number,\n): XYDirection | NoDirection | AmbiguousDirection => {\n  if (!MH.abs(deltaX) && !MH.abs(deltaY)) {\n    return MC.S_NONE;\n  }\n\n  if (MH.abs(deltaX) === MH.abs(deltaY)) {\n    return MC.S_AMBIGUOUS;\n  }\n\n  if (MH.abs(deltaX) > MH.abs(deltaY)) {\n    return deltaX < 0 ? MC.S_LEFT : MC.S_RIGHT;\n  }\n  return deltaY < 0 ? MC.S_UP : MC.S_DOWN;\n};\n\n/**\n * Returns the approximate direction of the given 2D vector as one of the\n * cardinal (XY plane) ones: \"up\", \"down\", \"left\" or \"right\"; or \"ambiguous\".\n *\n * @param {} angleDiffThreshold  See {@link areParallel} or\n *                               {@link Utils.areAntiParallel | areAntiParallel}.\n *                               This determines whether the inferred direction\n *                               is ambiguous. For it to _not_ be ambiguous it\n *                               must align with one of the four cardinal\n *                               directions to within `angleDiffThreshold`.\n *                               It doesn't make sense for this value to be < 0\n *                               or >= 45 degrees. If it is, it's forced to be\n *                               positive (absolute) and <= 44.99.\n *\n * @category Directions\n */\nexport const getVectorDirection = (\n  vector: Vector,\n  angleDiffThreshold = 0,\n): XYDirection | AmbiguousDirection | NoDirection => {\n  angleDiffThreshold = MH.min(44.99, MH.abs(angleDiffThreshold));\n\n  if (!maxAbs(...vector)) {\n    return MC.S_NONE;\n  } else if (areParallel(vector, [1, 0], angleDiffThreshold)) {\n    return MC.S_RIGHT;\n  } else if (areParallel(vector, [0, 1], angleDiffThreshold)) {\n    return MC.S_DOWN;\n  } else if (areParallel(vector, [-1, 0], angleDiffThreshold)) {\n    return MC.S_LEFT;\n  } else if (areParallel(vector, [0, -1], angleDiffThreshold)) {\n    return MC.S_UP;\n  }\n\n  return MC.S_AMBIGUOUS;\n};\n\n/**\n * Returns the opposite direction to the given direction or null if the given\n * direction has no opposite.\n *\n * @example\n * ```javascript\n * getOppositeDirection(\"up\"); // -> \"down\"\n * getOppositeDirection(\"down\"); // -> \"up\"\n * getOppositeDirection(\"left\"); // -> \"right\"\n * getOppositeDirection(\"right\"); // -> \"left\"\n * getOppositeDirection(\"none\"); // -> null\n * getOppositeDirection(\"ambiguous\"); // -> null\n * ```\n *\n * @category Directions\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid.\n */\nexport const getOppositeDirection = (\n  direction: Direction,\n): Direction | null => {\n  if (!(direction in OPPOSITE_DIRECTIONS)) {\n    throw MH.usageError(\"Invalid 'direction'\");\n  }\n\n  return OPPOSITE_DIRECTIONS[direction];\n};\n\n/**\n * Returns the set of directions which are opposite to the given set of directions.\n *\n * There are two sets of opposite pairs (\"up\"/\"down\" and \"left\"/\"right\") and at\n * least one of the two opposing directions of a pair must be present for the\n * other one to be included. If both directions that constitute a pair of\n * opposites is given, then the other pair is returned instead (minus any that\n * are present in the input). See examples below for clarification.\n *\n * @example\n * ```javascript\n * getOppositeXYDirections(\"up\"); // -> [\"down\"]\n * getOppositeXYDirections(\"left\"); // -> [\"right\"]\n * getOppositeXYDirections(\"up,down\"); // -> [\"left\",\"right\"]\n * getOppositeXYDirections(\"up,left\"); // -> [\"down\",\"right\"]\n * getOppositeXYDirections(\"up,left,right\"); // -> [\"down\"]\n * getOppositeXYDirections(\"none\"); // -> throws\n * getOppositeXYDirections(\"ambiguous\"); // -> throws\n * getOppositeXYDirections(\"in\"); // -> throws\n * ```\n *\n * @category Directions\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid.\n */\nexport const getOppositeXYDirections = (\n  directions: CommaSeparatedStr<XYDirection> | XYDirection[],\n): XYDirection[] => {\n  const directionList = validateStrList(\n    \"directions\",\n    directions,\n    isValidXYDirection,\n  );\n\n  if (!directionList) {\n    throw MH.usageError(\"'directions' is required\");\n  }\n\n  const opposites: XYDirection[] = [];\n  for (const direction of directionList) {\n    const opposite = getOppositeDirection(direction);\n    if (\n      opposite &&\n      isValidXYDirection(opposite) &&\n      !MH.includes(directionList, opposite)\n    ) {\n      opposites.push(opposite);\n    }\n  }\n\n  if (!MH.lengthOf(opposites)) {\n    for (const direction of XY_DIRECTIONS) {\n      if (!MH.includes(directionList, direction)) {\n        opposites.push(direction);\n      }\n    }\n  }\n\n  return opposites;\n};\n\n/**\n * Returns true if the given direction is one of the known XY ones.\n *\n * @category Validation\n */\nexport const isValidXYDirection = (\n  direction: string,\n): direction is XYDirection => MH.includes(XY_DIRECTIONS, direction);\n\n/**\n * Returns true if the given direction is one of the known Z ones.\n *\n * @category Validation\n */\nexport const isValidZDirection = (direction: string): direction is ZDirection =>\n  MH.includes(Z_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string is a valid direction.\n *\n * @category Validation\n */\nexport const isValidDirection = (direction: string): direction is Direction =>\n  MH.includes(DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid directions.\n *\n * @category Validation\n */\nexport const isValidDirectionList = (\n  directions: string | string[],\n): directions is CommaSeparatedStr<Direction> | Direction[] =>\n  isValidStrList(directions, isValidDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const XY_DIRECTIONS = [\n  MC.S_UP,\n  MC.S_DOWN,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const Z_DIRECTIONS = [MC.S_IN, MC.S_OUT] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const SCROLL_DIRECTIONS = [\n  ...XY_DIRECTIONS,\n  MC.S_NONE,\n  MC.S_AMBIGUOUS,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const DIRECTIONS = [\n  ...XY_DIRECTIONS,\n  ...Z_DIRECTIONS,\n  MC.S_NONE,\n  MC.S_AMBIGUOUS,\n] as const;\n\n// --------------------\n\nconst OPPOSITE_DIRECTIONS = {\n  [MC.S_UP]: MC.S_DOWN,\n  [MC.S_DOWN]: MC.S_UP,\n  [MC.S_LEFT]: MC.S_RIGHT,\n  [MC.S_RIGHT]: MC.S_LEFT,\n  [MC.S_IN]: MC.S_OUT,\n  [MC.S_OUT]: MC.S_IN,\n  [MC.S_NONE]: null,\n  [MC.S_AMBIGUOUS]: null,\n} as const;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { addClasses, removeClasses } from \"@lisn/utils/css-alter\";\nimport { copyExistingKeys } from \"@lisn/utils/misc\";\n\nimport { XMap, newXMapGetter, newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * Calls the given event listener, which could be a function that's callable\n * directly, or an object that has a `handleEvent` function property.\n *\n * @category Events: Generic\n */\nexport const callEventListener = (\n  handler: EventListenerOrEventListenerObject,\n  event: Event,\n) => {\n  if (MH.isFunction(handler)) {\n    handler.call(event.currentTarget || self, event);\n  } else {\n    handler.handleEvent.call(event.currentTarget || self, event);\n  }\n};\n\n/**\n * Adds an event listener for the given event name to the given target.\n *\n * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener | EventTarget:addEventListener}\n * but it handles `options` object in case the browser does not support those.\n * Does not support the `signal` option unless browser natively supports that.\n *\n * @returns {} `true` if successfully added, or `false` if the same handler has\n * already been added by us, or if the handler is not a valid event listener.\n *\n * @category Events: Generic\n */\nexport const addEventListenerTo = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions = {},\n): boolean => {\n  eventType = transformEventType(eventType);\n  if (getEventHandlerData(target, eventType, handler, options)) {\n    // already added\n    return false;\n  }\n\n  let thirdArg = options;\n  let wrappedHandler = handler;\n\n  // If the user passed an options object but the browser only supports a\n  // boolen for 'useCapture', then handle this.\n  const supports = getBrowserSupport();\n  if (MH.isNonPrimitive(options)) {\n    if (!supports._optionsArg) {\n      thirdArg = options.capture ?? false;\n    }\n\n    if (options.once && !supports._options.once) {\n      // Remove the handler once it's called once\n      wrappedHandler = (event) => {\n        removeEventListenerFrom(target, eventType, handler, options);\n        callEventListener(handler, event);\n      };\n    }\n  }\n\n  setEventHandlerData(target, eventType, handler, options, {\n    _wrappedHandler: wrappedHandler,\n    _thirdArg: thirdArg,\n  });\n\n  target.addEventListener(eventType, wrappedHandler, thirdArg);\n  return true;\n};\n\n/**\n * Removes an event listener that has been added using\n * {@link addEventListenerTo}.\n *\n * **IMPORTANT:** If you have added a listener using the built-in\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener | EventTarget:addEventListener},\n * then you should use\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener | EventTarget:removeEventListener},\n * to remove it, not this function.\n *\n * @returns {} `true` if successfully removed, or `false` if the handler has not\n * been added by us.\n *\n * @category Events: Generic\n */\nexport const removeEventListenerFrom = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions = {},\n) => {\n  eventType = transformEventType(eventType);\n  const data = getEventHandlerData(target, eventType, handler, options);\n\n  if (!data) {\n    return false;\n  }\n\n  target.removeEventListener(eventType, data._wrappedHandler, data._thirdArg);\n  deleteEventHandlerData(target, eventType, handler, options);\n  return true;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const preventSelect = (target: EventTarget) => {\n  addEventListenerTo(target, MC.S_SELECTSTART, MH.preventDefault);\n  if (MH.isElement(target)) {\n    addClasses(target, MC.PREFIX_NO_SELECT);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const undoPreventSelect = (target: EventTarget) => {\n  removeEventListenerFrom(target, MC.S_SELECTSTART, MH.preventDefault);\n  if (MH.isElement(target)) {\n    removeClasses(target, MC.PREFIX_NO_SELECT);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getBrowserSupport = (): BrowserEventSupport => {\n  if (browserEventSupport) {\n    // already detected\n    return browserEventSupport;\n  }\n\n  const supports = {\n    _pointer: false,\n    _optionsArg: false,\n    _options: {\n      capture: false,\n      passive: false,\n      once: false,\n      signal: false,\n    },\n  };\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#safely_detecting_option_support\n  const optTest = {};\n  let opt: keyof typeof supports._options;\n  for (opt in supports._options) {\n    const thisOpt = opt;\n    MH.defineProperty(optTest, thisOpt, {\n      get: () => {\n        supports._options[thisOpt] = true;\n        if (thisOpt === \"signal\") {\n          return new AbortController().signal;\n        }\n        return false;\n      },\n    });\n  }\n\n  const dummyHandler = () => {}; // TypeScript does not accept null\n  const dummyElement = MH.createElement(\"div\");\n  try {\n    dummyElement.addEventListener(\"testOptionSupport\", dummyHandler, optTest);\n    dummyElement.removeEventListener(\n      \"testOptionSupport\",\n      dummyHandler,\n      optTest,\n    );\n    supports._optionsArg = true;\n  } catch (e__ignored) {\n    //\n  }\n\n  supports._pointer = \"onpointerup\" in dummyElement;\n\n  browserEventSupport = supports;\n  return supports;\n};\n\n// --------------------\n\ntype EventHandlerData = {\n  _wrappedHandler: EventListenerOrEventListenerObject;\n  _thirdArg: boolean | AddEventListenerOptions;\n};\n\nlet browserEventSupport: BrowserEventSupport;\n\nconst registeredEventHandlerData = newXWeakMap<\n  EventTarget,\n  XMap<\n    string, // event type\n    XMap<\n      EventListenerOrEventListenerObject, // user-supplied handler\n      Map<\n        string, // str repr of options\n        EventHandlerData\n      >\n    >\n  >\n>(newXMapGetter(newXMapGetter(() => MH.newMap())));\n\n// detect browser features, see below\ntype BrowserEventSupport = {\n  _pointer: boolean;\n  _optionsArg: boolean;\n  _options: {\n    capture: boolean;\n    passive: boolean;\n    once: boolean;\n    signal: boolean;\n  };\n};\n\nconst getEventOptionsStr = (\n  options: boolean | AddEventListenerOptions,\n): string => {\n  const finalOptions: AddEventListenerOptions = {\n    capture: false,\n    passive: false,\n    once: false,\n  };\n\n  if (options === false || options === true) {\n    finalOptions.capture = options;\n  } else if (MH.isObject(options)) {\n    copyExistingKeys(options, finalOptions);\n  }\n\n  return MH.stringify(finalOptions);\n};\n\nconst getEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  return registeredEventHandlerData\n    .get(target)\n    ?.get(eventType)\n    ?.get(handler)\n    ?.get(optionsStr);\n};\n\nconst deleteEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  MH.deleteKey(\n    registeredEventHandlerData.get(target)?.get(eventType)?.get(handler),\n    optionsStr,\n  );\n  registeredEventHandlerData.prune(target, eventType, handler);\n};\n\nconst setEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n  data: EventHandlerData,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  registeredEventHandlerData\n    .sGet(target)\n    .sGet(eventType)\n    .sGet(handler)\n    .set(optionsStr, data);\n};\n\nconst transformEventType = (eventType: string) => {\n  const supports = getBrowserSupport();\n  if (eventType.startsWith(MC.S_POINTER) && !supports._pointer) {\n    // TODO maybe log a warning message is it's not supported, e.g. there's no\n    // mousecancel\n    return MH.strReplace(eventType, MC.S_POINTER, MC.S_MOUSE);\n  }\n\n  return eventType;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureDevice, GestureIntent } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * `deltaX` and `deltaY` together specify the precise direction in the XY plane\n * of the move if relevant (i.e. other than zoom intent). The direction\n * specifies the effective X (\"left\"/\"right\"), Y (\"up\"/\"down\") or Z (\"in\"/\"out\")\n * direction, or \"none\"/\"ambiguous\".\n *\n * `deltaZ` specifies relative zoom in or out for zoom intents.\n * For zoom in, deltaZ is always > 1, and for zoom out it is < 1.\n * For non-zoom events it is 1.\n *\n * For zoom intents, `direction` would be either in, out or none.\n * For other intents, it would be up, down, left, right, none or ambiguous.\n *\n * For important notes on the delta values see\n * - {@link Utils.getKeyGestureFragment | getKeyGestureFragment}\n * - {@link Utils.getTouchGestureFragment | getTouchGestureFragment}\n * - {@link Utils.getWheelGestureFragment | getWheelGestureFragment}\n *\n * @category Gestures\n */\nexport type GestureFragment = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n  deltaX: number;\n  deltaY: number;\n  deltaZ: number;\n};\n\n/**\n * Returns true if the given string is a valid gesture device.\n *\n * @category Validation\n */\nexport const isValidInputDevice = (device: string): device is GestureDevice =>\n  MH.includes(DEVICES, device);\n\n/**\n * Returns true if the given string is a valid gesture intent.\n *\n * @category Validation\n */\nexport const isValidIntent = (intent: string): intent is GestureIntent =>\n  MH.includes(INTENTS, intent);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * devices.\n *\n * @category Validation\n */\nexport const isValidInputDeviceList = (devices: string | string[]) =>\n  isValidStrList(devices, isValidInputDevice, false);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * intents.\n *\n * @category Validation\n */\nexport const isValidIntentList = (intents: string | string[]) =>\n  isValidStrList(intents, isValidIntent, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const addDeltaZ = (current: number, increment: number) =>\n  MH.max(MIN_DELTA_Z, current * increment);\n\n/**\n * @ignore\n * @internal\n */\nexport const DEVICES: GestureDevice[] = [\n  MC.S_KEY,\n  MC.S_POINTER,\n  MC.S_TOUCH,\n  MC.S_WHEEL,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const INTENTS: GestureIntent[] = [\n  MC.S_SCROLL,\n  MC.S_ZOOM,\n  MC.S_DRAG,\n  MC.S_UNKNOWN,\n] as const;\n\n// Do not allow zooming out more than this value\nconst MIN_DELTA_Z = 0.1;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { Direction, GestureIntent } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport { GestureFragment, addDeltaZ } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"keydown\"\n * events will be considered.\n *\n * If there are no \"keydown\" events in the given list of events, returns\n * `false`.\n *\n * The deltas of all events are summed together before determining final delta\n * and direction.\n *\n * If the events are of conflicting types, i.e. some scroll, some zoom, then\n * the intent will be \"unknown\" and the direction will be \"ambiguous\".\n *\n * Otherwise, if the deltas sum up to 0, the direction will be \"none\".\n *\n * **IMPORTANT NOTES ON THE DELTA VALUES**\n *\n * For key gestures the deltas are unreliable. You should not assume they\n * correspond to the would-be scroll or zoom amount that the browser would do.\n * But they can be used to determine relative amounts for animating, etc.\n *\n * Key press events can be divided into 3 categories: that scroll by a \"line\"\n * (e.g. arrow keys), by a \"page\" (e.g. PageUp/PageDown) or by the full content\n * height/width (e.g. Home/End). The actual scroll amount that _would_ result\n * from the event is dependent on the browser, the window size or the element's\n * scroll width/height, so ours can only be a best guess.\n *\n * Since the actual pixel equivalent is browser specific, we use reasonable\n * default values of delta for each of these \"line\", \"page\" or \"content\" modes,\n * similar to what\n * {@link Utils.getWheelGestureFragment | getWheelGestureFragment} does:\n * - For \"line\", then a configurable fixed value is used\n *  ({@link settings.deltaLineHeight}).\n * - For \"page\", then a configurable fixed value is used\n *  ({@link settings.deltaPageHeight}).\n * - For \"content\", the element's scroll height is used if given, otherwise\n *   the viewport height (same as \"page\"). We do not try to get the current\n *   scroll height of the target element, (which would be the best guess value\n *   of `deltaY` in case of Home/End key presses), as that would either involve\n *   an asynchronous action or would result in forced layout. If the caller is\n *   already tracking the scroll height of the target, you can pass this as an\n *   argument. Otherwise, we'll default to using the viewport height, same as\n *   for PageUp/Down.\n *\n * If the key gesture fragment is a result of multiple events that were\n * accumulated, the deltas are summed as usual, e.g. if a \"page\" is equal to 20\n * \"lines\", then pressing PageDown and then 10 times Up, would result in a\n * delta equal to 10 \"lines\" down.\n *\n * For zoom intents, `deltaZ` gives a relative change of scale, whereby each\n * press of + or - steps up by 15% or down by ~13% (`1 / 1.15` to be exact)\n * since the previous one.\n *\n * @param {} [options.angleDiffThreshold]\n *                                  See {@link getVectorDirection}\n * @param {} [options.scrollHeight] Use this as deltaY when Home/End is pressed\n *\n * @returns {} `false` if there are no \"keydown\" events in the list, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getKeyGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n    scrollHeight?: number;\n  },\n): GestureFragment | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  const LINE = settings.deltaLineHeight;\n  const PAGE = settings.deltaPageHeight;\n  const CONTENT = options?.scrollHeight ?? PAGE;\n\n  const deltasUp = (amount: number): DeltasArr => [0, -amount, 1];\n  const deltasDown = (amount: number): DeltasArr => [0, amount, 1];\n  const deltasLeft = (amount: number): DeltasArr => [-amount, 0, 1];\n  const deltasRight = (amount: number): DeltasArr => [amount, 0, 1];\n  const deltasIn: DeltasArr = [0, 0, 1.15];\n  const deltasOut: DeltasArr = [0, 0, 1 / 1.15];\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent | null = null;\n  let deltaX = 0,\n    deltaY = 0,\n    deltaZ = 1;\n\n  for (const event of events) {\n    if (!MH.isKeyboardEvent(event) || event.type !== MC.S_KEYDOWN) {\n      continue;\n    }\n\n    const deltasForKey: Record<string, DeltasArr | null> = {\n      [SK_UP]: deltasUp(LINE),\n      [SK_ARROWUP]: deltasUp(LINE),\n      [SK_PAGEUP]: deltasUp(PAGE),\n      Home: deltasUp(CONTENT),\n      [SK_DOWN]: deltasDown(LINE),\n      [SK_ARROWDOWN]: deltasDown(LINE),\n      [SK_PAGEDOWN]: deltasDown(PAGE),\n      End: deltasDown(CONTENT),\n      [SK_LEFT]: deltasLeft(LINE),\n      [SK_ARROWLEFT]: deltasLeft(LINE),\n      [SK_RIGHT]: deltasRight(LINE),\n      [SK_ARROWRIGHT]: deltasRight(LINE),\n      \" \": (event.shiftKey ? deltasUp : deltasDown)(PAGE),\n      \"+\": deltasIn,\n      \"=\": event.ctrlKey ? deltasIn : null,\n      \"-\": deltasOut,\n    };\n\n    const theseDeltas = deltasForKey[event.key] || null;\n    if (!theseDeltas) {\n      // not a relevant key\n      continue;\n    }\n\n    const [thisDeltaX, thisDeltaY, thisDeltaZ] = theseDeltas;\n    const thisIntent = thisDeltaZ !== 1 ? MC.S_ZOOM : MC.S_SCROLL;\n\n    deltaX += thisDeltaX;\n    deltaY += thisDeltaY;\n    deltaZ = addDeltaZ(deltaZ, thisDeltaZ);\n\n    if (!intent) {\n      intent = thisIntent;\n    } else if (intent !== thisIntent) {\n      // mixture of zoom and scroll\n      intent = MC.S_UNKNOWN;\n    }\n  }\n\n  if (!intent) {\n    return false; // no relevant events\n  } else if (intent === MC.S_UNKNOWN) {\n    direction = MC.S_AMBIGUOUS;\n  } else if (intent === MC.S_ZOOM) {\n    direction = deltaZ > 1 ? MC.S_IN : deltaZ < 1 ? MC.S_OUT : MC.S_NONE;\n  } else {\n    direction = getVectorDirection(\n      [deltaX, deltaY],\n      options?.angleDiffThreshold,\n    );\n  }\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_KEY,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n      };\n};\n\n// --------------------\n\ntype DeltasArr = [number, number, number];\n\nconst SK_UP = \"Up\";\nconst SK_DOWN = \"Down\";\nconst SK_LEFT = \"Left\";\nconst SK_RIGHT = \"Right\";\nconst SK_PAGE = \"Page\";\nconst SK_ARROW = \"Arrow\";\nconst SK_PAGEUP = (SK_PAGE + SK_UP) as `${typeof SK_PAGE}${typeof SK_UP}`;\nconst SK_PAGEDOWN = (SK_PAGE + SK_DOWN) as `${typeof SK_PAGE}${typeof SK_DOWN}`;\nconst SK_ARROWUP = (SK_ARROW + SK_UP) as `${typeof SK_ARROW}${typeof SK_UP}`;\nconst SK_ARROWDOWN = (SK_ARROW +\n  SK_DOWN) as `${typeof SK_ARROW}${typeof SK_DOWN}`;\nconst SK_ARROWLEFT = (SK_ARROW +\n  SK_LEFT) as `${typeof SK_ARROW}${typeof SK_LEFT}`;\nconst SK_ARROWRIGHT = (SK_ARROW +\n  SK_RIGHT) as `${typeof SK_ARROW}${typeof SK_RIGHT}`;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\nimport { getBrowserSupport } from \"@lisn/utils/event\";\nimport { GestureFragment } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. If the browser\n * supports Pointer events, then only \"pointermove\" events will be considered.\n * Otherwise, only \"mousemove\" events will be considered.\n *\n * If there are less than 2 such events in the given list of events, returns\n * `false`.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"pointercancel\" in the list or buttons other than the primary are pressed,\n * returns `null`.\n *\n * Pointer gestures always require the primary button to be pressed and the\n * resulting intent is always \"drag\", and `deltaZ` is always 1.\n *\n * @param {} [options.angleDiffThreshold] See {@link getVectorDirection}\n *\n * @returns {} `false` if there are less than 2 \"pointermove\"/\"mousemove\" events\n * in the list, `null` if the gesture is terminated, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getPointerGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let isCancelled = false;\n  const supports = getBrowserSupport();\n\n  // If the browser supports pointer events, then only take those; otherwise\n  // take the mouse events\n  const pointerEventClass = supports._pointer ? PointerEvent : MouseEvent;\n  const pointerUpType = supports._pointer ? MC.S_POINTERUP : MC.S_MOUSEUP;\n\n  const filteredEvents: MouseEvent[] = MH.filter(\n    events,\n    (event): event is MouseEvent => {\n      const eType = event.type;\n      isCancelled = isCancelled || eType === MC.S_POINTERCANCEL;\n      if (eType !== MC.S_CLICK && MH.isInstanceOf(event, pointerEventClass)) {\n        // Only events where the primary button is pressed (unless it's a\n        // pointerup event, in which case no buttons should be pressed) are\n        // considered, otherwise consider it terminated\n        isCancelled =\n          isCancelled ||\n          (eType === pointerUpType && event.buttons !== 0) ||\n          (eType !== pointerUpType && event.buttons !== 1);\n        // we don't handle touch pointer events\n        return !MH.isTouchPointerEvent(event);\n      }\n      return false;\n    },\n  );\n\n  const numEvents = MH.lengthOf(filteredEvents);\n  if (numEvents < 2) {\n    return false; // no enough events\n  }\n\n  if (isCancelled) {\n    return null; // terminated\n  }\n\n  const firstEvent = filteredEvents[0];\n  const lastEvent = filteredEvents[numEvents - 1];\n  if (MH.getPointerType(firstEvent) !== MH.getPointerType(lastEvent)) {\n    return null; // different devices, consider it terminated\n  }\n\n  const deltaX = lastEvent.clientX - firstEvent.clientX;\n  const deltaY = lastEvent.clientY - firstEvent.clientY;\n  const direction = getVectorDirection(\n    [deltaX, deltaY],\n    options?.angleDiffThreshold,\n  );\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_POINTER,\n        direction,\n        intent: MC.S_DRAG,\n        deltaX,\n        deltaY,\n        deltaZ: 1,\n      };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureIntent, Vector } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport {\n  maxAbs,\n  havingMaxAbs,\n  distanceBetween,\n  areAntiParallel,\n} from \"@lisn/utils/math\";\nimport { GestureFragment } from \"@lisn/utils/gesture\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Gestures\n */\nexport type TouchDiff = {\n  startX: number;\n  startY: number;\n\n  endX: number;\n  endY: number;\n\n  deltaX: number;\n  deltaY: number;\n\n  isSignificant: boolean;\n};\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"touchmove\" events\n * will be considered.\n *\n * If there are less than 2 such events in the given list of events, returns `false`.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that by default swipe actions follow the natural direction: swipe up\n * with scroll intent results in direction down and swipe down results in\n * direction up. Drag intent always follows the direction of the gesture.\n *\n * For zoom intents, which necessarily involves exactly two fingers `deltaZ`\n * is based on the relative change in distance between the fingers.\n *\n * @param {} [options.deltaThreshold]\n *                          A change of x or y coordinate less than this is\n *                          considered insignificant, for the purposes of\n *                          determining:\n *                          1) whether the inferred direction is in one of the\n *                             four cardinal ones, or otherwise ambiguous; and\n *                          2) whether more than two fingers have moved and\n *                             therefore whether the direction could be zoom or\n *                             not\n * @param {} [options.angleDiffThreshold] See {@link getVectorDirection}\n * @param {} [options.reverseScroll]\n *                          If set to `true`, will disable natural scroll\n *                          direction.\n * @param {} [options.dragHoldTime]\n *                          If the user presses and holds for at least the\n *                          given amount of milliseconds before moving the\n *                          finger(s), gestures other than pinch will be\n *                          treated as a drag instead of scroll as long as the\n *                          number of fingers touching the screen is\n *                          `options.dragNumFingers`. Default is 500ms.\n * @param {} [options.dragNumFingers]\n *                          The number of fingers that could be considered a\n *                          drag intent. Default is 1.\n *\n * @returns {} `false` if there are less than 2 \"touchmove\" events in the list,\n * `null` if the gesture is terminated, otherwise a {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getTouchGestureFragment = (\n  events: Event[],\n  options?: {\n    deltaThreshold?: number;\n    angleDiffThreshold?: number;\n    reverseScroll?: boolean;\n    dragHoldTime?: number;\n    dragNumFingers?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let moves = getTouchDiff(events, options?.deltaThreshold);\n\n  if (!moves) {\n    return null; // terminated\n  }\n\n  let numMoves = MH.lengthOf(moves);\n\n  const holdTime = getHoldTime(events);\n  const canBeDrag =\n    holdTime >= (options?.dragHoldTime ?? 500) &&\n    numMoves === (options?.dragNumFingers ?? 1);\n  const angleDiffThreshold = options?.angleDiffThreshold;\n\n  let deltaX = havingMaxAbs(...moves.map((m) => m.deltaX));\n  let deltaY = havingMaxAbs(...moves.map((m) => m.deltaY));\n  let deltaZ = 1;\n\n  if (numMoves > 2) {\n    // Take only the significant ones\n    moves = MH.filter(moves, (d) => d.isSignificant);\n    numMoves = MH.lengthOf(moves);\n  }\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent = MC.S_UNKNOWN;\n  if (numMoves === 2) {\n    // Check if it's a zoom\n    const vectorA: Vector = [moves[0].deltaX, moves[0].deltaY];\n    const vectorB: Vector = [moves[1].deltaX, moves[1].deltaY];\n\n    // If either finger is approx stationary, or if they move in opposite directions,\n    // treat it as zoom.\n    if (\n      !havingMaxAbs(...vectorA) || // finger A still\n      !havingMaxAbs(...vectorB) || // finger B still\n      areAntiParallel(vectorA, vectorB, angleDiffThreshold)\n    ) {\n      // It's a pinch motion => zoom\n      const startDistance = distanceBetween(\n        [moves[0].startX, moves[0].startY],\n        [moves[1].startX, moves[1].startY],\n      );\n\n      const endDistance = distanceBetween(\n        [moves[0].endX, moves[0].endY],\n        [moves[1].endX, moves[1].endY],\n      );\n\n      direction = startDistance < endDistance ? MC.S_IN : MC.S_OUT;\n      deltaZ = endDistance / startDistance;\n      deltaX = deltaY = 0;\n      intent = MC.S_ZOOM;\n    }\n  }\n\n  const deltaSign = canBeDrag || options?.reverseScroll ? 1 : -1;\n  // If scrolling, swap the deltas for natural scroll direction.\n  // Add +0 to force -0 to be +0 since jest doesn't think they're equal\n  deltaX = deltaSign * deltaX + 0;\n  deltaY = deltaSign * deltaY + 0;\n\n  if (direction === MC.S_NONE) {\n    // Wasn't a zoom. Check if all moves are aligned.\n    let isFirst = true;\n\n    for (const m of moves) {\n      // There's at least one significant move, assume scroll or drag intent.\n      intent = canBeDrag ? MC.S_DRAG : MC.S_SCROLL;\n\n      const thisDirection = getVectorDirection(\n        [deltaSign * m.deltaX, deltaSign * m.deltaY],\n        angleDiffThreshold,\n      );\n\n      if (thisDirection === MC.S_NONE) {\n        continue;\n      }\n\n      if (isFirst) {\n        direction = thisDirection;\n      } else if (direction !== thisDirection) {\n        direction = MC.S_AMBIGUOUS;\n        break;\n      }\n\n      isFirst = false;\n    }\n  }\n\n  if (direction === MC.S_NONE) {\n    const lastTouchEvent = MH.lastOf(events.filter(MH.isTouchEvent));\n    // If all fingers have lifted off, consider it terminated, otherwise wait\n    // for more events.\n    return MH.lengthOf(lastTouchEvent?.touches) ? false : null;\n  }\n\n  return {\n    device: MC.S_TOUCH,\n    direction,\n    intent,\n    deltaX,\n    deltaY,\n    deltaZ,\n  };\n};\n\n/**\n * Returns a description of the changes in each finger between the first and\n * the last relevant TouchEvent in the list.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that, `deltaX`/`deltaY` are the end X/Y coordinate minus the start X/Y\n * coordinate. For natural scroll direction you should swap their signs.\n *\n * @param {} deltaThreshold If the change of x and y coordinate are both less\n *                          than this, it is marked as not significant.\n *\n * @category Gestures\n */\nexport const getTouchDiff = (\n  events: Event[],\n  deltaThreshold = 0,\n): TouchDiff[] | null => {\n  // Group each touch point of each event by identifier, so that we can get the\n  // start and end coordinate of each finger\n  const groupedTouches = newXMap<number, Touch[]>((): Touch[] => []);\n\n  for (const event of events) {\n    if (!MH.isTouchEvent(event)) {\n      continue;\n    }\n\n    if (event.type === MC.S_TOUCHCANCEL) {\n      return null; // gesture terminated\n    }\n\n    for (const touch of event.touches) {\n      groupedTouches.sGet(touch.identifier).push(touch);\n    }\n  }\n\n  const moves: TouchDiff[] = [];\n\n  for (const touchList of groupedTouches.values()) {\n    const nTouches = MH.lengthOf(touchList);\n    if (nTouches < 2) {\n      // Only one event had that finger in it, so there's no move for it\n      continue;\n    }\n\n    const firstTouch = touchList[0];\n    const lastTouch = touchList[nTouches - 1];\n    const startX = firstTouch.clientX;\n    const startY = firstTouch.clientY;\n\n    const endX = lastTouch.clientX;\n    const endY = lastTouch.clientY;\n\n    const deltaX = endX - startX;\n    const deltaY = endY - startY;\n\n    const isSignificant = maxAbs(deltaX, deltaY) >= deltaThreshold;\n\n    // Consider it a move in one of the 4 cardinal ones\n    moves.push({\n      startX,\n      startY,\n      endX,\n      endY,\n      deltaX,\n      deltaY,\n      isSignificant,\n    });\n  }\n\n  return moves;\n};\n\n// --------------------\n\nconst getHoldTime = (events: Event[]) => {\n  const firstStart = events.findIndex((e) => e.type === MC.S_TOUCHSTART);\n  const firstMove = events.findIndex((e) => e.type === MC.S_TOUCHMOVE);\n  if (firstStart < 0 || firstMove < 1) {\n    return 0;\n  }\n\n  return events[firstMove].timeStamp - events[firstStart].timeStamp;\n};\n","/**\n * @module\n * @ignore\n * @internal\n *\n * FULL CREDIT FOR THIS GOES TO\n * https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n *\n * ADAPTED FROM THE ABOVE SOURCE\n *\n * ORIGINAL COPYRIGHT IN FILE PRESERVED:\n *\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * ORIGINAL LICENSE\n *\n * BSD License\n *\n * For FixedDataTable software\n *\n * Copyright (c) 2015, Facebook, Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *\n *  * Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n *  * Neither the name Facebook nor the names of its contributors may be used to\n *    endorse or promote products derived from this software without specific\n *    prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { settings } from \"@lisn/globals/settings\";\n\n/**\n * ORIGINAL DEVELOPER COMMENT PRESERVED\n *\n * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n * complicated, thus this doc is long and (hopefully) detailed enough to answer\n * your questions.\n *\n * If you need to react to the mouse wheel in a predictable way, this code is\n * like your bestest friend. * hugs *\n *\n * As of today, there are 4 DOM event types you can listen to:\n *\n *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n *\n * So what to do?  The is the best:\n *\n *   normalizeWheel.getEventType();\n *\n * In your event callback, use this code to get sane interpretation of the\n * deltas.  This code will return an object with properties:\n *\n *   spinX   -- normalized spin speed (use for zoom) - x plane\n *   spinY   -- \" - y plane\n *   pixelX  -- normalized distance (to pixels) - x plane\n *   pixelY  -- \" - y plane\n *\n * Wheel values are provided by the browser assuming you are using the wheel to\n * scroll a web page by a number of lines or pixels (or pages).  Values can vary\n * significantly on different platforms and browsers, forgetting that you can\n * scroll at different speeds.  Some devices (like trackpads) emit more events\n * at smaller increments with fine granularity, and some emit massive jumps with\n * linear speed or acceleration.\n *\n * This code does its best to normalize the deltas for you:\n *\n *   - spin is trying to normalize how far the wheel was spun (or trackpad\n *     dragged).  This is super useful for zoom support where you want to\n *     throw away the chunky scroll steps on the PC and make those equal to\n *     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n *     resolve a single slow step on a wheel to 1.\n *\n *   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n *     get the crazy differences between browsers, but at least it'll be in\n *     pixels!\n *\n *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n *     should translate to positive value zooming IN, negative zooming OUT.\n *     This matches the newer 'wheel' event.\n *\n * Why are there spinX, spinY (or pixels)?\n *\n *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n *     with a mouse.  It results in side-scrolling in the browser by default.\n *\n *   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n *\n *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n *     probably is by browsers in conjunction with fancy 3D controllers .. but\n *     you know.\n *\n * Implementation info:\n *\n * Examples of 'wheel' event if you scroll slowly (down) by one step with an\n * average mouse:\n *\n *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n *\n * On the trackpad:\n *\n *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n *\n * On other/older browsers.. it's more complicated as there can be multiple and\n * also missing delta values.\n *\n * The 'wheel' event is more standard:\n *\n * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n *\n * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n * backward compatibility with older events.  Those other values help us\n * better normalize spin speed.  Example of what the browsers provide:\n *\n *                          | event.wheelDelta | event.detail\n *        ------------------+------------------+--------------\n *          Safari v5/OS X  |       -120       |       0\n *          Safari v5/Win7  |       -120       |       0\n *         Chrome v17/OS X  |       -120       |       0\n *         Chrome v17/Win7  |       -120       |       0\n *                IE9/Win7  |       -120       |   undefined\n *         Firefox v4/OS X  |     undefined    |       1\n *         Firefox v4/Win7  |     undefined    |       3\n */\nexport const normalizeWheel = (event: LegacyWheelEvent): WheelData => {\n  let spinX = 0,\n    spinY = 0,\n    pixelX = event.deltaX,\n    pixelY = event.deltaY;\n\n  const LINE = settings.deltaLineHeight;\n\n  // Legacy\n  if (event.detail !== undefined) {\n    spinY = event.detail;\n  }\n  if (event.wheelDelta !== undefined) {\n    spinY = -event.wheelDelta / 120;\n  }\n  if (event.wheelDeltaY !== undefined) {\n    spinY = -event.wheelDeltaY / 120;\n  }\n  if (event.wheelDeltaX !== undefined) {\n    spinX = -event.wheelDeltaX / 120;\n  }\n\n  if ((pixelX || pixelY) && event.deltaMode) {\n    if (event.deltaMode === 1) {\n      // delta in LINE units\n      pixelX *= LINE;\n      pixelY *= LINE;\n    } else {\n      // delta in PAGE units\n      pixelX *= settings.deltaPageWidth;\n      pixelY *= settings.deltaPageHeight;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pixelX && !spinX) {\n    spinX = pixelX < 1 ? -1 : 1;\n  }\n  if (pixelY && !spinY) {\n    spinY = pixelY < 1 ? -1 : 1;\n  }\n\n  return { spinX, spinY, pixelX, pixelY };\n};\n\nexport type WheelData = {\n  spinX: number;\n  spinY: number;\n  pixelX: number;\n  pixelY: number;\n};\n\n// --------------------\n\ntype LegacyWheelEvent = WheelEvent & {\n  wheelDelta?: number;\n  wheelDeltaX?: number;\n  wheelDeltaY?: number;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureIntent } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport { havingMaxAbs } from \"@lisn/utils/math\";\nimport { normalizeWheel } from \"@lisn/utils/normalize-wheel\";\n\nimport { GestureFragment, addDeltaZ } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"wheel\" events\n * will be considered.\n *\n * If there are no \"wheel\" events in the given list of events, returns `false`.\n *\n * The deltas of all events are summed together before determining final delta\n * and direction.\n *\n * If the events are of conflicting types, i.e. some scroll, some zoom, then\n * the intent will be \"unknown\" and the direction will be \"ambiguous\".\n *\n * If the deltas sum up to 0, the direction will be \"none\".\n *\n * **IMPORTANT NOTES ON THE DELTA VALUES**\n *\n * For wheel gestures the deltas are _highly_ unreliable, especially when\n * zooming (Control + wheel or pinching trackpad). You should not assume they\n * correspond to the would-be scroll or zoom amount that the browser would do.\n * But they can be used to determine relative amounts for animating, etc.\n *\n * If the browser reports the delta values of a WheelEvent to be in mode \"line\",\n * then a configurable fixed value is used\n * ({@link Settings.settings.deltaLineHeight | settings.deltaLineHeight}).\n *\n * If the browser reports the delta values of a WheelEvent to be in mode \"page\",\n * then a configurable fixed value is used\n * ({@link Settings.settings.deltaPageWidth | settings.deltaPageWidth} and\n * ({@link Settings.settings.deltaPageHeight | settings.deltaPageHeight}).\n *\n * For zoom intents `deltaZ` is based on what the browser reports as the\n * `deltaY`, which in most browsers roughly corresponds to a percentage zoom\n * factor.\n *\n * @param {} [options.angleDiffThreshold] See {@link getVectorDirection}.\n *                                        Default is 5.\n *\n * @returns {} `false` if there are no \"wheel\" events in the list, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getWheelGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent | null = null;\n  let deltaX = 0,\n    deltaY = 0,\n    deltaZ = 1;\n\n  for (const event of events) {\n    if (!MH.isWheelEvent(event) || event.type !== MC.S_WHEEL) {\n      continue;\n    }\n\n    const data = normalizeWheel(event);\n    let thisIntent: GestureIntent = MC.S_SCROLL;\n    let thisDeltaX = data.pixelX;\n    let thisDeltaY = data.pixelY;\n    let thisDeltaZ = 1;\n    const maxDelta = havingMaxAbs(thisDeltaX, thisDeltaY);\n\n    if (event.ctrlKey && !thisDeltaX) {\n      // Browsers report negative deltaY for zoom in, so swap sign\n      let percentage = -maxDelta;\n      // If it's more than 50, assume it's a mouse wheel => delta is roughly\n      // multiple of 10%. Otherwise a trackpad => delta is roughly multiple of 1%\n      if (MH.abs(percentage) >= 50) {\n        percentage /= 10;\n      }\n\n      thisDeltaZ = 1 + percentage / 100;\n\n      thisDeltaX = thisDeltaY = 0;\n      thisIntent = MC.S_ZOOM;\n    } else if (event.shiftKey && !thisDeltaX) {\n      // Holding Shift while turning wheel or swiping trackpad in vertically\n      // results in sideways scroll.\n      thisDeltaX = thisDeltaY;\n      thisDeltaY = 0;\n    }\n\n    deltaX += thisDeltaX;\n    deltaY += thisDeltaY;\n    deltaZ = addDeltaZ(deltaZ, thisDeltaZ);\n\n    if (!thisIntent) {\n      // not a relevant key\n    } else if (!intent) {\n      intent = thisIntent;\n    } else if (intent !== thisIntent) {\n      // mixture of zoom and scroll\n      intent = MC.S_UNKNOWN;\n    }\n  }\n\n  if (!intent) {\n    return false; // no relevant events\n  } else if (intent === MC.S_UNKNOWN) {\n    direction = MC.S_AMBIGUOUS;\n  } else if (intent === MC.S_ZOOM) {\n    direction = deltaZ > 1 ? MC.S_IN : deltaZ < 1 ? MC.S_OUT : MC.S_NONE;\n  } else {\n    direction = getVectorDirection(\n      [deltaX, deltaY],\n      options?.angleDiffThreshold,\n    );\n  }\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_WHEEL,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n      };\n};\n","/**\n * @module Watchers/GestureWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureIntent,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  addClasses,\n  removeClasses,\n  setNumericStyleJsVars,\n} from \"@lisn/utils/css-alter\";\nimport { isValidDirection } from \"@lisn/utils/directions\";\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { getDebouncedHandler } from \"@lisn/utils/tasks\";\n\nimport { addDeltaZ } from \"@lisn/utils/gesture\";\n\nimport {\n  isValidInputDevice,\n  isValidIntent,\n  GestureFragment,\n  DEVICES,\n  INTENTS,\n} from \"@lisn/utils/gesture\";\nimport { getKeyGestureFragment } from \"@lisn/utils/gesture-key\";\nimport { getPointerGestureFragment } from \"@lisn/utils/gesture-pointer\";\nimport { getTouchGestureFragment } from \"@lisn/utils/gesture-touch\";\nimport { getWheelGestureFragment } from \"@lisn/utils/gesture-wheel\";\nimport { logError } from \"@lisn/utils/log\";\nimport {\n  maxAbs,\n  toNonNegNum,\n  toPosNum,\n  toNumWithBounds,\n} from \"@lisn/utils/math\";\nimport { randId, objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { LoggerInterface } from \"@lisn/debug/types\";\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link GestureWatcher} listens for user gestures resulting from wheel,\n * pointer, touch or key input events.\n *\n * It supports scroll, zoom or drag type gestures.\n *\n * It manages registered callbacks globally and reuses event listeners for more\n * efficient performance.\n */\nexport class GestureWatcher {\n  /**\n   * Call the given handler whenever the user performs a gesture on the target\n   * matching the given options.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same event target, even if the options differ. If the handler has already\n   * been added for this target, either using {@link onGesture} or\n   * {@link trackGesture}, then it will be removed and re-added with the\n   * current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onGesture: (\n    target: EventTarget,\n    handler: OnGestureHandler,\n    options?: OnGestureOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offGesture: (target: EventTarget, handler: OnGestureHandler) => void;\n\n  /**\n   * This is the same as {@link onGesture} except that if `handler` is not\n   * given, then it defaults to an internal handler that updates a set of CSS\n   * variables on the target's style:\n   *\n   *   - `--lisn-js--<Intent>-delta-x`\n   *   - `--lisn-js--<Intent>-delta-y`\n   *   - `--lisn-js--<Intent>-delta-z`\n   *\n   * where and `<Intent>` is one of {@link GestureIntent} and the delta X, Y\n   * and Z are the _total summed up_ `deltaX`, `deltaY` and `deltaZ` since the\n   * callback was added, summed over all devices used (key, touch, etc).\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackGesture} or using\n   * {@link onGesture}, then it will be removed and re-added with the current\n   * options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly trackGesture: (\n    element: Element,\n    handler?: OnGestureHandler | null,\n    options?: OnGestureOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackGesture}.\n   */\n  readonly noTrackGesture: (\n    element: Element,\n    handler?: OnGestureHandler | null,\n  ) => void;\n\n  /**\n   * Creates a new instance of GestureWatcher with the given\n   * {@link GestureWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: GestureWatcherConfig = {}) {\n    return new GestureWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of GestureWatcher with the given\n   * {@link GestureWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: GestureWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new GestureWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: GestureWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"GestureWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"GestureWatcher\", logAtCreation: config })\n      : null;\n\n    const allCallbacks = newXWeakMap<\n      EventTarget,\n      Map<\n        OnGestureHandler,\n        {\n          _callback: OnGestureCallback;\n          _wrapper: OnGestureHandlerWrapper;\n          _options: OnGestureOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    // For each target and event type, add only 1 global listener that will then\n    // manage the event queues and callbacks.\n    const allListeners = newXWeakMap<\n      EventTarget,\n      Map<GestureDevice, DeviceListeners>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const createCallback = (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      options: OnGestureOptionsInternal,\n    ): OnGestureCallback => {\n      MH.remove(allCallbacks.get(target)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler for\", options);\n      const { _callback, _wrapper } = getCallbackAndWrapper(\n        handler,\n        options,\n        logger,\n      );\n\n      _callback.onRemove(() => deleteHandler(target, handler, options));\n\n      allCallbacks.sGet(target).set(handler, {\n        _callback,\n        _wrapper,\n        _options: options,\n      });\n\n      return _callback;\n    };\n\n    // ----------\n\n    // async for consistency with other watchers and future compatibility in\n    // case of change needed\n    const setupOnGesture = async (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      userOptions: OnGestureOptions | undefined,\n    ) => {\n      const options = getOptions(config, userOptions || {});\n      createCallback(target, handler, options);\n\n      for (const device of options._devices || DEVICES) {\n        let listeners = allListeners.get(target)?.get(device);\n        if (listeners) {\n          debug: logger?.debug4(\n            `Listeners already added for ${device}`,\n            target,\n            options,\n          );\n        } else {\n          debug: logger?.debug4(\n            `Adding listeners for ${device}`,\n            target,\n            options,\n          );\n\n          listeners = setupListeners(target, device, options);\n          allListeners.sGet(target).set(device, listeners);\n        }\n\n        listeners._nCallbacks++;\n        if (options._preventDefault) {\n          listeners._nPreventDefault++;\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      options: OnGestureOptionsInternal,\n    ) => {\n      MH.deleteKey(allCallbacks.get(target), handler);\n      allCallbacks.prune(target);\n\n      for (const device of options._devices || DEVICES) {\n        const listeners = allListeners.get(target)?.get(device);\n        if (listeners) {\n          listeners._nCallbacks--;\n          if (options._preventDefault) {\n            listeners._nPreventDefault--;\n          }\n\n          if (!listeners._nCallbacks) {\n            debug: logger?.debug4(\n              `No more callbacks for target and device ${device}; removing listeners`,\n              target,\n            );\n\n            MH.deleteKey(allListeners.get(target), device);\n            listeners._remove();\n          }\n        }\n      }\n    };\n\n    // ----------\n\n    const invokeCallbacks = (\n      target: EventTarget,\n      device: GestureDevice,\n      event: Event,\n    ): boolean /* true if terminated */ => {\n      const preventDefault =\n        (allListeners.get(target)?.get(device)?._nPreventDefault || 0) > 0;\n\n      let isTerminated = false;\n      for (const { _wrapper } of allCallbacks.get(target)?.values() || []) {\n        isTerminated =\n          _wrapper(target, device, event, preventDefault) || isTerminated;\n      }\n\n      return isTerminated;\n    };\n\n    // ----------\n\n    const setupListeners = (\n      target: EventTarget,\n      device: GestureDevice,\n      options: OnGestureOptionsInternal,\n    ): DeviceListeners => {\n      const intents = options._intents;\n      let hasAddedTabIndex = false;\n      let hasPreventedSelect = false;\n\n      if (\n        device === MC.S_KEY &&\n        MH.isElement(target) &&\n        !MH.getTabIndex(target)\n      ) {\n        hasAddedTabIndex = true;\n        // enable element to receive keydown events\n        MH.setTabIndex(target);\n      } else if (MH.isElement(target) && device === MC.S_TOUCH) {\n        if (options._preventDefault) {\n          addClasses(target, MC.PREFIX_NO_TOUCH_ACTION);\n        }\n\n        if (!intents || MH.includes(intents, MC.S_DRAG)) {\n          hasPreventedSelect = true;\n          preventSelect(target);\n        }\n      }\n\n      const addOrRemoveListeners = (\n        action: \"add\" | \"remove\",\n        listener: EventListener,\n        eventTypes: readonly (keyof GlobalEventHandlersEventMap)[],\n      ) => {\n        const method =\n          action === \"add\" ? addEventListenerTo : removeEventListenerFrom;\n        for (const eventType of eventTypes) {\n          debug: logger?.debug8(`${action} listener for ${eventType}`, target);\n          method(target, eventType, listener, {\n            passive: false,\n            capture: true,\n          });\n        }\n      };\n\n      const addInitialListener = () =>\n        addOrRemoveListeners(\"add\", initialListener, initiatingEvents[device]);\n\n      const removeInitialListener = () =>\n        addOrRemoveListeners(\n          \"remove\",\n          initialListener,\n          initiatingEvents[device],\n        );\n\n      const addOngoingListener = () =>\n        addOrRemoveListeners(\"add\", processEvent, ongoingEvents[device]);\n\n      const removeOngoingListener = () =>\n        addOrRemoveListeners(\"remove\", processEvent, ongoingEvents[device]);\n\n      const initialListener = (event: Event) => {\n        processEvent(event);\n        removeInitialListener();\n        addOngoingListener();\n      };\n\n      const processEvent = (event: Event) => {\n        const isTerminated = invokeCallbacks(target, device, event);\n        if (isTerminated) {\n          removeOngoingListener();\n          addInitialListener();\n        }\n      };\n\n      addInitialListener();\n\n      return {\n        _nCallbacks: 0,\n        _nPreventDefault: 0,\n        _remove: () => {\n          if (MH.isElement(target)) {\n            if (hasAddedTabIndex) {\n              MH.unsetTabIndex(target);\n            }\n\n            removeClasses(target, MC.PREFIX_NO_TOUCH_ACTION);\n\n            if (hasPreventedSelect) {\n              undoPreventSelect(target);\n            }\n          }\n\n          removeOngoingListener();\n          removeInitialListener();\n        },\n      };\n    };\n\n    // ----------\n\n    this.trackGesture = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setGestureCssProps;\n        // initial values\n        for (const intent of INTENTS) {\n          setGestureCssProps(element, {\n            intent,\n            totalDeltaX: 0,\n            totalDeltaY: 0,\n            totalDeltaZ: 1,\n          });\n        }\n      }\n\n      return setupOnGesture(element, handler, options);\n    };\n\n    // ----------\n\n    this.noTrackGesture = (element, handler?) => {\n      if (!handler) {\n        handler = setGestureCssProps;\n\n        // delete the properties\n        for (const intent of INTENTS) {\n          setGestureCssProps(element, { intent });\n        }\n      }\n\n      this.offGesture(element, handler);\n    };\n\n    // ----------\n\n    this.onGesture = setupOnGesture;\n\n    // ----------\n\n    this.offGesture = (target, handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(target)?.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type GestureWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnGestureOptions.preventDefault | preventDefault} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.debounceWindow | debounceWindow} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 150\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.deltaThreshold | deltaThreshold} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 5\n   */\n  deltaThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.angleDiffThreshold | angleDiffThreshold} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * It does not make much sense to set this to 0.\n   *\n   * The value is in _degrees_, not radians.\n   *\n   * @defaultValue 35\n   */\n  angleDiffThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.naturalTouchScroll | naturalTouchScroll} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue true\n   */\n  naturalTouchScroll?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.touchDragHoldTime | touchDragHoldTime} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 500\n   */\n  touchDragHoldTime?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.touchDragNumFingers | touchDragNumFingers} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 1\n   */\n  touchDragNumFingers?: number;\n};\n\n/**\n * @interface\n */\nexport type OnGestureOptions = {\n  /**\n   * One or more device types to listen for. If not specified, then all devices\n   * are enabled.\n   *\n   * It can be a comma-separated list of {@link GestureDevice}s or an array of\n   * such devices.\n   *\n   * @defaultValue undefined\n   */\n  devices?: CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If given, callback will only be called if the gesture's direction is one\n   * of the given ones.\n   *\n   * It can be a comma-separated list of {@link Direction}s or an array of such\n   * directions.\n   *\n   * @defaultValue undefined\n   */\n  directions?: CommaSeparatedStr<Direction> | Direction[];\n\n  /**\n   * If given, callback will only be called if the gesture's intent is one\n   * of the given ones.\n   *\n   * It can be a comma-separated list of {@link GestureIntent}s or an\n   * array of such intents.\n   *\n   * @defaultValue undefined\n   */\n  intents?: CommaSeparatedStr<GestureIntent> | GestureIntent[];\n\n  /**\n   * Set minimum total delta X. Further reductions in delta X below this value\n   * will be ignored.\n   *\n   * The value is in pixels and can be negative.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaX?: number;\n\n  /**\n   * Set maximum total delta X. Further increase in delta X above this value\n   * will be ignored.\n   *\n   * The value is in pixels.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaX?: number;\n\n  /**\n   * Set minimum total delta Y. Further reductions in delta Y below this value\n   * will be ignored.\n   *\n   * The value is in pixels and can be negative.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaY?: number;\n\n  /**\n   * Set maximum total delta Y. Further increase in delta Y above this value\n   * will be ignored.\n   *\n   * The value is in pixels.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaY?: number;\n\n  /**\n   * Set minimum total delta Z. Further reductions in delta Z below this value\n   * will be ignored.\n   *\n   * The value is in percentage zoom, relative to 1, and can be less than 1 but\n   * must be > 0.1 which is a hard minimum.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaZ?: number;\n\n  /**\n   * Set maximum total delta Z. Further increase in delta Z above this value\n   * will be ignored.\n   *\n   * The value is in percentage zoom, relative to 1, and must be positive.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaZ?: number;\n\n  /**\n   * If true, the events of the gesture, e.g. relevant key presses or touch\n   * moves, etc, will have their default action prevented.\n   *\n   * **IMPORTANT:** For pointer gestures, then pointer/mouse down and click\n   * will be prevented.\n   *\n   * @defaultValue {@link GestureWatcherConfig.preventDefault}\n   */\n  preventDefault?: boolean;\n\n  /**\n   * If given, callback will be called at most once every `debounceWindow`\n   * milliseconds.\n   *\n   * Note that if both `debounceWindow` and `deltaThreshold` are set, _both_\n   * must be exceeded before callback is called.\n   *\n   * @defaultValue {@link GestureWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n\n  /**\n   * Callback will only be called when the gesture's accumulated delta, since\n   * the last time callback was called, exceeds `deltaThreshold`.\n   *\n   * At least one of the three deltas (X, Y or Z) must exceed this number (in\n   * absolute value). Note that when comparing `deltaZ`, it is multiplied by\n   * 100 since it represents fractions of 1 (100%). So supplying\n   * `deltaThreshold` of 10 means is equivalent to the following condition:\n   *\n   * ```\n   * abs(deltaX) >= 10 || abs(deltaY) >= 10 ||  abs(1 - deltaZ) >= 0.1\n   * ```\n   *\n   * Accumulation of the delta ends if the gesture is terminated, for example,\n   * in case of touch gestures, by a \"touchcancel\" event of by the final finger\n   * lifting off..\n   *\n   * Note that if both `debounceWindow` and `deltaThreshold` are set, _both_\n   * must be exceeded before callback is called.\n   *\n   * @defaultValue {@link GestureWatcherConfig.deltaThreshold}\n   */\n  deltaThreshold?: number;\n\n  /**\n   * See {@link Utils.getVectorDirection | getVectorDirection}.\n   *\n   * @defaultValue {@link GestureWatcherConfig.angleDiffThreshold}\n   */\n  angleDiffThreshold?: number;\n\n  /**\n   * Whether touch scroll gestures follow the natural direction: swipe up\n   * with scroll intent results in direction down and swipe down results in\n   * direction up.\n   *\n   * @defaultValue {@link GestureWatcherConfig.naturalTouchScroll}\n   */\n  naturalTouchScroll?: boolean;\n\n  /**\n   * If the user presses and holds on a touchscreen for at least the given\n   * amount of milliseconds before moving the finger(s), touch gestures other\n   * than pinch will be treated as a drag intent instead of scroll as long as\n   * the number of fingers touching the screen is {@link touchDragNumFingers}.\n   *\n   * Set to 0 in order to treat _all_ non-pinch touch gestures as drag.\n   *\n   * Set to a negative number in order to treat _all_ non-pinch touch gestures\n   * as scroll.\n   *\n   * @defaultValue {@link GestureWatcherConfig.touchDragHoldTime}\n   */\n  touchDragHoldTime?: number;\n\n  /**\n   * The number of fingers that could be considered a drag intent for touch\n   * gestures.\n   *\n   * @defaultValue {@link GestureWatcherConfig.touchDragHoldTime}\n   */\n  touchDragNumFingers?: number;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the event target that was passed to the {@link GestureWatcher.onGesture}\n *   call (equivalent to\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget | Event:currentTarget}).\n * - the {@link GestureData} that describes the gesture's progression since the\n *   last time the callback was called and since the callback was added.\n */\nexport type OnGestureHandlerArgs = [EventTarget, GestureData, Event[]];\nexport type OnGestureCallback = Callback<OnGestureHandlerArgs>;\nexport type OnGestureHandler =\n  | CallbackHandler<OnGestureHandlerArgs>\n  | OnGestureCallback;\n\nexport type GestureData = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n\n  /**\n   * Delta in the horizontal direction since the start of the gesture.\n   */\n  deltaX: number;\n\n  /**\n   * Delta in the vertical direction since the start of the gesture.\n   */\n  deltaY: number;\n\n  /**\n   * Relative fractional zoom in or out for zoom intents since the start of\n   * the gesture.\n   *\n   * For zoom in, `deltaZ` is always > 1, and for zoom out it is < 1.\n   *\n   * For non-zoom gestures it is 1.\n   */\n  deltaZ: number;\n\n  /**\n   * The time in milliseconds it took for the gesture. This will be the\n   * difference in timestamps between the first and last event that composed\n   * the gesture. For key and wheel gestures this could be 0, since 1 event is\n   * sufficient for them.\n   */\n  time: number;\n  // TODO totalTime, velocity (bound by max), averageVelocity (bound by max)\n\n  /**\n   * Delta in the horizontal direction since the callback was added.\n   */\n  totalDeltaX: number;\n\n  /**\n   * Delta in the vertical direction since the callback was added.\n   */\n  totalDeltaY: number;\n\n  /**\n   * Percentage (relative) zoom in or out for zoom intents since the callback\n   * was added.\n   */\n  totalDeltaZ: number;\n};\n\n// ----------------------------------------\n\ntype GestureWatcherConfigInternal = {\n  _preventDefault: boolean;\n  _debounceWindow: number;\n  _deltaThreshold: number;\n  _angleDiffThreshold: number;\n  _naturalTouchScroll: boolean;\n  _touchDragHoldTime: number;\n  _touchDragNumFingers: number;\n};\n\ntype OnGestureOptionsInternal = {\n  _devices: GestureDevice[] | null;\n  _directions: Direction[] | null;\n  _intents: GestureIntent[] | null;\n  _minTotalDeltaX: number | null;\n  _maxTotalDeltaX: number | null;\n  _minTotalDeltaY: number | null;\n  _maxTotalDeltaY: number | null;\n  _minTotalDeltaZ: number | null;\n  _maxTotalDeltaZ: number | null;\n  _preventDefault: boolean;\n  _debounceWindow: number;\n  _deltaThreshold: number;\n  _angleDiffThreshold: number;\n  _naturalTouchScroll: boolean;\n  _touchDragHoldTime: number;\n  _touchDragNumFingers: number;\n};\n\ntype OnGestureHandlerWrapper = (\n  _target: EventTarget,\n  _device: GestureDevice,\n  _event: Event,\n  _preventDefault: boolean,\n) => boolean;\n\n// Specific to a combination of target + device\ntype DeviceListeners = {\n  _nCallbacks: number; // total number of callbacks\n  _nPreventDefault: number; // total number wanting to prevent default action\n  _remove: () => void;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, GestureWatcher>();\n\nconst getConfig = (\n  config: GestureWatcherConfig,\n): GestureWatcherConfigInternal => {\n  return {\n    _preventDefault: config.preventDefault ?? true,\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 150),\n    _deltaThreshold: toNonNegNum(config.deltaThreshold, 5),\n    _angleDiffThreshold: toPosNum(config.angleDiffThreshold, 35),\n    _naturalTouchScroll: config.naturalTouchScroll ?? true,\n    _touchDragHoldTime: config.touchDragHoldTime ?? 500,\n    _touchDragNumFingers: config.touchDragNumFingers ?? 1,\n  };\n};\n\nconst initiatingEvents: {\n  [D in GestureDevice]: readonly (keyof GlobalEventHandlersEventMap)[];\n} = {\n  key: [MC.S_KEYDOWN],\n  // If the browser doesn't support pointer events, then\n  // addEventListenerTo will transform it into mousedown\n  //\n  // We need to listen for click, since that occurs after a pointerup (i.e.\n  // after a gesure is terminated and the ongoing listeners removed), but it\n  // needs to have its default action prevented.\n  pointer: [MC.S_POINTERDOWN, MC.S_CLICK],\n  touch: [MC.S_TOUCHSTART],\n  wheel: [MC.S_WHEEL],\n} as const;\n\nconst ongoingEvents: {\n  [D in GestureDevice]: readonly (keyof GlobalEventHandlersEventMap)[];\n} = {\n  key: [MC.S_KEYDOWN],\n  pointer: [\n    // If the browser doesn't support point events, then\n    // addEventListenerTo will transform them into mouse*\n    MC.S_POINTERDOWN,\n    MC.S_POINTERUP, // would terminate\n    MC.S_POINTERMOVE,\n    MC.S_POINTERCANCEL, // would terminate\n    MC.S_CLICK, // would terminate; can be default-prevented\n  ],\n  touch: [MC.S_TOUCHSTART, MC.S_TOUCHEND, MC.S_TOUCHMOVE, MC.S_TOUCHCANCEL],\n  wheel: [MC.S_WHEEL],\n} as const;\n\nconst fragmentGetters: {\n  [D in GestureDevice]: (\n    events: Event[],\n    options: {\n      deltaThreshold?: number;\n      angleDiffThreshold?: number;\n      reverseScroll?: boolean;\n      dragHoldTime?: number;\n      dragNumFingers?: number;\n    },\n  ) => GestureFragment | null | false;\n} = {\n  [MC.S_KEY]: getKeyGestureFragment,\n  [MC.S_POINTER]: getPointerGestureFragment,\n  [MC.S_TOUCH]: getTouchGestureFragment,\n  [MC.S_WHEEL]: getWheelGestureFragment,\n};\n\nconst getOptions = (\n  config: GestureWatcherConfigInternal,\n  options: OnGestureOptions,\n): OnGestureOptionsInternal => {\n  const debounceWindow = toNonNegNum(\n    options[MC.S_DEBOUNCE_WINDOW],\n    config._debounceWindow, // watcher is never debounced, so apply default here\n  );\n  const deltaThreshold = toNonNegNum(\n    options.deltaThreshold,\n    config._deltaThreshold,\n  );\n\n  return {\n    _devices:\n      validateStrList(\"devices\", options.devices, isValidInputDevice) || null,\n    _directions:\n      validateStrList(\"directions\", options.directions, isValidDirection) ||\n      null,\n    _intents:\n      validateStrList(\"intents\", options.intents, isValidIntent) || null,\n    _minTotalDeltaX: options.minTotalDeltaX ?? null,\n    _maxTotalDeltaX: options.maxTotalDeltaX ?? null,\n    _minTotalDeltaY: options.minTotalDeltaY ?? null,\n    _maxTotalDeltaY: options.maxTotalDeltaY ?? null,\n    _minTotalDeltaZ: options.minTotalDeltaZ ?? null,\n    _maxTotalDeltaZ: options.maxTotalDeltaZ ?? null,\n    _preventDefault: options.preventDefault ?? config._preventDefault,\n    _debounceWindow: debounceWindow,\n    _deltaThreshold: deltaThreshold,\n    _angleDiffThreshold: toNonNegNum(\n      options.angleDiffThreshold,\n      config._angleDiffThreshold,\n    ),\n    _naturalTouchScroll:\n      options.naturalTouchScroll ?? config._naturalTouchScroll,\n    _touchDragHoldTime: options.touchDragHoldTime ?? config._touchDragHoldTime,\n    _touchDragNumFingers:\n      options.touchDragNumFingers ?? config._touchDragNumFingers,\n  };\n};\n\n// Since each callback needs to accumulate events during its debounce window\n// and until its threshold is exceeded, we use a wrapper around the\n// user-supplied handler to do that.\nconst getCallbackAndWrapper = (\n  handler: OnGestureHandler,\n  options: OnGestureOptionsInternal,\n  logger: LoggerInterface | null,\n): { _callback: OnGestureCallback; _wrapper: OnGestureHandlerWrapper } => {\n  let totalDeltaX = 0,\n    totalDeltaY = 0,\n    totalDeltaZ = 1;\n  // When there's a pointer down, drag then pointerup, since we prevent\n  // pointerdown default action, this results in a click event shortly\n  // afterwards even when there's been a movement of the mouse. We detect that\n  // and prevent this click.\n  let preventNextClick = false;\n\n  const directions = options._directions;\n  const intents = options._intents;\n  const minTotalDeltaX = options._minTotalDeltaX;\n  const maxTotalDeltaX = options._maxTotalDeltaX;\n  const minTotalDeltaY = options._minTotalDeltaY;\n  const maxTotalDeltaY = options._maxTotalDeltaY;\n  const minTotalDeltaZ = options._minTotalDeltaZ;\n  const maxTotalDeltaZ = options._maxTotalDeltaZ;\n  const deltaThreshold = options._deltaThreshold;\n  const angleDiffThreshold = options._angleDiffThreshold;\n  const reverseScroll = !options._naturalTouchScroll;\n  const dragHoldTime = options._touchDragHoldTime;\n  const dragNumFingers = options._touchDragNumFingers;\n\n  // The event queue is cleared when the threshold is exceeded AND the debounce\n  // window has passed. It's not necessary for the actual handler to be called\n  // then (e.g. if the direction or intent doesn't match, it won't be).\n  const eventQueue: Event[] = [];\n  const id = randId();\n\n  // Since handler could be a function or a callback (not callable), we wrap it\n  // so that in case it's already a callback, its removal will result in\n  // deleteHandler getting called. It is not debounced itself, instead there's\n  // a debounced wrapper that invokes it.\n  const callback = wrapCallback(handler);\n\n  // The debounced callback wrapper is what is debounced.\n  // It accumulates total deltas and checks if the conditions (of threshold,\n  // direction and intent) are satisfied before calling the real handler.\n  //\n  // Most importantly, since it is only called when the debounce window has\n  // expired it can clear the event queue if the threshold is also exceeded.\n  const debouncedWrapper = getDebouncedHandler(\n    options._debounceWindow,\n    (\n      target: EventTarget,\n      fragment: GestureFragment,\n      eventQueueCopy: Event[],\n    ) => {\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      const deltaX = fragment.deltaX;\n      const deltaY = fragment.deltaY;\n      const deltaZ = fragment.deltaZ;\n      const device = fragment.device;\n\n      if (\n        MH.round(maxAbs(deltaX, deltaY, (1 - deltaZ) * 100)) < deltaThreshold\n      ) {\n        debug: logger?.debug7(\n          `[${id}] Delta threshold not exceeded for callback`,\n        );\n        return;\n      }\n\n      debug: logger?.debug9(`[${id}] Done summing events for ${device}`);\n      clearEventQueue(device, eventQueue);\n\n      const newTotalDeltaX = toNumWithBounds(totalDeltaX + deltaX, {\n        min: minTotalDeltaX,\n        max: maxTotalDeltaX,\n      });\n\n      const newTotalDeltaY = toNumWithBounds(totalDeltaY + deltaY, {\n        min: minTotalDeltaY,\n        max: maxTotalDeltaY,\n      });\n\n      const newTotalDeltaZ = toNumWithBounds(addDeltaZ(totalDeltaZ, deltaZ), {\n        min: minTotalDeltaZ,\n        max: maxTotalDeltaZ,\n      });\n\n      if (\n        newTotalDeltaX === totalDeltaX &&\n        newTotalDeltaY === totalDeltaY &&\n        newTotalDeltaZ === totalDeltaZ\n      ) {\n        return;\n      }\n\n      totalDeltaX = newTotalDeltaX;\n      totalDeltaY = newTotalDeltaY;\n      totalDeltaZ = newTotalDeltaZ;\n\n      const direction = fragment.direction;\n      const intent = fragment.intent;\n      const time =\n        eventQueueCopy[MH.lengthOf(eventQueueCopy) - 1]?.timeStamp -\n          eventQueueCopy[0]?.timeStamp || 0;\n\n      const data = {\n        device,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n        time,\n        totalDeltaX,\n        totalDeltaY,\n        totalDeltaZ,\n      };\n\n      if (\n        direction !== MC.S_NONE &&\n        (!directions || MH.includes(directions, direction)) &&\n        (!intents || MH.includes(intents, intent))\n      ) {\n        callback.invoke(target, data, eventQueueCopy).catch(logError);\n      } else {\n        debug: logger?.debug7(\n          `[${id}] Directions or intents not matching for callback`,\n        );\n      }\n    },\n  );\n\n  // This wrapper is NOT debounced and adds the events to the queue, prevents\n  // default action if needed, and indicates whether the gesture is terminated.\n  const wrapper = (\n    target: EventTarget,\n    device: GestureDevice,\n    event: Event,\n    preventDefault: boolean,\n  ) => {\n    eventQueue.push(event);\n\n    const fragment = fragmentGetters[device](eventQueue, {\n      angleDiffThreshold,\n      deltaThreshold,\n      reverseScroll,\n      dragHoldTime,\n      dragNumFingers,\n    });\n\n    debug: logger?.debug8(\n      `[${id}] Got fragment for ${device} (${event.type})`,\n      fragment,\n      [...eventQueue].map((e) => e.type),\n    );\n\n    if (preventDefault) {\n      preventDefaultActionFor(\n        event,\n        !!fragment || (event.type === MC.S_CLICK && preventNextClick),\n      );\n    }\n\n    if (fragment === false) {\n      // not enough events in the queue, pass\n      debug: logger?.debug9(`[${id}] Not enough events for gesture ${device}`);\n      return false;\n    } else if (fragment === null) {\n      // consider the gesture terminated\n      clearEventQueue(device, eventQueue);\n      debug: logger?.debug9(`[${id}] Gesture for ${device} terminated`);\n      return true;\n    }\n\n    if (device === MC.S_POINTER) {\n      // If we're here, there's been a drag, expect a click immediately\n      // afterwards and prevent default action.\n      preventNextClick = true;\n      MH.setTimer(() => {\n        preventNextClick = false;\n      }, 10);\n    }\n\n    debouncedWrapper(\n      target,\n      fragment,\n      [...eventQueue], // copy\n    );\n\n    return false;\n  };\n\n  return { _callback: callback, _wrapper: wrapper };\n};\n\nconst clearEventQueue = (device: GestureDevice, queue: Event[]) => {\n  const keepLastEvent = device === MC.S_POINTER || device === MC.S_TOUCH;\n  queue.splice(0, MH.lengthOf(queue) - (keepLastEvent ? 1 : 0));\n};\n\nconst preventDefaultActionFor = (event: Event, isActualGesture: boolean) => {\n  const target = event.currentTarget;\n  const eventType = event.type;\n  const isPointerDown =\n    eventType === MC.S_POINTERDOWN || eventType === MC.S_MOUSEDOWN;\n\n  if (\n    eventType === MC.S_TOUCHMOVE ||\n    eventType === MC.S_WHEEL ||\n    ((eventType === MC.S_CLICK || eventType === MC.S_KEYDOWN) &&\n      isActualGesture) ||\n    (isPointerDown && (event as MouseEvent).buttons === 1)\n  ) {\n    MH.preventDefault(event);\n\n    if (isPointerDown && MH.isHTMLElement(target)) {\n      // Otherwise capturing key events won't work\n      target.focus({ preventScroll: true });\n    }\n  }\n};\n\nconst setGestureCssProps = (\n  target: EventTarget,\n  data: Partial<GestureData>,\n) => {\n  const intent = data.intent;\n\n  if (!MH.isElement(target) || !intent || intent === MC.S_UNKNOWN) {\n    return;\n  }\n\n  const prefix = `${intent}-`;\n\n  if (intent === MC.S_ZOOM) {\n    setNumericStyleJsVars(\n      target,\n      {\n        deltaZ: data.totalDeltaZ,\n      },\n      {\n        _prefix: prefix,\n        _numDecimal: 2,\n      },\n    ); // don't await here\n  } else {\n    setNumericStyleJsVars(\n      target,\n      {\n        deltaX: data.totalDeltaX,\n        deltaY: data.totalDeltaY,\n      },\n      {\n        _prefix: prefix,\n      },\n    ); // don't await here\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { sortedKeysByVal } from \"@lisn/utils/math\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  BitSpace,\n  newBitSpaces,\n  createBitSpace,\n} from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid device name.\n *\n * @category Validation\n */\nexport const isValidDevice = (device: string): device is Device =>\n  ORDERED_DEVICES.has(device);\n\n/**\n * Returns true if the given string is a valid aspect ratio name.\n *\n * @category Validation\n */\nexport const isValidAspectRatio = (\n  aspectRatio: string,\n): aspectRatio is AspectRatio => ORDERED_ASPECTR.has(aspectRatio);\n\n/**\n * Returns true if the given string is a valid device specification (including\n * `\"min <Device>\"`, etc).\n *\n * Returns false for \"\", although if you passed \"\" in\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} it would\n * accept it as specifying _all_ devices.\n *\n * @category Validation\n */\nexport const isValidDeviceList = (\n  device: string | string[],\n): device is DeviceSpec | Device[] =>\n  isValidForType(S_DEVICES, device, ORDERED_DEVICES);\n\n/**\n * Returns true if the given string is a valid aspect ratio specification\n * (including `\"min <AspectRatio>\"`, etc).\n *\n * Returns false for \"\", although if you passed \"\" in\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} it would\n * accept it as specifying _all_ aspect ratios.\n *\n * @category Validation\n */\nexport const isValidAspectRatioList = (\n  aspectR: string | string[],\n): aspectR is AspectRatioSpec | AspectRatio[] =>\n  isValidForType(S_ASPECTRS_CAMEL, aspectR, ORDERED_ASPECTR);\n\n/**\n * Returns a list of {@link Device}s that are not covered by the given device\n * specification. See\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for accepted\n * formats.\n *\n * Returns an empty for \"\" or for a specification that includes all devices.\n *\n * @category Layout\n */\nexport const getOtherDevices = (device: DeviceSpec | Device[]): Device[] =>\n  getOtherLayouts(S_DEVICES, device, ORDERED_DEVICES);\n\n/**\n * Returns a list of {@link AspectRatio}s that are not covered by the given\n * aspect ratio specification. See\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for accepted\n * formats.\n *\n * Returns an empty for \"\" or for a specification that includes all aspect\n * ratios.\n *\n * @category Layout\n */\nexport const getOtherAspectRatios = (\n  aspectR: AspectRatioSpec | AspectRatio[],\n): AspectRatio[] => getOtherLayouts(S_ASPECTRS_CAMEL, aspectR, ORDERED_ASPECTR);\n\n/**\n * @ignore\n * @internal\n */\nexport const getLayoutBitmask = (options?: {\n  devices?: DeviceSpec | Device[];\n  aspectRatios?: AspectRatioSpec | AspectRatio[];\n}): number => {\n  let layoutBitmask =\n    getBitmaskFromSpec(S_DEVICES, options?.devices, ORDERED_DEVICES) |\n    getBitmaskFromSpec(\n      S_ASPECTRS_CAMEL,\n      options?.aspectRatios,\n      ORDERED_ASPECTR,\n    );\n\n  if (!layoutBitmask) {\n    layoutBitmask = ORDERED_DEVICES.bitmask | ORDERED_ASPECTR.bitmask; // default: all\n  }\n\n  return layoutBitmask;\n};\n\n// In ascending order by width.\nconst ORDERED_DEVICE_NAMES = sortedKeysByVal(settings.deviceBreakpoints);\nconst ORDERED_ASPECTR_NAMES = sortedKeysByVal(settings.aspectRatioBreakpoints);\n\nconst bitSpaces = newBitSpaces();\n\n/**\n * @ignore\n * @internal\n */\nexport const ORDERED_DEVICES = createBitSpace(\n  bitSpaces,\n  ...ORDERED_DEVICE_NAMES,\n);\n\n/**\n * @ignore\n * @internal\n */\nexport const ORDERED_ASPECTR = createBitSpace(\n  bitSpaces,\n  ...ORDERED_ASPECTR_NAMES,\n);\n\n/**\n * @ignore\n * @internal\n */\nexport const NUM_LAYOUTS =\n  MH.lengthOf(ORDERED_DEVICE_NAMES) + MH.lengthOf(ORDERED_ASPECTR_NAMES);\n\n// --------------------\n\nconst S_DEVICES = \"devices\";\nconst S_ASPECTRS_CAMEL = \"aspectRatios\";\n\n// Don't use capture groups for old browser support\nconst LAYOUT_RANGE_REGEX = RegExp(\n  \"^ *(?:\" +\n    \"([a-z-]+) +to +([a-z-]+)|\" +\n    \"min +([a-z-]+)|\" +\n    \"max +([a-z-]+)\" +\n    \") *$\",\n);\n\nconst getLayoutsFromBitmask = <T extends Device | AspectRatio>(\n  keyName: string,\n  bitmask: number,\n  bitSpace: BitSpace<T>,\n): T[] => {\n  const layouts: T[] = [];\n  for (let bit = bitSpace.start; bit <= bitSpace.end; bit++) {\n    const value = 1 << bit;\n    if (bitmask & value) {\n      const name = bitSpace.nameOf(value);\n      if (name) {\n        layouts.push(name);\n      }\n    }\n  }\n\n  return layouts;\n};\n\nconst getOtherLayouts = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[],\n  bitSpace: BitSpace<T>,\n): T[] => {\n  const bitmask = getBitmaskFromSpec(keyName, spec, bitSpace);\n  if (!bitmask) {\n    return [];\n  }\n\n  const oppositeBitmask = bitSpace.bitmask & ~bitmask;\n  return getLayoutsFromBitmask(keyName, oppositeBitmask, bitSpace);\n};\n\nconst isValidForType = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[],\n  bitSpace: BitSpace<T>,\n): boolean => {\n  try {\n    const bitmask = getBitmaskFromSpec(keyName, spec, bitSpace);\n    return bitmask !== 0;\n  } catch (err) {\n    if (MH.isInstanceOf(err, LisnUsageError)) {\n      return false;\n    }\n    throw err;\n  }\n};\n\nconst getBitmaskFromSpec = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[] | undefined | null,\n  bitSpace: BitSpace<T>,\n): number => {\n  if (MH.isEmpty(spec)) {\n    return 0;\n  }\n  const singleKeyName = keyName.slice(0, -1);\n\n  if (MH.isString(spec)) {\n    const rangeMatch = spec.match(LAYOUT_RANGE_REGEX);\n    if (rangeMatch) {\n      const minLayout = rangeMatch[1] || rangeMatch[3];\n      const maxLayout = rangeMatch[2] || rangeMatch[4];\n\n      if (minLayout !== undefined && !bitSpace.has(minLayout)) {\n        throw MH.usageError(`Unknown ${singleKeyName} '${minLayout}'`);\n      }\n\n      if (maxLayout !== undefined && !bitSpace.has(maxLayout)) {\n        throw MH.usageError(`Unknown ${singleKeyName} '${maxLayout}'`);\n      }\n\n      return bitSpace.bitmaskFor(minLayout, maxLayout);\n    }\n  }\n\n  let bitmask = 0;\n  const layouts = validateStrList(keyName, spec, bitSpace.has);\n  if (layouts) {\n    for (const lt of layouts) {\n      bitmask |= bitSpace.bit[lt];\n    }\n  }\n\n  return bitmask;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  ScrollDirection,\n  ScrollTarget,\n  TargetCoordinates,\n  CoordinateOffset,\n  ScrollPosition,\n  Offset,\n} from \"@lisn/globals/types\";\n\nimport { getComputedStylePropNow } from \"@lisn/utils/css-alter\";\nimport { SCROLL_DIRECTIONS } from \"@lisn/utils/directions\";\nimport {\n  waitForInteractive,\n  waitForElementOrInteractive,\n} from \"@lisn/utils/dom-events\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { maxAbs, easeInOutQuad } from \"@lisn/utils/math\";\nimport { waitForAnimationFrame } from \"@lisn/utils/tasks\";\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Scrolling\n */\nexport type ScrollAction = {\n  cancel: () => boolean;\n\n  /**\n   * Will reject if the scroll is cancelled.\n   */\n  waitFor: () => Promise<ScrollPosition>;\n};\n\n/**\n * @category Scrolling\n * @interface\n */\nexport type ScrollToOptions = {\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue If `document.body` is scrollable, will use that; otherwise `document.scrollingElement`\n   */\n  scrollable?: Element;\n\n  /**\n   * Offset the target coordinates by the given amount(s).\n   *\n   * E.g. if the final target coordinates are computed to be\n   * `{top: 100, left: 0}` and you specify offset as `{top: 10, left: 20}`, it\n   * will scroll to  `{top: 110, left: 20}`.\n   *\n   * @defaultValue undefined\n   */\n  offset?: CoordinateOffset;\n\n  // TODO maybe support fixed velocity as an alternative to fixed duration?\n  /**\n   * The duration of the scroll animation. If not given, it is instant.\n   *\n   * @defaultValue 0\n   */\n  duration?: number;\n\n  /**\n   * Whether another request to us to scroll the same target can interrupt this\n   * scroll before it finishes.\n   *\n   * @defaultValue false\n   */\n  weCanInterrupt?: boolean;\n\n  /**\n   * Whether a user attempt to scroll the target can interrupt this before it\n   * finishes.\n   *\n   * @defaultValue false\n   */\n  userCanInterrupt?: boolean;\n\n  /**\n   * If the scrolling element is already at the given coordinates (or strictly\n   * speaking we allow for 5 pixels difference), then if `altTarget` is given,\n   * this will become the target to scroll to.\n   *\n   * @defaultValue undefined\n   */\n  altTarget?: TargetCoordinates | Element | string;\n\n  /**\n   * Offset the target coordinates by the given amount(s) when `altTarget` is used.\n   *\n   * See {@link ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined\n   */\n  altOffset?: CoordinateOffset;\n};\n\n// ----------\n\n/**\n * Returns true if the given element is scrollable in the given direction, or\n * in either direction (if `axis` is not given).\n *\n * **IMPORTANT:** If you enable `active` then be aware that:\n * 1. It may attempt to scroll the target in order to determine whether it's\n *    scrollable in a more reliable way than the default method of comparing\n *    clientWidth/Height to scrollWidth/Height. If there is currently any\n *    ongoing scroll on the target, this will stop it, so never use that inside\n *    scroll-triggered handlers.\n * 2. If the layout has been invalidated and not yet recalculated,\n *    this will cause a forced layout, so always {@link waitForMeasureTime}\n *    before calling this function when possible.\n *\n * @param {} [options.axis]    One of \"x\" or \"y\" for horizontal or vertical\n *                             scroll respectively. If not given, it checks\n *                             both.\n * @param {} [options.active]  If true, then if the target's current scroll\n *                             offset is 0, it will attempt to scroll it rather\n *                             than looking at the clientWidth/Height to\n *                             scrollWidth/Height. This is more reliable but can\n *                             cause issues, see note above.\n * @param {} [options.noCache] By default the result of a check is cached for\n *                             1s and if there's already a cached result for\n *                             this element, it is returns. Set this to true to\n *                             disable checking the cache and also saving the\n *                             result into the cache.\n *\n * @category Scrolling\n */\nexport const isScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n): boolean => {\n  const { axis, active, noCache } = options || {};\n  if (!axis) {\n    return (\n      isScrollable(element, { axis: \"y\", active, noCache }) ||\n      isScrollable(element, { axis: \"x\", active, noCache })\n    );\n  }\n\n  if (!noCache) {\n    const cachedResult = isScrollableCache.get(element)?.get(axis);\n    if (!MH.isNullish(cachedResult)) {\n      return cachedResult;\n    }\n  }\n\n  const offset = axis === \"x\" ? \"Left\" : \"Top\";\n  let result = false;\n  let doCache = !noCache;\n\n  if (element[`scroll${offset}`]) {\n    result = true;\n  } else if (active) {\n    // Use scrollTo with explicit behavior set to instant instead of setting\n    // the scrollTop/Left properties since the latter doesn't work with\n    // scroll-behavior smooth.\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 1 });\n    const canScroll = element[`scroll${offset}`] > 0;\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 0 });\n    result = canScroll;\n  } else {\n    const dimension = axis === \"x\" ? \"Width\" : \"Height\";\n    result = element[`scroll${dimension}`] > element[`client${dimension}`];\n    // No need to cache a passive check.\n    doCache = false;\n  }\n\n  if (doCache) {\n    isScrollableCache.sGet(element).set(axis, result);\n    MH.setTimer(() => {\n      MH.deleteKey(isScrollableCache.get(element), axis);\n      isScrollableCache.prune(element);\n    }, IS_SCROLLABLE_CACHE_TIMEOUT);\n  }\n\n  return result;\n};\n\n/**\n * Returns the closest scrollable ancestor of the given element, _not including\n * it_.\n *\n * @param {} options See {@link isScrollable}\n *\n * @returns {} `null` if no scrollable ancestors are found.\n *\n * @category Scrolling\n */\nexport const getClosestScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n) => {\n  // Walk up the tree, starting at the element in question but excluding it.\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = MH.parentOf(ancestor))) {\n    if (isScrollable(ancestor, options)) {\n      return ancestor;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Returns the current {@link ScrollAction} if any.\n *\n * @category Scrolling\n */\nexport const getCurrentScrollAction = (\n  scrollable?: Element,\n): ScrollAction | null => {\n  scrollable = toScrollableOrDefault(scrollable);\n  const action = currentScrollAction.get(scrollable);\n  if (action) {\n    return MH.copyObject(action);\n  }\n  return null;\n};\n\n/**\n * Scrolls the given scrollable element to the given `to` target.\n *\n * Returns `null` if there's an ongoing scroll that is not cancellable.\n *\n * Note that if `to` is an element or a selector, then it _must_ be a\n * descendant of the scrollable element.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *               If the target coordinates are invalid.\n *\n * @param {} to  If this is an element, then its top-left position is used as\n *               the target coordinates. If it is a string, then it is treated\n *               as a selector for an element using `querySelector`.\n *\n * @returns {} `null` if there's an ongoing scroll that is not cancellable,\n * otherwise a {@link ScrollAction}.\n *\n * @category Scrolling\n */\nexport const scrollTo = (\n  to: TargetCoordinates | Element | string,\n  userOptions?: ScrollToOptions,\n): ScrollAction | null => {\n  const options = getOptions(to, userOptions);\n  const scrollable = options._scrollable;\n\n  // cancel current scroll action if any\n  const currentScroll = currentScrollAction.get(scrollable);\n  if (currentScroll) {\n    if (!currentScroll.cancel()) {\n      // current scroll action is not cancellable by us\n      return null;\n    }\n  }\n\n  let isCancelled = false;\n\n  const cancelFn = options._weCanInterrupt\n    ? () => (isCancelled = true)\n    : () => false;\n\n  const scrollEvents = [\"touchmove\", \"wheel\"]; // don't bother with keyboard\n  let preventScrollHandler: EventListener | null = null;\n\n  if (options._userCanInterrupt) {\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(\n        scrollable,\n        eventType,\n        () => {\n          isCancelled = true;\n        },\n        { once: true },\n      );\n    }\n  } else {\n    preventScrollHandler = MH.preventDefault;\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(scrollable, eventType, preventScrollHandler, {\n        passive: false,\n      });\n    }\n  }\n\n  const promise = initiateScroll(options, () => isCancelled);\n\n  const thisScrollAction: ScrollAction = {\n    waitFor: () => promise,\n    cancel: cancelFn,\n  };\n\n  const cleanup = () => {\n    if (currentScrollAction.get(scrollable) === thisScrollAction) {\n      MH.deleteKey(currentScrollAction, scrollable);\n    }\n\n    if (preventScrollHandler) {\n      for (const eventType of scrollEvents) {\n        removeEventListenerFrom(scrollable, eventType, preventScrollHandler, {\n          passive: false,\n        });\n      }\n    }\n  };\n\n  thisScrollAction.waitFor().then(cleanup).catch(cleanup);\n\n  currentScrollAction.set(scrollable, thisScrollAction);\n  return thisScrollAction;\n};\n\n/**\n * Returns true if the given string is a valid scroll direction.\n *\n * @category Validation\n */\nexport const isValidScrollDirection = (\n  direction: string,\n): direction is ScrollDirection => MH.includes(SCROLL_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid scroll\n * directions.\n *\n * @category Validation\n */\nexport const isValidScrollDirectionList = (directions: string | string[]) =>\n  isValidStrList(directions, isValidScrollDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const mapScrollable = (original: Element, actualScrollable: Element) =>\n  mappedScrollables.set(original, actualScrollable);\n\n/**\n * @ignore\n * @internal\n */\nexport const unmapScrollable = (original: Element) =>\n  MH.deleteKey(mappedScrollables, original);\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientWidthNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetWidth -\n      getBorderWidth(element, MC.S_LEFT) -\n      getBorderWidth(element, MC.S_RIGHT)\n    : element[MC.S_CLIENT_WIDTH];\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientHeightNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetHeight -\n      getBorderWidth(element, MC.S_TOP) -\n      getBorderWidth(element, MC.S_BOTTOM)\n    : element[MC.S_CLIENT_HEIGHT];\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainContentElement = (): HTMLElement | null =>\n  mainContentElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainContentElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainContentElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainScrollableElement = (): HTMLElement | null =>\n  mainScrollableElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainScrollableElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainScrollableElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultScrollingElement = () => {\n  const body = MH.getBody();\n  return isScrollable(body) ? body : MH.getDocScrollingElement() || body;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetScrollableElement = (\n  target: ScrollTarget | null | undefined,\n): Element | null => toScrollableOrMain(target, tryGetMainScrollableElement);\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchScrollableElement = async (\n  target: ScrollTarget | null | undefined,\n): Promise<Element> => toScrollableOrMain(target, fetchMainScrollableElement);\n\n// ----------------------------------------\n\ntype ScrollToOptionsInternal = {\n  _target: TargetCoordinates;\n  _offset: CoordinateOffset | null;\n  _altTarget: TargetCoordinates | null;\n  _altOffset: CoordinateOffset | null;\n  _scrollable: Element;\n  _duration: number;\n  _weCanInterrupt: boolean;\n  _userCanInterrupt: boolean;\n};\n\nconst IS_SCROLLABLE_CACHE_TIMEOUT = 1000;\n\nconst isScrollableCache = newXMap<Element, Map<\"x\" | \"y\", boolean>>(() =>\n  MH.newMap(),\n);\n\nconst mappedScrollables = MH.newMap<Element, Element>();\n\nconst currentScrollAction = MH.newMap<Element, ScrollAction>();\n\nconst DIFF_THRESHOLD = 5;\nconst arePositionsDifferent = (start: ScrollPosition, end: ScrollPosition) =>\n  maxAbs(start.top - end.top, start.left - end.left) >= DIFF_THRESHOLD;\n\nconst toScrollableOrMain = <R>(\n  target: ScrollTarget | null | undefined,\n  getMain: () => R,\n): Element | R => {\n  if (MH.isElement(target)) {\n    return mappedScrollables.get(target) || target;\n  }\n\n  if (!target || target === MH.getWindow() || target === MH.getDoc()) {\n    return getMain();\n  }\n\n  throw MH.usageError(\"Unsupported scroll target\");\n};\n\nconst toScrollableOrDefault = (scrollable: Element | undefined): Element =>\n  scrollable ?? getDefaultScrollingElement();\n\nconst getOptions = (\n  to: TargetCoordinates | Element | string,\n  options: ScrollToOptions | undefined,\n): ScrollToOptionsInternal => {\n  const scrollable = toScrollableOrDefault(options?.scrollable);\n  const target = getTargetCoordinates(scrollable, to);\n  const altTarget = options?.altTarget\n    ? getTargetCoordinates(scrollable, options?.altTarget)\n    : null;\n\n  return {\n    _target: target,\n    _offset: options?.offset || null,\n    _altTarget: altTarget,\n    _altOffset: options?.altOffset || null,\n    _scrollable: scrollable,\n    _duration: options?.duration || 0,\n    _weCanInterrupt: options?.weCanInterrupt ?? false,\n    _userCanInterrupt: options?.userCanInterrupt ?? false,\n  };\n};\n\nconst getTargetCoordinates = (\n  scrollable: Element,\n  target: TargetCoordinates | Element | string,\n): TargetCoordinates => {\n  const docScrollingElement = MH.getDocScrollingElement();\n\n  if (MH.isElement(target)) {\n    if (scrollable === target || !scrollable.contains(target)) {\n      throw MH.usageError(\"Target must be a descendant of the scrollable one\");\n    }\n\n    return {\n      top: () =>\n        scrollable[MC.S_SCROLL_TOP] +\n        MH.getBoundingClientRect(target).top -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).top),\n      left: () =>\n        scrollable[MC.S_SCROLL_LEFT] +\n        MH.getBoundingClientRect(target).left -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).left),\n    };\n  }\n\n  if (MH.isString(target)) {\n    const targetEl = MH.docQuerySelector(target);\n    if (!targetEl) {\n      throw MH.usageError(`No match for '${target}'`);\n    }\n\n    return getTargetCoordinates(scrollable, targetEl);\n  }\n\n  if (!MH.isObject(target) || !(\"top\" in target || \"left\" in target)) {\n    throw MH.usageError(\"Invalid coordinates\");\n  }\n\n  return target;\n};\n\nconst getStartEndPosition = async (\n  options: ScrollToOptionsInternal,\n): Promise<{ start: ScrollPosition; end: ScrollPosition }> => {\n  await waitForMeasureTime();\n\n  const applyOffset = (\n    position: ScrollPosition,\n    offset: CoordinateOffset | null,\n  ) => {\n    position.top += offset?.top || 0;\n    position.left += offset?.left || 0;\n  };\n\n  const scrollable = options._scrollable;\n  const start = {\n    top: scrollable[MC.S_SCROLL_TOP],\n    left: scrollable[MC.S_SCROLL_LEFT],\n  };\n\n  let end = getEndPosition(scrollable, start, options._target);\n  applyOffset(end, options._offset);\n\n  if (!arePositionsDifferent(start, end) && options._altTarget) {\n    end = getEndPosition(scrollable, start, options._altTarget);\n    applyOffset(end, options._altOffset);\n  }\n\n  return { start, end };\n};\n\n// must be called in \"measure time\"\nconst getEndPosition = (\n  scrollable: Element,\n  startPosition: ScrollPosition,\n  targetCoordinates: TargetCoordinates,\n): ScrollPosition => {\n  // by default no change in scroll top or left\n  const endPosition = MH.copyObject(startPosition);\n\n  if (!MH.isNullish(targetCoordinates?.top)) {\n    if (MH.isFunction(targetCoordinates.top)) {\n      endPosition.top = targetCoordinates.top(scrollable);\n    } else {\n      endPosition.top = targetCoordinates.top;\n    }\n  }\n\n  if (!MH.isNullish(targetCoordinates?.left)) {\n    if (MH.isFunction(targetCoordinates.left)) {\n      endPosition.left = targetCoordinates.left(scrollable);\n    } else {\n      endPosition.left = targetCoordinates.left;\n    }\n  }\n\n  // Set boundaries\n  const scrollH = scrollable[MC.S_SCROLL_HEIGHT];\n  const scrollW = scrollable[MC.S_SCROLL_WIDTH];\n  const clientH = getClientHeightNow(scrollable);\n  const clientW = getClientWidthNow(scrollable);\n  endPosition.top = MH.min(scrollH - clientH, endPosition.top);\n  endPosition.top = MH.max(0, endPosition.top);\n\n  endPosition.left = MH.min(scrollW - clientW, endPosition.left);\n  endPosition.left = MH.max(0, endPosition.left);\n\n  return endPosition;\n};\n\nconst initiateScroll = async (\n  options: ScrollToOptionsInternal,\n  isCancelled: () => boolean,\n) => {\n  const position = await getStartEndPosition(options);\n  const duration = options._duration;\n  const scrollable = options._scrollable;\n\n  let startTime: number, previousTimeStamp: number;\n  let currentPosition: ScrollPosition = position.start;\n\n  const step = async () => {\n    const timeStamp = await waitForAnimationFrame();\n    // Element.scrollTo equates to a measurement and needs to run after\n    // painting to avoid forced layout.\n    await waitForMeasureTime();\n\n    if (isCancelled()) {\n      // Reject the promise\n      throw currentPosition;\n    }\n\n    if (!startTime) {\n      // If it's very close to the target, no need to scroll smoothly\n      if (\n        duration === 0 ||\n        !arePositionsDifferent(currentPosition, position.end)\n      ) {\n        MH.elScrollTo(scrollable, position.end);\n        return position.end;\n      }\n\n      startTime = timeStamp;\n    }\n\n    if (startTime !== timeStamp && previousTimeStamp !== timeStamp) {\n      const elapsed = timeStamp - startTime;\n      const progress = easeInOutQuad(MH.min(1, elapsed / duration));\n\n      for (const s of [MC.S_LEFT, MC.S_TOP] as const) {\n        currentPosition[s] =\n          position.start[s] + (position.end[s] - position.start[s]) * progress;\n      }\n\n      MH.elScrollTo(scrollable, currentPosition);\n\n      if (progress === 1) {\n        return currentPosition;\n      }\n    }\n\n    previousTimeStamp = timeStamp;\n    return step();\n  };\n\n  return step();\n};\n\nconst isScrollableBodyInQuirks = (element: Element): element is HTMLElement =>\n  element === MH.getBody() && MH.getDocScrollingElement() === null;\n\n// must be called in \"measure time\"\nconst getBorderWidth = (element: Element, side: Offset) =>\n  MH.ceil(MH.parseFloat(getComputedStylePropNow(element, `border-${side}`)));\n\n// ------------------------------\n\nlet mainContentElement: HTMLElement;\nlet mainScrollableElement: HTMLElement;\n\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      const mainScrollableElementSelector =\n        settings.mainScrollableElementSelector;\n\n      const contentElement = await waitForElementOrInteractive(() => {\n        return mainScrollableElementSelector\n          ? MH.docQuerySelector(mainScrollableElementSelector)\n          : MH.getBody(); // default if no selector\n      });\n\n      // defaults\n      mainScrollableElement = getDefaultScrollingElement();\n      mainContentElement = MH.getBody();\n\n      if (!contentElement) {\n        logError(\n          MH.usageError(\n            `No match for '${mainScrollableElementSelector}'. ` +\n              \"Scroll tracking/capturing may not work as intended.\",\n          ),\n        );\n      } else if (!MH.isHTMLElement(contentElement)) {\n        logWarn(\"mainScrollableElementSelector should point to an HTMLElement\");\n      } else if (contentElement !== mainContentElement) {\n        mainScrollableElement = mainContentElement = contentElement;\n      }\n    })();\n  }\n\n  return initPromise;\n};\n\n// Try to find the main scrollable/content elements asap so that tryGetMain*\n// can return them if called before fetchMain*\nif (MH.hasDOM()) {\n  waitForInteractive().then(init);\n}\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  addClasses,\n  addClassesNow,\n  setDataNow,\n  setStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, tryWrapContent } from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { camelToKebabCase, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  isScrollable,\n  tryGetMainContentElement,\n  fetchMainContentElement,\n} from \"@lisn/utils/scroll\";\n\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Overlays\n * @interface\n */\nexport type OverlayOptions = {\n  /**\n   * The parent element to insert the overlay into.\n   *\n   * If not given, then:\n   * - if the overlay is to have a `position: fixed`, then `document.body` is used\n   * - otherwise,\n   *   {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}\n   *   is used\n   */\n  parent?: HTMLElement;\n\n  /**\n   * If set, then it will be assigned as the DOM element ID for the new\n   * overlay.\n   *\n   * Furthermore, the new overlay will be created and will not be saved for\n   * future reuse.\n   *\n   * By default, if `id` is not given, the overlay will be saved, and if\n   * {@link createOverlay} is called again with the same `style`, `data` and\n   * parent, the previous overlay is returned.\n   */\n  id?: string;\n\n  /**\n   * Every entry in this object will be set on the `style` of the new overlay.\n   *\n   * **IMPORTANT:** By default overlays are positioned absolutely, so if you need\n   * another positioning, override this here by setting a `position` key in\n   * `style`. If position is either \"absolute\" (by default or explicitly set) or\n   * \"fixed\", and none of `top` or `bottom` is given, `top: 0` is set; and\n   * similarly, if none of `left` or `right` is given, `left: 0` is set.\n   */\n  style?: Record<string, string>;\n\n  /**\n   * Every entry in this object will be set as a data attribute on the new\n   * overlay.\n   *\n   * Keys can be either kebab-case or camelCase (they will be converted if\n   * needed). Do _not_ include the \"data-\" prefix which will be added\n   * automatically. E.g. both \"foo-bar\" and \"fooBar\" will result in\n   * \"data-foo-bar\" being set.\n   */\n  data?: Record<string, string>;\n};\n\n/**\n * Returns an existing overlay for this specification. If the overlay was just\n * created it may not yet be attached to the DOM.\n *\n * @category Overlays\n */\nexport const getOverlay = (userOptions?: OverlayOptions) => {\n  const options = tryGetOverlayOptions(userOptions);\n  if (!options) {\n    return null;\n  }\n\n  return overlays.get(options._parent)?.get(options._overlayKey) || null;\n};\n\n/**\n * Creates a new overlay, and inserts it into the DOM as soon as\n * {@link waitForMutateTime} resolves, or returns an already existing matching\n * overlay.\n *\n * **Note** that if {@link OverlayOptions.id} is set, a new overlay will\n * _always_ be created.\n *\n * @category Overlays\n */\nexport const createOverlay = async (userOptions?: OverlayOptions) => {\n  const options = await fetchOverlayOptions(userOptions);\n  const canReuse = !options._id;\n\n  if (canReuse) {\n    const existingOverlay = overlays\n      .get(options._parent)\n      ?.get(options._overlayKey);\n\n    if (existingOverlay) {\n      if (!MH.parentOf(existingOverlay)) {\n        // not yet inserted into the DOM, so wait until it is\n        await waitForMutateTime();\n      }\n      return existingOverlay;\n    }\n  }\n\n  // Create a new one\n  const overlay = createOnlyOverlay(options);\n  if (canReuse) {\n    // Save it now before awating, so that concurrent requests to create the\n    // same one use it\n    overlays.sGet(options._parent).set(options._overlayKey, overlay);\n  } else {\n    overlay.id = options._id;\n  }\n\n  const isPercentageHOffset = MH.includes(\n    (options._style.left || \"\") + (options._style.right || \"\"),\n    \"%\",\n  );\n\n  const isPercentageVOffset = MH.includes(\n    (options._style.top || \"\") + (options._style.bottom || \"\"),\n    \"%\",\n  );\n\n  let needsContentWrapping = false;\n  let parentEl = options._parent;\n  if (isPercentageHOffset || isPercentageVOffset) {\n    needsContentWrapping =\n      (isPercentageHOffset && isScrollable(parentEl, { axis: \"x\" })) ||\n      (isPercentageVOffset && isScrollable(parentEl, { axis: \"y\" }));\n  }\n\n  if (needsContentWrapping) {\n    parentEl = await tryWrapContent(parentEl, {\n      required: true,\n      requiredBy: \"percentage offset view trigger with scrolling root\",\n    });\n  }\n\n  if (options._style.position === MC.S_ABSOLUTE) {\n    // Ensure parent has non-static positioning\n    addClasses(parentEl, MH.prefixName(\"overlay-container\"));\n  }\n\n  await moveElement(overlay, { to: parentEl });\n\n  return overlay;\n};\n\n// ----------------------------------------\n\ntype OverlayOptionsInternal = {\n  _parent: HTMLElement;\n  _id: string;\n  _style: Record<string, string>;\n  _data: Record<string, string>;\n  _overlayKey: string;\n};\n\nconst overlays = newXWeakMap<HTMLElement, Map<string, HTMLElement>>(() =>\n  MH.newMap(),\n);\n\nconst tryGetOverlayOptions = (\n  userOptions: OverlayOptions | undefined,\n): OverlayOptionsInternal | null => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = tryGetParent(userOptions?.parent, style.position);\n  if (!parentEl) {\n    return null;\n  }\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst fetchOverlayOptions = async (\n  userOptions: OverlayOptions | undefined,\n): Promise<OverlayOptionsInternal> => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = await fetchParent(userOptions?.parent, style.position);\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst getOverlayKey = (\n  style: Record<string, string>,\n  data: Record<string, string>,\n) => objToStrKey(style) + \"|\" + objToStrKey(data);\n\nconst getCssProperties = (style: Record<string, string> | undefined) => {\n  const finalCssProperties: Record<string, string> = MH.merge(\n    { position: MC.S_ABSOLUTE }, // default\n    style,\n  );\n\n  if (\n    finalCssProperties.position === MC.S_ABSOLUTE ||\n    finalCssProperties.position === MC.S_FIXED\n  ) {\n    if (\n      MH.isEmpty(finalCssProperties.top) &&\n      MH.isEmpty(finalCssProperties.bottom)\n    ) {\n      finalCssProperties.top = \"0px\";\n    }\n\n    if (\n      MH.isEmpty(finalCssProperties.left) &&\n      MH.isEmpty(finalCssProperties.right)\n    ) {\n      finalCssProperties.left = \"0px\";\n    }\n  }\n\n  return finalCssProperties;\n};\n\nconst tryGetParent = (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED ? MH.getBody() : tryGetMainContentElement());\n\nconst fetchParent = async (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED\n    ? await waitForElement(MH.getBody)\n    : await fetchMainContentElement());\n\nconst createOnlyOverlay = (options: OverlayOptionsInternal) => {\n  const overlay = MH.createElement(\"div\");\n\n  addClassesNow(overlay, MH.prefixName(\"overlay\"));\n\n  const data = options._data;\n  for (const attr of MH.keysOf(data)) {\n    setDataNow(overlay, camelToKebabCase(attr), data[attr]);\n  }\n\n  const style = options._style;\n  for (const prop of MH.keysOf(style)) {\n    setStylePropNow(overlay, prop, style[prop]);\n  }\n\n  return overlay;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size } from \"@lisn/globals/types\";\n\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { createOverlay } from \"@lisn/utils/overlays\";\n\n/**\n * Returns the content box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @category Size measurements\n */\nexport const getEntryContentBox = (entry: ResizeObserverEntry): Size => {\n  const size = entry.contentBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  }\n\n  const rect = entry.contentRect;\n  return { [MC.S_WIDTH]: rect[MC.S_WIDTH], [MC.S_HEIGHT]: rect[MC.S_HEIGHT] };\n};\n\n/**\n * Returns the border box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @param {} fallbackToContent If the entry does not contain border box\n *                             measurements (depending on browser), then fall\n *                             back to using the content box size. Otherwise\n *                             (by default) will return `NaN` values for width\n *                             and height.\n *\n * @category Size measurements\n */\nexport const getEntryBorderBox = (\n  entry: ResizeObserverEntry,\n  fallbackToContent = false,\n): Size => {\n  const size = entry.borderBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  } else if (fallbackToContent) {\n    return getEntryContentBox(entry);\n  }\n\n  return { [MC.S_WIDTH]: NaN, [MC.S_HEIGHT]: NaN };\n};\n\n/**\n * Returns true if the given string is a valid box type.\n *\n * @category Validation\n */\nexport const isValidBox = (box: string): box is Box =>\n  MH.includes(ALL_BOXES, box);\n\n/**\n * Returns true if the given string is a valid dimension.\n *\n * @category Validation\n */\nexport const isValidDimension = (dimension: string): dimension is Dimension =>\n  MH.includes(ALL_DIMENSIONS, dimension);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetViewportOverlay = (): HTMLElement | null =>\n  viewportOverlay ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via SizeWatcher\n */\nexport const fetchViewportOverlay = async (): Promise<HTMLElement> => {\n  await init();\n\n  return viewportOverlay;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchViewportSize = async (realtime = false) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const root = MH.hasDOM()\n    ? (MH.getDocScrollingElement() ?? MH.getBody())\n    : null;\n\n  return {\n    [MC.S_WIDTH]: root?.clientWidth || 0,\n    [MC.S_HEIGHT]: root?.clientHeight || 0,\n  };\n};\n\n// ----------------------------------------\n\nconst S_INLINE_SIZE = \"inlineSize\";\nconst S_BLOCK_SIZE = \"blockSize\";\n\nconst ALL_BOXES: Box[] = [\"content\", \"border\"] as const;\nconst ALL_DIMENSIONS: Dimension[] = [MC.S_WIDTH, MC.S_HEIGHT] as const;\n\nconst getSizeFromInlineBlock = (\n  size: ResizeObserverSize | ReadonlyArray<ResizeObserverSize>,\n): Size => {\n  /* istanbul ignore else */\n  if (MH.isIterableObject(size)) {\n    return {\n      [MC.S_WIDTH]: size[0][S_INLINE_SIZE],\n      [MC.S_HEIGHT]: size[0][S_BLOCK_SIZE],\n    };\n  }\n  return {\n    // in some browsers inlineSize and blockSize are scalars and nor Arrays\n    [MC.S_WIDTH]: (size as { [S_INLINE_SIZE]: number })[S_INLINE_SIZE],\n    [MC.S_HEIGHT]: (size as { [S_BLOCK_SIZE]: number })[S_BLOCK_SIZE],\n  };\n};\n\n// ------------------------------\n\nlet viewportOverlay: HTMLElement;\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      viewportOverlay = await createOverlay({\n        id: MH.prefixName(\"vp-ovrl\"),\n        style: {\n          position: \"fixed\",\n          [MC.S_WIDTH]: \"100vw\",\n          [MC.S_HEIGHT]: \"100vh\",\n        },\n      });\n    })();\n  }\n\n  return initPromise;\n};\n","/**\n * @module Modules/XResizeObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logWarn, logError } from \"@lisn/utils/log\";\n\nimport debug from \"@lisn/debug/debug\";\n\nexport type XResizeObserverCallback = (\n  entries: ResizeObserverEntry[],\n  observer: XResizeObserver,\n) => void;\n\n/**\n * {@link XResizeObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}\n * - observes both border box and content box size changes\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n * - can debounce the callback\n */\nexport class XResizeObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe | ResizeObserver:observe} except it accepts multiple targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent resize.\n   *\n   * If the target is already being observed, nothing is done.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/unobserve | ResizeObserver:unobserve} except it accepts multiple targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/disconnect | ResizeObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * @param {} debounceWindow Debounce the handler so that it's called at most\n   *                          every `debounceWindow` ms.\n   */\n  constructor(callback: XResizeObserverCallback, debounceWindow?: number) {\n    const logger = debug ? new debug.Logger({ name: \"XResizeObserver\" }) : null;\n\n    // Keep the latest ResizeObserverEntry for each target during the\n    // debounceWindow. Short-lived, so ok to use a Map.\n    const buffer = MH.newMap<Element, ResizeObserverEntry>();\n\n    // Since internally we have two observers, one for border box, one for\n    // content box, we will get called initially twice for a target. So we keep\n    // a counter of 1 or 2 for how many more calls to ignore.\n    const targetsToSkip = MH.newWeakMap<Element, 1 | 2>();\n\n    let observedTargets = MH.newWeakSet<Element>();\n\n    debounceWindow = debounceWindow || 0;\n\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      // Override entries for previous targets, but keep entries whose targets\n      // were not resized in this round\n      for (const entry of entries) {\n        const target = MH.targetOf(entry);\n        const skipNum = targetsToSkip.get(target);\n        if (skipNum !== undefined) {\n          if (skipNum === 2) {\n            // expect one more call\n            targetsToSkip.set(target, 1);\n          } else {\n            // done\n            /* istanbul ignore next */\n            if (skipNum !== 1) {\n              logError(MH.bugError(`# targetsToSkip is ${skipNum}`));\n            }\n            MH.deleteKey(targetsToSkip, target);\n          }\n\n          continue;\n        }\n\n        buffer.set(target, entry);\n      }\n\n      debug: logger?.debug9(\n        `Got ${entries.length} new entries. ` +\n          `Have ${buffer.size} unique-target entries`,\n        entries,\n      );\n\n      if (!timer && MH.sizeOf(buffer)) {\n        timer = MH.setTimer(() => {\n          if (MH.sizeOf(buffer)) {\n            callback(MH.arrayFrom(buffer.values()), this);\n            buffer.clear();\n          }\n\n          timer = null;\n        }, debounceWindow);\n      }\n    };\n\n    const borderObserver = MH.newResizeObserver(resizeHandler);\n    const contentObserver = MH.newResizeObserver(resizeHandler);\n    if (!borderObserver || !contentObserver) {\n      logWarn(\n        \"This browser does not support ResizeObserver. Some features won't work.\",\n      );\n    }\n\n    const observeTarget = (target: Element) => {\n      observedTargets.add(target);\n      borderObserver?.observe(target, { box: \"border-box\" });\n      contentObserver?.observe(target);\n    };\n\n    // --------------------\n\n    this.observe = (...targets) => {\n      debug: logger?.debug10(\"Observing targets\", targets);\n\n      for (const target of targets) {\n        observeTarget(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      debug: logger?.debug10(\"Observing targets (later)\", targets);\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.set(target, 2);\n        observeTarget(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      debug: logger?.debug10(\"Unobserving targets\", targets);\n\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        borderObserver?.unobserve(target);\n        contentObserver?.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      debug: logger?.debug10(\"Disconnecting\");\n      observedTargets = MH.newWeakSet();\n      borderObserver?.disconnect();\n      contentObserver?.disconnect();\n    };\n  }\n}\n","/**\n * @module Watchers/SizeWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size, SizeTarget } from \"@lisn/globals/types\";\n\nimport { setNumericStyleJsVars } from \"@lisn/utils/css-alter\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum } from \"@lisn/utils/math\";\nimport {\n  isValidBox,\n  isValidDimension,\n  getEntryBorderBox,\n  getEntryContentBox,\n  tryGetViewportOverlay,\n  fetchViewportOverlay,\n} from \"@lisn/utils/size\";\nimport { objToStrKey } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XResizeObserver } from \"@lisn/modules/x-resize-observer\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link SizeWatcher} monitors the size of a given target. It's built on top\n * of {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}.\n *\n * It manages registered callbacks globally and reuses ResizeObservers.\n *\n * Each instance of SizeWatcher manages up to two ResizeObservers: one\n * for content-box size changes and one for border-box size changes.\n */\nexport class SizeWatcher {\n  /**\n   * Call the given handler whenever the target's size changes.\n   *\n   * Unless {@link OnResizeOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest size data.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly onResize: (\n    handler: OnResizeHandler,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offResize: (handler: OnResizeHandler, target?: SizeTarget) => void;\n\n  /**\n   * This is the same as {@link onResize} except that if `handler` is not given,\n   * then it defaults to an  handler that updates a set of CSS variables on the\n   * target's style:\n   *\n   * - If {@link OnResizeOptions.target | options.target} is not given, or is\n   *   `window`, the following CSS variables are set on the root (`html`)\n   *   element and represent the viewport size:\n   *   - `--lisn-js--window-border-width`\n   *   - `--lisn-js--window-border-height`\n   *   - `--lisn-js--window-content-width`\n   *   - `--lisn-js--window-content-height`\n   *\n   * - Otherwise, the following variables are set on the target itself and\n   *   represent its visible size:\n   *   - `--lisn-js--border-width`\n   *   - `--lisn-js--border-height`\n   *   - `--lisn-js--content-width`\n   *   - `--lisn-js--content-height`\n   *\n   * If `target` is `document`, then it will use `document.documentElement`.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly trackSize: (\n    handler?: OnResizeHandler | null,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackSize}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackSize: (\n    handler?: OnResizeHandler | null,\n    target?: SizeTarget,\n  ) => void;\n\n  /**\n   * Get the size of the given target. It will get the size from a\n   * ResizeObserverEntry and so it's always delayed by one frame at least.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly fetchCurrentSize: (target?: SizeTarget) => Promise<SizeData>;\n\n  /**\n   * Creates a new instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: SizeWatcherConfig = {}) {\n    return new SizeWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: SizeWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new SizeWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: SizeWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"SizeWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"SizeWatcher\", logAtCreation: config })\n      : null;\n\n    const allSizeData = MH.newWeakMap<Element, SizeData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnResizeHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    // Don't debounce the observer, only callbacks.\n    const xObserver = new XResizeObserver(resizeHandler);\n\n    // ----------\n\n    const fetchCurrentSize = async (\n      target: SizeTarget | undefined,\n    ): Promise<SizeData> => {\n      const element = await fetchElement(target);\n      const sizeData = allSizeData.get(element);\n      if (sizeData) {\n        return MH.copyObject(sizeData);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp ResizeObserver\n        const observer = MH.newResizeObserver((entries) => {\n          const sizeData = getSizeData(entries[0]);\n          observer?.disconnect();\n          resolve(sizeData); // no need to copy or save it\n        });\n\n        if (observer) {\n          observer.observe(element);\n        } else {\n          // Warning would have already been logged by XResizeObserver\n          resolve({\n            border: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n            content: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n          });\n        }\n      });\n    };\n\n    // ----------\n\n    const fetchOptions = async (\n      options: OnResizeOptions,\n    ): Promise<OnResizeOptionsInternal> => {\n      const box = options.box ?? null;\n      if (box && !isValidBox(box)) {\n        throw MH.usageError(`Unknown box type: '${box}'`);\n      }\n\n      const dimension = options.dimension ?? null;\n      if (dimension && !isValidDimension(dimension)) {\n        throw MH.usageError(`Unknown dimension: '${dimension}'`);\n      }\n\n      return {\n        _element: await fetchElement(MH.targetOf(options)),\n        _box: box,\n        _dimension: dimension,\n        // If threshold is 0, internally treat as 1 (pixel)\n        _threshold:\n          toNonNegNum(options.threshold, config._resizeThreshold) || 1,\n        _debounceWindow:\n          options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n      };\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = { _callback: callback, _options: options };\n      allCallbacks.sGet(element).set(handler, entry);\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnResize = async (\n      handler: OnResizeHandler,\n      userOptions: OnResizeOptions | undefined,\n    ) => {\n      const options = await fetchOptions(userOptions || {});\n      const element = options._element;\n\n      // Don't await for the size data before creating the callback so that\n      // setupOnResize and removeOnResize have the same \"timing\" and therefore\n      // calling onResize and offResize immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options);\n      const callback = entry._callback;\n      const sizeData = await fetchCurrentSize(element);\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = sizeData;\n      allSizeData.set(element, sizeData);\n\n      // Always use observeLater. This is because the initial call to callback\n      // shouldn't be debounced, and so we call it manually here, regardless if\n      // it's a new target or not. Therefore we don't want the observer to also\n      // call it in case it _is_ a new target.\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, sizeData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, sizeData);\n      }\n    };\n\n    // ----------\n\n    const removeOnResize = async (\n      handler: OnResizeHandler,\n      target: SizeTarget | undefined,\n    ) => {\n      const options = await fetchOptions({ target });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setSizeCssProps) {\n          // delete the properties\n          setSizeCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ) => {\n      const element = options._element;\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n        xObserver.unobserve(element);\n        MH.deleteKey(allSizeData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = (entry: ResizeObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      const latestData = getSizeData(entry);\n      allSizeData.set(element, latestData);\n\n      debug: logger?.debug9(\"New size data\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        const thresholdsExceeded = hasExceededThreshold(\n          entry._options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\"Threshold not exceeded\");\n          continue;\n        }\n\n        entry._data = latestData;\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentSize = fetchCurrentSize;\n\n    // ----------\n\n    this.trackSize = async (handler?, options?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      return setupOnResize(handler, options);\n    };\n\n    // ----------\n\n    this.noTrackSize = (handler?, target?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      removeOnResize(handler, target); // no need to await\n    };\n\n    // ----------\n\n    this.onResize = setupOnResize;\n\n    // ----------\n\n    this.offResize = (handler, target?) => {\n      removeOnResize(handler, target); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type SizeWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnResizeOptions.debounceWindow | debounceWindow} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnResizeOptions.threshold | threshold} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 50\n   */\n  resizeThreshold?: number;\n};\n\n/**\n * @interface\n */\nexport type OnResizeOptions = {\n  /**\n   * If it is not given, or is `null` or `window`, then it will track the size\n   * of the viewport (akin to `clientHeight` on `documentElement`).\n   *\n   * If it is `document`, then it will use `document.documentElement`.\n   *\n   * Other values of target must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  target?: SizeTarget;\n\n  /**\n   * Specifies whether to listen for changes in content box size or border box\n   * size.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  box?: Box;\n\n  /**\n   * Specifies whether to listen for changes in width or height.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  dimension?: Dimension;\n\n  /**\n   * If non-0, the handler will only be called when the target's size in the\n   * observed {@link OnResizeOptions.dimension} and {@link OnResizeOptions.box}\n   * type has changed at least `threshold` pixels since the last time the\n   * handler was called.\n   *\n   * Special case when `threshold` is 0 and at least one of\n   * {@link OnResizeOptions.dimension} or {@link OnResizeOptions.box} is given:\n   * if there's a resize event but the size in the observed dimensions/box\n   * types has not changed, the callback is _not_ called.\n   *\n   * @defaultValue {@link SizeWatcherConfig.resizeThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * @defaultValue {@link SizeWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * The handler is invoked with three arguments:\n *\n * - the element that has been resized: if the target you requested was the\n *   viewport, then this will be a fixed positioned overlay that tracks the\n *   size of the viewport\n * - the {@link SizeData} for the element\n */\nexport type OnResizeHandlerArgs = [Element, SizeData];\nexport type OnResizeCallback = Callback<OnResizeHandlerArgs>;\nexport type OnResizeHandler =\n  | CallbackHandler<OnResizeHandlerArgs>\n  | OnResizeCallback;\n\nexport type SizeData = Record<Box, Size>;\n\n// ----------------------------------------\n\ntype SizeWatcherConfigInternal = {\n  _debounceWindow: number;\n  _resizeThreshold: number;\n};\n\ntype OnResizeOptionsInternal = {\n  _element: Element;\n  _box: Box | null;\n  _dimension: Dimension | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnResizeCallback;\n  _options: OnResizeOptionsInternal;\n  _data?: SizeData;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, SizeWatcher>();\n\nconst getConfig = (config: SizeWatcherConfig): SizeWatcherConfigInternal => {\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _resizeThreshold: toNonNegNum(config.resizeThreshold, 50) || 1,\n  };\n};\n\n// --------------------\n\nconst hasExceededThreshold = (\n  options: OnResizeOptionsInternal,\n  latestData: SizeData,\n  lastThresholdData: SizeData | undefined,\n): boolean => {\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  let box: Box, dim: Dimension;\n  for (box in latestData) {\n    if (options._box && options._box !== box) {\n      continue;\n    }\n\n    for (dim in latestData[box]) {\n      if (options._dimension && options._dimension !== dim) {\n        continue;\n      }\n\n      const diff = MH.abs(latestData[box][dim] - lastThresholdData[box][dim]);\n      if (diff >= options._threshold) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nconst getSizeData = (entry: ResizeObserverEntry): SizeData => {\n  const borderBox = getEntryBorderBox(entry, true);\n  const contentBox = getEntryContentBox(entry);\n\n  return {\n    border: borderBox,\n    content: contentBox,\n  };\n};\n\nconst setSizeCssProps = (\n  element: Element,\n  sizeData: SizeData | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetViewportOverlay()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"window-\";\n  }\n\n  const props = {\n    borderWidth: sizeData?.border[MC.S_WIDTH],\n    borderHeight: sizeData?.border[MC.S_HEIGHT],\n    contentWidth: sizeData?.content[MC.S_WIDTH],\n    contentHeight: sizeData?.content[MC.S_HEIGHT],\n  };\n  setNumericStyleJsVars(element, props, { _prefix: prefix }); // don't await here\n};\n\nconst fetchElement = async (\n  target: SizeTarget | undefined,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  }\n\n  if (!target || target === MH.getWindow()) {\n    return fetchViewportOverlay();\n  }\n\n  if (target === MH.getDoc()) {\n    return MH.getDocElement();\n  }\n\n  throw MH.usageError(\"Unsupported resize target\");\n};\n\nconst invokeCallback = (\n  callback: OnResizeCallback,\n  element: Element,\n  sizeData: SizeData,\n) => callback.invoke(element, MH.copyObject(sizeData)).catch(logError);\n","/**\n * @module Watchers/LayoutWatcher\n */\n\n// NOTES FOR DEVELOPERS\n//\n// For each layout (device or aspect ratio), we create an overlay that has a\n// a width that corresponds to the layout:\n//  - for device layouts, it's a fixed width in pixels, equal to the minimum\n//    width of the device\n//  - for aspect ratio layouts, the overlay has a width that's relative to\n//    the root's height, equal to the minimum width of the aspect ratio\n//\n// Then we observe each overlay with an IntersectionObserver whose root\n// is this Watcher's root and whose root margin is -100% from the left (i.e.\n// right-most edge of the root).\n//\n// If the root is null, i.e. the viewport, the overlays will have a \"fixed\"\n// position and be inserted in document.body. Otherwise, they'll be inserted\n// in the root element with an \"absolute\" position. The root element, if not\n// body must be positioned. It gets a default position of \"relative\" through\n// the class `.lisn-overlay-container`, which Overlays ensures it gets.\n//\n// If using custom root we track its size through SizeWatcher as the\n// aspectRatio overlays are relative to the height, and we can't rely on CSS\n// alone as the root may not have a fixed height through CSS.\n//\n// Whenever any overlay intersects the root, this means that the viewport\n// width is now equal to or narrower than the overlay.\n//\n// ~~~~ The current device or aspect ratio corresponds to the _widest_\n// ~~~~ overlay that does not intersect.\n//\n// For example:\n//\n// | mobile\n// ========| mobile-wide\n// ======================| tablet\n// =========================================| desktop\n//\n// _________________________________| viewport width\n//\n// Here, mobile, mobile-wide and tablet overlays are _not_ intersecting, only\n// desktop intersects. The device layout is therefore tablet.\n//\n// Therefore:\n// - have the layout bit spaces ordered from narrowest layout at lowest bit\n//   to widest layout at hightest bit\n// - keep a running bitmask of which overlays are not intersecting and update\n//   it each time there is an IntersectionObserverEntry.\n// - get the highest device or aspect ratio bit in that bitmask to find out\n//   the widest non-intersecting overlay\n//\n// For simplicity we create overlays also for layouts that have a 0-width.\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  Layout,\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport {\n  getLayoutBitmask,\n  NUM_LAYOUTS,\n  ORDERED_DEVICES,\n  ORDERED_ASPECTR,\n} from \"@lisn/utils/layout\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { omitKeys, copyExistingKeys } from \"@lisn/utils/misc\";\nimport { createOverlay } from \"@lisn/utils/overlays\";\nimport { objToStrKey } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link LayoutWatcher} listens for changes in either the width or aspect\n * ratio of the viewport or the given {@link LayoutWatcherConfig.root | root}.\n *\n * It does not track resize events; rather it's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class LayoutWatcher {\n  /**\n   * Call the given handler whenever the layout changes.\n   *\n   * Unless {@link OnLayoutOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current layout.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times, even if\n   * the options differ. If the handler has already been added, it is removed\n   * and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onLayout: (\n    handler: OnLayoutHandler,\n    options?: OnLayoutOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offLayout: (handler: OnLayoutHandler) => void;\n\n  /**\n   * Get the current screen layout.\n   */\n  readonly fetchCurrentLayout: () => Promise<LayoutData>;\n\n  /**\n   * Creates a new instance of LayoutWatcher with the given\n   * {@link LayoutWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: LayoutWatcherConfig = {}) {\n    return new LayoutWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of LayoutWatcher with the given\n   * {@link LayoutWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: LayoutWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new LayoutWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: LayoutWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"LayoutWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"LayoutWatcher\", logAtCreation: config })\n      : null;\n    let nonIntersectingBitmask = 0;\n    let currentLayoutData: LayoutData = {\n      device: null,\n      aspectRatio: null,\n    };\n\n    const allCallbacks = MH.newMap<\n      OnLayoutHandler,\n      {\n        _callback: OnLayoutCallback;\n        _layoutBitmask: number;\n      }\n    >();\n\n    // ----------\n\n    const fetchCurrentLayout = async (): Promise<LayoutData> => {\n      await readyPromise;\n\n      return MH.copyObject(currentLayoutData);\n    };\n\n    // ----------\n\n    const setupOverlays = async () => {\n      const { root, overlays } = await createOverlays(\n        config._root,\n        config._deviceBreakpoints,\n        config._aspectRatioBreakpoints,\n      );\n\n      return MH.newPromise<void>((resolve) => {\n        let isReady = false;\n\n        const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n          const numEntries = MH.lengthOf(entries);\n          debug: logger?.debug9(`Got ${numEntries} new entries`, entries);\n\n          if (!isReady) {\n            /* istanbul ignore next */ // shouldn't happen\n            if (numEntries < NUM_LAYOUTS) {\n              logWarn(\n                MH.bugError(\n                  `Got IntersectionObserver ${numEntries}, ` +\n                    `expected >= ${NUM_LAYOUTS}`,\n                ),\n              );\n            }\n          }\n\n          for (const entry of entries) {\n            nonIntersectingBitmask = getNonIntersecting(\n              nonIntersectingBitmask,\n              entry,\n            );\n          }\n\n          // If this is the initial call from IntersectionObserver, skip callbacks.\n          // Those that have skipInitial: false would be called elsewhere, by\n          // setupOnLayout\n          processLayoutChange(!isReady);\n          isReady = true;\n          resolve(); // ready after IntersectionObserver has called us the 1st time\n        };\n\n        // ----------\n\n        const observeOptions = {\n          root,\n          rootMargin: \"5px 0% 5px -100%\",\n        };\n\n        const observer = MH.newIntersectionObserver(\n          intersectionHandler,\n          observeOptions,\n        );\n\n        for (const triggerOverlay of overlays) {\n          observer.observe(triggerOverlay);\n        }\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnLayoutHandler,\n      layoutBitmask: number,\n    ): OnLayoutCallback => {\n      MH.remove(allCallbacks.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", layoutBitmask);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler);\n      });\n\n      allCallbacks.set(handler, {\n        _callback: callback,\n        _layoutBitmask: layoutBitmask,\n      });\n      return callback;\n    };\n\n    const setupOnLayout = async (\n      handler: OnLayoutHandler,\n      options: OnLayoutOptions | undefined,\n    ) => {\n      const layoutBitmask = getLayoutBitmask(options);\n      const callback = createCallback(handler, layoutBitmask);\n\n      if (options?.skipInitial) {\n        return;\n      }\n\n      const layoutData = await fetchCurrentLayout();\n\n      if (\n        !callback.isRemoved() &&\n        changeMatches(layoutBitmask, layoutData, null)\n      ) {\n        debug: logger?.debug5(\"Calling initially with\", layoutData);\n        await invokeCallback(callback, layoutData);\n      }\n    };\n\n    const deleteHandler = (handler: OnLayoutHandler) => {\n      MH.deleteKey(allCallbacks, handler);\n      // no need to unobserve the overlays\n    };\n\n    const processLayoutChange = (skipCallbacks: boolean) => {\n      const deviceBit = MH.floor(\n        MH.log2(nonIntersectingBitmask & ORDERED_DEVICES.bitmask),\n      );\n\n      const aspectRatioBit = MH.floor(\n        MH.log2(nonIntersectingBitmask & ORDERED_ASPECTR.bitmask),\n      );\n\n      const layoutData: LayoutData = { device: null, aspectRatio: null };\n\n      // -Infinity means all of the overlays are intersecting, which would only\n      // happen if the narrowest overlay is not actually 0-width (which is not the\n      // case by default and against the recommended settings).\n      if (deviceBit !== -MC.INFINITY) {\n        layoutData.device = ORDERED_DEVICES.nameOf(1 << deviceBit);\n      }\n      if (aspectRatioBit !== -MC.INFINITY) {\n        layoutData.aspectRatio = ORDERED_ASPECTR.nameOf(1 << aspectRatioBit);\n      }\n\n      debug: logger?.debug8(\"New layout\", layoutData);\n\n      if (!skipCallbacks) {\n        for (const entry of allCallbacks.values()) {\n          const layoutBitmask = entry._layoutBitmask;\n          if (!changeMatches(layoutBitmask, layoutData, currentLayoutData)) {\n            debug: logger?.debug9(\n              `Layout change does not match bitmask ${layoutBitmask}`,\n            );\n            continue;\n          }\n\n          invokeCallback(entry._callback, layoutData);\n        }\n      }\n\n      currentLayoutData = layoutData;\n    };\n\n    const readyPromise = setupOverlays(); // no need to await\n\n    // ----------\n\n    this.fetchCurrentLayout = fetchCurrentLayout;\n\n    // ----------\n\n    this.onLayout = setupOnLayout;\n\n    // ----------\n\n    this.offLayout = (handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type LayoutWatcherConfig = {\n  /**\n   * The root element whose layout to watch. If not given or `null`, then the\n   * viewport layout is watched.\n   *\n   * @defaultValue null\n   */\n  root?: HTMLElement | null;\n\n  /**\n   * Use custom device breakpoints. Only known device names ({@link Device})\n   * are supported. If any are missing from the given dictionary, the value\n   * from {@link settings.deviceBreakpoints} is used.\n   *\n   * @defaultValue {@link settings.deviceBreakpoints}\n   */\n  deviceBreakpoints?: typeof settings.deviceBreakpoints;\n\n  /**\n   * Use custom aspect ratio breakpoints. Only known aspect ratio names\n   * ({@link AspectRatio}) are supported. If any are missing from the given\n   * dictionary, the value from {@link settings.aspectRatioBreakpoints} is\n   * used.\n   *\n   * @defaultValue {@link settings.aspectRatioBreakpoints}\n   */\n  aspectRatioBreakpoints?: typeof settings.aspectRatioBreakpoints;\n};\n\n/**\n * @interface\n */\nexport type OnLayoutOptions = {\n  /**\n   * Specifies a list of {@link Device}s to target for.\n   *\n   * The handler will only be called if there is a change of device to a device\n   * matching the specification.\n   *\n   * It can be:\n   * - \"min <Device>\": devices at least as wide as `<Device>`\n   * - \"max <Device>\": devices at most as wide as `<Device>`\n   * - \"<DeviceMin> to <DeviceMax>\": devices at least as wide as `<DeviceMin>`\n   *                                 and at most as wide as `<DeviceMax>`\n   * - a comma-separated list of device names\n   * - an array of device names\n   *\n   * **NOTE**\n   *\n   * If only one of {@link devices} or {@link aspectRatios} is specified, the\n   * handler will only be called for matching changes of device or aspect ratio\n   * respectively.\n   *\n   * If neither is specified, the handler will be called for any change of layout\n   * (device or aspect ratio).\n   *\n   * Also note that an empty array is treated the same as not given, or `null`.\n   *\n   * @defaultValue undefined\n   */\n  devices?: DeviceSpec | Device[];\n\n  /**\n   * Specifies a list of {@link AspectRatio}s to target for.\n   *\n   * The handler will only be called if there is a change of aspect ratio to\n   * an aspect ratios matching the specification.\n   *\n   * It can be:\n   * - \"min <AspectRatio>\": aspect ratios at least as wide as `<AspectRatio>`\n   * - \"max <AspectRatio>\": aspect ratios at most as wide as `<AspectRatio>`\n   * - \"<AspectRatioMin> to <AspectRatioMax>\": aspect ratios at least as wide\n   *                        as `<AspectRatioMin>` and at most as wide as\n   *                        `<AspectRatioMax>`\n   * - a comma-separated list of aspect ratio names\n   * - an array of aspect ratio names\n   *\n   * **NOTE**\n   *\n   * If only one of {@link devices} or {@link aspectRatios} is specified, the\n   * handler will only be called for matching changes of device or aspect ratio\n   * respectively.\n   *\n   * If neither is specified, the handler will be called for any change of layout\n   * (device or aspect ratio).\n   *\n   * @defaultValue undefined\n   */\n  aspectRatios?: AspectRatioSpec | AspectRatio[];\n\n  /**\n   * Do not call the handler until there's a future change of layout.\n   *\n   * By default, we call the handler (almost) immediately with the current\n   * layout data if it matches the given {@link devices} and {@link aspectRatios}.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with one argument:\n *\n * - the current {@link LayoutData}\n */\nexport type OnLayoutHandlerArgs = [LayoutData];\nexport type OnLayoutCallback = Callback<OnLayoutHandlerArgs>;\nexport type OnLayoutHandler =\n  | CallbackHandler<OnLayoutHandlerArgs>\n  | OnLayoutCallback;\n\n/**\n * Note that {@link device} or {@link aspectRatio} would only be null if the\n * viewport is narrower than the narrowest device/aspect ratio. This would only\n * happen if the narrowest device/aspect ratio is _not_ 0-width (which is not\n * the case with the default breakpoints and is against the recommendation for\n * setting breakpoints.\n */\nexport type LayoutData = {\n  device: Device | null;\n  aspectRatio: AspectRatio | null;\n};\n\n// ----------------------------------------\n\ntype LayoutWatcherConfigInternal = {\n  _root: HTMLElement | null;\n  _deviceBreakpoints: typeof settings.deviceBreakpoints;\n  _aspectRatioBreakpoints: typeof settings.aspectRatioBreakpoints;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<HTMLElement | null, Map<string, LayoutWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst VAR_BORDER_HEIGHT = MH.prefixCssJsVar(\"border-height\");\nconst PREFIX_DEVICE = MH.prefixName(\"device\");\nconst PREFIX_ASPECTR = MH.prefixName(\"aspect-ratio\");\n\nconst getConfig = (\n  config: LayoutWatcherConfig | undefined,\n): LayoutWatcherConfigInternal => {\n  const deviceBreakpoints = MH.copyObject(settings.deviceBreakpoints);\n  if (config?.deviceBreakpoints) {\n    copyExistingKeys(config.deviceBreakpoints, deviceBreakpoints);\n  }\n\n  const aspectRatioBreakpoints = MH.copyObject(settings.aspectRatioBreakpoints);\n\n  if (config?.aspectRatioBreakpoints) {\n    copyExistingKeys(config.aspectRatioBreakpoints, aspectRatioBreakpoints);\n  }\n\n  return {\n    _root: config?.root || null,\n    _deviceBreakpoints: deviceBreakpoints,\n    _aspectRatioBreakpoints: aspectRatioBreakpoints,\n  };\n};\n\n// ----------------------------------------\n\nconst createOverlays = async (\n  root: HTMLElement | null,\n  deviceBreakpoints: typeof settings.deviceBreakpoints,\n  aspectRatioBreakpoints: typeof settings.aspectRatioBreakpoints,\n) => {\n  const overlayPromises = [];\n\n  let overlayParent: HTMLElement;\n  if (root) {\n    overlayParent = root;\n  } else {\n    // Since modals remove the scrollbar on the body when active, the width of\n    // the body changes upon open/close of a modal, which would create\n    // glitching if it happens near a device breakpoint. So if the root is the\n    // viewport, we create a fixed positioned container to hold the overlays\n    // and set its width to be 100vw and use that as the root of\n    overlayParent = await createOverlay({\n      style: {\n        position: \"fixed\",\n        [MC.S_WIDTH]: \"100vw\",\n      },\n    });\n  }\n\n  let device: Device;\n  for (device in deviceBreakpoints) {\n    overlayPromises.push(\n      createOverlay({\n        parent: overlayParent,\n        style: {\n          position: \"absolute\",\n          [MC.S_WIDTH]: deviceBreakpoints[device] + \"px\",\n        },\n        data: {\n          [PREFIX_DEVICE]: device,\n        },\n      }),\n    );\n  }\n\n  const parentHeightCss = root ? `var(${VAR_BORDER_HEIGHT}, 0) * 1px` : \"100vh\";\n  if (root) {\n    SizeWatcher.reuse().trackSize(null, { target: root });\n  }\n\n  let aspectRatio: AspectRatio;\n  for (aspectRatio in aspectRatioBreakpoints) {\n    overlayPromises.push(\n      createOverlay({\n        parent: overlayParent,\n        style: {\n          position: \"absolute\",\n          [MC.S_WIDTH]:\n            `calc(${aspectRatioBreakpoints[aspectRatio]} ` +\n            `* ${parentHeightCss})`,\n        },\n        data: {\n          [PREFIX_ASPECTR]: aspectRatio,\n        },\n      }),\n    );\n  }\n\n  const overlays = await MH.promiseAll(overlayPromises);\n  return { root: overlayParent, overlays };\n};\n\nconst getOverlayLayout = (overlay: HTMLElement): Layout | null => {\n  const layout =\n    getData(overlay, PREFIX_DEVICE) || getData(overlay, PREFIX_ASPECTR);\n  /* istanbul ignore else */\n  if (layout && (ORDERED_DEVICES.has(layout) || ORDERED_ASPECTR.has(layout))) {\n    return layout;\n  } else {\n    // shouldn't happen\n    logError(MH.bugError(\"No device or aspectRatio data attribute\"));\n    return null;\n  }\n};\n\nconst changeMatches = (\n  layoutBitmask: number,\n  thisLayoutData: LayoutData,\n  prevLayoutData: LayoutData | undefined | null,\n): boolean => {\n  // True if the callback is interested in a change of device and there's a\n  // change of device and the new device is one of the ones it's interested in\n  // (or it's null, i.e. device is undefined).\n  // And the same for aspect ratios.\n\n  if (\n    prevLayoutData?.device !== thisLayoutData.device &&\n    (!thisLayoutData.device ||\n      ORDERED_DEVICES.bit[thisLayoutData.device] & layoutBitmask)\n  ) {\n    return true;\n  }\n\n  if (\n    prevLayoutData?.aspectRatio !== thisLayoutData.aspectRatio &&\n    (!thisLayoutData.aspectRatio ||\n      ORDERED_ASPECTR.bit[thisLayoutData.aspectRatio] & layoutBitmask)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nconst getNonIntersecting = (\n  nonIntersectingBitmask: number, // current\n  entry: IntersectionObserverEntry,\n): number => {\n  const target = MH.targetOf(entry);\n  /* istanbul ignore next */ // shouldn't happen\n  if (!MH.isHTMLElement(target)) {\n    logError(\n      MH.bugError(\n        `IntersectionObserver called us with '${MH.typeOrClassOf(target)}'`,\n      ),\n    );\n    return nonIntersectingBitmask;\n  }\n\n  const layout = getOverlayLayout(target);\n  let bit = 0;\n  if (!layout) {\n    // error already logged by getOverlayLayout\n  } else if (ORDERED_DEVICES.has(layout)) {\n    bit = ORDERED_DEVICES.bit[layout];\n  } else if (ORDERED_ASPECTR.has(layout)) {\n    bit = ORDERED_ASPECTR.bit[layout];\n  } else {\n    /* istanbul ignore next */ // shouldn't happen\n    logError(\n      MH.bugError(`Unknown device or aspectRatio data attribute: ${layout}`),\n    );\n  }\n\n  if (entry.isIntersecting) {\n    nonIntersectingBitmask &= ~bit;\n  } else {\n    nonIntersectingBitmask |= bit;\n  }\n\n  return nonIntersectingBitmask;\n};\n\nconst invokeCallback = (callback: OnLayoutCallback, layoutData: LayoutData) =>\n  callback.invoke(MH.copyObject(layoutData)).catch(logError);\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { PointerAction } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * Returns true if the given string is a valid pointer action.\n *\n * @category Validation\n */\nexport const isValidPointerAction = (action: string): action is PointerAction =>\n  MH.includes(POINTER_ACTIONS, action);\n\n/**\n * Returns true if the given string or array is a valid list of pointer\n * actions.\n *\n * @category Validation\n */\nexport const isValidPointerActionList = (actions: string | string[]) =>\n  isValidStrList(actions, isValidPointerAction, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const POINTER_ACTIONS: PointerAction[] = [\n  MC.S_CLICK,\n  MC.S_HOVER,\n  MC.S_PRESS,\n] as const;\n","/**\n * @module Watchers/PointerWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { PointerAction, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { isValidPointerAction, POINTER_ACTIONS } from \"@lisn/utils/pointer\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * {@link PointerWatcher} listens for simple pointer actions like clicks, press\n * and hold or hover.\n */\nexport class PointerWatcher {\n  /**\n   * Call the `startHandler` whenever the pointer action begins.\n   * Call the `endHandler` whenever the pointer action ends. If `endHandler` is\n   * not given, it defaults to `startHandler`.\n   *\n   * For an explanation of what \"begins\" and \"ends\" means for each supported\n   * action, see {@link OnPointerOptions.actions}.\n   *\n   * **IMPORTANT:** The same handlers can _not_ be added multiple times for the\n   * same event target, even if the options differ. If the handler has already\n   * been added for this target, then it will be removed and re-added with the\n   * current options.\n   */\n  readonly onPointer: (\n    target: EventTarget,\n    startHandler: OnPointerHandler,\n    endHandler?: OnPointerHandler,\n    options?: OnPointerOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes previously added handlers.\n   */\n  readonly offPointer: (\n    target: EventTarget,\n    startHandler: OnPointerHandler,\n    endHandler?: OnPointerHandler,\n  ) => void;\n\n  /**\n   * Creates a new instance of PointerWatcher with the given\n   * {@link PointerWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: PointerWatcherConfig = {}) {\n    return new PointerWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of PointerWatcher with the given\n   * {@link PointerWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: PointerWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new PointerWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: PointerWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"PointerWatcher.create\");\n    }\n\n    // Keep this watcher super simple. The events we listen for don't fire at a\n    // high rate and it's unlikely for there to be many many callbacks for each\n    // target and event type, so don't bother with using a delegating listener,\n    // etc.\n\n    // Keep a map of callbacks so we can lookup the callback by the handler\n    // (and also to prevent duplicate handler for each target, for consistency\n    // with other watchers).\n    const allCallbacks = newXWeakMap<\n      EventTarget,\n      Map<OnPointerHandler, OnPointerCallback>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const createCallback = (\n      target: EventTarget,\n      handler: OnPointerHandler,\n    ): OnPointerCallback => {\n      MH.remove(allCallbacks.get(target)?.get(handler));\n\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        MH.deleteKey(allCallbacks.get(target), handler);\n      });\n\n      allCallbacks.sGet(target).set(handler, callback);\n      return callback;\n    };\n\n    // async for consistency with other watchers and future compatibility in\n    // case of change needed\n    const setupOnPointer = async (\n      target: EventTarget,\n      startHandler: OnPointerHandler,\n      endHandler: OnPointerHandler | undefined,\n      userOptions: OnPointerOptions | undefined,\n    ) => {\n      const options = getOptions(config, userOptions);\n      const startCallback = createCallback(target, startHandler);\n      const endCallback =\n        endHandler && endHandler !== startHandler\n          ? createCallback(target, endHandler)\n          : startCallback;\n\n      for (const action of options._actions) {\n        listenerSetupFn[action](target, startCallback, endCallback, options);\n      }\n    };\n\n    // ----------\n\n    this.onPointer = setupOnPointer;\n\n    // ----------\n\n    this.offPointer = (target, startHandler, endHandler?) => {\n      const entry = allCallbacks.get(target);\n      MH.remove(entry?.get(startHandler));\n      if (endHandler) {\n        MH.remove(entry?.get(endHandler));\n      }\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type PointerWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnPointerOptions.preventDefault | preventDefault} in calls to\n   * {@link PointerWatcher.onPointer}.\n   *\n   * @defaultValue false\n   */\n  preventDefault?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnPointerOptions.preventSelect | preventSelect} in calls to\n   * {@link PointerWatcher.onPointer}.\n   *\n   * @defaultValue true\n   */\n  preventSelect?: boolean;\n};\n\n/**\n * @interface\n */\nexport type OnPointerOptions = {\n  /**\n   * One or more of of \"click\", \"hover\" or \"press\". If not specified, then all\n   * actions are enabled.\n   *\n   * It can be a comma-separated list of {@link PointerAction}s or an array of\n   * such actions.\n   *\n   * For click actions, the start handler is called for every odd number of\n   * clicks (1st, 3rd, 5th, etc), and the end handler is called for every other\n   * click. It functions like a toggle.\n   *\n   * For hover and press actions, the start handler is called when the pointer\n   * enters or presses down on the target respectively, and the end handler is\n   * called when the pointer leaves or comes off the target respectively.\n   *\n   * Note that on touch screens, hover and press actions behave identically.\n   *\n   * @defaultValue undefined\n   */\n  actions?: CommaSeparatedStr<PointerAction> | PointerAction[];\n\n  /**\n   * If true, the events of the pointer actions, e.g. click, will have their\n   * default action prevented.\n   *\n   * @defaultValue {@link PointerWatcherConfig.preventDefault}\n   */\n  preventDefault?: boolean;\n\n  /**\n   * If true (default), then for press actions (and hover actions on touch\n   * screens) it will prevent starting a text selection.\n   *\n   * @defaultValue {@link PointerWatcherConfig.preventSelect}\n   */\n  preventSelect?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the event target that was passed to the {@link PointerWatcher.onPointer}\n *   call (equivalent to\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget | Event:currentTarget}).\n * - the {@link PointerActionData} describing the state of the action.\n */\nexport type OnPointerHandlerArgs = [EventTarget, PointerActionData, Event];\nexport type OnPointerCallback = Callback<OnPointerHandlerArgs>;\nexport type OnPointerHandler =\n  | CallbackHandler<OnPointerHandlerArgs>\n  | OnPointerCallback;\n\nexport type PointerActionData = {\n  action: PointerAction;\n  state: \"ON\" | \"OFF\";\n};\n\n// ----------------------------------------\n\ntype PointerWatcherConfigInternal = {\n  _preventDefault: boolean;\n  _preventSelect: boolean;\n};\n\ntype OnPointerOptionsInternal = {\n  _actions: PointerAction[];\n  _preventDefault: boolean;\n  _preventSelect: boolean;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, PointerWatcher>();\n\nconst getConfig = (\n  config: PointerWatcherConfig | undefined,\n): PointerWatcherConfigInternal => {\n  return {\n    _preventDefault: config?.preventDefault ?? false,\n    _preventSelect: config?.preventSelect ?? true,\n  };\n};\n\nconst getOptions = (\n  config: PointerWatcherConfigInternal,\n  options: OnPointerOptions | undefined,\n): OnPointerOptionsInternal => {\n  return {\n    _actions:\n      validateStrList(\"actions\", options?.actions, isValidPointerAction) ||\n      POINTER_ACTIONS,\n    _preventDefault: options?.preventDefault ?? config._preventDefault,\n    _preventSelect: options?.preventSelect ?? config._preventSelect,\n  };\n};\n\nconst setupClickListener = (\n  target: EventTarget,\n  startCallback: OnPointerCallback,\n  endCallback: OnPointerCallback,\n  options: OnPointerOptionsInternal,\n) => {\n  // false if next will start; true if next will end.\n  let toggleState = false;\n\n  const wrapper = (event: Event) => {\n    if (options._preventDefault) {\n      MH.preventDefault(event);\n    }\n\n    toggleState = !toggleState;\n\n    const data: PointerActionData = {\n      action: MC.S_CLICK,\n      state: toggleState ? \"ON\" : \"OFF\",\n    };\n\n    invokeCallback(\n      toggleState ? startCallback : endCallback,\n      target,\n      data,\n      event,\n    );\n  };\n\n  addEventListenerTo(target, MC.S_CLICK, wrapper);\n\n  const remove = () => removeEventListenerFrom(target, MC.S_CLICK, wrapper);\n\n  startCallback.onRemove(remove);\n  endCallback.onRemove(remove);\n};\n\nconst setupPointerListeners = (\n  action: typeof MC.S_HOVER | typeof MC.S_PRESS,\n  target: EventTarget,\n  startCallback: OnPointerCallback,\n  endCallback: OnPointerCallback,\n  options: OnPointerOptionsInternal,\n) => {\n  // If the browser doesn't support pointer events, then\n  // addEventListenerTo will transform these into mouse*\n  const startEventSuff = action === MC.S_HOVER ? \"enter\" : \"down\";\n  const endEventSuff = action === MC.S_HOVER ? \"leave\" : \"up\";\n  const startEvent = MC.S_POINTER + startEventSuff;\n  const endEvent = MC.S_POINTER + endEventSuff;\n\n  const wrapper = (event: Event, callback: OnPointerCallback) => {\n    if (options._preventDefault) {\n      MH.preventDefault(event);\n    }\n\n    const data: PointerActionData = {\n      action,\n      state:\n        MH.strReplace(event.type, /pointer|mouse/, \"\") === startEventSuff\n          ? \"ON\"\n          : \"OFF\",\n    };\n\n    invokeCallback(callback, target, data, event);\n  };\n  const startListener = (event: Event) => wrapper(event, startCallback);\n  const endListener = (event: Event) => wrapper(event, endCallback);\n\n  addEventListenerTo(target, startEvent, startListener);\n  addEventListenerTo(target, endEvent, endListener);\n\n  // On some touch screen devices pressing and holding will initiate select\n  // and result in touchend, so we prevent text select\n  if (options._preventSelect) {\n    preventSelect(target);\n  }\n\n  startCallback.onRemove(() => {\n    undoPreventSelect(target);\n    removeEventListenerFrom(target, startEvent, startListener);\n  });\n\n  endCallback.onRemove(() => {\n    undoPreventSelect(target);\n    removeEventListenerFrom(target, endEvent, endListener);\n  });\n};\n\nconst listenerSetupFn: {\n  [D in PointerAction]: (\n    target: EventTarget,\n    startCallback: OnPointerCallback,\n    endCallback: OnPointerCallback,\n    options: OnPointerOptionsInternal,\n  ) => void;\n} = {\n  click: setupClickListener,\n  hover: (...args) => setupPointerListeners(MC.S_HOVER, ...args),\n  press: (...args) => setupPointerListeners(MC.S_PRESS, ...args),\n} as const;\n\nconst invokeCallback = (\n  callback: OnPointerCallback,\n  target: EventTarget,\n  actionData: PointerActionData,\n  event: Event,\n) => callback.invoke(target, MH.copyObject(actionData), event).catch(logError);\n","/**\n * @module Watchers/ScrollWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { XYDirection, ScrollDirection, SizeTarget } from \"@lisn/globals/types\";\n\nimport {\n  ScrollTarget,\n  TargetCoordinate,\n  TargetCoordinates,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { setNumericStyleJsVars } from \"@lisn/utils/css-alter\";\nimport { getMaxDeltaDirection } from \"@lisn/utils/directions\";\nimport { moveElement, tryWrapContent } from \"@lisn/utils/dom-alter\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum, maxAbs } from \"@lisn/utils/math\";\nimport {\n  scrollTo,\n  getCurrentScrollAction,\n  getClientWidthNow,\n  getClientHeightNow,\n  tryGetMainScrollableElement,\n  fetchMainContentElement,\n  fetchMainScrollableElement,\n  fetchScrollableElement,\n  isValidScrollDirection,\n  ScrollAction,\n  ScrollToOptions,\n} from \"@lisn/utils/scroll\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { MutationOperation, DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n// re-export for convenience\nexport type { ScrollAction, ScrollToOptions } from \"@lisn/utils/scroll\";\n\n/**\n * {@link ScrollWatcher} listens for scroll events in any direction.\n *\n * It manages registered callbacks globally and reuses event listeners for more\n * efficient performance.\n */\nexport class ScrollWatcher {\n  /**\n   * Call the given handler whenever the given scrollable is scrolled.\n   *\n   * Unless {@link OnScrollOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest scroll data. If a scroll has\n   * not yet been observed on the scrollable and its `scrollTop` and\n   * `scrollLeft` are 0, then the direction is {@link Types.NoDirection} and\n   * the handler is only called if {@link Types.NoDirection} is part of the\n   * supplied {@link OnScrollOptions.directions | options.directions} (or\n   * {@link OnScrollOptions.directions | options.directions} is not given).\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking content size changes using\n   * {@link trackScroll}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onScroll: (\n    handler: OnScrollHandler,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly offScroll: (\n    handler: OnScrollHandler,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * This everything that {@link onScroll} does plus more:\n   *\n   * In addition to a scroll event, the handler is also called when either the\n   * offset size or scroll (content) size of the scrollable changes as that\n   * would affect its `scrollTopFraction` and `scrollLeftFraction` and possibly\n   * the `scrollTop` and `scrollLeft` as well.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates a set of CSS variables on the scrollable element's style:\n   *\n   * - If {@link OnScrollOptions.scrollable | options.scrollable} is not given,\n   *   or is `null`, `window` or `document`, the following CSS variables are\n   *   set on the root (`html`) element and represent the scroll of the\n   *   {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}:\n   *   - `--lisn-js--page-scroll-top`\n   *   - `--lisn-js--page-scroll-top-fraction`\n   *   - `--lisn-js--page-scroll-left`\n   *   - `--lisn-js--page-scroll-left-fraction`\n   *   - `--lisn-js--page-scroll-width`\n   *   - `--lisn-js--page-scroll-height`\n   *\n   * - Otherwise, the following variables are set on the scrollable itself,\n   *   and represent its scroll offset:\n   *   - `--lisn-js--scroll-top`\n   *   - `--lisn-js--scroll-top-fraction`\n   *   - `--lisn-js--scroll-left`\n   *   - `--lisn-js--scroll-left-fraction`\n   *   - `--lisn-js--scroll-width`\n   *   - `--lisn-js--scroll-height`\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly trackScroll: (\n    handler?: OnScrollHandler | null,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackScroll}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly noTrackScroll: (\n    handler?: OnScrollHandler | null,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * Get the scroll offset of the given scrollable. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param {} realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                    this only when doing realtime scroll-based animations\n   *                    as it may cause a forced layout.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScroll: (\n    scrollable?: ScrollTarget,\n    realtime?: boolean,\n  ) => Promise<ScrollData>;\n\n  /**\n   * Scrolls the given scrollable element to in the given direction.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the direction or options are invalid.\n   */\n  readonly scroll: (\n    direction: XYDirection,\n    options?: ScrollOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Scrolls the given scrollable element to the given `to` scrollable.\n   *\n   * Returns `null` if there's an ongoing scroll that is not cancellable.\n   *\n   * Note that if `to` is an element or a selector, then it _must_ be a\n   * descendant of the scrollable element.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the \"to\" coordinates or options are invalid.\n   *\n   * @param {} to  If this is an element, then its top-left position is used as\n   *               the target coordinates. If it is a string, then it is treated\n   *               as a selector for an element using `querySelector`.\n   * @param {} [options.scrollable]\n   *               If not given, it defaults to\n   *               {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}.\n   *\n   * @returns {} `null` if there's an ongoing scroll that is not cancellable,\n   * otherwise a {@link ScrollAction}.\n   */\n  readonly scrollTo: (\n    to: TargetCoordinates | Element | string,\n    options?: ScrollToOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Returns the current {@link ScrollAction} if any.\n   *\n   * @param {} scrollable\n   *               If not given, it defaults to\n   *               {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScrollAction: (\n    scrollable?: Element,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Cancels the ongoing scroll that's resulting from smooth scrolling\n   * triggered in the past. Does not interrupt or prevent further scrolling.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   *\n   * @param {} [options.immediate]  If true, then it will not use\n   *                                {@link waitForMeasureTime} or\n   *                                {@link Utils.waitForMutateTime | waitForMutateTime}.\n   *                                Warning: this will likely result in forced layout.\n   */\n  readonly stopUserScrolling: (options?: {\n    scrollable?: ScrollTarget;\n    immediate?: boolean;\n  }) => Promise<void>;\n\n  /**\n   * Returns the element that holds the main page content. By default it's\n   * `document.body` but is overridden by\n   * {@link Settings.settings.mainScrollableElementSelector}.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainContentElement(): Promise<HTMLElement> {\n    return fetchMainContentElement();\n  }\n\n  /**\n   * Returns the scrollable element that holds the wrapper around the main page\n   * content. By default it's `document.scrollable` (unless `document.body` is\n   * actually scrollable, in which case it will be used) but it will be\n   * different if {@link Settings.settings.mainScrollableElementSelector} is set.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainScrollableElement(): Promise<HTMLElement> {\n    return fetchMainScrollableElement();\n  }\n\n  /**\n   * Creates a new instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: ScrollWatcherConfig = {}) {\n    return new ScrollWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: ScrollWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new ScrollWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ScrollWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ScrollWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ScrollWatcher\", logAtCreation: config })\n      : null;\n\n    const allScrollData = MH.newWeakMap<Element, ScrollData>();\n\n    const activeListeners = MH.newWeakMap<\n      ScrollTarget,\n      { _nRealtime: number }\n    >();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnScrollHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const fetchCurrentScroll = async (\n      element: Element,\n      realtime = false,\n      isScrollEvent = false,\n    ): Promise<ScrollData> => {\n      // The scroll data can change event without a scroll event, e.g. by the\n      // element changing size, so always get the latest here.\n      const previousEventData = allScrollData.get(element);\n      const latestData = await fetchScrollData(\n        element,\n        previousEventData,\n        realtime,\n      );\n\n      // If there hasn't been a scroll event, use the old scroll direction\n      if (!isScrollEvent && previousEventData) {\n        latestData.direction = previousEventData.direction;\n      }\n      return latestData;\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n      trackType: TrackType,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      };\n      allCallbacks.sGet(element).set(handler, entry);\n\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnScroll = async (\n      handler: OnScrollHandler,\n      userOptions: OnScrollOptions | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, userOptions || {});\n      const element = options._element;\n\n      // Don't await for the scroll data before creating the callback so that\n      // setupOnScroll and removeOnScroll have the same \"timing\" and therefore\n      // calling onScroll and offScroll immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options, trackType);\n      const callback = entry._callback;\n\n      const eventTarget = options._eventTarget;\n      const scrollData = await fetchCurrentScroll(\n        element,\n        options._debounceWindow === 0,\n      );\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = scrollData;\n      allScrollData.set(element, scrollData);\n\n      if (trackType === TRACK_FULL) {\n        await setupSizeTrack(entry);\n      }\n\n      let listenerOptions = activeListeners.get(eventTarget);\n      if (!listenerOptions) {\n        debug: logger?.debug4(\"Adding scroll listener\", eventTarget);\n        listenerOptions = { _nRealtime: 0 };\n        activeListeners.set(eventTarget, listenerOptions);\n        // Don't debounce the scroll handler, only the callbacks.\n        addEventListenerTo(eventTarget, MC.S_SCROLL, scrollHandler);\n      }\n\n      if (options._debounceWindow === 0) {\n        listenerOptions._nRealtime++;\n      }\n\n      const directions = options._directions;\n      if (\n        !callback.isRemoved() &&\n        !userOptions?.skipInitial &&\n        directionMatches(directions, scrollData.direction)\n      ) {\n        debug: logger?.debug5(\"Calling initially with\", element, scrollData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, scrollData);\n      }\n    };\n\n    // ----------\n\n    const removeOnScroll = async (\n      handler: OnScrollHandler,\n      scrollable: ScrollTarget | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, { scrollable });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setScrollCssProps) {\n          // delete the properties\n          setScrollCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n    ) => {\n      const element = options._element;\n      const eventTarget = options._eventTarget;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      const listenerOptions = activeListeners.get(eventTarget);\n      if (listenerOptions && options._debounceWindow === 0) {\n        listenerOptions._nRealtime--;\n      }\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for scrollable; removing listener\",\n          element,\n        );\n\n        MH.deleteKey(allScrollData, element);\n        removeEventListenerFrom(eventTarget, MC.S_SCROLL, scrollHandler);\n        MH.deleteKey(activeListeners, eventTarget);\n      }\n    };\n\n    // ----------\n\n    const setupSizeTrack = async (entry: CallbackEntry) => {\n      const options = entry._options;\n      const element = options._element;\n      const scrollCallback = entry._callback;\n      debug: logger?.debug8(\"Setting up size tracking\", element);\n\n      const doc = MH.getDoc();\n      const docScrollingElement = MH.getDocScrollingElement();\n\n      const resizeCallback = wrapCallback(async () => {\n        // Get the latest scroll data for the scrollable\n        // Currently, the resize callback is already delayed by a frame due to\n        // the SizeWatcher, so we don't need to treat this as realtime.\n        const latestData = await fetchCurrentScroll(element);\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n        } else if (!scrollCallback.isRemoved()) {\n          await invokeCallback(scrollCallback, element, latestData);\n        }\n      });\n\n      scrollCallback.onRemove(resizeCallback.remove);\n\n      // Don't use default instance as it has a high threshold.\n      const sizeWatcher = SizeWatcher.reuse();\n      const setupOnResize = (target?: SizeTarget) =>\n        sizeWatcher.onResize(resizeCallback, {\n          target,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          // TODO maybe accepts resizeThreshold option\n          threshold: options._threshold,\n        });\n\n      if (element === docScrollingElement) {\n        // In case we're tracking the main document scroll, then we only need to\n        // observe the viewport size and the size of the documentElement (which is\n        // the content size).\n\n        setupOnResize(); // viewport size\n        setupOnResize(doc); // content size\n\n        return;\n      }\n\n      // ResizeObserver only detects changes in offset width/height which is\n      // the visible size of the scrolling element, and that is not affected by the\n      // size of its content.\n      // But we also need to detect changes in the scroll width/height which is\n      // the size of the content.\n      // We also need to keep track of elements being added to the scrollable element.\n\n      const observedElements = MH.newSet<Element>([element]);\n\n      // Observe the scrolling element\n      setupOnResize(element);\n\n      // And also its children (if possible, a single wrapper around them\n      const wrapper = await tryWrapContent(element);\n      if (wrapper) {\n        setupOnResize(wrapper);\n        observedElements.add(wrapper);\n\n        //\n      } else {\n        for (const child of MH.childrenOf(element)) {\n          setupOnResize(child);\n          observedElements.add(child);\n        }\n      }\n\n      // Watch for newly added elements\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      const onAddedCallback = wrapCallback((operation: MutationOperation) => {\n        const child = MH.currentTargetOf(operation);\n        // If we've just added the wrapper, it will be in DOMWatcher's queue,\n        // so check.\n        if (child !== wrapper) {\n          if (wrapper) {\n            // Move this child into the wrapper. If this results in change of size\n            // for wrapper, SizeWatcher will call us.\n            moveElement(child, { to: wrapper, ignoreMove: true });\n          } else {\n            // Track the size of this child.\n            // Don't skip initial, call the callback now\n            setupOnResize(child);\n            observedElements.add(child);\n          }\n        }\n      });\n\n      domWatcher.onMutation(onAddedCallback, { categories: [MC.S_ADDED] });\n      resizeCallback.onRemove(onAddedCallback.remove);\n    };\n\n    // ----------\n\n    const scrollHandler = async (event: Event) => {\n      // We cannot use event.currentTarget because scrollHandler is called inside\n      // a setTimeout so by that time, currentTarget is null or something else.\n      //\n      // However, target and currentTarget only differ when the event is in the\n      // bubbling or capturing phase. Because\n      //\n      // - the scroll event only bubbles when fired on document, and (it only\n      //   bubbles up to window)\n      // - and we never attach the listener to the capturing phase\n      // - and we always use document instead of window to listen for scroll on\n      //   document\n      //\n      // then event.target suffices.\n      const scrollable = MH.targetOf(event);\n      /* istanbul ignore next */\n      if (!scrollable || !(MH.isElement(scrollable) || MH.isDoc(scrollable))) {\n        return;\n      }\n\n      const element = await fetchScrollableElement(scrollable);\n      const realtime = (activeListeners.get(scrollable)?._nRealtime || 0) > 0;\n      const latestData = await fetchCurrentScroll(element, realtime, true);\n      allScrollData.set(element, latestData);\n\n      debug: logger?.debug9(\"Scroll event\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        // Consider the direction since the last scroll event and not the\n        // direction based on the largest delta the last time the callback\n        // was called.\n        const options = entry._options;\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n          continue;\n        }\n\n        // If threshold has been exceeded, always update the latest data for\n        // this callback.\n        entry._data = latestData;\n\n        if (!directionMatches(options._directions, latestData.direction)) {\n          debug: logger?.debug9(\n            \"Direction does not match\",\n            options,\n            latestData,\n          );\n          continue;\n        }\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentScroll = (scrollable?, realtime?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        fetchCurrentScroll(element, realtime),\n      );\n\n    // ----------\n\n    this.scroll = (direction, options = {}) => {\n      if (!isValidScrollDirection(direction)) {\n        throw MH.usageError(`Unknown scroll direction: '${direction}'`);\n      }\n\n      const isVertical = direction === MC.S_UP || direction === MC.S_DOWN;\n      const sign = direction === MC.S_UP || direction === MC.S_LEFT ? -1 : 1;\n      let targetCoordinate: TargetCoordinate;\n\n      const amount = options.amount ?? 100;\n      const asFractionOf = options.asFractionOf;\n\n      if (asFractionOf === \"visible\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * getClientHeightNow(el)) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * getClientWidthNow(el)) / 100;\n\n        //\n      } else if (asFractionOf === \"content\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * el[MC.S_SCROLL_HEIGHT]) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * el[MC.S_SCROLL_WIDTH]) / 100;\n\n        //\n      } else if (asFractionOf !== undefined && asFractionOf !== \"pixel\") {\n        throw MH.usageError(\n          `Unknown 'asFractionOf' keyword: '${asFractionOf}'`,\n        );\n\n        //\n      } else {\n        targetCoordinate = isVertical\n          ? (el) => el[MC.S_SCROLL_TOP] + sign * amount\n          : (el) => el[MC.S_SCROLL_LEFT] + sign * amount;\n      }\n\n      const target = isVertical\n        ? { top: targetCoordinate }\n        : { left: targetCoordinate };\n\n      return this.scrollTo(target, options);\n    };\n\n    // ----------\n\n    this.scrollTo = async (to, options = {}) =>\n      scrollTo(\n        to,\n        MH.merge(\n          { duration: config._scrollDuration }, // default\n          options,\n          {\n            scrollable: await fetchScrollableElement(options.scrollable),\n          }, // override\n        ),\n      );\n\n    // ----------\n\n    this.fetchCurrentScrollAction = (scrollable?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        getCurrentScrollAction(element),\n      );\n\n    // ----------\n\n    this.stopUserScrolling = async (options = {}) => {\n      const element = await fetchScrollableElement(options.scrollable);\n      const stopScroll = () =>\n        MH.elScrollTo(element, {\n          top: element[MC.S_SCROLL_TOP],\n          left: element[MC.S_SCROLL_LEFT],\n        });\n\n      if (options.immediate) {\n        stopScroll();\n      } else {\n        waitForMeasureTime().then(stopScroll);\n      }\n    };\n\n    // ----------\n\n    this.trackScroll = (handler?, options?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      return setupOnScroll(handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackScroll = (handler?, scrollable?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      removeOnScroll(handler, scrollable, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onScroll = (handler, options?) =>\n      setupOnScroll(handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offScroll = (handler, scrollable?) => {\n      removeOnScroll(handler, scrollable, TRACK_REGULAR); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type ScrollWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnScrollOptions.debounceWindow | debounceWindow} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnScrollOptions.threshold | threshold} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 50\n   */\n  scrollThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link ScrollOptions.duration | duration} in calls to\n   * {@link ScrollWatcher.scroll} and {@link ScrollWatcher.scrollTo}.\n   *\n   * @defaultValue 1000\n   */\n  scrollDuration?: number;\n};\n\n/**\n * @interface\n */\nexport type OnScrollOptions = {\n  /**\n   * If it is not given, or is `null`, `window` or `document`, then it will\n   * track the scroll of the\n   * {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}.\n   *\n   * Other values must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  scrollable?: ScrollTarget;\n\n  /**\n   * If non-0, the scroll handler will only be called when the scrollable's\n   * scroll offset in the observed direction has changed at least\n   * `scrollThreshold` pixels since the last time the handler was called.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.scrollThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Specifies a list of {@link ScrollDirection}s to listen for.\n   *\n   * It can be a comma-separated list of direction names or an array of such\n   * names.\n   *\n   * If not given, then it listens for scrolls in any direction, including\n   * {@link Types.NoDirection} and {@link Types.AmbiguousDirection}.\n   *\n   * The {@link Types.NoDirection} occurs when the callback is called initially\n   * (if `skipInitial` is not `true`) and there hasn't yet been a scroll\n   * observed on the scrollable _and_ it's `scrollTop`/`scrollLeft` are 0.\n   *\n   * The {@link Types.AmbiguousDirection} occurs when the user scrolls\n   * diagonally with close to equal deltas in both horizontal and vertical\n   * direction.\n   *\n   * **IMPORTANT:**\n   *\n   * The direction of a scroll event is always based on comparing `deltaX` and\n   * `deltaY` relative to the _last scroll event_ (within the `debounceWindow`,\n   * and not to the scroll data for the last time the callback was called (in\n   * case it was skipped because `threshold` was not exceeded or in case it was\n   * debounced by a larger window than the watcher).\n   *\n   * I.e. if you have both `threshold` and `directions` restricted, or if the\n   * callback has a larger debounce window than the watcher, it is possible for\n   * there to be a change in the relevant `scrollTop`/`scrollLeft` offset that\n   * exceeds the threshold, and for the callback to _not_ be called.\n   *\n   * For a callback to be called, both of these must be true:\n   * - the change in `scrollTop`/`scrollLeft`, _compared to the last time the\n   *   callback was called_ must exceed the {@link threshold}\n   * - the effective scroll direction, _compared to the last scroll event_\n   *   prior to the _watcher's_ debounce window must be one of the given\n   *   {@link directions}.\n   *\n   * @defaultValue undefined\n   */\n  directions?: CommaSeparatedStr<ScrollDirection> | ScrollDirection[];\n\n  /**\n   * Do not call the handler until there's a future scroll of the element.\n   *\n   * By default we call the handler (almost) immediately if there's been a\n   * scroll in one of the given directions, or if there has not been a scroll\n   * but directions includes {@link Types.NoDirection}, but you can disable\n   * this initial call here.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts, but you probably need this when doing\n   * scroll-based animations.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * @interface\n */\nexport type ScrollOptions = ScrollToOptions & {\n  /**\n   * How much to scroll in the given direction.\n   *\n   * @defaultValue 100\n   */\n  amount?: number;\n\n  /**\n   * If set to \"pixel\" (default), `amount` is taken as absolute pixels.\n   *\n   * If set to \"visible\", `amount` is taken as percent of the element's visible\n   * size in the scrolling direction (100 means full client width for\n   * horizontal or height for vertical scroll).\n   *\n   * If set to \"content\", `amount` is taken as percent of the element's full\n   * content size in the scrolling direction (100 means full scroll width for\n   * horizontal or height for vertical scroll).\n   *\n   * @defaultValue \"pixel\"\n   */\n  asFractionOf?: \"pixel\" | \"visible\" | \"content\";\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the element that has been resized\n * - the {@link ScrollData} for the element\n */\nexport type OnScrollHandlerArgs = [Element, ScrollData];\nexport type OnScrollCallback = Callback<OnScrollHandlerArgs>;\nexport type OnScrollHandler =\n  | CallbackHandler<OnScrollHandlerArgs>\n  | OnScrollCallback;\n\nexport type ScrollData = {\n  clientWidth: number;\n  clientHeight: number;\n\n  scrollTop: number;\n\n  /**\n   * This is the `scrollTop` relative to the full `scrollHeight` minus the\n   * `clientHeight`, ranging from 0 to 1.\n   */\n  scrollTopFraction: number;\n\n  scrollLeft: number;\n\n  /**\n   * This is the `scrollLeft` relative to the full `scrollWidth` minus the\n   * `clientWidth`, ranging from 0 to 1.\n   */\n  scrollLeftFraction: number;\n\n  scrollWidth: number;\n  scrollHeight: number;\n\n  /**\n   * This is the direction of the last scroll action, i.e. _compared to the\n   * last scroll event_, not necessarily based on the deltas compared to the\n   * last time this callback was called.\n   */\n  direction: ScrollDirection;\n};\n\n// ----------------------------------------\n\ntype ScrollWatcherConfigInternal = {\n  _debounceWindow: number;\n  _scrollThreshold: number;\n  _scrollDuration: number;\n};\n\ntype OnScrollOptionsInternal = {\n  _element: Element;\n  _eventTarget: ScrollTarget;\n  _directions: ScrollDirection[] | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnScrollCallback;\n  _trackType: TrackType;\n  _options: OnScrollOptionsInternal;\n  _data?: ScrollData;\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, ScrollWatcher>();\n\nconst getConfig = (\n  config: ScrollWatcherConfig,\n): ScrollWatcherConfigInternal => {\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _scrollThreshold: toNonNegNum(config.scrollThreshold, 50) || 1,\n    _scrollDuration: toNonNegNum(config.scrollDuration, 1000),\n  };\n};\n\nconst TRACK_REGULAR = 1; // only scroll events\nconst TRACK_FULL = 2; // scroll + resizing of content and/or wrapper\n\n// --------------------\n\nconst fetchOnScrollOptions = async (\n  config: ScrollWatcherConfigInternal,\n  options: OnScrollOptions,\n): Promise<OnScrollOptionsInternal> => {\n  const directions =\n    validateStrList(\"directions\", options.directions, isValidScrollDirection) ||\n    null;\n\n  const element = await fetchScrollableElement(options.scrollable);\n\n  return {\n    _element: element,\n    _eventTarget: getEventTarget(element),\n    _directions: directions,\n    // If threshold is 0, internally treat as 1 (pixel)\n    _threshold: toNonNegNum(options.threshold, config._scrollThreshold) || 1,\n    _debounceWindow: options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n  };\n};\n\nconst directionMatches = (\n  userDirections: ScrollDirection[] | null,\n  latestDirection: ScrollDirection,\n) => !userDirections || MH.includes(userDirections, latestDirection);\n\nconst hasExceededThreshold = (\n  options: OnScrollOptionsInternal,\n  latestData: ScrollData,\n  lastThresholdData: ScrollData | undefined,\n): boolean => {\n  const directions = options._directions;\n  const threshold = options._threshold;\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  const topDiff = maxAbs(\n    latestData[MC.S_SCROLL_TOP] - lastThresholdData[MC.S_SCROLL_TOP],\n    latestData[MC.S_SCROLL_HEIGHT] - lastThresholdData[MC.S_SCROLL_HEIGHT],\n    latestData[MC.S_CLIENT_HEIGHT] - lastThresholdData[MC.S_CLIENT_HEIGHT],\n  );\n\n  const leftDiff = maxAbs(\n    latestData[MC.S_SCROLL_LEFT] - lastThresholdData[MC.S_SCROLL_LEFT],\n    latestData[MC.S_SCROLL_WIDTH] - lastThresholdData[MC.S_SCROLL_WIDTH],\n    latestData[MC.S_CLIENT_WIDTH] - lastThresholdData[MC.S_CLIENT_WIDTH],\n  );\n\n  // If the callback is only interested in up/down, then only check the\n  // scrollTop delta, and similarly for left/right.\n  let checkTop = false,\n    checkLeft = false;\n  if (\n    !directions ||\n    MH.includes(directions, MC.S_NONE) ||\n    MH.includes(directions, MC.S_AMBIGUOUS)\n  ) {\n    checkTop = checkLeft = true;\n  } else {\n    if (\n      MH.includes(directions, MC.S_UP) ||\n      MH.includes(directions, MC.S_DOWN)\n    ) {\n      checkTop = true;\n    }\n    if (\n      MH.includes(directions, MC.S_LEFT) ||\n      MH.includes(directions, MC.S_RIGHT)\n    ) {\n      checkLeft = true;\n    }\n  }\n\n  return (\n    (checkTop && topDiff >= threshold) || (checkLeft && leftDiff >= threshold)\n  );\n};\n\nconst fetchScrollData = async (\n  element: Element,\n  previousEventData: ScrollData | undefined,\n  realtime: boolean,\n): Promise<ScrollData> => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollTop = MH.ceil(element[MC.S_SCROLL_TOP]);\n  const scrollLeft = MH.ceil(element[MC.S_SCROLL_LEFT]);\n  const scrollWidth = element[MC.S_SCROLL_WIDTH];\n  const scrollHeight = element[MC.S_SCROLL_HEIGHT];\n  const clientWidth = getClientWidthNow(element);\n  const clientHeight = getClientHeightNow(element);\n\n  const scrollTopFraction =\n    MH.round(scrollTop) / (scrollHeight - clientHeight || MC.INFINITY);\n  const scrollLeftFraction =\n    MH.round(scrollLeft) / (scrollWidth - clientWidth || MC.INFINITY);\n\n  const prevScrollTop = previousEventData?.scrollTop || 0;\n  const prevScrollLeft = previousEventData?.scrollLeft || 0;\n\n  const direction = getMaxDeltaDirection(\n    scrollLeft - prevScrollLeft,\n    scrollTop - prevScrollTop,\n  );\n\n  return {\n    direction,\n    [MC.S_SCROLL_TOP]: scrollTop,\n    [MC.S_SCROLL_TOP_FRACTION]: scrollTopFraction,\n    [MC.S_SCROLL_LEFT]: scrollLeft,\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollLeftFraction,\n    [MC.S_SCROLL_WIDTH]: scrollWidth,\n    [MC.S_SCROLL_HEIGHT]: scrollHeight,\n    [MC.S_CLIENT_WIDTH]: clientWidth,\n    [MC.S_CLIENT_HEIGHT]: clientHeight,\n  };\n};\n\nconst setScrollCssProps = (\n  element: Element,\n  scrollData: Partial<ScrollData> | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetMainScrollableElement()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"page-\";\n  }\n\n  scrollData = scrollData || {};\n  const props = {\n    [MC.S_SCROLL_TOP]: scrollData[MC.S_SCROLL_TOP],\n    [MC.S_SCROLL_TOP_FRACTION]: scrollData[MC.S_SCROLL_TOP_FRACTION],\n    [MC.S_SCROLL_LEFT]: scrollData[MC.S_SCROLL_LEFT],\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollData[MC.S_SCROLL_LEFT_FRACTION],\n    [MC.S_SCROLL_WIDTH]: scrollData[MC.S_SCROLL_WIDTH],\n    [MC.S_SCROLL_HEIGHT]: scrollData[MC.S_SCROLL_HEIGHT],\n  };\n  setNumericStyleJsVars(element, props, { _prefix: prefix });\n};\n\nconst getEventTarget = (element: Element): ScrollTarget => {\n  if (element === MH.getDocScrollingElement()) {\n    return MH.getDoc();\n  }\n\n  return element;\n};\n\nconst invokeCallback = (\n  callback: OnScrollCallback,\n  element: Element,\n  scrollData: ScrollData,\n) => callback.invoke(element, MH.copyObject(scrollData)).catch(logError);\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { ScrollOffset, View, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { isValidStrList, validateStrList } from \"@lisn/utils/validation\";\n\nimport { newBitSpaces, createBitSpace } from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid {@link ScrollOffset}.\n *\n * @category Validation\n */\nexport const isValidScrollOffset = (offset: string): offset is ScrollOffset =>\n  offset.match(OFFSET_REGEX) !== null;\n\n/**\n * Returns true if the given string is a valid \"view\".\n *\n * @category Validation\n */\nexport const isValidView = (view: string): view is View =>\n  MH.includes(VIEWS, view);\n\n/**\n * Returns true if the given string or array is a list of valid views.\n *\n * @category Validation\n */\nexport const isValidViewList = (views: string | string[]) =>\n  isValidStrList(views, isValidView, false);\n\n/**\n * Returns the views that are opposite to the given set of views.\n *\n * Above and below are opposites, and so are left and right.\n *\n * \"at\" is a special case. It is considered opposite to any view in the sense\n * that if it is not present in `views` it will always be included in the\n * returned array. However it is not \"strongly\" opposite in the sense that it\n * will not cause other views to be included in the result unless it is the\n * only view in `views`. That is, there are two sets of strongly opposite pairs\n * (\"above\"/\"below\" and \"left\"/\"right\") and at least one of the two opposing\n * views of a pair must be present for the other one to be included, _except in\n * the special case of `views` being \"at\"_. See examples below for\n * clarification.\n *\n * **Note** that the order of the returned array is not defined.\n *\n * @example\n * Returns [\"above\", \"below\", \"left\", \"right\"] (not definite order), since\n * \"at\" is the only view present and is opposite to all:\n *\n * ```javascript\n * getOppositeViews(\"at\"); // -> [\"above\", \"below\", \"left\", \"right\"] (not necessarily in this order)\n * ```\n *\n * @example\n * Returns [\"below\"]. \"left\" and \"right\" are NOT included even though \"at\" is\n * given, because at least one of the two opposing views of a pair must be\n * present for the other one to be included (except in the special case of\n * `views` being \"at\").\n *\n * ```javascript\n * getOppositeViews(\"at,above\"); // -> [\"below\"]\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above\"); // -> [\"at\", \"below\"] (not necessarily in this order)\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above,below\"); // -> [\"at\"]\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"at,above,below\"); // -> []\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above,right\"); // -> [\"at\", \"below\", \"left\"] (not necessarily in this order)\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"at,above,right\"); // -> [\"below\", \"left\"] (not necessarily in this order)\n * ```\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid, including if it's empty \"\".\n *\n * @category Views\n */\nexport const getOppositeViews = (\n  views: CommaSeparatedStr<View> | View[],\n): View[] => {\n  if (!views) {\n    throw MH.usageError(\"'views' cannot be empty\");\n  }\n\n  const bitmask = getViewsBitmask(views);\n  let oppositeBitmask = VIEWS_SPACE.bitmask & ~bitmask; // initial, all not present in bitmask\n\n  // If the given view is \"at\", then include all the other ones.\n  // Otherwise include only the opposite views of those directional\n  // (above/below/left/right) that are present. I.e. if neither left not right\n  // is given, then don't include them\n  if (bitmask !== VIEWS_SPACE.bit.at) {\n    // remove the opposite ones to those not present\n    if (!(bitmask & VIEWS_SPACE.bit.above)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.below;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.below)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.above;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.left)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.right;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.right)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.left;\n    }\n  }\n\n  return getViewsFromBitmask(oppositeBitmask);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getViewsBitmask = (\n  viewsStr: View[] | string | undefined,\n): number => {\n  let viewsBitmask = 0;\n  const views = validateStrList(\"views\", viewsStr, isValidView);\n\n  if (views) {\n    for (const v of views) {\n      if (!isValidView(v)) {\n        throw MH.usageError(`Unknown view '${v}'`);\n      }\n\n      viewsBitmask |= VIEWS_SPACE.bit[v];\n    }\n  } else {\n    viewsBitmask = VIEWS_SPACE.bitmask; // default: all\n  }\n\n  return viewsBitmask;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const parseScrollOffset = (input: string) => {\n  const match = input.match(OFFSET_REGEX);\n  if (!match) {\n    throw MH.usageError(`Invalid offset: '${input}'`);\n  }\n\n  const reference = match[1];\n  const value = match[2];\n  /* istanbul ignore next */ // shouldn't happen\n  if (!reference || !value) {\n    throw MH.bugError(\"Offset regex: blank capture groups\");\n  }\n\n  return { reference, value };\n};\n\nconst VIEWS: View[] = [\n  MC.S_AT,\n  MC.S_ABOVE,\n  MC.S_BELOW,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const VIEWS_SPACE = createBitSpace<View>(newBitSpaces(), ...VIEWS);\n\n// --------------------\n\n// Don't use capture groups for old browser support\nconst OFFSET_REGEX = RegExp(\"(top|bottom|left|right): *([^ ].+)\");\n\nconst getViewsFromBitmask = (bitmask: number): View[] => {\n  const views: View[] = [];\n  for (let bit = VIEWS_SPACE.start; bit <= VIEWS_SPACE.end; bit++) {\n    const value = 1 << bit;\n    if (bitmask & value) {\n      const name = VIEWS_SPACE.nameOf(value);\n      if (name) {\n        views.push(name);\n      }\n    }\n  }\n\n  return views;\n};\n","/**\n * @module Modules/XIntersectionObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nexport type XIntersectionObserverCallback = (\n  entries: IntersectionObserverEntry[],\n  observer: XIntersectionObserver,\n) => void;\n\n/**\n * {@link XIntersectionObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}\n * with added capabilities:\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n */\nexport class XIntersectionObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root | IntersectionObserver:root}.\n   */\n  readonly root!: Element | Document | null;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin | IntersectionObserver:rootMargin}.\n   */\n  readonly rootMargin!: string;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/thresholds | IntersectionObserver:thresholds}.\n   */\n  readonly thresholds!: number[];\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/observe | IntersectionObserver:observe} except it accepts multiple\n   * targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent intersection change.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/unobserve | IntersectionObserver:unobserve} except it accepts multiple\n   * targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/disconnect | IntersectionObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * Like `IntersectionObserver.takeRecords`.\n   */\n  readonly takeRecords: () => void;\n\n  constructor(\n    callback: XIntersectionObserverCallback,\n    observeOptions?: IntersectionObserverInit,\n  ) {\n    let observedTargets = MH.newWeakSet<Element>();\n    const targetsToSkip = MH.newWeakSet<Element>();\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      const selectedEntries = [];\n\n      for (const entry of entries) {\n        if (targetsToSkip.has(MH.targetOf(entry))) {\n          MH.deleteKey(targetsToSkip, MH.targetOf(entry));\n          continue;\n        }\n\n        selectedEntries.push(entry);\n      }\n\n      if (MH.lengthOf(selectedEntries)) {\n        callback(selectedEntries, this);\n      }\n    };\n\n    const observer = MH.newIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    MH.defineProperty(this, \"root\", { get: () => observer.root });\n    MH.defineProperty(this, \"rootMargin\", {\n      get: () => observer.rootMargin,\n    });\n    MH.defineProperty(this, \"thresholds\", {\n      get: () => observer.thresholds,\n    });\n\n    this.observe = (...targets) => {\n      for (const target of targets) {\n        observedTargets.add(target);\n        observer.observe(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.add(target);\n        this.observe(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        observer.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      observedTargets = MH.newWeakSet();\n      observer.disconnect();\n    };\n\n    this.takeRecords = () => observer.takeRecords();\n  }\n}\n","/**\n * @module Watchers/ViewWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  ViewTarget,\n  View,\n  BoundingRect,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { setNumericStyleJsVars } from \"@lisn/utils/css-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForSubsequentMeasureTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys, compareValuesIn } from \"@lisn/utils/misc\";\nimport { createOverlay, OverlayOptions } from \"@lisn/utils/overlays\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport { toMargins, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  VIEWS_SPACE,\n  getViewsBitmask,\n  parseScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap, newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XIntersectionObserver } from \"@lisn/modules/x-intersection-observer\";\n\nimport { DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewWatcher} monitors the position of a given target relative to the\n * given {@link ViewWatcherConfig.root | root} or the viewport.\n *\n * It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class ViewWatcher {\n  /**\n   * Call the given handler whenever the {@link ViewWatcherConfig.root | root}'s\n   * view relative to the target position changes, i.e. when the target enters\n   * or leaves the root.\n   *\n   * Unless {@link OnViewOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current view if it matches this\n   * set of options*.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking position across root\n   * using {@link trackView}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or the options are invalid.\n   */\n  readonly onView: (\n    target: ViewTarget,\n    handler: OnViewHandler,\n    options?: OnViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offView: (target: ViewTarget, handler: OnViewHandler) => void;\n\n  /**\n   * This does more than just {@link onView}. The difference is that in\n   * addition to a change of {@link View}, such as the target entering or\n   * leaving the ViewWatcher's {@link ViewWatcherConfig.root | root} (by\n   * default the viewport), the handler is also called each time the target's\n   * relative view changes _while inside the root_.\n   *\n   * A change of relative position happens when:\n   * - the target is resized\n   * - the root is resized\n   * - the any of the target's scrollable ancestors is scrolled\n   * - the target's attributes changed that resulted in a change of position\n   *\n   * All of the above are accounted for. Internally it uses\n   * {@link ScrollWatcher}, {@link DOMWatcher} and {@link SizeWatcher} to keep\n   * track of all of this.\n   *\n   * If the target is leaves the ViewWatcher's\n   * {@link ViewWatcherConfig.root | root}, the handler will be called with\n   * the {@link ViewData}, and the above events will stop being tracked until\n   * the target enters the watcher's root again.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates the following set of CSS variables on the target's style and\n   * represent its relative position:\n   *\n   * - `--lisn-js--r-top`\n   * - `--lisn-js--r-bottom`\n   * - `--lisn-js--r-left`\n   * - `--lisn-js--r-right`\n   * - `--lisn-js--r-width`\n   * - `--lisn-js--r-height`\n   * - `--lisn-js--r-h-middle`\n   * - `--lisn-js--r-v-middle`\n   *\n   * See {@link ViewData.relative} for an explanation of each.\n   *\n   * Note that only Element targets are supported here and not offsets.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or \"views\" are invalid.\n   */\n  readonly trackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n    options?: TrackViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackView}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n  ) => void;\n\n  /**\n   * Get the current view relative to the target. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param {} realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                    this only when doing realtime scroll-based animations\n   *                    as it may cause a forced layout.\n   */\n  readonly fetchCurrentView: (\n    target: ViewTarget,\n    realtime?: boolean,\n  ) => Promise<ViewData>;\n\n  /**\n   * Creates a new instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: ViewWatcherConfig = {}) {\n    return new ViewWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing  instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: ViewWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new ViewWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ViewWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ViewWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ViewWatcher\", logAtCreation: config })\n      : null;\n\n    const allViewData = MH.newWeakMap<Element, ViewData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<\n        OnViewHandler,\n        {\n          _callback: OnViewCallback;\n          _trackType: TrackType;\n          _options: OnViewOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      debug: logger?.debug9(`Got ${entries.length} new entries`, entries);\n\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    const observeOptions = {\n      root: config._root,\n      threshold: config._threshold,\n      rootMargin: config._rootMargin,\n    };\n\n    const xObserver = new XIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    // ----------\n\n    const fetchCurrentView = (\n      element: Element,\n      realtime = false,\n    ): Promise<ViewData> => {\n      const fetchData = async (\n        entryOrElement: IntersectionObserverEntry | Element,\n      ) => {\n        const intersection = await fetchIntersectionData(\n          config,\n          entryOrElement,\n          realtime,\n        );\n        const data = await fetchViewData(intersection, realtime);\n        return data;\n      };\n\n      if (realtime) {\n        return fetchData(element);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp IntersectionObserver\n        const observer = MH.newIntersectionObserver((entries) => {\n          const promise = fetchData(entries[0]);\n          observer.disconnect();\n          promise.then(resolve);\n        }, observeOptions);\n\n        observer.observe(element);\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n      trackType: TrackType,\n    ): OnViewCallback => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      allCallbacks.sGet(element).set(handler, {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      });\n\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      userOptions: (OnViewOptions & TrackViewOptions) | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOptions(config._root, target, userOptions);\n      const element = options._element;\n\n      const callback = createCallback(handler, options, trackType);\n\n      // View watcher should be used before the DOM is loaded since the initial\n      // size of the root may be 0 or close to 0 and would lead to premature\n      // triggering.\n      await waitForInteractive();\n\n      // Initial call doesn't need to be realtime, and best to use an actual\n      // IntersectionObserverEntry for that one.\n      let viewData = await fetchCurrentView(element);\n\n      if (\n        viewData.rootBounds[MC.S_WIDTH] === 0 &&\n        viewData.rootBounds[MC.S_HEIGHT] === 0\n      ) {\n        // Possibly the root is being setup now, wait for one AF\n        debug: logger?.debug5(\n          \"Got zero root size, deferring for a bit\",\n          config._root,\n        );\n        await waitForSubsequentMeasureTime();\n        viewData = await fetchCurrentView(element);\n      }\n\n      if (trackType === TRACK_FULL) {\n        // Detect resize or scroll\n        await setupInviewTrack(options, callback, viewData);\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      // Always use observeLater to skip the initial call from the\n      // IntersectionObserver, and call callbacks that have skipInitial: false\n      // here. Otherwise, we can't tell from inside the intersectionHandler whether\n      // a callback wants to skip its initial call or not.\n      //\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, viewData);\n        if (viewsToBitmask(viewData.views) & options._viewsBitmask) {\n          await invokeCallback(callback, element, viewData);\n        }\n      }\n    };\n\n    // ----------\n\n    const removeOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      trackType: TrackType,\n    ) => {\n      // For time sync, so that if called immediately after onView without\n      // awaiting, it will remove the callback that is about to be added.\n      // But if no such handler has been added we may unnecessarily\n      // create an overlay... TODO\n      const options = await fetchOptions(config._root, target, {});\n      const element = options._element;\n\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setViewCssProps) {\n          // delete the properties\n          setViewCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n    ) => {\n      const element = options._element;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n\n        xObserver.unobserve(element);\n        MH.deleteKey(allViewData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = async (entry: IntersectionObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      // This doesn't need to be \"realtime\", since IntersectionObserver alone\n      // introduces a delay.\n      const intersection = await fetchIntersectionData(config, entry);\n      const latestData = await fetchViewData(intersection);\n      debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n      const viewsBitmask = viewsToBitmask(latestData.views);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        if (viewsBitmask & entry._options._viewsBitmask) {\n          invokeCallback(entry._callback, element, latestData);\n        }\n      }\n    };\n\n    // ----------\n\n    const setupInviewTrack = async (\n      options: OnViewOptionsInternal,\n      viewCallback: OnViewCallback,\n      viewData: ViewData,\n    ) => {\n      const element = options._element;\n      debug: logger?.debug8(\n        \"Setting up size, scroll and attribute tracking\",\n        element,\n      );\n\n      const sizeWatcher = SizeWatcher.reuse();\n      const scrollWatcher = ScrollWatcher.reuse();\n      const realtime = options._debounceWindow === 0;\n\n      // Detect when target's class or style attribute change\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      // We need to remove the tracking callback when target leaves view and re-add\n      // it when it enters view. But the OnViewCallback that is associated may have\n      // already been added prior, by calling onView with this handler, so we can't\n      // always wrap around it, in order to detect when it's called with a change\n      // of view. So we setup another OnViewCallback tied to the tracking callback.\n      let isInview = false;\n\n      let removeTrackCallback: (() => void) | null = null;\n\n      // Finds any scrollable ancestors of the element and detect scroll on them.\n      const scrollableAncestors = await fetchScrollableAncestors(\n        element,\n        realtime,\n      );\n      if (viewCallback.isRemoved()) {\n        return;\n      }\n\n      const addTrackCallback = () => {\n        const trackCallback = wrapCallback(async () => {\n          const prevData = allViewData.get(element);\n\n          // Get the latest view data for the target\n          const latestData = await fetchCurrentView(element, realtime);\n          debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n          const changed = viewChanged(latestData, prevData);\n          if (changed) {\n            // When comparing for changes, we round the numbers to certain number\n            // of decimal places, and allViewData serves as a \"last threshold\"\n            // state, so only update it if there was a significant change.\n            // Otherwise very quick changes in small increments would get\n            // rejected as \"no change\".\n            allViewData.set(element, latestData);\n\n            if (isInview && !viewCallback.isRemoved()) {\n              // Could have been removed during the debounce window\n              await invokeCallback(viewCallback, element, latestData);\n            }\n          } else {\n            debug: logger?.debug9(\"ViewData same as last\");\n          }\n        });\n\n        // TODO Is there a better way to detect when it's moved?\n        viewCallback.onRemove(trackCallback.remove);\n        removeTrackCallback = trackCallback.remove;\n\n        // Detect when target's class or style attribute change\n        domWatcher.onMutation(trackCallback, {\n          categories: [MC.S_ATTRIBUTE],\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when target is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: element,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the root is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: config._root ?? MH.getWindow(),\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the target's scrollable ancestors are scrolled (this\n        // will almost certainly include the main scrollable element).\n        for (const ancestor of scrollableAncestors) {\n          scrollWatcher.onScroll(trackCallback, {\n            scrollable: ancestor,\n            [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n            threshold: options._scrollThreshold,\n            [MC.S_SKIP_INITIAL]: true,\n          });\n        }\n      };\n\n      const enterOrLeaveCallback = createCallback(\n        (target__ignored, viewData) => {\n          if (viewData.views[0] === MC.S_AT) {\n            if (!isInview) {\n              isInview = true;\n              addTrackCallback();\n            }\n          } else if (removeTrackCallback) {\n            isInview = false;\n            removeTrackCallback();\n            removeTrackCallback = null;\n          }\n        },\n        MH.assign(options, {\n          _viewsBitmask: VIEWS_SPACE.bitmask,\n        }),\n        TRACK_REGULAR,\n      );\n\n      viewCallback.onRemove(enterOrLeaveCallback.remove);\n\n      allViewData.set(element, viewData); // to avoid duplicate initial call\n      // Setup the track and the \"inView\" state\n      if (!enterOrLeaveCallback.isRemoved()) {\n        invokeCallback(enterOrLeaveCallback, element, viewData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentView = (target, realtime = false) =>\n      fetchElement(config._root, target).then((element) =>\n        fetchCurrentView(element, realtime),\n      );\n\n    // ----------\n\n    this.trackView = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      return setupOnView(element, handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackView = (element, handler?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      removeOnView(element, handler, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onView = (target, handler, options?) =>\n      setupOnView(target, handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offView = (target, handler) =>\n      removeOnView(target, handler, TRACK_REGULAR); // no need to await\n  }\n}\n\n/**\n * @interface\n */\nexport type ViewWatcherConfig = {\n  /**\n   * The root element to use for the IntersectionObserver.\n   *\n   * **NOTE:** If the target you want to observe (via\n   * {@link ViewWatcher.onView}) is inside a scrolling element, then you should\n   * probably set the watcher's root to be that scrolling element or a wrapper\n   * around it. However, even if you don't or can't do that, the watcher will\n   * try to be smart about that, and when the target is no longer intercepting\n   * because it's scrolled outside its scrolling container, and yet its\n   * bounding box is still inside the watcher root (e.g. the viewport) the\n   * watcher will determine the relative view based on the scrolling container\n   * and not the actual watcher root.\n   *\n   * @defaultValue null\n   */\n  root?: Element | null;\n\n  /**\n   * The rootMargin to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue \"0px 0px 0px 0px\"\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue 0\n   */\n  threshold?: number | number[];\n};\n\n/**\n * @interface\n */\nexport type OnViewOptions = {\n  /**\n   * Specifies a list of {@link View}s to target for.\n   *\n   * The handler will only be called if there is a change of view relative to\n   * the target that matches the given ones.\n   *\n   * It can be a comma-separated list of \"views\" or an array of such names.\n   *\n   * @defaultValue undefined\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * @interface\n */\nexport type TrackViewOptions = {\n  /**\n   * Use this debounce window for the {@link ScrollWatcher} and\n   * {@link SizeWatcher} involved in the view tracking.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts during scroll, but you probably need this when\n   * doing scroll-based animations.\n   *\n   * @defaultValue undefined // ScrollWatcher and SizeWatcher defaults\n   */\n  debounceWindow?: number;\n\n  /**\n   * Use this resize threshold for the {@link SizeWatcher} involved in the view\n   * tracking.\n   *\n   * @defaultValue undefined // SizeWatcher default\n   */\n  resizeThreshold?: number;\n\n  /**\n   * Use this scroll threshold for the {@link ScrollWatcher} involved in the\n   * view tracking.\n   *\n   * @defaultValue undefined // ScrollWatcher default\n   */\n  scrollThreshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - The element that is the target of the IntersectionObserver. If the call to\n *   {@link ViewWatcher.onView} specified an element as the target, it will be\n *   the same. If it specified an offset, then the element passed to the\n *   callback will be an absolutely positioned trigger overlay that's created\n *   as a result.\n * - the {@link ViewData} for relative to the target\n */\nexport type OnViewHandlerArgs = [Element, ViewData];\nexport type OnViewCallback = Callback<OnViewHandlerArgs>;\nexport type OnViewHandler = CallbackHandler<OnViewHandlerArgs> | OnViewCallback;\n\nexport type ViewData = {\n  isIntersecting: boolean;\n\n  targetBounds: BoundingRect;\n\n  rootBounds: BoundingRect;\n\n  /**\n   * The current view or views of the target. There would be two views given\n   * only if the target is _not_ in view and it's diagonally across from the\n   * root, e.g. both below and to the right.\n   */\n  views: [View, View?];\n\n  /**\n   * This is the target's position relative to the\n   * {@link ViewWatcherConfig.root | root} with values relative to the root\n   * size.\n   *\n   * It is like the {@link targetBounds} except that each quantity is scaled by\n   * the root's width or height, and having two additional computed values.\n   */\n  relative: {\n    x: number;\n    y: number;\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n    width: number;\n    height: number;\n\n    /**\n     * Average of the relative left and right.\n     */\n    hMiddle: number;\n\n    /**\n     * Average of the relative top and bottom.\n     */\n    vMiddle: number;\n  };\n};\n\n// ----------------------------------------\n\ntype ViewWatcherConfigInternal = {\n  _root: Element | null;\n  _rootMargin: string;\n  _threshold: number | number[];\n};\n\ntype OnViewOptionsInternal = {\n  _element: Element;\n  _viewsBitmask: number;\n  _debounceWindow: number | undefined;\n  _resizeThreshold: number | undefined;\n  _scrollThreshold: number | undefined;\n};\n\ntype IntersectionData = {\n  _target: Element;\n  _targetBounds: BoundingRect;\n  _root: Element | null;\n  _rootMargins: [number, number, number, number];\n  _rootBounds: BoundingRect;\n  _isIntersecting: boolean | null; // null means unknown, no IntersectionObserverEntry\n  _isCrossOrigin: boolean | null; // null means unknown, no IntersectionObserverEntry\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, ViewWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (\n  config: ViewWatcherConfig | undefined,\n): ViewWatcherConfigInternal => {\n  return {\n    _root: config?.root || null,\n    _rootMargin: config?.rootMargin ?? \"0px 0px 0px 0px\",\n    _threshold: config?.threshold || 0,\n  };\n};\n\nconst TRACK_REGULAR = 1; // only entering/leaving root\nconst TRACK_FULL = 2; // entering/leaving + moving across (fine-grained)\n\n// --------------------\n\nconst fetchOptions = async (\n  root: Element | null,\n  target: ViewTarget,\n  options: (OnViewOptions & TrackViewOptions) | undefined,\n): Promise<OnViewOptionsInternal> => {\n  return {\n    _element: await fetchElement(root, target),\n    _viewsBitmask: getViewsBitmask(options?.views),\n    _debounceWindow: options?.debounceWindow,\n    _resizeThreshold: options?.resizeThreshold,\n    _scrollThreshold: options?.scrollThreshold,\n  };\n};\n\nconst fetchScrollableAncestors = async (\n  element: Element,\n  realtime: boolean,\n) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollableAncestors = [];\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = getClosestScrollable(ancestor, { active: true }))) {\n    scrollableAncestors.push(ancestor);\n  }\n\n  return scrollableAncestors;\n};\n\nconst viewChanged = (latestData: ViewData, prevData: ViewData | undefined) =>\n  !prevData ||\n  viewsToBitmask(prevData.views) !== viewsToBitmask(latestData.views) ||\n  !compareValuesIn(\n    MH.copyBoundingRectProps(prevData.targetBounds),\n    MH.copyBoundingRectProps(latestData.targetBounds),\n  ) ||\n  !compareValuesIn(prevData.rootBounds, latestData.rootBounds) ||\n  !compareValuesIn(prevData.relative, latestData.relative);\n\nconst viewsToBitmask = (views: [View, View?]) =>\n  VIEWS_SPACE.bit[views[0]] | (views[1] ? VIEWS_SPACE.bit[views[1]] : 0);\n\nconst fetchIntersectionData = async (\n  config: ViewWatcherConfigInternal,\n  entryOrTarget: IntersectionObserverEntry | Element,\n  realtime = false,\n): Promise<IntersectionData> => {\n  const root = config._root;\n  const vpSize = await fetchViewportSize(realtime);\n  const rootMargins = toMargins(config._rootMargin, vpSize);\n\n  let target: Element;\n  let targetBounds: BoundingRect;\n  let rootBounds: BoundingRect | null = null;\n  let isIntersecting: boolean | null = null;\n  let isCrossOrigin: boolean | null = null;\n\n  if (MH.isInstanceOf(entryOrTarget, IntersectionObserverEntry)) {\n    target = entryOrTarget.target;\n    targetBounds = entryOrTarget.boundingClientRect;\n    rootBounds = entryOrTarget.rootBounds;\n    isIntersecting = entryOrTarget.isIntersecting;\n    isCrossOrigin = !entryOrTarget.rootBounds;\n  } else {\n    target = entryOrTarget;\n    targetBounds = await fetchBounds(target, realtime);\n  }\n\n  if (!rootBounds) {\n    rootBounds = await fetchBounds(root, realtime, rootMargins);\n  }\n\n  return {\n    _target: target,\n    _targetBounds: targetBounds,\n    _root: root,\n    _rootMargins: rootMargins,\n    _rootBounds: rootBounds,\n    _isIntersecting: isIntersecting,\n    _isCrossOrigin: isCrossOrigin,\n  };\n};\n\nconst fetchBounds = async (\n  root: Element | null,\n  realtime: boolean,\n  rootMargins?: [number, number, number, number],\n): Promise<BoundingRect> => {\n  let rect: BoundingRect;\n\n  if (root) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    rect = MH.copyBoundingRectProps(MH.getBoundingClientRect(root));\n  } else {\n    const { width, height } = await fetchViewportSize(realtime);\n    rect = {\n      x: 0,\n      left: 0,\n      right: width,\n      width,\n      y: 0,\n      top: 0,\n      bottom: height,\n      height,\n    };\n  }\n\n  if (rootMargins) {\n    rect.x = rect[MC.S_LEFT] -= rootMargins[3];\n    rect[MC.S_RIGHT] += rootMargins[1];\n    rect[MC.S_WIDTH] += rootMargins[1] + rootMargins[3];\n\n    rect.y = rect[MC.S_TOP] -= rootMargins[0];\n    rect[MC.S_BOTTOM] += rootMargins[2];\n    rect[MC.S_HEIGHT] += rootMargins[0] + rootMargins[2];\n  }\n\n  return rect;\n};\n\nconst fetchViewData = async (\n  intersection: IntersectionData,\n  realtime = false,\n): Promise<ViewData> => {\n  const vpSize = await fetchViewportSize(realtime);\n  const vpHeight = vpSize[MC.S_HEIGHT];\n  const vpWidth = vpSize[MC.S_WIDTH];\n\n  const views = await fetchViews(intersection, realtime);\n\n  const relative = MH.merge(\n    { hMiddle: NaN, vMiddle: NaN },\n    MH.copyBoundingRectProps(intersection._targetBounds),\n  );\n\n  relative.y /= vpHeight;\n  relative[MC.S_TOP] /= vpHeight;\n  relative[MC.S_BOTTOM] /= vpHeight;\n  relative[MC.S_HEIGHT] /= vpHeight;\n\n  relative.x /= vpWidth;\n  relative[MC.S_LEFT] /= vpWidth;\n  relative[MC.S_RIGHT] /= vpWidth;\n  relative[MC.S_WIDTH] /= vpWidth;\n\n  relative.hMiddle = (relative[MC.S_LEFT] + relative[MC.S_RIGHT]) / 2;\n  relative.vMiddle = (relative[MC.S_TOP] + relative[MC.S_BOTTOM]) / 2;\n\n  const viewData: ViewData = {\n    isIntersecting: intersection._isIntersecting ?? views[0] === MC.S_AT,\n    targetBounds: intersection._targetBounds,\n    rootBounds: intersection._rootBounds,\n    views,\n    relative,\n  };\n\n  return viewData;\n};\n\nconst fetchViews = async (\n  intersection: IntersectionData,\n  realtime: boolean,\n  useScrollingAncestor?: Element,\n): Promise<[View, View?]> => {\n  if (intersection._isIntersecting) {\n    return [MC.S_AT];\n  }\n\n  let rootBounds: BoundingRect;\n  if (useScrollingAncestor) {\n    rootBounds = await fetchBounds(\n      useScrollingAncestor,\n      realtime,\n      intersection._rootMargins,\n    );\n  } else {\n    rootBounds = intersection._rootBounds;\n  }\n\n  const targetBounds = intersection._targetBounds;\n  const delta = {\n    _left: rootBounds[MC.S_LEFT] - targetBounds[MC.S_LEFT],\n    _right: targetBounds[MC.S_RIGHT] - rootBounds[MC.S_RIGHT],\n    _top: rootBounds[MC.S_TOP] - targetBounds[MC.S_TOP],\n    _bottom: targetBounds[MC.S_BOTTOM] - rootBounds[MC.S_BOTTOM],\n  };\n\n  let xView: View | null = null;\n  let yView: View | null = null;\n  if (delta._left > 0 && delta._right > 0) {\n    // Target is wider than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    xView = delta._left > delta._right ? MC.S_RIGHT : MC.S_LEFT;\n  } else if (delta._left > 0) {\n    // Target is to the left of the root\n    xView = MC.S_RIGHT;\n  } else if (delta._right > 0) {\n    // Target is to the right of the root\n    xView = MC.S_LEFT;\n  } // else target is horizontally contained in root, see below\n\n  if (delta._top > 0 && delta._bottom > 0) {\n    // Target is taller than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    yView = delta._top > delta._bottom ? MC.S_BELOW : MC.S_ABOVE;\n  } else if (delta._top > 0) {\n    // Target is above the root\n    yView = MC.S_BELOW;\n  } else if (delta._bottom > 0) {\n    // Target is below the root\n    yView = MC.S_ABOVE;\n  } // else target is vertically contained in root, see below\n\n  if (xView && yView) {\n    // diagonally out of vide\n    return [xView, yView];\n  } else if (xView) {\n    // horizontally out of vide\n    return [xView];\n  } else if (yView) {\n    // vertically out of vide\n    return [yView];\n  }\n\n  // The target is contained in the root bounds and yet isIntersecting was\n  // not true. This means that either:\n  //\n  // 1. It may be intersecting, but we didn't get an actual\n  //    IntersectionObserverEntry and we don't know if it's intersecting\n  //    or not\n  // 2. The target is inside a scrolling element that is _not_ being used as\n  //    the observer root, and the target has scrolled out of the scrollable\n  //    bounds but still inside the viewport\n  // 3. We're inside a cross-origin iFrame and the iFrame is partially or\n  //    fully not-intersecting\n\n  if (!intersection._isCrossOrigin) {\n    // This is case 1. or 2. => get the views relative to the closest\n    // scrollable ancestor relative to which it is _not_ intersecting, if\n    // any. If it's nested inside several scrolling elements, we'll end up\n    // looping over each one until we find the one for which the target is\n    // outside its box.\n    //\n    // It is too risky to use active isScrollable check here since we could be\n    // inside an onScroll handler, so just use passive.\n    const scrollingAncestor = getClosestScrollable(\n      useScrollingAncestor ?? intersection._target,\n    );\n\n    if (scrollingAncestor) {\n      return fetchViews(intersection, realtime, scrollingAncestor);\n    }\n  }\n\n  // Either case 3. (cross-origin iframe outside the viewport) or case 1. and\n  // the target is actually intersecting the root. Either way, it's to be\n  // considered in-view of its root.\n  return [MC.S_AT];\n};\n\nconst setViewCssProps = (\n  element: Element,\n  viewData: ViewData | undefined | null,\n) => {\n  const relative: Record<string, number> = viewData?.relative || {};\n  const props = {\n    top: relative.top,\n    bottom: relative.bottom,\n    left: relative.left,\n    right: relative.right,\n    [MC.S_WIDTH]: relative[MC.S_WIDTH],\n    [MC.S_HEIGHT]: relative[MC.S_HEIGHT],\n    hMiddle: relative.hMiddle,\n    vMiddle: relative.vMiddle,\n  };\n  setNumericStyleJsVars(element, props, { _prefix: \"r-\", _numDecimal: 4 }); // don't await here\n};\n\nconst fetchElement = async (\n  root: Element | null,\n  target: ViewTarget,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  } else if (!MH.isString(target)) {\n    throw MH.usageError(\n      \"'target' must be an offset string or an HTMLElement | SVGElement | MathMLElement\",\n    );\n  }\n\n  const overlayOptions = getOverlayOptions(root, target);\n  return await createOverlay(overlayOptions);\n};\n\nconst getOverlayOptions = (\n  root: Element | null,\n  target: string,\n): OverlayOptions => {\n  const { reference, value } = parseScrollOffset(target);\n\n  let ovrDimension: \"width\" | \"height\";\n  if (reference === MC.S_TOP || reference === MC.S_BOTTOM) {\n    ovrDimension = MC.S_WIDTH;\n  } else if (reference === MC.S_LEFT || reference === MC.S_RIGHT) {\n    ovrDimension = MC.S_HEIGHT;\n  } else {\n    throw MH.usageError(`Invalid offset reference: '${reference}'`);\n  }\n\n  return {\n    parent: MH.isHTMLElement(root) ? root : undefined,\n    style: {\n      [reference]: value,\n      [ovrDimension]: \"100%\",\n    },\n  };\n};\n\nconst invokeCallback = (\n  callback: OnViewCallback,\n  element: Element,\n  viewData: ViewData,\n) => callback.invoke(element, MH.copyObject(viewData)).catch(logError);\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nexport * from \"@lisn/watchers/dom-watcher\";\nexport * from \"@lisn/watchers/gesture-watcher\";\nexport * from \"@lisn/watchers/layout-watcher\";\nexport * from \"@lisn/watchers/pointer-watcher\";\nexport * from \"@lisn/watchers/scroll-watcher\";\nexport * from \"@lisn/watchers/size-watcher\";\nexport * from \"@lisn/watchers/view-watcher\";\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport { settings } from \"@lisn/globals/settings\";\nsettings.autoWidgets = true;\n\nexport { settings } from \"@lisn/globals/settings\";\nexport * as watchers from \"@lisn/watchers/index\";\n","/**\n * ## Specification for the HTML API for widgets\n *\n * The following describes the general syntax when using the HTML API for\n * automatic creation of widgets based on data attributes\n * ({@link Settings.settings.autoWidgets | settings.autoWidgets} must be true.\n *\n * A widget specification should be given as a\n * `data-lisn-<WidgetName>=\"<WidgetConfList>\"` attribute.\n *\n * Alternatively, if using all default configurations, you can simply add the\n * `lisn-<WidgetName>` CSS class. Specifying a configuration using CSS classes\n * is not currently possible for widgets, only triggers.\n *\n * The general specification for a widget is of the form:\n *\n * ```\n * <WidgetConfList> ::= <WidgetConf> { \";\" <WidgetConf> }\n *\n * <WidgetConf> ::= [ <WidgetOption> { \"|\" <WidgetOption> } ]\n *\n * <WidgetOption> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n * ```\n *\n * **NOTE:**\n *\n * There can be 0 or more spaces around any of the separator characters.\n *\n * Not all widgets support multiple instances per single element and therefore\n * multiple configurations. Refer to the specific widget.\n *\n * The characters \"|\", \";\", \"=\" are reserved separators and cannot be used\n * literally as part of an option value.\n *\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { hasClass, getData } from \"@lisn/utils/css-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { toArrayIfSingle } from \"@lisn/utils/misc\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString, kebabToCamelCase, splitOn } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { DOMWatcher } from \"@lisn/watchers/dom-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\nexport class Widget {\n  /**\n   * Disables the functionality of the widget. What this means is specific to\n   * each widget.\n   */\n  readonly disable: () => Promise<void>;\n\n  /**\n   * Re-enables the functionality of the widget. What this means is specific to\n   * each widget.\n   */\n  readonly enable: () => Promise<void>;\n\n  /**\n   * Re-enables the widget if disabled, otherwise disables it.\n   */\n  readonly toggleEnable: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is disabled.\n   */\n  readonly onDisable: (handler: WidgetHandler) => void;\n\n  /**\n   * The given handler will be called when the widget is enabled.\n   */\n  readonly onEnable: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is currently disabled.\n   */\n  readonly isDisabled: () => boolean;\n\n  /**\n   * Undoes all modifications to the element and returns it to its original state.\n   *\n   * You will need to recreate it if you want to enable its functionality again.\n   */\n  readonly destroy: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is destroyed.\n   */\n  readonly onDestroy: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is destroyed.\n   */\n  readonly isDestroyed: () => boolean;\n\n  /**\n   * Returns the element passed to the widget constructor.\n   */\n  readonly getElement: () => Element;\n\n  /**\n   * Retrieve an existing widget by element and ID.\n   */\n  static get(element: Element, id: string): Widget | null {\n    return instances.get(element)?.get(id) || null;\n  }\n\n  /**\n   * **IMPORTANT:** If ID is given and there's already a widget with this ID on\n   * this element, it will be destroyed!\n   */\n  constructor(element: Element, config?: { id?: string }) {\n    const logger = debug\n      ? new debug.Logger({\n          name: `${this.constructor.name}-${formatAsString(element)}`,\n          logAtCreation: this,\n        })\n      : null;\n\n    const id = config?.id;\n    if (id) {\n      instances.get(element)?.get(id)?.destroy(); // don't await here\n      instances.sGet(element).set(id, this);\n    }\n\n    let isDisabled = false;\n    let isDestroyed = false;\n    let destroyPromise: Promise<void>;\n\n    const enableCallbacks = MH.newSet<WidgetCallback>();\n    const disableCallbacks = MH.newSet<WidgetCallback>();\n    const destroyCallbacks = MH.newSet<WidgetCallback>();\n\n    this.disable = async () => {\n      if (!isDisabled) {\n        debug: logger?.debug8(\"Disabling\");\n        isDisabled = true;\n\n        for (const callback of disableCallbacks) {\n          await callback.invoke(this);\n        }\n      }\n    };\n\n    this.enable = async () => {\n      if (!isDestroyed && isDisabled) {\n        debug: logger?.debug8(\"Enabling\");\n        isDisabled = false;\n\n        for (const callback of enableCallbacks) {\n          await callback.invoke(this);\n        }\n      }\n    };\n\n    this.toggleEnable = async () => {\n      if (!isDestroyed) {\n        await (isDisabled ? this.enable : this.disable)();\n      }\n    };\n\n    this.onDisable = (handler) => disableCallbacks.add(wrapCallback(handler));\n    this.onEnable = (handler) => enableCallbacks.add(wrapCallback(handler));\n\n    this.isDisabled = () => isDisabled;\n\n    this.destroy = () => {\n      if (!destroyPromise) {\n        destroyPromise = (async () => {\n          debug: logger?.debug8(\"Destroying\");\n          isDestroyed = true;\n          await this.disable();\n\n          for (const callback of destroyCallbacks) {\n            await callback.invoke(this);\n          }\n\n          enableCallbacks.clear();\n          disableCallbacks.clear();\n          destroyCallbacks.clear();\n\n          if (id) {\n            const elInstances = instances.get(element);\n            if (elInstances?.get(id) === this) {\n              MH.deleteKey(elInstances, id);\n              instances.prune(element);\n            }\n          }\n        })();\n      }\n\n      return destroyPromise;\n    };\n\n    this.onDestroy = (handler) => destroyCallbacks.add(wrapCallback(handler));\n\n    this.isDestroyed = () => isDestroyed;\n\n    this.getElement = () => element;\n  }\n}\n\nexport type WidgetCallbackArgs = [Widget];\nexport type WidgetCallback = Callback<WidgetCallbackArgs>;\nexport type WidgetHandler =\n  | WidgetCallback\n  | CallbackHandler<WidgetCallbackArgs>;\n\n/**\n * **NOTE:** If the function returns a widget or a list of widgets created for\n * the given element, then each one will be automatically destroyed if the\n * element is removed from the DOM.\n */\nexport type WidgetCreateFn<Config extends Record<string, unknown>> = (\n  element: Element,\n  config?: Config,\n) => Widget | Widget[] | null | Promise<Widget | Widget[] | null>;\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidatorObject<\n  Config extends Record<string, unknown>,\n> = {\n  [K in keyof Config]: (key: K, v: unknown) => Config[K];\n};\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigAsyncValidatorObject<\n  Config extends Record<string, unknown>,\n> = {\n  [K in keyof Config]: (key: K, v: unknown) => Config[K] | Promise<Config[K]>;\n};\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidatorFunc<Config extends Record<string, unknown>> =\n  (\n    element: Element,\n  ) =>\n    | WidgetConfigValidatorObject<Config>\n    | WidgetConfigAsyncValidatorObject<Config>;\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidator<Config extends Record<string, unknown>> =\n  | WidgetConfigValidatorObject<Config>\n  | WidgetConfigValidatorFunc<Config>;\n\n/**\n * Enables automatic setting up of a widget from an elements matching the given\n * selector.\n *\n * If {@link settings.autoWidgets} is true, nothing is done. Otherwise,\n * when an element matching the selector is added to the DOM, `newWidget` will\n * be called and it's expected to setup the widget.\n *\n * **IMPORTANT:** The widget that is returned by `newWidget` will be\n * automatically destroyed when the element that created them is removed from\n * the DOM.\n *\n * **IMPORTANT:** If a widget by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param {} name       The name of the widget. Should be in kebab-case.\n * @param {} newWidget  Called for every element matching the widget selector.\n * @param {} configValidator\n *                      A validator object, or a function that returns such an\n *                      object, for all options supported by the widget. If\n *                      given, then the `newWidget` function will also be\n *                      passed a configuration object constructed from the\n *                      element's data attribute.\n * @param {} [options.selector]\n *                      The selector to match elements for. If not given, then\n *                      uses a default value of `[data-lisn-<name>], .lisn-<name>`\n * @param {} [options.supportsMultiple]\n *                      If true, and if `configValidator` is given, then the\n *                      value of the element's widget specific data attribute\n *                      will be split on \";\" and each one parsed individually\n *                      as a configuration. Then the `newWidget` function will\n *                      be called once for each configuration.\n */\nexport const registerWidget = async <Config extends Record<string, unknown>>(\n  name: string,\n  newWidget: WidgetCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n  options?: {\n    selector?: string;\n    supportsMultiple?: boolean;\n  },\n) => {\n  if (registeredWidgets.has(name)) {\n    return;\n  }\n\n  registeredWidgets.add(name);\n\n  // init after DOM loaded so that the settings can be configured by the user\n  // straight after loading LISN.js\n  await waitForInteractive();\n\n  const prefixedName = MH.prefixName(name);\n  const selector = options?.selector ?? getDefaultWidgetSelector(prefixedName);\n\n  if (settings.autoWidgets) {\n    const domWatcher = DOMWatcher.reuse();\n    domWatcher.onMutation(\n      async (operation) => {\n        const element = MH.currentTargetOf(operation);\n        const thisConfigValidator = MH.isFunction(configValidator)\n          ? await configValidator(element)\n          : configValidator;\n\n        const widgets: Widget[] = [];\n        const configSpecs: string[] = [];\n        const dataAttr = getData(element, prefixedName);\n\n        if (options?.supportsMultiple) {\n          if (hasClass(element, prefixedName)) {\n            configSpecs.push(\"\");\n          }\n\n          if (dataAttr !== null) {\n            configSpecs.push(\n              ...(dataAttr ? splitOn(dataAttr, \";\", true) : [\"\"]),\n            );\n          }\n        } else {\n          configSpecs.push(dataAttr ?? \"\");\n        }\n\n        for (const spec of configSpecs) {\n          const config = thisConfigValidator\n            ? await fetchWidgetConfig(spec, thisConfigValidator)\n            : undefined;\n\n          const theseWidgets = await newWidget(element, config);\n          if (theseWidgets) {\n            widgets.push(...toArrayIfSingle(theseWidgets));\n          }\n        }\n\n        // auto-destroy on element remove\n        if (MH.lengthOf(widgets)) {\n          domWatcher.onMutation(\n            () => {\n              for (const w of widgets) {\n                w.destroy();\n              }\n            },\n            {\n              target: element,\n              categories: [MC.S_REMOVED],\n            },\n          );\n        }\n      },\n      {\n        selector,\n        categories: [MC.S_ADDED],\n      },\n    );\n  }\n};\n\n/**\n * Returns a configuration object from the given user input, which can be\n * either an object or a `<separator>` separated string of key=values.\n *\n * If `input` is a string, it must be of the format:\n *\n * ```\n * <UserConfigString> ::= <OptionSpec> { <Separator> <OptionSpec> }\n *\n * <OptionSpec> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n * ```\n *\n * By default, for widgets `<separator>` is \"|\".\n *\n * **NOTE:** If `input` is a string, option names will be converted from\n * kebab-case to camelCase.\n *\n * The given `validator` defines the shape of the returned object. It is called\n * for each entry _in the `validator` object_, with that key and the\n * corresponding value from the input configuration, as the two parameters.\n *\n * If a key is not found in the input, the value passed to the validating\n * function will be `undefined`.\n *\n * If the input is a string and a key has no value, the value passed to the\n * validating function will be an empty string `\"\"`.\n *\n * The final configuration contains all keys from the `validator` object with\n * the value that the validating function for each key returned.\n *\n * There are several built-in validating functions that you can make use of.\n *\n * @see {@link Utils.validateStrList}\n * @see {@link Utils.validateNumber}\n * @see {@link Utils.validateBoolean}\n * @see {@link Utils.validateString}\n * @see {@link Utils.validateBooleanOrString}\n */\nexport const getWidgetConfig = <Config extends Record<string, unknown>>(\n  input: Record<string, unknown> | string | null | undefined,\n  validator: WidgetConfigValidatorObject<Config>,\n  separator = \"|\",\n): Config => {\n  const config = {} as Config;\n  if (!(input instanceof Object)) {\n    input = toOptionsObject(input, separator);\n  }\n\n  for (const key in validator) {\n    config[key] = validator[key](key, input[key]);\n  }\n  return config;\n};\n\n/**\n * Like {@link getWidgetConfig} but it accepts an object whose validator\n * functions may return a promise.\n */\nexport const fetchWidgetConfig = async <Config extends Record<string, unknown>>(\n  input: Record<string, unknown> | string | null | undefined,\n  validator: WidgetConfigAsyncValidatorObject<Config>,\n  separator = \"|\",\n): Promise<Config> => {\n  const config = {} as Config;\n  const configPromises = getWidgetConfig<{\n    [K in keyof Config]: Config[K] | Promise<Config[K]>;\n  }>(input, validator, separator);\n\n  for (const key in configPromises) {\n    config[key] = await configPromises[key];\n  }\n\n  return config;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultWidgetSelector = (prefix: string) =>\n  `.${prefix},[data-${prefix}]`;\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchUniqueWidget = async <W extends Widget>(\n  name: string,\n  element: Element,\n  Type: { get: (element: Element) => W | null },\n): Promise<W | null> => {\n  let widget = Type.get(element);\n  if (!widget) {\n    await waitForDelay(0); // in case it's being processed now\n    widget = Type.get(element);\n\n    if (!widget) {\n      logWarn(`No ${name} widget for element ${formatAsString(element)}`);\n      return null;\n    }\n  }\n\n  return widget;\n};\n\nconst instances = newXWeakMap<Element, Map<string, Widget>>(() => MH.newMap());\nconst registeredWidgets = MH.newSet<string>();\n\n// --------------------\n\nconst toOptionsObject = (\n  input: string | null | undefined,\n  separator: string,\n) => {\n  const options: Record<string, string> = {};\n  for (const entry of MH.filter(\n    splitOn(input ?? \"\", separator, true),\n    (v) => !MH.isEmpty(v),\n  )) {\n    const [key, value] = splitOn(entry, /\\s*=\\s*/, true, 1);\n    options[kebabToCamelCase(key)] = value ?? \"\";\n  }\n  return options;\n};\n","/**\n * @module Actions\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { splitOn } from \"@lisn/utils/text\";\n\nimport { WidgetConfigValidator, fetchWidgetConfig } from \"@lisn/widgets/widget\";\n\n/**\n * @interface\n */\nexport type Action = {\n  do: () => void;\n  undo: () => void;\n  toggle: () => void;\n};\n\nexport type ActionCreateFn<Config extends Record<string, unknown>> = (\n  element: Element,\n  args: string[],\n  config?: Config,\n) => Action | Promise<Action>;\n\n/**\n * Registers the given action so that it can be parsed by\n * {@link Triggers.registerTrigger}.\n *\n * **IMPORTANT:** If an action by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param {} name      The name of the action. Should be in kebab-case.\n * @param {} newAction Called for every action specification for a trigger\n *                     parsed by {@link Triggers.registerTrigger}\n */\nexport const registerAction = <Config extends Record<string, unknown>>(\n  name: string,\n  newAction: ActionCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  if (registeredActions.has(name)) {\n    return;\n  }\n\n  const newActionFromSpec = async (\n    element: Element,\n    argsAndOptions: string,\n  ) => {\n    const thisConfigValidator = MH.isFunction(configValidator)\n      ? await configValidator(element)\n      : configValidator;\n\n    const args: string[] = [];\n    const config = thisConfigValidator\n      ? await fetchWidgetConfig(argsAndOptions, thisConfigValidator, \",\")\n      : undefined;\n\n    for (const entry of splitOn(argsAndOptions, \",\", true)) {\n      if (entry) {\n        if (!MH.includes(entry, \"=\")) {\n          args.push(entry);\n        }\n      }\n    }\n\n    return newAction(element, args, config);\n  };\n\n  registeredActions.set(name, newActionFromSpec);\n};\n\n/**\n * Returns an {@link Action} registered under the given name and instantiated\n * with the given element and arguments and options parsed from the given string.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given spec is not valid.\n */\nexport const fetchAction = async (\n  element: Element,\n  name: string,\n  argsAndOptions?: string,\n): Promise<Action> => {\n  const newActionFromSpec = registeredActions.get(name);\n  if (!newActionFromSpec) {\n    throw MH.usageError(`Unknown action '${name}'`);\n  }\n\n  return await newActionFromSpec(element, argsAndOptions || \"\");\n};\n\n// --------------------\n\nconst registeredActions = MH.newMap<\n  string,\n  (element: Element, spec: string) => Action | Promise<Action>\n>();\n","/**\n * @module Actions\n *\n * @categoryDescription Adding/removing class\n * {@link AddClass} and {@link RemoveClass} add or remove a list of CSS classes\n * to/from the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { addClasses, removeClasses, toggleClass } from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Adds or removes a list of CSS classes to/from the given element.\n *\n * **IMPORTANT:** When constructed, it removes all given classes from the\n * element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"add-class\".\n * - Accepted string arguments: one or more CSS classes\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@add-class: clsA, clsB\"></div>\n * ```\n *\n * @category Adding/removing class\n */\nexport class AddClass implements Action {\n  /**\n   * Adds the classes given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Removes the classes given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles each class given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"add-class\",\n      (element, classNames) => new AddClass(element, ...classNames),\n    );\n  }\n\n  constructor(element: Element, ...classNames: string[]) {\n    const { _add, _remove, _toggle } = getMethods(element, classNames);\n    _remove(); // initial state\n\n    this.do = _add;\n    this.undo = _remove;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Removes or adds a list of CSS classes to/from the given element.\n *\n * **IMPORTANT:** When constructed, it adds all given classes from the element\n * as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"remove-class\".\n * - Accepted string arguments: one or more CSS classes\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@remove-class: clsA, clsB\"></div>\n * ```\n *\n * @category Adding/removing class\n */\nexport class RemoveClass implements Action {\n  /**\n   * Removes the classes given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Adds the classes given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles each class given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"remove-class\",\n      (element, classNames) => new RemoveClass(element, ...classNames),\n    );\n  }\n\n  constructor(element: Element, ...classNames: string[]) {\n    const { _add, _remove, _toggle } = getMethods(element, classNames);\n    _add(); // initial state\n\n    this.do = _remove;\n    this.undo = _add;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element, classNames: string[]) => {\n  return {\n    _add: () => addClasses(element, ...classNames),\n\n    _remove: () => removeClasses(element, ...classNames),\n\n    _toggle: async () => {\n      for (const cls of classNames) {\n        await toggleClass(element, cls);\n      }\n    },\n  };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  addClassesNow,\n  removeClassesNow,\n  getData,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\n\n/**\n * @param {} webAnimationCallback This function is called for each\n *                                {@link https://developer.mozilla.org/en-US/docs/Web/API/Animation | Animation}\n *                                on the element. It {@link waitForMeasureTime}\n *                                before reading the animations.\n * @param {} legacyCallback       This function is called if the browser does\n *                                not support the Web Animations API. It is\n *                                called after {@link waitForMutateTime} so it\n *                                can safely modify styles.\n * @param {} realtime             If true, then it does not\n *                                {@link waitForMeasureTime} or\n *                                {@link waitForMutateTime} and runs\n *                                synchronously.\n *\n * @category Animations\n */\nexport const iterateAnimations = async (\n  element: Element,\n  webAnimationCallback: (animation: Animation) => void,\n  legacyCallback: (element: Element) => void,\n  realtime = false,\n) => {\n  /* istanbul ignore next */ // jsdom doesn't support Web Animations\n  if (\n    \"getAnimations\" in element &&\n    getData(element, MH.prefixName(\"test-legacy\")) === null\n  ) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    for (const animation of element.getAnimations()) {\n      webAnimationCallback(animation);\n    }\n\n    // Old browsers, no Animation API\n  } else {\n    if (!realtime) {\n      await waitForMutateTime();\n    }\n\n    legacyCallback(element);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const resetCssAnimationsNow = (element: Element) => {\n  addClassesNow(element, MC.PREFIX_ANIMATE_DISABLE); // cause it to reset\n  // If we remove the disable class immediately, then it will not have the\n  // effect to reset the animation, since the browser won't see any change in\n  // the classList at the start of the frame. So we ideally need to remove the\n  // disable class after the next paint. However, depending on the animation,\n  // and its state, disabling animation and waiting for the next animation\n  // frame may cause a visible glitch, so we need to force layout now.\n  /* eslint-disable-next-line @typescript-eslint/no-unused-expressions */\n  element[MC.S_CLIENT_WIDTH]; // forces layout\n\n  removeClassesNow(element, MC.PREFIX_ANIMATE_DISABLE);\n};\n","/**\n * @module Actions\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  iterateAnimations,\n  resetCssAnimationsNow,\n} from \"@lisn/utils/animations\";\nimport {\n  hasClass,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n} from \"@lisn/utils/css-alter\";\nimport { isPageReady, waitForPageReady } from \"@lisn/utils/dom-events\";\nimport { formatAsString } from \"@lisn/utils/text\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport debug from \"@lisn/debug/debug\";\nimport { LoggerInterface } from \"@lisn/debug/types\";\n\n/**\n * Plays or reverses all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it resets and pauses the animations as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@animate\"></div>\n * ```\n *\n * @category Animation\n */\nexport class Animate implements Action {\n  /**\n   * (Re)plays the animations forwards.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * (Re)plays the animations backwards.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Reverses the animations from its current direction.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate\", (element) => new Animate(element));\n  }\n\n  constructor(element: Element) {\n    const logger = debug\n      ? new debug.Logger({\n          name: `Animate-${formatAsString(element)}`,\n        })\n      : null;\n\n    // initial state is 0% and paused\n    animate(element, GO_FORWARD, logger, true);\n    let isFirst = true;\n\n    this.do = () => animate(element, GO_FORWARD, logger);\n    this.undo = () => animate(element, GO_BACKWARD, logger);\n    this[MC.S_TOGGLE] = () => {\n      const res = animate(element, isFirst ? GO_FORWARD : GO_TOGGLE, logger);\n      isFirst = false;\n      return res;\n    };\n  }\n}\n\n// --------------------\n\ntype AnimateDirection =\n  | typeof GO_FORWARD\n  | typeof GO_BACKWARD\n  | typeof GO_TOGGLE;\n\nconst GO_FORWARD = 0;\nconst GO_BACKWARD = 1;\nconst GO_TOGGLE = 2;\n\nconst animate = (\n  element: Element,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial = false,\n) => {\n  debug: logger?.debug8(\"Animating element\");\n  return iterateAnimations(\n    element,\n    /* istanbul ignore next */ // jsdom doesn't support Web Animations\n    (animation) => setupAnimation(animation, direction, logger, isInitial),\n    (element) => setupAnimationLegacy(element, direction, logger, isInitial),\n    isInitial,\n  );\n};\n\n/* istanbul ignore next */ // jsdom doesn't support Web Animations\nconst setupAnimation = (\n  animation: Animation,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  const pauseTillReady = !isPageReady();\n  const isBackward = animation.playbackRate === -1;\n\n  debug: logger?.debug9(\"Setting up animation\", animation, {\n    direction,\n    isBackward,\n  });\n\n  if (\n    direction === GO_TOGGLE ||\n    (direction === GO_FORWARD && isBackward) ||\n    (direction === GO_BACKWARD && !isBackward)\n  ) {\n    debug: logger?.debug9(\"Reversing animation\", animation.playState);\n    animation.reverse();\n  } else if (animation.playState === \"paused\") {\n    debug: logger?.debug9(\"Playing animation\", animation.playState);\n    animation.play();\n  } else {\n    debug: logger?.debug9(\n      \"Animation has played or is playing already\",\n      animation.playState,\n    );\n  }\n\n  if (isInitial || pauseTillReady) {\n    debug: logger?.debug9(\"Pausing animation\", animation.playState);\n    animation.pause();\n\n    if (!isInitial) {\n      // we were only pausing until ready\n      /* istanbul ignore next */\n      waitForPageReady().then(() => {\n        debug: logger?.debug9(\"Restarting animation\", animation.playState);\n        animation.play();\n      });\n    }\n  }\n\n  // If the element is moved (including if wrapped, such as by the ViewTrigger),\n  // this will cancel CSS animations and replace them with new running ones\n  if (MH.isInstanceOf(animation, CSSAnimation)) {\n    const cancelHandler = (event: AnimationPlaybackEvent) =>\n      onAnimationCancel(event, animation, direction, logger, isInitial);\n\n    animation.addEventListener(MC.S_CANCEL, cancelHandler);\n    animation.addEventListener(\"finish\", () =>\n      animation.removeEventListener(MC.S_CANCEL, cancelHandler),\n    );\n  }\n};\n\n/* istanbul ignore next */ // jsdom doesn't support Web Animations\nconst onAnimationCancel = (\n  event: AnimationPlaybackEvent,\n  animation: CSSAnimation,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  // setup again the new animation\n  debug: logger?.debug9(\"Animation cancelled, re-setting up new one\");\n  const target = MH.targetOf(event);\n  if (!MH.isInstanceOf(target, Animation)) {\n    return;\n  }\n\n  const effect = target.effect;\n  if (!MH.isInstanceOf(effect, KeyframeEffect)) {\n    return;\n  }\n\n  for (const newAnimation of MH.targetOf(effect)?.getAnimations() || []) {\n    if (\n      MH.isInstanceOf(newAnimation, CSSAnimation) &&\n      newAnimation.animationName === animation.animationName\n    ) {\n      setupAnimation(newAnimation, direction, logger, isInitial);\n      break;\n    }\n  }\n};\n\nconst setupAnimationLegacy = (\n  element: Element,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  const isBackward = hasClass(element, MC.PREFIX_ANIMATE_REVERSE);\n  const isPaused = hasClass(element, MC.PREFIX_ANIMATE_PAUSE);\n\n  const pauseTillReady = !isPageReady();\n\n  const goBackwards =\n    direction === GO_BACKWARD || (direction === GO_TOGGLE && !isBackward);\n\n  const doPause = isInitial || pauseTillReady;\n\n  debug: logger?.debug9(\"Setting up legacy animations\", element, {\n    direction,\n    isBackward,\n    isPaused,\n    goBackwards,\n    doPause,\n  });\n\n  if (goBackwards === isBackward && doPause === isPaused) {\n    // nothing to do\n    debug: logger?.debug9(\"No need to reset or pause animation\");\n    return;\n  }\n\n  resetCssAnimationsNow(element);\n\n  removeClassesNow(element, MC.PREFIX_ANIMATE_PAUSE, MC.PREFIX_ANIMATE_REVERSE);\n  addClassesNow(\n    element,\n    ...(goBackwards ? [MC.PREFIX_ANIMATE_REVERSE] : []),\n    ...(doPause ? [MC.PREFIX_ANIMATE_PAUSE] : []),\n  );\n\n  if (!isInitial && pauseTillReady) {\n    waitForPageReady().then(() =>\n      removeClasses(element, MC.PREFIX_ANIMATE_PAUSE),\n    );\n  }\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Animation\n * {@link AnimatePlay} and {@link AnimatePause} resume or pause all animations\n * on the given element. They work with CSS or Web Animations.\n *\n * {@link Actions.Animate | Animate} plays or reverses all animations on the\n * given element. It works with CSS or Web Animations.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  iterateAnimations,\n  resetCssAnimationsNow,\n} from \"@lisn/utils/animations\";\nimport {\n  hasClass,\n  addClassesNow,\n  removeClassesNow,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Resumes or pauses all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it resets and pauses the animations as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate-play\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Play/pause</button>\n * <div data-lisn-on-click=\"@animate-play +target=#btn\"></div>\n * ```\n *\n * @category Animation\n */\nexport class AnimatePlay implements Action {\n  /**\n   * Resumes the animations without resetting them.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Pauses the animations without resetting them.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Resumes the animations if paused, otherwise pauses them.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate-play\", (element) => new AnimatePlay(element));\n  }\n\n  constructor(element: Element) {\n    const { _play, _pause, _toggle } = getMethods(element);\n\n    // initial state is 0% and paused\n    animate(element, PAUSE, true);\n\n    this.do = _play;\n    this.undo = _pause;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Pauses or resumes all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it plays the animations as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate-pause\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Play/pause</button>\n * <div data-lisn-on-click=\"@animate-pause +target=#btn\"></div>\n * ```\n *\n * @category Animation\n */\nexport class AnimatePause implements Action {\n  /**\n   * Pauses the animations without resetting them.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Resumes the animations without resetting them.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Resumes the animations if paused, otherwise pauses them.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate-pause\", (element) => new AnimatePause(element));\n  }\n\n  constructor(element: Element) {\n    const { _play, _pause, _toggle } = getMethods(element);\n\n    // Initial state is playing\n    _play();\n\n    this.do = _pause;\n    this.undo = _play;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\ntype AnimateAction = typeof PLAY | typeof PAUSE | typeof TOGGLE;\n\nconst PLAY = 0;\nconst PAUSE = 1;\nconst TOGGLE = 2;\n\nconst getMethods = (element: Element) => {\n  return {\n    _play: () => animate(element, PLAY),\n    _pause: () => animate(element, PAUSE),\n    _toggle: () => animate(element, TOGGLE),\n  };\n};\n\nconst animate = (\n  element: Element,\n  action: AnimateAction,\n  isInitial = false,\n) => {\n  return iterateAnimations(\n    element,\n    /* istanbul ignore next */ // jsdom doesn't support Web Animations\n    (animation) => {\n      const isPaused = animation.playState === \"paused\";\n      if (action === PLAY || (isPaused && action === TOGGLE)) {\n        animation.play();\n      } else {\n        animation.pause();\n      }\n    },\n    (element) => {\n      if (isInitial) {\n        resetCssAnimationsNow(element);\n      }\n\n      const isPaused = hasClass(element, MC.PREFIX_ANIMATE_PAUSE);\n      if (action === PLAY || (isPaused && action === TOGGLE)) {\n        removeClassesNow(element, MC.PREFIX_ANIMATE_PAUSE);\n      } else {\n        addClassesNow(element, MC.PREFIX_ANIMATE_PAUSE);\n      }\n    },\n    isInitial,\n  );\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Showing/hiding elements\n * {@link Display} and {@link Undisplay} displays or \"undisplays\" (display:\n * none) the given element.\n *\n * {@link Actions.Show | Show} and {@link Actions.Hide | Hide} show or hide the\n * given element with a smooth fading transition.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  displayElement,\n  displayElementNow,\n  undisplayElement,\n  undisplayElementNow,\n  toggleDisplayElement,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Displays or \"undisplays\" (display: none) the given element.\n *\n * **IMPORTANT:** When constructed, it adds `display: none` to the element as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"display\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Display/undisplay</button>\n * <div data-lisn-on-click=\"@display +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Display implements Action {\n  /**\n   * It reverts the element to its original `display` property.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Sets `display: none` on the element.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Displays the element if it's \"undisplayed\", otherwise \"undisplays\" it.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"display\", (element) => new Display(element));\n  }\n\n  constructor(element: Element) {\n    undisplayElementNow(element); // initial state\n\n    const { _display, _undisplay, _toggle } = getMethods(element);\n    this.do = _display;\n    this.undo = _undisplay;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * \"Undisplays\" (display: none) or displays the given element.\n *\n * **IMPORTANT:** When constructed, it removes the `lisn-undisplay` class if\n * present on the element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"undisplay\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Display/undisplay</button>\n * <div data-lisn-on-click=\"@undisplay +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Undisplay implements Action {\n  /**\n   * Sets `display: none` on the element.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * It reverts the element to its original `display` property.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Displays the element if it's \"undisplayed\", otherwise \"undisplays\" it.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"undisplay\", (element) => new Undisplay(element));\n  }\n\n  constructor(element: Element) {\n    displayElementNow(element); // initial state\n\n    const { _display, _undisplay, _toggle } = getMethods(element);\n    this.do = _undisplay;\n    this.undo = _display;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  return {\n    _display: async () => {\n      await displayElement(element); // ignore return val\n    },\n\n    _undisplay: async () => {\n      await undisplayElement(element); // ignore return val\n    },\n\n    _toggle: async () => {\n      await toggleDisplayElement(element); // ignore return val\n    },\n  };\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Searching for reference elements\n * The functions allow you to find elements that match a given string\n * specification.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { logError } from \"@lisn/utils/log\";\n\n/**\n * Get the element that matches the given reference specification.\n *\n * The specification is of the form:\n *\n * ```\n * <FullSpec> ::=\n *     <Relation> \".\" <ClassName>  |\n *     <Relation> [\"-\" <ReferenceName>] |\n *     #<DOM_ID>\n *\n * <Relation> :==\n *     \"next\"  |\n *     \"prev\"  |\n *     \"this\"  |\n *     \"first\" |\n *     \"last\"\n * ```\n *\n * - `<DOM_ID>` is the unique ID of the element\n * - `<ClassName>` is a CSS class on the element\n * - `<ReferenceName>` is the value of the `data-lisn-ref` attribute on the\n *   element you are targeting. If not given, defaults to the value of the\n *   `data-lisn-ref` attribute on `thisElement`.\n *\n * There now follows an explanation of how \"next\", \"prev\", \"this\", \"first\" and\n * \"last\" search the DOM:\n * - \"next\": the tree is search in document order (depth first, then breadth),\n *   so the returned element could be a descendant of `thisElement`\n * - \"prev\": the tree is search in document order (depth first, then breadth),\n *   but excluding ancestors of `thisElement`, so the returned element is\n *   guaranteed to _not_ be an ancestor or descendant of `thisElement`.\n * - \"this\": if the given element itself matches the specification, it is\n *   returned, otherwise the closest ancestor of the given element that matches\n *   the specification\n * - \"first\": the first element matching; the tree is search in document order\n *   (depth first, then breadth).\n * - \"last\": the last element matching; the tree is search in document order\n *   (depth first, then breadth).\n *\n * @category DOM: Searching for reference elements\n *\n * @param {} thisElement The element to search relative to\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                        If the specification is invalid or if thisElement is\n *                        not given for a specification of \"next\", \"prev\" or \"this\"\n */\nexport const getReferenceElement = (\n  spec: string,\n  thisElement: Element,\n): Element | null => {\n  if (!spec) {\n    return thisElement;\n  }\n\n  if (spec[0] === \"#\") {\n    // element ID\n    const referenceElement = MH.getElementById(spec.slice(1));\n    if (!referenceElement) {\n      return null;\n    }\n    return referenceElement;\n  }\n\n  const relation = [\"next\", \"prev\", \"this\", \"first\", \"last\"].find(\n    (p) => spec.startsWith(`${p}.`) || spec.startsWith(`${p}-`) || spec === p,\n  );\n\n  if (!relation) {\n    throw MH.usageError(`Invalid search specification '${spec}'`);\n  }\n\n  const rest = spec.slice(MH.lengthOf(relation));\n  const matchOp = rest.slice(0, 1);\n  let refOrCls = rest.slice(1);\n\n  let selector: string;\n  if (matchOp === \".\") {\n    selector = matchOp + refOrCls;\n  } else {\n    if (!refOrCls) {\n      refOrCls = getData(thisElement, PREFIX_REF) || \"\";\n    }\n\n    if (!refOrCls) {\n      throw MH.usageError(`No reference name in '${spec}'`);\n    }\n\n    selector = `[${DATA_REF}=\"${refOrCls}\"]`;\n  }\n\n  let referenceElement;\n  if (relation === \"first\") {\n    referenceElement = getFirstReferenceElement(selector);\n  } else if (relation === \"last\") {\n    referenceElement = getLastReferenceElement(selector);\n  } else {\n    if (relation === \"this\") {\n      referenceElement = getThisReferenceElement(selector, thisElement);\n    } else if (relation === \"next\") {\n      referenceElement = getNextReferenceElement(selector, thisElement);\n    } else if (relation === \"prev\") {\n      referenceElement = getPrevReferenceElement(selector, thisElement);\n    } else {\n      /* istanbul ignore next */ {\n        logError(MH.bugError(`Unhandled relation case ${relation}`));\n        return null;\n      }\n    }\n  }\n\n  if (!referenceElement) {\n    return null;\n  }\n\n  return referenceElement;\n};\n\n/**\n * Like {@link getReferenceElement} excepts if no element matches the\n * specification if will wait for at most the given time for such an element.\n *\n * @category DOM: Searching for reference elements\n */\nexport const waitForReferenceElement = (\n  spec: string,\n  thisElement: Element,\n  timeout = 200,\n) => waitForElement(() => getReferenceElement(spec, thisElement), timeout);\n\n// ----------------------------------------\n\nconst PREFIX_REF = MH.prefixName(\"ref\");\nconst DATA_REF = MH.prefixData(PREFIX_REF);\n\nconst getAllReferenceElements = (\n  selector: string,\n): NodeListOf<Element> | null => MH.docQuerySelectorAll(selector);\n\nconst getFirstReferenceElement = (selector: string): Element | null =>\n  MH.docQuerySelector(selector);\n\nconst getLastReferenceElement = (selector: string): Element | null => {\n  const allRefs = getAllReferenceElements(selector);\n  return (allRefs && allRefs[MH.lengthOf(allRefs) - 1]) || null;\n};\n\nconst getThisReferenceElement = (\n  selector: string,\n  thisElement: Element,\n): Element | null => thisElement.closest(selector);\n\nconst getNextReferenceElement = (selector: string, thisElement: Element) =>\n  getNextOrPrevReferenceElement(selector, thisElement, false);\n\nconst getPrevReferenceElement = (selector: string, thisElement: Element) =>\n  getNextOrPrevReferenceElement(selector, thisElement, true);\n\nconst getNextOrPrevReferenceElement = (\n  selector: string,\n  thisElement: Element,\n  goBackward: boolean,\n): Element | null => {\n  thisElement = getThisReferenceElement(selector, thisElement) || thisElement;\n\n  if (!MH.getDoc().contains(thisElement)) {\n    return null;\n  }\n\n  const allRefs = getAllReferenceElements(selector);\n  if (!allRefs) {\n    return null;\n  }\n\n  const numRefs = MH.lengthOf(allRefs);\n  let refIndex = goBackward ? numRefs - 1 : -1;\n  for (let i = 0; i < numRefs; i++) {\n    const currentIsAfter = MH.isNodeBAfterA(thisElement, allRefs[i]);\n\n    // As soon as we find either the starting element or the first element\n    // that follows it, stop iteration.\n    // - If we're looking for the previous reference, then take the previous\n    //   element in the iteration.\n    // - Otherwise, if the current element in the iteration is the same as the\n    //   starting one, then take either the next element in the iteration.\n    //   - Otherwise, (if the current element follows the starting one, as\n    //     would happen if the starting element was not in the list of matched\n    //     elements, take the current element in the iteration.\n    if (allRefs[i] === thisElement || currentIsAfter) {\n      refIndex = i + (goBackward ? -1 : currentIsAfter ? 0 : 1);\n      break;\n    }\n  }\n\n  return allRefs[refIndex] || null;\n};\n","/**\n * ## Specification for the HTML API for triggers\n *\n * The following describes the general syntax when using the HTML API and\n * automatic widgets\n * ({@link Settings.settings.autoWidgets | settings.autoWidgets} is true)\n * specifically for triggers and actions.\n *\n * A trigger specification should be given as a\n * `data-lisn-on-<TriggerName>=\"<TriggerSpecList>\"` attribute.\n * A fallback option of using a CSS class of the form\n * `lisn-on-<TriggerName>--<TriggerSpec>` is also supported but not recommended.\n *\n * The general specification for a trigger is of the form:\n *\n * ```\n * <TriggerSpecList> ::= <TriggerSpec> { \";\" <TriggerSpec> }\n *\n * <TriggerSpec> ::= [ <TriggerArg> { \",\" <TriggerArg> } ]\n *                   \"@\" <ActionSpec> { \"@\" <ActionSpec> }\n *                   { \"+\" <TriggerOption> }\n *\n * <TriggerOption> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n *\n * <ActionSpec> ::= <ActionName> [ \":\" <ActionArgOrOption> { \",\" <ActionArgOrOption> } ]\n *\n * <ActionArgOrOption> ::= <ActionArg> | <OptionName> \"=\" <OptionValue>\n * ```\n *\n * where `<TriggerArg>` is the particular trigger's main argument, which could\n * be required or optional (and not all triggers accept an argument). See each\n * trigger's specification for their arguments and options.\n *\n * Also refer to each action for their accepted arguments and/or options if any.\n *\n * **NOTE:**\n *\n * There can be 0 or more spaces around any of the separator characters.\n *\n * At least one action (with a preceding \"@\" character) is always required.\n *\n * The characters \";\", \",\", \"=\", \"@\", \"+\" and \":\" are reserved separators and\n * cannot be used literally as part of an argument or option value.\n *\n * @module Triggers\n *\n * @categoryDescription Manual run\n * {@link Trigger} is the base trigger class that you can extend when building\n * custom triggers and it also registers a trigger that needs to be run\n * manually (by e.g. the {@link Actions.Run | Run} action).\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString, randId, splitOn } from \"@lisn/utils/text\";\nimport {\n  validateString,\n  validateNumber,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { Action, fetchAction } from \"@lisn/actions/action\";\n\nimport {\n  Widget,\n  WidgetConfigValidator,\n  WidgetConfigValidatorFunc,\n  WidgetConfigAsyncValidatorObject,\n  registerWidget,\n  fetchWidgetConfig,\n} from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link Trigger} is the base trigger class that you can extend when building\n * custom triggers and it also registers a trigger that needs to be run\n * manually (by e.g. the {@link Actions.Run | Run} action).\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * @example\n * Show the element 1000ms after the first time the trigger is run.\n *\n * ```html\n * <div data-lisn-on-run=\"@show +once +delay=1000\"></div>\n * ```\n *\n * @category Manual run\n */\nexport class Trigger extends Widget {\n  /**\n   * \"Do\"es all the {@link Action}s linked to the trigger.\n   */\n  readonly run: () => Promise<void>;\n\n  /**\n   * \"Undo\"es all the {@link Action}s linked to the trigger.\n   */\n  readonly reverse: () => Promise<void>;\n\n  /**\n   * \"Toggle\"s all the {@link Action}s linked to the trigger.\n   */\n  readonly toggle: () => Promise<void>;\n\n  /**\n   * Returns the trigger's actions.\n   */\n  readonly getActions: () => Action[];\n\n  /**\n   * Returns the trigger config.\n   */\n  readonly getConfig: () => TriggerConfig;\n\n  static get(element: Element, id: string): Trigger | null {\n    const instance = super.get(element, id);\n    if (MH.isInstanceOf(instance, Trigger)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerTrigger(\n      \"run\",\n      (element, a, actions, config) => new Trigger(element, actions, config),\n      {},\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config?: TriggerConfig) {\n    super(element, config);\n\n    const logger = debug\n      ? new debug.Logger({\n          name: `Trigger-${formatAsString(element)}`,\n          logAtCreation: { actions, config },\n        })\n      : null;\n\n    const once = config?.once ?? false;\n    const oneWay = config?.oneWay ?? false;\n    const delay = config?.delay || 0;\n    const doDelay = config?.doDelay ?? delay;\n    const undoDelay = config?.undoDelay ?? delay;\n\n    let lastCallId: string;\n    // false if next should be do; true if next should be undo.\n    // Used for determining delays only.\n    let toggleState = false;\n\n    const callActions = async (\n      delay: number,\n      callFn: (action: Action) => void,\n      newToggleState: boolean,\n    ) => {\n      if (this.isDisabled()) {\n        return;\n      }\n\n      const myCallId = randId();\n      lastCallId = myCallId;\n      debug: logger?.debug10(\n        `callActions [${myCallId}] (new toggle state ${newToggleState})`,\n        callFn,\n      );\n\n      if (delay) {\n        await waitForDelay(delay);\n        if (lastCallId !== myCallId) {\n          // overriden by subsequent call\n          debug: logger?.debug10(\n            `callActions [${myCallId}]: overriden by ${lastCallId}`,\n          );\n          return;\n        }\n      }\n\n      for (const action of actions) {\n        debug: logger?.debug10(`callActions [${myCallId}]`, action);\n        callFn(action);\n      }\n\n      toggleState = newToggleState;\n\n      if (toggleState && once) {\n        this.destroy();\n      }\n    };\n\n    const run = wrapCallback(() => {\n      callActions(\n        doDelay,\n        (action) => {\n          action.do();\n        },\n        true,\n      ); // don't await\n    });\n\n    const reverse = wrapCallback(() => {\n      if (!oneWay) {\n        callActions(\n          undoDelay,\n          (action) => {\n            action.undo();\n          },\n          false,\n        ); // don't await\n      }\n    });\n\n    const toggle = wrapCallback(() => {\n      callActions(\n        toggleState ? undoDelay : doDelay,\n        (action) => {\n          action[MC.S_TOGGLE]();\n        },\n        !toggleState,\n      ); // don't await\n    });\n\n    // ----------\n\n    this.onDestroy(() => {\n      debug: logger?.debug5(\"Removing callbacks\");\n      MH.remove(run);\n      MH.remove(reverse);\n      MH.remove(toggle);\n    });\n\n    this.run = run.invoke;\n    this.reverse = reverse.invoke;\n    this[MC.S_TOGGLE] = oneWay ? run.invoke : toggle.invoke;\n    this.getActions = () => [...actions]; // copy\n    this.getConfig = () => MH.copyObject(config || {});\n  }\n}\n\n/**\n * @interface\n */\nexport type TriggerConfig = {\n  /**\n   * An ID for the trigger so that it can be looked up by ID. It has to be\n   * unique for each element, but you can use the same ID on different\n   * elements.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * If true, the trigger will run at most once. This will result in the `run`\n   * or `toggle` methods removing all three of `run`, `reverse` and `toggle`\n   * when called, so that the actions are done at most once.\n   *\n   * @defaultValue false\n   */\n  once?: boolean;\n\n  /**\n   * If true, then the `reverse` method of the trigger will do nothing and the\n   * `toggle` method will always do the actions, i.e. will be equivalent to\n   * `run`.\n   *\n   * @defaultValue false\n   */\n  oneWay?: boolean;\n\n  /**\n   * Delay in milliseconds before doing, undoing or toggling actions.\n   *\n   * @defaultValue 0\n   */\n  delay?: number;\n\n  /**\n   * Delay in milliseconds before doing actions.\n   *\n   * @defaultValue {@link TriggerConfig.delay}\n   */\n  doDelay?: number;\n\n  /**\n   * Delay in milliseconds before undoing actions.\n   *\n   * @defaultValue {@link TriggerConfig.delay}\n   */\n  undoDelay?: number;\n\n  /**\n   * The element to instantiate all actions on this trigger for.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  actOn?: Element;\n};\n\nexport type TriggerCreateFn<Config extends TriggerConfig> = (\n  element: Element,\n  args: string[],\n  actions: Action[],\n  config: Config,\n) => Trigger | Promise<Trigger>;\n\n/**\n * Registers the given trigger as a widget to be automatically configured for\n * all elements that have a trigger specification with the given name.\n *\n * A trigger specification can be given as a\n * `data-lisn-on-<TriggerName>=\"<TriggerSpec> { \";\" <TriggerSpec> }\"` attribute\n * or as one or more `lisn-on-<TriggerName>--<TriggerSpec>` classes.\n *\n * See the top of the {@link Triggers} page for an explanation of `<TriggerSpec>`.\n *\n * Using classes instead of attributes is not recommended and only available as\n * a fallback option.\n *\n * **IMPORTANT:** If a trigger by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param {} name       The name of the trigger. Should be in kebab-case.\n * @param {} newTrigger Called for every trigger specification on any element\n *                      that has one or more trigger specifications.\n * @param {} configValidator\n *                      A validator object, or a function that returns such an\n *                      object, for all options that are specific to the\n *                      trigger. Base options (in {@link TriggerConfig}) will\n *                      be parsed automatically and don't need to be handled by\n *                      `configValidator`.\n *                      If the parameter is a function, it will be called with\n *                      the element on which the trigger is being defined.\n *\n * @see {@link registerWidget}\n */\nexport const registerTrigger = <Config extends TriggerConfig = TriggerConfig>(\n  name: string,\n  newTrigger: TriggerCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  const clsPref = MH.prefixName(`on-${name}`);\n\n  const newWidget = async (element: Element) => {\n    const widgets: Widget[] = [];\n    const baseConfigValidator = newBaseConfigValidator(element);\n    const thisConfigValidator = MH.isFunction(configValidator)\n      ? await configValidator(element)\n      : configValidator;\n\n    const allSpecs = splitOn(\n      getData(element, MH.prefixName(`on-${name}`)) ?? \"\",\n      TRIGGER_SEP,\n      true,\n    );\n\n    for (const cls of MH.classList(element)) {\n      if (cls.startsWith(`${clsPref}--`)) {\n        allSpecs.push(cls.slice(MH.lengthOf(clsPref) + 2));\n      }\n    }\n\n    for (const spec of allSpecs) {\n      const [tmp, configSpec] = splitOn(spec, OPTION_PREF_CHAR, true, 1);\n      const [argSpec, allActionSpecs] = splitOn(tmp, ACTION_PREF_CHAR, true, 1);\n\n      const args = MH.filterBlank(splitOn(argSpec, \",\", true)) || [];\n\n      const config = await fetchWidgetConfig(\n        configSpec,\n        MH.assign(\n          baseConfigValidator,\n          thisConfigValidator,\n        ) as WidgetConfigAsyncValidatorObject<Required<TriggerConfig> & Config>,\n        OPTION_PREF_CHAR,\n      );\n\n      const actionTarget = config.actOn ?? element;\n\n      const actions = [];\n      for (const actionSpec of splitOn(\n        allActionSpecs || \"\",\n        ACTION_PREF_CHAR,\n        true,\n      )) {\n        const [name, actionArgsAndOptions] = splitOn(\n          actionSpec,\n          ACTION_ARGS_PREF_CHAR,\n          true,\n          1,\n        );\n\n        try {\n          actions.push(\n            await fetchAction(actionTarget, name, actionArgsAndOptions || \"\"),\n          );\n        } catch (err) {\n          if (MH.isInstanceOf(err, LisnUsageError)) {\n            // fetchAction would have logged an error\n            continue;\n          }\n\n          throw err;\n        }\n      }\n\n      widgets.push(await newTrigger(element, args, actions, config));\n    }\n\n    return widgets;\n  };\n\n  registerWidget(name, newWidget, null, {\n    selector: `[class^=\"${clsPref}--\"],[class*=\" ${clsPref}--\"],[data-${clsPref}]`,\n  });\n};\n\n// --------------------\n\nconst TRIGGER_SEP = \";\";\nconst OPTION_PREF_CHAR = \"+\";\nconst ACTION_PREF_CHAR = \"@\";\nconst ACTION_ARGS_PREF_CHAR = \":\";\n\nconst newBaseConfigValidator: WidgetConfigValidatorFunc<TriggerConfig> = (\n  element,\n) => {\n  return {\n    id: validateString,\n    once: validateBoolean,\n    oneWay: validateBoolean,\n    delay: validateNumber,\n    doDelay: validateNumber,\n    undoDelay: validateNumber,\n    actOn: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling triggers\n * {@link Enable} and {@link Disable} enable or disable a list of triggers\n * defined on the given element.\n *\n * {@link Run} runs or reverses a list of triggers defined on the given\n * element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logWarn } from \"@lisn/utils/log\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString } from \"@lisn/utils/text\";\n\nimport { Trigger } from \"@lisn/triggers/trigger\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Enables or disables a list of triggers defined on the given element.\n *\n * **IMPORTANT:** When constructed, it disables all given triggers as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"enable\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button id=\"btn\">Enable/disable</button>\n * <button data-lisn-on-click=\"\n *         @enable=triggerA,triggerB +target=#btn\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-click=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Enable implements Action {\n  /**\n   * Enables the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Disables the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the enabled state on each trigger given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"enable\", (element, ids) => new Enable(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _enable, _disable, _toggleEnable } = getMethods(element, ids);\n    _disable(); // initial state\n\n    this.do = _enable;\n    this.undo = _disable;\n    this[MC.S_TOGGLE] = _toggleEnable;\n  }\n}\n\n/**\n * Disables or enables a list of triggers defined on the given element.\n *\n * **IMPORTANT:** When constructed, it enables all given triggers as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"disable\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button id=\"btn\">Enable/disable</button>\n * <button data-lisn-on-click=\"\n *         @disable=triggerA,triggerB +target=#btn\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-click=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Disable implements Action {\n  /**\n   * Disables the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Enables the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the enabled state on each trigger given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"disable\", (element, ids) => new Disable(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _enable, _disable, _toggleEnable } = getMethods(element, ids);\n    _enable(); // initial state\n\n    this.do = _disable;\n    this.undo = _enable;\n    this[MC.S_TOGGLE] = _toggleEnable;\n  }\n}\n\n/**\n * Runs or reverses a list of triggers defined on the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"run\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button data-lisn-on-click=\"\n *         @run=triggerA,triggerB\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-run=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Run implements Action {\n  /**\n   * Runs the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Reverses the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the triggers with IDs given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"run\", (element, ids) => new Run(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _run, _reverse, _toggle } = getMethods(element, ids);\n\n    this.do = _run;\n    this.undo = _reverse;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element, ids: string[]) => {\n  const triggerPromises = getTriggers(element, ids);\n  const call = async (\n    method:\n      | \"enable\"\n      | \"disable\"\n      | \"toggleEnable\"\n      | \"run\"\n      | \"reverse\"\n      | \"toggle\",\n  ) => {\n    const triggers = await triggerPromises;\n    for (const trigger of triggers) {\n      trigger[method]();\n    }\n  };\n\n  return {\n    _enable: () => call(\"enable\"),\n    _disable: () => call(\"disable\"),\n    _toggleEnable: () => call(\"toggleEnable\"),\n    _run: () => call(\"run\"),\n    _reverse: () => call(\"reverse\"),\n    _toggle: () => call(MC.S_TOGGLE),\n  };\n};\n\nconst getTriggers = async (element: Element, ids: string[]) => {\n  const triggers: Trigger[] = [];\n  if (!MH.lengthOf(ids)) {\n    logWarn(\"At least 1 ID is required for enable action\");\n    return triggers;\n  }\n\n  for (const id of ids) {\n    let trigger = Trigger.get(element, id);\n    if (!trigger) {\n      await waitForDelay(0); // in case it's being processed now\n      trigger = Trigger.get(element, id);\n\n      if (!trigger) {\n        logWarn(\n          `No trigger with ID ${id} for element ${formatAsString(element)}`,\n        );\n        continue;\n      }\n    }\n\n    triggers.push(trigger);\n  }\n\n  return triggers;\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Scrolling\n * {@link ScrollTo} scrolls to the given element or to the previous scroll\n * position.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { CoordinateOffset } from \"@lisn/globals/types\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { validateNumber } from \"@lisn/utils/validation\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * Scrolls to the given element or to the previous scroll position.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"scroll-to\".\n * - Accepted string arguments: none\n * - Accepted options:\n *   - `offsetX`: A number.\n *   - `offsetY`: A number.\n *   - `scrollable`: A string element specification for an element (see\n *     {@link Utils.getReferenceElement | getReferenceElement}). Note that,\n *     unless it's a DOM ID, the specification is parsed relative to the\n *     element being acted on and not the element the trigger is defined on (in\n *     case you've used the `act-on` trigger option).\n *\n * **NOTE:** Do not place a + sign in front of the offset values (just omit it\n * if you want a positive offset). Otherwise it will be interpreted as a\n * trigger option.\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position +10px down:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to: offsetY=10 +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position 10px _down_ and 50px _left_:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to: offsetY=10, offsetX=-50 +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the closest parent element with\n * class `scrollable` to the element's position:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div class=\"scrollable\">\n *   <div data-lisn-on-click=\"@scroll-to: scrollable=this.scrollable +target=#btn\"></div>\n * </div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-ref=\"scrollable\">\n *   <div data-lisn-on-click=\"@scroll-to: scrollable=this-scrollable +target=#btn\"></div>\n * </div>\n * ```\n *\n * @category Scrolling\n */\nexport class ScrollTo implements Action {\n  /**\n   * Scrolls the main scrolling element to the element's position.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Scrolls the main scrolling element to the last scroll position before the\n   * action was {@link do}ne. If the action had never been done, does nothing.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Scrolls the main scrolling element to the element's position, if it's not\n   * already there, or otherwise scrolls the main scrolling element to the\n   * previous saved scroll position.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"scroll-to\",\n      (element, args, config) => {\n        const offset = config\n          ? {\n              left: config.offsetX,\n              top: config.offsetY,\n            }\n          : undefined;\n\n        return new ScrollTo(element, {\n          scrollable: config?.scrollable,\n          offset,\n        });\n      },\n      newConfigValidator,\n    );\n  }\n\n  constructor(element: Element, config?: ScrollToConfig) {\n    const offset = config?.offset;\n    const scrollable = config?.scrollable;\n\n    const watcher = ScrollWatcher.reuse();\n    let prevScrollTop = -1,\n      prevScrollLeft = -1;\n\n    this.do = async () => {\n      const current = await watcher.fetchCurrentScroll();\n      prevScrollTop = current[MC.S_SCROLL_TOP];\n      prevScrollLeft = current[MC.S_SCROLL_LEFT];\n\n      const action = await watcher.scrollTo(element, {\n        offset,\n        scrollable,\n      });\n      await action?.waitFor();\n    };\n\n    this.undo = async () => {\n      if (prevScrollTop !== -1) {\n        const action = await watcher.scrollTo({\n          top: prevScrollTop,\n          left: prevScrollLeft,\n        });\n        await action?.waitFor();\n      }\n    };\n\n    this[MC.S_TOGGLE] = async () => {\n      const start = await watcher.fetchCurrentScroll();\n\n      const canReverse = prevScrollTop !== -1;\n      let hasReversed = false;\n\n      // Try to scroll to the element, but if we're already at it, then reverse\n      // to previous position if any.\n      const altTarget = {\n        top: () => {\n          hasReversed = true;\n          return prevScrollTop;\n        },\n        left: prevScrollLeft,\n      };\n\n      const action = await watcher.scrollTo(\n        element,\n        canReverse ? { altTarget, offset } : { offset },\n      );\n      await action?.waitFor();\n\n      if (!hasReversed) {\n        // We've scrolled to the element, so save the starting position as the\n        // previous one.\n        prevScrollTop = start[MC.S_SCROLL_TOP];\n        prevScrollLeft = start[MC.S_SCROLL_LEFT];\n      }\n    };\n  }\n}\n\n/**\n * @interface\n * @category Scrolling\n */\nexport type ScrollToConfig = {\n  /**\n   * See {@link Utils.ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined // none\n   */\n  offset?: CoordinateOffset;\n\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  scrollable?: Element;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<{\n  offsetX: number;\n  offsetY: number;\n  scrollable?: Element;\n}> = (element) => {\n  return {\n    offsetX: (key, value) => validateNumber(key, value) ?? 0,\n    offsetY: (key, value) => validateNumber(key, value) ?? 0,\n    scrollable: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Setting/deleting attributes\n * {@link SetAttribute} sets or deletes an attribute on the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { camelToKebabCase } from \"@lisn/utils/text\";\nimport { validateString } from \"@lisn/utils/validation\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport { WidgetConfigValidatorObject } from \"@lisn/widgets/widget\";\n\n/**\n * Either sets or deletes an attribute, or toggles between two values of an\n * attribute, on the given element.\n *\n * **IMPORTANT:** When constructed, it sets all given attributes on the\n * element to their _OFF_ (undone) state as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"set-attribute\".\n * - Accepted string arguments: name of attribute\n * - Accepted options:\n *   - `on`: A string value for the attribute. Can be blank. Omit this option\n *     in order to have the attribute deleted when the action is done.\n *   - `off`: A string value for the attribute. Can be blank. Omit this option\n *     in order to have the attribute deleted when the action is undone.\n *\n * Note that with the HTML API you can only specify one attribute per action.\n * But of course you can add the same action multiple times per trigger. See\n * examples below.\n *\n * @example\n * This is an overview of the various combinations that you can use to set an\n * attribute to a non-empty value, a blank value or delete the attribute when\n * the action is either done or undone:\n *\n * | Specification                         | Value when done | Value when undone |\n * | ------------------------------------- | --------------- | ----------------- |\n * | @set-attr: attr, on=onVal, off=offVal | \"onVal\"         | \"offVal\"          |\n * | @set-attr: attr, on=value             | \"value\"         | _deleted_         |\n * | @set-attr: attr, off=value            | _deleted_       | \"value\"           |\n * | @set-attr: attr, on=                  | \"\"              | _deleted_         |\n * | @set-attr: attr, off=                 | _deleted_       | \"\"                |\n * | @set-attr: attr, on=value, off=       | \"value\"         | \"\"                |\n * | @set-attr: attr, on= , off=value      | \"\"              | \"value\"           |\n *\n * @example\n * This will set attribute `attrA` to `valueA-ON` and `attrB` to `valueB-ON`\n * when the element enters the viewport and set `attrA` to `valueA-OFF` and\n * `attrB` to `valueB-OFF` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attrA, on=valueA-ON, off=valueA-OFF\n *                         @set-attribute: attrB, on=valueB-ON, off=valueB-OFF\"\n * ></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to `value` when the element enters the\n * viewport and _delete_ the attribute when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=value\"></div>\n * ```\n *\n * @example\n * This will _delete_ attribute `attr` when the element enters the viewport and\n * set it to `value` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, off=value\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to a blank value when the element enters the\n * viewport and _delete_ the attribute when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=\"></div>\n * ```\n *\n * @example\n * This will _delete_ attribute `attr` when the element enters the viewport and\n * set it to a blank value when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, off=\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to `value` when the element enters the\n * viewport and set it to a blank value when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=value, off=\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to a blank value when the element enters the\n * viewport and set it to `value` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=, off=value\"></div>\n * ```\n *\n * @category Setting/deleting attributes\n */\nexport class SetAttribute implements Action {\n  /**\n   * Sets the attribute to its \"ON\" value, or deletes it if that value is null.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Sets the attribute to its \"OFF\" value, or deletes it if that value is null.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the attribute from its \"ON\" to \"OFF\" value or vice versa.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"set-attribute\",\n      (element, args, config) => {\n        return new SetAttribute(element, { [args[0]]: config || {} });\n      },\n      configValidator,\n    );\n  }\n\n  constructor(element: Element, attributes: Attributes) {\n    if (!attributes) {\n      throw MH.usageError(\"Attributes are required\");\n    }\n\n    let isOn = false;\n\n    const setAttrs = async (on: boolean) => {\n      isOn = on;\n\n      await waitForMutateTime();\n\n      for (const attr in attributes) {\n        const value = attributes[attr][on ? \"on\" : \"off\"];\n        const attrName = camelToKebabCase(attr);\n\n        if (MH.isNullish(value)) {\n          MH.delAttr(element, attrName);\n        } else {\n          MH.setAttr(element, attrName, value);\n        }\n      }\n    };\n\n    this.do = () => setAttrs(true);\n\n    this.undo = () => setAttrs(false);\n\n    this[MC.S_TOGGLE] = () => setAttrs(!isOn);\n\n    this.undo(); // initial state\n  }\n}\n\n/**\n * Each key in the object is an attribute name. The `on` value is set when the\n * action is done and the `off` value is set when the action is undone. To set\n * the attribute to an empty value, use an empty string. To _delete_ the\n * attribute, use `null` as the value or simply omit the relevant `on` or `off`\n * key.\n *\n * **IMPORTANT:** Attribute names in camelCase are converted to kebab-case.\n * E.g. `dataFooBar` will translate to `data-foo-bar`.\n *\n * @category Setting/deleting attributes\n */\nexport type Attributes = Record<\n  string,\n  { on?: string | null; off?: string | null }\n>;\n\n// --------------------\n\nconst configValidator: WidgetConfigValidatorObject<Attributes[string]> = {\n  on: validateString,\n  off: validateString,\n};\n","/**\n * @module Actions\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  showElement,\n  hideElement,\n  toggleShowElement,\n  disableInitialTransition,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Shows or hides the given element with a smooth fading transition.\n *\n * **IMPORTANT:** When constructed, it will hide the element as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"show\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Show/hide</button>\n * <div data-lisn-on-click=\"@show +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Show implements Action {\n  /**\n   * Shows the element with a smooth fade in transition.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Hides the element with a smooth fade out transition.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Shows the element if it is hidden, hides it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"show\", (element) => new Show(element));\n  }\n\n  constructor(element: Element) {\n    disableInitialTransition(element);\n    hideElement(element); // initial state\n\n    const { _show, _hide, _toggle } = getMethods(element);\n    this.do = _show;\n    this.undo = _hide;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Hides or shows the given element with a smooth fading transition.\n *\n * **IMPORTANT:** When constructed, it will remove any `lisn-hide` class from\n * the element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"hide\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Show/hide</button>\n * <div data-lisn-on-click=\"@hide +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Hide implements Action {\n  /**\n   * Hides the element with a smooth fade out transition.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Shows the element with a smooth fade in transition.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Shows the element if it is hidden, hides it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"hide\", (element) => new Hide(element));\n  }\n\n  constructor(element: Element) {\n    disableInitialTransition(element);\n    showElement(element); // initial state\n\n    const { _show, _hide, _toggle } = getMethods(element);\n    this.do = _hide;\n    this.undo = _show;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  return {\n    _show: async () => {\n      await showElement(element); // ignore return val\n    },\n\n    _hide: async () => {\n      await hideElement(element); // ignore return val\n    },\n\n    _toggle: async () => {\n      await toggleShowElement(element); // ignore return val\n    },\n  };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Position } from \"@lisn/globals/types\";\n\n/**\n * @category Validation\n */\nexport const isValidPosition = (position: string): position is Position =>\n  MH.includes(POSITIONS as readonly string[], position);\n\n/**\n * @category Validation\n */\nexport const isValidTwoFoldPosition = (\n  position: string,\n): position is `${Position}-${Position}` =>\n  position.match(TWO_FOLD_POSITION_REGEX) !== null;\n\n/**\n * @ignore\n * @internal\n */\nexport const POSITIONS = [\n  MC.S_TOP,\n  MC.S_BOTTOM,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n// --------------------\n\nconst POSITIONS_OPTIONS_STR = \"(\" + POSITIONS.join(\"|\") + \")\";\n\nconst TWO_FOLD_POSITION_REGEX = RegExp(\n  `^${POSITIONS_OPTIONS_STR}-${POSITIONS_OPTIONS_STR}$`,\n);\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { XYDirection, Position } from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  hasClass,\n  addClasses,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n  getData,\n  getBooleanData,\n  setData,\n  setDataNow,\n  setBooleanData,\n  setBooleanDataNow,\n  unsetBooleanData,\n  unsetBooleanDataNow,\n  delData,\n  delDataNow,\n  setHasModal,\n  delHasModal,\n  getStyleProp,\n  setStyleProp,\n  delStyleProp,\n  getComputedStyleProp,\n  getMaxTransitionDuration,\n} from \"@lisn/utils/css-alter\";\nimport {\n  wrapElement,\n  wrapElementNow,\n  moveElement,\n  moveElementNow,\n  replaceElementNow,\n  getOrAssignID,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { keyWithMaxVal } from \"@lisn/utils/math\";\nimport { toBoolean, toArrayIfSingle } from \"@lisn/utils/misc\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { isValidPosition, isValidTwoFoldPosition } from \"@lisn/utils/position\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport {\n  validateStrList,\n  validateBoolean,\n  validateBooleanOrString,\n  validateString,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\nimport { ViewWatcher, ViewData } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetHandler,\n  WidgetCallback,\n  WidgetConfigValidator,\n  WidgetConfigValidatorObject,\n  registerWidget,\n  getWidgetConfig,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/* ********************\n * Base Openable\n * ********************/\n\nexport type OpenableCreateFn<Config extends Record<string, unknown>> = (\n  element: HTMLElement,\n  config?: Config,\n) => Openable;\n\n/**\n * Enables automatic setting up of an {@link Openable} widget from an\n * elements matching its content element selector (`[data-lisn-<name>]` or\n * `.lisn-<name>`).\n *\n * The name you specify here should generally be the same name you pass in\n * {@link OpenableProperties.name | options.name} to the\n * {@link Openable.constructor} but it does not need to be the same.\n *\n * @param {} name        The name of the openable. Should be in kebab-case.\n * @param {} newOpenable Called for every element matching the selector.\n * @param {} configValidator\n *                        A validator object, or a function that returns such\n *                        an object, for all options supported by the widget.\n *\n * @see {@link registerWidget}\n */\nexport const registerOpenable = <Config extends Record<string, unknown>>(\n  name: string,\n  newOpenable: OpenableCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  registerWidget(\n    name,\n    (element, config) => {\n      if (MH.isHTMLElement(element)) {\n        if (!Openable.get(element)) {\n          return newOpenable(element, config);\n        }\n      } else {\n        logError(MH.usageError(\"Openable widget supports only HTMLElement\"));\n      }\n\n      return null;\n    },\n    configValidator,\n  );\n};\n\n/**\n * {@link Openable} is an abstract base class. You should not directly\n * instantiate it but can inherit it to create your own custom openable widget.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * @see {@link registerOpenable}\n */\nexport abstract class Openable extends Widget {\n  /**\n   * Opens the widget unless it is disabled.\n   */\n  readonly open: () => Promise<void>;\n\n  /**\n   * Closes the widget.\n   */\n  readonly close: () => Promise<void>;\n\n  /**\n   * Closes the widget if it is open, or opens it if it is closed (unless\n   * it is disabled).\n   */\n  readonly toggle: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is open.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onOpen: (handler: WidgetHandler) => void;\n\n  /**\n   * The given handler will be called when the widget is closed.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onClose: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is currently open.\n   */\n  readonly isOpen: () => boolean;\n\n  /**\n   * Returns the root element created by us that wraps the original content\n   * element passed to the constructor. It is located in the content element's\n   * original place.\n   */\n  readonly getRoot: () => HTMLElement;\n\n  /**\n   * Returns the element that was found to be the container. It is the closest\n   * ancestor that has a `lisn-collapsible-container` class, or if no such\n   * ancestor then the immediate parent of the content element.\n   */\n  readonly getContainer: () => HTMLElement | null;\n\n  /**\n   * Returns the trigger elements, if any. Note that these may be wrappers\n   * around the original triggers passed.\n   */\n  readonly getTriggers: () => Element[];\n\n  /**\n   * Returns the trigger elements along with their configuration.\n   */\n  readonly getTriggerConfigs: () => Map<Element, OpenableTriggerConfig>;\n\n  /**\n   * Retrieve an existing widget by its content element or any of its triggers.\n   *\n   * If the element is already part of a configured {@link Openable} widget,\n   * the widget instance is returned. Otherwise `null`.\n   *\n   * Note that trigger elements are not guaranteed to be unique among openable\n   * widgets as the same element can be a trigger for multiple such widgets. If\n   * the element you pass is a trigger, then the last openable widget that was\n   * created for it will be returned.\n   */\n  static get(element: Element): Openable | null {\n    // We manage the instances here since we also map associated elements and\n    // not just the main content element that created the widget.\n    return instances.get(element) || null;\n  }\n\n  constructor(element: HTMLElement, properties: OpenableProperties) {\n    super(element);\n\n    const { isModal, isOffcanvas } = properties;\n\n    const openCallbacks = MH.newSet<WidgetCallback>();\n    const closeCallbacks = MH.newSet<WidgetCallback>();\n\n    let isOpen = false;\n\n    // ----------\n\n    const open = async () => {\n      if (this.isDisabled() || isOpen) {\n        return;\n      }\n\n      isOpen = true;\n\n      for (const callback of openCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        setHasModal();\n      }\n\n      await setBooleanData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const close = async () => {\n      if (this.isDisabled() || !isOpen) {\n        return;\n      }\n\n      isOpen = false;\n\n      for (const callback of closeCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        delHasModal();\n      }\n\n      if (isOffcanvas) {\n        scrollWrapperToTop(); // no need to await\n      }\n\n      await unsetBooleanData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const scrollWrapperToTop = async () => {\n      // Wait a bit before scrolling since the hiding of the element is animated.\n      // Assume no more than 1s animation time.\n      await waitForDelay(1000);\n      await waitForMeasureTime();\n      MH.elScrollTo(outerWrapper, {\n        top: 0,\n        left: 0,\n      });\n    };\n\n    // --------------------\n\n    this.open = open;\n    this.close = close;\n    this[MC.S_TOGGLE] = () => (isOpen ? close() : open());\n    this.onOpen = (handler) => openCallbacks.add(wrapCallback(handler));\n    this.onClose = (handler) => closeCallbacks.add(wrapCallback(handler));\n    this.isOpen = () => isOpen;\n    this.getRoot = () => root;\n    this.getContainer = () => container;\n    this.getTriggers = () => [...triggers.keys()];\n    this.getTriggerConfigs = () => MH.newMap([...triggers.entries()]);\n\n    this.onDestroy(() => {\n      openCallbacks.clear();\n      closeCallbacks.clear();\n    });\n\n    const { root, container, triggers, outerWrapper } = setupElements(\n      this,\n      element,\n      properties,\n    );\n  }\n}\n\n/**\n * Per-trigger based configuration. Can either be given as an object as the\n * value of the {@link OpenableProperties.triggers} map, or it can be set as a\n * string configuration in the `data-lisn-<name>-trigger` data attribute. See\n * {@link getWidgetConfig} for the syntax.\n *\n * @example\n * ```html\n * <div data-lisn-collapsible-trigger=\"auto-close\n *                                     | icon=right\n *                                     | icon-closed=arrow-down\n *                                     | icon-open=x\"\n * ></div>\n * ```\n *\n * @interface\n */\nexport type OpenableTriggerConfig = {\n  /**\n   * The DOM ID to set on the trigger. Will result in the trigger element, which\n   * could be a wrapper around the original element (as in the case of {@link\n   * Collapsible} you passed, getting this ID.\n   *\n   * **IMPORTANT:** If the trigger element already has an ID and is not being\n   * wrapped, then this will override the ID and it _won't_ be restored on destroy.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) for the trigger. Will result in the trigger element, which\n   * could be a wrapper around the original element you passed, getting these\n   * classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Override the widget's {@link OpenableProperties.autoClose} for this trigger.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  autoClose?: boolean;\n\n  /**\n   * Open the openable when this trigger is hovered.\n   *\n   * If the device is touch and {@link OpenableProperties.autoClose} is enabled,\n   * the widget will be closed shortly after the pointer leaves both the\n   * trigger and the root element.\n   *\n   * @defaultValue false\n   */\n  hover?: boolean;\n\n  /**\n   * Whether to prevent default click action.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.icon} for this trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  icon?: false | Position;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconClosed} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconOpen} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/**\n * @interface\n */\nexport type OpenableProperties = {\n  /**\n   * The name of the _type_ of the openable. Will set the class prefix to\n   * `lisn-<name>`.\n   */\n  name: string;\n\n  /**\n   * The DOM ID to set on the openable. Will result in the top-level root\n   * element that's created by us getting this ID.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names to set on the openable. Will result\n   * in the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Whether to auto-close the widget on clicking outside the content element\n   * or on pressing Escape key. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * This is true by default for {@link Popup}, {@link Modal} and {@link Offcanvas}.\n   */\n  autoClose: boolean;\n\n  /**\n   * If true, then while the widget is open, the `document.body` will be set to\n   * `overflow: hidden`.\n   *\n   * This is true for {@link Modal}.\n   */\n  isModal: boolean;\n\n  /**\n   * If true, then the content element is assumed to be possibly scrollable and\n   * will be scrolled back to its top after the widget is closed.\n   *\n   * This is true for {@link Modal} and {@link Offcanvas}.\n   */\n  isOffcanvas: boolean;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * This is true by default for {@link Modal} and {@link Offcanvas}.\n   */\n  closeButton: boolean;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way (`<name>` is what is given as\n   * {@link name}):\n   * 1. If the content element has a `data-lisn-<name>-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-<name>-trigger` class or `data-lisn-<name>-trigger` attribute\n   *    and the same `data-lisn-<name>-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-<name>-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-<name>-trigger`\n   *    class or `data-lisn-<name>-trigger` attribute and that do _not_ have a\n   *    `data-lisn-<name>-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Whether to wrap each trigger in a new element.\n   *\n   * @defaultValue false\n   */\n  wrapTriggers?: boolean;\n\n  /**\n   * Hook to run once the widget is fully setup (which happens asynchronously).\n   *\n   * It is called during \"mutate time\". See {@link waitForMutateTime}.\n   *\n   * @defaultValue undefined\n   */\n  onSetup?: () => void;\n};\n\n/* ********************\n * Collapsible\n * ********************/\n\n/**\n * Configures the given element as a {@link Collapsible} widget.\n *\n * The Collapsible widget sets up the given element to be collapsed and\n * expanded upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link CollapsibleConfig.triggers | triggers}.\n *\n * **NOTE:** The Collapsible widget always wraps each trigger element in\n * another element in order to allow positioning the icon, if any.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-collapsible__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-reverse`: `\"true\"` or `\"false\"`\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-collapsible` class or `data-lisn-collapsible` attribute set on the\n *   element that holds the content of the collapsible\n * - `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     collapsible on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close\"` in order to have this trigger\n *     open the collapsible on hover but and override\n *     {@link CollapsibleConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-collapsible-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and the same `data-lisn-collapsible-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple collapsible with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-collapsible-trigger\">Expand</div>\n *   <div class=\"lisn-collapsible\">\n *     Some long content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a collapsible that is partially visible when collapsed, and\n * where the trigger is in a different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all other possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek=50px\n *                               | horizontal=false\n *                               | reverse=false\n *                               | auto-close\n *                               | icon=right\n *                               | icon-closed=arrow-up\"\n *                               | icon-open=arrow-down\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n */\nexport class Collapsible extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_COLLAPSIBLE,\n      (el, config) => new Collapsible(el, config),\n      collapsibleConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: CollapsibleConfig) {\n    const isHorizontal = config?.horizontal;\n    const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n\n    const onSetup = () => {\n      // The triggers here are wrappers around the original which will be\n      // replaced by the original on destroy, so no need to clean up this.\n      for (const [\n        trigger,\n        triggerConfig,\n      ] of this.getTriggerConfigs().entries()) {\n        insertCollapsibleIcon(trigger, triggerConfig, this, config);\n        setDataNow(trigger, MC.PREFIX_ORIENTATION, orientation);\n      }\n    };\n\n    super(element, {\n      name: WIDGET_NAME_COLLAPSIBLE,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? false,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: false,\n      triggers: config?.triggers,\n      wrapTriggers: true,\n      onSetup,\n    });\n\n    const root = this.getRoot();\n    const wrapper = MH.childrenOf(root)[0];\n\n    setData(root, MC.PREFIX_ORIENTATION, orientation);\n    setBooleanData(root, PREFIX_REVERSE, config?.reverse ?? false);\n\n    // -------------------- Transitions\n    disableInitialTransition(element, 100);\n    disableInitialTransition(root, 100);\n    disableInitialTransition(wrapper, 100);\n\n    let disableTransitionTimer: ReturnType<typeof setTimeout> | null = null;\n    const tempEnableTransition = async () => {\n      await removeClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n      await removeClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n\n      if (disableTransitionTimer) {\n        MH.clearTimer(disableTransitionTimer);\n      }\n\n      const transitionDuration = await getMaxTransitionDuration(root);\n      disableTransitionTimer = MH.setTimer(() => {\n        if (this.isOpen()) {\n          addClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n          addClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n          disableTransitionTimer = null;\n        }\n      }, transitionDuration);\n    };\n\n    // Disable transitions except during open/close, so that resizing the\n    // window for example doesn't result in lagging width/height transition.\n    this.onOpen(tempEnableTransition);\n    this.onClose(tempEnableTransition);\n\n    // -------------------- Peek\n    const peek = config?.peek;\n    if (peek) {\n      (async () => {\n        let peekSize: string | null = null;\n        if (MH.isString(peek)) {\n          peekSize = peek;\n        } else {\n          peekSize = await getStyleProp(element, VAR_PEEK_SIZE);\n        }\n\n        addClasses(root, PREFIX_PEEK);\n        if (peekSize) {\n          setStyleProp(root, VAR_PEEK_SIZE, peekSize);\n        }\n      })();\n    }\n\n    // -------------------- Width in horizontal mode\n    if (isHorizontal) {\n      const updateWidth = async () => {\n        const width = await getComputedStyleProp(root, MC.S_WIDTH);\n        await setStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH, width);\n      };\n\n      MH.setTimer(updateWidth);\n\n      // Save its current width so that if it contains text, it does not\n      // \"collapse\" and end up super tall.\n      this.onClose(updateWidth);\n\n      this.onOpen(async () => {\n        // Update the content width before opening.\n        await updateWidth();\n\n        // Delete the fixed width property soon after opening to allow it to\n        // resize again while it's open.\n        waitForDelay(2000).then(() => {\n          if (this.isOpen()) {\n            delStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH);\n          }\n        });\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type CollapsibleConfig = {\n  /**\n   * The DOM ID to set on the collapsible. Will result in the top-level root\n   * element that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the\n   * `data-lisn-collapsible-content-id` attribute used to link triggers to the\n   * collapsible.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names to set on the collapsible. Will\n   * result in the top-level root element that's created by us getting these\n   * classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-collapsible-content-id`\n   *    attribute, then it must be a unique (for the current page) ID. In this\n   *    case, the trigger elements will be any element in the document that\n   *    has a `lisn-collapsible-trigger` class or\n   *    `data-lisn-collapsible-trigger` attribute and the same\n   *    `data-lisn-collapsible-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n   *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Open sideways (to the right) instead of downwards (default).\n   *\n   * **IMPORTANT:** In horizontal mode the width of the content element should\n   * not be set (or be `auto`), but you can use `min-width` or `max-width` in\n   * your CSS if needed.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Open to the left if horizontal or upwards if vertical.\n   *\n   * @defaultValue false\n   */\n  reverse?: boolean;\n\n  /**\n   * If not false, part of the content will be visible when the collapsible is\n   * closed. The value can be any valid CSS width specification.\n   *\n   * If you set this to `true`, then the size of the peek window will be\n   * dictated by CSS. By default the size is 100px, but you can change this by\n   * setting `--lisn-peek-size` CSS property on the content element or any of\n   * its ancestors.\n   *\n   * Otherwise, if the value is a string, it must be a CSS length including units.\n   *\n   * @defaultValue false\n   */\n  peek?: boolean | string;\n\n  /**\n   * Automatically close the collapsible when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue false\n   */\n  autoClose?: boolean;\n\n  /**\n   * Add an icon to each trigger.\n   *\n   * If set to something other than `false`, then by default the icon in the\n   * closed state is a plus (+) and in the open state it's a minus (-), but\n   * this can be configured with {@link iconClosed} and {@link iconOpen}.\n   *\n   * @defaultValue false\n   */\n  icon?: false | Position;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the closed state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"plus\"\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the open state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"minus\";\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/* ********************\n * Popup\n * ********************/\n\n/**\n * Configures the given element as a {@link Popup} widget.\n *\n * The Popup widget sets up the given element to be hidden and open in a\n * floating popup upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link PopupConfig.triggers | triggers}.\n *\n * **IMPORTANT:** The popup is positioned absolutely in its container and the\n * position is relative to the container. The container gets `width:\n * fit-content` by default but you can override this in your CSS. The popup\n * also gets a configurable `min-width` set.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-popup__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position (top, bottom, left, top-left, etc)\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-popup` class or `data-lisn-popup` attribute set on the element that\n *   holds the content of the popup\n * - `lisn-popup-trigger` class or `data-lisn-popup-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     popup on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the popup on hover but and override\n *     {@link PopupConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-popup-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and the\n *    same `data-lisn-popup-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-popup-trigger` class or\n *    `data-lisn-popup-trigger` attribute and that do _not_ have a\n *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple popup with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-popup-trigger\">Open</div>\n *   <div class=\"lisn-popup\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a popup that has a close button, and where the trigger is in a\n * different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button | position=bottom | auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n * ```\n */\nexport class Popup extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_POPUP,\n      (el, config) => new Popup(el, config),\n      popupConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: PopupConfig) {\n    super(element, {\n      name: WIDGET_NAME_POPUP,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: config?.closeButton ?? false,\n      triggers: config?.triggers,\n    });\n\n    const root = this.getRoot();\n    const container = this.getContainer();\n\n    const position = config?.position ?? S_AUTO;\n    if (position !== S_AUTO) {\n      setData(root, MC.PREFIX_PLACE, position);\n    }\n\n    if (container && position === S_AUTO) {\n      // Automatic position\n      this.onOpen(async () => {\n        const [contentSize, containerView] = await MH.promiseAll([\n          SizeWatcher.reuse().fetchCurrentSize(element),\n          ViewWatcher.reuse().fetchCurrentView(container),\n        ]);\n\n        const placement = await fetchPopupPlacement(contentSize, containerView);\n        if (placement) {\n          await setData(root, MC.PREFIX_PLACE, placement);\n        }\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type PopupConfig = {\n  /**\n   * The DOM ID to set on the popup. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-popup-content-id`\n   * attribute used to link triggers to the popup.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names to set on the popup. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-popup-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and\n   *    the same `data-lisn-popup-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-popup-trigger`\n   *    class or `data-lisn-popup-trigger` attribute and that do _not_ have a\n   *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue false\n   */\n  closeButton?: boolean;\n\n  /**\n   * Specify the popup position _relative to its container_. Supported\n   * positions include `\"top\"`, `\"bottom\"`, `\"left\"`, `\"right\" `(which result\n   * on the popup being placed on top, bottom, etc, but center-aligned), or\n   * `\"top-left\"`, `\"left-top\"`, etc, as well as `\"auto\"`. If set to `\"auto\"`,\n   * then popup position will be based on the container position within the\n   * viewport at the time it's open.\n   *\n   * @defaultValue \"auto\"\n   */\n  position?: Position | `${Position}-${Position}` | \"auto\";\n\n  /**\n   * Automatically close the popup when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Modal\n * ********************/\n\n/**\n * Configures the given element as a {@link Modal} widget.\n *\n * The Modal widget sets up the given element to be hidden and open in a fixed\n * full-screen modal popup upon activation. Activation can be done manually by\n * calling {@link open} or when clicking on any of the given\n * {@link ModalConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-modal__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-modal` class or `data-lisn-modal` attribute set on the element that\n *   holds the content of the modal\n * - `lisn-modal-trigger` class or `data-lisn-modal-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     modal on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the modal on hover but and override\n *     {@link ModalConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-modal-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and the\n *    same `data-lisn-modal-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-modal-trigger` class or\n *    `data-lisn-modal-trigger` attribute and that do _not_ have a\n *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple modal with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-modal-trigger\">Open</div>\n *   <div class=\"lisn-modal\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a modal that doesn't automatically close on click outside or\n * Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Modal extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_MODAL,\n      (el, config) => new Modal(el, config),\n      modalConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: ModalConfig) {\n    super(element, {\n      name: WIDGET_NAME_MODAL,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: true,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type ModalConfig = {\n  /**\n   * The DOM ID to set on the modal. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-modal-content-id`\n   * attribute used to link triggers to the modal.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names to set on the modal. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-modal-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and\n   *    the same `data-lisn-modal-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-modal-trigger`\n   *    class or `data-lisn-modal-trigger` attribute and that do _not_ have a\n   *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the modal when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * If you set this to false, then you should ensure {@link closeButton} is\n   * enabled.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Offcanvas\n * ********************/\n\n/**\n * Configures the given element as a {@link Offcanvas} widget.\n *\n * The Offcanvas widget sets up the given element to be hidden and open in a\n * fixed overlay (non full-screen) upon activation. Activation can be done\n * manually by calling {@link open} or when clicking on any of the given\n * {@link OffcanvasConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-offcanvas__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position `\"top\"`, `\"bottom\"`, `\"left\"` or\n *   `\"right\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-offcanvas` class or `data-lisn-offcanvas` attribute set on the\n *   element that holds the content of the offcanvas\n * - `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     offcanvas on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the offcanvas on hover but and override\n *     {@link OffcanvasConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and the same `data-lisn-offcanvas-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and that do _not_ have a `data-lisn-offcanvas-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple offcanvas with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-offcanvas-trigger\">Open</div>\n *   <div class=\"lisn-offcanvas\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a offcanvas that doesn't automatically close on click outside\n * or Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"position=top | auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Offcanvas extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_OFFCANVAS,\n      (el, config) => new Offcanvas(el, config),\n      offcanvasConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: OffcanvasConfig) {\n    super(element, {\n      name: WIDGET_NAME_OFFCANVAS,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n\n    const position = config?.position || MC.S_RIGHT;\n    setData(this.getRoot(), MC.PREFIX_PLACE, position);\n  }\n}\n\n/**\n * @interface\n */\nexport type OffcanvasConfig = {\n  /**\n   * The DOM ID to set on the offcanvas. Will result in the top-level root\n   * element that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-offcanvas-content-id`\n   * attribute used to link triggers to the offcanvas.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names to set on the offcanvas. Will result\n   * in the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and the same `data-lisn-offcanvas-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and that do _not_ have a `data-lisn-offcanvas-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Specify the offcanvas position. Supported positions are top, bottom, left,\n   * right.\n   *\n   * @defaultValue \"right\"\n   */\n  position?: Position;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the offcanvas when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n// ------------------------------\n\ntype ElementsCollection = {\n  content: HTMLElement;\n  root: HTMLElement;\n  container: HTMLElement | null;\n  outerWrapper: HTMLElement;\n  triggers: Map<Element, OpenableTriggerConfig>;\n};\n\nconst instances = MH.newWeakMap<Element, Openable>();\n\nconst WIDGET_NAME_COLLAPSIBLE = \"collapsible\";\nconst WIDGET_NAME_POPUP = \"popup\";\nconst WIDGET_NAME_MODAL = \"modal\";\nconst WIDGET_NAME_OFFCANVAS = \"offcanvas\";\n\nconst PREFIX_CLOSE_BTN = MH.prefixName(\"close-button\");\nconst PREFIX_IS_OPEN = MH.prefixName(\"is-open\");\nconst PREFIX_REVERSE = MH.prefixName(MC.S_REVERSE);\nconst PREFIX_PEEK = MH.prefixName(\"peek\");\nconst PREFIX_OPENS_ON_HOVER = MH.prefixName(\"opens-on-hover\");\nconst PREFIX_LINE = MH.prefixName(\"line\");\nconst PREFIX_ICON_POSITION = MH.prefixName(\"icon-position\");\nconst PREFIX_TRIGGER_ICON = MH.prefixName(\"trigger-icon\");\nconst PREFIX_ICON_WRAPPER = MH.prefixName(\"icon-wrapper\");\nconst S_AUTO = \"auto\";\nconst S_ARIA_EXPANDED = MC.ARIA_PREFIX + \"expanded\";\nconst S_ARIA_MODAL = MC.ARIA_PREFIX + \"modal\";\nconst VAR_PEEK_SIZE = MH.prefixCssVar(\"peek-size\");\nconst VAR_JS_COLLAPSIBLE_WIDTH = MH.prefixCssJsVar(\"collapsible-width\");\nconst MIN_CLICK_TIME_AFTER_HOVER_OPEN = 1000;\nconst S_ARROW_UP =\n  `${MC.S_ARROW}-${MC.S_UP}` as `${typeof MC.S_ARROW}-${typeof MC.S_UP}`;\nconst S_ARROW_DOWN =\n  `${MC.S_ARROW}-${MC.S_DOWN}` as `${typeof MC.S_ARROW}-${typeof MC.S_DOWN}`;\nconst S_ARROW_LEFT =\n  `${MC.S_ARROW}-${MC.S_LEFT}` as `${typeof MC.S_ARROW}-${typeof MC.S_LEFT}`;\nconst S_ARROW_RIGHT =\n  `${MC.S_ARROW}-${MC.S_RIGHT}` as `${typeof MC.S_ARROW}-${typeof MC.S_RIGHT}`;\n\nconst ARROW_TYPES = [\n  S_ARROW_UP,\n  S_ARROW_DOWN,\n  S_ARROW_LEFT,\n  S_ARROW_RIGHT,\n] as const;\n\nconst ICON_CLOSED_TYPES = [\"plus\", ...ARROW_TYPES] as const;\nconst ICON_OPEN_TYPES = [\"minus\", \"x\", ...ARROW_TYPES] as const;\ntype IconCloseType = (typeof ICON_CLOSED_TYPES)[number];\ntype IconOpenType = (typeof ICON_OPEN_TYPES)[number];\n\nconst isValidIconClosed = (value: string): value is IconCloseType =>\n  MH.includes(ICON_CLOSED_TYPES, value);\n\nconst isValidIconOpen = (value: string): value is IconOpenType =>\n  MH.includes(ICON_OPEN_TYPES, value);\n\nconst triggerConfigValidator: WidgetConfigValidatorObject<OpenableTriggerConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      value && toBoolean(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n    hover: validateBoolean,\n  };\n\nconst collapsibleConfigValidator: WidgetConfigValidatorObject<CollapsibleConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    horizontal: validateBoolean,\n    reverse: validateBoolean,\n    peek: validateBooleanOrString,\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      toBoolean(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n  };\n\nconst popupConfigValidator: WidgetConfigValidatorObject<PopupConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) =>\n    validateString(\n      key,\n      value,\n      (v) => v === S_AUTO || isValidPosition(v) || isValidTwoFoldPosition(v),\n    ),\n  autoClose: validateBoolean,\n};\n\nconst modalConfigValidator: WidgetConfigValidatorObject<ModalConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  autoClose: validateBoolean,\n};\n\nconst offcanvasConfigValidator: WidgetConfigValidatorObject<OffcanvasConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) => validateString(key, value, isValidPosition),\n  autoClose: validateBoolean,\n};\n\nconst getPrefixedNames = (name: string) => {\n  const pref = MH.prefixName(name);\n  return {\n    _root: `${pref}__root`,\n    _overlay: `${pref}__overlay`, // only used for modal/offcanvas\n    _innerWrapper: `${pref}__inner-wrapper`,\n    _outerWrapper: `${pref}__outer-wrapper`,\n    _content: `${pref}__content`,\n    _container: `${pref}__container`,\n    _trigger: `${pref}__trigger`,\n    // Use different classes for styling to the ones used for auto-discovering\n    // elements, so that re-creating existing widgets can correctly find the\n    // elements to be used by the new widget synchronously before the current\n    // one is destroyed.\n    _containerForSelect: `${pref}-container`,\n    _triggerForSelect: `${pref}-trigger`,\n    _contentId: `${pref}-content-id`,\n  };\n};\n\nconst findContainer = (content: Element, cls: string) => {\n  const currWidget = instances.get(content);\n  // If there's an existing widget that we're about to destroy, the content\n  // element will be wrapped in several elements and won't be restored until\n  // the next mutate time. In that case, to correctly determine the container\n  // element, use the current widget's root element, which is located in the\n  // content element's original place.\n  let childRef = currWidget?.getRoot() || content;\n  if (!MH.parentOf(childRef)) {\n    // The current widget is not yet initialized (i.e. we are re-creating it\n    // immediately after it was constructed)\n    childRef = content;\n  }\n\n  // Find the content container\n  let container: HTMLElement | null = childRef.closest(`.${cls}`);\n  if (!container) {\n    container = MH.parentOf(childRef);\n  }\n\n  return container;\n};\n\nconst findTriggers = (\n  content: Element,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const container = findContainer(content, prefixedNames._containerForSelect);\n  // jsdom does not like the below selector when suffixed by [data-*] or :not()...\n  // const triggerSelector = `:is(.${prefixedNames._triggerForSelect},[data-${prefixedNames._triggerForSelect}])`;\n  // So use this:\n  const getTriggerSelector = (suffix: string) =>\n    `.${prefixedNames._triggerForSelect}${suffix},` +\n    `[data-${prefixedNames._triggerForSelect}]${suffix}`;\n\n  const contentId = getData(content, prefixedNames._contentId);\n  let triggers: Element[] = [];\n\n  if (contentId) {\n    triggers = [\n      ...MH.docQuerySelectorAll(\n        getTriggerSelector(`[data-${prefixedNames._contentId}=\"${contentId}\"]`),\n      ),\n    ];\n  } else if (container) {\n    triggers = [\n      ...MH.arrayFrom(\n        MH.querySelectorAll(\n          container,\n          getTriggerSelector(`:not([data-${prefixedNames._contentId}])`),\n        ),\n      ).filter((t) => !content.contains(t)),\n    ];\n  }\n\n  return triggers;\n};\n\nconst getTriggersFrom = (\n  content: Element,\n  inputTriggers:\n    | Element[]\n    | Map<Element, OpenableTriggerConfig | null>\n    | undefined,\n  wrapTriggers: boolean,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const triggerMap = MH.newMap<Element, OpenableTriggerConfig>();\n\n  inputTriggers = inputTriggers || findTriggers(content, prefixedNames);\n\n  const addTrigger = (\n    trigger: Element,\n    triggerConfig: OpenableTriggerConfig,\n  ) => {\n    if (wrapTriggers) {\n      const wrapper = MH.createElement(\n        isInlineTag(MH.tagName(trigger)) ? \"span\" : \"div\",\n      );\n      wrapElement(trigger, { wrapper, ignoreMove: true }); // no need to await\n      trigger = wrapper;\n    }\n\n    triggerMap.set(trigger, triggerConfig);\n  };\n\n  if (MH.isArray(inputTriggers)) {\n    for (const trigger of inputTriggers) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(\n          getData(trigger, prefixedNames._triggerForSelect),\n          triggerConfigValidator,\n        ),\n      );\n    }\n  } else if (MH.isInstanceOf(inputTriggers, Map)) {\n    for (const [trigger, triggerConfig] of inputTriggers.entries()) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(triggerConfig, triggerConfigValidator),\n      );\n    }\n  }\n\n  return triggerMap;\n};\n\nconst setupElements = (\n  widget: Openable,\n  content: HTMLElement,\n  properties: OpenableProperties,\n): ElementsCollection => {\n  const prefixedNames = getPrefixedNames(properties.name);\n  const container = findContainer(content, prefixedNames._containerForSelect);\n\n  const wrapTriggers = properties.wrapTriggers ?? false;\n  const triggers = getTriggersFrom(\n    content,\n    properties.triggers,\n    wrapTriggers,\n    prefixedNames,\n  );\n\n  // Create two wrappers\n  const innerWrapper = MH.createElement(\"div\");\n  addClasses(innerWrapper, prefixedNames._innerWrapper);\n\n  const outerWrapper = wrapElementNow(innerWrapper);\n\n  // Setup the root element.\n  // For off-canvas types we need another wrapper to serve as the root and we\n  // need a placeholder element to save the content's original position so it\n  // can be restored on destroy.\n  // Otherwise use outerWrapper for root and insert the root where the content\n  // was.\n  let root: HTMLElement;\n  let placeholder: HTMLElement;\n  if (properties.isOffcanvas) {\n    addClasses(outerWrapper, prefixedNames._outerWrapper);\n    root = wrapElementNow(outerWrapper);\n    placeholder = MH.createElement(\"div\");\n\n    const overlay = MH.createElement(\"div\");\n    addClasses(overlay, prefixedNames._overlay);\n    moveElement(overlay, { to: root });\n  } else {\n    // Otherwise use the outer wrapper as the root\n    root = placeholder = outerWrapper;\n  }\n\n  if (properties.id) {\n    root.id = properties.id;\n  }\n\n  if (properties.className) {\n    addClassesNow(root, ...toArrayIfSingle(properties.className));\n  }\n\n  unsetBooleanData(root, PREFIX_IS_OPEN);\n  const domID = getOrAssignID(root, properties.name);\n\n  if (properties.isModal) {\n    MH.setAttr(root, MC.S_ROLE, \"dialog\");\n    MH.setAttr(root, S_ARIA_MODAL);\n  }\n\n  addClasses(root, prefixedNames._root);\n  disableInitialTransition(root);\n\n  // Add a close button?\n  if (properties.closeButton) {\n    const closeBtn = MH.createButton(\"Close\");\n    addClasses(closeBtn, PREFIX_CLOSE_BTN);\n\n    // If autoClose is true, it will be closed on click anyway, because the\n    // close button is outside the content.\n    addEventListenerTo(closeBtn, MC.S_CLICK, () => {\n      widget.close();\n    });\n\n    moveElement(closeBtn, { to: properties.isOffcanvas ? root : innerWrapper });\n  }\n\n  // Transfer the relevant classes/data attrs from content to root element, so\n  // that our CSS can work without :has.\n  // This won't cause forced layout since the root is not yet attached to the\n  // DOM.\n  for (const cls of [\n    settings.lightThemeClassName,\n    settings.darkThemeClassName,\n  ]) {\n    if (hasClass(content, cls)) {\n      addClasses(root, cls);\n    }\n  }\n\n  const elements = {\n    content,\n    root,\n    container,\n    outerWrapper,\n    triggers,\n  };\n\n  // -------------------- Close / destroy hooks\n  widget.onClose(async () => {\n    for (const trigger of triggers.keys()) {\n      delData(trigger, PREFIX_OPENS_ON_HOVER);\n      MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n      await unsetBooleanData(trigger, PREFIX_IS_OPEN);\n    }\n  });\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n\n    replaceElementNow(placeholder, content, { ignoreMove: true });\n    moveElementNow(root); // remove\n    removeClassesNow(content, prefixedNames._content);\n\n    if (container) {\n      removeClassesNow(container, prefixedNames._container);\n    }\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      MH.delAttr(trigger, MC.S_ARIA_CONTROLS);\n      MH.delAttr(trigger, S_ARIA_EXPANDED);\n\n      delDataNow(trigger, PREFIX_OPENS_ON_HOVER);\n      delDataNow(trigger, PREFIX_IS_OPEN);\n\n      removeClassesNow(\n        trigger,\n        prefixedNames._trigger,\n        ...(triggerConfig?.className || []),\n      );\n\n      if (trigger.id === triggerConfig?.id) {\n        trigger.id = \"\";\n      }\n\n      if (wrapTriggers) {\n        replaceElementNow(trigger, MH.childrenOf(trigger)[0], {\n          ignoreMove: true,\n        });\n      }\n    }\n\n    triggers.clear();\n\n    for (const el of [content, ...triggers.keys()]) {\n      if (instances.get(el) === widget) {\n        MH.deleteKey(instances, el);\n      }\n    }\n  });\n\n  // -------------------- SETUP\n  // Save the elements so we can lookup the instance\n  const currWidget = instances.get(content);\n  for (const el of [content, ...triggers.keys()]) {\n    instances.set(el, widget);\n  }\n\n  // Wait for the DOMWatcher to be active, which may not be before interactive.\n  waitForInteractive()\n    .then(currWidget?.destroy)\n    .then(waitForMutateTime)\n    .then(() => {\n      if (widget.isDestroyed()) {\n        return;\n      }\n\n      addClassesNow(content, prefixedNames._content);\n\n      if (container) {\n        addClassesNow(container, prefixedNames._container);\n      }\n\n      if (properties.isOffcanvas) {\n        moveElementNow(root, {\n          to: MH.getBody(),\n          ignoreMove: true,\n        });\n      }\n\n      // Move the placeholder element to before the content and then move\n      // content into inner wrapper.\n      moveElementNow(placeholder, {\n        // for not-offcanvas it's also the root\n        to: content,\n        position: \"before\",\n        ignoreMove: true,\n      });\n\n      moveElementNow(content, { to: innerWrapper, ignoreMove: true });\n\n      // Setup the triggers\n      for (const [trigger, triggerConfig] of triggers.entries()) {\n        MH.setAttr(trigger, MC.S_ARIA_CONTROLS, domID);\n        MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n\n        setBooleanDataNow(\n          trigger,\n          PREFIX_OPENS_ON_HOVER,\n          triggerConfig[MC.S_HOVER],\n        );\n        unsetBooleanDataNow(trigger, PREFIX_IS_OPEN);\n\n        addClassesNow(\n          trigger,\n          prefixedNames._trigger,\n          ...(triggerConfig?.className || []),\n        );\n\n        if (triggerConfig?.id) {\n          trigger.id = triggerConfig.id;\n        }\n      }\n\n      setupListeners(widget, elements, properties, prefixedNames);\n\n      if (properties.onSetup) {\n        properties.onSetup();\n      }\n    });\n\n  return elements;\n};\n\nconst setupListeners = (\n  widget: Openable,\n  elements: ElementsCollection,\n  properties: OpenableProperties,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const { content, root, triggers } = elements;\n  const doc = MH.getDoc();\n\n  let hoverTimeOpened = 0;\n  let isPointerOver = false;\n  let activeTrigger: Element | null = null;\n\n  // ----------\n\n  const isTrigger = (element: Element) =>\n    MH.includes(\n      MH.arrayFrom(triggers.keys()),\n      element.closest(getDefaultWidgetSelector(prefixedNames._trigger)),\n    );\n\n  const shouldPreventDefault = (trigger: Element) =>\n    triggers.get(trigger)?.preventDefault ?? true;\n\n  const usesHover = (trigger: Element) => triggers.get(trigger)?.hover;\n\n  const usesAutoClose = (trigger: Element | null) =>\n    (trigger ? triggers.get(trigger)?.autoClose : null) ?? properties.autoClose;\n\n  // ----------\n\n  const toggleTrigger = (event: Event, openIt?: boolean) => {\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger)) {\n      if (shouldPreventDefault(trigger)) {\n        MH.preventDefault(event);\n      }\n\n      // If a click was fired shortly after opening on hover, ignore\n      if (\n        openIt !== false && // not explicitly asked to close\n        widget.isOpen() &&\n        MH.timeSince(hoverTimeOpened) < MIN_CLICK_TIME_AFTER_HOVER_OPEN\n      ) {\n        return;\n      }\n\n      if (openIt ?? !widget.isOpen()) {\n        // open it\n        activeTrigger = trigger;\n        MH.setAttr(trigger, S_ARIA_EXPANDED); // will be unset on close\n        setBooleanData(trigger, PREFIX_IS_OPEN); // will be unset on close\n\n        widget.open(); // no need to await\n\n        if (usesAutoClose(trigger)) {\n          if (usesHover(trigger)) {\n            addEventListenerTo(root, MC.S_POINTERENTER, setIsPointerOver);\n            addEventListenerTo(root, MC.S_POINTERLEAVE, pointerLeft);\n          }\n\n          // auto-close listeners setup by the onOpen handler below\n        }\n      } else {\n        widget.close(); // out onClose handler below will remove listeners\n      }\n    }\n  };\n\n  // ----------\n\n  const setIsPointerOver = () => {\n    isPointerOver = true;\n  };\n\n  // ----------\n\n  const unsetIsPointerOver = (event: Event) => {\n    // Keep it set to true if this is a touch pointer type; otherwise unset\n    isPointerOver = isPointerOver && MH.isTouchPointerEvent(event);\n  };\n\n  // ----------\n\n  const pointerEntered = (event: Event) => {\n    setIsPointerOver();\n    if (!widget.isOpen()) {\n      hoverTimeOpened = MH.timeNow();\n      toggleTrigger(event, true);\n    }\n  };\n\n  // ----------\n\n  const pointerLeft = (event: Event) => {\n    unsetIsPointerOver(event);\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger) && usesAutoClose(trigger)) {\n      MH.setTimer(\n        () => {\n          if (!isPointerOver) {\n            widget.close();\n          }\n        },\n        // use a delay that allows the mouse to move from trigger to content\n        // without closing it\n        // TODO make this user-configurable\n        properties.isOffcanvas ? 300 : 50,\n      );\n    }\n  };\n\n  // ----------\n\n  const closeIfEscape = (event: Event) => {\n    if ((event as KeyboardEvent).key === \"Escape\") {\n      widget.close(); // no need to await\n    }\n  };\n\n  // ----------\n\n  const closeIfClickOutside = (event: Event) => {\n    const target = MH.targetOf(event);\n    if (\n      target === doc ||\n      (MH.isElement(target) &&\n        !content.contains(target) && // outside content\n        !isTrigger(target)) // handled by pointer watcher\n    ) {\n      widget.close();\n    }\n  };\n\n  // ----------\n\n  const maybeSetupAutoCloseListeners = (\n    trigger: Element | null,\n    remove: boolean,\n  ) => {\n    if (usesAutoClose(trigger)) {\n      const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n      addOrRemove(doc, \"keyup\", closeIfEscape);\n\n      // Add a short delay so that we don't catch the bubbling of the click event\n      // that opened the widget.\n      MH.setTimer(() => addOrRemove(doc, MC.S_CLICK, closeIfClickOutside), 100);\n\n      if (trigger && usesHover(trigger)) {\n        addOrRemove(trigger, MC.S_POINTERLEAVE, pointerLeft);\n      }\n    }\n  };\n\n  // ----------\n\n  const setupOrCleanup = (remove: boolean) => {\n    const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      // Always setup click listeners\n      addOrRemove(trigger, MC.S_CLICK, toggleTrigger);\n\n      if (triggerConfig[MC.S_HOVER]) {\n        addOrRemove(trigger, MC.S_POINTERENTER, pointerEntered);\n      }\n    }\n  };\n\n  // ----------\n\n  setupOrCleanup(false);\n\n  widget.onOpen(() => {\n    maybeSetupAutoCloseListeners(activeTrigger, false); // setup listeners if relevant\n  });\n\n  widget.onClose(() => {\n    hoverTimeOpened = 0;\n    isPointerOver = false;\n\n    removeEventListenerFrom(root, MC.S_POINTERENTER, setIsPointerOver);\n    removeEventListenerFrom(root, MC.S_POINTERLEAVE, pointerLeft);\n\n    maybeSetupAutoCloseListeners(activeTrigger, true); // remove listeners if any\n    activeTrigger = null;\n  });\n\n  widget.onDestroy(() => {\n    setupOrCleanup(true); // remove\n  });\n};\n\n// COLLAPSIBLE ------------------------------\n\nconst insertCollapsibleIcon = (\n  trigger: Element,\n  triggerConfig: OpenableTriggerConfig,\n  widget: Collapsible,\n  widgetConfig: CollapsibleConfig | undefined,\n) => {\n  const iconPosition = triggerConfig.icon ?? widgetConfig?.icon;\n  const iconClosed =\n    triggerConfig.iconClosed ?? widgetConfig?.iconClosed ?? \"plus\";\n  const iconOpen = triggerConfig.iconOpen ?? widgetConfig?.iconOpen ?? \"minus\";\n\n  if (iconPosition) {\n    addClasses(trigger, PREFIX_ICON_WRAPPER);\n    setData(trigger, PREFIX_ICON_POSITION, iconPosition);\n\n    const icon = MH.createElement(\"span\");\n    setDataNow(icon, PREFIX_TRIGGER_ICON, iconClosed);\n\n    for (let l = 0; l < 2; l++) {\n      const line = MH.createElement(\"span\");\n      addClassesNow(line, PREFIX_LINE);\n      moveElementNow(line, { to: icon });\n    }\n\n    moveElement(icon, { to: trigger, ignoreMove: true });\n\n    widget.onOpen(() => {\n      if (getBooleanData(trigger, PREFIX_IS_OPEN)) {\n        setData(icon, PREFIX_TRIGGER_ICON, iconOpen);\n      }\n    });\n\n    widget.onClose(() => {\n      setData(icon, PREFIX_TRIGGER_ICON, iconClosed);\n    });\n  }\n};\n\n// POPUP ------------------------------\n\nconst fetchPopupPlacement = async (\n  contentSize: SizeData,\n  containerView: ViewData,\n) => {\n  const containerPosition = containerView.relative;\n  const containerTop = containerPosition[MC.S_TOP];\n  const containerBottom = containerPosition[MC.S_BOTTOM];\n  const containerLeft = containerPosition[MC.S_LEFT];\n  const containerRight = containerPosition[MC.S_RIGHT];\n  const containerHMiddle = containerPosition.hMiddle;\n  const containerVMiddle = containerPosition.vMiddle;\n  const vpSize = await fetchViewportSize();\n  const popupWidth = contentSize.border[MC.S_WIDTH] / vpSize[MC.S_WIDTH];\n  const popupHeight = contentSize.border[MC.S_HEIGHT] / vpSize[MC.S_HEIGHT];\n\n  // - Find the maximum of these quantities:\n  //   - containerTop - popupHeight:\n  //     the space on top if placed on top-(left|right|)\n  //   - 1 - (containerBottom + popupHeight):\n  //     the space on bottom be if placed on bottom-(left|right|)\n  //   - containerLeft - popupWidth:\n  //     the space on left if placed on left-(top|bottom|)\n  //   - 1 - (containerRight + popupWidth):\n  //     the space on right if placed on right-(top|bottom|)\n  //\n  // This determines the main placement: top|bottom|left|right\n\n  // Then to determine secondary alignment:\n  // - For top/bottom placement, determine horizontal alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerLeft + popupWidth):\n  //       the space on right if left-aligned\n  //     - containerRight - popupWidth:\n  //       the space on left if right-aligned\n  //     - min(\n  //           containerHMiddle - popupWidth / 2,\n  //           1 - (containerHMiddle + popupWidth / 2),\n  //       ):\n  //       the minimum of the space on either left or right if center-aligned\n  //\n  // - For left/right placement, determine vertical alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerTop + popupHeight):\n  //       the space on bottom if top-aligned\n  //     - containerBottom - popupHeight:\n  //       the space on top if bottom-aligned\n  //     - min(\n  //           containerVMiddle - popupHeight / 2,\n  //           1 - (containerVMiddle + popupHeight / 2),\n  //       ):\n  //       the minimum of the space on either top or bottom if center-aligned\n\n  const placementVars = {\n    top: containerTop - popupHeight,\n    bottom: 1 - (containerBottom + popupHeight),\n    left: containerLeft - popupWidth,\n    right: 1 - (containerRight + popupWidth),\n  };\n\n  const placement = keyWithMaxVal(placementVars);\n  if (placement === undefined) {\n    // container must be out-view and so left/right are NaN\n    return;\n  }\n  let finalPlacement = placement;\n\n  let alignmentVars;\n  switch (placement) {\n    case MC.S_TOP:\n    case MC.S_BOTTOM:\n      alignmentVars = {\n        left: 1 - (containerLeft + popupWidth),\n        right: containerRight - popupWidth,\n        middle: MH.min(\n          containerHMiddle - popupWidth / 2,\n          1 - (containerHMiddle + popupWidth / 2),\n        ),\n      };\n      break;\n\n    case MC.S_LEFT:\n    case MC.S_RIGHT:\n      alignmentVars = {\n        top: 1 - (containerTop + popupHeight),\n        bottom: containerBottom - popupHeight,\n        middle: MH.min(\n          containerVMiddle - popupHeight / 2,\n          1 - (containerVMiddle + popupHeight / 2),\n        ),\n      };\n      break;\n\n    default:\n      return;\n  }\n\n  const alignment = keyWithMaxVal(alignmentVars);\n  if (alignment !== \"middle\") {\n    finalPlacement += \"-\" + alignment;\n  }\n\n  return finalPlacement;\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling openables\n * {@link Open} opens or closes the {@link Openable} widget setup for the given\n * element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { Openable } from \"@lisn/widgets/openable\";\nimport { fetchUniqueWidget } from \"@lisn/widgets/widget\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Opens or closes the {@link Openable} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"open\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-modal\" data-lisn-on-view=\"@open +reference=top:50%\"></div>\n * ```\n *\n * @category Controlling openables\n */\nexport class Open implements Action {\n  /**\n   * Opens the Openable widget setup for the element.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Closes the Openable widget setup for the element.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the Openable widget setup for the element.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"open\", (element) => new Open(element));\n  }\n\n  constructor(element: Element) {\n    const open = (widget: Openable | null) => widget?.open();\n    const close = (widget: Openable | null) => widget?.close();\n    const toggle = (widget: Openable | null) => widget?.toggle();\n\n    const widgetPromise = fetchUniqueWidget(\"openable\", element, Openable);\n\n    this.do = () => widgetPromise.then(open);\n    this.undo = () => widgetPromise.then(close);\n    this[MC.S_TOGGLE] = () => widgetPromise.then(toggle);\n  }\n}\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  addClasses,\n  removeClassesNow,\n  getData,\n  setData,\n  setBooleanData,\n  delDataNow,\n  getComputedStyleProp,\n  setStyleProp,\n  delStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { isValidInputDevice } from \"@lisn/utils/gesture\";\nimport { toInt } from \"@lisn/utils/math\";\nimport { toBoolean } from \"@lisn/utils/misc\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateNumber,\n  validateString,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport {\n  GestureWatcher,\n  OnGestureOptions,\n  GestureData,\n} from \"@lisn/watchers/gesture-watcher\";\nimport { ScrollWatcher, ScrollOptions } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  WidgetCallback,\n  WidgetHandler,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * Configures the given element as a {@link Pager} widget.\n *\n * The Pager widget sets up the elements that make up its pages to be overlayed\n * on top of each other with only one of them visible at a time. When a user\n * performs a scroll-like gesture (see {@link GestureWatcher}), the pages are\n * flicked through: gestures, whose direction is down (or left) result in the\n * next page being shown, otherwise the previous.\n *\n * The widget should have more than one page.\n *\n * Optionally, the widget can have a set of \"switch\" elements and a set of\n * \"toggle\" elements which correspond one-to-one to each page. Switches go to\n * the given page and toggles toggle the enabled/disabled state of the page.\n *\n * **IMPORTANT:** Unless the {@link PagerConfig.style} is set to \"carousel\", the\n * page elements will be positioned absolutely, and therefore the pager likely\n * needs to have an explicit height. If you enable\n * {@link PagerConfig.fullscreen}, then the element will get `height: 100vh`\n * set. Otherwise, you need to set its height in your CSS.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Pager}\n * widget on a given element. Use {@link Pager.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the pager element:\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n * - `data-lisn-use-parallax`: `\"true\"` or `\"false\"`\n * - `data-lisn-total-pages`: the number of pages\n * - `data-lisn-visible-pages`: **for carousel only** the number of visible pages;\n *   can be fractional if {@link PagerConfig.peek} is enabled\n * - `data-lisn-current-page`: the current page number\n * - `data-lisn-current-page-is-last`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-first-enabled`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-last-enabled`: `\"true\"` or `\"false\"`\n *\n * The following dynamic CSS properties are also set on the pager element's style:\n * - `--lisn-js--total-pages`: the number of pages\n * - `--lisn-js--visible-pages`: **for carousel only** the number of visible pages\n * - `--lisn-js--current-page`: the current page number\n *\n * The following dynamic attributes are set on each page, toggle or switch element:\n * - `data-lisn-page-state`: `\"current\"`, `\"next\"`, `\"covered\"` or `\"disabled\"`\n * - `data-lisn-page-number`: the corresponding page's number\n *\n * The following analogous dynamic CSS properties are also set on each page,\n * toggle or switch element's style:\n * - `--lisn-js--page-number`: the corresponding page's number\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-pager` class or `data-lisn-pager` attribute set on the container\n *   element that constitutes the pager\n * - `lisn-pager-page` class or `data-lisn-pager-page` attribute set on\n *   elements that should act as the pages.\n * - `lisn-pager-toggle` class or `data-lisn-pager-toggle` attribute set on\n *   elements that should act as the toggles.\n * - `lisn-pager-switch` class or `data-lisn-pager-switch` attribute set on\n *   elements that should act as the switches.\n *\n * When using auto-widgets, the elements that will be used as pages are\n * discovered in the following way:\n * 1. The top-level element that constitutes the widget is searched for any\n *    elements that contain the `lisn-pager-page` class or\n *    `data-lisn-pager-page` attribute. They do not have to be immediate\n *    children of the root element, but they **should** all be siblings.\n * 2. If there are no such elements, all of the immediate children of the\n *    widget element except any `script` or `style` elements are taken as the\n *    pages.\n *\n * The toggles and switches are descendants of the top-level element that\n * constitutes the widget, that contain the\n * `lisn-pager-toggle`/`lisn-pager-switch` class or `data-lisn-pager-toggle`/\n * `data-lisn-pager-switch` attribute. They do not have to be immediate\n * children of the root element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple pager with default settings.\n *\n * ```html\n * <div class=\"lisn-pager\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * As above but with all settings explicitly set to their default (`false`).\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen=false | parallax=false | horizontal=false\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>Horizontal: Page 1</div>\n *   <div>Horizontal: Page 2</div>\n *   <div>Horizontal: Page 3</div>\n *   <div>Horizontal: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings, as well as toggle and switch buttons.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>\n *     <div data-lisn-pager-page>Horizontal: Page 1</div>\n *     <div data-lisn-pager-page>Horizontal: Page 2</div>\n *     <div data-lisn-pager-page>Horizontal: Page 3</div>\n *     <div data-lisn-pager-page>Horizontal: Page 4</div>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-toggle>Toggle page 1</button>\n *     <button data-lisn-pager-toggle>Toggle page 2</button>\n *     <button data-lisn-pager-toggle>Toggle page 3</button>\n *     <button data-lisn-pager-toggle>Toggle page 4</button>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-switch>Go to page 1</button>\n *     <button data-lisn-pager-switch>Go to page 2</button>\n *     <button data-lisn-pager-switch>Go to page 3</button>\n *     <button data-lisn-pager-switch>Go to page 4</button>\n *   </div>\n * </div>\n * ```\n */\nexport class Pager extends Widget {\n  /**\n   * Advances the widget's page by 1. If the current page is the last one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled down/right\n   * (depending on the gesture direction).\n   */\n  readonly nextPage: () => Promise<void>;\n\n  /**\n   * Reverses the widget's page by 1. If the current page is the first one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled up/left\n   * (depending on the gesture direction).\n   */\n  readonly prevPage: () => Promise<void>;\n\n  /**\n   * Advances the widget to the given page. Note that page numbers start at 1.\n   *\n   * If this page is disabled, nothing is done.\n   */\n  readonly goToPage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Disables the given page number. Note that page numbers start at 1.\n   *\n   * The page will be skipped during transitioning to previous/next.\n   *\n   * If the page is the current one, then the current page will be switched to\n   * the previous one (that's not disabled), or if this is the first enabled\n   * page, then it will switch to the next one that's not disabled.\n   *\n   * If this is the last enabled page, nothing is done.\n   */\n  readonly disablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page number. Note that page numbers start at 1.\n   */\n  readonly enablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page if it is disabled, otherwise disables it. Note\n   * that page numbers start at 1.\n   */\n  readonly togglePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Returns true if the given page number is disabled. Note that page\n   * numbers start at 1.\n   */\n  readonly isPageDisabled: (pageNum: number) => boolean;\n\n  /**\n   * Returns the current page.\n   */\n  readonly getCurrentPage: () => Element;\n\n  /**\n   * Returns the previous page, before the last transition.\n   *\n   * If there has been no change of page, returns the first page, same as\n   * {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPage: () => Element;\n\n  /**\n   * Returns the number of the current page. Note that numbers start at 1.\n   */\n  readonly getCurrentPageNum: () => number;\n\n  /**\n   * Returns the number of the previous page, before the last transition. Note\n   * that numbers start at 1.\n   *\n   * If there has been no change of page, returns the number of the first page,\n   * same as {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPageNum: () => number;\n\n  /**\n   * The given handler will be called whenever there is a change of page. It\n   * will be called after the current page number is updated internally (so\n   * {@link getPreviousPageNum} and {@link getCurrentPageNum} will return the\n   * updated numbers), but before the page transition styles are updated.\n   *\n   * If the handler returns a promise, it will be awaited upon.\n   */\n  readonly onTransition: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns the page elements.\n   */\n  readonly getPages: () => Element[];\n\n  /**\n   * Returns the toggle elements if any.\n   */\n  readonly getToggles: () => Element[];\n\n  /**\n   * Returns the switch elements if any.\n   */\n  readonly getSwitches: () => Element[];\n\n  static get(element: Element): Pager | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Pager)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!Pager.get(element)) {\n          return new Pager(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If there are less than 2 pages given or found, or if any\n   *                page is not a descendant of the main pager element.\n   */\n  constructor(element: Element, config?: PagerConfig) {\n    const destroyPromise = Pager.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const pages = config?.pages || [];\n    const toggles = config?.toggles || [];\n    const switches = config?.switches || [];\n    const nextPrevSwitch = {\n      _next: config?.nextSwitch || null,\n      _prev: config?.prevSwitch || null,\n    };\n\n    const pageSelector = getDefaultWidgetSelector(PREFIX_PAGE__FOR_SELECT);\n    const toggleSelector = getDefaultWidgetSelector(PREFIX_TOGGLE__FOR_SELECT);\n    const switchSelector = getDefaultWidgetSelector(PREFIX_SWITCH__FOR_SELECT);\n    const nextSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_NEXT_SWITCH__FOR_SELECT,\n    );\n    const prevSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_PREV_SWITCH__FOR_SELECT,\n    );\n\n    if (!MH.lengthOf(pages)) {\n      pages.push(...MH.querySelectorAll(element, pageSelector));\n\n      if (!MH.lengthOf(pages)) {\n        pages.push(\n          ...getVisibleContentChildren(element).filter(\n            (e) => !e.matches(switchSelector),\n          ),\n        );\n      }\n    }\n\n    if (!MH.lengthOf(toggles)) {\n      toggles.push(...MH.querySelectorAll(element, toggleSelector));\n    }\n\n    if (!MH.lengthOf(switches)) {\n      switches.push(...MH.querySelectorAll(element, switchSelector));\n    }\n\n    if (!nextPrevSwitch._next) {\n      nextPrevSwitch._next = MH.querySelector(element, nextSwitchSelector);\n    }\n\n    if (!nextPrevSwitch._prev) {\n      nextPrevSwitch._prev = MH.querySelector(element, prevSwitchSelector);\n    }\n\n    const numPages = MH.lengthOf(pages);\n    if (numPages < 2) {\n      throw MH.usageError(\"Pager must have more than 1 page\");\n    }\n\n    for (const page of pages) {\n      if (!element.contains(page) || page === element) {\n        throw MH.usageError(\"Pager's pages must be its descendants\");\n      }\n    }\n\n    const components = {\n      _pages: pages,\n      _toggles: toggles,\n      _switches: switches,\n      _nextPrevSwitch: nextPrevSwitch,\n    };\n\n    const methods = getMethods(this, components, element, config);\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, element, components, config, methods);\n    });\n\n    this.nextPage = () => methods._nextPage();\n    this.prevPage = () => methods._prevPage();\n    this.goToPage = (pageNum) => methods._goToPage(pageNum);\n    this.disablePage = methods._disablePage;\n    this.enablePage = methods._enablePage;\n    this.togglePage = methods._togglePage;\n    this.isPageDisabled = methods._isPageDisabled;\n    this.getCurrentPage = methods._getCurrentPage;\n    this.getPreviousPage = methods._getPreviousPage;\n    this.getCurrentPageNum = methods._getCurrentPageNum;\n    this.getPreviousPageNum = methods._getPreviousPageNum;\n    this.onTransition = methods._onTransition;\n\n    this.getPages = () => [...pages];\n    this.getSwitches = () => [...switches];\n    this.getToggles = () => [...toggles];\n  }\n}\n\n/**\n * @interface\n */\nexport type PagerConfig = {\n  /**\n   * The elements that will make up the pages.\n   *\n   * They do not have to be immediate children of the root element, but they\n   * should all be siblings.\n   *\n   * The widget should have more than one page.\n   *\n   * If this is not specified, then\n   * 1. The top-level element that constitutes the widget is searched for any\n   *    elements that contain the `lisn-pager-page` class or the\n   *    `data-lisn-pager-page` attribute, and these are used as pages.\n   * 2. If there are no such elements, all of the immediate children of the\n   *    widget element (other than `script` and `style` elements) are taken as\n   *    the pages.\n   *\n   * **IMPORTANT:** Unless the {@link style} is set to \"carousel\", the page\n   * elements will be positioned absolutely, and therefore the pager likely\n   * needs to have an explicit height. If you enable {@link fullscreen}, then\n   * the element will get `height: 100vh` set. Otherwise, you need to set its\n   * height in your CSS.\n   *\n   * @defaultValue undefined\n   */\n  pages?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that toggles the\n   * enabled/disabled state of the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-toggle`\n   * class or the `data-lisn-pager-toggle` attribute, and these are used as\n   * toggles.\n   *\n   * @defaultValue undefined\n   */\n  toggles?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that switches the\n   * pager to the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-switch`\n   * class or the `data-lisn-pager-switch` attribute, and these are used as\n   * switches.\n   *\n   * @defaultValue undefined\n   */\n  switches?: Element[];\n\n  /**\n   * This element will be assigned a click listener that goes to the next page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-next-switch` class or the `data-lisn-pager-next-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  nextSwitch?: Element;\n\n  /**\n   * This element will be assigned a click listener that goes to the previous\n   * page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-prev-switch` class or the `data-lisn-pager-prev-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  prevSwitch?: Element;\n\n  /**\n   * Set the initial page number.\n   *\n   * @defaultValue 1\n   */\n  initialPage?: number;\n\n  /**\n   * Set the style of the widget. This determines the basic CSS applied.\n   *\n   * When importing the stylesheets in your project, if not using the full\n   * stylesheet (lisn.css) you can import either pager.css which contains all\n   * three pager styles, or only `pager-<style>.css`.\n   *\n   * **NOTE:** The base css only includes the minimum required for positioning\n   * and transitioning pages. The switches and toggles are intentionally not\n   * styled for flexibility. You should style those in your CSS.\n   *\n   * **IMPORTANT:** Unless the {@link style} is set to \"carousel\", the page\n   * elements will be positioned absolutely, and therefore the pager likely\n   * needs to have an explicit height. If you enable {@link fullscreen}, then\n   * the element will get `height: 100vh` set. Otherwise, you need to set its\n   * height in your CSS.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue \"slider\"\n   */\n  style?: \"slider\" | \"carousel\" | \"tabs\";\n\n  /**\n   * Only relevant is {@link style} is \"carousel\".\n   *\n   * The *minimum* page height (or width in {@link horizontal} mode) in pixels.\n   * This will determine the number of visible slides at any one width of the\n   * pager. Pages will still grow to fill the size of the carousel itself.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue 300\n   */\n  pageSize?: number;\n\n  /**\n   * Only relevant is {@link style} is \"carousel\".\n   *\n   * Whether to show a bit of the upcoming and/or previous pages that are\n   * hidden when not all fit.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue false\n   */\n  peek?: boolean;\n\n  /**\n   * If true, then:\n   * - if the pager {@link style} is \"slider\", the pager's height will be set\n   *   to the viewport height (100vh)\n   * - the pager's scrolling ancestor will be scrolled to the top of the pager\n   *   when 30% of it is in view\n   * - scrolling beyond the first or last page will initiate scroll up/left or\n   *   down/right the pager's scrolling ancestor in order to allow \"leaving\"\n   *   the pager\n   *\n   * Note that except in \"carousel\" {@link style} the pager's pages will be\n   * positioned absolutely, and so if you do _not_ enable this option, you will\n   * need to manually set the height of the page parent element via CSS.\n   *\n   * @defaultValue false\n   */\n  fullscreen?: boolean;\n\n  /**\n   * Only relevant is {@link style} is \"slider\" (default) or \"carousel\".\n   *\n   * Use a parallax effect for switching pages.\n   *\n   * @defaultValue false\n   */\n  parallax?: boolean;\n\n  /**\n   * Only relevant is {@link style} is \"slider\" (default) or \"carousel\".\n   *\n   * Transition pages sideways instead of vertically.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Transition pages upon user scroll-like and drag-like gestures via the\n   * given {@link GestureDevice}s. If set to true, then gestures using all\n   * device types are supported.\n   *\n   * Note that drag gesture is only supported by the \"pointer\" device and also\n   * the \"pointer\" device only supports drag gestures, so if you want to\n   * disable drag gestures, simply pass \"wheel,key,touch\" as this option.\n   *\n   * @defaultValue true\n   */\n  useGestures?: boolean | CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If true, then pages will be advanced backwards/forwards regardless if the\n   * gesture direction is horizontal or vertical.\n   *\n   * If false then, a gesture will go to the next page only if its direction is\n   * down if {@link horizontal} is false/right if {@link horizontal} is true,\n   * and to the previous page only if the gesture direction is up if\n   * {@link horizontal} is false/left if {@link horizontal} is true.\n   *\n   * **IMPORTANT:**\n   * If {@link fullscreen}, {@link preventDefault} and\n   * {@link alignGestureDirection} are all true, then the pager's scrollable\n   * parent must be scrollable in the same direction as the pager orientation,\n   * otherwise automatic scroll beyond the last/first page won't work.\n   *\n   * @defaultValue false\n   */\n  alignGestureDirection?: boolean;\n\n  /**\n   * Whether to prevent the default action for events that would result in\n   * gestures.\n   *\n   * **NOTE:**\n   * If true (default), then all events that originate from a device given in\n   * {@link useGestures} and that could result in a gesture will be prevented\n   * regardless of their direction and whether {@link alignGestureDirection} is\n   * true.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n};\n\n// --------------------\n\ntype Components = {\n  _pages: Element[];\n  _toggles: Element[];\n  _switches: Element[];\n  _nextPrevSwitch: { _next: Element | null; _prev: Element | null };\n};\n\n// Swiping on some trackpads results in \"trailing\" wheel events sent for some\n// while which results in multiple pages being advanced in a short while. So we\n// limit how often pages can be advanced.\nconst MIN_TIME_BETWEEN_WHEEL = 1000;\n\nconst S_CURRENT = \"current\";\nconst S_ARIA_CURRENT = MC.ARIA_PREFIX + S_CURRENT;\nconst S_COVERED = \"covered\";\nconst S_NEXT = \"next\";\nconst S_TOTAL_PAGES = \"total-pages\";\nconst S_VISIBLE_PAGES = \"visible-pages\";\nconst S_CURRENT_PAGE = \"current-page\";\nconst S_PAGE_NUMBER = \"page-number\";\nconst WIDGET_NAME = \"pager\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_PAGE_CONTAINER = `${PREFIXED_NAME}__page-container`;\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_PAGE = `${PREFIXED_NAME}__page`;\nconst PREFIX_PAGE__FOR_SELECT = `${PREFIXED_NAME}-page`;\nconst PREFIX_TOGGLE__FOR_SELECT = `${PREFIXED_NAME}-toggle`;\nconst PREFIX_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-switch`;\nconst PREFIX_NEXT_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-next-switch`;\nconst PREFIX_PREV_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-prev-switch`;\n\nconst PREFIX_STYLE = `${PREFIXED_NAME}-style`;\nconst PREFIX_IS_FULLSCREEN = MH.prefixName(\"is-fullscreen\");\nconst PREFIX_USE_PARALLAX = MH.prefixName(\"use-parallax\");\nconst PREFIX_TOTAL_PAGES = MH.prefixName(S_TOTAL_PAGES);\nconst PREFIX_VISIBLE_PAGES = MH.prefixName(S_VISIBLE_PAGES);\nconst PREFIX_CURRENT_PAGE = MH.prefixName(S_CURRENT_PAGE);\nconst PREFIX_CURRENT_PAGE_IS_LAST = `${PREFIX_CURRENT_PAGE}-is-last`;\nconst PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED = `${PREFIX_CURRENT_PAGE}-is-first-enabled`;\nconst PREFIX_CURRENT_PAGE_IS_LAST_ENABLED = `${PREFIX_CURRENT_PAGE_IS_LAST}-enabled`;\nconst PREFIX_PAGE_STATE = MH.prefixName(\"page-state\");\nconst PREFIX_PAGE_NUMBER = MH.prefixName(S_PAGE_NUMBER);\nconst VAR_CURRENT_PAGE = MH.prefixCssJsVar(S_CURRENT_PAGE);\nconst VAR_TOTAL_PAGES = MH.prefixCssJsVar(S_TOTAL_PAGES);\nconst VAR_VISIBLE_PAGES = MH.prefixCssJsVar(S_VISIBLE_PAGES);\nconst VAR_VISIBLE_GAPS = MH.prefixCssJsVar(\"visible-gaps\");\nconst VAR_TRANSLATED_PAGES = MH.prefixCssJsVar(\"translated-pages\");\nconst VAR_TRANSLATED_GAPS = MH.prefixCssJsVar(\"translated-gaps\");\nconst VAR_PAGE_NUMBER = MH.prefixCssJsVar(S_PAGE_NUMBER);\n\n// Only one Pager widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\nconst SUPPORTED_STYLES = [\"slider\", \"carousel\", \"tabs\"] as const;\ntype PagerStyle = (typeof SUPPORTED_STYLES)[number];\n\nconst isValidStyle = (value: string): value is PagerStyle =>\n  MH.includes(SUPPORTED_STYLES, value);\n\nconst configValidator: WidgetConfigValidatorObject<PagerConfig> = {\n  initialPage: validateNumber,\n  style: (key, value) => validateString(key, value, isValidStyle),\n  pageSize: validateNumber,\n  peek: validateBoolean,\n  fullscreen: validateBoolean,\n  parallax: validateBoolean,\n  horizontal: validateBoolean,\n  useGestures: (key, value) => {\n    if (MH.isNullish(value)) {\n      return undefined;\n    }\n\n    const bool = toBoolean(value);\n    if (bool !== null) {\n      return bool;\n    }\n\n    return (\n      validateStrList(\n        \"useGestures\",\n        validateString(key, value),\n        isValidInputDevice,\n      ) || true\n    );\n  },\n  alignGestureDirection: validateBoolean,\n  preventDefault: validateBoolean,\n};\n\nconst fetchClosestScrollable = (element: Element) =>\n  waitForMeasureTime().then(\n    () => getClosestScrollable(element, { active: true }) ?? undefined,\n  );\n\nconst setPageNumber = (components: Components, pageNum: number) => {\n  let lastPromise: Promise<void> = MH.promiseResolve();\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      setData(el, PREFIX_PAGE_NUMBER, pageNum + \"\");\n      lastPromise = setStyleProp(el, VAR_PAGE_NUMBER, pageNum + \"\");\n    }\n  }\n\n  return lastPromise;\n};\n\nconst setPageState = async (\n  components: Components,\n  pageNum: number,\n  state: string,\n) => {\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      await setData(el, PREFIX_PAGE_STATE, state);\n    }\n  }\n};\n\nconst setCurrentPage = (\n  pagerEl: Element,\n  pageNumbers: {\n    _current: number;\n    _total: number;\n  },\n  isPageDisabled: (pageNum: number) => boolean,\n) => {\n  let isFirstEnabled = true;\n  let isLastEnabled = true;\n  for (let n = 1; n <= pageNumbers._total; n++) {\n    if (!isPageDisabled(n)) {\n      if (n < pageNumbers._current) {\n        isFirstEnabled = false;\n      } else if (n > pageNumbers._current) {\n        isLastEnabled = false;\n      }\n    }\n  }\n\n  setStyleProp(pagerEl, VAR_CURRENT_PAGE, pageNumbers._current + \"\");\n  setData(pagerEl, PREFIX_CURRENT_PAGE, pageNumbers._current + \"\");\n  setBooleanData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST,\n    pageNumbers._current === pageNumbers._total,\n  );\n  setBooleanData(pagerEl, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED, isFirstEnabled);\n  return setBooleanData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST_ENABLED,\n    isLastEnabled,\n  );\n};\n\nconst init = (\n  widget: Pager,\n  element: Element,\n  components: Components,\n  config: PagerConfig | undefined,\n  methods: ReturnType<typeof getMethods>,\n) => {\n  const logger = debug\n    ? new debug.Logger({\n        name: `Pager-${formatAsString(element)}`,\n        logAtCreation: config,\n      })\n    : null;\n\n  const pages = components._pages;\n  const toggles = components._toggles;\n  const switches = components._switches;\n  const nextSwitch = components._nextPrevSwitch._next;\n  const prevSwitch = components._nextPrevSwitch._prev;\n  const pageContainer = MH.parentOf(pages[0]);\n\n  let initialPage = toInt(config?.initialPage ?? 1);\n  const pagerStyle = config?.style ?? \"slider\";\n  const isCarousel = pagerStyle === \"carousel\";\n  const minPageSize = config?.pageSize ?? 300;\n  const enablePeek = config?.peek ?? false;\n  const isFullscreen = config?.fullscreen ?? false;\n  const isParallax = config?.parallax ?? false;\n  const isHorizontal = config?.horizontal ?? false;\n  const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n  const useGestures = config?.useGestures ?? true;\n  const alignGestureDirection = config?.alignGestureDirection ?? false;\n  const preventDefault = config?.preventDefault ?? true;\n\n  const scrollWatcher = ScrollWatcher.reuse();\n  const sizeWatcher = isCarousel\n    ? SizeWatcher.reuse({ resizeThreshold: 10 })\n    : null;\n  const gestureWatcher = useGestures ? GestureWatcher.reuse() : null;\n  const viewWatcher = isFullscreen\n    ? ViewWatcher.reuse({ rootMargin: \"0px\", threshold: 0.3 })\n    : null;\n\n  const recalculateCarouselProps = async (t?: Element, data?: SizeData) => {\n    if (data) {\n      // there's been a resize\n      const gap =\n        MH.parseFloat(await getComputedStyleProp(element, \"gap\")) || 0;\n      const containerSize =\n        data.content[isHorizontal ? MC.S_WIDTH : MC.S_HEIGHT];\n\n      const getNumVisiblePages = (addPeek = false) =>\n        (numVisiblePages = MH.max(\n          1, // at least 1\n          MH.min(\n            MH.floor(\n              (containerSize + gap - (addPeek ? 0.5 * minPageSize : 0)) /\n                (minPageSize + gap),\n            ),\n            numPages, // and at most total number\n          ),\n        ));\n\n      numVisiblePages = getNumVisiblePages();\n      if (enablePeek && numVisiblePages < numPages) {\n        // Not all pages fit now and we will add a \"peek\" from the pages on the\n        // edge.\n        // Re-calculate with peek added in case the resultant page size when we\n        // add the \"peek\" will make it smaller than the min.\n        numVisiblePages = getNumVisiblePages(true);\n      }\n\n      logger?.debug8(\"Pager resized\", { gap, containerSize, numVisiblePages });\n    } // otherwise just a page transition\n\n    const currPageNum = widget.getCurrentPageNum();\n    const prevPageNum = widget.getPreviousPageNum();\n    const numHidden = numPages - numVisiblePages;\n    const hasPeek = enablePeek && numVisiblePages < numPages;\n\n    // centre the current page as much as possible\n    let visibleStart = currPageNum - (numVisiblePages - 1) / 2;\n    let isAtEdge = false;\n\n    if (visibleStart >= numHidden + 1) {\n      visibleStart = numHidden + 1;\n      isAtEdge = true;\n    } else if (visibleStart <= 1) {\n      visibleStart = 1;\n      isAtEdge = true;\n    }\n\n    let numTranslated = 0;\n    if (hasPeek) {\n      numTranslated = MH.max(0, visibleStart - 1 - (isAtEdge ? 0.5 : 0.25));\n    } else {\n      numTranslated =\n        (prevPageNum > currPageNum ? MH.floor : MH.ceil)(visibleStart) - 1;\n    }\n\n    const numVisibleGaps = !hasPeek\n      ? numVisiblePages - 1\n      : isAtEdge || numVisiblePages % 2 === 0\n        ? numVisiblePages\n        : numVisiblePages + 1;\n\n    const fractionalNumVisiblePages = hasPeek\n      ? numVisiblePages + 0.5\n      : numVisiblePages;\n\n    logger?.debug8(\"Carousel calculations\", {\n      currPageNum,\n      prevPageNum,\n      visibleStart,\n      isAtEdge,\n      numVisiblePages,\n      numVisibleGaps,\n      numTranslated,\n    });\n\n    setData(element, PREFIX_VISIBLE_PAGES, fractionalNumVisiblePages + \"\");\n    setStyleProp(element, VAR_VISIBLE_PAGES, fractionalNumVisiblePages + \"\");\n    setStyleProp(element, VAR_VISIBLE_GAPS, numVisibleGaps + \"\");\n    setStyleProp(element, VAR_TRANSLATED_PAGES, numTranslated + \"\");\n    setStyleProp(element, VAR_TRANSLATED_GAPS, MH.floor(numTranslated) + \"\");\n  };\n\n  const getGestureOptions = (\n    directions: Direction | Direction[] | undefined,\n  ): OnGestureOptions => {\n    return {\n      devices: MH.isBoolean(useGestures) // i.e. true; if it's false, then gestureWatcher is null\n        ? undefined // all devices\n        : useGestures,\n      intents: [MC.S_DRAG, MC.S_SCROLL],\n      directions,\n      deltaThreshold: 25,\n      preventDefault,\n    };\n  };\n\n  const scrollToPager = async () => {\n    scrollWatcher.scrollTo(element, {\n      scrollable: await fetchClosestScrollable(element),\n    });\n  };\n\n  const transitionOnGesture = (target: EventTarget, data: GestureData) => {\n    const swapDirection = data.intent === MC.S_DRAG;\n\n    if (MH.includes([MC.S_LEFT, MC.S_UP], data.direction)) {\n      (swapDirection ? methods._nextPage : methods._prevPage)(data);\n    } else {\n      (swapDirection ? methods._prevPage : methods._nextPage)(data);\n    }\n  };\n\n  const addWatchers = () => {\n    gestureWatcher?.onGesture(\n      element,\n      transitionOnGesture,\n      getGestureOptions(\n        alignGestureDirection\n          ? isHorizontal\n            ? [MC.S_LEFT, MC.S_RIGHT]\n            : [MC.S_UP, MC.S_DOWN]\n          : undefined, // all directions\n      ),\n    );\n\n    sizeWatcher?.onResize(recalculateCarouselProps, { target: element });\n    viewWatcher?.onView(element, scrollToPager, { views: \"at\" });\n  };\n\n  const removeWatchers = () => {\n    gestureWatcher?.offGesture(element, transitionOnGesture);\n    sizeWatcher?.offResize(recalculateCarouselProps, element);\n    viewWatcher?.offView(element, scrollToPager);\n  };\n\n  const getPageNumForEvent = (event: Event) => {\n    const target = MH.currentTargetOf(event);\n    return MH.isElement(target)\n      ? toInt(getData(target, PREFIX_PAGE_NUMBER))\n      : 0;\n  };\n\n  const toggleClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._togglePage(pageNum);\n  };\n\n  const switchClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._goToPage(pageNum);\n  };\n\n  const nextSwitchClickListener = () => methods._nextPage();\n  const prevSwitchClickListener = () => methods._prevPage();\n\n  // SETUP ------------------------------\n\n  widget.onDisable(removeWatchers);\n  widget.onEnable(addWatchers);\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n    delDataNow(element, MC.PREFIX_ORIENTATION);\n    delDataNow(element, PREFIX_STYLE);\n    delDataNow(element, PREFIX_IS_FULLSCREEN);\n    delDataNow(element, PREFIX_USE_PARALLAX);\n    delDataNow(element, PREFIX_CURRENT_PAGE);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST_ENABLED);\n    delDataNow(element, PREFIX_TOTAL_PAGES);\n    delDataNow(element, PREFIX_VISIBLE_PAGES);\n    delStylePropNow(element, VAR_CURRENT_PAGE);\n    delStylePropNow(element, VAR_TOTAL_PAGES);\n    delStylePropNow(element, VAR_VISIBLE_PAGES);\n    delStylePropNow(element, VAR_VISIBLE_GAPS);\n    delStylePropNow(element, VAR_TRANSLATED_PAGES);\n    delStylePropNow(element, VAR_TRANSLATED_GAPS);\n\n    for (let idx = 0; idx < MH.lengthOf(pages); idx++) {\n      removeClassesNow(pages[idx], PREFIX_PAGE);\n\n      for (const [el, listener] of [\n        [pages[idx], null],\n        [toggles[idx], toggleClickListener],\n        [switches[idx], switchClickListener],\n      ] as const) {\n        if (el) {\n          delDataNow(el, PREFIX_PAGE_STATE);\n          delDataNow(el, PREFIX_PAGE_NUMBER);\n          delStylePropNow(el, VAR_PAGE_NUMBER);\n          if (listener) {\n            removeEventListenerFrom(el, MC.S_CLICK, listener);\n          }\n        }\n      }\n\n      MH.delAttr(pages[idx], S_ARIA_CURRENT);\n    }\n\n    if (nextSwitch) {\n      removeEventListenerFrom(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n    }\n\n    if (prevSwitch) {\n      removeEventListenerFrom(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n    }\n\n    removeClassesNow(element, PREFIX_ROOT);\n    if (pageContainer) {\n      removeClassesNow(pageContainer, PREFIX_PAGE_CONTAINER);\n    }\n  });\n\n  if (isCarousel) {\n    widget.onTransition(() => recalculateCarouselProps());\n  }\n\n  addWatchers();\n  addClasses(element, PREFIX_ROOT);\n  if (pageContainer) {\n    addClasses(pageContainer, PREFIX_PAGE_CONTAINER);\n  }\n\n  const numPages = MH.lengthOf(pages);\n  let numVisiblePages = numPages;\n\n  setData(element, MC.PREFIX_ORIENTATION, orientation);\n  setData(element, PREFIX_STYLE, pagerStyle);\n  setBooleanData(element, PREFIX_IS_FULLSCREEN, isFullscreen);\n  setBooleanData(element, PREFIX_USE_PARALLAX, isParallax);\n  setData(element, PREFIX_TOTAL_PAGES, numPages + \"\");\n  setStyleProp(element, VAR_TOTAL_PAGES, (numPages || 1) + \"\");\n\n  for (const page of pages) {\n    disableInitialTransition(page);\n    addClasses(page, PREFIX_PAGE);\n  }\n\n  for (let idx = 0; idx < numPages; idx++) {\n    setPageNumber(components, idx + 1);\n    setPageState(components, idx + 1, S_NEXT);\n\n    for (const [el, listener] of [\n      [toggles[idx], toggleClickListener],\n      [switches[idx], switchClickListener],\n    ] as const) {\n      if (el) {\n        addEventListenerTo(el, MC.S_CLICK, listener);\n      }\n    }\n  }\n\n  if (nextSwitch) {\n    addEventListenerTo(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n  }\n\n  if (prevSwitch) {\n    addEventListenerTo(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n  }\n\n  if (initialPage < 1 || initialPage > numPages) {\n    initialPage = 1;\n  }\n  methods._goToPage(initialPage);\n};\n\nconst getMethods = (\n  widget: Pager,\n  components: Components,\n  element: Element,\n  config: PagerConfig | undefined,\n) => {\n  const pages = components._pages;\n  const scrollWatcher = ScrollWatcher.reuse();\n  const isFullscreen = config?.fullscreen;\n  const disabledPages: Record<number, boolean> = {};\n  const callbacks = MH.newSet<WidgetCallback>();\n\n  const fetchScrollOptions = async (): Promise<ScrollOptions> => ({\n    scrollable: await fetchClosestScrollable(element),\n    // default amount is already 100%\n    asFractionOf: \"visible\",\n    weCanInterrupt: true,\n  });\n\n  let currPageNum = -1;\n  let lastPageNum = -1;\n  let lastTransition = 0;\n\n  const canTransition = (gestureData?: GestureData) => {\n    if (widget.isDisabled()) {\n      return false;\n    }\n\n    if (gestureData?.device !== MC.S_WHEEL) {\n      return true;\n    }\n\n    const timeNow = MH.timeNow();\n    if (timeNow - lastTransition > MIN_TIME_BETWEEN_WHEEL) {\n      lastTransition = timeNow;\n      return true;\n    }\n\n    return false;\n  };\n\n  const goToPage = async (pageNum: number, gestureData?: GestureData) => {\n    pageNum = toInt(pageNum, -1);\n    if (pageNum === currPageNum || !canTransition(gestureData)) {\n      return;\n    }\n\n    const numPages = MH.lengthOf(pages);\n\n    if (\n      (currPageNum === 1 && pageNum === 0) ||\n      (currPageNum === numPages && pageNum === numPages + 1)\n    ) {\n      // next/prev page beyond last/first\n      if (isFullscreen) {\n        scrollWatcher.scroll(\n          pageNum\n            ? gestureData?.direction === MC.S_RIGHT\n              ? MC.S_RIGHT\n              : MC.S_DOWN\n            : gestureData?.direction === MC.S_LEFT\n              ? MC.S_LEFT\n              : MC.S_UP,\n          await fetchScrollOptions(),\n        ); // no need to await\n      }\n\n      return;\n    }\n\n    if (isPageDisabled(pageNum) || pageNum < 1 || pageNum > numPages) {\n      // invalid or disabled\n      return;\n    }\n\n    lastPageNum = currPageNum > 0 ? currPageNum : pageNum;\n    currPageNum = pageNum;\n\n    for (const callback of callbacks) {\n      await callback.invoke(widget);\n    }\n\n    MH.delAttr(pages[lastPageNum - 1], S_ARIA_CURRENT);\n    for (\n      let n = lastPageNum;\n      n !== currPageNum;\n      currPageNum < lastPageNum ? n-- : n++\n    ) {\n      if (!isPageDisabled(n)) {\n        setPageState(\n          components,\n          n,\n          currPageNum < lastPageNum ? S_NEXT : S_COVERED,\n        );\n      }\n    }\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: numPages },\n      isPageDisabled,\n    );\n    MH.setAttr(pages[currPageNum - 1], S_ARIA_CURRENT);\n    await setPageState(components, currPageNum, S_CURRENT);\n  };\n\n  const nextPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum + 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage++;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const prevPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum - 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage--;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const isPageDisabled = (pageNum: number) => disabledPages[pageNum] === true;\n\n  const disablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || pageNum < 1 || pageNum > MH.lengthOf(pages)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = true;\n\n    if (pageNum === currPageNum) {\n      await prevPage();\n\n      if (pageNum === currPageNum) {\n        // was the first enabled one\n        await nextPage();\n\n        if (pageNum === currPageNum) {\n          // was the only enabled one\n          disabledPages[pageNum] = false;\n          return;\n        }\n      }\n    }\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: MH.lengthOf(pages) },\n      isPageDisabled,\n    );\n    await setPageState(components, pageNum, MC.S_DISABLED);\n  };\n\n  const enablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || !isPageDisabled(pageNum)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = false;\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: MH.lengthOf(pages) },\n      isPageDisabled,\n    );\n    await setPageState(\n      components,\n      pageNum,\n      pageNum < currPageNum ? S_COVERED : S_NEXT,\n    );\n  };\n\n  const togglePage = (pageNum: number) =>\n    isPageDisabled(pageNum) ? enablePage(pageNum) : disablePage(pageNum);\n\n  const onTransition = (handler: WidgetHandler) =>\n    callbacks.add(wrapCallback(handler));\n\n  return {\n    _nextPage: nextPage,\n    _prevPage: prevPage,\n    _goToPage: goToPage,\n    _disablePage: disablePage,\n    _enablePage: enablePage,\n    _togglePage: togglePage,\n    _isPageDisabled: isPageDisabled,\n    _getCurrentPage: () => pages[currPageNum - 1],\n    _getPreviousPage: () => pages[lastPageNum - 1],\n    _getCurrentPageNum: () => (MH.lengthOf(pages) > 0 ? currPageNum : 0),\n    _getPreviousPageNum: () => (MH.lengthOf(pages) > 0 ? lastPageNum : 0),\n    _onTransition: onTransition,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling pagers\n * {@link NextPage} and {@link PrevPage} advance or reverse the {@link Pager}\n * widget setup for the given element.\n *\n * {@link GoToPage} sets the {@link Pager} to the given page or toggles to the\n * last saved one.\n *\n * {@link EnablePage} and {@link DisablePage} enable or disable the given page\n * of the {@link Pager} widget setup for the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { toInt } from \"@lisn/utils/math\";\n\nimport { Pager } from \"@lisn/widgets/pager\";\nimport { fetchUniqueWidget } from \"@lisn/widgets/widget\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Advances or reverses the {@link Pager} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"next-page\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@next-page +target=#myNextButton\"></div>\n * <button id=\"myNextButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class NextPage implements Action {\n  /**\n   * Advances the pager by one page.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Reverses the pager by one page.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Undoes the last action: reverses the pager if {@link do} was last called\n   * or advances it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"next-page\", (element) => new NextPage(element));\n  }\n\n  constructor(element: Element) {\n    let toggleState = false;\n    const { _nextPage, _prevPage } = getMethods(element);\n\n    this.do = () => {\n      toggleState = true;\n      return _nextPage();\n    };\n\n    this.undo = () => {\n      toggleState = false;\n      return _prevPage();\n    };\n\n    this[MC.S_TOGGLE] = () => {\n      const method = toggleState ? _prevPage : _nextPage;\n      toggleState = !toggleState;\n      return method();\n    };\n  }\n}\n\n/**\n * Reverses or advances the {@link Pager} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"prev-page\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@prev-page +target=#myPrevButton\"></div>\n * <button id=\"myPrevButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class PrevPage implements Action {\n  /**\n   * Reverses the pager by one page.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Advances the pager by one page.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Undoes the last action: advances the pager if {@link do} was last called\n   * or reverses it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"prev-page\", (element) => new PrevPage(element));\n  }\n\n  constructor(element: Element) {\n    let toggleState = false;\n    const { _nextPage, _prevPage } = getMethods(element);\n\n    this.do = () => {\n      toggleState = true;\n      return _prevPage();\n    };\n\n    this.undo = () => {\n      toggleState = false;\n      return _nextPage();\n    };\n\n    this[MC.S_TOGGLE] = () => {\n      const method = toggleState ? _nextPage : _prevPage;\n      toggleState = !toggleState;\n      return method();\n    };\n  }\n}\n\n/**\n * Goes to a given page, or to the last one beforehand, of the {@link Pager}\n * widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"go-to-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@go-to-page:2 +target=#myGoToButton\"></div>\n * <button id=\"myGoToButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class GoToPage implements Action {\n  /**\n   * Goes to the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Goes to the last saved page number before the action was {@link do}ne. If\n   * the action had never been done, does nothing.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Goes to the page number given to the constructor, or if already at this\n   * number, goes to the last saved page if any. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"go-to-page\",\n      (element, args) => new GoToPage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page is required\");\n    }\n\n    const { _goToPage } = getMethods(element);\n\n    this.do = () => _goToPage(pageNum);\n    this.undo = () => _goToPage(-1);\n    this[MC.S_TOGGLE] = () => _goToPage(pageNum, -1);\n  }\n}\n\n/**\n * Enables or disables the given page of the {@link Pager} widget setup for the\n * given element.\n *\n * **IMPORTANT:** When constructed, it disables the given page as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"enable-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@enable-page:2 +target=#myEnableButton\"></div>\n * <button id=\"myEnableButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class EnablePage implements Action {\n  /**\n   * Enables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Disables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Enables the page number given to the constructor, if it is disabled,\n   * otherwise disables it. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"enable-page\",\n      (element, args) => new EnablePage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page number is required\");\n    }\n\n    const { _enablePage, _disablePage, _togglePage } = getMethods(element);\n    _disablePage(pageNum); // initial state\n\n    this.do = () => _enablePage(pageNum);\n    this.undo = () => _disablePage(pageNum);\n    this[MC.S_TOGGLE] = () => _togglePage(pageNum);\n  }\n}\n\n/**\n * Disables or enables the given page of the {@link Pager} widget setup for the\n * given element.\n *\n * **IMPORTANT:** When constructed, it enables the given page as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"disable-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"myDisableButton\"></button>\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@disable-page:2 +target=#myDisableButton\"></div>\n * ```\n *\n * @category Controlling pagers\n */\nexport class DisablePage implements Action {\n  /**\n   * Disables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Enables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Disables the page number given to the constructor, if it is enabled,\n   * otherwise enables it. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"disable-page\",\n      (element, args) => new DisablePage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page number is required\");\n    }\n\n    const { _enablePage, _disablePage, _togglePage } = getMethods(element);\n    _enablePage(pageNum); // initial state\n\n    this.do = () => _disablePage(pageNum);\n    this.undo = () => _enablePage(pageNum);\n    this[MC.S_TOGGLE] = () => _togglePage(pageNum);\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  let lastPageNum: number | null | undefined = null;\n\n  const nextPage = (widget: Pager | null) => widget?.nextPage();\n  const prevPage = (widget: Pager | null) => widget?.prevPage();\n\n  const goToPage = async (\n    widget: Pager | null,\n    pageNum: number,\n    altPageNum: number | null,\n  ) => {\n    const currentNum = widget?.getCurrentPageNum();\n    let targetNum: number | null | undefined =\n      currentNum === pageNum ? altPageNum : pageNum;\n    if (targetNum === -1) {\n      targetNum = lastPageNum;\n    }\n\n    if (targetNum) {\n      if (pageNum !== -1) {\n        // save the current number unless this is \"undo\"\n        lastPageNum = currentNum;\n      }\n\n      await widget?.goToPage(targetNum);\n    }\n  };\n\n  const enablePage = (widget: Pager | null, pageNum: number) =>\n    widget?.enablePage(pageNum);\n  const disablePage = (widget: Pager | null, pageNum: number) =>\n    widget?.disablePage(pageNum);\n  const togglePage = (widget: Pager | null, pageNum: number) =>\n    widget?.togglePage(pageNum);\n\n  const widgetPromise = fetchUniqueWidget(\"pager\", element, Pager);\n\n  return {\n    _nextPage: () => widgetPromise.then(nextPage),\n    _prevPage: () => widgetPromise.then(prevPage),\n\n    _goToPage: (pageNum: number, altPageNum: number | null = null) =>\n      widgetPromise.then((w) => goToPage(w, pageNum, altPageNum)),\n\n    _enablePage: (pageNum: number) =>\n      widgetPromise.then((w) => enablePage(w, pageNum)),\n    _disablePage: (pageNum: number) =>\n      widgetPromise.then((w) => disablePage(w, pageNum)),\n    _togglePage: (pageNum: number) =>\n      widgetPromise.then((w) => togglePage(w, pageNum)),\n  };\n};\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nexport * from \"@lisn/actions/add-class\";\nexport * from \"@lisn/actions/animate\";\nexport * from \"@lisn/actions/animate-play\";\nexport * from \"@lisn/actions/display\";\nexport * from \"@lisn/actions/trigger\";\nexport * from \"@lisn/actions/scroll-to\";\nexport * from \"@lisn/actions/set-attribute\";\nexport * from \"@lisn/actions/show\";\nexport * from \"@lisn/actions/open\";\nexport * from \"@lisn/actions/pager\";\n\nexport * from \"@lisn/actions/action\";\n","/**\n * @module Triggers\n *\n * @categoryDescription Input\n * {@link CheckTrigger} allows you to run actions when the user checks a target\n * checkbox input element, and undo those actions when they uncheck the checkbox.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link CheckTrigger} allows you to run actions when the user checks a target\n * checkbox input element, and undo those actions when they uncheck the checkbox.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *\n * @example\n * Add classes `active` and `checked` when the user checks the checkbox,\n * remove them when unchecked.\n *\n * ```html\n * <input type=\"checkbox\" data-lisn-on-check=\"@add-class=active,checked\"/>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <input type=\"checkbox\" class=\"lisn-on-check--@add-class=active,checked\"/>\n * ```\n *\n * @example\n * Play the animations on the element each time the user checks the next\n * element with class `checkbox` (do nothing when it's unchecked).\n *\n * ```html\n * <div data-lisn-on-check=\"@animate +one-way +target=next.checkbox\"></div>\n * <input type=\"checkbox\" class=\"checkbox\"/>\n * ```\n *\n * @example\n * Add class `used` the first time the user checks the next element with class\n * `checkbox`, and play or reverse the animations 200ms after each time the\n * user toggles the reference checkbox.\n *\n * ```html\n * <div data-lisn-on-check=\"@add-class=used +once ;\n *                          @animate +delay=200 +target=next.checkbox\"\n * ></div>\n * <input type=\"checkbox\" class=\"checkbox\"/>\n * ```\n *\n * @example\n * When the user checks the next element with class `checkbox` then add classes `c1`\n * and `c2` to the element (that the trigger is defined on) and enable trigger\n * `my-trigger` defined on this same element; undo all of that when the user unchecks\n * the reference checkbox.\n *\n * ```html\n * <div data-lisn-on-check=\"@add-class=c1,c2 @enable=my-trigger +target=next.checkbox\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <input type=\"checkbox\" class=\"checkbox\"/>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-check=\"@add-class=c1,c2 @enable=my-trigger +target=next-checkbox\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <input type=\"checkbox\" data-lisn-ref=\"checkbox\"/>\n * ```\n *\n * @category Input\n */\nexport class CheckTrigger extends Trigger {\n  readonly getConfig: () => CheckTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"check\",\n      (element, args, actions, config) =>\n        new CheckTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: CheckTriggerConfig = {},\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const target = MH.targetOf(config) || element;\n\n    if (!MH.isInstanceOf(target, HTMLInputElement)) {\n      return;\n    }\n\n    const onToggle = () => (target.checked ? this.run() : this.reverse());\n\n    addEventListenerTo(target, \"change\", onToggle);\n\n    this.onDestroy(() => {\n      removeEventListenerFrom(target, \"change\", onToggle);\n    });\n  }\n}\n\n/**\n * @category Input\n * @interface\n */\nexport type CheckTriggerConfig = TriggerConfig & {\n  /**\n   * The target to use for the hover action.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  target?: Element;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<CheckTriggerConfig> = (\n  element,\n) => {\n  return {\n    target: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Pointer\n * {@link ClickTrigger} allows you to run actions when a user clicks a target\n * element (first time and every other time, i.e. odd number of click), and undo\n * those actions when a user clicks the target element again (or every even\n * number of clicks). It always acts as a toggle.\n *\n * {@link PressTrigger} allows you to run actions when the user presses and\n * holds a pointing device (or their finger) on a target element, and undo those\n * actions when they release their pointing device or lift their finger off.\n *\n * {@link HoverTrigger} allows you to run actions when the user hovers overs a\n * target element, and undo those actions when their pointing device moves off\n * the target. On touch devices it acts just like {@link PressTrigger}.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport { validateBoolean } from \"@lisn/utils/validation\";\n\nimport {\n  PointerWatcher,\n  OnPointerHandler,\n} from \"@lisn/watchers/pointer-watcher\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link ClickTrigger} allows you to run actions when a user clicks a target\n * element (first time and every other time, i.e. odd number of click), and\n * undo them when a user clicks the target element again (or every even number\n * of clicks). It always acts as a toggle.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: A boolean.\n *   - `prevent-select`: A boolean.\n *\n * @example\n * Add classes `active` and `toggled-on` when the user clicks the element\n * (first time and every other time, i.e. odd number of click), remove them\n * when clicked again (or even number of click);\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=active,toggled-on\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-click--@add-class=active,toggled-on\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * clicks it.\n *\n * ```html\n * <div data-lisn-on-click=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `visited` the first time the user clicks the element, and play or\n * reverse the animations on the element 1000ms after each time the user clicks\n * it.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=visited +once ;\n *                          @animate +delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * When the user clicks the next element with class `box` then add classes `c1`\n * and `c2` to the element (that the trigger is defined on) and enable trigger\n * `my-trigger` defined on this same element; undo all of that on even number\n * of clicks on the reference box element.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class ClickTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_CLICK,\n      (element, args, actions, config) =>\n        new ClickTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: PointerTriggerConfig = {},\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_CLICK);\n  }\n}\n\n/**\n * {@link PressTrigger} allows you to run actions when the user presses and\n * holds a pointing device (or their finger) on a target element, and undo\n * those actions when they release their pointing device or lift their finger\n * off.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: boolean\n *   - `prevent-select`: boolean\n *\n * @example\n * Add classes `active` and `pressed` when the user presses and holds (with\n * mouse, finger or any pointer) the element, remove them when they release\n * the mouse.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=active,pressed\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-press--@add-class=active,pressed\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * presses on the element it.\n *\n * ```html\n * <div data-lisn-on-press=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `pressed` the first time the user presses on the element, and\n * play the animations on the element while the user is pressing on the element\n * with a delay of 100ms, reverse the animations as soon as the user releases\n * the mouse.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=pressed +once ;\n *                          @animate +do-delay=100\"\n * ></div>\n * ```\n *\n * @example\n * When the user presses and holds the next element with class `box` then add\n * classes `c1` and `c2` to the element (that the trigger is defined on) and\n * enable trigger `my-trigger` defined on this same element; undo all of that\n * when they release the mouse (or lift their finger/pointer device) from the\n * reference box element.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class PressTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_PRESS,\n      (element, args, actions, config) =>\n        new PressTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: PointerTriggerConfig = {},\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_PRESS);\n  }\n}\n\n/**\n * {@link HoverTrigger} allows you to run actions when the user hovers overs\n * a target element, and undo those actions when their pointing device moves\n * off the target. On touch devices it acts just like {@link PressTrigger}.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: boolean\n *   - `prevent-select`: boolean\n *\n * @example\n * Add classes `active` and `hovered` when the user hovers over the element,\n * remove them otherwise.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=active,hovered\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-press--@add-class=active,hovered\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * hovers over the element it.\n *\n * ```html\n * <div data-lisn-on-hover=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `hovered` the first time the user hovers over the element, and\n * play the animations on the element while the user is hovering over the\n * element with a delay of 100ms, reverse the animations as soon as the user\n * mouse leaves the element.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=hovered +once ;\n *                          @animate +do-delay=100\"\n * ></div>\n * ```\n *\n * @example\n * When the user hovers over the next element with class `box` then add classes\n * `c1` and `c2` to the element (that the trigger is defined on) and enable\n * trigger `my-trigger` defined on this same element; undo all of that when\n * their pointing device (or finger) moves off the reference element.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class HoverTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_HOVER,\n      (element, args, actions, config) =>\n        new HoverTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: PointerTriggerConfig = {},\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_HOVER);\n  }\n}\n\n/**\n * @category Pointer\n * @interface\n */\nexport type PointerTriggerConfig = TriggerConfig & {\n  /**\n   * The target to use for the hover action.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  target?: Element;\n\n  /**\n   * See {@link Watchers/PointerWatcher.OnPointerOptions | OnPointerOptions}.\n   *\n   * @defaultValue {@link PointerWatcher} default, false\n   */\n  preventDefault?: boolean;\n\n  /**\n   * See {@link Watchers/PointerWatcher.OnPointerOptions | OnPointerOptions}.\n   *\n   * @defaultValue {@link PointerWatcher} default, true\n   */\n  preventSelect?: boolean;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<PointerTriggerConfig> = (\n  element,\n) => {\n  return {\n    target: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    preventDefault: validateBoolean,\n    preventSelect: validateBoolean,\n  };\n};\n\nconst setupWatcher = (\n  widget: ClickTrigger | HoverTrigger | PressTrigger,\n  element: Element,\n  actions: Action[],\n  config: PointerTriggerConfig,\n  action: \"click\" | \"hover\" | \"press\",\n) => {\n  if (!MH.lengthOf(actions)) {\n    return;\n  }\n\n  const target = MH.targetOf(config) || element;\n\n  // For clicks use the trigger's own toggle function so that it remembers ITS\n  // state rather than the odd/even clicks. Otherwise if the trigger is\n  // disabled, then clicking will \"swap\" the state.\n  let startHandler: OnPointerHandler;\n  let endHandler: OnPointerHandler;\n  if (action === MC.S_CLICK) {\n    startHandler = endHandler = widget[MC.S_TOGGLE];\n  } else {\n    startHandler = widget.run;\n    endHandler = widget.reverse;\n  }\n\n  PointerWatcher.reuse().onPointer(\n    target,\n    startHandler,\n    endHandler,\n    MH.merge(\n      {\n        actions: action,\n      },\n      omitKeys(config, { target: null }),\n    ),\n  );\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Layout\n * {@link LayoutTrigger} allows you to run actions when the viewport or a\n * target element's width or aspect ratio matches a given specification, and\n * undo those actions when the target's width or aspect ratio no longer\n * matches.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport {\n  isValidDeviceList,\n  isValidAspectRatioList,\n  getOtherDevices,\n  getOtherAspectRatios,\n} from \"@lisn/utils/layout\";\nimport { validateStringRequired } from \"@lisn/utils/validation\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport { LayoutWatcher } from \"@lisn/watchers/layout-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link LayoutTrigger} allows you to run actions when the viewport or a\n * target element's width or aspect ratio matches a given specification, and\n * undo those actions when the target's width or aspect ratio no longer\n * matches.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (required): A single {@link DeviceSpec} or\n *   {@link AspectRatioSpec}. In this case you can use a dash (\"-\") instead of\n *   space if needed (for example if using CSS classes instead of data\n *   attributes), e.g. \"min-tablet\" instead of \"min tablet\".\n *\n * - Additional trigger options:\n *   - `root`: A string element specification. See\n *     {@link Utils.getReferenceElement | getReferenceElement}.\n *\n * @example\n * Show the element when the window width matches \"tablet\" breakpoint, hide\n * otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"tablet @show\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-layout--tablet@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the window width matches \"tablet\" breakpoint,\n * hide otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"tablet @show +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `tablet` when the window width is at least \"tablet\", hide\n * otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"min tablet @add-class=tablet\"></div>\n * ```\n *\n * @example\n * Add class `mobile` when the window width is \"mobile\" or mobile-wide, add\n * class `tablet`, when it's \"tablet\" and so on; undo that otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"max mobile-wide @add-class=mobile ;\n *                           tablet @add-class=tablet ;\n *                           desktop @add-class=desktop\"\n * ></div>\n * ```\n *\n * @example\n * Show the element when window width is at least \"mobile-wide\" and at most\n * \"tablet\", hide otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"mobile-wide to tablet @show\"></div>\n * ```\n *\n * @example\n * When the aspect ratio of the next element with class `box` is square, then\n * add classes `c1` and `c2` to the element (that the trigger is defined on) and\n * enable trigger `my-trigger` defined on this same element; undo all of that\n * otherwise (on other aspect ratios of the reference root):\n *\n * ```html\n * <div data-lisn-on-layout=\"square @add-class=c1,c2 @enable=my-trigger +root=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-layout=\"square @add-class=c1,c2 @enable=my-trigger +root=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n *\n * @category Layout\n */\nexport class LayoutTrigger extends Trigger {\n  readonly getConfig: () => LayoutTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"layout\",\n      (element, args, actions, config) => {\n        return new LayoutTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            layout: validateStringRequired(\n              \"layout\",\n              MH.strReplace(\n                MH.strReplace(args[0] || \"\", /(min|max)-/g, \"$1 \"),\n                /-to-/g,\n                \" to \",\n              ),\n              (value) =>\n                isValidDeviceList(value) || isValidAspectRatioList(value),\n            ),\n          }),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: LayoutTriggerConfig,\n  ) {\n    const layout = config?.layout || \"\";\n    if (!layout) {\n      throw MH.usageError(\"'layout' is required\");\n    }\n\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    let devices: DeviceSpec | Device[] = [];\n    let aspectRatios: AspectRatioSpec | AspectRatio[] = [];\n    let otherDevices: Device[] = [];\n    let otherAspectRatios: AspectRatio[] = [];\n\n    if (isValidDeviceList(layout)) {\n      devices = layout;\n      otherDevices = getOtherDevices(layout);\n    } else {\n      aspectRatios = layout;\n      otherAspectRatios = getOtherAspectRatios(layout);\n    }\n\n    const root = config.root;\n    const watcher = LayoutWatcher.reuse({ root });\n\n    watcher.onLayout(this.run, { devices, aspectRatios });\n\n    if (MH.lengthOf(otherDevices) || MH.lengthOf(otherAspectRatios)) {\n      watcher.onLayout(this.reverse, {\n        devices: otherDevices,\n        aspectRatios: otherAspectRatios,\n      });\n    }\n  }\n}\n\n/**\n * @category Layout\n * @interface\n */\nexport type LayoutTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link DeviceSpec} or {@link AspectRatioSpec} to use. Required.\n   * See {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for\n   * accepted formats.\n   *\n   * Actions will be \"done\" when the layout of the root matches the given spec\n   * and \"undone\" otherwise.\n   */\n  layout: DeviceSpec | Device[] | AspectRatioSpec | AspectRatio[];\n\n  /**\n   * The root to use for the {@link LayoutWatcher}.\n   * See {@link Watchers/LayoutWatcher.LayoutWatcherConfig | LayoutWatcherConfig}\n   *\n   * @defaultValue {@link LayoutWatcher} default, the viewport\n   */\n  root?: HTMLElement | null;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<LayoutTriggerConfig, \"layout\">\n> = (element) => {\n  return {\n    root: async (key, value) => {\n      const root = MH.isLiteralString(value)\n        ? await waitForReferenceElement(value, element)\n        : undefined;\n      if (root && !MH.isHTMLElement(root)) {\n        throw MH.usageError(\"root must be HTMLElement\");\n      }\n      return root;\n    },\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Load\n * {@link LoadTrigger} allows you to run actions once when the page is loaded.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForPageReady } from \"@lisn/utils/dom-events\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\n/**\n * {@link LoadTrigger} allows you to run actions one when the page is loaded.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *\n * @example\n * Scroll to the given element when the page is loaded:\n *\n * ```html\n * <div data-lisn-on-load=\":scroll-to\"></div>\n * ```\n *\n * @example\n * Scroll to 100px above the given element 500ms after the page is loaded:\n *\n * ```html\n * <div data-lisn-on-load=\"@scroll-to=0,-100 +delay=500\"></div>\n * ```\n *\n * @example\n * Scroll to 100px above the given element 500ms after the page is loaded, and\n * play animations defined on it 500ms later (1000ms after it's loaded):\n *\n * ```html\n * <div data-lisn-on-load=\"@scroll-to=0,-100 +delay=500 ;\n *                         @animate +delay=1000\"\n * ></div>\n * ```\n *\n * @category Load\n */\nexport class LoadTrigger extends Trigger {\n  readonly getConfig: () => TriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"load\",\n      (element, args, actions, config) =>\n        new LoadTrigger(element, actions, config),\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config: TriggerConfig) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    waitForPageReady().then(this.run);\n  }\n}\n","/**\n * @module Triggers\n *\n * @categoryDescription Scroll\n * {@link ScrollTrigger} allows you to run actions when the user scrolls a\n * target element (or the main scrollable element) in a given direction, and\n * undo those actions when they scroll in the opposite direction.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  XYDirection,\n  CommaSeparatedStr,\n  ScrollTarget,\n} from \"@lisn/globals/types\";\n\nimport {\n  getOppositeXYDirections,\n  isValidXYDirection,\n} from \"@lisn/utils/directions\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { validateStrList, validateNumber } from \"@lisn/utils/validation\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link ScrollTrigger} allows you to run actions when the user scrolls a\n * target element (or the main scrollable element) in a given direction, and\n * undo those actions when they scroll in the opposite direction.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (optional): One or more (comma-separated) scroll directions.\n *   Note that if you do not specify any directions, then the trigger will just\n *   run once, on any scroll.\n * - Additional trigger options:\n *   - `scrollable`: A string element specification.\n *      See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `threshold`: A number.\n *\n * @example\n * Show the element when the user scrolls the page up, hide when scrolling\n * down. User scrolling left or right not trigger the action. See\n * {@link getOppositeXYDirections}:\n *\n * ```html\n * <div data-lisn-on-scroll=\"up @show\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-scroll--up@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the first time the user scrolls the page up:\n *\n * ```html\n * <div data-lisn-on-scroll=\"up @show +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `scrolled` the first time the user scrolls the page in any\n * direction (note that the `once` option is implied here), and show the\n * element 1000ms after each time the user scrolls the page up, hide it as soon\n * as they scroll down:\n *\n * ```html\n * <div data-lisn-on-scroll=\"@add-class=scrolled ;\n *                           up @show +do-delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * When the user scrolls up or down the closest ancestor with class `section`,\n * then add classes `c1` and `c2` and enable trigger `my-trigger` defined on\n * this same element; undo all of that when scrolling right or left:\n *\n * ```html\n * <div class=\"section\">\n *   <div data-lisn-on-scroll=\"up,down @add-class=c1,c2 @enable=my-trigger +scrollable=this.section\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n *   ></div>\n *</div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-ref=\"section\">\n *   <div data-lisn-on-scroll=\"up,down @add-class=c1,c2 @enable=my-trigger +scrollable=this-section\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n *   ></div>\n *</div>\n * ```\n *\n * @category Scroll\n */\nexport class ScrollTrigger extends Trigger {\n  readonly getConfig: () => ScrollTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_SCROLL,\n      (element, args, actions, config) => {\n        return new ScrollTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            directions: validateStrList(\"directions\", args, isValidXYDirection),\n          }),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config?: ScrollTriggerConfig,\n  ) {\n    config = config ?? {};\n\n    let directions = config.directions;\n    if (!directions) {\n      config.once = true;\n      directions = [MC.S_UP, MC.S_DOWN, MC.S_LEFT, MC.S_RIGHT];\n    }\n\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const watcher = ScrollWatcher.reuse();\n    const scrollable = config.scrollable;\n    const threshold = config.threshold;\n\n    const oppositeDirections = directions\n      ? getOppositeXYDirections(directions)\n      : [];\n\n    watcher.onScroll(this.run, {\n      directions,\n      scrollable,\n      threshold,\n    });\n\n    if (MH.lengthOf(oppositeDirections)) {\n      watcher.onScroll(this.reverse, {\n        directions: oppositeDirections,\n        scrollable,\n        threshold,\n      });\n    }\n  }\n}\n\n/**\n * @category Scroll\n * @interface\n */\nexport type ScrollTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link XYDirection}s to use as the trigger.\n   * See also {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * Actions will be \"done\" when the scroll direction is one of the given ones\n   * and \"undone\" when it's the opposite direction. E.g. for \"up\" the opposite\n   * is \"down\".\n   */\n  directions?: CommaSeparatedStr<XYDirection> | XYDirection[];\n\n  /**\n   * The scrolling element target to use for the ScrollWatcher.\n   * See {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * @defaultValue {@link ScrollWatcher} default, the main scrolling element\n   */\n  scrollable?: ScrollTarget;\n\n  /**\n   * The scroll threshold to pass to the {@link ScrollWatcher}.\n   * See also {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  threshold?: number;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<ScrollTriggerConfig, \"directions\">\n> = (element) => {\n  return {\n    scrollable: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    threshold: validateNumber,\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription View\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { ViewTarget, View, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { hasClass } from \"@lisn/utils/css-alter\";\nimport { insertGhostClone, tryWrap } from \"@lisn/utils/dom-alter\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateString,\n  validateNumList,\n} from \"@lisn/utils/validation\";\nimport {\n  getOppositeViews,\n  isValidView,\n  isValidScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport { Action } from \"@lisn/actions/action\";\nimport { Animate } from \"@lisn/actions/animate\";\nimport { AnimatePlay } from \"@lisn/actions/animate-play\";\n\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (optional): One or more (comma-separated) {@link View}s.\n *   Default is \"at\".\n * - Additional trigger options:\n *   - `target`: A string element specification for an element (see\n *     {@link Utils.getReferenceElement | getReferenceElement}) or a\n *     {@link Types.ScrollOffset | ScrollOffset}.\n *   - `root`: A string element specification. See\n *     {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `rootMargin`: A string.\n *   - `threshold`: A number or list (comma-separated) of numbers.\n *\n * @example\n * Show the element when it's in the viewport, hide otherwise.\n *\n * ```html\n * <div data-lisn-on-view=\"at @show\"></div>\n * ```\n *\n * @example\n * Same as above. \"views\" is optional and defaults to \"at\".\n *\n * ```html\n * <div data-lisn-on-view=\"@show\"></div>\n * ```\n *\n * @example\n * As above but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-view--@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the first time it enters the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@show +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `seen` the first time the element enters the viewport, and play\n * the animations defined on it 1000ms after each time it enters the viewport,\n * reverse the animations as soon as it goes out of view.\n *\n * ```html\n * <div data-lisn-on-view=\"@add-class=seen +once ;\n *                         @animate +do-delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * Add class `seen` when the viewport is at or below the element (element\n * above viewport), remove it when the viewport is above the element.\n * Element going to the left or right of the viewport will not trigger the\n * action. See {@link getOppositeViews}:\n *\n * ```html\n * <div data-lisn-on-view=\"at,below @add-class=seen\"></div>\n * ```\n *\n * @example\n * Add class `cls` when the viewport is above or to the left the element\n * (element below or to the right of the viewport), remove it when the\n * viewport is either at, below or to the right of the element.\n *\n * ```html\n * <div data-lisn-on-view=\"above,left @add-class=cls\"></div>\n * ```\n *\n * @example\n * Hide the element when the viewport is above the next element with class\n * `section`, show it when the viewport is below or at the target element.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next.section\"></div>\n * <div class=\"section\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next-section\"></div>\n * <div data-lisn-ref=\"section\"></div>\n * ```\n *\n * @example\n * Open the {@link Widgets.Openable | Openable} widget configured for this\n * element when the viewport is 75% down from the top of the page.\n *\n * ```html\n * <div data-lisn-on-view=\"@open +target=top:75%\"></div>\n * ```\n *\n * @category View\n */\nexport class ViewTrigger extends Trigger {\n  readonly getConfig: () => ViewTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"view\",\n      (element, args, actions, config) => {\n        return new ViewTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            views: validateStrList(\"views\", args, isValidView),\n          } as const),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config?: ViewTriggerConfig) {\n    super(element, actions, config);\n\n    const logger = debug\n      ? new debug.Logger({\n          name: `ViewTrigger-${formatAsString(element)}`,\n        })\n      : null;\n\n    this.getConfig = () => MH.copyObject(config || {});\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const watcher = ViewWatcher.reuse({\n      root: config?.root,\n      rootMargin: config?.rootMargin?.replace(/,/g, \" \"),\n      threshold: config?.threshold,\n    });\n\n    const target = config?.target || element;\n    const views = config?.views || MC.S_AT;\n    const oppositeViews = getOppositeViews(views);\n\n    const setupWatcher = (target: ViewTarget) => {\n      if (!MH.lengthOf(oppositeViews)) {\n        debug: logger?.debug6(\"Trigger can never be reversed, running now\");\n        // The action is never undone\n        this.run();\n      } else {\n        debug: logger?.debug6(\"Setting up trigger\", views, oppositeViews);\n        watcher.onView(target, this.run, { views });\n        watcher.onView(target, this.reverse, { views: oppositeViews });\n      }\n    };\n\n    // See comment in globals/settings under contentWrappingAllowed\n    let willAnimate = false;\n    for (const action of actions) {\n      if (\n        MH.isInstanceOf(action, Animate) ||\n        MH.isInstanceOf(action, AnimatePlay)\n      ) {\n        willAnimate = true;\n        break;\n      }\n    }\n\n    if (willAnimate) {\n      setupRepresentative(element).then(setupWatcher);\n    } else {\n      setupWatcher(target);\n    }\n  }\n}\n\n/**\n * @category View\n * @interface\n */\nexport type ViewTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link View} to use as the trigger.\n   * See also {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * Actions will be \"done\" when the view matches the given spec and \"undone\"\n   * otherwise. What the opposite views are depends on the given view. E.g. for\n   * \"at\", opposites are all the other ones;  for \"above\", the opposite ones\n   * are \"at\" and \"below\"; for \"at,above\" opposite is \"below\", etc.\n   *\n   * @defaultValue \"at\"\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * The target to use for the ViewWatcher. It can be a string offset\n   * specification.\n   * See {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * @defaultValue The element on which the {@link ViewTrigger} is defined\n   */\n  target?: ViewTarget;\n\n  /**\n   * The root to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  root?: Element | null;\n\n  /**\n   * The root margin to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * It can be either space-separated or comma-separated.\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  threshold?: number | number[];\n};\n\n// ----------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<ViewTriggerConfig, \"views\">\n> = (element) => {\n  return {\n    target: (key, value) =>\n      MH.isLiteralString(value) && isValidScrollOffset(value)\n        ? value\n        : ((MH.isLiteralString(value)\n            ? waitForReferenceElement(value, element)\n            : null) ?? undefined),\n    root: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    rootMargin: validateString,\n    threshold: (key, value) => validateNumList(key, value),\n  };\n};\n\nconst setupRepresentative = async (element: Element): Promise<Element> => {\n  let target: Element | null = await tryWrap(element);\n  if (!target) {\n    // Not allowed to wrap. Create a dummy hidden clone that's not animated and\n    // position it absolutely in a wrapper of size 0 that's inserted just\n    // before the actual element, so that the hidden clone overlaps the actual\n    // element's regular (pre-transformed) position.\n\n    const prev = element.previousElementSibling;\n    const prevChild = MH.childrenOf(prev)[0];\n    if (\n      prev &&\n      hasClass(prev, MC.PREFIX_WRAPPER) &&\n      prevChild &&\n      hasClass(prevChild, MC.PREFIX_GHOST)\n    ) {\n      // Already cloned by a previous animate action?\n      target = prevChild;\n    } else {\n      target = (await insertGhostClone(element))._clone;\n    }\n  }\n\n  return target;\n};\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nexport * from \"@lisn/triggers/check-trigger\";\nexport * from \"@lisn/triggers/pointer-trigger\";\nexport * from \"@lisn/triggers/layout-trigger\";\nexport * from \"@lisn/triggers/load-trigger\";\nexport * from \"@lisn/triggers/scroll-trigger\";\nexport * from \"@lisn/triggers/trigger\";\nexport * from \"@lisn/triggers/view-trigger\";\n\nexport * from \"@lisn/triggers/trigger\";\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport \"@lisn/bundle-essentials\"; // side effects\n\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport * as _actions from \"@lisn/actions/index\";\nimport * as triggers from \"@lisn/triggers/index\";\n\nexport * from \"@lisn/bundle-essentials\";\n\n// --- remove widget specific actions\nexport const actions = omitKeys(_actions, {\n  Open: true,\n  NextPage: true,\n  PrevPage: true,\n  GoToPage: true,\n  EnablePage: true,\n  DisablePage: true,\n} as const);\n\nexport * as triggers from \"@lisn/triggers/index\";\n\nactions.AddClass.register();\nactions.RemoveClass.register();\nactions.AnimatePlay.register();\nactions.AnimatePause.register();\nactions.Animate.register();\nactions.Display.register();\nactions.Undisplay.register();\nactions.ScrollTo.register();\nactions.SetAttribute.register();\nactions.Show.register();\nactions.Hide.register();\nactions.Enable.register();\nactions.Disable.register();\nactions.Run.register();\n\ntriggers.LayoutTrigger.register();\ntriggers.LoadTrigger.register();\ntriggers.CheckTrigger.register();\ntriggers.ClickTrigger.register();\ntriggers.PressTrigger.register();\ntriggers.HoverTrigger.register();\ntriggers.ScrollTrigger.register();\ntriggers.Trigger.register();\ntriggers.ViewTrigger.register();\n"],"names":["PREFIX","LOG_PREFIX","OBJECT","Object","SYMBOL","Symbol","ARRAY","Array","STRING","String","FUNCTION","Function","MATH","Math","NUMBER","Number","PROMISE","Promise","PI","INFINITY","Infinity","S_ABSOLUTE","S_FIXED","S_WIDTH","S_HEIGHT","S_TOP","S_BOTTOM","S_UP","S_DOWN","S_LEFT","S_RIGHT","S_AT","S_ABOVE","S_BELOW","S_IN","S_OUT","S_NONE","S_AMBIGUOUS","S_ADDED","S_REMOVED","S_ATTRIBUTE","S_KEY","S_MOUSE","S_POINTER","S_TOUCH","S_WHEEL","S_CLICK","S_HOVER","S_PRESS","S_SCROLL","S_ZOOM","S_DRAG","S_UNKNOWN","S_SCROLL_TOP","S_SCROLL_LEFT","S_SCROLL_WIDTH","S_SCROLL_HEIGHT","S_CLIENT_WIDTH","S_CLIENT_HEIGHT","S_SCROLL_TOP_FRACTION","S_SCROLL_LEFT_FRACTION","S_HORIZONTAL","S_VERTICAL","S_SKIP_INITIAL","S_DEBOUNCE_WINDOW","S_TOGGLE","S_CANCEL","S_KEYDOWN","S_MOUSEUP","S_MOUSEDOWN","S_POINTERUP","S_POINTERDOWN","S_POINTERENTER","S_POINTERLEAVE","S_POINTERMOVE","S_POINTERCANCEL","S_TOUCHSTART","S_TOUCHEND","S_TOUCHMOVE","S_TOUCHCANCEL","S_SELECTSTART","S_ATTRIBUTES","S_CHILD_LIST","S_REVERSE","S_DISABLED","S_ARROW","S_ROLE","ARIA_PREFIX","S_ARIA_CONTROLS","PREFIX_WRAPPER","PREFIX_INLINE_WRAPPER","PREFIX_TRANSITION","PREFIX_TRANSITION_DISABLE","PREFIX_HIDE","PREFIX_SHOW","PREFIX_DISPLAY","PREFIX_UNDISPLAY","PREFIX_ORIENTATION","PREFIX_GHOST","PREFIX_NO_SELECT","PREFIX_NO_TOUCH_ACTION","PREFIX_NO_WRAP","S_ANIMATE","ANIMATE_PREFIX","PREFIX_ANIMATE_DISABLE","PREFIX_ANIMATE_PAUSE","PREFIX_ANIMATE_REVERSE","USER_AGENT","navigator","userAgent","match","LisnError","Error","LisnUsageError","constructor","message","name","LisnBugError","root","self","global","kebabToCamelCase","str","replace","m","toUpperCase","charAt","camelToKebabCase","toLowerCase","prefixName","MC","prefixCssVar","prefixCssJsVar","prefixData","s","timeNow","Date","now","bind","timeSince","startTime","hasDOM","document","getWindow","window","getDoc","getDocElement","documentElement","getDocScrollingElement","scrollingElement","getBody","body","getReadyState","readyState","getPointerType","event","isPointerEvent","pointerType","isMouseEvent","onAnimationFrame","callback","requestAnimationFrame","createElement","tagName","options","createButton","label","tag","btn","setTabIndex","setAttr","isNullish","v","undefined","isEmpty","isIterableObject","isNonPrimitive","iterator","isArray","isInstanceOf","isObject","typeOf","isNumber","isString","isLiteralString","isBoolean","isFunction","isDoc","target","MouseEvent","PointerEvent","isTouchPointerEvent","isWheelEvent","WheelEvent","isKeyboardEvent","KeyboardEvent","isTouchEvent","TouchEvent","isElement","Element","isHTMLElement","HTMLElement","isNodeBAfterA","nodeA","nodeB","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","strReplace","replacement","setTimer","setTimeout","clearTimer","clearTimeout","getBoundingClientRect","el","copyBoundingRectProps","rect","x","left","right","y","top","bottom","querySelector","selector","querySelectorAll","docQuerySelector","docQuerySelectorAll","getElementById","id","getAttr","getAttribute","value","setAttribute","unsetAttr","delAttr","removeAttribute","includes","arr","startAt","indexOf","filter","array","filterFn","filterBlank","result","lengthOf","sizeOf","obj","_obj$size","size","_obj$length","length","lastOf","a","slice","preventDefault","arrayFrom","from","keysOf","keys","defineProperty","merge","assign","copyObject","promiseResolve","resolve","promiseAll","all","freeze","hasOwnProp","o","prop","prototype","hasOwnProperty","call","preventExtensions","stringify","JSON","floor","ceil","log2","sqrt","max","min","abs","round","pow","parseFloat","isNaN","Class","constructorOf","typeOrClassOf","_constructorOf","parentOf","element","parentElement","childrenOf","children","targetOf","currentTargetOf","currentTarget","classList","S_TABINDEX","getTabIndex","index","unsetTabIndex","remove","deleteObjKey","key","deleteKey","map","delete","elScrollTo","coords","behavior","scrollTo","newPromise","executor","newMap","entries","Map","newWeakMap","WeakMap","newSet","values","Set","newWeakSet","WeakSet","newIntersectionObserver","IntersectionObserver","newResizeObserver","ResizeObserver","newMutationObserver","MutationObserver","usageError","msg","bugError","illegalConstructorError","useWhat","CONSOLE","console","debug","log","info","consoleWarn","warn","consoleError","error","settings","MH","mainScrollableElementSelector","contentWrappingAllowed","pageLoadTimeout","autoWidgets","scrollbarHideNative","scrollbarOnMobile","scrollbarPositionH","scrollbarPositionV","scrollbarAutoHide","scrollbarClickScroll","scrollbarDragScroll","scrollbarUseHandle","sameHeightDiffTolerance","sameHeightResizeThreshold","sameHeightDebounceWindow","sameHeightMinGap","sameHeightMaxFreeR","sameHeightMaxWidthR","deviceBreakpoints","mobile","tablet","desktop","aspectRatioBreakpoints","tall","square","wide","lightThemeClassName","darkThemeClassName","deltaLineHeight","deltaPageWidth","deltaPageHeight","verbosityLevel","remoteLoggerURL","remoteLoggerOnMobileOnly","roundNumTo","numDecimal","multiplicationFactor","isValidNum","isFinite","toNum","defaultValue","numValue","toInt","toNonNegNum","toPosNum","toNumWithBounds","limits","_limits$min","_limits$max","_ref","maxAbs","havingMaxAbs","sort","b","hAngle","normalizeAngle","atan2","degToRad","areParallel","vA","vB","angleDiffThreshold","angleA","angleB","areAntiParallel","distanceBetween","ptA","ptB","easeInOutQuad","sortedKeysByVal","descending","getBitmask","start","end","copyExistingKeys","fromObj","toObj","omitKeys","keysToRm","res","compareValuesIn","objA","objB","roundTo","valA","valB","toArrayIfSingle","toBoolean","formatAsString","maxLen","maybeConvertToString","joinAsString","separator","args","join","splitOn","input","trim","limit","output","addEntry","push","matchIndex","matchLength","_match$index","exec","randId","nChars","segment","random","toString","toMargins","absoluteSize","_parts$","_parts$2","_parts$3","toPxValue","strValue","margin","parts","margins","objToStrKey","flattenForSorting","k","stringifyReplacer","nested","classStr","stack","validateStrList","checkFn","_toArray","toArray","_validateString","validateNumList","_toArray2","_validateNumber","validateNumber","validateBoolean","_validateBoolean","validateString","validateStringRequired","typeDescription","numVal","boolVal","BitSpaces","counter","newCounter","create","propNames","newBitSpace","get","_nBits","_bitmask","newBitSpaces","createBitSpace","spaces","bitmask","space","bit","has","p","bitmaskFor","pStart","pEnd","thisStart","thisEnd","nameOf","val","_propNames","enumerable","DOM_CATEGORIES_SPACE","scheduleHighPriorityTask","task","scheduler","postTask","priority","channel","MessageChannel","port1","onmessage","close","port2","postMessage","getDebouncedHandler","debounceWindow","handler","timer","lastArgs","waitForDelay","delay","waitForAnimationFrame","wrapCallback","handlerOrCallback","isRemoved","callablesMap","invoke","wrapper","Callback","onRemove","rmFn","CallbackScheduler","_clear","fn","add","reject","_push","err","REMOVE","set","_defineProperty","queues","flush","queue","_running","_task","shift","item","_onRemove","logWarn","isMessageSeen","logError","discardMessages","isSeen","waitForMutateTime","scheduleDOMTask","scheduledDOMMutations","waitForMeasureTime","scheduledDOMMeasurements","waitForSubsequentMutateTime","then","waitForSubsequentMeasureTime","hasScheduledDOMTasks","runAllDOMTasks","runDOMTaskQueue","getVisibleContentChildren","e","isVisibleContentTag","isInlineTag","inlineTags","isDOMElement","SVGElement","MathMLElement","transitionElementNow","fromCls","toCls","cancelCSSTransitions","didChange","hasClass","removeClassesNow","addClassesNow","transitionElement","thisTransition","scheduleCSSTransition","_isCancelled","_finish","transitionDuration","getMaxTransitionDuration","displayElementNow","displayElement","undisplayElementNow","undisplayElement","showElement","hideElement","toggleDisplayElement","isElementUndisplayed","toggleShowElement","isElementHidden","className","contains","classNames","addClasses","removeClasses","toggleClassNow","force","toggle","toggleClass","getData","setDataNow","setData","setBooleanDataNow","setBooleanData","unsetBooleanDataNow","unsetBooleanData","delDataNow","delData","getComputedStylePropNow","getComputedStyle","getPropertyValue","getComputedStyleProp","getStylePropNow","_style","style","getStyleProp","setStylePropNow","_style2","setProperty","setStyleProp","delStylePropNow","_style3","removeProperty","delStyleProp","propVal","duration","disableInitialTransition","setHasModal","PREFIX_HAS_MODAL","delHasModal","setNumericStyleJsVars","props","transformFn","_transformFn","varPrefix","_prefix","cssPropSuffix","varName","_options$_numDecimal","thisNumDecimal","_numDecimal","currValue","_units","scheduledCSSTransitions","toClasses","scheduledTransitions","scheduledTransition","_cancel","isCancelled","wrapElementNow","createWrapperFor","ignoreMove","to","replaceWith","append","wrapElement","wrapChildrenNow","moveChildrenNow","moveElementNow","replaceElementNow","newElement","oldParent","newParent","child","parentEl","position","moveElement","getOrAssignID","prefix","domID","isAllowedToWrap","getWrapper","parent","getContentWrapper","firstChild","tryWrap","_tryWrap","tryWrapContent","cloneElement","clone","cloneNode","insertGhostCloneNow","insertBefore","_tryWrapNow","required","_wrapper","_clone","insertGhostClone","recordsToSkipOnce","getIgnoreMove","clearIgnoreMove","wrapContent","requiredBy","getWrapperFn","wrapFn","allowedToWrap","waitForElement","timeout","callFn","observer","disconnect","observe","childList","subtree","waitForElementOrInteractive","isInteractive","waitForInteractive","INTERACTIVE","COMPLETE","addEventListener","waitForComplete","waitForPageReady","pageIsReady","dispatchReady","isPageReady","newXMap","getDefaultV","XMap","newXMapGetter","newXWeakMap","XWeakMap","newXWeakMapGetter","XMapBase","sGet","prune","sk","rest","clear","DOMWatcher","config","getConfig","CONSTRUCTOR_KEY","reuse","_instances$get","myConfig","configStrKey","_root","instance","instances","buffer","t","_target","_categoryBitmask","_attributes","_addedTo","_removedFrom","allCallbacks","mutationHandler","records","record","recType","type","addedNodes","operation","ADDED_BIT","removedNodes","REMOVED_BIT","attributeName","ATTRIBUTE_BIT","shouldSkipOperation","processOperation","observers","_observer","_isActive","createCallback","_allCallbacks$get","_callback","deleteHandler","_options","setupOnMutation","userOptions","getOptions","activateObserver","skipInitial","_selector","childQueue","takeRecords","matches","initOperation","bufferedOperation","diffOperation","getDiffOperation","invokeCallback","activeCategories","entry","deactivateObserver","categoryBitmask","currentTargets","mutationType","_subtree","requestToSkip","removedFrom","addedTo","requestFrom","requestTo","onMutation","offMutation","_allCallbacks$get2","_config$subtree","CATEGORIES_BITS","categories","cat","operationA","operationB","attributes","attr","catch","getMaxDeltaDirection","deltaX","deltaY","getVectorDirection","vector","getOppositeDirection","direction","OPPOSITE_DIRECTIONS","getOppositeXYDirections","directions","directionList","isValidXYDirection","opposites","opposite","XY_DIRECTIONS","isValidDirection","DIRECTIONS","Z_DIRECTIONS","SCROLL_DIRECTIONS","callEventListener","handleEvent","addEventListenerTo","eventType","transformEventType","getEventHandlerData","thirdArg","wrappedHandler","supports","getBrowserSupport","_optionsArg","_options$capture","capture","once","removeEventListenerFrom","setEventHandlerData","_wrappedHandler","_thirdArg","data","removeEventListener","deleteEventHandlerData","preventSelect","undoPreventSelect","browserEventSupport","_pointer","passive","signal","optTest","opt","thisOpt","AbortController","dummyHandler","dummyElement","e__ignored","registeredEventHandlerData","getEventOptionsStr","finalOptions","_registeredEventHandl","optionsStr","_registeredEventHandl2","startsWith","isValidInputDevice","device","DEVICES","isValidIntent","intent","INTENTS","addDeltaZ","current","increment","MIN_DELTA_Z","getKeyGestureFragment","events","_options$scrollHeight","LINE","PAGE","CONTENT","scrollHeight","deltasUp","amount","deltasDown","deltasLeft","deltasRight","deltasIn","deltasOut","deltaZ","deltasForKey","SK_UP","SK_ARROWUP","SK_PAGEUP","Home","SK_DOWN","SK_ARROWDOWN","SK_PAGEDOWN","End","SK_LEFT","SK_ARROWLEFT","SK_RIGHT","SK_ARROWRIGHT","shiftKey","ctrlKey","theseDeltas","thisDeltaX","thisDeltaY","thisDeltaZ","thisIntent","SK_PAGE","SK_ARROW","getPointerGestureFragment","pointerEventClass","pointerUpType","filteredEvents","eType","buttons","numEvents","firstEvent","lastEvent","clientX","clientY","getTouchGestureFragment","_options$dragHoldTime","_options$dragNumFinge","moves","getTouchDiff","deltaThreshold","numMoves","holdTime","getHoldTime","canBeDrag","dragHoldTime","dragNumFingers","d","isSignificant","vectorA","vectorB","startDistance","startX","startY","endDistance","endX","endY","deltaSign","reverseScroll","isFirst","thisDirection","lastTouchEvent","touches","groupedTouches","touch","identifier","touchList","nTouches","firstTouch","lastTouch","firstStart","findIndex","firstMove","timeStamp","normalizeWheel","spinX","spinY","pixelX","pixelY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","deltaMode","getWheelGestureFragment","maxDelta","percentage","GestureWatcher","allListeners","getCallbackAndWrapper","setupOnGesture","_devices","_allListeners$get","listeners","setupListeners","_nCallbacks","_preventDefault","_nPreventDefault","_allListeners$get2","_remove","invokeCallbacks","_allListeners$get3","isTerminated","intents","_intents","hasAddedTabIndex","hasPreventedSelect","addOrRemoveListeners","action","listener","eventTypes","method","addInitialListener","initialListener","initiatingEvents","removeInitialListener","addOngoingListener","processEvent","ongoingEvents","removeOngoingListener","trackGesture","setGestureCssProps","totalDeltaX","totalDeltaY","totalDeltaZ","noTrackGesture","offGesture","onGesture","_allCallbacks$get3","_config$preventDefaul","_config$naturalTouchS","_config$touchDragHold","_config$touchDragNumF","_debounceWindow","_deltaThreshold","_angleDiffThreshold","_naturalTouchScroll","naturalTouchScroll","_touchDragHoldTime","touchDragHoldTime","_touchDragNumFingers","touchDragNumFingers","pointer","wheel","fragmentGetters","_options$minTotalDelt","_options$maxTotalDelt","_options$minTotalDelt2","_options$maxTotalDelt2","_options$minTotalDelt3","_options$maxTotalDelt3","_options$preventDefau","_options$naturalTouch","_options$touchDragHol","_options$touchDragNum","devices","_directions","_minTotalDeltaX","minTotalDeltaX","_maxTotalDeltaX","maxTotalDeltaX","_minTotalDeltaY","minTotalDeltaY","_maxTotalDeltaY","maxTotalDeltaY","_minTotalDeltaZ","minTotalDeltaZ","_maxTotalDeltaZ","maxTotalDeltaZ","logger","preventNextClick","eventQueue","debouncedWrapper","fragment","eventQueueCopy","_eventQueueCopy","_eventQueueCopy$","clearEventQueue","newTotalDeltaX","newTotalDeltaY","newTotalDeltaZ","time","preventDefaultActionFor","keepLastEvent","splice","isActualGesture","isPointerDown","focus","preventScroll","isValidDeviceList","isValidForType","S_DEVICES","ORDERED_DEVICES","isValidAspectRatioList","aspectR","S_ASPECTRS_CAMEL","ORDERED_ASPECTR","getOtherDevices","getOtherLayouts","getOtherAspectRatios","getLayoutBitmask","layoutBitmask","getBitmaskFromSpec","aspectRatios","ORDERED_DEVICE_NAMES","ORDERED_ASPECTR_NAMES","bitSpaces","NUM_LAYOUTS","LAYOUT_RANGE_REGEX","RegExp","getLayoutsFromBitmask","keyName","bitSpace","layouts","spec","oppositeBitmask","singleKeyName","rangeMatch","minLayout","maxLayout","lt","isScrollable","axis","active","noCache","_isScrollableCache$ge","cachedResult","isScrollableCache","offset","doCache","canScroll","dimension","IS_SCROLLABLE_CACHE_TIMEOUT","getClosestScrollable","ancestor","getCurrentScrollAction","scrollable","toScrollableOrDefault","currentScrollAction","_scrollable","currentScroll","cancel","cancelFn","_weCanInterrupt","scrollEvents","preventScrollHandler","_userCanInterrupt","promise","initiateScroll","thisScrollAction","waitFor","cleanup","isValidScrollDirection","getClientWidthNow","isScrollableBodyInQuirks","offsetWidth","getBorderWidth","getClientHeightNow","offsetHeight","fetchMainContentElement","init","mainContentElement","tryGetMainScrollableElement","mainScrollableElement","fetchMainScrollableElement","getDefaultScrollingElement","fetchScrollableElement","toScrollableOrMain","mappedScrollables","DIFF_THRESHOLD","arePositionsDifferent","getMain","_options$weCanInterru","_options$userCanInter","getTargetCoordinates","altTarget","_offset","_altTarget","_altOffset","altOffset","_duration","weCanInterrupt","userCanInterrupt","docScrollingElement","targetEl","getStartEndPosition","applyOffset","getEndPosition","startPosition","targetCoordinates","endPosition","scrollH","scrollW","clientH","clientW","previousTimeStamp","currentPosition","step","elapsed","progress","side","initPromise","contentElement","createOverlay","fetchOverlayOptions","canReuse","_id","_overlays$get2","existingOverlay","overlays","_parent","_overlayKey","overlay","createOnlyOverlay","isPercentageHOffset","isPercentageVOffset","needsContentWrapping","_userOptions$data2","_userOptions$id2","getCssProperties","fetchParent","_data","getOverlayKey","finalCssProperties","userSuppliedParent","getEntryContentBox","contentBoxSize","getSizeFromInlineBlock","contentRect","getEntryBorderBox","fallbackToContent","borderBoxSize","NaN","isValidBox","box","ALL_BOXES","isValidDimension","ALL_DIMENSIONS","tryGetViewportOverlay","viewportOverlay","fetchViewportOverlay","fetchViewportSize","realtime","_MH$getDocScrollingEl","clientWidth","clientHeight","S_INLINE_SIZE","S_BLOCK_SIZE","XResizeObserver","targetsToSkip","observedTargets","resizeHandler","skipNum","borderObserver","contentObserver","observeTarget","targets","observeLater","unobserve","SizeWatcher","allSizeData","processEntry","xObserver","fetchCurrentSize","fetchElement","sizeData","getSizeData","border","content","fetchOptions","_options$box","_options$dimension","_options$MC$S_DEBOUNC","_element","_box","_dimension","_threshold","threshold","_resizeThreshold","setupOnResize","removeOnResize","currEntry","setSizeCssProps","latestData","thresholdsExceeded","hasExceededThreshold","trackSize","noTrackSize","onResize","offResize","resizeThreshold","lastThresholdData","dim","diff","borderBox","contentBox","borderWidth","borderHeight","contentWidth","contentHeight","LayoutWatcher","nonIntersectingBitmask","currentLayoutData","aspectRatio","fetchCurrentLayout","readyPromise","setupOverlays","createOverlays","_deviceBreakpoints","_aspectRatioBreakpoints","isReady","intersectionHandler","numEntries","getNonIntersecting","processLayoutChange","observeOptions","rootMargin","triggerOverlay","_layoutBitmask","setupOnLayout","layoutData","changeMatches","skipCallbacks","deviceBit","aspectRatioBit","onLayout","offLayout","VAR_BORDER_HEIGHT","PREFIX_DEVICE","PREFIX_ASPECTR","overlayPromises","overlayParent","parentHeightCss","getOverlayLayout","layout","thisLayoutData","prevLayoutData","isIntersecting","isValidPointerAction","POINTER_ACTIONS","PointerWatcher","setupOnPointer","startHandler","endHandler","startCallback","endCallback","_actions","listenerSetupFn","onPointer","offPointer","_config$preventSelect","_preventSelect","_options$preventSelec","actions","setupClickListener","toggleState","state","setupPointerListeners","startEventSuff","endEventSuff","startEvent","endEvent","startListener","endListener","click","hover","press","actionData","ScrollWatcher","allScrollData","activeListeners","fetchCurrentScroll","isScrollEvent","previousEventData","fetchScrollData","trackType","_trackType","setupOnScroll","fetchOnScrollOptions","eventTarget","_eventTarget","scrollData","TRACK_FULL","setupSizeTrack","listenerOptions","_nRealtime","scrollHandler","directionMatches","removeOnScroll","setScrollCssProps","scrollCallback","doc","resizeCallback","sizeWatcher","observedElements","domWatcher","onAddedCallback","_activeListeners$get","scroll","_options$amount","isVertical","sign","targetCoordinate","asFractionOf","_scrollDuration","fetchCurrentScrollAction","stopUserScrolling","stopScroll","immediate","trackScroll","noTrackScroll","onScroll","TRACK_REGULAR","offScroll","_scrollThreshold","scrollThreshold","scrollDuration","getEventTarget","userDirections","latestDirection","topDiff","leftDiff","checkTop","checkLeft","scrollTop","scrollLeft","scrollWidth","scrollTopFraction","scrollLeftFraction","prevScrollTop","prevScrollLeft","isValidScrollOffset","OFFSET_REGEX","isValidView","view","VIEWS","getOppositeViews","views","getViewsBitmask","VIEWS_SPACE","at","above","below","getViewsFromBitmask","viewsStr","viewsBitmask","parseScrollOffset","reference","XIntersectionObserver","selectedEntries","thresholds","ViewWatcher","allViewData","_rootMargin","fetchCurrentView","fetchData","entryOrElement","intersection","fetchIntersectionData","fetchViewData","setupOnView","viewData","rootBounds","setupInviewTrack","viewsToBitmask","_viewsBitmask","removeOnView","setViewCssProps","viewCallback","scrollWatcher","isInview","removeTrackCallback","scrollableAncestors","fetchScrollableAncestors","addTrackCallback","_config$_root","trackCallback","prevData","changed","viewChanged","enterOrLeaveCallback","target__ignored","trackView","noTrackView","onView","offView","_config$rootMargin","targetBounds","relative","entryOrTarget","vpSize","rootMargins","isCrossOrigin","IntersectionObserverEntry","boundingClientRect","fetchBounds","_targetBounds","_rootMargins","_rootBounds","_isIntersecting","_isCrossOrigin","width","height","_intersection$_isInte","vpHeight","vpWidth","fetchViews","hMiddle","vMiddle","useScrollingAncestor","delta","_left","_right","_top","_bottom","xView","yView","scrollingAncestor","overlayOptions","getOverlayOptions","ovrDimension","Widget","_instances$get2","destroy","isDisabled","isDestroyed","destroyPromise","enableCallbacks","disableCallbacks","destroyCallbacks","disable","enable","toggleEnable","onDisable","onEnable","elInstances","onDestroy","getElement","registerWidget","newWidget","configValidator","_options$selector","registeredWidgets","prefixedName","getDefaultWidgetSelector","thisConfigValidator","widgets","configSpecs","dataAttr","supportsMultiple","fetchWidgetConfig","theseWidgets","w","getWidgetConfig","validator","toOptionsObject","configPromises","fetchUniqueWidget","Type","widget","registerAction","newAction","registeredActions","newActionFromSpec","argsAndOptions","fetchAction","AddClass","register","_add","_toggle","getMethods","do","undo","RemoveClass","cls","iterateAnimations","webAnimationCallback","legacyCallback","animation","getAnimations","resetCssAnimationsNow","Animate","animate","GO_FORWARD","GO_BACKWARD","GO_TOGGLE","isInitial","setupAnimation","setupAnimationLegacy","pauseTillReady","isBackward","playbackRate","reverse","playState","play","pause","CSSAnimation","cancelHandler","onAnimationCancel","Animation","effect","KeyframeEffect","newAnimation","_MH$targetOf","animationName","isPaused","goBackwards","doPause","AnimatePlay","_play","_pause","PAUSE","AnimatePause","PLAY","TOGGLE","Display","_display","_undisplay","Undisplay","getReferenceElement","thisElement","referenceElement","relation","find","matchOp","refOrCls","PREFIX_REF","DATA_REF","getFirstReferenceElement","getLastReferenceElement","getThisReferenceElement","getNextReferenceElement","getPrevReferenceElement","waitForReferenceElement","getAllReferenceElements","allRefs","closest","getNextOrPrevReferenceElement","goBackward","numRefs","refIndex","i","currentIsAfter","Trigger","registerTrigger","_config$once","_config$oneWay","_config$doDelay","_config$undoDelay","oneWay","doDelay","undoDelay","lastCallId","callActions","newToggleState","myCallId","run","getActions","newTrigger","clsPref","_getData","baseConfigValidator","newBaseConfigValidator","allSpecs","TRIGGER_SEP","_config$actOn","tmp","configSpec","OPTION_PREF_CHAR","argSpec","allActionSpecs","ACTION_PREF_CHAR","actionTarget","actOn","actionSpec","actionArgsAndOptions","ACTION_ARGS_PREF_CHAR","Enable","ids","_enable","_disable","_toggleEnable","Disable","Run","_run","_reverse","triggerPromises","getTriggers","triggers","trigger","ScrollTo","offsetX","offsetY","newConfigValidator","watcher","canReverse","hasReversed","_validateNumber2","SetAttribute","isOn","setAttrs","on","attrName","off","Show","_show","_hide","Hide","isValidPosition","POSITIONS","Openable","properties","isModal","isOffcanvas","openCallbacks","closeCallbacks","isOpen","open","PREFIX_IS_OPEN","scrollWrapperToTop","outerWrapper","onOpen","onClose","getRoot","getContainer","container","getTriggerConfigs","setupElements","PREFIX_CLOSE_BTN","PREFIX_OPENS_ON_HOVER","S_ARIA_EXPANDED","S_ARIA_MODAL","MIN_CLICK_TIME_AFTER_HOVER_OPEN","S_ARROW_UP","S_ARROW_DOWN","S_ARROW_LEFT","S_ARROW_RIGHT","ARROW_TYPES","ICON_CLOSED_TYPES","ICON_OPEN_TYPES","isValidIconClosed","isValidIconOpen","triggerConfigValidator","autoClose","icon","iconClosed","iconOpen","getPrefixedNames","pref","_overlay","_innerWrapper","_outerWrapper","_content","_container","_trigger","_containerForSelect","_triggerForSelect","_contentId","findContainer","currWidget","childRef","findTriggers","prefixedNames","getTriggerSelector","suffix","contentId","getTriggersFrom","inputTriggers","wrapTriggers","triggerMap","addTrigger","triggerConfig","_properties$wrapTrigg","innerWrapper","placeholder","closeButton","closeBtn","elements","onSetup","hoverTimeOpened","isPointerOver","activeTrigger","isTrigger","shouldPreventDefault","_triggers$get$prevent","_triggers$get","usesHover","_triggers$get2","usesAutoClose","_triggers$get3","toggleTrigger","openIt","setIsPointerOver","pointerLeft","unsetIsPointerOver","pointerEntered","closeIfEscape","closeIfClickOutside","maybeSetupAutoCloseListeners","addOrRemove","setupOrCleanup","Open","widgetPromise","Pager","DUMMY_ID","WIDGET_NAME","_Pager$get","pages","toggles","switches","nextPrevSwitch","_next","nextSwitch","_prev","prevSwitch","pageSelector","PREFIX_PAGE__FOR_SELECT","toggleSelector","PREFIX_TOGGLE__FOR_SELECT","switchSelector","PREFIX_SWITCH__FOR_SELECT","nextSwitchSelector","PREFIX_NEXT_SWITCH__FOR_SELECT","prevSwitchSelector","PREFIX_PREV_SWITCH__FOR_SELECT","numPages","page","components","_pages","_toggles","_switches","_nextPrevSwitch","methods","nextPage","_nextPage","prevPage","_prevPage","goToPage","pageNum","_goToPage","disablePage","_disablePage","enablePage","_enablePage","togglePage","_togglePage","isPageDisabled","_isPageDisabled","getCurrentPage","_getCurrentPage","getPreviousPage","_getPreviousPage","getCurrentPageNum","_getCurrentPageNum","getPreviousPageNum","_getPreviousPageNum","onTransition","_onTransition","getPages","getSwitches","getToggles","MIN_TIME_BETWEEN_WHEEL","S_CURRENT","S_ARIA_CURRENT","S_COVERED","S_NEXT","S_TOTAL_PAGES","S_VISIBLE_PAGES","S_CURRENT_PAGE","S_PAGE_NUMBER","PREFIXED_NAME","PREFIX_ROOT","PREFIX_PAGE_CONTAINER","PREFIX_PAGE","PREFIX_STYLE","PREFIX_IS_FULLSCREEN","PREFIX_USE_PARALLAX","PREFIX_TOTAL_PAGES","PREFIX_VISIBLE_PAGES","PREFIX_CURRENT_PAGE","PREFIX_CURRENT_PAGE_IS_LAST","PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED","PREFIX_CURRENT_PAGE_IS_LAST_ENABLED","PREFIX_PAGE_STATE","PREFIX_PAGE_NUMBER","VAR_CURRENT_PAGE","VAR_TOTAL_PAGES","VAR_VISIBLE_PAGES","VAR_VISIBLE_GAPS","VAR_TRANSLATED_PAGES","VAR_TRANSLATED_GAPS","VAR_PAGE_NUMBER","SUPPORTED_STYLES","isValidStyle","initialPage","pageSize","peek","fullscreen","parallax","horizontal","useGestures","bool","alignGestureDirection","fetchClosestScrollable","_getClosestScrollable","setPageNumber","lastPromise","setPageState","setCurrentPage","pagerEl","pageNumbers","isFirstEnabled","isLastEnabled","n","_total","_current","_config$initialPage","_config$style","_config$pageSize","_config$peek","_config$fullscreen","_config$parallax","_config$horizontal","_config$useGestures","_config$alignGestureD","pageContainer","pagerStyle","isCarousel","minPageSize","enablePeek","isFullscreen","isParallax","isHorizontal","orientation","gestureWatcher","viewWatcher","recalculateCarouselProps","gap","containerSize","getNumVisiblePages","addPeek","numVisiblePages","currPageNum","prevPageNum","numHidden","hasPeek","visibleStart","isAtEdge","numTranslated","numVisibleGaps","fractionalNumVisiblePages","getGestureOptions","scrollToPager","transitionOnGesture","swapDirection","addWatchers","removeWatchers","getPageNumForEvent","toggleClickListener","switchClickListener","nextSwitchClickListener","prevSwitchClickListener","idx","disabledPages","callbacks","fetchScrollOptions","lastPageNum","lastTransition","canTransition","gestureData","targetPage","NextPage","PrevPage","GoToPage","EnablePage","DisablePage","altPageNum","currentNum","targetNum","CheckTrigger","HTMLInputElement","onToggle","checked","ClickTrigger","setupWatcher","PressTrigger","HoverTrigger","LayoutTrigger","otherDevices","otherAspectRatios","LoadTrigger","ScrollTrigger","oppositeDirections","ViewTrigger","oppositeViews","willAnimate","setupRepresentative","_ref2","prev","previousElementSibling","prevChild"],"mappings":"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ACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,sBAAsB,EAAE,IAAI;EAC5B;;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,eAAe,EAAE,IAAI;EAErB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,WAAW,EAAE,KAAK;EAElB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,mBAAmB,EAAE,IAAI;EAEzB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,iBAAiB,EAAE,KAAK;EAExB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,kBAAkB,EAAE,QAAQ;EAE5B;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,kBAAkB,EAAE,OAAO;EAE3B;EACF;EACA;EACA;EACA;EACA;EACA;IACEC,iBAAiB,EAAE,EAAE;EAErB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,oBAAoB,EAAE,IAAI;EAE1B;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,mBAAmB,EAAE,IAAI;EAEzB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,kBAAkB,EAAE,KAAK;EAEzB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,uBAAuB,EAAE,EAAE;EAE3B;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,yBAAyB,EAAE,CAAC;EAE5B;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,wBAAwB,EAAE,GAAG;EAE7B;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,gBAAgB,EAAE,EAAE;EAEpB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,kBAAkB,EAAE,GAAG;EAEvB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,mBAAmB,EAAE,GAAG;EAExB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,iBAAiB,EAAE;EACjB;EACJ;EACA;EACA;EACA;EACA;EACIC,IAAAA,MAAM,EAAE,CAAC;EAET;EACJ;EACA;EACA;EACA;EACA;EACI,IAAA,aAAa,EAAE,GAAG;EAElB;EACJ;EACA;EACA;EACA;EACA;EACIC,IAAAA,MAAM,EAAE,GAAG;EAAE;;EAEb;EACJ;EACA;EACA;EACA;MACIC,OAAO,EAAE,GAAG;KACb;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,sBAAsB,EAAE;EACtB;EACJ;EACA;EACA;EACA;EACA;EACI,IAAA,WAAW,EAAE,CAAC;EAAE;;EAEhB;EACJ;EACA;EACA;EACA;EACA;MACIC,IAAI,EAAE,CAAC,GAAG,EAAE;EAAE;;EAEd;EACJ;EACA;EACA;EACA;EACA;MACIC,MAAM,EAAE,CAAC,GAAG,CAAC;EAAE;;EAEf;EACJ;EACA;EACA;EACA;EACA;MACIC,IAAI,EAAE,CAAC,GAAG,CAAC;EAAE;;EAEb;EACJ;EACA;EACA;EACA;EACI,IAAA,WAAW,EAAE,EAAE,GAAG,CAAC;KACpB;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,mBAAmB,EAAE,aAAa;EAElC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,kBAAkB,EAAE,YAAY;EAEhC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,eAAe,EAAE,EAAE;EAEnB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,cAAc,EAAE,IAAI;EAEpB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,e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CqI;EAAK,KAAC,CAAC;MACzD,IAAI,CAACyf,KAAK,GAAG,MAAM9nB,IAAI,CAAC8nB,KAAK,EAAE;MAC/B,IAAI,CAACnb,OAAO,GAAG,MAAM3M,IAAI,CAAC2M,OAAO,EAAE;MACnC,IAAI,CAAC5D,IAAI,GAAG,MAAM/I,IAAI,CAAC+I,IAAI,EAAE;MAC7B,IAAI,CAACiE,MAAM,GAAG,MAAMhN,IAAI,CAACgN,MAAM,EAAE;EACjC,IAAA,IAAI,CAACpM,MAAS,CAAC+C,QAAQ,CAAC,GAAG,MAAM3D,IAAI,CAACY,MAAS,CAAC+C,QAAQ,CAAC,EAAE;EAC7D,EAAA;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EA9DE;EACF;EACA;EAGE;EACF;EACA;EAGE;EACF;EACA;EAGE;EACF;EACA;EAGE;EACF;EACA;EAKE;EACF;EACA;EACA;EACA;EACA;EALEgY,eAAA,CA5BWyL,IAAI,EAAA,eAAA,EAkCiBC,aAAa,CAAA;EA8BxC,MAAME,QAAQ,SAA+BE,QAAQ,CAAO;EASjE;EACF;EACA;EACA;EACA;EACA;IACE7nB,WAAWA,CAACunB,WAAqC,EAAE;EACjD,IAAA,MAAMnnB,IAAI,GAAGyO,UAAa,EAAQ;EAClC,IAAA,KAAK,CAACzO,IAAI,EAAEmnB,WAAW,CAAC;EAC1B,EAAA;EACF;EAlBE;EACF;EACA;EACA;EACA;EACA;EALExL,eAAA,CADW4L,QAAQ,EAAA,mBAAA,EAOiBC,iBAAiB,CAAA;;ECpNvD;EACA;EACA;;;EAgCA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMO,UAAU,CAAC;EACtB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAME;EACF;EACA;;EAGE;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGE;EACF;EACA;EACA;EACE,EAAA,OAAOlQ,MAAMA,CAACmQ,MAAwB,GAAG,EAAE,EAAE;MAC3C,OAAO,IAAID,UAAU,CAACE,WAAS,CAACD,MAAM,CAAC,EAAEE,iBAAe,CAAC;EAC3D,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;EACE,EAAA,OAAOC,KAAKA,CAACH,MAAwB,GAAG,EAAE,EAAE;EAAA,IAAA,IAAAI,cAAA;EAC1C,IAAA,MAAMC,QAAQ,GAAGJ,WAAS,CAACD,MAAM,CAAC;EAClC,IAAA,MAAMM,YAAY,GAAGnS,WAAW,CAAC5C,QAAQ,CAAC8U,QAAQ,EAAE;EAAEE,MAAAA,KAAK,EAAE;EAAK,KAAC,CAAC,CAAC;EAErE,IAAA,MAAMvoB,IAAI,GAAGqoB,QAAQ,CAACE,KAAK,KAAK9Z,OAAU,EAAE,GAAG,IAAI,GAAG4Z,QAAQ,CAACE,KAAK;EACpE,IAAA,IAAIC,QAAQ,GAAA,CAAAJ,cAAA,GAAGK,WAAS,CAACzQ,GAAG,CAAChY,IAAI,CAAC,MAAA,IAAA,IAAAooB,cAAA,KAAA,MAAA,GAAA,MAAA,GAAnBA,cAAA,CAAqBpQ,GAAG,CAACsQ,YAAY,CAAC;MACrD,IAAI,CAACE,QAAQ,EAAE;EACbA,MAAAA,QAAQ,GAAG,IAAIT,UAAU,CAACM,QAAQ,EAAEH,iBAAe,CAAC;QACpDO,WAAS,CAACf,IAAI,CAAC1nB,IAAI,CAAC,CAAC0b,GAAG,CAAC4M,YAAY,EAAEE,QAAQ,CAAC;EAClD,IAAA;EAEA,IAAA,OAAOA,QAAQ;EACjB,EAAA;EAEQ5oB,EAAAA,WAAWA,CACjBooB,MAAgC,EAChChc,GAA2B,EAC3B;MACA,IAAIA,GAAG,KAAKkc,iBAAe,EAAE;EAC3B,MAAA,MAAMzZ,uBAA0B,CAAC,mBAAmB,CAAC;EACvD,IAAA;EAMA,IAAA,MAAMia,MAAM,GAAGxB,OAAO,CAAsCyB,CAAC,KAAM;EACjEC,MAAAA,OAAO,EAAED,CAAC;EACVE,MAAAA,gBAAgB,EAAE,CAAC;EACnBC,MAAAA,WAAW,EAAEra,MAAS,EAAE;EACxBsa,MAAAA,QAAQ,EAAE,IAAI;EACdC,MAAAA,YAAY,EAAE;EAChB,KAAC,CAAC,CAAC;EAEH,IAAA,MAAMC,YAAY,GAAGxa,MAAS,EAM3B;;EAEH;;MAEA,IAAI2L,KAA2C,GAAG,IAAI;MACtD,MAAM8O,eAAe,GAAIC,OAAyB,IAAK;EAGrD,MAAA,KAAK,MAAMC,MAAM,IAAID,OAAO,EAAE;EAC5B,QAAA,MAAM7kB,MAAM,GAAGmK,QAAW,CAAC2a,MAAM,CAAC;EAClC,QAAA,MAAMC,OAAO,GAAGD,MAAM,CAACE,IAAI;;EAE3B;EACA,QAAA,IAAI,CAAC7a,SAAY,CAACnK,MAAM,CAAC,EAAE;EACzB,UAAA;EACF,QAAA;EAEA,QAAA,IAAI+kB,OAAO,KAAKzoB,YAAe,EAAE;EAC/B,UAAA,KAAK,MAAMkjB,KAAK,IAAIsF,MAAM,CAACG,UAAU,EAAE;EACrC,YAAA,IAAI9a,SAAY,CAACqV,KAAK,CAAC,EAAE;EACvB,cAAA,MAAM0F,SAAS,GAAGd,MAAM,CAAChB,IAAI,CAAC5D,KAAK,CAAC;gBACpC0F,SAAS,CAACT,QAAQ,GAAGzkB,MAAM;gBAC3BklB,SAAS,CAACX,gBAAgB,IAAIY,SAAS;EACzC,YAAA;EACF,UAAA;EAEA,UAAA,KAAK,MAAM3F,KAAK,IAAIsF,MAAM,CAACM,YAAY,EAAE;EACvC,YAAA,IAAIjb,SAAY,CAACqV,KAAK,CAAC,EAAE;EACvB,cAAA,MAAM0F,SAAS,GAAGd,MAAM,CAAChB,IAAI,CAAC5D,KAAK,CAAC;gBACpC0F,SAAS,CAACR,YAAY,GAAG1kB,MAAM;gBAC/BklB,SAAS,CAACX,gBAAgB,IAAIc,WAAW;EAC3C,YAAA;EACF,UAAA;;EAEA;WACD,MAAM,IAAIN,OAAO,KAAKzoB,YAAe,IAAIwoB,MAAM,CAACQ,aAAa,EAAE;EAC9D,UAAA,MAAMJ,SAAS,GAAGd,MAAM,CAAChB,IAAI,CAACpjB,MAAM,CAAC;YACrCklB,SAAS,CAACV,WAAW,CAACzN,GAAG,CAAC+N,MAAM,CAACQ,aAAa,CAAC;YAC/CJ,SAAS,CAACX,gBAAgB,IAAIgB,aAAa;EAC7C,QAAA;EACF,MAAA;;EAEA;EACA;QACA,IAAI,CAACzP,KAAK,IAAI3L,MAAS,CAACia,MAAM,CAAC,EAAE;EAC/BtO,QAAAA,KAAK,GAAG3L,QAAW,CAAC,MAAM;YAExB,KAAK,MAAM+a,SAAS,IAAId,MAAM,CAAC1b,MAAM,EAAE,EAAE;EACvC,YAAA,IAAI8c,mBAAmB,CAACN,SAAS,CAAC,EAAE,CAEnC,MAAM;gBACLO,gBAAgB,CAACP,SAAS,CAAC;EAC7B,YAAA;EACF,UAAA;YAEAd,MAAM,CAACZ,KAAK,EAAE;EACd1N,UAAAA,KAAK,GAAG,IAAI;WACb,EAAE,CAAC,CAAC;EACP,MAAA;OACD;EAED,IAAA,MAAM4P,SAA2C,GAAG;QAClD,CAACppB,YAAe,GAAG;EACjBqpB,QAAAA,SAAS,EAAExb,mBAAsB,CAACya,eAAe,CAAC;EAClDgB,QAAAA,SAAS,EAAE;SACZ;QACD,CAACtpB,YAAe,GAAG;EACjBqpB,QAAAA,SAAS,EAAExb,mBAAsB,CAACya,eAAe,CAAC;EAClDgB,QAAAA,SAAS,EAAE;EACb;OACD;;EAED;;EAEA,IAAA,MAAMC,cAAc,GAAGA,CACrBhQ,OAA0B,EAC1BrX,OAAkC,KACX;EAAA,MAAA,IAAAsnB,iBAAA;EACvB3b,MAAAA,MAAS,CAAA,CAAA2b,iBAAA,GAACnB,YAAY,CAACjR,GAAG,CAACmC,OAAO,CAAC,MAAA,IAAA,IAAAiQ,iBAAA,uBAAzBA,iBAAA,CAA2BC,SAAS,CAAC;EAG/C,MAAA,MAAM3nB,QAAQ,GAAG+X,YAAY,CAACN,OAAO,CAAC;QACtCzX,QAAQ,CAACsY,QAAQ,CAAC,MAAMsP,aAAa,CAACnQ,OAAO,CAAC,CAAC;EAE/C8O,MAAAA,YAAY,CAACvN,GAAG,CAACvB,OAAO,EAAE;EAAEkQ,QAAAA,SAAS,EAAE3nB,QAAQ;EAAE6nB,QAAAA,QAAQ,EAAEznB;EAAQ,OAAC,CAAC;EACrE,MAAA,OAAOJ,QAAQ;OAChB;;EAED;;EAEA,IAAA,MAAM8nB,eAAe,GAAG,OACtBrQ,OAA0B,EAC1BsQ,WAA0C,KACvC;QACH,MAAM3nB,OAAO,GAAG4nB,YAAU,CAACD,WAAW,IAAI,EAAE,CAAC;EAC7C,MAAA,MAAM/nB,QAAQ,GAAGynB,cAAc,CAAChQ,OAAO,EAAErX,OAAO,CAAC;QAEjD,IAAI9C,IAAI,GAAGgoB,MAAM,CAACO,KAAK,IAAI9Z,OAAU,EAAE;QACvC,IAAI,CAACzO,IAAI,EAAE;EACTA,QAAAA,IAAI,GAAG,MAAM+lB,cAAc,CAACtX,OAAU,CAAC;EACzC,MAAA,CAAC,MAAM;EACL;EACA,QAAA,MAAM,IAAI;EACZ,MAAA;EAEA,MAAA,IAAI/L,QAAQ,CAACiY,SAAS,EAAE,EAAE;EACxB,QAAA;EACF,MAAA;QAEA,IAAI7X,OAAO,CAAC+lB,gBAAgB,IAAIY,SAAS,GAAGE,WAAW,CAAC,EAAE;EACxDgB,QAAAA,gBAAgB,CAAC3qB,IAAI,EAAEY,YAAe,CAAC;EACzC,MAAA;EAEA,MAAA,IAAIkC,OAAO,CAAC+lB,gBAAgB,GAAGgB,aAAa,EAAE;EAC5Cc,QAAAA,gBAAgB,CAAC3qB,IAAI,EAAEY,YAAe,CAAC;EACzC,MAAA;QAEA,IACE6pB,WAAW,aAAXA,WAAW,KAAA,MAAA,IAAXA,WAAW,CAAEG,WAAW,IACxB,CAAC9nB,OAAO,CAAC+nB,SAAS,IAClB,EAAE/nB,OAAO,CAAC+lB,gBAAgB,GAAGY,SAAS,CAAC,EACvC;EACA,QAAA;EACF,MAAA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAA,MAAMqB,UAAU,GAAGd,SAAS,CAACppB,YAAe,CAAC,CAACqpB,SAAS,CAACc,WAAW,EAAE;QACrE7B,eAAe,CAAC4B,UAAU,CAAC;EAE3B,MAAA,KAAK,MAAM5f,OAAO,IAAI,CACpB,GAAGuD,gBAAmB,CAACzO,IAAI,EAAE8C,OAAO,CAAC+nB,SAAS,CAAC,EAC/C,IAAI7qB,IAAI,CAACgrB,OAAO,CAACloB,OAAO,CAAC+nB,SAAS,CAAC,GAAG,CAAC7qB,IAAI,CAAC,GAAG,EAAE,CAAC,CACnD,EAAE;EACD,QAAA,MAAMirB,aAAwC,GAAG;EAC/CrC,UAAAA,OAAO,EAAE1d,OAAO;EAChB2d,UAAAA,gBAAgB,EAAEY,SAAS;EAC3BX,UAAAA,WAAW,EAAEra,MAAS,EAAE;EACxBsa,UAAAA,QAAQ,EAAEta,QAAW,CAACvD,OAAO,CAAC;EAC9B8d,UAAAA,YAAY,EAAE;WACf;EAED,QAAA,MAAMkC,iBAAiB,GAAGxC,MAAM,CAAC1Q,GAAG,CAAC9M,OAAO,CAAC;EAC7C,QAAA,MAAMigB,aAAa,GAAGC,gBAAgB,CACpCH,aAAa,EACbC,iBACF,CAAC;EAED,QAAA,IAAIC,aAAa,EAAE;EACjB,UAAA,IAAIrB,mBAAmB,CAACqB,aAAa,CAAC,EAAE,CAEvC,MAAM;EAEL,YAAA,MAAME,gBAAc,CAAC3oB,QAAQ,EAAEyoB,aAAa,CAAC;EAC/C,UAAA;EACF,QAAA;EACF,MAAA;OACD;;EAED;;MAEA,MAAMb,aAAa,GAAInQ,OAA0B,IAAK;EACpD1L,MAAAA,SAAY,CAACwa,YAAY,EAAE9O,OAAO,CAAC;QAEnC,IAAImR,gBAAgB,GAAG,CAAC;QACxB,KAAK,MAAMC,KAAK,IAAItC,YAAY,CAACjc,MAAM,EAAE,EAAE;EACzCse,QAAAA,gBAAgB,IAAIC,KAAK,CAAChB,QAAQ,CAAC1B,gBAAgB;EACrD,MAAA;QAEA,IAAI,EAAEyC,gBAAgB,IAAI7B,SAAS,GAAGE,WAAW,CAAC,CAAC,EAAE;EACnD6B,QAAAA,kBAAkB,CAAC5qB,YAAe,CAAC;EACrC,MAAA;EAEA,MAAA,IAAI,EAAE0qB,gBAAgB,GAAGzB,aAAa,CAAC,EAAE;EACvC2B,QAAAA,kBAAkB,CAAC5qB,YAAe,CAAC;EACrC,MAAA;OACD;;EAED;;MAEA,MAAMmpB,gBAAgB,GAAIP,SAAoC,IAAK;QAGjE,KAAK,MAAM+B,KAAK,IAAItC,YAAY,CAACjc,MAAM,EAAE,EAAE;EACzC,QAAA,MAAMye,eAAe,GAAGF,KAAK,CAAChB,QAAQ,CAAC1B,gBAAgB;EACvD,QAAA,MAAMvkB,MAAM,GAAGinB,KAAK,CAAChB,QAAQ,CAAC3B,OAAO;EACrC,QAAA,MAAMjiB,QAAQ,GAAG4kB,KAAK,CAAChB,QAAQ,CAACM,SAAS;EAEzC,QAAA,IAAI,EAAErB,SAAS,CAACX,gBAAgB,GAAG4C,eAAe,CAAC,EAAE;EAEnD,UAAA;EACF,QAAA;UAEA,MAAMC,cAAc,GAAG,EAAE;EACzB,QAAA,IAAIpnB,MAAM,EAAE;YACV,IAAI,CAACklB,SAAS,CAACZ,OAAO,CAACtJ,QAAQ,CAAChb,MAAM,CAAC,EAAE;EAEvC,YAAA;EACF,UAAA;EAEAonB,UAAAA,cAAc,CAAC3W,IAAI,CAACzQ,MAAM,CAAC;EAC7B,QAAA;EAEA,QAAA,IAAIqC,QAAQ,EAAE;EACZ,UAAA,MAAMqkB,OAAO,GAAG,CAAC,GAAGvc,gBAAmB,CAAC+a,SAAS,CAACZ,OAAO,EAAEjiB,QAAQ,CAAC,CAAC;YAErE,IAAI6iB,SAAS,CAACZ,OAAO,CAACoC,OAAO,CAACrkB,QAAQ,CAAC,EAAE;EACvCqkB,YAAAA,OAAO,CAACjW,IAAI,CAACyU,SAAS,CAACZ,OAAO,CAAC;EACjC,UAAA;EAEA,UAAA,IAAI,CAACna,QAAW,CAACuc,OAAO,CAAC,EAAE;EAEzB,YAAA;EACF,UAAA;EAEAU,UAAAA,cAAc,CAAC3W,IAAI,CAAC,GAAGiW,OAAO,CAAC;EACjC,QAAA;UAEAK,gBAAc,CAACE,KAAK,CAAClB,SAAS,EAAEb,SAAS,EAAEkC,cAAc,CAAC;EAC5D,MAAA;OACD;;EAED;;EAEA,IAAA,MAAMf,gBAAgB,GAAGA,CAAC3qB,IAAa,EAAE2rB,YAA0B,KAAK;EACtE,MAAA,IAAI,CAAC3B,SAAS,CAAC2B,YAAY,CAAC,CAACzB,SAAS,EAAE;UAItCF,SAAS,CAAC2B,YAAY,CAAC,CAAC1B,SAAS,CAAC7D,OAAO,CAACpmB,IAAI,EAAE;YAC9C,CAAC2rB,YAAY,GAAG,IAAI;YACpBrF,OAAO,EAAE0B,MAAM,CAAC4D;EAClB,SAAC,CAAC;EACF5B,QAAAA,SAAS,CAAC2B,YAAY,CAAC,CAACzB,SAAS,GAAG,IAAI;EAC1C,MAAA;OACD;;EAED;;MAEA,MAAMsB,kBAAkB,GAAIG,YAA0B,IAAK;EACzD,MAAA,IAAI3B,SAAS,CAAC2B,YAAY,CAAC,CAACzB,SAAS,EAAE;UAIrCF,SAAS,CAAC2B,YAAY,CAAC,CAAC1B,SAAS,CAAC9D,UAAU,EAAE;EAC9C6D,QAAAA,SAAS,CAAC2B,YAAY,CAAC,CAACzB,SAAS,GAAG,KAAK;EAC3C,MAAA;OACD;;EAED;;MAEA,MAAMJ,mBAAmB,GACvBN,SAAoC,IACxB;EACZ,MAAA,MAAMllB,MAAM,GAAGklB,SAAS,CAACZ,OAAO;EAChC,MAAA,MAAMiD,aAAa,GAAGrG,aAAa,CAAClhB,MAAM,CAAC;QAC3C,IAAI,CAACunB,aAAa,EAAE;EAClB,QAAA,OAAO,KAAK;EACd,MAAA;EAEA,MAAA,MAAMC,WAAW,GAAGtC,SAAS,CAACR,YAAY;EAC1C,MAAA,MAAM+C,OAAO,GAAGtd,QAAW,CAACnK,MAAM,CAAC;EACnC,MAAA,MAAM0nB,WAAW,GAAGH,aAAa,CAAChjB,IAAI;EACtC,MAAA,MAAMojB,SAAS,GAAGJ,aAAa,CAAC1I,EAAE;QAElC,MAAMnjB,IAAI,GAAGgoB,MAAM,CAACO,KAAK,IAAI9Z,OAAU,EAAE;EACzC;EACA;EACA,MAAA,IACE,CAACqd,WAAW,KAAKE,WAAW,IAAI,CAAChsB,IAAI,CAACsf,QAAQ,CAAC0M,WAAW,CAAC,KAC3DD,OAAO,KAAKE,SAAS,EACrB;UACAxG,eAAe,CAACnhB,MAAM,CAAC;EACvB,QAAA,OAAO,IAAI;EACb,MAAA;EAEA,MAAA,OAAO,KAAK;OACb;;EAED;;MAEA,IAAI,CAAC4e,UAAU,GAAGA,UAAU;;EAE5B;;MAEA,IAAI,CAACgJ,UAAU,GAAG1B,eAAe;;EAEjC;;EAEA,IAAA,IAAI,CAAC2B,WAAW,GAAIhS,OAAO,IAAK;EAAA,MAAA,IAAAiS,kBAAA;EAE9B3d,MAAAA,MAAS,CAAA,CAAA2d,kBAAA,GAACnD,YAAY,CAACjR,GAAG,CAACmC,OAAO,CAAC,MAAA,IAAA,IAAAiS,kBAAA,uBAAzBA,kBAAA,CAA2B/B,SAAS,CAAC;OAChD;EACH,EAAA;EACF;;EAEA;EACA;EACA;;EAqBA;EACA;EACA;;EAqGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAOA;;EA4BA,MAAMnC,iBAA8B,GAAGtnB,MAAS,EAA4B;EAC5E,MAAM6nB,WAAS,GAAGvB,OAAO,CAA0C,MACjEzY,MAAS,EACX,CAAC;EAED,MAAMwZ,WAAS,GAAID,MAAwB,IAA+B;EAAA,EAAA,IAAAqE,eAAA;IACxE,OAAO;EACL9D,IAAAA,KAAK,EAAEP,MAAM,CAAChoB,IAAI,IAAI,IAAI;MAC1B4rB,QAAQ,EAAA,CAAAS,eAAA,GAAErE,MAAM,CAAC1B,OAAO,MAAA,IAAA,IAAA+F,eAAA,KAAA,MAAA,GAAAA,eAAA,GAAI;KAC7B;EACH,CAAC;EAED,MAAMC,eAAe,GAAGlT,oBAAoB,CAACZ,GAAG;EAChD,MAAMiR,SAAS,GAAG6C,eAAe,CAAC1rB,OAAU,CAAC;EAC7C,MAAM+oB,WAAW,GAAG2C,eAAe,CAAC1rB,SAAY,CAAC;EACjD,MAAMipB,aAAa,GAAGyC,eAAe,CAAC1rB,WAAc,CAAC;;EAErD;;EAEA,MAAM8pB,YAAU,GAAI5nB,OAA0B,IAAgC;IAC5E,IAAI2oB,eAAe,GAAG,CAAC;EACvB,EAAA,MAAMc,UAAU,GAAG7V,eAAe,CAChC,YAAY,EACZ5T,OAAO,CAACypB,UAAU,EAClBnT,oBAAoB,CAACX,GACvB,CAAC;EAED,EAAA,IAAI8T,UAAU,EAAE;EACd,IAAA,KAAK,MAAMC,GAAG,IAAID,UAAU,EAAE;EAC5Bd,MAAAA,eAAe,IAAIa,eAAe,CAACE,GAAG,CAAC;EACzC,IAAA;EACF,EAAA,CAAC,MAAM;EACLf,IAAAA,eAAe,GAAGrS,oBAAoB,CAACd,OAAO,CAAC;EACjD,EAAA;EAEA,EAAA,MAAM3R,QAAQ,GAAG7D,OAAO,CAAC6D,QAAQ,IAAI,EAAE;EACvC,EAAA,IAAI,CAAC8H,QAAW,CAAC9H,QAAQ,CAAC,EAAE;EAC1B,IAAA,MAAM8H,UAAa,CAAC,6BAA6B,CAAC;EACpD,EAAA;IAEA,OAAO;EACLoa,IAAAA,gBAAgB,EAAE4C,eAAe;EACjC7C,IAAAA,OAAO,EAAE9lB,OAAO,CAACwB,MAAM,IAAI,IAAI;EAC/BumB,IAAAA,SAAS,EAAE/nB,OAAO,CAAC6D,QAAQ,IAAI;KAChC;EACH,CAAC;EAED,MAAMykB,gBAAgB,GAAGA,CACvBqB,UAAqC,EACrCC,UAAiD,KACZ;IACrC,IAAI,CAACA,UAAU,IAAID,UAAU,CAAC7D,OAAO,KAAK8D,UAAU,CAAC9D,OAAO,EAAE;EAC5D,IAAA,OAAO6D,UAAU;EACnB,EAAA;EAEA,EAAA,MAAME,UAAU,GAAGle,MAAS,EAAU;EACtC,EAAA,KAAK,MAAMme,IAAI,IAAIH,UAAU,CAAC3D,WAAW,EAAE;MACzC,IAAI,CAAC4D,UAAU,CAAC5D,WAAW,CAACrQ,GAAG,CAACmU,IAAI,CAAC,EAAE;EACrCD,MAAAA,UAAU,CAACtR,GAAG,CAACuR,IAAI,CAAC;EACtB,IAAA;EACF,EAAA;IAEA,MAAMnB,eAAe,GACnBgB,UAAU,CAAC5D,gBAAgB,GAAG6D,UAAU,CAAC7D,gBAAgB;EAE3D,EAAA,MAAMkD,OAAO,GACXU,UAAU,CAAC1D,QAAQ,KAAK2D,UAAU,CAAC3D,QAAQ,GAAG,IAAI,GAAG0D,UAAU,CAAC1D,QAAQ;EAE1E,EAAA,MAAM+C,WAAW,GACfW,UAAU,CAACzD,YAAY,KAAK0D,UAAU,CAAC1D,YAAY,GAC/C,IAAI,GACJyD,UAAU,CAACzD,YAAY;EAE7B,EAAA,IAAI,CAACva,MAAS,CAACke,UAAU,CAAC,IAAI,CAAClB,eAAe,IAAI,CAACM,OAAO,IAAI,CAACD,WAAW,EAAE;EAC1E,IAAA,OAAO,IAAI;EACb,EAAA;IAEA,OAAO;MACLlD,OAAO,EAAE6D,UAAU,CAAC7D,OAAO;EAC3BC,IAAAA,gBAAgB,EAAE4C,eAAe;EACjC3C,IAAAA,WAAW,EAAE6D,UAAU;EACvB5D,IAAAA,QAAQ,EAAEgD,OAAO;EACjB/C,IAAAA,YAAY,EAAE8C;KACf;EACH,CAAC;EAED,MAAMT,gBAAc,GAAGA,CACrB3oB,QAA4B,EAC5B8mB,SAAoC,EACpCkC,cAAyB,GAAG,EAAE,KAC3B;EACH,EAAA,IAAI,CAACjd,QAAW,CAACid,cAAc,CAAC,EAAE;EAChCA,IAAAA,cAAc,GAAG,CAAClC,SAAS,CAACZ,OAAO,CAAC;EACtC,EAAA;EAEA,EAAA,KAAK,MAAMpd,aAAa,IAAIkgB,cAAc,EAAE;MAC1ChpB,QAAQ,CACLmY,MAAM,CAAC;QACNvW,MAAM,EAAEklB,SAAS,CAACZ,OAAO;QACzBpd,aAAa;QACbmhB,UAAU,EAAEnD,SAAS,CAACV,WAAW;QACjCiD,OAAO,EAAEvC,SAAS,CAACT,QAAQ;QAC3B+C,WAAW,EAAEtC,SAAS,CAACR;EACzB,KAAC,CAAC,CACD6D,KAAK,CAACvQ,QAAQ,CAAC;EACpB,EAAA;EACF,CAAC;;ECpuBD;EACA;EACA;;;EAkBA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMwQ,oBAAoB,GAAGA,CAClCC,MAAc,EACdC,MAAc,KACqC;EACnD,EAAA,IAAI,CAACve,GAAM,CAACse,MAAM,CAAC,IAAI,CAACte,GAAM,CAACue,MAAM,CAAC,EAAE;MACtC,OAAOpsB,MAAS;EAClB,EAAA;EAEA,EAAA,IAAI6N,GAAM,CAACse,MAAM,CAAC,KAAKte,GAAM,CAACue,MAAM,CAAC,EAAE;MACrC,OAAOpsB,WAAc;EACvB,EAAA;EAEA,EAAA,IAAI6N,GAAM,CAACse,MAAM,CAAC,GAAGte,GAAM,CAACue,MAAM,CAAC,EAAE;MACnC,OAAOD,MAAM,GAAG,CAAC,GAAGnsB,MAAS,GAAGA,OAAU;EAC5C,EAAA;IACA,OAAOosB,MAAM,GAAG,CAAC,GAAGpsB,IAAO,GAAGA,MAAS;EACzC,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMqsB,kBAAkB,GAAGA,CAChCC,MAAc,EACd3a,kBAAkB,GAAG,CAAC,KAC6B;EACnDA,EAAAA,kBAAkB,GAAG9D,GAAM,CAAC,KAAK,EAAEA,GAAM,CAAC8D,kBAAkB,CAAC,CAAC;EAE9D,EAAA,IAAI,CAACX,MAAM,CAAC,GAAGsb,MAAM,CAAC,EAAE;MACtB,OAAOtsB,MAAS;EAClB,EAAA,CAAC,MAAM,IAAIwR,WAAW,CAAC8a,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE3a,kBAAkB,CAAC,EAAE;MAC1D,OAAO3R,OAAU;EACnB,EAAA,CAAC,MAAM,IAAIwR,WAAW,CAAC8a,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE3a,kBAAkB,CAAC,EAAE;MAC1D,OAAO3R,MAAS;EAClB,EAAA,CAAC,MAAM,IAAIwR,WAAW,CAAC8a,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE3a,kBAAkB,CAAC,EAAE;MAC3D,OAAO3R,MAAS;EAClB,EAAA,CAAC,MAAM,IAAIwR,WAAW,CAAC8a,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE3a,kBAAkB,CAAC,EAAE;MAC3D,OAAO3R,IAAO;EAChB,EAAA;IAEA,OAAOA,WAAc;EACvB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMusB,oBAAoB,GAC/BC,SAAoB,IACC;EACrB,EAAA,IAAI,EAAEA,SAAS,IAAIC,mBAAmB,CAAC,EAAE;EACvC,IAAA,MAAM5e,UAAa,CAAC,qBAAqB,CAAC;EAC5C,EAAA;IAEA,OAAO4e,mBAAmB,CAACD,SAAS,CAAC;EACvC,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAME,uBAAuB,GAClCC,UAA0D,IACxC;IAClB,MAAMC,aAAa,GAAG9W,eAAe,CACnC,YAAY,EACZ6W,UAAU,EACVE,kBACF,CAAC;IAED,IAAI,CAACD,aAAa,EAAE;EAClB,IAAA,MAAM/e,UAAa,CAAC,0BAA0B,CAAC;EACjD,EAAA;IAEA,MAAMif,SAAwB,GAAG,EAAE;EACnC,EAAA,KAAK,MAAMN,SAAS,IAAII,aAAa,EAAE;EACrC,IAAA,MAAMG,QAAQ,GAAGR,oBAAoB,CAACC,SAAS,CAAC;EAChD,IAAA,IACEO,QAAQ,IACRF,kBAAkB,CAACE,QAAQ,CAAC,IAC5B,CAAClf,QAAW,CAAC+e,aAAa,EAAEG,QAAQ,CAAC,EACrC;EACAD,MAAAA,SAAS,CAAC3Y,IAAI,CAAC4Y,QAAQ,CAAC;EAC1B,IAAA;EACF,EAAA;EAEA,EAAA,IAAI,CAAClf,QAAW,CAACif,SAAS,CAAC,EAAE;EAC3B,IAAA,KAAK,MAAMN,SAAS,IAAIQ,aAAa,EAAE;QACrC,IAAI,CAACnf,QAAW,CAAC+e,aAAa,EAAEJ,SAAS,CAAC,EAAE;EAC1CM,QAAAA,SAAS,CAAC3Y,IAAI,CAACqY,SAAS,CAAC;EAC3B,MAAA;EACF,IAAA;EACF,EAAA;EAEA,EAAA,OAAOM,SAAS;EAClB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACO,MAAMD,kBAAkB,GAC7BL,SAAiB,IACY3e,QAAW,CAACmf,aAAa,EAAER,SAAS,CAAC;;EAUpE;EACA;EACA;EACA;EACA;EACO,MAAMS,gBAAgB,GAAIT,SAAiB,IAChD3e,QAAW,CAACqf,UAAU,EAAEV,SAAS,CAAC;;EAYpC;EACA;EACA;EACA;EACO,MAAMQ,aAAa,GAAG,CAC3BhtB,IAAO,EACPA,MAAS,EACTA,MAAS,EACTA,OAAU,CACF;;EAEV;EACA;EACA;EACA;EACO,MAAMmtB,YAAY,GAAG,CAACntB,IAAO,EAAEA,KAAQ,CAAU;;EAExD;EACA;EACA;EACA;EACO,MAAMotB,iBAAiB,GAAG,CAC/B,GAAGJ,aAAa,EAChBhtB,MAAS,EACTA,WAAc,CACN;;EAEV;EACA;EACA;EACA;EACO,MAAMktB,UAAU,GAAG,CACxB,GAAGF,aAAa,EAChB,GAAGG,YAAY,EACfntB,MAAS,EACTA,WAAc,CACN;;EAEV;;EAEA,MAAMysB,mBAAmB,GAAG;EAC1B,EAAA,CAACzsB,IAAO,GAAGA,MAAS;EACpB,EAAA,CAACA,MAAS,GAAGA,IAAO;EACpB,EAAA,CAACA,MAAS,GAAGA,OAAU;EACvB,EAAA,CAACA,OAAU,GAAGA,MAAS;EACvB,EAAA,CAACA,IAAO,GAAGA,KAAQ;EACnB,EAAA,CAACA,KAAQ,GAAGA,IAAO;EACnB,EAAA,CAACA,MAAS,GAAG,IAAI;IACjB,CAACA,WAAc,GAAG;EACpB,CAAU;;ECpQV;EACA;EACA;;;EAUA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMqtB,iBAAiB,GAAGA,CAC/B9T,OAA2C,EAC3C9X,KAAY,KACT;EACH,EAAA,IAAIoM,UAAa,CAAC0L,OAAO,CAAC,EAAE;MAC1BA,OAAO,CAACrQ,IAAI,CAACzH,KAAK,CAACmJ,aAAa,IAAIvL,IAAI,EAAEoC,KAAK,CAAC;EAClD,EAAA,CAAC,MAAM;EACL8X,IAAAA,OAAO,CAAC+T,WAAW,CAACpkB,IAAI,CAACzH,KAAK,CAACmJ,aAAa,IAAIvL,IAAI,EAAEoC,KAAK,CAAC;EAC9D,EAAA;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAM8rB,kBAAkB,GAAGA,CAChC7pB,MAAmB,EACnB8pB,SAAiB,EACjBjU,OAA2C,EAC3CrX,OAA0C,GAAG,EAAE,KACnC;EACZsrB,EAAAA,SAAS,GAAGC,kBAAkB,CAACD,SAAS,CAAC;IACzC,IAAIE,mBAAmB,CAAChqB,MAAM,EAAE8pB,SAAS,EAAEjU,OAAO,EAAErX,OAAO,CAAC,EAAE;EAC5D;EACA,IAAA,OAAO,KAAK;EACd,EAAA;IAEA,IAAIyrB,QAAQ,GAAGzrB,OAAO;IACtB,IAAI0rB,cAAc,GAAGrU,OAAO;;EAE5B;EACA;EACA,EAAA,MAAMsU,QAAQ,GAAGC,iBAAiB,EAAE;EACpC,EAAA,IAAIjgB,cAAiB,CAAC3L,OAAO,CAAC,EAAE;EAC9B,IAAA,IAAI,CAAC2rB,QAAQ,CAACE,WAAW,EAAE;EAAA,MAAA,IAAAC,gBAAA;QACzBL,QAAQ,GAAA,CAAAK,gBAAA,GAAG9rB,OAAO,CAAC+rB,OAAO,MAAA,IAAA,IAAAD,gBAAA,KAAA,MAAA,GAAAA,gBAAA,GAAI,KAAK;EACrC,IAAA;MAEA,IAAI9rB,OAAO,CAACgsB,IAAI,IAAI,CAACL,QAAQ,CAAClE,QAAQ,CAACuE,IAAI,EAAE;EAC3C;QACAN,cAAc,GAAInsB,KAAK,IAAK;UAC1B0sB,uBAAuB,CAACzqB,MAAM,EAAE8pB,SAAS,EAAEjU,OAAO,EAAErX,OAAO,CAAC;EAC5DmrB,QAAAA,iBAAiB,CAAC9T,OAAO,EAAE9X,KAAK,CAAC;QACnC,CAAC;EACH,IAAA;EACF,EAAA;IAEA2sB,mBAAmB,CAAC1qB,MAAM,EAAE8pB,SAAS,EAAEjU,OAAO,EAAErX,OAAO,EAAE;EACvDmsB,IAAAA,eAAe,EAAET,cAAc;EAC/BU,IAAAA,SAAS,EAAEX;EACb,GAAC,CAAC;IAEFjqB,MAAM,CAACsiB,gBAAgB,CAACwH,SAAS,EAAEI,cAAc,EAAED,QAAQ,CAAC;EAC5D,EAAA,OAAO,IAAI;EACb,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMQ,uBAAuB,GAAGA,CACrCzqB,MAAmB,EACnB8pB,SAAiB,EACjBjU,OAA2C,EAC3CrX,OAA0C,GAAG,EAAE,KAC5C;EACHsrB,EAAAA,SAAS,GAAGC,kBAAkB,CAACD,SAAS,CAAC;IACzC,MAAMe,IAAI,GAAGb,mBAAmB,CAAChqB,MAAM,EAAE8pB,SAAS,EAAEjU,OAAO,EAAErX,OAAO,CAAC;IAErE,IAAI,CAACqsB,IAAI,EAAE;EACT,IAAA,OAAO,KAAK;EACd,EAAA;EAEA7qB,EAAAA,MAAM,CAAC8qB,mBAAmB,CAAChB,SAAS,EAAEe,IAAI,CAACF,eAAe,EAAEE,IAAI,CAACD,SAAS,CAAC;IAC3EG,sBAAsB,CAAC/qB,MAAM,EAAE8pB,SAAS,EAAEjU,OAAO,EAAErX,OAAO,CAAC;EAC3D,EAAA,OAAO,IAAI;EACb,CAAC;;EAED;EACA;EACA;EACA;EACO,MAAMwsB,aAAa,GAAIhrB,MAAmB,IAAK;IACpD6pB,kBAAkB,CAAC7pB,MAAM,EAAE1D,aAAgB,EAAE6N,cAAiB,CAAC;EAC/D,EAAA,IAAIA,SAAY,CAACnK,MAAM,CAAC,EAAE;EACxBkb,IAAAA,UAAU,CAAClb,MAAM,EAAE1D,gBAAmB,CAAC;EACzC,EAAA;EACF,CAAC;;EAED;EACA;EACA;EACA;EACO,MAAM2uB,iBAAiB,GAAIjrB,MAAmB,IAAK;IACxDyqB,uBAAuB,CAACzqB,MAAM,EAAE1D,aAAgB,EAAE6N,cAAiB,CAAC;EACpE,EAAA,IAAIA,SAAY,CAACnK,MAAM,CAAC,EAAE;EACxBmb,IAAAA,aAAa,CAACnb,MAAM,EAAE1D,gBAAmB,CAAC;EAC5C,EAAA;EACF,CAAC;;EAED;EACA;EACA;EACA;EACO,MAAM8tB,iBAAiB,GAAGA,MAA2B;EAC1D,EAAA,IAAIc,mBAAmB,EAAE;EACvB;EACA,IAAA,OAAOA,mBAAmB;EAC5B,EAAA;EAEA,EAAA,MAAMf,QAAQ,GAAG;EACfgB,IAAAA,QAAQ,EAAE,KAAK;EACfd,IAAAA,WAAW,EAAE,KAAK;EAClBpE,IAAAA,QAAQ,EAAE;EACRsE,MAAAA,OAAO,EAAE,KAAK;EACda,MAAAA,OAAO,EAAE,KAAK;EACdZ,MAAAA,IAAI,EAAE,KAAK;EACXa,MAAAA,MAAM,EAAE;EACV;KACD;;EAED;IACA,MAAMC,OAAO,GAAG,EAAE;EAClB,EAAA,IAAIC,GAAmC;EACvC,EAAA,KAAKA,GAAG,IAAIpB,QAAQ,CAAClE,QAAQ,EAAE;MAC7B,MAAMuF,OAAO,GAAGD,GAAG;EACnBphB,IAAAA,cAAiB,CAACmhB,OAAO,EAAEE,OAAO,EAAE;QAClC9X,GAAG,EAAEA,MAAM;EACTyW,QAAAA,QAAQ,CAAClE,QAAQ,CAACuF,OAAO,CAAC,GAAG,IAAI;UACjC,IAAIA,OAAO,KAAK,QAAQ,EAAE;EACxB,UAAA,OAAO,IAAIC,eAAe,EAAE,CAACJ,MAAM;EACrC,QAAA;EACA,QAAA,OAAO,KAAK;EACd,MAAA;EACF,KAAC,CAAC;EACJ,EAAA;EAEA,EAAA,MAAMK,YAAY,GAAGA,MAAM,CAAC,CAAC,CAAC;EAC9B,EAAA,MAAMC,YAAY,GAAGxhB,aAAgB,CAAC,KAAK,CAAC;IAC5C,IAAI;MACFwhB,YAAY,CAACrJ,gBAAgB,CAAC,mBAAmB,EAAEoJ,YAAY,EAAEJ,OAAO,CAAC;MACzEK,YAAY,CAACb,mBAAmB,CAC9B,mBAAmB,EACnBY,YAAY,EACZJ,OACF,CAAC;MACDnB,QAAQ,CAACE,WAAW,GAAG,IAAI;IAC7B,CAAC,CAAC,OAAOuB,UAAU,EAAE;EACnB;EAAA,EAAA;EAGFzB,EAAAA,QAAQ,CAACgB,QAAQ,GAAG,aAAa,IAAIQ,YAAY;EAEjDT,EAAAA,mBAAmB,GAAGf,QAAQ;EAC9B,EAAA,OAAOA,QAAQ;EACjB,CAAC;;EAED;;EAOA,IAAIe,mBAAwC;EAE5C,MAAMW,0BAA0B,GAAG7I,WAAW,CAY5CD,aAAa,CAACA,aAAa,CAAC,MAAM5Y,MAAS,EAAE,CAAC,CAAC,CAAC;;EAElD;;EAYA,MAAM2hB,kBAAkB,GACtBttB,OAA0C,IAC/B;EACX,EAAA,MAAMutB,YAAqC,GAAG;EAC5CxB,IAAAA,OAAO,EAAE,KAAK;EACda,IAAAA,OAAO,EAAE,KAAK;EACdZ,IAAAA,IAAI,EAAE;KACP;EAED,EAAA,IAAIhsB,OAAO,KAAK,KAAK,IAAIA,OAAO,KAAK,IAAI,EAAE;MACzCutB,YAAY,CAACxB,OAAO,GAAG/rB,OAAO;IAChC,CAAC,MAAM,IAAI2L,QAAW,CAAC3L,OAAO,CAAC,EAAE;EAC/BsQ,IAAAA,gBAAgB,CAACtQ,OAAO,EAAEutB,YAAY,CAAC;EACzC,EAAA;EAEA,EAAA,OAAO5hB,SAAY,CAAC4hB,YAAY,CAAC;EACnC,CAAC;EAED,MAAM/B,mBAAmB,GAAGA,CAC1BhqB,MAAmB,EACnB8pB,SAAiB,EACjBjU,OAA2C,EAC3CrX,OAA0C,KACvC;EAAA,EAAA,IAAAwtB,qBAAA;EACH,EAAA,MAAMC,UAAU,GAAGH,kBAAkB,CAACttB,OAAO,CAAC;EAC9C,EAAA,OAAA,CAAAwtB,qBAAA,GAAOH,0BAA0B,CAC9BnY,GAAG,CAAC1T,MAAM,CAAC,MAAA,IAAA,IAAAgsB,qBAAA,gBAAAA,qBAAA,GADPA,qBAAA,CAEHtY,GAAG,CAACoW,SAAS,CAAC,MAAA,IAAA,IAAAkC,qBAAA,gBAAAA,qBAAA,GAFXA,qBAAA,CAGHtY,GAAG,CAACmC,OAAO,CAAC,MAAA,IAAA,IAAAmW,qBAAA,KAAA,MAAA,GAAA,MAAA,GAHTA,qBAAA,CAIHtY,GAAG,CAACuY,UAAU,CAAC;EACrB,CAAC;EAED,MAAMlB,sBAAsB,GAAGA,CAC7B/qB,MAAmB,EACnB8pB,SAAiB,EACjBjU,OAA2C,EAC3CrX,OAA0C,KACvC;EAAA,EAAA,IAAA0tB,sBAAA;EACH,EAAA,MAAMD,UAAU,GAAGH,kBAAkB,CAACttB,OAAO,CAAC;EAC9C2L,EAAAA,SAAY,CAAA,CAAA+hB,sBAAA,GACVL,0BAA0B,CAACnY,GAAG,CAAC1T,MAAM,CAAC,MAAA,IAAA,IAAAksB,sBAAA,gBAAAA,sBAAA,GAAtCA,sBAAA,CAAwCxY,GAAG,CAACoW,SAAS,CAAC,cAAAoC,sBAAA,KAAA,MAAA,GAAA,MAAA,GAAtDA,sBAAA,CAAwDxY,GAAG,CAACmC,OAAO,CAAC,EACpEoW,UACF,CAAC;IACDJ,0BAA0B,CAACxI,KAAK,CAACrjB,MAAM,EAAE8pB,SAAS,EAAEjU,OAAO,CAAC;EAC9D,CAAC;EAED,MAAM6U,mBAAmB,GAAGA,CAC1B1qB,MAAmB,EACnB8pB,SAAiB,EACjBjU,OAA2C,EAC3CrX,OAA0C,EAC1CqsB,IAAsB,KACnB;EACH,EAAA,MAAMoB,UAAU,GAAGH,kBAAkB,CAACttB,OAAO,CAAC;IAC9CqtB,0BAA0B,CACvBzI,IAAI,CAACpjB,MAAM,CAAC,CACZojB,IAAI,CAAC0G,SAAS,CAAC,CACf1G,IAAI,CAACvN,OAAO,CAAC,CACbuB,GAAG,CAAC6U,UAAU,EAAEpB,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMd,kBAAkB,GAAID,SAAiB,IAAK;EAChD,EAAA,MAAMK,QAAQ,GAAGC,iBAAiB,EAAE;EACpC,EAAA,IAAIN,SAAS,CAACqC,UAAU,CAAC7vB,SAAY,CAAC,IAAI,CAAC6tB,QAAQ,CAACgB,QAAQ,EAAE;EAC5D;EACA;EACA,IAAA,OAAOhhB,UAAa,CAAC2f,SAAS,EAAExtB,SAAY,EAAEA,OAAU,CAAC;EAC3D,EAAA;EAEA,EAAA,OAAOwtB,SAAS;EAClB,CAAC;;EC3SD;EACA;EACA;;;EASA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAUA;EACA;EACA;EACA;EACA;EACO,MAAMsC,kBAAkB,GAAIC,MAAc,IAC/CliB,QAAW,CAACmiB,OAAO,EAAED,MAAM,CAAC;;EAE9B;EACA;EACA;EACA;EACA;EACO,MAAME,aAAa,GAAIC,MAAc,IAC1CriB,QAAW,CAACsiB,OAAO,EAAED,MAAM,CAAC;;EAoB9B;EACA;EACA;EACA;EACO,MAAME,SAAS,GAAGA,CAACC,OAAe,EAAEC,SAAiB,KAC1DziB,GAAM,CAAC0iB,WAAW,EAAEF,OAAO,GAAGC,SAAS,CAAC;;EAE1C;EACA;EACA;EACA;EACO,MAAMN,OAAwB,GAAG,CACtChwB,KAAQ,EACRA,SAAY,EACZA,OAAU,EACVA,OAAU,CACF;;EAEV;EACA;EACA;EACA;EACO,MAAMmwB,OAAwB,GAAG,CACtCnwB,QAAW,EACXA,MAAS,EACTA,MAAS,EACTA,SAAY,CACJ;;EAEV;EACA,MAAMuwB,WAAW,GAAG,GAAG;;ECxGvB;EACA;EACA;;;EAaA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMC,qBAAqB,GAAGA,CACnCC,MAAgC,EAChCvuB,OAGC,KAC2B;EAAA,EAAA,IAAAwuB,qBAAA;EAC5B,EAAA,IAAI,CAAC7iB,gBAAmB,CAAC4iB,MAAM,CAAC,EAAE;MAChCA,MAAM,GAAG,CAACA,MAAM,CAAC;EACnB,EAAA;EAEA,EAAA,MAAME,IAAI,GAAG/iB,QAAQ,CAAC8B,eAAe;EACrC,EAAA,MAAMkhB,IAAI,GAAGhjB,QAAQ,CAACgC,eAAe;EACrC,EAAA,MAAMihB,OAAO,GAAA,CAAAH,qBAAA,GA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CG,SAAS;EACnE,CAAC;;EC/RD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMC,cAAc,GAAIt0B,KAAuB,IAAgB;IACpE,IAAIu0B,KAAK,GAAG,CAAC;EACXC,IAAAA,KAAK,GAAG,CAAC;MACTC,MAAM,GAAGz0B,KAAK,CAAC0qB,MAAM;MACrBgK,MAAM,GAAG10B,KAAK,CAAC2qB,MAAM;EAEvB,EAAA,MAAMuE,IAAI,GAAG/iB,QAAQ,CAAC8B,eAAe;;EAErC;EACA,EAAA,IAAIjO,KAAK,CAAC20B,MAAM,KAAKzzB,SAAS,EAAE;MAC9BszB,KAAK,GAAGx0B,KAAK,CAAC20B,MAAM;EACtB,EAAA;EACA,EAAA,IAAI30B,KAAK,CAAC40B,UAAU,KAAK1zB,SAAS,EAAE;EAClCszB,IAAAA,KAAK,GAAG,CAACx0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MACvB,CAAC;MAED,IAAI,CAAC4E,WAAW,GAAG,MAAM7E,QAAQ,CAAC6E,WAAW,EAAE;EACjD,EAAA;EACF;;ECrIA;EACA;EACA;;;EA4CA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMypB,WAAW,CAAC;EACvB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAOE;EACF;EACA;EACA;EACA;EACA;;EAGE;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAOE;EACF;EACA;EACA;EACA;EACA;;EAME;EACF;EACA;EACA;EACA;EACA;EACA;EACA;;EAME;EACF;EACA;EACA;EACE,EAAA,OAAO38B,MAAMA,CAACmQ,MAAyB,GAAG,EAAE,EAAE;MAC5C,OAAO,IAAIwsB,WAAW,CAACvsB,SAAS,CAACD,MAAM,CAAC,EAAEE,eAAe,CAAC;EAC5D,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;EACE,EAAA,OAAOC,KAAKA,CAACH,MAAyB,GAAG,EAAE,EAAE;EAAA,IAAA,IAAAI,cAAA;EAC3C,IAAA,MAAMC,QAAQ,GAAGJ,SAAS,CAACD,MAAM,CAAC;EAClC,IAAA,MAAMM,YAAY,GAAGnS,WAAW,CAAC5C,QAAQ,CAAC8U,QAAQ,EAAE;EAAEE,MAAAA,KAAK,EAAE;EAAK,KAAC,CAAC,CAAC;MAErE,IAAIC,QAAQ,IAAAJ,cAAA,GAAGK,WAAS,CAACzQ,GAAG,CAACqQ,QAAQ,CAACE,KAAK,CAAC,MAAA,IAAA,IAAAH,cAAA,KAAA,MAAA,GAAA,MAAA,GAA7BA,cAAA,CAA+BpQ,GAAG,CAACsQ,YAAY,CAAC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AAA,CACjE,CAAC;EACD,QAAA;EACF,MAAA;EACF,IAAA;EAEAm4C,IAAAA,QAAQ,CAACtuC,IAAI,CAACuuC,OAAO,CAAC;EACxB,EAAA;EAEA,EAAA,OAAOD,QAAQ;EACjB,CAAC;;EC/OD;EACA;EACA;EACA;EACA;EACA;EACA;;EAgBA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAME,QAAQ,CAAmB;EACtC;EACF;EACA;;EAGE;EACF;EACA;EACA;;EAGE;EACF;EACA;EACA;EACA;;IAGE,OAAO3H,QAAQA,GAAG;MAChBP,cAAc,CACZ,WAAW,EACX,CAACnwC,OAAO,EAAEqJ,IAAI,EAAEyT,MAAM,KAAK;QACzB,MAAMqY,MAAM,GAAGrY,MAAM,GACjB;UACE3hB,IAAI,EAAE2hB,MAAM,CAACw7B,OAAO;UACpBh9C,GAAG,EAAEwhB,MAAM,CAACy7B;EACd,OAAC,GACDlgD,SAAS;EAEb,MAAA,OAAO,IAAIggD,QAAQ,CAACr4C,OAAO,EAAE;EAC3B21B,QAAAA,UAAU,EAAE7Y,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE6Y,UAAU;EAC9BR,QAAAA;EACF,OAAC,CAAC;MACJ,CAAC,EACDqjB,oBACF,CAAC;EACH,EAAA;EAEA9jD,EAAAA,WAAWA,CAACsL,OAAgB,EAAE8c,MAAuB,EAAE;MACrD,MAAMqY,MAAM,GAAGrY,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEqY,MAAM;MAC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AC;;ECrOD;EACA;EACA;EACA;EACA;EACA;;EAaA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMwgD,YAAY,CAAmB;EAC1C;EACF;EACA;;EAGE;EACF;EACA;;EAGE;EACF;EACA;;IAGE,OAAOnI,QAAQA,GAAG;MAChBP,cAAc,CACZ,eAAe,EACf,CAACnwC,OAAO,EAAEqJ,IAAI,EAAEyT,MAAM,KAAK;EACzB,MAAA,OAAO,IAAI+7B,YAAY,CAAC74C,OAAO,EAAE;EAAE,QAAA,CAACqJ,IAAI,CAAC,CAAC,CAAC,GAAGyT,MAAM,IAAI;EAAG,OAAC,CAAC;MAC/D,CAAC,EACDiyB,iBACF,CAAC;EACH,EAAA;EAEAr6C,EAAAA,WAAWA,CAACsL,OAAgB,EAAEyhB,UAAsB,EAAE;MACpD,IAAI,CAACA,UAAU,EAAE;EACf,MAAA,MAAMle,UAAa,CAAC,yBAAyB,CAAC;EAChD,IAAA;MAEA,IAAIu1C,IAAI,GAAG,KAAK;EAEhB,IAAA,MAAMC,QAAQ,GAAG,MAAOC,EAAW,IAAK;EACtCF,MAAAA,IAAI,GAAGE,EAAE;QAET,MAAMznC,iBAAiB,EAAE;EAEzB,MAAA,KAAK,MAAMmQ,IAAI,IAAID,UAAU,EAAE;EAC7B,QAAA,MAAMxlB,KAAK,GAAGwlB,UAAU,CAACC,IAAI,CAAC,CA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AAM8F,MAAM,GAAIw7B,MAAuB,IAAKA,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEx7B,MAAM,EAAE;MAE5D,MAAM2qC,aAAa,GAAGrP,iBAAiB,CAAC,UAAU,EAAEhwC,OAAO,EAAEy5C,QAAQ,CAAC;MAEtE,IAAI,CAAC3I,EAAE,GAAG,MAAMuO,aAAa,CAACxtC,IAAI,CAACmoC,IAAI,CAAC;MACxC,IAAI,CAACjJ,IAAI,GAAG,MAAMsO,aAAa,CAACxtC,IAAI,CAACjD,KAAK,CAAC;EAC3C,IAAA,IAAI,CAAClZ,QAAW,CAAC,GAAG,MAAM2pD,aAAa,CAACxtC,IAAI,CAAC6C,MAAM,CAAC;EACtD,EAAA;EACF;;EC/DA;EACA;EACA;;;EA+DA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MA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S,CAAC,EAAE8R,OAAO,CAAC,CAAC;EACpDO,IAAAA,WAAW,EAAGP,OAAe,IAC3BpC,aAAa,CAACxtC,IAAI,CAAE89B,CAAC,IAAKoS,UAAU,CAACpS,CAAC,EAAE8R,OAAO,CAAC;KACnD;EACH,CAAC;;ECxXD;EACA;EACA;EACA;EACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECJA;EACA;EACA;EACA;EACA;EACA;EACA;;EAiBA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAM6I,YAAY,SAAShV,OAAO,CAAC;IAGxC,OAAO5E,QAAQA,GAAG;MAChB6E,eAAe,CACb,OAAO,EACP,CAACv1C,OAAO,EAAEqJ,IAAI,EAAE+5B,OAAO,EAAEtmB,MAAM,KAC7B,IAAIwtC,YAAY,CAACtqD,OAAO,EAAEojC,OAAO,EAAEtmB,MAAM,CAAC,EAC5C07B,oBACF,CAAC;EACH,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;IACE9jD,WAAWA,CACTsL,OAAgB,EAChBojC,OAAiB,EACjBtmB,MAA0B,GAAG,EAAE,EAC/B;EACA,IAAA,KAAK,CAAC9c,OAAO,EAAEojC,OAAO,EAAEtmB,MAAM,CAAC;MAC/B,IAAI,CAACC,SAAS,GAAG,MAAMxZ,UAAa,CAACuZ,MAAM,CAAC;EAE5C,IAAA,IAAI,CAACvZ,QAAW,CAAC6/B,OAAO,CAAC,EAAE;EACzB,MAAA;EACF,IAAA;MAEA,MAAMhqC,MAAM,GAAGmK,QAAW,CAACuZ,MAAM,CAAC,IAAI9c,OAAO;MAE7C,IAAI,CAACuD,YAAe,CAACnK,MAAM,EAAEmxD,gBAAgB,CAAC,EAAE;EAC9C,MAAA;EACF,IAAA;EAEA,IAAA,MAAMC,QAAQ,GAAGA,MAAOpxD,MAAM,CAACqxD,OAAO,GAAG,IAAI,CAACtU,GAAG,EAAE,GAAG,IAAI,CAAChE,OAAO,EAAG;EAErElvB,IAAAA,kBAAkB,CAAC7pB,MAAM,EAAE,QAAQ,EAAEoxD,QAAQ,CAAC;MAE9C,IAAI,CAAC7b,SAAS,CAAC,MAAM;EACnB9qB,MAAAA,uBAAuB,CAACzqB,MAAM,EAAE,QAAQ,EAAEoxD,QAAQ,CAAC;EACrD,IAAA,CAAC,CAAC;EACJ,EAAA;EACF;;EAEA;EACA;EACA;EACA;;EAUA;;EAEA,MAAMhS,oBAAiE,GACrEx4C,OAAO,IACJ;IACH,OAAO;EACL5G,IAAAA,MAAM,EAAEA,CAAC0H,GAAG,EAAE7E,KAAK,KAAA;EAAA,MAAA,IAAAwK,IAAA;QAAA,OAAA,CAAAA,IAAA,GAChBlD,eAAkB,CAACtH,KAAK,CAAC,GACtB24C,uBAAuB,CAAC34C,KAAK,EAAE+D,OAAO,CAAC,GACvC,IAAI,cAAAyG,IAAA,KAAA,MAAA,GAAAA,IAAA,GAAKpO,SAAS;EAAA,IAAA;KACzB;EACH,CAAC;;ECxKD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAwBA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMqyD,YAAY,SAASpV,OAAO,CAAC;IAGxC,OAAO5E,QAAQA,GAAG;MAChB6E,eAAe,CACb7/C,OAAU,EACV,CAACsK,OAAO,EAAEqJ,IAAI,EAAE+5B,OAAO,EAAEtmB,MAAM,KAC7B,IAAI4tC,YAAY,CAAC1qD,OAAO,EAAEojC,OAAO,EAAEtmB,MAAM,CAAC,EAC5C07B,oBACF,CAAC;EACH,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;IACE9jD,WAAWA,CACTsL,OAAgB,EAChBojC,OAAiB,EACjBtmB,MAA4B,GAAG,EAAE,EACjC;EACA,IAAA,KAAK,CAAC9c,OAAO,EAAEojC,OAAO,EAAEtmB,MAAM,CAAC;MAC/B,IAAI,CAACC,SAAS,GAAG,MAAMxZ,UAAa,CAACuZ,MAAM,CAAC;EAE5C6tC,IAAAA,YAAY,CAAC,IAAI,EAAE3qD,OAAO,EAAEojC,OAAO,EAAEtmB,MAAM,EAAEpnB,OAAU,CAAC;EAC1D,EAAA;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMk1D,YAAY,SAAStV,OAAO,CAAC;IAGxC,OAAO5E,QAAQA,GAAG;MAChB6E,eAAe,CACb7/C,OAAU,EACV,CAACsK,OAAO,EAAEqJ,IAAI,EAAE+5B,OAAO,EAAEtmB,MAAM,KAC7B,IAAI8tC,YAAY,CAAC5qD,OAAO,EAAEojC,OAAO,EAAEtmB,MAAM,CAAC,EAC5C07B,oBACF,CAAC;EACH,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;IACE9jD,WAAWA,CACTsL,OAAgB,EAChBojC,OAAiB,EACjBtmB,MAA4B,GAAG,EAAE,EACjC;EACA,IAAA,KAAK,CAAC9c,OAAO,EAAEojC,OAAO,EAAEtmB,MAAM,CAAC;MAC/B,IAAI,CAACC,SAAS,GAAG,MAAMxZ,UAAa,CAACuZ,MAAM,CAAC;EAE5C6tC,IAAAA,YAAY,CAAC,IAAI,EAAE3qD,OAAO,EAAEojC,OAAO,EAAEtmB,MAAM,EAAEpnB,OAAU,CAAC;EAC1D,EAAA;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMm1D,YAAY,SAASvV,OAAO,CAAC;IAGxC,OAAO5E,QAAQA,GAAG;MAChB6E,eAAe,CACb7/C,OAAU,EACV,CAACsK,OAAO,EAAEqJ,IAAI,EAAE+5B,OAAO,EAAEtmB,MAAM,KAC7B,IAAI+tC,YAAY,CAAC7qD,OAAO,EAAEojC,OAAO,EAAEtmB,MAAM,CAAC,EAC5C07B,oBACF,CAAC;EACH,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;IACE9jD,WAAWA,CACTsL,OAAgB,EAChBojC,OAAiB,EACjBtmB,MAA4B,GAAG,EAAE,EACjC;EACA,IAAA,KAAK,CAAC9c,OAAO,EAAEojC,OAAO,EAAEtmB,MAAM,CAAC;MAC/B,IAAI,CAACC,SAAS,GAAG,MAAMxZ,UAAa,CAACuZ,MAAM,CAAC;EAE5C6tC,IAAAA,YAAY,CAAC,IAAI,EAAE3qD,OAAO,EAAEojC,OAAO,EAAEtmB,MAAM,EAAEpnB,OAAU,CAAC;EAC1D,EAAA;EACF;;EAEA;EACA;EACA;EACA;;EAwBA;;EAEA,MAAM8iD,oBAAmE,GACvEx4C,OAAO,IACJ;IACH,OAAO;EACL5G,IAAAA,MAAM,EAAEA,CAAC0H,GAAG,EAAE7E,KAAK,KAAA;EAAA,MAAA,IAAAwK,IAAA;QAAA,OAAA,CAAAA,IAAA,GAChBlD,eAAkB,CAACtH,KAAK,CAAC,GACtB24C,uBAAuB,CAAC34C,KAAK,EAAE+D,OAAO,CAAC,GACvC,IAAI,cAAAyG,IAAA,KAAA,MAAA,GAAAA,IAAA,GAAKpO,SAAS;EAAA,IAAA,CAAA;EACxBoF,IAAAA,cAAc,EAAEwO,eAAe;EAC/BmY,IAAAA,aAAa,EAAEnY;KAChB;EACH,CAAC;EAED,MAAM0+C,YAAY,GAAGA,CACnBza,MAAkD,EAClDlwC,OAAgB,EAChBojC,OAAiB,EACjBtmB,MAA4B,EAC5B6Q,MAAmC,KAChC;EACH,EAAA,IAAI,CAACpqB,QAAW,CAAC6/B,OAAO,CAAC,EAAE;EACzB,IAAA;EACF,EAAA;IAEA,MAAMhqC,MAAM,GAAGmK,QAAW,CAACuZ,MAAM,CAAC,IAAI9c,OAAO;;EAE7C;EACA;EACA;EACA,EAAA,IAAIyiC,YAA8B;EAClC,EAAA,IAAIC,UAA4B;EAChC,EAAA,IAAI/U,MAAM,KAAKj4B,OAAU,EAAE;MACzB+sC,YAAY,GAAGC,UAAU,GAAGwN,MAAM,CAACx6C,QAAW,CAAC;EACjD,EAAA,CAAC,MAAM;MACL+sC,YAAY,GAAGyN,MAAM,CAACiG,GAAG;MACzBzT,UAAU,GAAGwN,MAAM,CAACiC,OAAO;EAC7B,EAAA;EAEA5P,EAAAA,cAAc,CAACtlB,KAAK,EAAE,CAAC8lB,SAAS,CAC9B3pC,MAAM,EACNqpC,YAAY,EACZC,UAAU,EACVn/B,KAAQ,CACN;EACE6/B,IAAAA,OAAO,EAAEzV;EACX,GAAC,EACDtlB,QAAQ,CAACyU,MAAM,EAAE;EAAE1jB,IAAAA,MAAM,EAAE;KAAM,CACnC,CACF,CAAC;EACH,CAAC;;EC3bD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAgCA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAM0xD,aAAa,SAASxV,OAAO,CAAC;IAGzC,OAAO5E,QAAQA,GAAG;MAChB6E,eAAe,CACb,QAAQ,EACR,CAACv1C,OAAO,EAAEqJ,IAAI,EAAE+5B,OAAO,EAAEtmB,MAAM,KAAK;EAClC,MAAA,OAAO,IAAIguC,aAAa,CACtB9qD,OAAO,EACPojC,OAAO,EACP7/B,MAAS,CAACuZ,MAAM,EAAE;EAChBmlB,QAAAA,MAAM,EAAE71B,sBAAsB,CAC5B,QAAQ,EACR7I,UAAa,CACXA,UAAa,CAAC8F,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,aAAa,EAAE,KAAK,CAAC,EAClD,OAAO,EACP,MACF,CAAC,EACApN,KAAK,IACJ22B,iBAAiB,CAAC32B,KAAK,CAAC,IAAI+2B,sBAAsB,CAAC/2B,KAAK,CAC5D;EACF,OAAC,CACH,CAAC;MACH,CAAC,EACDu8C,oBACF,CAAC;EACH,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;EACE9jD,EAAAA,WAAWA,CACTsL,OAAgB,EAChBojC,OAAiB,EACjBtmB,MAA2B,EAC3B;MACA,MAAMmlB,MAAM,GAAG,CAAAnlB,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEmlB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"}