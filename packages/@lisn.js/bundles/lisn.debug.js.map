{"version":3,"file":"lisn.debug.js","sources":["../../lisn.js/src/ts/globals/minification-constants.ts","../../lisn.js/src/ts/globals/errors.ts","../../lisn.js/src/ts/globals/minification-helpers.ts","../../lisn.js/src/ts/globals/settings.ts","../../lisn.js/src/ts/utils/math.ts","../../lisn.js/src/ts/utils/misc.ts","../../lisn.js/src/ts/utils/text.ts","../../lisn.js/src/ts/utils/validation.ts","../../lisn.js/src/ts/modules/bit-spaces.ts","../../lisn.js/src/ts/utils/dom.ts","../../lisn.js/src/ts/utils/tasks.ts","../../lisn.js/src/ts/debug/local-console.ts","../../lisn.js/src/ts/modules/x-map.ts","../../lisn.js/src/ts/debug/remote-console.ts","../../lisn.js/src/ts/debug/console.ts","../../lisn.js/src/ts/debug/logger.ts","../../lisn.js/src/ts/debug/debug.ts","../../lisn.js/src/ts/modules/callback.ts","../../lisn.js/src/ts/utils/log.ts","../../lisn.js/src/ts/utils/dom-optimize.ts","../../lisn.js/src/ts/utils/dom-query.ts","../../lisn.js/src/ts/utils/css-alter.ts","../../lisn.js/src/ts/utils/dom-alter.ts","../../lisn.js/src/ts/utils/dom-events.ts","../../lisn.js/src/ts/watchers/dom-watcher.ts","../../lisn.js/src/ts/utils/directions.ts","../../lisn.js/src/ts/utils/event.ts","../../lisn.js/src/ts/utils/gesture.ts","../../lisn.js/src/ts/utils/gesture-key.ts","../../lisn.js/src/ts/utils/gesture-pointer.ts","../../lisn.js/src/ts/utils/gesture-touch.ts","../../lisn.js/src/ts/utils/normalize-wheel.ts","../../lisn.js/src/ts/utils/gesture-wheel.ts","../../lisn.js/src/ts/watchers/gesture-watcher.ts","../../lisn.js/src/ts/utils/layout.ts","../../lisn.js/src/ts/utils/scroll.ts","../../lisn.js/src/ts/utils/overlays.ts","../../lisn.js/src/ts/utils/size.ts","../../lisn.js/src/ts/modules/x-resize-observer.ts","../../lisn.js/src/ts/watchers/size-watcher.ts","../../lisn.js/src/ts/watchers/layout-watcher.ts","../../lisn.js/src/ts/utils/pointer.ts","../../lisn.js/src/ts/watchers/pointer-watcher.ts","../../lisn.js/src/ts/watchers/scroll-watcher.ts","../../lisn.js/src/ts/utils/views.ts","../../lisn.js/src/ts/modules/x-intersection-observer.ts","../../lisn.js/src/ts/watchers/view-watcher.ts","../../lisn.js/src/ts/bundle-essentials.ts","../../lisn.js/src/ts/widgets/widget.ts","../../lisn.js/src/ts/actions/action.ts","../../lisn.js/src/ts/actions/add-class.ts","../../lisn.js/src/ts/utils/animations.ts","../../lisn.js/src/ts/actions/animate.ts","../../lisn.js/src/ts/actions/animate-play.ts","../../lisn.js/src/ts/actions/display.ts","../../lisn.js/src/ts/utils/dom-search.ts","../../lisn.js/src/ts/triggers/trigger.ts","../../lisn.js/src/ts/actions/trigger.ts","../../lisn.js/src/ts/actions/scroll-to.ts","../../lisn.js/src/ts/actions/set-attribute.ts","../../lisn.js/src/ts/actions/show.ts","../../lisn.js/src/ts/utils/position.ts","../../lisn.js/src/ts/widgets/openable.ts","../../lisn.js/src/ts/actions/open.ts","../../lisn.js/src/ts/widgets/pager.ts","../../lisn.js/src/ts/actions/pager.ts","../../lisn.js/src/ts/triggers/pointer-trigger.ts","../../lisn.js/src/ts/triggers/layout-trigger.ts","../../lisn.js/src/ts/triggers/load-trigger.ts","../../lisn.js/src/ts/triggers/scroll-trigger.ts","../../lisn.js/src/ts/triggers/view-trigger.ts","../../lisn.js/src/ts/bundle-slim.ts","../../lisn.js/src/ts/widgets/auto-hide.ts","../../lisn.js/src/ts/widgets/page-loader.ts","../../lisn.js/src/ts/widgets/same-height.ts","../../lisn.js/src/ts/widgets/scrollbar.ts","../../lisn.js/src/ts/widgets/scroll-to-top.ts","../../lisn.js/src/ts/widgets/sortable.ts","../../lisn.js/src/ts/widgets/track-gesture.ts","../../lisn.js/src/ts/widgets/track-scroll.ts","../../lisn.js/src/ts/widgets/track-size.ts","../../lisn.js/src/ts/widgets/track-view.ts","../../lisn.js/src/ts/bundle.ts","../../lisn.js/src/ts/bundle-debug.ts","../../../node_modules/engine.io-parser/build/esm/commons.js","../../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../../node_modules/engine.io-parser/build/esm/index.js","../../../node_modules/@socket.io/component-emitter/lib/esm/index.js","../../../node_modules/engine.io-client/build/esm/globals.js","../../../node_modules/engine.io-client/build/esm/util.js","../../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../../node_modules/engine.io-client/build/esm/transport.js","../../../node_modules/engine.io-client/build/esm/transports/polling.js","../../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../../node_modules/engine.io-client/build/esm/transports/webtransport.js","../../../node_modules/engine.io-client/build/esm/transports/index.js","../../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../../node_modules/engine.io-client/build/esm/socket.js","../../../node_modules/engine.io-client/build/esm/transports/polling-fetch.js","../../../node_modules/socket.io-client/build/esm/url.js","../../../node_modules/socket.io-parser/build/esm/is-binary.js","../../../node_modules/socket.io-parser/build/esm/binary.js","../../../node_modules/socket.io-parser/build/esm/index.js","../../../node_modules/socket.io-client/build/esm/on.js","../../../node_modules/socket.io-client/build/esm/socket.js","../../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../../node_modules/socket.io-client/build/esm/manager.js","../../../node_modules/socket.io-client/build/esm/index.js"],"sourcesContent":["/**\n * For minification optimization.\n *\n * @module\n * @ignore\n * @internal\n */\n\nexport const PREFIX = \"lisn\";\nexport const LOG_PREFIX = \"[LISN.js]\";\n\nexport const OBJECT = Object;\nexport const SYMBOL = Symbol;\nexport const ARRAY = Array;\nexport const STRING = String;\nexport const FUNCTION = Function;\nexport const MATH = Math;\nexport const NUMBER = Number;\nexport const PROMISE = Promise;\n\nexport const PI = MATH.PI;\nexport const INFINITY = Infinity;\n\nexport const S_ABSOLUTE = \"absolute\";\nexport const S_FIXED = \"fixed\";\nexport const S_STICKY = \"sticky\";\n\nexport const S_WIDTH = \"width\";\nexport const S_HEIGHT = \"height\";\n\nexport const S_TOP = \"top\";\nexport const S_BOTTOM = \"bottom\";\n\nexport const S_UP = \"up\";\nexport const S_DOWN = \"down\";\n\nexport const S_LEFT = \"left\";\nexport const S_RIGHT = \"right\";\n\nexport const S_AT = \"at\";\nexport const S_ABOVE = \"above\";\nexport const S_BELOW = \"below\";\n\nexport const S_IN = \"in\";\nexport const S_OUT = \"out\";\n\nexport const S_NONE = \"none\";\nexport const S_AMBIGUOUS = \"ambiguous\";\n\nexport const S_ADDED = \"added\";\nexport const S_REMOVED = \"removed\";\nexport const S_ATTRIBUTE = \"attribute\";\n\nexport const S_KEY = \"key\";\nexport const S_MOUSE = \"mouse\";\nexport const S_POINTER = \"pointer\";\nexport const S_TOUCH = \"touch\";\nexport const S_WHEEL = \"wheel\";\nexport const S_CLICK = \"click\";\nexport const S_HOVER = \"hover\";\nexport const S_PRESS = \"press\";\n\nexport const S_SCROLL = \"scroll\";\nexport const S_ZOOM = \"zoom\";\nexport const S_DRAG = \"drag\";\nexport const S_UNKNOWN = \"unknown\";\n\nexport const S_SCROLL_TOP = `${S_SCROLL}Top` as `${typeof S_SCROLL}Top`;\nexport const S_SCROLL_LEFT = `${S_SCROLL}Left` as `${typeof S_SCROLL}Left`;\n\nexport const S_SCROLL_WIDTH = `${S_SCROLL}Width` as `${typeof S_SCROLL}Width`;\nexport const S_SCROLL_HEIGHT =\n  `${S_SCROLL}Height` as `${typeof S_SCROLL}Height`;\n\nexport const S_CLIENT_WIDTH = \"clientWidth\";\nexport const S_CLIENT_HEIGHT = \"clientHeight\";\n\nexport const S_SCROLL_TOP_FRACTION =\n  `${S_SCROLL}TopFraction` as `${typeof S_SCROLL}TopFraction`;\nexport const S_SCROLL_LEFT_FRACTION =\n  `${S_SCROLL}LeftFraction` as `${typeof S_SCROLL}LeftFraction`;\n\nexport const S_HORIZONTAL = \"horizontal\";\nexport const S_VERTICAL = \"vertical\";\nexport const S_SKIP_INITIAL = \"skipInitial\";\nexport const S_DEBOUNCE_WINDOW = \"debounceWindow\";\nexport const S_TOGGLE = \"toggle\";\n\nexport const S_CANCEL = \"cancel\";\n\nexport const S_KEYDOWN = (S_KEY + S_DOWN) as `${typeof S_KEY}${typeof S_DOWN}`;\n\nexport const S_MOUSEUP = (S_MOUSE + S_UP) as `${typeof S_MOUSE}${typeof S_UP}`;\nexport const S_MOUSEDOWN = (S_MOUSE +\n  S_DOWN) as `${typeof S_MOUSE}${typeof S_DOWN}`;\nexport const S_MOUSEMOVE = `${S_MOUSE}move` as `${typeof S_MOUSE}move`;\n\nexport const S_POINTERUP = (S_POINTER +\n  S_UP) as `${typeof S_POINTER}${typeof S_UP}`;\nexport const S_POINTERDOWN = (S_POINTER +\n  S_DOWN) as `${typeof S_POINTER}${typeof S_DOWN}`;\nexport const S_POINTERENTER = `${S_POINTER}enter` as `${typeof S_POINTER}enter`;\nexport const S_POINTERLEAVE = `${S_POINTER}leave` as `${typeof S_POINTER}leave`;\nexport const S_POINTERMOVE = `${S_POINTER}move` as `${typeof S_POINTER}move`;\nexport const S_POINTERCANCEL = (S_POINTER +\n  S_CANCEL) as `${typeof S_POINTER}${typeof S_CANCEL}`;\n\nexport const S_TOUCHSTART = `${S_TOUCH}start` as `${typeof S_TOUCH}start`;\nexport const S_TOUCHEND = `${S_TOUCH}end` as `${typeof S_TOUCH}end`;\nexport const S_TOUCHMOVE = `${S_TOUCH}move` as `${typeof S_TOUCH}move`;\nexport const S_TOUCHCANCEL = (S_TOUCH +\n  S_CANCEL) as `${typeof S_TOUCH}${typeof S_CANCEL}`;\n\nexport const S_DRAGSTART = `${S_DRAG}start` as `${typeof S_DRAG}start`;\nexport const S_DRAGEND = `${S_DRAG}end` as `${typeof S_DRAG}end`;\nexport const S_DRAGENTER = `${S_DRAG}enter` as `${typeof S_DRAG}enter`;\nexport const S_DRAGOVER = `${S_DRAG}over` as `${typeof S_DRAG}over`;\nexport const S_DRAGLEAVE = `${S_DRAG}leave` as `${typeof S_DRAG}leave`;\nexport const S_DROP = \"drop\";\n\nexport const S_SELECTSTART = \"selectstart\";\n\nexport const S_ATTRIBUTES = \"attributes\";\nexport const S_CHILD_LIST = \"childList\";\n\nexport const S_REVERSE = \"reverse\";\nexport const S_DRAGGABLE = \"draggable\";\nexport const S_DISABLED = \"disabled\";\n\nexport const S_ARROW = \"arrow\";\n\nexport const S_ROLE = \"role\";\n\nexport const ARIA_PREFIX = \"aria-\";\nexport const S_ARIA_CONTROLS = ARIA_PREFIX + \"controls\";\n\nexport const PREFIX_WRAPPER = `${PREFIX}-wrapper`;\nexport const PREFIX_INLINE_WRAPPER = `${PREFIX_WRAPPER}-inline`;\nexport const PREFIX_TRANSITION = `${PREFIX}-transition`;\nexport const PREFIX_TRANSITION_DISABLE = `${PREFIX_TRANSITION}__disable`;\nexport const PREFIX_HIDE = `${PREFIX}-hide`;\nexport const PREFIX_SHOW = `${PREFIX}-show`;\nexport const PREFIX_DISPLAY = `${PREFIX}-display`;\nexport const PREFIX_UNDISPLAY = `${PREFIX}-undisplay`;\nexport const PREFIX_PLACE = `${PREFIX}-place`;\nexport const PREFIX_ORIENTATION = `${PREFIX}-orientation`;\nexport const PREFIX_POSITION = `${PREFIX}-position`;\nexport const PREFIX_GHOST = `${PREFIX}-ghost`;\nexport const PREFIX_BORDER_SIZE = `${PREFIX}-border-size`;\nexport const PREFIX_NO_SELECT = `${PREFIX}-no-select`;\nexport const PREFIX_NO_TOUCH_ACTION = `${PREFIX}-no-touch-action`;\nexport const PREFIX_NO_WRAP = `${PREFIX}-no-wrap`;\n\nexport const S_ANIMATE = \"animate\";\nexport const ANIMATE_PREFIX = `${PREFIX}-${S_ANIMATE}__`;\nexport const PREFIX_ANIMATE_DISABLE = `${ANIMATE_PREFIX}disable`;\nexport const PREFIX_ANIMATE_PAUSE = `${ANIMATE_PREFIX}pause`;\nexport const PREFIX_ANIMATE_REVERSE = `${ANIMATE_PREFIX}${S_REVERSE}`;\nexport const PREFIX_ANIMATE_INFINITE = `${ANIMATE_PREFIX}infinite`;\n\nexport const USER_AGENT =\n  typeof navigator === \"undefined\" ? \"\" : navigator.userAgent;\n\nexport const IS_MOBILE =\n  USER_AGENT.match(\n    /Mobile|Android|Silk\\/|Kindle|BlackBerry|Opera Mini|Opera Mobi/,\n  ) !== null;\n","/**\n * @module Errors\n */\n\nimport { LOG_PREFIX } from \"@lisn/globals/minification-constants\";\n\n/**\n * Base error type emitted by LISN.\n */\nexport abstract class LisnError extends Error {}\n\n/**\n * Error type emitted for invalid input or incorrect usage of a function.\n */\nexport class LisnUsageError extends LisnError {\n  constructor(message = \"\") {\n    super(`${LOG_PREFIX} Incorrect usage: ${message}`);\n    this.name = \"LisnUsageError\";\n  }\n}\n\n/**\n * Error type emitted if an assertion is wrong => report bug.\n */\nexport class LisnBugError extends LisnError {\n  constructor(message = \"\") {\n    super(`${LOG_PREFIX} Please report a bug: ${message}`);\n    this.name = \"LisnBugError\";\n  }\n}\n","/**\n * For minification optimization\n *\n * @module\n * @ignore\n * @internal\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  BoundingRect,\n  IterableObject,\n  Constructor,\n  InstanceType,\n  MapBase,\n  SetBase,\n  Spread,\n} from \"@lisn/globals/types\";\n\nimport { LisnUsageError, LisnBugError } from \"@lisn/globals/errors\";\n\n// credit: underscore.js\nconst root =\n  (typeof self === \"object\" && self.self === self && self) ||\n  (typeof global == \"object\" && global.global === global && global) ||\n  Function(\"return this\")() ||\n  {};\n\nexport const kebabToCamelCase = (str: string) =>\n  str.replace(/-./g, (m) => toUpperCase(m.charAt(1)));\n\nexport const camelToKebabCase = (str: string) =>\n  str\n    .replace(/[A-Z][a-z]/g, (m) => \"-\" + toLowerCase(m))\n    .replace(/[A-Z]+/, (m) => \"-\" + toLowerCase(m));\n\nexport const prefixName = (name: string) => `${MC.PREFIX}-${name}`;\n\nexport const prefixCssVar = (name: string) => \"--\" + prefixName(name);\n\nexport const prefixCssJsVar = (name: string) => prefixCssVar(\"js--\" + name);\n\nexport const prefixData = (name: string) => `data-${camelToKebabCase(name)}`;\n\nexport const prefixLisnData = (name: string) => prefixData(prefixName(name));\n\nexport const toLowerCase = (s: string) => s.toLowerCase();\n\nexport const toUpperCase = (s: string) => s.toUpperCase();\n\nexport const timeNow = Date.now.bind(Date);\n\nexport const timeSince = (startTime: number) => timeNow() - startTime;\n\nexport const hasDOM = () => typeof document !== \"undefined\";\n\nexport const getWindow = () => window;\n\nexport const getDoc = () => document;\n\nexport const getDocElement = () => getDoc().documentElement;\n\nexport const getDocScrollingElement = () =>\n  getDoc().scrollingElement as HTMLElement | null;\n\nexport const getBody = () => getDoc().body;\n\nexport const getReadyState = () => getDoc().readyState;\n\nexport const getPointerType = (event: Event) =>\n  isPointerEvent(event)\n    ? event.pointerType\n    : isMouseEvent(event)\n      ? \"mouse\"\n      : null;\n\nexport const onAnimationFrame = hasDOM()\n  ? root.requestAnimationFrame.bind(root)\n  : () => {};\n\nexport const createElement = (\n  tagName: string,\n  options?: ElementCreationOptions,\n) => getDoc().createElement(tagName, options);\n\nexport const createButton = (label = \"\", tag = \"button\") => {\n  const btn = createElement(tag);\n  setTabIndex(btn);\n  setAttr(btn, MC.S_ROLE, \"button\");\n  setAttr(btn, MC.ARIA_PREFIX + \"label\", label);\n  return btn;\n};\n\nexport const isNullish = (v: unknown): v is null | undefined =>\n  v === undefined || v === null;\n\nexport const isEmpty = (v: unknown): v is null | undefined | \"\" =>\n  isNullish(v) || v === \"\";\n\nexport const isIterableObject = (v: unknown): v is IterableObject<unknown> =>\n  isNonPrimitive(v) && MC.SYMBOL.iterator in v;\n\nexport const isArray = (v: unknown) => isInstanceOf(v, MC.ARRAY);\n\nexport const isObject = (v: unknown) => isInstanceOf(v, MC.OBJECT);\n\nexport const isNonPrimitive = (v: unknown): v is object =>\n  v !== null && typeOf(v) === \"object\";\n\n// only primitive number\nexport const isNumber = (v: unknown): v is number => typeOf(v) === \"number\";\n\n/* eslint-disable-next-line @typescript-eslint/no-wrapper-object-types */\nexport const isString = (v: unknown): v is string | String =>\n  typeOf(v) === \"string\" || isInstanceOf(v, MC.STRING);\n\nexport const isLiteralString = (v: unknown): v is string =>\n  typeOf(v) === \"string\";\n\nexport const isBoolean = (v: unknown): v is boolean => typeOf(v) === \"boolean\";\n\n/* eslint-disable-next-line @typescript-eslint/no-unsafe-function-type */\nexport const isFunction = (v: unknown): v is Function =>\n  typeOf(v) === \"function\" || isInstanceOf(v, MC.FUNCTION);\n\nexport const isDoc = (target: unknown): target is Document =>\n  target === getDoc();\n\nexport const isMouseEvent = (event: Event): event is MouseEvent =>\n  isInstanceOf(event, MouseEvent);\n\nexport const isPointerEvent = (event: Event): event is PointerEvent =>\n  isInstanceOf(event, PointerEvent);\n\nexport const isTouchPointerEvent = (event: Event): event is PointerEvent =>\n  isPointerEvent(event) && getPointerType(event) === MC.S_TOUCH;\n\nexport const isWheelEvent = (event: Event): event is WheelEvent =>\n  isInstanceOf(event, WheelEvent);\n\nexport const isKeyboardEvent = (event: Event): event is KeyboardEvent =>\n  isInstanceOf(event, KeyboardEvent);\n\nexport const isTouchEvent = (event: Event): event is TouchEvent =>\n  isInstanceOf(event, TouchEvent);\n\nexport const isNode = (target: unknown) => isInstanceOf(target, Node);\n\nexport const isElement = (target: unknown) => isInstanceOf(target, Element);\n\nexport const isHTMLElement = (target: unknown) =>\n  isInstanceOf(target, HTMLElement);\n\nexport const isNodeBAfterA = (nodeA: Node, nodeB: Node) =>\n  (nodeA.compareDocumentPosition(nodeB) & Node.DOCUMENT_POSITION_FOLLOWING) !==\n  0;\n\nexport const strReplace = (\n  s: string,\n  match: string | RegExp,\n  replacement: string,\n) => s.replace(match, replacement);\n\nexport const setTimer = root.setTimeout.bind(root);\n\nexport const clearTimer = root.clearTimeout.bind(root);\n\nexport const getBoundingClientRect = (el: Element) =>\n  el.getBoundingClientRect();\n\n// Copy size properties explicitly to another object so they can be used with\n// the spread operator (DOMRect/DOMRectReadOnly's properties are not enumerable)\nexport const copyBoundingRectProps = (rect: BoundingRect): BoundingRect => {\n  return {\n    x: rect.x,\n    left: rect.left,\n    right: rect.right,\n    [MC.S_WIDTH]: rect[MC.S_WIDTH],\n    y: rect.y,\n    top: rect.top,\n    bottom: rect.bottom,\n    [MC.S_HEIGHT]: rect[MC.S_HEIGHT],\n  };\n};\n\nexport const querySelector = (root: Element | Document, selector: string) =>\n  root.querySelector(selector);\n\nexport const querySelectorAll = (root: Element | Document, selector: string) =>\n  root.querySelectorAll(selector);\n\nexport const docQuerySelector = (selector: string) =>\n  querySelector(getDoc(), selector);\n\nexport const docQuerySelectorAll = (selector: string) =>\n  querySelectorAll(getDoc(), selector);\n\nexport const getElementById = (id: string) => getDoc().getElementById(id);\n\nexport const getAttr = (el: Element, name: string) => el.getAttribute(name);\n\nexport const setAttr = (el: Element, name: string, value = \"true\") =>\n  el.setAttribute(name, value);\n\nexport const unsetAttr = (el: Element, name: string) =>\n  el.setAttribute(name, \"false\");\n\nexport const delAttr = (el: Element, name: string) => el.removeAttribute(name);\n\nexport const includes = (\n  arr: readonly unknown[] | string,\n  v: unknown,\n  startAt?: number,\n) => (arr.indexOf as (v: unknown, startAt?: number) => number)(v, startAt) >= 0;\n\nexport const filter = <\n  A extends readonly unknown[],\n  T extends A[number],\n  C extends FilterFn<A[number]> | FilterFnTypeP<A[number], T>,\n>(\n  array: A,\n  filterFn: C,\n) => array.filter(filterFn) as FilteredType<C, A[number], T>[];\n\nexport const filterBlank = <A extends readonly unknown[]>(\n  array: A | null | undefined,\n) => {\n  const result = array\n    ? filter(array, (v): v is NonNullable<A[number]> => !isEmpty(v))\n    : undefined;\n\n  return lengthOf(result) ? result : undefined;\n};\n\nexport const sizeOf = (obj: { size: number } | null | undefined) =>\n  obj?.size ?? 0;\n\nexport const lengthOf = (obj: { length: number } | null | undefined) =>\n  obj?.length ?? 0;\n\nexport const tagName = (el: Element) => el.tagName;\n\nexport const preventDefault = (event: Event) => event.preventDefault();\n\nexport const arrayFrom = MC.ARRAY.from.bind(MC.ARRAY);\n\nexport const keysOf = <T extends Record<string | symbol, unknown>>(\n  obj: T,\n): Array<keyof T & string> => MC.OBJECT.keys(obj);\n\nexport const defineProperty = MC.OBJECT.defineProperty.bind(MC.OBJECT);\n\n// use it in place of object spread\nexport const merge = <A extends readonly (object | null | undefined)[]>(\n  ...a: [...A]\n) => {\n  return MC.OBJECT.assign({}, ...a) as Spread<A>;\n};\n\nexport const copyObject = <T extends object>(obj: T) => merge(obj);\n\nexport const promiseResolve = MC.PROMISE.resolve.bind(MC.PROMISE);\n\nexport const promiseAll = MC.PROMISE.all.bind(MC.PROMISE);\n\nexport const assign = MC.OBJECT.assign.bind(MC.OBJECT);\n\nexport const freezeObj = MC.OBJECT.freeze.bind(MC.OBJECT);\n\nexport const hasOwnProp = (o: object, prop: string | symbol) =>\n  MC.OBJECT.prototype.hasOwnProperty.call(o, prop);\n\nexport const preventExtensions = MC.OBJECT.preventExtensions.bind(MC.OBJECT);\n\nexport const stringify = JSON.stringify.bind(JSON);\n\nexport const floor = MC.MATH.floor.bind(MC.MATH);\n\nexport const ceil = MC.MATH.ceil.bind(MC.MATH);\n\nexport const log2 = MC.MATH.log2.bind(MC.MATH);\n\nexport const sqrt = MC.MATH.sqrt.bind(MC.MATH);\n\nexport const max = MC.MATH.max.bind(MC.MATH);\n\nexport const min = MC.MATH.min.bind(MC.MATH);\n\nexport const abs = MC.MATH.abs.bind(MC.MATH);\n\nexport const round = MC.MATH.round.bind(MC.MATH);\n\nexport const pow = MC.MATH.pow.bind(MC.MATH);\n\nexport const parseFloat = MC.NUMBER.parseFloat.bind(MC.NUMBER);\n\nexport const isNaN = MC.NUMBER.isNaN.bind(MC.NUMBER);\n\nexport const isInstanceOf = <C extends Constructor<unknown>>(\n  value: unknown,\n  Class: C,\n): value is InstanceType<C> => value instanceof Class;\n\nexport const constructorOf = (obj: object) => obj.constructor;\n\nexport const typeOf = (obj: unknown) => typeof obj;\n\nexport const typeOrClassOf = (obj: unknown) =>\n  isObject(obj) ? constructorOf(obj)?.name : typeOf(obj);\n\nexport const parentOf = (element: Element | undefined | null) =>\n  element?.parentElement || null;\n\nexport const childrenOf = (element: Element | undefined | null) =>\n  element?.children || [];\n\nexport const targetOf = <O extends { target?: unknown } | null | undefined>(\n  obj: O,\n) =>\n  obj?.target as O extends { target: infer T }\n    ? T\n    : O extends { target?: infer T }\n      ? T | undefined\n      : undefined;\n\nexport const currentTargetOf = <\n  O extends { currentTarget?: unknown } | null | undefined,\n>(\n  obj: O,\n) =>\n  obj?.currentTarget as O extends { currentTarget: infer T }\n    ? T\n    : O extends { currentTarget?: infer T }\n      ? T | undefined\n      : undefined;\n\nexport const classList = <T extends Element | null | undefined>(el: T) =>\n  el?.classList as T extends Element ? DOMTokenList : undefined;\n\nconst S_TABINDEX = \"tabindex\";\nexport const getTabIndex = (el: Element) => getAttr(el, S_TABINDEX);\n\nexport const setTabIndex = (el: Element, index = \"0\") =>\n  setAttr(el, S_TABINDEX, index);\n\nexport const unsetTabIndex = (el: Element) => delAttr(el, S_TABINDEX);\n\nexport const remove = (obj: { remove: () => void } | null | undefined) =>\n  obj?.remove();\n\nexport const deleteObjKey = <O extends object>(obj: O, key: keyof O) =>\n  delete obj[key];\n\nexport const deleteKey = <K, V>(\n  map: MapBase<K, V> | SetBase<K> | null | undefined,\n  key: K,\n) => map?.delete(key);\n\nexport const elScrollTo = (\n  el: Element,\n  coords: { top?: number; left?: number },\n  behavior: ScrollBehavior = \"instant\",\n) => el.scrollTo(merge({ behavior }, coords));\n\nexport const elScrollBy = (\n  el: Element,\n  coords: { top?: number; left?: number },\n  behavior: ScrollBehavior = \"instant\",\n) => el.scrollBy(merge({ behavior }, coords));\n\nexport const newPromise = <T>(\n  executor: (\n    resolve: (value: T) => void,\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    reject: (reason?: any) => void,\n  ) => void,\n) => new Promise(executor);\n\nexport const newMap = <K, V>(entries?: readonly (readonly [K, V])[] | null) =>\n  new Map(entries);\n\nexport const newWeakMap = <K extends WeakKey, V>(\n  entries?: readonly (readonly [K, V])[] | null,\n) => new WeakMap(entries);\n\nexport const newSet = <T>(values?: readonly T[] | null) => new Set(values);\n\nexport const newWeakSet = <T extends WeakKey>(values?: readonly T[] | null) =>\n  new WeakSet(values);\n\nexport const newIntersectionObserver = (\n  callback: IntersectionObserverCallback,\n  options?: IntersectionObserverInit,\n) => new IntersectionObserver(callback, options);\n\nexport const newResizeObserver = (callback: ResizeObserverCallback) =>\n  typeof ResizeObserver === \"undefined\" ? null : new ResizeObserver(callback);\n\nexport const newMutationObserver = (callback: MutationCallback) =>\n  new MutationObserver(callback);\n\nexport const usageError = (msg: string) => new LisnUsageError(msg);\n\nexport const bugError = (msg: string) => new LisnBugError(msg);\n\nexport const illegalConstructorError = (useWhat: string) =>\n  usageError(`Illegal constructor. Use ${useWhat}.`);\n\nconst CONSOLE = console;\nexport const consoleDebug = CONSOLE.debug.bind(CONSOLE);\n\nexport const consoleLog = CONSOLE.log.bind(CONSOLE);\n\nexport const consoleInfo = CONSOLE.info.bind(CONSOLE);\n\nexport const consoleWarn = CONSOLE.warn.bind(CONSOLE);\n\nexport const consoleError = CONSOLE.error.bind(CONSOLE);\n\n// --------------------\n\ntype FilterFn<V> = (value: V, index: number, array: readonly V[]) => unknown;\ntype FilterFnTypeP<V, T extends V> = (\n  value: V,\n  index: number,\n  array: readonly V[],\n) => value is T;\ntype FilteredType<C extends FilterFn<V> | FilterFnTypeP<V, T>, V, T extends V> =\n  C extends FilterFnTypeP<V, infer T> ? T : V;\n","/**\n * @module Settings\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\n/**\n * LISN's settings.\n * @readonly\n *\n * If you wish to modify them, then you need to do so immediately after loading\n * LISN before you instantiate any watchers, etc. For example:\n *\n * ```html\n * <!doctype html>\n * <html>\n *   <head>\n *     <meta charset=\"UTF-8\" />\n *     <meta name=\"viewport\" content=\"width=device-width\" />\n *     <script src=\"lisn.js\" charset=\"utf-8\"></script>\n *     <script charset=\"utf-8\">\n *       // modify LISN settings, for example:\n *       LISN.settings.deviceBreakpoints.desktop = 1024;\n *     </script>\n *   </head>\n *   <body>\n *   </body>\n * </html>\n * ```\n */\nexport const settings = MH.preventExtensions({\n  /**\n   * A unique selector (preferably `#some-id`) for the element that holds the\n   * main page content, if other than `document.body`.\n   *\n   * E.g. if your main content is inside a custom scrollable container, rather\n   * than directly in `document.body`, then pass a selector for it here.\n   *\n   * The element must be scrollable, i.e. have a fixed size and `overflow: scroll`.\n   *\n   * **IMPORTANT:** You must set this before initializing any watchers, widgets,\n   * etc. If you are using the HTML API, then you must set this before the\n   * document `readyState` becomes interactive.\n   *\n   * @defaultValue null\n   * @category Generic\n   */\n  mainScrollableElementSelector: null as string | null,\n\n  /**\n   * This setting allows us to automatically wrap certain elements or groups of\n   * elements into a single `div` or `span` element to allow for more reliable\n   * or efficient working of certain features. In particular:\n   *\n   * 1. View tracking using relative offsets and a scrolling root **requires wrapping**\n   *\n   * When using view position tracking with a percentage offset specification\n   * (e.g. `top: 50%`) _and_ a custom root element that is scrollable_ (and\n   * obviously has a size smaller than the content), you **MUST** enable\n   * content wrapping, otherwise the trigger offset elements cannot be\n   * positioned relative to the scrolling _content size_.\n   *\n   * 2. Scroll tracking\n   *\n   * When using scroll tracking, including scrollbars, on a scrolling element\n   * (that obviously has a size smaller than the content), it's recommended for\n   * the content of the scrollable element to be wrapped in a single `div`\n   * container, to allow for more efficient and reliable detection of changes\n   * in the _scrollable content_ size.\n   *\n   * If content wrapping is disabled, when scroll tracking is used on a given\n   * element (other than the root of the document), each of the immediate\n   * children of the scrollable element have their sizes tracked, which could\n   * lead to more resource usage.\n   *\n   * 3. Scrollbars on custom elements\n   *\n   * When you setup a {@link Widgets.Scrollbar} widget for a custom\n   * scrollable element that may not be the main scrollable (and therefore\n   * won't take up the full viewport all the time), then to be able to position\n   * to scrollbar relative to the scrollable element, its content needs to be\n   * wrapped.\n   *\n   * If this setting is OFF, then the scrollbars on custom elements have to\n   * rely on position sticky which doesn't have as wide browser support as the\n   * default option.\n   *\n   * 4. Animating on viewport enter/leave\n   *\n   * For elements that have transforms applied as part of an animation or\n   * transition, if you wish to run or reverse the animation when the element\n   * enters or leaves the viewport, then the transform can interfere with the\n   * viewport tracking. For example, if undoing the animation as soon as the\n   * element leaves the viewport makes it enter it again (because it's moved),\n   * then this will result in a glitch.\n   *\n   * If content wrapping is disabled, then to get around such issues, a dummy\n   * element is positioned on top of the actual element and is the one tracked\n   * across the viewport instead. Either approach could cause issues depending\n   * on your CSS, so it's your choice which one is applied.\n   *\n   * ----------\n   *\n   * If you can, it's recommended to leave this setting ON. You can still\n   * disable wrapping on a per-element basis by setting `data-lisn-no-wrap`\n   * attribute on it.\n   *\n   * @defaultValue true\n   * @category Generic\n   */\n  contentWrappingAllowed: true,\n\n  /**\n   * The timeout in milliseconds for waiting for the `document.readyState` to\n   * become `complete`. The timer begins _once the `readyState` becomes\n   * `interactive`_.\n   *\n   * The page will be considered \"ready\" either when the `readyState` becomes\n   * `complete` or this many milliseconds after it becomes `interactive`,\n   * whichever is first.\n   *\n   * Set to 0 or a negative number to disable timeout.\n   *\n   * @defaultValue 2000 // i.e. 2s\n   * @category Generic\n   */\n  pageLoadTimeout: 2000,\n\n  /**\n   * This enables LISN's HTML API. Then the page will be parsed (and watched\n   * for dynamically added elements at any time) for any elements matching a\n   * widget selector. Any element that has a matching CSS class or data\n   * attribute will be setup according to the relevant widget, which may wrap,\n   * clone or add attributes to the element.\n   *\n   * This is enabled by default for bundles, and disabled otherwise.\n   *\n   * **IMPORTANT:** You must set this before the document `readyState` becomes\n   * interactive.\n   *\n   * @defaultValue `false` in general, but `true` in browser bundles\n   * @category Widgets\n   */\n  autoWidgets: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.hideNative | ScrollbarConfig.hideNative}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarHideNative: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.onMobile | ScrollbarConfig.onMobile}.\n   *\n   * @defaultValue false\n   * @category Widgets/Scrollbar\n   */\n  scrollbarOnMobile: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.positionH | ScrollbarConfig.positionH}.\n   *\n   * @defaultValue \"bottom\"\n   * @category Widgets/Scrollbar\n   */\n  scrollbarPositionH: \"bottom\",\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.positionV | ScrollbarConfig.positionV}.\n   *\n   * @defaultValue \"right\"\n   * @category Widgets/Scrollbar\n   */\n  scrollbarPositionV: \"right\",\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.autoHide | ScrollbarConfig.autoHide}.\n   *\n   * @defaultValue -1\n   * @category Widgets/Scrollbar\n   */\n  scrollbarAutoHide: -1,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.clickScroll | ScrollbarConfig.clickScroll}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarClickScroll: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.dragScroll | ScrollbarConfig.dragScroll}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarDragScroll: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.useHandle | ScrollbarConfig.useHandle}.\n   *\n   * @defaultValue false\n   * @category Widgets/Scrollbar\n   */\n  scrollbarUseHandle: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.diffTolerance | SameHeightConfig.diffTolerance}.\n   *\n   * @defaultValue 15\n   * @category Widgets/SameHeight\n   */\n  sameHeightDiffTolerance: 15,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.resizeThreshold | SameHeightConfig.resizeThreshold}.\n   *\n   * @defaultValue 5\n   * @category Widgets/SameHeight\n   */\n  sameHeightResizeThreshold: 5,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.debounceWindow | SameHeightConfig.debounceWindow}.\n   *\n   * @defaultValue 100\n   * @category Widgets/SameHeight\n   */\n  sameHeightDebounceWindow: 100,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.minGap | SameHeightConfig.minGap}.\n   *\n   * @defaultValue 30\n   * @category Widgets/SameHeight\n   */\n  sameHeightMinGap: 30,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.maxFreeR | SameHeightConfig.maxFreeR}.\n   *\n   * @defaultValue 0.4\n   * @category Widgets/SameHeight\n   */\n  sameHeightMaxFreeR: 0.4,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.maxWidthR | SameHeightConfig.maxWidthR}.\n   *\n   * @defaultValue 1.7\n   * @category Widgets/SameHeight\n   */\n  sameHeightMaxWidthR: 1.7,\n\n  /**\n   * Set custom device breakpoints as width in pixels.\n   *\n   * The value of each sets its lower limit, i.e. it specifies a device whose\n   * width is larger than the given value (and up to the next larger one).\n   *\n   * If you specify only some of the below devices, then the other ones will\n   * keep their default breakpoint values.\n   *\n   * Adding device types, other than the ones listed below is not supported.\n   *\n   * @category Device layouts\n   */\n  deviceBreakpoints: {\n    /**\n     * This should be left as 0 as it's the catch-all for anything narrower\n     * than \"mobile-wide\".\n     *\n     * @defaultValue 0\n     */\n    mobile: 0,\n\n    /**\n     * Anything wider than the given value is \"mobile-wide\", up to the value of\n     * \"tablet\".\n     *\n     * @defaultValue 576\n     */\n    \"mobile-wide\": 576,\n\n    /**\n     * Anything wider than the given value is \"tablet\", up to the value of\n     * \"desktop\".\n     *\n     * @defaultValue 768\n     */\n    tablet: 768, // tablet is anything above this (up to desktop)\n\n    /**\n     * Anything wider than the given value is \"desktop\".\n     *\n     * @defaultValue 992\n     */\n    desktop: 992, // desktop is anything above this\n  },\n\n  /**\n   * Set custom aspect ratio breakpoints (as ratio of width to height).\n   *\n   * The value of each sets its lower limit, i.e. it specifies an aspect ratio\n   * that is wider than the given value (and up to the next wider one).\n   *\n   * If you specify only some of the below aspect ratios, then the other ones\n   * will keep their default breakpoint values.\n   *\n   * Adding aspect ratio types, other than the ones listed below is not\n   * supported.\n   *\n   * @category Device layouts\n   */\n  aspectRatioBreakpoints: {\n    /**\n     * This should be left as 0 as it's the catch-all for anything with\n     * a narrower aspect ratio than \"tall\".\n     *\n     * @defaultValue 0\n     */\n    \"very-tall\": 0, // very tall is up to 9:16\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"tall\", up to\n     * the value of \"square\".\n     *\n     * @defaultValue 9 / 16\n     */\n    tall: 9 / 16, // tall is between 9:16 and 3:4\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"square\", up\n     * to the value of \"wide\".\n     *\n     * @defaultValue 3 / 4\n     */\n    square: 3 / 4, // square is between 3:4 and 4:3\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"wide\", up to\n     * the value of \"very-wide\".\n     *\n     * @defaultValue 4 / 3\n     */\n    wide: 4 / 3, // wide is between 4:3 and 16:9\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"very-wide\".\n     *\n     * @defaultValue 16 / 9\n     */\n    \"very-wide\": 16 / 9, // very wide is above 16:9\n  },\n\n  /**\n   * The CSS class that enables light theme.\n   *\n   * **IMPORTANT:** If you change this, you should also change the\n   * `$light-theme-cls` variable in the SCSS configuration, or otherwise add the\n   * following to your CSS:\n   *\n   * :root,\n   * .custom-light-theme-cls {\n   *   --lisn-color-fg: some-dark-color;\n   *   --lisn-color-fg-t: some-dark-color-with-transparency;\n   *   --lisn-color-bg: some-light-color;\n   *   --lisn-color-bg-t: some-light-color-with-transparency;\n   * }\n   */\n  lightThemeClassName: \"light-theme\",\n\n  /**\n   * The CSS class that enables dark theme.\n   *\n   * **IMPORTANT:** If you change this, you should also change the\n   * `$dark-theme-cls` variable in the SCSS configuration, or otherwise add the\n   * following to your CSS:\n   *\n   * .custom-dark-theme-cls {\n   *   --lisn-color-fg: some-light-color;\n   *   --lisn-color-fg-t: some-light-color-with-transparency;\n   *   --lisn-color-bg: some-dark-color;\n   *   --lisn-color-bg-t: some-dark-color-with-transparency;\n   * }\n   */\n  darkThemeClassName: \"dark-theme\",\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some key (arrows) and wheel events (where the browser reports the delta\n   * mode to be LINE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 40\n   * @category Gestures\n   */\n  deltaLineHeight: 40,\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some wheel events (where the browser reports the delta mode to be PAGE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 1600\n   * @category Gestures\n   */\n  deltaPageWidth: 1600,\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some key (PageUp/PageDown/Space) and wheel events (where the browser\n   * reports the delta mode to be PAGE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 800\n   * @category Gestures\n   */\n  deltaPageHeight: 800,\n\n  /**\n   * Controls the debugging verbosity level. Values from 0 (none) to 10 (insane)\n   * are recognized.\n   *\n   * **Note:** Logging is not available in bundles except in the \"debug\" bundle.\n   *\n   * @defaultValue `0` except in the \"debug\" bundle where it defaults to 10\n   * @category Logging\n   */\n  verbosityLevel: 0,\n\n  /**\n   * The URL of the remote logger to connect to. LISN uses\n   * {@link https://socket.io/docs/v4/client-api/ | socket.io-client}\n   * to talk to the client and emits messages on the following namespaces:\n   *\n   * - `console.debug`\n   * - `console.log`\n   * - `console.info`\n   * - `console.warn`\n   * - `console.error`\n   *\n   * There is a simple logging server that ships with LISN, see the source\n   * code repository.\n   *\n   * You can always explicitly disable remote logging on a given page by\n   * setting `disableRemoteLog=1` query parameter in the URL.\n   *\n   * **Note:** Logging is not available in bundles (except in the `debug` bundle).\n   *\n   * @defaultValue null\n   * @category Logging\n   */\n  remoteLoggerURL: null as string | null,\n\n  /**\n   * Enable remote logging only on mobile devices.\n   *\n   * You can always disable remote logging for any page by setting\n   * `disableRemoteLog=1` URL query parameter.\n   *\n   * **Note:** Logging is not available in bundles (except in the `debug` bundle).\n   *\n   * @defaultValue false\n   * @category Logging\n   */\n  remoteLoggerOnMobileOnly: false,\n});\n\n// --------------------\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Point, Vector, AtLeastOne } from \"@lisn/globals/types\";\n\n/**\n * Round a number to the given decimal precision (default is 0).\n *\n * @param {} [numDecimal = 0]\n *\n * @category Math\n */\nexport const roundNumTo = (value: number, numDecimal = 0) => {\n  const multiplicationFactor = MH.pow(10, numDecimal);\n  return MH.round(value * multiplicationFactor) / multiplicationFactor;\n};\n\n/**\n * Returns true if the given value is a valid _finite_ number.\n *\n * @category Validation\n */\nexport const isValidNum = (value: unknown): value is number =>\n  MH.isNumber(value) && MC.NUMBER.isFinite(value);\n\n/**\n * If the given value is a valid _finite_ number, it is returned, otherwise\n * the default is returned.\n *\n * @category Math\n */\nexport const toNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = MH.isLiteralString(value) ? MH.parseFloat(value) : value;\n\n  // parseFloat will strip trailing non-numeric characters, so we check that\n  // the parsed number is equal to the string, if it was a string, using loose\n  // equality, in order to make sure the entire string was a number.\n  return isValidNum(numValue) && numValue == value ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid _finite integer_ number, it is returned,\n * otherwise the default is returned.\n *\n * @category Math\n */\nexport const toInt = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  let numValue = toNum(value, null);\n  numValue = numValue === null ? numValue : MH.floor(numValue);\n\n  // Ensure that the parsed int equaled the original by loose equality.\n  return isValidNum(numValue) && numValue == value ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid non-negative _finite_ number, it is returned,\n * otherwise the default is returned.\n *\n * @category Math\n */\nexport const toNonNegNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = toNum(value, null);\n  return numValue !== null && numValue >= 0 ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid positive number, it is returned, otherwise the\n * default is returned.\n *\n * @category Math\n */\nexport const toPosNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = toNum(value, null);\n  return numValue !== null && numValue > 0 ? numValue : defaultValue;\n};\n\n/**\n * Returns the given number bound by min and/or max value.\n *\n * If the value is not a valid number, then `defaultValue` is returned if given\n * (_including if it is null_), otherwise `limits.min` if given and not null,\n * otherwise `limits.max` if given and not null, or finally 0.\n *\n * If the value is outside the bounds, then:\n * - if `defaultValue` is given, `defaultValue` is returned (_including if it\n *   is null_)\n * - otherwise, the min or the max value (whichever one is violated) is\n *   returned\n *\n * @category Math\n */\nexport const toNumWithBounds = <D extends number | false | null = number>(\n  value: unknown,\n  limits: AtLeastOne<{ min: number | null; max: number | null }>,\n  defaultValue?: D,\n): number | D => {\n  const isDefaultGiven = defaultValue !== undefined;\n  const numValue = toNum(value, null);\n  const min = limits?.min ?? null;\n  const max = limits?.max ?? null;\n\n  let result: number | D;\n  if (!isValidNum(numValue)) {\n    result = isDefaultGiven ? defaultValue : (min ?? max ?? 0);\n  } else if (min !== null && numValue < min) {\n    result = isDefaultGiven ? defaultValue : min;\n  } else if (max !== null && numValue > max) {\n    result = isDefaultGiven ? defaultValue : max;\n  } else {\n    result = numValue;\n  }\n\n  return result;\n};\n\n/**\n * Returns the largest absolute value among the given ones.\n *\n * The result is always positive.\n *\n * @category Math\n */\nexport const maxAbs = (...values: number[]) =>\n  MH.max(...values.map((v) => MH.abs(v)));\n\n/**\n * Returns the smallest absolute value among the given ones.\n *\n * The result is always positive.\n *\n * @category Math\n */\nexport const minAbs = (...values: number[]) =>\n  MH.min(...values.map((v) => MH.abs(v)));\n\n/**\n * Returns the value with the largest absolute value among the given ones.\n *\n * The result can be negative.\n *\n * @category Math\n */\nexport const havingMaxAbs = (...values: number[]): number =>\n  MH.lengthOf(values)\n    ? values.sort((a, b) => MH.abs(b) - MH.abs(a))[0]\n    : -MC.INFINITY;\n\n/**\n * Returns the value with the smallest absolute value among the given ones.\n *\n * The result can be negative.\n *\n * @category Math\n */\nexport const havingMinAbs = (...values: number[]) =>\n  MH.lengthOf(values)\n    ? values.sort((a, b) => MH.abs(a) - MH.abs(b))[0]\n    : MC.INFINITY;\n\n/**\n * Returns the angle (in radians) that the vector defined by the given x, y\n * makes with the positive horizontal axis.\n *\n * The angle returned is in the range -PI to PI, not including -PI.\n *\n * @category Math\n */\nexport const hAngle = (x: number, y: number) =>\n  normalizeAngle(MC.MATH.atan2(y, x)); // ensure that -PI is transformed to +PI\n\n/**\n * Normalizes the given angle (in radians) so that it's in the range -PI to PI,\n * not including -PI.\n *\n * @category Math\n */\nexport const normalizeAngle = (a: number) => {\n  // ensure it's positive in the range 0 to 2 PI\n  while (a < 0 || a > MC.PI * 2) {\n    a += (a < 0 ? 1 : -1) * MC.PI * 2;\n  }\n\n  // then, if > PI, offset by - 2PI\n  return a > MC.PI ? a - MC.PI * 2 : a;\n};\n\n/**\n * Converts the given angle in degrees to radians.\n *\n * @category Math\n */\nexport const degToRad = (a: number) => (a * MC.PI) / 180;\n\n/**\n * Converts the given angle in radians to degrees.\n *\n * @category Math\n */\nexport const radToDeg = (a: number) => (a * 180) / MC.PI;\n\n/**\n * Returns true if the given vectors point in the same direction.\n *\n * @param {} angleDiffThreshold\n *                  Sets the threshold in degrees when comparing the angles of\n *                  two vectors. E.g. for 5 degrees threshold, directions\n *                  whose vectors are within 5 degrees of each other are\n *                  considered parallel.\n *                  It doesn't make sense for this value to be < 0 or >= 90\n *                  degrees. If it is, it's forced to be positive (absolute)\n *                  and <= 89.99.\n *\n * @category Math\n */\nexport const areParallel = (vA: Vector, vB: Vector, angleDiffThreshold = 0) => {\n  const angleA = hAngle(vA[0], vA[1]);\n  const angleB = hAngle(vB[0], vB[1]);\n  angleDiffThreshold = MH.min(89.99, MH.abs(angleDiffThreshold));\n\n  return (\n    MH.abs(normalizeAngle(angleA - angleB)) <= degToRad(angleDiffThreshold)\n  );\n};\n\n/**\n * Returns true if the given vectors point in the opposite direction.\n *\n * @param {} angleDiffThreshold\n *                  Sets the threshold in degrees when comparing the angles of\n *                  two vectors. E.g. for 5 degrees threshold, directions\n *                  whose vectors are within 175-185 degrees of each other are\n *                  considered antiparallel.\n *                  It doesn't make sense for this value to be < 0 or >= 90\n *                  degrees. If it is, it's forced to be positive (absolute)\n *                  and <= 89.99.\n *\n * @category Math\n */\nexport const areAntiParallel = (\n  vA: Vector,\n  vB: Vector,\n  angleDiffThreshold = 0,\n) => areParallel(vA, [-vB[0], -vB[1]], angleDiffThreshold);\n\n/**\n * Returns the distance between two points on the screen.\n *\n * @category Math\n */\nexport const distanceBetween = (ptA: Point, ptB: Point) =>\n  MH.sqrt(MH.pow(ptA[0] - ptB[0], 2) + MH.pow(ptA[1] - ptB[1], 2));\n\n/**\n * Returns the two roots of the quadratic equation with coefficients\n * `a`, `b` & `c`, i.e. `a * x^2 + b * x + c = 0`\n *\n * The roots may be `NaN` if the quadratic has no real solutions.\n *\n * @category Math\n */\nexport const quadraticRoots = (a: number, b: number, c: number) => {\n  const z = MH.sqrt(b * b - 4 * a * c);\n  return [(-b + z) / (2 * a), (-b - z) / (2 * a)];\n};\n\n/**\n * Returns the value that an \"easing\" quadratic function would have at the\n * given x.\n *\n * @see https://easings.net/#easeInOutQuad\n *\n * @category Math\n */\nexport const easeInOutQuad = (x: number) =>\n  x < 0.5 ? 2 * x * x : 1 - MH.pow(-2 * x + 2, 2) / 2;\n\n/**\n * Returns an array of object's keys sorted by the numeric value they hold.\n *\n * @category Math\n */\nexport const sortedKeysByVal = <T extends Record<string, number>>(\n  obj: T,\n  descending = false,\n): Array<keyof T> => {\n  if (descending) {\n    return MH.keysOf(obj).sort((x: keyof T, y: keyof T) => obj[y] - obj[x]);\n  }\n\n  return MH.keysOf(obj).sort((x: keyof T, y: keyof T) => obj[x] - obj[y]);\n};\n\n/**\n * Returns the key in the given object which holds the largest numeric value.\n *\n * If the object is empty, returns `undefined`.\n *\n * @category Math\n */\nexport const keyWithMaxVal = (\n  obj: Record<string, number>,\n): string | undefined => {\n  return sortedKeysByVal(obj).slice(-1)[0];\n};\n\n/**\n * Returns the key in the given object which holds the smallest numeric value.\n *\n * If the object is empty, returns `undefined`.\n *\n * @category Math\n */\nexport const keyWithMinVal = (\n  obj: Record<string, number>,\n): string | undefined => {\n  return sortedKeysByVal(obj).slice(0, 1)[0];\n};\n\n/**\n * Takes two integers and returns a bitmask that covers all values between\n * 1 << start and 1 << end, _including the starting and ending one_.\n *\n * If pStart > pEnd, they are reversed.\n *\n * getBitmask(start, start) always returns 1 << start\n * getBitmask(start, end) always returns same as getBitmask(end, start)\n *\n * @category Math\n */\nexport const getBitmask = (start: number, end: number): number =>\n  start > end\n    ? getBitmask(end, start)\n    : (~0 >>> (32 - end - 1 + start)) << start;\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { roundNumTo } from \"@lisn/utils/math\";\n\nexport const isTouchScreen = () =>\n  MH.hasDOM() ? matchMedia(\"(any-pointer: coarse)\").matches : false;\n\nexport const copyExistingKeys = <T extends object>(fromObj: T, toObj: T) => {\n  for (const key in toObj) {\n    if (!MH.hasOwnProp(toObj, key)) {\n      continue;\n    }\n\n    if (key in fromObj) {\n      if (MH.isNonPrimitive(fromObj[key]) && MH.isNonPrimitive(toObj[key])) {\n        copyExistingKeys(fromObj[key], toObj[key]);\n      } else {\n        toObj[key] = fromObj[key];\n      }\n    }\n  }\n};\n\n// Omits the keys in object keysToRm from obj. This is to avoid hardcording the\n// key names as a string so as to allow minifier to mangle them, and to avoid\n// using object spread.\nexport const omitKeys = <\n  O extends object,\n  R extends { [K in keyof O]?: unknown },\n>(\n  obj: O,\n  keysToRm: R,\n): Omit<O, keyof R> => {\n  const res: Partial<O> = {};\n  let key: keyof O;\n\n  for (key in obj) {\n    if (!(key in keysToRm)) {\n      res[key] = obj[key];\n    }\n  }\n\n  return res as Omit<O, keyof R>;\n};\n\n// Returns true if the two objects are equal. If values are numeric, it will\n// round to the given number of decimal places.\nexport const compareValuesIn = <T extends object>(\n  objA: T,\n  objB: T,\n  roundTo = 3,\n) => {\n  for (const key in objA) {\n    if (!MH.hasOwnProp(objA, key)) {\n      continue;\n    }\n\n    const valA = objA[key];\n    const valB = objB[key];\n\n    if (MH.isNonPrimitive(valA) && MH.isNonPrimitive(valB)) {\n      if (!compareValuesIn(valA, valB)) {\n        return false;\n      }\n    } else if (MH.isNumber(valA) && MH.isNumber(valB)) {\n      if (roundNumTo(valA, roundTo) !== roundNumTo(valB, roundTo)) {\n        return false;\n      }\n    } else if (valA !== valB) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const keyExists = <T extends object>(\n  obj: T,\n  key: string | number | symbol,\n): key is keyof T => MH.isNonPrimitive(obj) && key in obj;\n\nexport const toArrayIfSingle = <T>(value?: T | T[] | null | undefined): T[] =>\n  MH.isArray(value) ? value : !MH.isNullish(value) ? [value] : [];\n\nexport const toBool = (value: unknown) =>\n  value === true || value === \"true\" || value === \"\"\n    ? true\n    : MH.isNullish(value) || value === false || value === \"false\"\n      ? false\n      : null;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Size, StrRecord } from \"@lisn/globals/types\";\n\n/**\n * Formats an object as a string. It supports more meaningful formatting as\n * string for certain types rather than using the default string\n * representation.\n *\n * **NOTE:** This is not intended for serialization of data that needs to be\n * de-serialized. Only for debugging output.\n *\n * @param {} value     The value to format as string.\n * @param {} [maxLen]  Maximum length of the returned string. If not given or\n *                     is <= 0, the string is not truncated. Otherwise, if the\n *                     result is longer than maxLen, it is truncated to\n *                     `maxLen - 3` and added a suffix of \"...\".\n *                     Note that if `maxLen` is > 0 but <= 3, the result is\n *                     always \"...\"\n *\n * @category Text\n */\nexport const formatAsString = (value: unknown, maxLen?: number) => {\n  const result = maybeConvertToString(value, false);\n\n  if (!MH.isNullish(maxLen) && maxLen > 0 && MH.lengthOf(result) > maxLen) {\n    return result.slice(0, MH.max(0, maxLen - 3)) + \"...\";\n  }\n\n  return result;\n};\n\n/**\n * Join an array of values as string using separator. It uses\n * {@link formatAsString} rather than the default string representation as\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join | Array:join} would.\n *\n * @param {} separator  The separator to use to delimit each argument.\n * @param {} args       Objects or values to convert to string and join.\n *\n * @category Text\n */\nexport const joinAsString = (separator: string, ...args: unknown[]) =>\n  args.map((a) => formatAsString(a)).join(separator);\n\n/**\n * Similar to\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split | String.prototype.split}\n * except that\n * 1. `limit` is interpreted as the maximum number of splits, and the\n *   returned array contains `limit + 1` entries. Also if `limit` is given and\n *   the number of substrings is greater than the limit, all the remaining\n *   substrings are present in the final substring.\n * 2. If input is an empty string (or containing only whitespace), returns an\n *    empty array.\n *\n * @example\n * ```javascript\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 0); // -> ['foo, bar, baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 1); // -> ['foo', 'bar, baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 2); // -> ['foo', 'bar', 'baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 3); // -> ['foo', 'bar', 'baz']\n * ```\n *\n * @param {} trim  If true, entries will be trimmed for whitespace after splitting.\n *\n * @param {} limit If not given or < 0, the string will be split on every\n *                 occurrence of `separator`. Otherwise, it will be split on\n *                 the first `limit` number of occurrences of `separator`.\n *\n * @category Text\n */\nexport const splitOn = (\n  input: string,\n  separator: string | RegExp,\n  trim?: boolean,\n  limit?: number,\n) => {\n  if (!input.trim()) {\n    return [];\n  }\n\n  limit = limit ?? -1;\n\n  const output: string[] = [];\n  const addEntry = (s: string) => output.push(trim ? s.trim() : s);\n\n  while (limit--) {\n    let matchIndex = -1,\n      matchLength = 0;\n    if (MH.isLiteralString(separator)) {\n      matchIndex = input.indexOf(separator);\n      matchLength = MH.lengthOf(separator);\n    } else {\n      const match = separator.exec(input);\n      matchIndex = match?.index ?? -1;\n      matchLength = match ? MH.lengthOf(match[0]) : 0;\n    }\n\n    if (matchIndex < 0) {\n      break;\n    }\n\n    addEntry(input.slice(0, matchIndex));\n    input = input.slice(matchIndex + matchLength);\n  }\n\n  addEntry(input);\n  return output;\n};\n\n/**\n * Converts a kebab-cased-string to camelCase.\n * The result is undefined if the input string is not formatted in\n * kebab-case.\n *\n * @category Text\n */\nexport const kebabToCamelCase = MH.kebabToCamelCase;\n\n/**\n * Converts a camelCasedString to kebab-case.\n * The result is undefined if the input string is not formatted in\n * camelCase.\n *\n * @category Text\n */\nexport const camelToKebabCase = MH.camelToKebabCase;\n\n/**\n * Generates a random string of a fixed length.\n *\n * **IMPORTANT:** This is _not_ suitable for cryptographic applications.\n *\n * @param {} [nChars = 8]  The length of the returned stirng.\n *\n * @category Text\n */\nexport const randId = (nChars = 8) => {\n  const segment = () =>\n    MH.floor(100000 + MC.MATH.random() * 900000).toString(36);\n\n  let s = \"\";\n  while (MH.lengthOf(s) < nChars) {\n    s += segment();\n  }\n  return s.slice(0, nChars);\n};\n\n/**\n * Returns an array of numeric margins in pixels from the given margin string.\n * The string should contain margins in either pixels or percentage; other\n * units are not supported.\n *\n * Percentage values are converted to pixels relative to the given\n * `absoluteSize`: left/right margins relative to the width, and top/bottom\n * margins relative to the height.\n *\n * Note that for the margin property, percentages are always relative to the\n * WIDTH of the parent, so you should pass the parent width as both the width\n * and the height keys in `absoluteSize`. But for IntersectionObserver's\n * `rootMargin`, top/bottom margin is relative to the height of the root, so\n * pass the actual root size.\n *\n * @return {} [topMarginInPx, rightMarginInPx, bottomMarginInPx, leftMarginInPx]\n *\n * @category Text\n */\nexport const toMargins = (value: string, absoluteSize: Size) => {\n  const toPxValue = (strValue: string | undefined, index: number) => {\n    let margin = MH.parseFloat(strValue || \"\") || 0;\n\n    if (strValue === margin + \"%\") {\n      margin *=\n        index % 2 ? absoluteSize[MC.S_HEIGHT] : absoluteSize[MC.S_WIDTH];\n    }\n\n    return margin;\n  };\n\n  const parts = splitOn(value, \" \", true);\n  const margins: [number, number, number, number] = [\n    // top\n    toPxValue(parts[0], 0),\n    // right\n    toPxValue(parts[1] ?? parts[0], 1),\n    // bottom\n    toPxValue(parts[2] ?? parts[0], 2),\n    // left\n    toPxValue(parts[3] ?? parts[1] ?? parts[0], 3),\n  ];\n\n  return margins;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const objToStrKey = (obj: StrRecord): string =>\n  MH.stringify(flattenForSorting(obj));\n\n// --------------------\n\nconst flattenForSorting = (obj: StrRecord): unknown[] => {\n  const array = MH.isArray(obj)\n    ? obj\n    : MH.keysOf(obj)\n        .sort()\n        .map((k) => obj[k]);\n\n  return array.map((value) => {\n    if (\n      MH.isArray(value) ||\n      (MH.isNonPrimitive(value) && MH.constructorOf(value) === MC.OBJECT)\n    ) {\n      return flattenForSorting(value);\n    }\n    return value;\n  });\n};\n\nconst stringifyReplacer = (key: string, value: unknown) =>\n  key ? maybeConvertToString(value, true) : value;\n\nconst maybeConvertToString = <B extends boolean, V>(\n  value: V,\n  nested: B,\n): B extends false ? string : string | V => {\n  let result: string | V = \"\";\n\n  if (MH.isElement(value)) {\n    const classStr = MH.classList(value).toString().trim();\n\n    result = value.id\n      ? \"#\" + value.id\n      : `<${MH.tagName(value)}${classStr ? ' class=\"' + classStr + '\"' : \"\"}>`;\n\n    //\n  } else if (MH.isInstanceOf(value, Error)) {\n    /* istanbul ignore else */\n    if (\"stack\" in value && MH.isString(value.stack)) {\n      result = value.stack;\n    } else {\n      result = `Error: ${value.message}`;\n    }\n\n    //\n  } else if (MH.isArray(value)) {\n    result =\n      \"[\" +\n      value\n        .map((v) =>\n          MH.isString(v) ? MH.stringify(v) : maybeConvertToString(v, false),\n        )\n        .join(\",\") +\n      \"]\";\n\n    //\n  } else if (MH.isIterableObject(value)) {\n    result =\n      MH.typeOrClassOf(value) +\n      \"(\" +\n      maybeConvertToString(MH.arrayFrom(value), false) +\n      \")\";\n\n    //\n  } else if (MH.isNonPrimitive(value)) {\n    result = nested ? value : MH.stringify(value, stringifyReplacer);\n\n    //\n  } else {\n    // primitive\n    result = nested ? value : MC.STRING(value);\n  }\n\n  return result as B extends false ? string : string | V;\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\n\nimport { CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { toNum } from \"@lisn/utils/math\";\nimport { toBool } from \"@lisn/utils/misc\";\nimport { splitOn } from \"@lisn/utils/text\";\n\n/**\n * Returns true if the input is a string array or comma-separated string, whose\n * elements are valid according to the `validator` function.\n *\n * @param {} allowEmpty If `false`, then input without any entries is\n * considered _invalid_.\n *\n * @category Validation\n */\nexport const isValidStrList = <T extends string = string>(\n  value: unknown,\n  checkFn: (value: string) => value is T,\n  allowEmpty = true,\n): value is CommaSeparatedStr<T> | T[] => {\n  try {\n    const res = validateStrList(\"\", value, checkFn);\n    return allowEmpty || !MH.isNullish(res);\n  } catch (err) {\n    if (MH.isInstanceOf(err, LisnUsageError)) {\n      return false;\n    }\n    throw err;\n  }\n};\n\n/**\n * Returns an array of strings from the given list while validating each one\n * using the `checkFn` function.\n *\n * If it returns without throwing, the input is necessarily valid.\n * If the result is an empty array, it will return `null`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the input is not a string or array of strings, or if any\n *                entries do not pass `checkFn`.\n *\n * @param {} key Used in the error message thrown\n *\n * @return {} `undefined` if the input contains no non-empty values (after\n * trimming whitespace on left/right from each), otherwise a non-empty array of\n * values.\n *\n * @category Validation\n */\nexport const validateStrList = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n): T[] | undefined =>\n  MH.filterBlank(\n    toArray(value)?.map((v) =>\n      _validateString(key, v, checkFn, \"a string or a string array\"),\n    ),\n  );\n\n/**\n * Returns an array of numbers from the given list.\n *\n * If it returns without throwing, the input is necessarily valid.\n * If the result is an empty array, it will return `null`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the input is not a number or array of numbers. Numerical\n *                strings are accepted.\n *\n * @param {} key Used in the error message thrown\n *\n * @return {} `undefined` if the input contains no non-empty values (after\n * trimming whitespace on left/right from each), otherwise a non-empty array of\n * values.\n *\n * @category Validation\n */\nexport const validateNumList = (\n  key: string,\n  value: unknown,\n): number[] | undefined =>\n  MH.filterBlank(\n    toArray(value)?.map((v) =>\n      _validateNumber(key, v, \"a number or a number array\"),\n    ),\n  );\n\n/**\n * Returns a number corresponding to the supplied value, ensuring the supplied\n * value is a valid number or a string containing only a number.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @return {} `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateNumber = (key: string, value: unknown) =>\n  _validateNumber(key, value);\n\n/**\n * Returns a boolean corresponding to the given value as follows:\n *\n * - `null` and `undefined` result in `undefined`\n * - `false` and `\"false\"` result in `false`\n * - `\"\"`, `true` and `\"true\"` result in `true`\n * - other values throw an error error\n *\n * Note that an empty string is treated as `true`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is not a valid boolean or boolean string.\n *\n * @return {} `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateBoolean = (key: string, value: unknown) =>\n  _validateBoolean(key, value);\n\n/**\n * Returns a valid string from the supplied value, ensuring the supplied value\n * is a string that conforms to the given `checkFn`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @param {} checkFn      If given and the supplied value is a string, then it\n *                        is called with the value as a single argument. It\n *                        must return true if the value is valid and false\n *                        otherwise.\n *                        If it is not given, then any literal string is\n *                        accepted.\n *\n * @return {} `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n) => _validateString(key, value, checkFn);\n\n/**\n * Like {@link validateString} except it requires input to be given and\n * non-empty.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid or empty.\n *\n * @category Validation\n */\nexport const validateStringRequired = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n): T => {\n  const result = _validateString(key, value, checkFn);\n\n  if (MH.isEmpty(result)) {\n    throw MH.usageError(`'${key}' is required`);\n  }\n\n  return result;\n};\n\n/**\n * Returns a valid boolean or a string from the supplied value, ensuring the\n * supplied value is either a boolean or boolean string (see\n * {@link validateBoolean}), or a string that conforms to the given `checkFn`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @param {} stringCheckFn If given and the supplied value is a string _other\n *                         than a boolean string_, then it is called with the\n *                         value as a single argument. It must return true if\n *                         the value is valid and false otherwise.\n *                         If it is not given, then any literal string is\n *                         accepted.\n *\n * @category Validation\n */\nexport const validateBooleanOrString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  stringCheckFn?: (value: string) => value is T,\n) => _validateBooleanOrString(key, value, stringCheckFn);\n\n// --------------------\n\nconst toArray = (value: unknown): unknown[] | undefined => {\n  let result: unknown[] | null;\n  if (MH.isArray(value)) {\n    result = value;\n  } else if (MH.isIterableObject(value)) {\n    result = MH.arrayFrom(value);\n  } else if (MH.isLiteralString(value)) {\n    result = splitOn(value, \",\");\n  } else if (!MH.isNullish(value)) {\n    result = [value];\n  } else {\n    result = null;\n  }\n\n  return result\n    ? MH.filterBlank(result.map((v) => (MH.isLiteralString(v) ? v.trim() : v)))\n    : undefined;\n};\n\nconst _validateNumber = (\n  key: string,\n  value: unknown,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const numVal = toNum(value, null);\n  if (numVal === null) {\n    throw MH.usageError(`'${key}' must be ${typeDescription ?? \"a number\"}`);\n  }\n\n  return numVal;\n};\n\nconst _validateBoolean = (\n  key: string,\n  value: unknown,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const boolVal = toBool(value);\n  if (boolVal === null) {\n    throw MH.usageError(\n      `'${key}' must be ${typeDescription ?? '\"true\" or \"false\"'}`,\n    );\n  }\n\n  return boolVal;\n};\n\nconst _validateString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n  typeDescription?: string,\n): (typeof checkFn extends null | undefined ? string : T) | undefined => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  if (!MH.isLiteralString(value)) {\n    throw MH.usageError(`'${key}' must be ${typeDescription ?? \"a string\"}`);\n  } else if (checkFn && !checkFn(value)) {\n    throw MH.usageError(`Invalid value for '${key}'`);\n  }\n\n  return value as typeof checkFn extends null | undefined ? string : T;\n};\n\nconst _validateBooleanOrString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  stringCheckFn?: (value: string) => value is T,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const boolVal = toBool(value);\n  if (boolVal !== null) {\n    return boolVal;\n  }\n\n  if (!MH.isLiteralString(value)) {\n    throw MH.usageError(\n      `'${key}' must be ${typeDescription ?? \"a boolean or string\"}`,\n    );\n  }\n\n  return _validateString(key, value, stringCheckFn);\n};\n","/**\n * @module Modules/BitSpaces\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getBitmask } from \"@lisn/utils/math\";\n\nexport type BitPropName = string;\n\n/**\n * A union of all property names in the space.\n */\nexport type BitSpaceKey<S> = S extends BitSpace<infer T> ? T : never;\n\n/**\n * {@link BitSpace} represents a single set of mutually exclusive (or\n * orthogonal) properties.\n *\n * Each property has a numeric value equal to 1 bit-shifted by a certain number\n * of bits.\n *\n * Created using {@link BitSpaces.create}\n *\n * @interface\n */\nexport type BitSpace<T extends BitPropName> = {\n  /**\n   * The starting bit of the space. It's 0 for the first space created in a\n   * given set of {@link BitSpaces}.\n   */\n  start: number;\n\n  /**\n   * The ending bit of the space. It's always equal to\n   * start + (# of properties in space) - 1\n   */\n  end: number;\n\n  /**\n   * A bitmask of all values in the space.\n   */\n  bitmask: number;\n\n  /**\n   * Returns true if the given name is one of the properties in the space.\n   * It is case-sensitive.\n   */\n  has: (p: string) => p is T;\n\n  /**\n   * Takes the names of two properties within the space and returns a bitmask\n   * that covers all values between them _including the starting and ending\n   * one_.*\n   *\n   * If pStart > pEnd, they are reversed.\n   *\n   * * The numeric values of the properties are guaranteed to be in the same\n   *   order, increasing in value, as the keys passed to the `BitSpaces.create`,\n   *   function.\n   *\n   * @param {} pStart  The name of the property that holds the start value.\n   *                   If null the bitmask will cover from the lowest property.\n   * @param {} pEnd    The name of the property that holds the end cut-off\n   *                   value for the bitmask. The bitmask with _not_ include\n   *                   pEnd's value.\n   *                   If null the bitmask will cover to the highest property,\n   *                   _including_.\n   *\n   * @returns {} Returns a non-0 bitmask containing all values in the space\n   *             between the given ones.\n   *             Returns 0 if one or both of the given properties do not exist\n   *             in the space.\n   */\n  bitmaskFor: (pStart?: T | null, pEnd?: T | null) => number;\n\n  /**\n   * Returns the name of the property with the given value, or null if the\n   * value does not correspond to one of the space properties.\n   */\n  nameOf: (val: number) => T | null;\n\n  /**\n   * Holds properties whose numeric values are non-overlapping binary values,\n   * suitable for bitmasking.\n   *\n   * The given properties are set under the \"bit\" key in the object and hold\n   * the numeric value.\n   *\n   * @example\n   * ```javascript\n   * const space = new BitSpaces().create(\"up\", \"down\", \"left\", \"right\");\n   *\n   * // {\n   * //     bit: {\n   * //         up:    1, // at bit 0, i.e. 1 << 0\n   * //         down:  2, // at bit 1, i.e. 1 << 1\n   * //         left:  4, // at bit 2, i.e. 1 << 2\n   * //         right: 8, // at bit 3, i.e. 1 << 3\n   * //     },\n   * //     start:      0,\n   * //     end:        3,\n   * //     bitmask:    15, // 1 << 0 | 1 << 1 | 1 << 2 | 1 << 3\n   * //     has:        (p) => p === \"up\" || p === \"down\" || p === \"left\" || p === \"right\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 1 ? \"up\" : v === 2 ? \"down\" : v === 4 ...\n   * // }\n   *\n   * space.bitmaskFor(); // => space.bitmask (15)\n   * space.bitmaskFor(\"left\"); // => space.bit.left | space.bit.right (12)\n   * space.bitmaskFor(null, \"down\"); // => space.bit.up | space.bit.down (3)\n   * ```\n   */\n  bit: {\n    [key in T]: number;\n  };\n};\n\n/**\n * {@link BitSpaces} represents one or more related {@link BitSpace}s whose bit\n * values will not overlap.\n */\nexport class BitSpaces {\n  /**\n   * Creates and returns a new BitSpace that is bit shifted to the left as\n   * many bits as the ending bit of the previous space created by this\n   * instances, so that each new space created is non-overlapping with previous\n   * ones.\n   *\n   * The numeric values of the properties are guaranteed to be in the same\n   * order, increasing in value, as the keys passed to the function.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the number of bits in the space will exceed 32.\n   *\n   * @example\n   * ```javascript\n   * const spaces = new BitSpaces();\n   * const spaceA = spaces.create(\"up\", \"down\");\n   *\n   * // spaces.nBits   => 2\n   * // spaces.bitmask => 3\n   * //\n   * // spaceA:\n   * // {\n   * //     bit: {\n   * //         up:     1, // at bit 0, i.e. 1 << 0\n   * //         down:   2, // at bit 1, i.e. 1 << 1\n   * //     },\n   * //     start:      0,\n   * //     end:        1,\n   * //     bitmask:    3, // 1 << 0 | 1 << 1\n   * //     has:        (p) => p === \"up\" || p === \"down\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 1 ? \"up\" : v === 2 ? \"down\" : null\n   * // }\n   *\n   * const spaceB = spaces.create(\"left\", \"right\");\n   *\n   * // spaces.nBits   => 4\n   * // spaces.bitmask => 15\n   * //\n   * // spaceB:\n   * // {\n   * //     bit: {\n   * //         left:   4, // at bit 2, i.e. 1 << 2\n   * //         right:  8, // at bit 3, i.e. 1 << 3\n   * //     },\n   * //     start:      2,\n   * //     end:        3,\n   * //     bitmask:    12, // 1 << 2 | 1 << 3\n   * //     has:        (p) => p === \"left\" || p === \"right\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 4 ? \"left\" : v === 8 ? \"right\" : null\n   * // }\n   *\n   * ```\n   */\n  readonly create: <T extends BitPropName>(\n    ...propNames: readonly T[]\n  ) => BitSpace<T>;\n\n  /**\n   * Returns the number of bits all created spaces span, i.e. the end bit of\n   * the one + 1.\n   */\n  readonly nBits!: number;\n\n  /**\n   * Returns a bitmask containing all values in all created spaces.\n   */\n  readonly bitmask!: number;\n\n  constructor() {\n    const counter = newCounter();\n\n    this.create = (...propNames) => newBitSpace(counter, propNames);\n    MH.defineProperty(this, \"nBits\", { get: () => counter._nBits });\n    MH.defineProperty(this, \"bitmask\", { get: () => counter._bitmask });\n  }\n}\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newBitSpaces = () => new BitSpaces();\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const createBitSpace = <T extends BitPropName>(\n  spaces: BitSpaces,\n  ...propNames: readonly T[]\n): BitSpace<T> => spaces.create(...propNames);\n\n// ----------------------------------------\n\ntype BitCounter = {\n  _nBits: number;\n  _bitmask: number;\n};\n\nconst newCounter = (): BitCounter => ({\n  _nBits: 0,\n  _bitmask: 0,\n});\n\nconst newBitSpace = <T extends BitPropName>(\n  counter: BitCounter,\n  propNames: readonly T[],\n): BitSpace<T> => {\n  const start = counter._nBits;\n  const end = start + MH.lengthOf(propNames) - 1;\n  if (end >= 31) {\n    throw MH.usageError(\"BitSpaces overflow\");\n  }\n\n  const bitmask = getBitmask(start, end);\n  const space: BitSpace<T> = {\n    bit: {},\n    start,\n    end,\n    bitmask,\n\n    has: (p) =>\n      MH.isString(p) &&\n      p in space.bit &&\n      MH.isNumber((space.bit as Record<string, unknown>)[p]),\n\n    bitmaskFor: (pStart, pEnd) => {\n      if (\n        (!MH.isEmpty(pStart) && !space.has(pStart)) ||\n        (!MH.isEmpty(pEnd) && !space.has(pEnd))\n      ) {\n        return 0;\n      }\n\n      const thisStart = !MH.isEmpty(pStart)\n        ? MH.log2(space.bit[pStart])\n        : start;\n      const thisEnd = !MH.isEmpty(pEnd) ? MH.log2(space.bit[pEnd]) : end;\n\n      return getBitmask(thisStart, thisEnd);\n    },\n\n    nameOf: (val) => propNames[MH.log2(val) - start] ?? null,\n  } as BitSpace<T>;\n\n  for (const name of propNames) {\n    MH.defineProperty(space.bit, name, {\n      value: 1 << counter._nBits++,\n      enumerable: true,\n    });\n  }\n\n  counter._bitmask |= bitmask;\n\n  return space;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { MutationCategory } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newBitSpaces, createBitSpace } from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid category.\n *\n * @category Validation\n */\nexport const isValidMutationCategory = (\n  category: string,\n): category is MutationCategory => DOM_CATEGORIES_SPACE.has(category);\n\n/**\n * Returns true if the given string or array is a list of valid categories.\n *\n * @category Validation\n */\nexport const isValidMutationCategoryList = (categories: string | string[]) =>\n  isValidStrList(categories, isValidMutationCategory, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const DOM_CATEGORIES_SPACE = createBitSpace<MutationCategory>(\n  newBitSpaces(),\n  MC.S_ADDED,\n  MC.S_REMOVED,\n  MC.S_ATTRIBUTE,\n);\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\n/**\n * @category Tasks\n */\nexport type SchedulerPostTaskOptions = {\n  delay?: number;\n  priority?: TaskPriority;\n  signal?: AbortSignal;\n};\n\n/**\n * @category Tasks\n */\nexport type Scheduler = {\n  postTask<T, P extends readonly unknown[] | []>(\n    callback: (...params: P) => T,\n    options?: SchedulerPostTaskOptions,\n    ...args: P\n  ): Promise<T>;\n};\n\n/**\n * @category Tasks\n */\nexport type TaskPriority = \"user-blocking\" | \"user-visible\" | \"background\";\n\n/* eslint-disable-next-line no-var */\ndeclare var scheduler: Scheduler;\n\n/**\n * Schedules a task with high priority to be executed as soon as possible.\n *\n * It uses {@link https://developer.mozilla.org/en-US/docs/Web/API/Scheduler/postTask | Scheduler:postTask}\n * if available, otherwise falls back to\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MessageChannel | MessageChannel}.\n *\n * @category Tasks\n */\nexport const scheduleHighPriorityTask = (task: () => void) => {\n  if (typeof scheduler !== \"undefined\") {\n    scheduler.postTask(task, {\n      priority: \"user-blocking\",\n    });\n  } else {\n    // Fallback to MessageChannel\n    const channel = new MessageChannel();\n    channel.port1.onmessage = () => {\n      channel.port1.close();\n      task();\n    };\n    channel.port2.postMessage(\"\");\n  }\n};\n\n/**\n * Returns a wrapper around the given handler that is debounced by the given\n * debounce window.\n *\n * @category Tasks\n */\nexport const getDebouncedHandler = <Args extends unknown[]>(\n  debounceWindow: number,\n  handler: (...args: Args) => void,\n) => {\n  if (!debounceWindow) {\n    return handler;\n  }\n\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  let lastArgs: Args;\n\n  return (...args: Args) => {\n    lastArgs = args;\n\n    if (timer === null) {\n      timer = MH.setTimer(async () => {\n        await handler(...lastArgs);\n        timer = null;\n      }, debounceWindow);\n    }\n  };\n};\n\n/**\n * Returns a promise that resolves at least the given number of delay (in\n * milliseconds) later. Uses `setTimeout`.\n *\n * @category Tasks\n */\nexport const waitForDelay = (delay?: number) =>\n  MH.newPromise<void>((resolve) => {\n    MH.setTimer(resolve, delay);\n  });\n","/**\n * @module Debugging\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LogFunction } from \"@lisn/globals/types\";\n\nimport { joinAsString } from \"@lisn/utils/text\";\n\nimport { LevelName, ConsoleInterface } from \"@lisn/debug/types\";\n\n/**\n * Logs to the local browser console. On iOS devices it uses `console.info` for\n * all levels because of a bug in WebKit whereby other log levels don't show in\n * some remote debuggers. Also, iOS console only supports a single argument, so\n * it joins the given arguments as a single string.\n *\n * @category Logging\n */\nexport class LocalConsole implements ConsoleInterface {\n  readonly debug: LogFunction;\n  readonly log: LogFunction;\n  readonly info: LogFunction;\n  readonly warn: LogFunction;\n  readonly error: LogFunction;\n\n  constructor() {\n    this.debug = isiOS ? iOSlog : isJest ? jestLog.debug : MH.consoleDebug;\n    this.log = isiOS ? iOSlog : isJest ? jestLog.log : MH.consoleLog;\n    this.info = isiOS ? iOSlog : isJest ? jestLog.info : MH.consoleInfo;\n    this.warn = isiOS ? iOSlog : isJest ? jestLog.warn : MH.consoleWarn;\n    this.error = isiOS ? iOSlog : isJest ? jestLog.error : MH.consoleError;\n  }\n}\n\n// ------------------------------\n\nconst isiOS = MH.includes(MC.USER_AGENT, \"iPhone OS\") || false;\nconst iOSlog: LogFunction = (...args) =>\n  MH.consoleInfo(joinAsString(\" \", ...args));\n\nconst isJest = MH.includes(MC.USER_AGENT, \" jsdom/\") || false;\nconst jestLog: Record<LevelName, LogFunction> = {\n  debug: (...args) => MH.consoleDebug(joinAsString(\" \", ...args)),\n  log: (...args) => MH.consoleLog(joinAsString(\" \", ...args)),\n  info: (...args) => MH.consoleInfo(joinAsString(\" \", ...args)),\n  warn: (...args) => MH.consoleWarn(joinAsString(\" \", ...args)),\n  error: (...args) => MH.consoleError(joinAsString(\" \", ...args)),\n};\n","/**\n * @module Modules/XMap\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { MapBase } from \"@lisn/globals/types\";\n\nexport type DefaultValueGetter<K, V> = (key: K) => V;\nexport type IteratorCallback<K, V> = (\n  value: V,\n  key: K,\n  map: XMap<K, V>,\n) => void;\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXMap = <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  new XMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXMapGetter =\n  <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXMap(getDefaultV);\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMap = <K extends WeakKey, V>(\n  getDefaultV: DefaultValueGetter<K, V>,\n) => new XWeakMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXWeakMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMapGetter =\n  <K extends WeakKey, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXWeakMap(getDefaultV);\n\nexport abstract class XMapBase<K, V> {\n  /**\n   * Returns the value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly get: (key: K) => V | undefined;\n\n  /**\n   * Like {@link get} except that if the key is not found in the map, then it\n   * will set and return a default value by calling `getDefaultV` passed to the\n   * constructor.\n   */\n  readonly sGet: (key: K) => V;\n\n  /**\n   * Sets a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly set: (key: K, value: V) => void;\n\n  /**\n   * Deletes a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly delete: (key: K) => void;\n\n  /**\n   * Deletes empty keys in the {@link XMap} or {@link XWeakMap} starting at the\n   * final nested path and checking the level above after deletion.\n   *\n   * A key is considered empty if it's value is undefined or it's an empty Map,\n   * Set, Array, etc (anything with size or length property equal to 0).\n   */\n  readonly prune: (sk: K, ...rest: unknown[]) => void;\n\n  /**\n   * Returns true if the {@link XMap} or {@link XWeakMap} contains the given key.\n   */\n  readonly has: (key: K) => boolean;\n\n  protected constructor(\n    root: MapBase<K, V>,\n    getDefaultV: DefaultValueGetter<K, V>,\n  ) {\n    this.get = (key) => root.get(key);\n    this.set = (key, value) => root.set(key, value);\n    this.delete = (key) => MH.deleteKey(root, key);\n    this.has = (key) => root.has(key);\n\n    this.sGet = (key) => {\n      let result = root.get(key);\n      if (result === undefined) {\n        result = getDefaultV(key);\n        root.set(key, result);\n      }\n      return result;\n    };\n\n    this.prune = (sk, ...rest) => {\n      const value = root.get(sk);\n      if (value instanceof XMapBase && MH.lengthOf(rest)) {\n        value.prune(rest[0], ...rest.slice(1));\n      }\n\n      if (\n        value === undefined ||\n        (MH.isIterableObject(value) &&\n          !(\n            (\"size\" in value && value.size) ||\n            (\"length\" in value && value.length)\n          ))\n      ) {\n        MH.deleteKey(root, sk);\n      }\n    };\n  }\n}\n\n/**\n * {@link XMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map | Map},\n * except that it supports automatically creating missing entries with\n * {@link sGet} according to a default value getter function.\n *\n * @typeParam K  The type of the keys the map holds.\n * @typeParam V  The type of the values the map holds.\n */\nexport class XMap<K, V> extends XMapBase<K, V> implements Iterable<[K, V]> {\n  /**\n   * Returns the number of entries in the {@link XMap}.\n   */\n  readonly size!: number;\n\n  /**\n   * Deletes all entries in the {@link XMap}.\n   */\n  readonly clear: () => void;\n\n  /**\n   * Returns an iterator over the {@link XMap} entries.\n   */\n  readonly entries: () => MapIterator<[K, V]>;\n\n  /**\n   * Returns an iterator over the {@link XMap} keys.\n   */\n  readonly keys: () => MapIterator<K>;\n\n  /**\n   * Returns an iterator over the {@link XMap} values.\n   */\n  readonly values: () => MapIterator<V>;\n\n  readonly [Symbol.iterator]!: () => IterableIterator<[K, V]>;\n\n  /**\n   * Returns a function that when called returns a new {@link XMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XMap}s.\n   */\n  static readonly newXMapGetter = newXMapGetter;\n\n  /**\n   * @param {} getDefaultV  This function is called each time\n   *                        {@link sGet} is called with a non-existent\n   *                        key and must return a value that is then set for\n   *                        that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newMap<K, V>();\n    super(root, getDefaultV);\n\n    MH.defineProperty(this, \"size\", { get: () => root.size });\n    this.clear = () => root.clear();\n    this.entries = () => root.entries();\n    this.keys = () => root.keys();\n    this.values = () => root.values();\n    this[MC.SYMBOL.iterator] = () => root[MC.SYMBOL.iterator]();\n  }\n}\n\n/**\n * {@link XWeakMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap | WeakMap},\n * except that it supports automatically creating missing entries with\n * with {@link sGet} according to a default value getter function.\n *\n * @typeParam K  The type of the keys the map holds.\n * @typeParam V  The type of the values the map holds.\n */\nexport class XWeakMap<K extends WeakKey, V> extends XMapBase<K, V> {\n  /**\n   * Returns a function that when called returns a new {@link XWeakMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XWeakMap}s.\n   */\n  static readonly newXWeakMapGetter = newXWeakMapGetter;\n\n  /**\n   * @param {} getDefaultV  This function is called each time\n   *                        {@link sGet} is called with a non-existent\n   *                        key and must return a value that is then set for\n   *                        that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newWeakMap<K, V>();\n    super(root, getDefaultV);\n  }\n}\n","/**\n * @module Debugging\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LogFunction } from \"@lisn/globals/types\";\n\nimport { joinAsString } from \"@lisn/utils/text\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport { ConsoleInterface } from \"@lisn/debug/types\";\n\n/* ******************************\n * Remote console\n * *******************************/\n\n/**\n * Connects to a remote {@link https://socket.io/ | socket.io} server and logs\n * messages to it.\n *\n * In the root of the Git repository, there is a simple example server that\n * listens for these messages and logs them to the local console.\n *\n * @category Logging\n */\nexport class RemoteConsole implements ConsoleInterface {\n  /**\n   * Emits a message with ID `console.debug`.\n   */\n  readonly debug: LogFunction;\n\n  /**\n   * Emits a message with ID `console.log`.\n   */\n  readonly log: LogFunction;\n\n  /**\n   * Emits a message with ID `console.info`.\n   */\n  readonly info: LogFunction;\n\n  /**\n   * Emits a message with ID `console.warn`.\n   */\n  readonly warn: LogFunction;\n\n  /**\n   * Emits a message with ID `console.error`.\n   */\n  readonly error: LogFunction;\n\n  /**\n   * Disconnects and destroys the {@link RemoteConsole}. Cannot be undone.\n   */\n  readonly destroy: () => void;\n\n  /**\n   * Returns true if the client has been disconnected for more than\n   * the connect timeout.\n   */\n  readonly hasFailed: () => boolean;\n\n  /**\n   * Creates a new {@link RemoteConsole} and attempts to connect to the logger\n   * at the given URL.\n   *\n   * @param {} url                      The URL of the remote logger.\n   * @param {} [connectTimeout = 1500]  The timeout in ms for a connection\n   *                                    to be considered failed.\n   */\n  constructor(url: string, connectTimeout = DEFAULT_TIMEOUT) {\n    let hasFailed = false; // initially\n    let isClosed = false;\n\n    // Because socket.io module is optional we need to import it dynamically,\n    // which is always async. So to avoid Console and Logger also needing to be\n    // async, we queue messages sent to a RemoteConsole here and try to import\n    // socket.io here.\n    let tmpQueue: Array<[string, unknown[]]> = [];\n    let sendLog = (level: string, args: unknown[]) => {\n      tmpQueue.push([level, args]);\n    };\n    let destroy = () => {};\n\n    this.hasFailed = () => hasFailed;\n    this.debug = (...args) => sendLog(\"debug\", args);\n    this.log = (...args) => sendLog(\"log\", args);\n    this.info = (...args) => sendLog(\"info\", args);\n    this.warn = (...args) => sendLog(\"warn\", args);\n    this.error = (...args) => sendLog(\"error\", args);\n    this.destroy = () => destroy();\n\n    const cleanup = () => {\n      hasFailed = true;\n      sendLog = (level__ignored: string, args__ignored: unknown[]) => {};\n      tmpQueue = [];\n\n      const instance = instances.get(url)?.get(connectTimeout);\n      if (instance === this) {\n        MH.deleteKey(instances.get(url), connectTimeout);\n        instances.prune(url);\n      }\n    };\n\n    (async () => {\n      let socket;\n      try {\n        socket = await import(\"socket.io-client\");\n      } catch (e__ignored) {\n        // module doesn't exist\n        cleanup();\n        return;\n      }\n\n      const ioClient = socket.io(url);\n\n      // if not connected within connectTimeout initially, set as failed\n      let disconnectTimer = MH.setTimer(() => {\n        hasFailed = true;\n      }, connectTimeout);\n\n      ioClient.on(\"disconnect\", () => {\n        // if not re-connected within connectTimeout, set as failed\n        MH.clearTimer(disconnectTimer);\n        if (!isClosed) {\n          disconnectTimer = MH.setTimer(() => {\n            hasFailed = true;\n          }, connectTimeout);\n        }\n      });\n\n      ioClient.on(\"connect\", () => {\n        MH.clearTimer(disconnectTimer);\n        hasFailed = false;\n      });\n\n      // Now we can send directly to the client\n      sendLog = (level: string, args: unknown[]) => {\n        if (!hasFailed) {\n          ioClient.emit(`console.${level}`, joinAsString(\" \", ...args));\n        }\n      };\n\n      destroy = () => {\n        isClosed = true; // do not wait for re-connect\n        ioClient.disconnect();\n        cleanup();\n      };\n\n      // Flush the queue\n      let entry: [string, unknown[]] | undefined;\n      while ((entry = tmpQueue.shift())) {\n        sendLog(entry[0], entry[1]);\n      }\n    })();\n  }\n\n  /**\n   * Returns an existing {@link RemoteConsole} for the given URL and timeout or\n   * creates a new one.\n   *\n   * If a new one is created, it will be saved for later reuse.\n   *\n   * @param {} url               The URL of the remote logger.\n   * @param {} [connectTimeout]  The timeout in ms for a remote connection to\n   *                             be considered failed. Default is 1500.\n   */\n  static reuse(url: string, connectTimeout = DEFAULT_TIMEOUT) {\n    let rConsole = instances.get(url)?.get(connectTimeout);\n    if (!rConsole) {\n      rConsole = new RemoteConsole(url, connectTimeout);\n      instances.sGet(url).set(connectTimeout, rConsole);\n    }\n\n    return rConsole;\n  }\n}\n\nconst instances = newXMap<string, Map<number, RemoteConsole>>(() =>\n  MH.newMap(),\n);\n\nconst DEFAULT_TIMEOUT = 1500;\n","/**\n * @module Debugging\n */\n\nimport { LogFunction } from \"@lisn/globals/types\";\n\nimport { LevelName, ConsoleInterface } from \"@lisn/debug/types\";\nimport { LocalConsole } from \"@lisn/debug/local-console\";\nimport { RemoteConsole } from \"@lisn/debug/remote-console\";\n\n/**\n * Holds a {@link LocalConsole} and optionally a {@link RemoteConsole} and logs\n * to both.\n */\nexport class Console implements ConsoleInterface {\n  readonly debug: LogFunction;\n  readonly log: LogFunction;\n  readonly info: LogFunction;\n  readonly warn: LogFunction;\n  readonly error: LogFunction;\n\n  /**\n   * @param {} remoteUrl         Attempt to use a remote logger at this URL.\n   * @param {} [connectTimeout]  The timeout in ms for a remote connection to\n   *                             be considered failed.\n   *                             See {@link RemoteConsole}.\n   */\n  constructor(remoteUrl?: string, connectTimeout?: number) {\n    let remoteConsole;\n    // RemoteConsole import may be replaced with null by rollup when bundling\n    // production, so check\n    if (remoteUrl) {\n      remoteConsole = RemoteConsole.reuse(remoteUrl, connectTimeout);\n    } else {\n      remoteConsole = null;\n    }\n\n    const localConsole = new LocalConsole();\n    const sendLog = (level: LevelName, args: unknown[]) => {\n      localConsole[level](...args);\n      if (remoteConsole) {\n        remoteConsole[level](...args);\n      }\n    };\n\n    this.debug = (...args) => sendLog(\"debug\", args);\n    this.log = (...args) => sendLog(\"log\", args);\n    this.info = (...args) => sendLog(\"info\", args);\n    this.warn = (...args) => sendLog(\"warn\", args);\n    this.error = (...args) => sendLog(\"error\", args);\n  }\n}\n","/**\n * @module Debugging\n *\n * @categoryDescription Logging\n * {@link Debugging.LocalConsole | LocalConsole} logs to the local browser\n * console. On iOS devices it uses `console.info` for all levels because of a\n * bug in WebKit whereby other log levels don't show in some remote debuggers.\n * Also, iOS console only supports a single argument, so it joins the given\n * arguments as a single string.\n *\n * {@link Debugging.RemoteConsole | RemoteConsole} connects to a remote\n * {@link https://socket.io/ | socket.io} server and logs messages to it.\n *\n * {@link Console} holds a {@link LocalConsole} and optionally a\n * {@link RemoteConsole} and logs to both.\n *\n * {@link Logger} holds a {@link Console} and implements debug at 10 different\n * levels. The maximum logged level is configurable. Also emits a prefix in\n * debug messages that identifies the instance.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { LogFunction } from \"@lisn/globals/types\";\n\nimport { randId } from \"@lisn/utils/text\";\n\nimport { LoggerInterface, LoggerConfig } from \"@lisn/debug/types\";\nimport { Console } from \"@lisn/debug/console\";\n\n/**\n * Holds a {@link Console} and implements debug at 10 different levels. The\n * maximum logged level is configurable. Also emits a prefix in debug messages\n * that identifies the instance.\n *\n * @category Logging\n */\nexport class Logger implements LoggerInterface {\n  readonly debug: LogFunction;\n  readonly log: LogFunction;\n  readonly info: LogFunction;\n  readonly warn: LogFunction;\n  readonly error: LogFunction;\n  readonly debug1: LogFunction;\n  readonly debug2: LogFunction;\n  readonly debug3: LogFunction;\n  readonly debug4: LogFunction;\n  readonly debug5: LogFunction;\n  readonly debug6: LogFunction;\n  readonly debug7: LogFunction;\n  readonly debug8: LogFunction;\n  readonly debug9: LogFunction;\n  readonly debug10: LogFunction;\n  readonly getName: () => string;\n  readonly getVerbosityLevel: () => number;\n  readonly setVerbosityLevel: (level: number) => void;\n\n  constructor(config: LoggerConfig = {}) {\n    const myConfig = MH.merge(\n      {\n        // set defaults\n        verbosityLevel: settings.verbosityLevel,\n        remoteLoggerURL: settings.remoteLoggerURL,\n        remoteLoggerOnMobileOnly: settings.remoteLoggerOnMobileOnly,\n        debugID: randId(),\n      },\n      config,\n    );\n\n    let remoteLoggerURL = \"\";\n    if (\n      !getBooleanURLParam(\"disableRemoteLog\") &&\n      (myConfig.remoteLoggerOnMobileOnly === false || isMobile())\n    ) {\n      remoteLoggerURL = myConfig.remoteLoggerURL || \"\";\n    }\n\n    const name = myConfig.name || \"\";\n    const myConsole = new Console(\n      remoteLoggerURL,\n      myConfig.remoteLoggerConnectTimeout,\n    );\n    // use setters bellow to validate value\n    let verbosityLevel = 0;\n    const logPrefix = `[LISN${name ? \": \" + name : \"\"}]`;\n    const debugID = myConfig.debugID;\n    const debugPrefix = `[LISN${(name ? \": \" + name : \"\") + (debugID ? \"-\" + debugID : \"\")}]`;\n\n    this.getName = () => name;\n\n    this.getVerbosityLevel = () => verbosityLevel;\n    this.setVerbosityLevel = (l) => {\n      verbosityLevel = l;\n    };\n\n    this.setVerbosityLevel(myConfig.verbosityLevel || 0);\n\n    this.debug1 = (...args) => logDebugN(this, 1, debugPrefix, ...args);\n    this.debug2 = (...args) => logDebugN(this, 2, debugPrefix, ...args);\n    this.debug3 = (...args) => logDebugN(this, 3, debugPrefix, ...args);\n    this.debug4 = (...args) => logDebugN(this, 4, debugPrefix, ...args);\n    this.debug5 = (...args) => logDebugN(this, 5, debugPrefix, ...args);\n    this.debug6 = (...args) => logDebugN(this, 6, debugPrefix, ...args);\n    this.debug7 = (...args) => logDebugN(this, 7, debugPrefix, ...args);\n    this.debug8 = (...args) => logDebugN(this, 8, debugPrefix, ...args);\n    this.debug9 = (...args) => logDebugN(this, 9, debugPrefix, ...args);\n    this.debug10 = (...args) => logDebugN(this, 10, debugPrefix, ...args);\n\n    this.debug = (...args) => myConsole.debug(debugPrefix, ...args);\n    this.log = (...args) => myConsole.log(logPrefix, ...args);\n    this.info = (...args) => myConsole.info(logPrefix, ...args);\n    this.warn = (...args) => myConsole.warn(logPrefix, ...args);\n    this.error = (...args) => {\n      myConsole.error(logPrefix, ...args);\n    };\n\n    // --------------------\n    if (\"logAtCreation\" in myConfig) {\n      this.debug6(\"New logger:\", myConfig.logAtCreation);\n    }\n  }\n}\n\nexport type ErrorMatchList = Array<\n  RegExp | string | { new (): Error } | symbol\n>;\n\n// ----------------------------------------\n\nconst logDebugN = (logger: Logger, level: number, ...args: unknown[]) => {\n  if (!MH.isNumber(level)) {\n    args.unshift(level);\n    level = 1;\n    logger.error(MH.bugError(\"Missing logger.debug level\"));\n  }\n\n  if (logger.getVerbosityLevel() < level) {\n    return;\n  }\n\n  logger.debug(`[DEBUG ${level}]`, ...args);\n};\n\nconst isMobile = () => {\n  const regex =\n    /Mobi|Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n  return regex.test(MC.USER_AGENT);\n};\n\nconst getBooleanURLParam = (name: string) => {\n  const value = getURLParameter(name);\n  return value && (value === \"1\" || MH.toLowerCase(value) === \"true\");\n};\n\nconst getURLParameter = (name: string) => {\n  if (!MH.hasDOM()) {\n    return null;\n  }\n\n  const loc = MH.getDoc().location;\n  if (typeof URLSearchParams !== \"undefined\") {\n    const urlParams = new URLSearchParams(loc.search);\n    return urlParams.get(name);\n  }\n\n  name = MH.strReplace(name, /[[\\]]/g, \"\\\\$&\");\n  const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\");\n  const match = loc.href.match(regex);\n\n  if (!match) {\n    return null;\n  }\n\n  if (!match[2]) {\n    return \"\";\n  }\n  return decodeURIComponent(MH.strReplace(match[2], /\\+/g, \" \"));\n};\n","/**\n * @module\n * @ignore\n * @internal\n */\n\n// Used internally to allow importing it conditionally based on the bundle\n// type. This module's export is replaced with a dummy null export in\n// production bundles.\nimport { Logger } from \"@lisn/debug/logger\";\nimport { Console } from \"@lisn/debug/console\";\nimport { RemoteConsole } from \"@lisn/debug/remote-console\";\nexport default { Logger, Console, RemoteConsole };\n","/**\n * @module Modules/Callback\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getDebouncedHandler } from \"@lisn/utils/tasks\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * @typeParam Args  See {@link Callback}\n */\nexport type CallbackHandler<Args extends unknown[] = []> = (\n  ...args: Args\n) => CallbackReturnType | Promise<CallbackReturnType>;\n\nexport type CallbackReturnType =\n  | typeof Callback.KEEP\n  | typeof Callback.REMOVE\n  | void;\n\n/**\n * For minification optimization. Exposed through Callback.wrap.\n *\n * @ignore\n * @internal\n */\nexport const wrapCallback = <Args extends unknown[] = []>(\n  handlerOrCallback: CallbackHandler<Args> | Callback<Args>,\n  debounceWindow = 0,\n): Callback<Args> => {\n  const isFunction = MH.isFunction(handlerOrCallback);\n  let isRemoved = () => false;\n\n  if (isFunction) {\n    // check if it's an invoke method\n    const callback = callablesMap.get(handlerOrCallback);\n    if (callback) {\n      return wrapCallback(callback);\n    }\n  } else {\n    isRemoved = handlerOrCallback.isRemoved;\n  }\n\n  const handler: CallbackHandler<Args> = isFunction\n    ? handlerOrCallback\n    : (...args: Args) => handlerOrCallback.invoke(...args);\n\n  const wrapper = new Callback<Args>(\n    getDebouncedHandler(debounceWindow, (...args: Args) => {\n      if (!isRemoved()) {\n        return handler(...args);\n      }\n    }),\n  );\n\n  if (!isFunction) {\n    handlerOrCallback.onRemove(wrapper.remove);\n  }\n\n  return wrapper;\n};\n\n/**\n * {@link Callback} wraps user-supplied callbacks. Supports\n * - removing a callback either when calling {@link remove} or if the user\n *   handler returns {@link Callback.REMOVE}\n * - calling custom {@link onRemove} hooks\n * - debouncing (via {@link wrap})\n * - awaiting on an asynchronous handler and ensuring that the handler does not\n *  run concurrently to itself, i.e. subsequent {@link invoke}s will be queued\n *\n * @typeParam Args  The type of arguments that the callback expects.\n */\nexport class Callback<Args extends unknown[] = []> {\n  /**\n   * Possible return value for the handler.\n   *\n   * Do not do anything. Same as not retuning anything from the function.\n   */\n  static readonly KEEP: unique symbol = MC.SYMBOL(\n    \"KEEP\",\n  ) as typeof Callback.KEEP;\n\n  /**\n   * Possible return value for the handler.\n   *\n   * Will remove this callback.\n   */\n  static readonly REMOVE: unique symbol = MC.SYMBOL(\n    \"REMOVE\",\n  ) as typeof Callback.REMOVE;\n\n  /**\n   * Call the handler with the given arguments.\n   *\n   * If the handler is asynchronous, it awaits on it. Furthermore, calls will\n   * always wait for previous calls to this handler to complete first, i.e. it\n   * never runs concurrently to itself. If you need multiple calls to the async\n   * handler to run concurrently, then wrap it in a non-async function that\n   * does not await it.\n   *\n   * The returned promise is rejected in two cases:\n   * - If the callback throws an error or returns a rejected Promise.\n   * - If the callback is removed _after_ you call {@link invoke} but before the\n   *   handler is actually called (while it's waiting in the queue to be called)\n   *   In this case, the rejection reason is {@link Callback.REMOVE}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the callback is already removed.\n   */\n  readonly invoke: (...args: Args) => Promise<void>;\n\n  /**\n   * Mark the callback as removed and call the registered {@link onRemove} hooks.\n   *\n   * Future attempts to call it will result in\n   * {@link Errors.LisnUsageError | LisnUsageError}.\n   */\n  readonly remove: () => void;\n\n  /**\n   * Returns true if the callback has been removed and cannot be called again.\n   */\n  readonly isRemoved: () => boolean;\n\n  /**\n   * Registers the given function to be called when the callback is removed.\n   *\n   * You can call {@link onRemove} multiple times to register multiple hooks.\n   */\n  readonly onRemove: (fn: () => void) => void;\n\n  /**\n   * Wraps the given handler or callback as a callback, optionally debounced by\n   * the given debounce window.\n   *\n   * If the argument is already a callback _or an invoke method of a callback_,\n   * then the wrapper will call that callback and return the same value as it.\n   * It will also set up the returned wrapper callback so that it is removed\n   * when the original (given) callback is removed. However, removing the\n   * returned wrapper callback will _not_ cause the original callback (being\n   * wrapped) to be removed. If you want to do this, then do\n   * `wrapper.onRemove(wrapped.remove)`.\n   *\n   * Note that if the argument is a callback that's already debounced by a\n   * _larger_ window, then `debounceWindow` will have no effect.\n   *\n   * @param {} debounceWindow  If non-0, the callback will be called at most\n   *                           every `debounceWindow` ms. The arguments it will\n   *                           be called with will be the last arguments the\n   *                           wrapper was called with.\n   */\n  static readonly wrap = wrapCallback;\n\n  /**\n   * @param {} handler     The actual function to call. This should return one of\n   *                       the known {@link CallbackReturnType} values.\n   */\n  constructor(handler: CallbackHandler<Args>) {\n    const logger = debug\n      ? new debug.Logger({ name: \"Callback\", logAtCreation: handler })\n      : null;\n\n    let isRemoved = false;\n    const id = MC.SYMBOL();\n\n    const onRemove = MH.newSet<() => void>();\n\n    this.isRemoved = () => isRemoved;\n\n    this.remove = () => {\n      debug: logger?.debug8(\"Removing\");\n      if (!isRemoved) {\n        isRemoved = true;\n\n        for (const rmFn of onRemove) {\n          rmFn();\n        }\n\n        CallbackScheduler._clear(id);\n      }\n    };\n\n    this.onRemove = (fn) => onRemove.add(fn);\n\n    this.invoke = (...args) =>\n      MH.newPromise((resolve, reject) => {\n        debug: logger?.debug8(\"Calling with\", args);\n        if (isRemoved) {\n          reject(MH.usageError(\"Callback has been removed\"));\n          return;\n        }\n\n        CallbackScheduler._push(\n          id,\n          async () => {\n            let result;\n            try {\n              result = await handler(...args);\n            } catch (err) {\n              reject(err);\n            }\n\n            if (result === Callback.REMOVE) {\n              this.remove();\n            }\n\n            resolve();\n          },\n          reject,\n        );\n      });\n\n    callablesMap.set(this.invoke, this);\n  }\n}\n\n// ----------------------------------------\n\ntype CallbackSchedulerTask = () => Promise<void>;\ntype CallbackSchedulerQueueItem = {\n  _task: CallbackSchedulerTask;\n  _running: boolean;\n  _onRemove: (reason: typeof Callback.REMOVE) => void;\n};\n\ntype CallableCallback<Args extends unknown[] = []> = (...args: Args) => void;\n\nconst callablesMap = MH.newWeakMap<CallableCallback, Callback>();\n\nconst CallbackScheduler = (() => {\n  const queues = MH.newMap<symbol, CallbackSchedulerQueueItem[]>();\n\n  const flush = async (queue: CallbackSchedulerQueueItem[]) => {\n    // So that callbacks are always called asynchronously for consistency,\n    // await here before calling 1st\n    await null;\n    while (MH.lengthOf(queue)) {\n      // shouldn't throw anything as Callback must catch errors\n      queue[0]._running = true;\n      await queue[0]._task();\n\n      // only remove when done\n      queue.shift();\n    }\n  };\n\n  return {\n    _clear: (id: symbol) => {\n      const queue = queues.get(id);\n      if (queue) {\n        let item: CallbackSchedulerQueueItem | undefined;\n        while ((item = queue.shift())) {\n          if (!item._running) {\n            item._onRemove(Callback.REMOVE);\n          }\n        }\n\n        MH.deleteKey(queues, id);\n      }\n    },\n\n    _push: (id: symbol, task: CallbackSchedulerTask, onRemove: () => void) => {\n      let queue = queues.get(id);\n      if (!queue) {\n        queue = [];\n        queues.set(id, queue);\n      }\n\n      queue.push({ _task: task, _onRemove: onRemove, _running: false });\n      if (MH.lengthOf(queue) === 1) {\n        flush(queue);\n      }\n    },\n  };\n})();\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LogFunction } from \"@lisn/globals/types\";\n\nimport { joinAsString } from \"@lisn/utils/text\";\n\nimport { Callback } from \"@lisn/modules/callback\";\n\n/**\n * Like `console.info` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logInfo: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleInfo(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.warn` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logWarn: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleWarn(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.error` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logError: LogFunction = (...args) => {\n  if (\n    (MH.lengthOf(args) > 1 || args[0] !== Callback.REMOVE) &&\n    !isMessageSeen(args)\n  ) {\n    MH.consoleError(MC.LOG_PREFIX, ...args);\n  }\n};\n\nconst discardMessages = MH.newSet<string>();\nconst isMessageSeen = (args: unknown[]) => {\n  const msg = joinAsString(\" \", ...args);\n  const isSeen = discardMessages.has(msg);\n  discardMessages.add(msg);\n  return isSeen;\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Preventing layout trashing\n *\n * {@link waitForMeasureTime} allows you to schedule tasks that read or\n * \"measure\", the DOM, for example getting computed styles, taking the\n * `offsetWidth` or the `scrollTop` of an element, etc... anything that _would_\n * force a layout if it runs after the layout has been invalidated by a\n * \"mutation\".\n *\n * See https://gist.github.com/paulirish/5d52fb081b3570c81e3 for a list of\n * operations that should be run on a valid layout to avoid forced layouts.\n *\n * {@link waitForMutateTime} allows you to schedule tasks that invalidate the\n * DOM layout by making changes to the style, inserting or removing elements,\n * etc.\n *\n * These ensure that:\n * - All mutation tasks that would invalidate the style run together before the\n *   next repaint.\n * - All measurement tasks that need a valid style will run as soon as possible\n *   after the next repaint.\n * - If a mutation task is scheduled by another mutation task, it will run in\n *   the same batch.\n * - If a measurement task is scheduled by either a mutation or another\n *   measurement task, it will run in the same batch.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logError } from \"@lisn/utils/log\";\nimport { scheduleHighPriorityTask } from \"@lisn/utils/tasks\";\n\n/**\n * Returns a Promise that is resolved before the next repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForMutateTime = () =>\n  MH.newPromise<void>((resolve) => {\n    scheduleDOMTask(scheduledDOMMutations, resolve);\n  });\n\n/**\n * Returns a Promise that is resolved as soon as possible after the next\n * repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForMeasureTime = () =>\n  MH.newPromise<void>((resolve) => {\n    scheduleDOMTask(scheduledDOMMeasurements, resolve);\n  });\n\n/**\n * Returns a Promise that is resolved before the repaint that follows the next\n * repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForSubsequentMutateTime = () =>\n  waitForMutateTime().then(waitForMeasureTime).then(waitForMutateTime);\n\n/**\n * Returns a Promise that is resolved as soon as possible after the repaint\n * that follows the next repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForSubsequentMeasureTime = () =>\n  waitForMeasureTime().then(waitForMutateTime).then(waitForMeasureTime);\n\n// ----------------------------------------\n\ntype TaskResolver = () => void;\ntype DOMTaskQueue = TaskResolver[];\n\nconst scheduledDOMMeasurements: DOMTaskQueue = [];\nconst scheduledDOMMutations: DOMTaskQueue = [];\nlet hasScheduledDOMTasks = false;\n\nconst scheduleDOMTask = (queue: DOMTaskQueue, resolve: TaskResolver) => {\n  queue.push(resolve);\n  if (!hasScheduledDOMTasks) {\n    hasScheduledDOMTasks = true;\n    MH.onAnimationFrame(runAllDOMTasks);\n  }\n};\n\nconst runAllDOMTasks = async () => {\n  // We suspend (await null) after each queue to ensure that microtasks that\n  // have been added by await waitFor* or waitFor*().then run before the next\n  // queue, so that if they schedule more measurements and/or mutations, they\n  // can be flushed now, in the same batch.\n\n  // We're inside an animation frame. Run all mutation tasks now.\n  while (MH.lengthOf(scheduledDOMMutations)) {\n    runDOMTaskQueue(scheduledDOMMutations);\n    // wait for tasks awaiting on the resolved promises, then check queue again\n    await null;\n  }\n\n  // The measurement queue is now empty => scheduling measurements after\n  // this point will result in rescheduling both queues again in the next\n  // frame.\n  //\n  // Schedule the measurement tasks as soon as possible, after the upcoming\n  // paint. Use a macro task with as high priority as possible.\n  scheduleHighPriorityTask(async () => {\n    while (MH.lengthOf(scheduledDOMMeasurements)) {\n      runDOMTaskQueue(scheduledDOMMeasurements);\n      // wait for tasks awaiting on the resolved promises, then check queue again\n      await null;\n    }\n\n    if (MH.lengthOf(scheduledDOMMutations)) {\n      // There have been mutations added. Schedule another flush.\n      MH.onAnimationFrame(runAllDOMTasks);\n    } else {\n      hasScheduledDOMTasks = false;\n    }\n  });\n};\n\nconst runDOMTaskQueue = (queue: DOMTaskQueue) => {\n  let resolve: TaskResolver | undefined;\n  while ((resolve = queue.shift())) {\n    try {\n      resolve();\n    } catch (err) /* istanbul ignore next */ {\n      logError(err);\n    }\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement } from \"@lisn/globals/types\";\n\n/**\n * Returns all the child elements of the given element that are not `script` or\n * `style` tags.\n *\n * @category DOM: Querying\n */\nexport const getVisibleContentChildren = (el: Element) =>\n  MH.filter([...MH.childrenOf(el)], (e) => isVisibleContentTag(MH.tagName(e)));\n\n/**\n * Returns whether the given tag is _not_ `script` or `style`. Comparison is\n * case insensitive.\n *\n * @category DOM: Querying\n */\nexport const isVisibleContentTag = (tagName: string) =>\n  !MH.includes([\"script\", \"style\"], MH.toLowerCase(tagName));\n\n/**\n * Returns whether the given tag name has by default an inline display.\n * Comparison is case insensitive.\n *\n * @category DOM: Querying\n */\nexport const isInlineTag = (tagName: string) =>\n  inlineTags.has(tagName.toLowerCase());\n\n/**\n * Returns whether the given element is as {@link DOMElement}.\n *\n * @category DOM: Querying\n */\nexport const isDOMElement = (target: unknown): target is DOMElement =>\n  MH.isHTMLElement(target) ||\n  MH.isInstanceOf(target, SVGElement) ||\n  (typeof MathMLElement !== \"undefined\" &&\n    MH.isInstanceOf(target, MathMLElement));\n\n// --------------------\n\nconst inlineTags = MH.newSet([\n  \"a\",\n  \"abbr\",\n  \"acronym\",\n  \"b\",\n  \"bdi\",\n  \"bdo\",\n  \"big\",\n  \"button\",\n  \"cite\",\n  \"code\",\n  \"data\",\n  \"dfn\",\n  \"em\",\n  \"i\",\n  \"img\",\n  \"input\",\n  \"kbd\",\n  \"label\",\n  \"mark\",\n  \"map\",\n  \"object\",\n  \"output\",\n  \"q\",\n  \"rp\",\n  \"rt\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"select\",\n  \"small\",\n  \"span\",\n  \"strong\",\n  \"sub\",\n  \"sup\",\n  \"textarea\",\n  \"time\",\n  \"tt\",\n  \"u\",\n  \"var\",\n]);\n","/**\n * @module Utils\n *\n * @categoryDescription CSS: Altering\n * These functions transition an element from one CSS class to another, but\n * could lead to forced layout if not scheduled using {@link waitForMutateTime}.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n *\n * @categoryDescription CSS: Altering (optimized)\n * These functions transition an element from one CSS class to another in an\n * optimized way using {@link waitForMutateTime} and so are asynchronous.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement } from \"@lisn/globals/types\";\n\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n  waitForSubsequentMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isDOMElement } from \"@lisn/utils/dom-query\";\nimport { isValidNum, roundNumTo } from \"@lisn/utils/math\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { camelToKebabCase, splitOn } from \"@lisn/utils/text\";\n\n/**\n * Removes the given `fromCls` class and adds the given `toCls` class to the\n * element.\n *\n * Unlike {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace | DOMTokenList:replace},\n * this will always add `toCls` even if `fromCls` isn't in the element's class list.\n *\n * @returns {} True if there was a change made (class removed or added),\n *             false otherwise.\n *\n * @category CSS: Altering\n */\nexport const transitionElementNow = (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n) => {\n  cancelCSSTransitions(element, fromCls, toCls);\n\n  // Avoid triggering MutationObserver unnecessarily.\n  let didChange = false;\n  if (hasClass(element, fromCls)) {\n    didChange = true;\n    removeClassesNow(element, fromCls);\n  }\n\n  if (!hasClass(element, toCls)) {\n    addClassesNow(element, toCls);\n    didChange = true;\n  }\n\n  return didChange;\n};\n\n/**\n * Like {@link transitionElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay, and it finally awaits for the effective style's\n * transition-duration.\n *\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, this one is\n * cancelled.\n *\n * @example\n *\n * - {@link showElement} with delay of 100 schedules `lisn-hide` -> `lisn-show`\n *   in 100ms\n * - then if {@link hideElementNow} is called, or a scheduled\n *   {@link hideElement} completes  before that timer runs out, this call to\n *   {@link showElement} aborts\n *\n * ```javascript\n * hideElement(someElement, 10);\n * // this will be aborted in 10ms when the scheduled hideElement above\n * // completes\n * showElement(someElement, 100);\n * ```\n *\n * ```javascript\n * // this will be aborted in 10ms when the hideElement that will be scheduled\n * // below completes\n * showElement(someElement, 100);\n * hideElement(someElement, 10);\n * ```\n *\n * ```javascript\n * // this will be aborted immediately by hideElementNow that runs straight\n * // afterwards\n * showElement(someElement, 100);\n * hideElementNow(someElement);\n * ```\n *\n * ```javascript\n * hideElementNow(someElement);\n * // this will NOT be aborted because hideElementNow has completed already\n * showElement(someElement, 100);\n * ```\n *\n * @category CSS: Altering (optimized)\n */\nexport const transitionElement = async (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n  delay = 0,\n) => {\n  const thisTransition = scheduleCSSTransition(element, toCls);\n\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForMutateTime();\n  if (thisTransition._isCancelled()) {\n    // it has been overridden by a later transition\n    return false;\n  }\n\n  const didChange = transitionElementNow(element, fromCls, toCls);\n  thisTransition._finish();\n\n  if (!didChange) {\n    return false;\n  }\n\n  // Await for the transition duration so that caller awaiting on us knows when\n  // it's complete.\n  const transitionDuration = await getMaxTransitionDuration(element);\n  if (transitionDuration) {\n    await waitForDelay(transitionDuration);\n  }\n\n  return true;\n};\n\n/**\n * Transitions an element from class `lisn-undisplay` (which applies `display:\n * none`) to `lisn-display` (no style associated with this).\n *\n * The difference between this and simply removing the `lisn-undisplay` class\n * is that previously scheduled transitions to `lisn-undisplay` will be\n * cancelled.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const displayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY);\n\n/**\n * Like {@link displayElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const displayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY, delay);\n\n/**\n * The opposite of {@link displayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const undisplayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY);\n\n/**\n * Like {@link undisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const undisplayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY, delay);\n\n/**\n * Transitions an element from class `lisn-hide` (which makes the element\n * hidden) to `lisn-show` (which shows it). These classes have CSS\n * transitions applied so the element is faded into and out of view.\n *\n * @see {@link transitionElementNow}.\n *\n * @category CSS: Altering\n */\nexport const showElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW);\n\n/**\n * Like {@link showElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const showElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW, delay);\n\n/**\n * The opposite of {@link showElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const hideElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE);\n\n/**\n * Like {@link hideElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const hideElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE, delay);\n\n/**\n * If {@link isElementUndisplayed}, it will {@link displayElementNow},\n * otherwise it will {@link undisplayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleDisplayElementNow = (element: Element) =>\n  isElementUndisplayed(element)\n    ? displayElementNow(element)\n    : undisplayElementNow(element);\n\n/**\n * Like {@link toggleDisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleDisplayElement = (element: Element, delay = 0) =>\n  isElementUndisplayed(element)\n    ? displayElement(element, delay)\n    : undisplayElement(element, delay);\n\n/**\n * If {@link isElementHidden}, it will {@link showElementNow}, otherwise\n * {@link hideElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleShowElementNow = (element: Element) =>\n  isElementHidden(element) ? showElementNow(element) : hideElementNow(element);\n\n/**\n * Like {@link toggleShowElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleShowElement = (element: Element, delay = 0) =>\n  isElementHidden(element)\n    ? showElement(element, delay)\n    : hideElement(element, delay);\n\n/**\n * Returns true if the element's class list contains `lisn-hide`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementHidden = (element: Element) =>\n  hasClass(element, MC.PREFIX_HIDE);\n\n/**\n * Returns true if the element's class list contains `lisn-undisplay`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementUndisplayed = (element: Element) =>\n  hasClass(element, MC.PREFIX_UNDISPLAY);\n\n/**\n * Returns true if the element's class list contains the given class.\n *\n * @category CSS: Altering (optimized)\n */\nexport const hasClass = (el: Element, className: string) =>\n  MH.classList(el).contains(className);\n\n/**\n * Adds the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const addClassesNow = (el: Element, ...classNames: string[]) =>\n  MH.classList(el).add(...classNames);\n\n/**\n * Like {@link addClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const addClasses = (el: Element, ...classNames: string[]) =>\n  waitForMutateTime().then(() => addClassesNow(el, ...classNames));\n\n/**\n * Removes the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const removeClassesNow = (el: Element, ...classNames: string[]) =>\n  MH.classList(el).remove(...classNames);\n\n/**\n * Like {@link removeClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const removeClasses = (el: Element, ...classNames: string[]) =>\n  waitForMutateTime().then(() => removeClassesNow(el, ...classNames));\n\n/**\n * Toggles the given class on the element.\n *\n * @param {} force See {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle | DOMTokenList:toggle}\n *\n * @category CSS: Altering\n */\nexport const toggleClassNow = (\n  el: Element,\n  className: string,\n  force?: boolean,\n) => MH.classList(el).toggle(className, force);\n\n/**\n * Like {@link toggleClassNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleClass = (el: Element, className: string, force?: boolean) =>\n  waitForMutateTime().then(() => toggleClassNow(el, className, force));\n\n// For *Data: to avoid unnecessary type checking that ensures element is\n// HTMLElement or SVGElement, use getAttribute instead of dataset.\n\n/**\n * Returns the value of the given data attribute. The name of the attribute\n * must _not_ start with `data`. It can be in either camelCase or kebab-case,\n * it is converted as needed.\n *\n * @category CSS: Altering (optimized)\n */\nexport const getData = (el: Element, name: string) =>\n  MH.getAttr(el, MH.prefixData(name));\n\n/**\n * Returns the value of the given data attribute as a boolean. Its value is\n * expected to be either blank or \"true\" (which result in `true`), or \"false\"\n * (which results in `false`).\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering (optimized)\n */\nexport const getBoolData = (el: Element, name: string) => {\n  const value = getData(el, name);\n  return value !== null && value !== \"false\";\n};\n\n/**\n * Sets the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const setDataNow = (el: Element, name: string, value: string) =>\n  MH.setAttr(el, MH.prefixData(name), value);\n\n/**\n * Like {@link setDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const setData = (el: Element, name: string, value: string) =>\n  waitForMutateTime().then(() => setDataNow(el, name, value));\n\n/**\n * Sets the given data attribute with value \"true\" (default) or \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const setBoolDataNow = (el: Element, name: string, value = true) =>\n  MH.setAttr(el, MH.prefixData(name), value + \"\");\n\n/**\n * Like {@link setBoolDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const setBoolData = (el: Element, name: string, value = true) =>\n  waitForMutateTime().then(() => setBoolDataNow(el, name, value));\n\n/**\n * Sets the given data attribute with value \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const unsetBoolDataNow = (el: Element, name: string) =>\n  MH.unsetAttr(el, MH.prefixData(name));\n\n/**\n * Like {@link unsetBoolDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const unsetBoolData = (el: Element, name: string) =>\n  waitForMutateTime().then(() => unsetBoolDataNow(el, name));\n\n/**\n * Deletes the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const delDataNow = (el: Element, name: string) =>\n  MH.delAttr(el, MH.prefixData(name));\n\n/**\n * Like {@link delDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const delData = (el: Element, name: string) =>\n  waitForMutateTime().then(() => delDataNow(el, name));\n\n/**\n * Returns the value of the given property from the computed style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getComputedStylePropNow = (element: Element, prop: string) =>\n  getComputedStyle(element).getPropertyValue(prop);\n\n/**\n * Like {@link getComputedStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getComputedStyleProp = (element: Element, prop: string) =>\n  waitForMeasureTime().then(() => getComputedStylePropNow(element, prop));\n\n/**\n * Returns the value of the given property from the inline style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.getPropertyValue(prop);\n\n/**\n * Like {@link getStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getStyleProp = (element: Element, prop: string) =>\n  waitForMeasureTime().then(() => getStylePropNow(element, prop));\n\n/**\n * Sets the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const setStylePropNow = (\n  element: Element,\n  prop: string,\n  value: string,\n) => (element as DOMElement).style?.setProperty(prop, value);\n\n/**\n * Like {@link setStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const setStyleProp = (element: Element, prop: string, value: string) =>\n  waitForMutateTime().then(() => setStylePropNow(element, prop, value));\n\n/**\n * Deletes the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const delStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.removeProperty(prop);\n\n/**\n * Like {@link delStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const delStyleProp = (element: Element, prop: string) =>\n  waitForMutateTime().then(() => delStylePropNow(element, prop));\n\n/**\n * In milliseconds.\n *\n * @ignore\n * @internal\n */\nexport const getMaxTransitionDuration = async (element: Element) => {\n  const propVal = await getComputedStyleProp(element, \"transition-duration\");\n\n  return MH.max(\n    ...splitOn(propVal, \",\", true).map((strValue) => {\n      let duration = MH.parseFloat(strValue) || 0;\n\n      if (strValue === duration + \"s\") {\n        duration *= 1000;\n      }\n\n      return duration;\n    }),\n  );\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const disableInitialTransition = async (element: Element, delay = 0) => {\n  await addClasses(element, MC.PREFIX_TRANSITION_DISABLE);\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForSubsequentMutateTime();\n  removeClassesNow(element, MC.PREFIX_TRANSITION_DISABLE);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const setHasModal = () => setBoolData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const delHasModal = () => delData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const copyStyle = async (\n  fromElement: Element,\n  toElement: Element,\n  includeComputedProps?: string[],\n) => {\n  if (!isDOMElement(fromElement) || !isDOMElement(toElement)) {\n    return;\n  }\n\n  await waitForMeasureTime();\n  const props: Record<string, string> = {};\n\n  if (includeComputedProps) {\n    for (const prop of includeComputedProps) {\n      props[prop] = getComputedStylePropNow(fromElement, prop);\n    }\n  }\n\n  const style = fromElement.style; // only inline styles\n  for (const prop in style) {\n    const value = style.getPropertyValue(prop);\n    if (value) {\n      props[prop] = value;\n    }\n  }\n\n  for (const prop in props) {\n    setStyleProp(toElement, prop, props[prop]);\n  }\n\n  addClasses(toElement, ...MH.classList(fromElement));\n};\n\n/**\n * If the props keys are in camelCase they are converted to kebab-case\n *\n * If a value is null or undefined, the property is deleted.\n *\n * @ignore\n * @internal\n */\nexport const setNumericStyleProps = async (\n  element: Element,\n  props: CssNumericProps,\n  options: {\n    _prefix?: string;\n    _units?: string;\n    _numDecimal?: number;\n    _transformFn?: (prop: string, currVal: number, newVal: number) => number;\n  } = {},\n) => {\n  if (!isDOMElement(element)) {\n    return;\n  }\n\n  const transformFn = options._transformFn;\n\n  const varPrefix = MH.prefixCssJsVar(options?._prefix || \"\");\n  for (const prop in props) {\n    const cssPropSuffix = camelToKebabCase(prop);\n    const varName = `${varPrefix}${cssPropSuffix}`;\n\n    let value: number | null;\n\n    if (!isValidNum(props[prop])) {\n      value = null;\n    } else {\n      value = props[prop];\n      const thisNumDecimal =\n        options?._numDecimal ?? (value > 0 && value < 1 ? 2 : 0);\n\n      if (transformFn) {\n        const currValue = MH.parseFloat(await getStyleProp(element, varName));\n\n        value = transformFn(prop, currValue || 0, value);\n      }\n\n      value = roundNumTo(value, thisNumDecimal);\n    }\n\n    if (value === null) {\n      delStyleProp(element, varName);\n    } else {\n      setStyleProp(element, varName, value + (options?._units || \"\"));\n    }\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\ntype CssNumericProps = Record<string, number | undefined | null>;\n\n// ----------------------------------------\n\ntype CSSTransition = {\n  _cancel: () => undefined;\n  _finish: () => undefined;\n  _isCancelled: () => boolean;\n};\n\nconst PREFIX_HAS_MODAL = MH.prefixName(\"has-modal\");\n\nconst scheduledCSSTransitions = MH.newWeakMap<\n  Element,\n  Record<string, CSSTransition>\n>();\n\nconst cancelCSSTransitions = (element: Element, ...toClasses: string[]) => {\n  const scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    return;\n  }\n\n  for (const toCls of toClasses) {\n    const scheduledTransition = scheduledTransitions[toCls];\n    if (scheduledTransition) {\n      scheduledTransition._cancel();\n    }\n  }\n};\n\nconst scheduleCSSTransition = (element: Element, toCls: string) => {\n  let scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    scheduledTransitions = {};\n    scheduledCSSTransitions.set(element, scheduledTransitions);\n  }\n\n  let isCancelled = false;\n  scheduledTransitions[toCls] = {\n    _cancel: () => {\n      isCancelled = true;\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _finish: () => {\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _isCancelled: () => {\n      return isCancelled;\n    },\n  };\n\n  return scheduledTransitions[toCls];\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Altering\n * These functions alter the DOM tree, but could lead to forced layout if not\n * scheduled using {@link waitForMutateTime}.\n *\n * @categoryDescription DOM: Altering (optimized)\n * These functions alter the DOM tree in an optimized way using\n * {@link waitForMutateTime} and so are asynchronous.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  hideElement,\n  hasClass,\n  addClassesNow,\n  setDataNow,\n  setBoolData,\n} from \"@lisn/utils/css-alter\";\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { randId } from \"@lisn/utils/text\";\n\n/**\n * Wraps the element in the given wrapper, or a newly created element if not given.\n *\n * @param {} [options.wrapper]\n *              If it's an element, it is used as the wrapper. If it's a string\n *              tag name, then a new element with this tag is created as the\n *              wrapper. If not given, then `div` is used if the element to be\n *              wrapped has an block-display tag, or otherwise `span` (if the\n *              element to be wrapped has an inline tag name).\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n * @returns {} The wrapper element that was either passed in options or created.\n *\n * @category DOM: Altering\n */\nexport const wrapElementNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: wrapper,\n    });\n\n    ignoreMove(wrapper, {\n      to: MH.parentOf(element),\n    });\n  }\n\n  element.replaceWith(wrapper);\n  wrapper.append(element);\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapElementNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapElement = async (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => waitForMutateTime().then(() => wrapElementNow(element, options));\n\n/**\n * Wraps the element's children in the given wrapper, or a newly created element\n * if not given.\n *\n * @see {@link wrapElementNow}.\n *\n * @category DOM: Altering\n */\nexport const wrapChildrenNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n\n  moveChildrenNow(element, wrapper, { ignoreMove: true });\n  moveElementNow(wrapper, {\n    to: element,\n    ignoreMove: true,\n  });\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapChildrenNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapChildren = async (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => waitForMutateTime().then(() => wrapChildrenNow(element, options));\n\n/**\n * Replace an element with another one.\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const replaceElementNow = (\n  element: Element,\n  newElement: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    ignoreMove(\n      // remove element\n      element,\n      { from: MH.parentOf(element) },\n    );\n\n    ignoreMove(\n      // move newElement to element's current parent\n      newElement,\n      { from: MH.parentOf(newElement), to: MH.parentOf(element) },\n    );\n  }\n\n  element.replaceWith(newElement);\n};\n\n/**\n * Like {@link replaceElementNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const replaceElement = async (\n  element: Element,\n  newElement: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) =>\n  waitForMutateTime().then(() =>\n    replaceElementNow(element, newElement, options),\n  );\n\n/**\n * Replace an element with another one.\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const swapElementsNow = (\n  elementA: Element,\n  elementB: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  const temp = MH.createElement(\"div\");\n  replaceElementNow(elementA, temp, options);\n  replaceElementNow(elementB, elementA, options);\n  replaceElementNow(temp, elementB, options);\n};\n\n/**\n * Like {@link swapElementsNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const swapElements = async (\n  elementA: Element,\n  elementB: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) =>\n  waitForMutateTime().then(() => swapElementsNow(elementA, elementB, options));\n\n/**\n * Move an element's children to a new element\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the children (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveChildrenNow = (\n  oldParent: Element,\n  newParent: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    for (const child of MH.childrenOf(oldParent)) {\n      ignoreMove(child, {\n        from: oldParent,\n        to: newParent,\n      });\n    }\n  }\n\n  newParent.append(...MH.childrenOf(oldParent));\n};\n\n/**\n * Like {@link moveChildrenNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveChildren = async (\n  oldParent: Element,\n  newParent: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) =>\n  waitForMutateTime().then(() =>\n    moveChildrenNow(oldParent, newParent, options),\n  );\n\n/**\n * Moves an element to a new position.\n *\n * @param {} [options.to]         The new parent or sibling (depending on\n *                                `options.position`). If not given, the\n *                                element is removed from the DOM.\n * @param {} [options.position]   - append (default): append to `options.to`\n *                                - prepend: prepend to `options.to`\n *                                - before: insert before `options.to`\n *                                - after: insert after `options.to`\n * @param {} [options.ignoreMove] If true, the DOM watcher instances will\n *                                ignore the operation of moving the element\n *                                (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveElementNow = (\n  element: Element,\n  options?: {\n    to?: Element;\n    position?: \"append\" | \"prepend\" | \"before\" | \"after\";\n    ignoreMove?: boolean;\n  },\n) => {\n  let parentEl = options?.to || null;\n  const position = options?.position || \"append\";\n  if (position === \"before\" || position === \"after\") {\n    parentEl = MH.parentOf(options?.to);\n  }\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: parentEl,\n    });\n  }\n\n  if (options?.to) {\n    options.to[position](element);\n  } else {\n    MH.remove(element);\n  }\n};\n\n/**\n * Like {@link moveElementNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveElement = async (\n  element: Element,\n  options?: {\n    to?: Element;\n    position?: \"append\" | \"prepend\" | \"before\" | \"after\";\n    ignoreMove?: boolean;\n  },\n) => waitForMutateTime().then(() => moveElementNow(element, options));\n\n/**\n * It will {@link hideElement} and then remove it from the DOM.\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering (optimized)\n */\nexport const hideAndRemoveElement = async (\n  element: Element,\n  delay = 0,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  await hideElement(element, delay);\n  moveElementNow(element, options);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getOrAssignID = (element: Element, prefix = \"\") => {\n  let domID = element.id;\n  if (!domID) {\n    domID = `${prefix}-${randId()}`;\n    element.id = domID;\n  }\n\n  return domID;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const wrapScrollingContent = async (element: Element) => {\n  await waitForMutateTime();\n\n  let wrapper: HTMLElement;\n  const firstChild = MH.childrenOf(element)[0];\n  if (\n    MH.lengthOf(MH.childrenOf(element)) === 1 &&\n    MH.isHTMLElement(firstChild) &&\n    hasClass(firstChild, PREFIX_CONTENT_WRAPPER)\n  ) {\n    // Another concurrent call has just wrapped it\n    wrapper = firstChild;\n  } else {\n    wrapper = wrapChildrenNow(element, { ignoreMove: true });\n    addClassesNow(wrapper, PREFIX_CONTENT_WRAPPER);\n  }\n\n  return wrapper;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const cloneElement = <E extends Element>(element: E) => {\n  const clone = element.cloneNode(true) as E;\n  setBoolData(clone, MH.prefixName(\"clone\"));\n  return clone;\n};\n\n/**\n * Creates a dummy hidden clone that's got animation and transitions disabled\n * and absolute position, wrapped in a wrapper (of size 0) and inserts it just\n * before the `insertBefore` element (or if not given, the original element),\n * so that the hidden clone overlaps the actual element's regular\n * (pre-transformed) position.\n *\n * It clears the ID of the clone.\n *\n * Returns the clone.\n *\n * @ignore\n * @internal\n */\nexport const insertGhostCloneNow = <E extends Element>(\n  element: E,\n  insertBefore: Element | null = null,\n) => {\n  const clone = cloneElement(element);\n  clone.id = \"\";\n\n  addClassesNow(\n    clone,\n    MC.PREFIX_GHOST,\n    MC.PREFIX_TRANSITION_DISABLE,\n    MC.PREFIX_ANIMATE_DISABLE,\n  );\n\n  const wrapper = wrapElementNow(clone);\n  addClassesNow(wrapper, MC.PREFIX_WRAPPER);\n\n  moveElementNow(wrapper, {\n    to: insertBefore || element,\n    position: \"before\",\n    ignoreMove: true,\n  });\n\n  return { _wrapper: wrapper, _clone: clone };\n};\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const insertGhostClone = <E extends Element>(\n  element: E,\n  insertBefore: Element | null = null,\n) => waitForMutateTime().then(() => insertGhostCloneNow(element, insertBefore));\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const ignoreMove = (\n  target: Element,\n  options: { from?: Element | null; to?: Element | null },\n) =>\n  recordsToSkipOnce.set(target, {\n    from: options.from || null,\n    to: options.to || null,\n  });\n\n/**\n * @ignore\n * @internal\n */\nexport const getIgnoreMove = (\n  target: Element,\n): { from: Element | null; to: Element | null } | null =>\n  recordsToSkipOnce.get(target) || null;\n\n/**\n * @ignore\n * @internal\n */\nexport const clearIgnoreMove = (target: Element) => {\n  // We should not clear the entry the first time the operation is observed\n  // (when we return true here), because there may be multiple DOMWatcher\n  // instances that will observe it and need to query it. Instead do it shortly.\n  MH.setTimer(() => {\n    MH.deleteKey(recordsToSkipOnce, target);\n  }, 100);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const insertArrow = (\n  target: Element,\n  direction: \"up\" | \"down\" | \"left\" | \"right\",\n  position: \"prepend\" | \"append\" | \"before\" | \"after\" = \"append\",\n  tag = \"span\",\n) => {\n  const arrow = MH.createElement(tag);\n  addClassesNow(arrow, MH.prefixName(MC.S_ARROW));\n  setDataNow(arrow, MH.prefixName(\"direction\"), direction);\n  moveElement(arrow, { to: target, position, ignoreMove: true });\n  return arrow;\n};\n\n// ----------------------------------------\n\nconst PREFIX_CONTENT_WRAPPER = MH.prefixName(\"content-wrapper\");\n\nconst recordsToSkipOnce = MH.newMap<\n  /* target being moved */ Element,\n  { from: Element | null; to: Element | null }\n>();\n\nconst createWrapperFor = (\n  element: Element,\n  wrapper: HTMLElement | keyof HTMLElementTagNameMap | undefined,\n) => {\n  if (MH.isElement(wrapper)) {\n    return wrapper;\n  }\n\n  let tag = wrapper;\n  if (!tag) {\n    if (isInlineTag(MH.tagName(element))) {\n      tag = \"span\";\n    } else {\n      tag = \"div\";\n    }\n  }\n\n  return MH.createElement(tag);\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { NonNullableReturnType } from \"@lisn/globals/types\";\n\n/**\n * Returns a Promise that is resolved when the given `checkFn` function returns\n * a value other than `null` or `undefined`.\n *\n * The Promise is resolved with `checkFn`'s return value.\n *\n * The function is called initially, and then every time there are changes to\n * the DOM children. Uses\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * @param {} timeout If given, then if no such element is present after this\n *                    many milliseconds, the promise will resolve to `null`.\n *\n * @category DOM: Events\n */\nexport const waitForElement = <\n  F extends () => unknown,\n  T extends number | undefined = undefined,\n>(\n  checkFn: F,\n  timeout?: number,\n) =>\n  MH.newPromise<\n    T extends undefined\n      ? NonNullableReturnType<F>\n      : null | NonNullableReturnType<F>\n  >((resolve) => {\n    const callFn = () => {\n      const result = checkFn();\n      if (!MH.isNullish(result)) {\n        resolve(result as NonNullableReturnType<F>);\n        return true; // done\n      }\n      return false;\n    };\n\n    if (callFn()) {\n      return; // resolved already\n    }\n\n    if (!MH.isNullish(timeout)) {\n      MH.setTimer(() => {\n        resolve(\n          null as T extends undefined\n            ? NonNullableReturnType<F>\n            : null | NonNullableReturnType<F>,\n        );\n        observer.disconnect();\n      }, timeout);\n    }\n\n    const observer = MH.newMutationObserver(() => {\n      if (callFn()) {\n        observer.disconnect();\n      }\n    });\n\n    observer.observe(MH.getDocElement(), {\n      childList: true,\n      subtree: true,\n    });\n  });\n\n/**\n * Returns a Promise that is resolved when the given `checkFn` function returns\n * a value other than `null` or `undefined` or the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * becomes \"interactive\".\n *\n * It always calls the given `checkFn` first before examining the `readyState`.\n *\n * If the `readyState` became interactive before the element was found, the\n * Promise resolves to `null`. Otherwise the Promise is resolved with `checkFn`'s\n * return value.\n *\n * The function is called initially, and then every time there are changes to\n * the DOM children. Uses\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * @category DOM: Events\n */\nexport const waitForElementOrInteractive = <F extends () => unknown>(\n  checkFn: F,\n) =>\n  MH.newPromise<NonNullableReturnType<F> | null>((resolve) => {\n    let isInteractive = false;\n    // Check element first, then readyState. The callback to waitForElement is\n    // run synchronously first time, so isInteractive will be false and checkFn\n    // will run.\n    waitForElement(() => isInteractive || checkFn()).then((res) => {\n      if (!isInteractive) {\n        resolve(res as NonNullableReturnType<F>);\n      } // else already resolved to null\n    });\n\n    waitForInteractive().then(() => {\n      isInteractive = true;\n      resolve(null);\n    });\n  });\n\n/**\n * Returns a Promise that is resolved when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"interactive\" (or if it's already \"interactive\" or \"complete\", the\n * Promise is fulfilled immediately).\n *\n * @category DOM: Events\n */\nexport const waitForInteractive = () =>\n  MH.newPromise<void>((resolve) => {\n    const readyState = MH.getReadyState();\n    if (readyState === INTERACTIVE || readyState === COMPLETE) {\n      resolve();\n      return;\n    }\n\n    MH.getDoc().addEventListener(\"DOMContentLoaded\", () => resolve());\n  });\n\n/**\n * Returns a Promise that is resolved when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"complete\" (or if it's already \"complete\", the Promise is fulfilled\n * immediately).\n *\n * @category DOM: Events\n */\nexport const waitForComplete = () =>\n  MH.newPromise<void>((resolve) => {\n    if (MH.getReadyState() === COMPLETE) {\n      resolve();\n      return;\n    }\n\n    MH.getDoc().addEventListener(\"readystatechange\", () => {\n      if (MH.getReadyState() === COMPLETE) {\n        resolve();\n      }\n    });\n  });\n\n/**\n * Returns a Promise that is resolved either when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"complete\" or the `readyState` is \"interactive\" and at least\n * {@link settings.pageLoadTimeout} milliseconds have passed (if > 0) since it\n * became \"interactive\".\n *\n * @category DOM: Events\n */\nexport const waitForPageReady = () =>\n  MH.newPromise<void>((resolve) => {\n    if (pageIsReady) {\n      resolve();\n      return;\n    }\n\n    return waitForInteractive().then(() => {\n      // Setup a listener for the complete state but wait at most\n      // <pageLoadTimeout> (if specified)\n      let timer: ReturnType<typeof setTimeout> | null = null;\n\n      const dispatchReady = () => {\n        pageIsReady = true;\n        if (timer) {\n          MH.clearTimer(timer);\n          timer = null;\n        }\n        resolve();\n      };\n\n      if (settings.pageLoadTimeout > 0) {\n        timer = MH.setTimer(() => {\n          dispatchReady();\n        }, settings.pageLoadTimeout);\n      }\n\n      waitForComplete().then(dispatchReady);\n    });\n  });\n\n/**\n * Returns true if the page is \"ready\". See {@link waitForPageReady}.\n *\n * @category DOM: Events\n */\nexport const isPageReady = () => pageIsReady;\n\n// --------------------\n\nconst COMPLETE = \"complete\";\nconst INTERACTIVE = \"interactive\";\n\nlet pageIsReady = false;\n\nif (!MH.hasDOM()) {\n  pageIsReady = true;\n} else {\n  waitForPageReady(); // ensure pageIsReady is set even if waitForPageReady is not called\n}\n","/**\n * @module Watchers/DOMWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  MutationCategory,\n  CommaSeparatedStr,\n  AtLeastOne,\n} from \"@lisn/globals/types\";\n\nimport { DOM_CATEGORIES_SPACE } from \"@lisn/utils/dom\";\nimport {\n  getIgnoreMove,\n  clearIgnoreMove,\n  ignoreMove,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link DOMWatcher} listens for changes do the DOM tree. It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * It manages registered callbacks globally and reuses MutationObservers for\n * more efficient performance.\n *\n * Each instance of DOMWatcher manages up to two MutationObservers: one\n * for `childList` changes and one for attribute changes, and it disconnects\n * them when there are no active callbacks for the relevant type.\n *\n * `characterData` and changes to base\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Node | Node}s\n * (non-{@link https://developer.mozilla.org/en-US/docs/Web/API/Element | Element})\n * are not supported.\n */\nexport class DOMWatcher {\n  /**\n   * Call the given handler whenever there's a matching mutation within this\n   * DOMWatcher's {@link DOMWatcherConfig.root | root}.\n   *\n   * If {@link OnMutationOptions.skipInitial | options.skipInitial} is `false`\n   * (default), _and_ {@link OnMutationOptions.selector | options.selector} is\n   * given, _and_ {@link OnMutationOptions.categories | options.categories}\n   * includes \"added\", the handler is also called (almost) immediately with all\n   * existing elements matching the selector under this DOMWatcher's\n   * {@link DOMWatcherConfig.root | root}.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times, even if\n   * the options differ. If the handler has already been added, it is removed\n   * and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are not valid.\n   */\n  readonly onMutation: (\n    handler: OnMutationHandler,\n    options?: OnMutationOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offMutation: (handler: OnMutationHandler) => void;\n\n  /**\n   * Ignore an upcoming moving/adding/removing of an element.\n   *\n   * The operation must complete within the next cycle, by the time\n   * MutationObserver calls us.\n   *\n   * Use this to prevent this instance of DOMWatcher from calling any callbacks\n   * that listen for relevant changes as a result of this operation, to prevent\n   * loops for example.\n   *\n   * **IMPORTANT:**\n   *\n   * Ignoring moving of an element from a parent _inside_ this DOMWatcher's\n   * root to another parent that's _outside_ the root, will work as expected,\n   * even though the \"adding to the new parent\" mutation will not be observed.\n   * This is because the element's current parent at the time of the mutation\n   * callback can be examined.\n   *\n   * However if you want to ignore moving of an element _from a parent outside\n   * this DOMWatcher's root_ you need to specify from: null since the \"removal\n   * from the old parent\" mutation would not be observed and there's no way to\n   * examine it's previous parent at the time the \"adding to the new parent\"\n   * mutation is observed.\n   *\n   * For this reason, setting `options.from` to be an element that's not under\n   * the root is internally treated the same as `options.from: null`.\n   */\n  readonly ignoreMove: (target: Element, options: MoveOptions) => void;\n\n  /**\n   * Creates a new instance of DOMWatcher with the given\n   * {@link DOMWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: DOMWatcherConfig = {}) {\n    return new DOMWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of DOMWatcher with the given\n   * {@link DOMWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: DOMWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    const root = myConfig._root === MH.getBody() ? null : myConfig._root;\n    let instance = instances.get(root)?.get(configStrKey);\n    if (!instance) {\n      instance = new DOMWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: DOMWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"DOMWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"DOMWatcher\", logAtCreation: config })\n      : null;\n\n    const buffer = newXMap<Element, MutationOperationInternal>((t) => ({\n      _target: t,\n      _categoryBitmask: 0,\n      _attributes: MH.newSet(),\n      _addedTo: null,\n      _removedFrom: null,\n    }));\n\n    const allCallbacks = MH.newMap<\n      OnMutationHandler,\n      {\n        _callback: OnMutationCallback;\n        _options: OnMutationOptionsInternal;\n      }\n    >();\n\n    // ----------\n\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const mutationHandler = (records: MutationRecord[]) => {\n      debug: logger?.debug9(`Got ${records.length} new records`, records);\n\n      for (const record of records) {\n        const target = MH.targetOf(record);\n        const recType = record.type;\n\n        /* istanbul ignore next */\n        if (!MH.isElement(target)) {\n          continue;\n        }\n\n        if (recType === MC.S_CHILD_LIST) {\n          for (const child of record.addedNodes) {\n            if (MH.isElement(child)) {\n              const operation = buffer.sGet(child);\n              operation._addedTo = target;\n              operation._categoryBitmask |= ADDED_BIT;\n            }\n          }\n\n          for (const child of record.removedNodes) {\n            if (MH.isElement(child)) {\n              const operation = buffer.sGet(child);\n              operation._removedFrom = target;\n              operation._categoryBitmask |= REMOVED_BIT;\n            }\n          }\n\n          //\n        } else if (recType === MC.S_ATTRIBUTES && record.attributeName) {\n          const operation = buffer.sGet(target);\n          operation._attributes.add(record.attributeName);\n          operation._categoryBitmask |= ATTRIBUTE_BIT;\n        }\n      }\n\n      // Schedule flushing of the buffer asynchronously so that we can combine\n      // the records from the two MutationObservers.\n      if (!timer && MH.sizeOf(buffer)) {\n        timer = MH.setTimer(() => {\n          debug: logger?.debug9(`Processing ${buffer.size} operations`);\n          for (const operation of buffer.values()) {\n            if (shouldSkipOperation(operation)) {\n              debug: logger?.debug10(\"Skipping operation\", operation);\n            } else {\n              processOperation(operation);\n            }\n          }\n\n          buffer.clear();\n          timer = null;\n        }, 0);\n      }\n    };\n\n    const observers: Record<MutationType, MyObserver> = {\n      [MC.S_CHILD_LIST]: {\n        _observer: MH.newMutationObserver(mutationHandler),\n        _isActive: false,\n      },\n      [MC.S_ATTRIBUTES]: {\n        _observer: MH.newMutationObserver(mutationHandler),\n        _isActive: false,\n      },\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnMutationHandler,\n      options: OnMutationOptionsInternal,\n    ): OnMutationCallback => {\n      MH.remove(allCallbacks.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => deleteHandler(handler));\n\n      allCallbacks.set(handler, { _callback: callback, _options: options });\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnMutation = async (\n      handler: OnMutationHandler,\n      userOptions: OnMutationOptions | undefined,\n    ) => {\n      const options = getOptions(userOptions || {});\n      const callback = createCallback(handler, options);\n\n      let root = config._root || MH.getBody();\n      if (!root) {\n        root = await waitForElement(MH.getBody);\n      } else {\n        // So that the call is always async\n        await null;\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      if (options._categoryBitmask & (ADDED_BIT | REMOVED_BIT)) {\n        activateObserver(root, MC.S_CHILD_LIST);\n      }\n\n      if (options._categoryBitmask & ATTRIBUTE_BIT) {\n        activateObserver(root, MC.S_ATTRIBUTES);\n      }\n\n      if (\n        userOptions?.skipInitial ||\n        !options._selector ||\n        !(options._categoryBitmask & ADDED_BIT)\n      ) {\n        return;\n      }\n\n      // As some of the matching elements that currently exist in the root may\n      // have just been added and therefore in the MutationObserver's queue, to\n      // avoid calling the handler with those entries twice, we empty its queue\n      // now and process it (which would also invoke the newly added callback).\n      // Then we skip any elements returned in querySelectorAll that were in\n      // the queue.\n\n      const childQueue = observers[MC.S_CHILD_LIST]._observer.takeRecords();\n      mutationHandler(childQueue);\n\n      for (const element of [\n        ...MH.querySelectorAll(root, options._selector),\n        ...(root.matches(options._selector) ? [root] : []),\n      ]) {\n        const initOperation: MutationOperationInternal = {\n          _target: element,\n          _categoryBitmask: ADDED_BIT,\n          _attributes: MH.newSet(),\n          _addedTo: MH.parentOf(element),\n          _removedFrom: null,\n        };\n\n        const bufferedOperation = buffer.get(element);\n        const diffOperation = getDiffOperation(\n          initOperation,\n          bufferedOperation,\n        );\n\n        if (diffOperation) {\n          if (shouldSkipOperation(diffOperation)) {\n            debug: logger?.debug10(\"Skipping operation\", diffOperation);\n          } else {\n            debug: logger?.debug5(\"Calling initially with\", diffOperation);\n            await invokeCallback(callback, diffOperation);\n          }\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (handler: OnMutationHandler) => {\n      MH.deleteKey(allCallbacks, handler);\n\n      let activeCategories = 0;\n      for (const entry of allCallbacks.values()) {\n        activeCategories |= entry._options._categoryBitmask;\n      }\n\n      if (!(activeCategories & (ADDED_BIT | REMOVED_BIT))) {\n        deactivateObserver(MC.S_CHILD_LIST);\n      }\n\n      if (!(activeCategories & ATTRIBUTE_BIT)) {\n        deactivateObserver(MC.S_ATTRIBUTES);\n      }\n    };\n\n    // ----------\n\n    const processOperation = (operation: MutationOperationInternal) => {\n      debug: logger?.debug10(\"Processing operation\", operation);\n\n      for (const entry of allCallbacks.values()) {\n        const categoryBitmask = entry._options._categoryBitmask;\n        const target = entry._options._target;\n        const selector = entry._options._selector;\n\n        if (!(operation._categoryBitmask & categoryBitmask)) {\n          debug: logger?.debug10(`Category does not match: ${categoryBitmask}`);\n          continue;\n        }\n\n        const currentTargets = [];\n        if (target) {\n          if (!operation._target.contains(target)) {\n            debug: logger?.debug10(\"Target does not match\", target);\n            continue;\n          }\n\n          currentTargets.push(target);\n        }\n\n        if (selector) {\n          const matches = [...MH.querySelectorAll(operation._target, selector)];\n\n          if (operation._target.matches(selector)) {\n            matches.push(operation._target);\n          }\n\n          if (!MH.lengthOf(matches)) {\n            debug: logger?.debug10(`Selector does not match: ${selector}`);\n            continue;\n          }\n\n          currentTargets.push(...matches);\n        }\n\n        invokeCallback(entry._callback, operation, currentTargets);\n      }\n    };\n\n    // ----------\n\n    const activateObserver = (root: Element, mutationType: MutationType) => {\n      if (!observers[mutationType]._isActive) {\n        debug: logger?.debug3(\n          `Activating mutation observer for '${mutationType}'`,\n        );\n        observers[mutationType]._observer.observe(root, {\n          [mutationType]: true,\n          subtree: config._subtree,\n        });\n        observers[mutationType]._isActive = true;\n      }\n    };\n\n    // ----------\n\n    const deactivateObserver = (mutationType: MutationType) => {\n      if (observers[mutationType]._isActive) {\n        debug: logger?.debug3(\n          `Disconnecting mutation observer for '${mutationType}'`,\n        );\n        observers[mutationType]._observer.disconnect();\n        observers[mutationType]._isActive = false;\n      }\n    };\n\n    // ----------\n\n    const shouldSkipOperation = (\n      operation: MutationOperationInternal,\n    ): boolean => {\n      const target = operation._target;\n      const requestToSkip = getIgnoreMove(target);\n      if (!requestToSkip) {\n        return false;\n      }\n\n      const removedFrom = operation._removedFrom;\n      const addedTo = MH.parentOf(target);\n      const requestFrom = requestToSkip.from;\n      const requestTo = requestToSkip.to;\n\n      const root = config._root || MH.getBody();\n      // If \"from\" is currently outside our root, we may not have seen a\n      // removal operation.\n      if (\n        (removedFrom === requestFrom || !root.contains(requestFrom)) &&\n        addedTo === requestTo\n      ) {\n        clearIgnoreMove(target);\n        return true;\n      }\n\n      return false;\n    };\n\n    // ----------\n\n    this.ignoreMove = ignoreMove;\n\n    // ----------\n\n    this.onMutation = setupOnMutation;\n\n    // ----------\n\n    this.offMutation = (handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type DOMWatcherConfig = {\n  /**\n   * The root element to observe for changes.\n   *\n   * It cannot be overridden on a per-callback basis.\n   *\n   * @defaultValue document.body\n   */\n  root?: Element | null;\n\n  /**\n   * Whether to observe root's subtree for changes or just direct descendants.\n   *\n   * It cannot be overridden on a per-callback basis.\n   *\n   * @defaultValue true\n   */\n  subtree?: boolean;\n};\n\n/**\n * @interface\n */\nexport type OnMutationOptions = {\n  /**\n   * If this is given, then the handler would only be called for operations\n   * where the target is _either_ the given element or an ancestor of it, i.e.\n   * it {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/contains | Node:contains} it.\n   *\n   * @defaultValue undefined\n   */\n  target?: Element;\n\n  /**\n   * If this is given, then the handler would only be called for operations\n   * where the target matches the given selector _or contains an element\n   * matching the given selector_.\n   *\n   * @defaultValue undefined\n   */\n  selector?: string;\n\n  /**\n   * Specifies a list of {@link MutationCategory}s to target for.\n   *\n   * If not given, then the handler is called for any of the supported\n   * mutations.\n   *\n   * It can be a comma-separated list of category names or an array of such\n   * names.\n   *\n   * @defaultValue undefined\n   */\n  categories?: CommaSeparatedStr<MutationCategory> | MutationCategory[];\n\n  /**\n   * Do not call the handler until there's a future matching mutation.\n   *\n   * By default, if `selector` is given, and `categories` includes `added`, we\n   * call the handler (almost) immediately with all elements matching selector\n   * relative to this DOMWatcher's root.\n   *\n   * The initial operation will contain just the element and\n   * `addedTo: <current parent>`.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\nexport type MoveOptions = AtLeastOne<{\n  /**\n   * If to is missing or null, it's a removal operation.\n   */\n  to: Element | null;\n\n  /**\n   * If from is missing or null, it's an insertion operation.\n   */\n  from: Element | null;\n}>;\n\nexport type MutationOperation = {\n  /**\n   * The target that was changed.\n   */\n  target: Element;\n\n  /**\n   * The target that the callback was interested in.\n   *\n   * If `selector` is given as part of {@link OnMutationOptions}, then\n   * `currentTarget` will point to the target that matched the selector\n   * starting at the operation's `target` as the root. If the operation's\n   * `target` contains more than one element matching selector, the callback\n   * will be called once for _each_ matching child.\n   *\n   * If `target` is given as part of {@link OnMutationOptions}, then\n   * `currentTarget` will be that element.\n   */\n  currentTarget: Element;\n\n  /**\n   * The list of attributes that were changed in this round.\n   */\n  attributes: Set<string>;\n\n  /**\n   * The element that the target was added to, i.e. it's new parent. It is null\n   * if the target was not moved to a new element _during this round_. It does\n   * not mean that this is its current parent.\n   */\n  addedTo: Element | null;\n\n  /**\n   * The element that the target was removed from, i.e. it's old parent. It is\n   * null if the target was not removed from a previous element _during this\n   * round_. It does not mean it did not previously have a parent, but that its\n   * removal was not observed.\n   */\n  removedFrom: Element | null;\n};\n\n/**\n * The handler is invoked with one argument:\n *\n * - a {@link MutationOperation} for a set of mutations related to a particular\n *   element\n *\n * The handler could be invoked multiple times in each \"round\" (cycle of event\n * loop) if there are mutation operations for more than one element that match\n * the supplied {@link OnMutationOptions}.\n */\nexport type OnMutationHandlerArgs = [MutationOperation];\nexport type OnMutationCallback = Callback<OnMutationHandlerArgs>;\nexport type OnMutationHandler =\n  | CallbackHandler<OnMutationHandlerArgs>\n  | OnMutationCallback;\n\n// ----------------------------------------\n\ntype DOMWatcherConfigInternal = {\n  _root: Element | null;\n  _subtree: boolean;\n};\n\ntype OnMutationOptionsInternal = {\n  _target: Element | null;\n  _selector: string;\n  _categoryBitmask: number;\n};\n\ntype MyObserver = {\n  _observer: MutationObserver;\n  _isActive: boolean;\n};\n\ntype MutationType = \"childList\" | \"attributes\";\n\ntype MutationOperationInternal = {\n  _target: Element;\n  _attributes: Set<string>;\n  _addedTo: Element | null;\n  _removedFrom: Element | null;\n  _categoryBitmask: number;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, DOMWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (config: DOMWatcherConfig): DOMWatcherConfigInternal => {\n  return {\n    _root: config.root || null,\n    _subtree: config.subtree ?? true,\n  };\n};\n\nconst CATEGORIES_BITS = DOM_CATEGORIES_SPACE.bit;\nconst ADDED_BIT = CATEGORIES_BITS[MC.S_ADDED];\nconst REMOVED_BIT = CATEGORIES_BITS[MC.S_REMOVED];\nconst ATTRIBUTE_BIT = CATEGORIES_BITS[MC.S_ATTRIBUTE];\n\n// ----------------------------------------\n\nconst getOptions = (options: OnMutationOptions): OnMutationOptionsInternal => {\n  let categoryBitmask = 0;\n  const categories = validateStrList(\n    \"categories\",\n    options.categories,\n    DOM_CATEGORIES_SPACE.has,\n  );\n\n  if (categories) {\n    for (const cat of categories) {\n      categoryBitmask |= CATEGORIES_BITS[cat];\n    }\n  } else {\n    categoryBitmask = DOM_CATEGORIES_SPACE.bitmask; // default: all\n  }\n\n  const selector = options.selector || \"\";\n  if (!MH.isString(selector)) {\n    throw MH.usageError(\"'selector' must be a string\");\n  }\n\n  return {\n    _categoryBitmask: categoryBitmask,\n    _target: options.target || null,\n    _selector: options.selector || \"\",\n  };\n};\n\nconst getDiffOperation = (\n  operationA: MutationOperationInternal,\n  operationB: MutationOperationInternal | undefined,\n): MutationOperationInternal | null => {\n  if (!operationB || operationA._target !== operationB._target) {\n    return operationA;\n  }\n\n  const attributes = MH.newSet<string>();\n  for (const attr of operationA._attributes) {\n    if (!operationB._attributes.has(attr)) {\n      attributes.add(attr);\n    }\n  }\n\n  const categoryBitmask =\n    operationA._categoryBitmask ^ operationB._categoryBitmask;\n\n  const addedTo =\n    operationA._addedTo === operationB._addedTo ? null : operationA._addedTo;\n\n  const removedFrom =\n    operationA._removedFrom === operationB._removedFrom\n      ? null\n      : operationA._removedFrom;\n\n  if (!MH.sizeOf(attributes) && !categoryBitmask && !addedTo && !removedFrom) {\n    return null;\n  }\n\n  return {\n    _target: operationA._target,\n    _categoryBitmask: categoryBitmask,\n    _attributes: attributes,\n    _addedTo: addedTo,\n    _removedFrom: removedFrom,\n  };\n};\n\nconst invokeCallback = (\n  callback: OnMutationCallback,\n  operation: MutationOperationInternal,\n  currentTargets: Element[] = [],\n) => {\n  if (!MH.lengthOf(currentTargets)) {\n    currentTargets = [operation._target];\n  }\n\n  for (const currentTarget of currentTargets) {\n    callback\n      .invoke({\n        target: operation._target,\n        currentTarget,\n        attributes: operation._attributes,\n        addedTo: operation._addedTo,\n        removedFrom: operation._removedFrom,\n      })\n      .catch(logError);\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  XYDirection,\n  ZDirection,\n  NoDirection,\n  AmbiguousDirection,\n  CommaSeparatedStr,\n  Vector,\n} from \"@lisn/globals/types\";\n\nimport { maxAbs, areParallel } from \"@lisn/utils/math\";\nimport { isValidStrList, validateStrList } from \"@lisn/utils/validation\";\n\n/**\n * Returns the cardinal direction in the XY plane for the larger of the two\n * deltas (horizontal vs vertical).\n *\n * If both deltas are 0, returns \"none\".\n *\n * If both deltas are equal and non-0, returns \"ambiguous\".\n *\n * @category Directions\n */\nexport const getMaxDeltaDirection = (\n  deltaX: number,\n  deltaY: number,\n): XYDirection | NoDirection | AmbiguousDirection => {\n  if (!MH.abs(deltaX) && !MH.abs(deltaY)) {\n    return MC.S_NONE;\n  }\n\n  if (MH.abs(deltaX) === MH.abs(deltaY)) {\n    return MC.S_AMBIGUOUS;\n  }\n\n  if (MH.abs(deltaX) > MH.abs(deltaY)) {\n    return deltaX < 0 ? MC.S_LEFT : MC.S_RIGHT;\n  }\n  return deltaY < 0 ? MC.S_UP : MC.S_DOWN;\n};\n\n/**\n * Returns the approximate direction of the given 2D vector as one of the\n * cardinal (XY plane) ones: \"up\", \"down\", \"left\" or \"right\"; or \"ambiguous\".\n *\n * @param {} angleDiffThreshold  See {@link areParallel} or\n *                               {@link Utils.areAntiParallel | areAntiParallel}.\n *                               This determines whether the inferred direction\n *                               is ambiguous. For it to _not_ be ambiguous it\n *                               must align with one of the four cardinal\n *                               directions to within `angleDiffThreshold`.\n *                               It doesn't make sense for this value to be < 0\n *                               or >= 45 degrees. If it is, it's forced to be\n *                               positive (absolute) and <= 44.99.\n *\n * @category Directions\n */\nexport const getVectorDirection = (\n  vector: Vector,\n  angleDiffThreshold = 0,\n): XYDirection | AmbiguousDirection | NoDirection => {\n  angleDiffThreshold = MH.min(44.99, MH.abs(angleDiffThreshold));\n\n  if (!maxAbs(...vector)) {\n    return MC.S_NONE;\n  } else if (areParallel(vector, [1, 0], angleDiffThreshold)) {\n    return MC.S_RIGHT;\n  } else if (areParallel(vector, [0, 1], angleDiffThreshold)) {\n    return MC.S_DOWN;\n  } else if (areParallel(vector, [-1, 0], angleDiffThreshold)) {\n    return MC.S_LEFT;\n  } else if (areParallel(vector, [0, -1], angleDiffThreshold)) {\n    return MC.S_UP;\n  }\n\n  return MC.S_AMBIGUOUS;\n};\n\n/**\n * Returns the opposite direction to the given direction or null if the given\n * direction has no opposite.\n *\n * @example\n * ```javascript\n * getOppositeDirection(\"up\"); // -> \"down\"\n * getOppositeDirection(\"down\"); // -> \"up\"\n * getOppositeDirection(\"left\"); // -> \"right\"\n * getOppositeDirection(\"right\"); // -> \"left\"\n * getOppositeDirection(\"none\"); // -> null\n * getOppositeDirection(\"ambiguous\"); // -> null\n * ```\n *\n * @category Directions\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid.\n */\nexport const getOppositeDirection = (\n  direction: Direction,\n): Direction | null => {\n  if (!(direction in OPPOSITE_DIRECTIONS)) {\n    throw MH.usageError(\"Invalid 'direction'\");\n  }\n\n  return OPPOSITE_DIRECTIONS[direction];\n};\n\n/**\n * Returns the set of directions which are opposite to the given set of directions.\n *\n * There are two sets of opposite pairs (\"up\"/\"down\" and \"left\"/\"right\") and at\n * least one of the two opposing directions of a pair must be present for the\n * other one to be included. If both directions that constitute a pair of\n * opposites is given, then the other pair is returned instead (minus any that\n * are present in the input). See examples below for clarification.\n *\n * @example\n * ```javascript\n * getOppositeXYDirections(\"up\"); // -> [\"down\"]\n * getOppositeXYDirections(\"left\"); // -> [\"right\"]\n * getOppositeXYDirections(\"up,down\"); // -> [\"left\",\"right\"]\n * getOppositeXYDirections(\"up,left\"); // -> [\"down\",\"right\"]\n * getOppositeXYDirections(\"up,left,right\"); // -> [\"down\"]\n * getOppositeXYDirections(\"none\"); // -> throws\n * getOppositeXYDirections(\"ambiguous\"); // -> throws\n * getOppositeXYDirections(\"in\"); // -> throws\n * ```\n *\n * @category Directions\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid.\n */\nexport const getOppositeXYDirections = (\n  directions: CommaSeparatedStr<XYDirection> | XYDirection[],\n): XYDirection[] => {\n  const directionList = validateStrList(\n    \"directions\",\n    directions,\n    isValidXYDirection,\n  );\n\n  if (!directionList) {\n    throw MH.usageError(\"'directions' is required\");\n  }\n\n  const opposites: XYDirection[] = [];\n  for (const direction of directionList) {\n    const opposite = getOppositeDirection(direction);\n    if (\n      opposite &&\n      isValidXYDirection(opposite) &&\n      !MH.includes(directionList, opposite)\n    ) {\n      opposites.push(opposite);\n    }\n  }\n\n  if (!MH.lengthOf(opposites)) {\n    for (const direction of XY_DIRECTIONS) {\n      if (!MH.includes(directionList, direction)) {\n        opposites.push(direction);\n      }\n    }\n  }\n\n  return opposites;\n};\n\n/**\n * Returns true if the given direction is one of the known XY ones.\n *\n * @category Validation\n */\nexport const isValidXYDirection = (\n  direction: string,\n): direction is XYDirection => MH.includes(XY_DIRECTIONS, direction);\n\n/**\n * Returns true if the given direction is one of the known Z ones.\n *\n * @category Validation\n */\nexport const isValidZDirection = (direction: string): direction is ZDirection =>\n  MH.includes(Z_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string is a valid direction.\n *\n * @category Validation\n */\nexport const isValidDirection = (direction: string): direction is Direction =>\n  MH.includes(DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid directions.\n *\n * @category Validation\n */\nexport const isValidDirectionList = (\n  directions: string | string[],\n): directions is CommaSeparatedStr<Direction> | Direction[] =>\n  isValidStrList(directions, isValidDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const XY_DIRECTIONS = [\n  MC.S_UP,\n  MC.S_DOWN,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const Z_DIRECTIONS = [MC.S_IN, MC.S_OUT] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const SCROLL_DIRECTIONS = [\n  ...XY_DIRECTIONS,\n  MC.S_NONE,\n  MC.S_AMBIGUOUS,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const DIRECTIONS = [\n  ...XY_DIRECTIONS,\n  ...Z_DIRECTIONS,\n  MC.S_NONE,\n  MC.S_AMBIGUOUS,\n] as const;\n\n// --------------------\n\nconst OPPOSITE_DIRECTIONS = {\n  [MC.S_UP]: MC.S_DOWN,\n  [MC.S_DOWN]: MC.S_UP,\n  [MC.S_LEFT]: MC.S_RIGHT,\n  [MC.S_RIGHT]: MC.S_LEFT,\n  [MC.S_IN]: MC.S_OUT,\n  [MC.S_OUT]: MC.S_IN,\n  [MC.S_NONE]: null,\n  [MC.S_AMBIGUOUS]: null,\n} as const;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { addClasses, removeClasses } from \"@lisn/utils/css-alter\";\nimport { copyExistingKeys } from \"@lisn/utils/misc\";\n\nimport { XMap, newXMapGetter, newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * Calls the given event listener, which could be a function that's callable\n * directly, or an object that has a `handleEvent` function property.\n *\n * @category Events: Generic\n */\nexport const callEventListener = (\n  handler: EventListenerOrEventListenerObject,\n  event: Event,\n) => {\n  if (MH.isFunction(handler)) {\n    handler.call(event.currentTarget || self, event);\n  } else {\n    handler.handleEvent.call(event.currentTarget || self, event);\n  }\n};\n\n/**\n * Adds an event listener for the given event name to the given target.\n *\n * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener | EventTarget:addEventListener}\n * but it handles `options` object in case the browser does not support those.\n * Does not support the `signal` option unless browser natively supports that.\n *\n * @return {} `true` if successfully added, or `false` if the same handler has\n * already been added by us, or if the handler is not a valid event listener.\n *\n * @category Events: Generic\n */\nexport const addEventListenerTo = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions = {},\n): boolean => {\n  eventType = transformEventType(eventType);\n  if (getEventHandlerData(target, eventType, handler, options)) {\n    // already added\n    return false;\n  }\n\n  let thirdArg = options;\n  let wrappedHandler = handler;\n\n  // If the user passed an options object but the browser only supports a\n  // boolen for 'useCapture', then handle this.\n  const supports = getBrowserSupport();\n  if (MH.isNonPrimitive(options)) {\n    if (!supports._optionsArg) {\n      thirdArg = options.capture ?? false;\n    }\n\n    if (options.once && !supports._options.once) {\n      // Remove the handler once it's called once\n      wrappedHandler = (event) => {\n        removeEventListenerFrom(target, eventType, handler, options);\n        callEventListener(handler, event);\n      };\n    }\n  }\n\n  setEventHandlerData(target, eventType, handler, options, {\n    _wrappedHandler: wrappedHandler,\n    _thirdArg: thirdArg,\n  });\n\n  target.addEventListener(eventType, wrappedHandler, thirdArg);\n  return true;\n};\n\n/**\n * Removes an event listener that has been added using\n * {@link addEventListenerTo}.\n *\n * **IMPORTANT:** If you have added a listener using the built-in\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener | EventTarget:addEventListener},\n * then you should use\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener | EventTarget:removeEventListener},\n * to remove it, not this function.\n *\n * @return {} `true` if successfully removed, or `false` if the handler has not\n * been added by us.\n *\n * @category Events: Generic\n */\nexport const removeEventListenerFrom = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions = {},\n) => {\n  eventType = transformEventType(eventType);\n  const data = getEventHandlerData(target, eventType, handler, options);\n\n  if (!data) {\n    return false;\n  }\n\n  target.removeEventListener(eventType, data._wrappedHandler, data._thirdArg);\n  deleteEventHandlerData(target, eventType, handler, options);\n  return true;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const preventSelect = (target: EventTarget) => {\n  addEventListenerTo(target, MC.S_SELECTSTART, MH.preventDefault);\n  if (MH.isElement(target)) {\n    addClasses(target, MC.PREFIX_NO_SELECT);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const undoPreventSelect = (target: EventTarget) => {\n  removeEventListenerFrom(target, MC.S_SELECTSTART, MH.preventDefault);\n  if (MH.isElement(target)) {\n    removeClasses(target, MC.PREFIX_NO_SELECT);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getBrowserSupport = (): BrowserEventSupport => {\n  if (browserEventSupport) {\n    // already detected\n    return browserEventSupport;\n  }\n\n  const supports = {\n    _pointer: false,\n    _optionsArg: false,\n    _options: {\n      capture: false,\n      passive: false,\n      once: false,\n      signal: false,\n    },\n  };\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#safely_detecting_option_support\n  const optTest = {};\n  let opt: keyof typeof supports._options;\n  for (opt in supports._options) {\n    const thisOpt = opt;\n    MH.defineProperty(optTest, thisOpt, {\n      get: () => {\n        supports._options[thisOpt] = true;\n        if (thisOpt === \"signal\") {\n          return new AbortController().signal;\n        }\n        return false;\n      },\n    });\n  }\n\n  const dummyHandler = () => {}; // TypeScript does not accept null\n  const dummyElement = MH.createElement(\"div\");\n  try {\n    dummyElement.addEventListener(\"testOptionSupport\", dummyHandler, optTest);\n    dummyElement.removeEventListener(\n      \"testOptionSupport\",\n      dummyHandler,\n      optTest,\n    );\n    supports._optionsArg = true;\n  } catch (e__ignored) {\n    //\n  }\n\n  supports._pointer = \"onpointerup\" in dummyElement;\n\n  browserEventSupport = supports;\n  return supports;\n};\n\n// --------------------\n\ntype EventHandlerData = {\n  _wrappedHandler: EventListenerOrEventListenerObject;\n  _thirdArg: boolean | AddEventListenerOptions;\n};\n\nlet browserEventSupport: BrowserEventSupport;\n\nconst registeredEventHandlerData = newXWeakMap<\n  EventTarget,\n  XMap<\n    string, // event type\n    XMap<\n      EventListenerOrEventListenerObject, // user-supplied handler\n      Map<\n        string, // str repr of options\n        EventHandlerData\n      >\n    >\n  >\n>(newXMapGetter(newXMapGetter(() => MH.newMap())));\n\n// detect browser features, see below\ntype BrowserEventSupport = {\n  _pointer: boolean;\n  _optionsArg: boolean;\n  _options: {\n    capture: boolean;\n    passive: boolean;\n    once: boolean;\n    signal: boolean;\n  };\n};\n\nconst getEventOptionsStr = (\n  options: boolean | AddEventListenerOptions,\n): string => {\n  const finalOptions: AddEventListenerOptions = {\n    capture: false,\n    passive: false,\n    once: false,\n  };\n\n  if (options === false || options === true) {\n    finalOptions.capture = options;\n  } else if (MH.isObject(options)) {\n    copyExistingKeys(options, finalOptions);\n  }\n\n  return MH.stringify(finalOptions);\n};\n\nconst getEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  return registeredEventHandlerData\n    .get(target)\n    ?.get(eventType)\n    ?.get(handler)\n    ?.get(optionsStr);\n};\n\nconst deleteEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  MH.deleteKey(\n    registeredEventHandlerData.get(target)?.get(eventType)?.get(handler),\n    optionsStr,\n  );\n  registeredEventHandlerData.prune(target, eventType, handler);\n};\n\nconst setEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n  data: EventHandlerData,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  registeredEventHandlerData\n    .sGet(target)\n    .sGet(eventType)\n    .sGet(handler)\n    .set(optionsStr, data);\n};\n\nconst transformEventType = (eventType: string) => {\n  const supports = getBrowserSupport();\n  if (eventType.startsWith(MC.S_POINTER) && !supports._pointer) {\n    // TODO maybe log a warning message is it's not supported, e.g. there's no\n    // mousecancel\n    return MH.strReplace(eventType, MC.S_POINTER, MC.S_MOUSE);\n  }\n\n  return eventType;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureDevice, GestureIntent } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * `deltaX` and `deltaY` together specify the precise direction in the XY plane\n * of the move if relevant (i.e. other than zoom intent). The direction\n * specifies the effective X (\"left\"/\"right\"), Y (\"up\"/\"down\") or Z (\"in\"/\"out\")\n * direction, or \"none\"/\"ambiguous\".\n *\n * `deltaZ` specifies relative zoom in or out for zoom intents.\n * For zoom in, deltaZ is always > 1, and for zoom out it is < 1.\n * For non-zoom events it is 1.\n *\n * For zoom intents, `direction` would be either in, out or none.\n * For other intents, it would be up, down, left, right, none or ambiguous.\n *\n * For important notes on the delta values see\n * - {@link Utils.getKeyGestureFragment | getKeyGestureFragment}\n * - {@link Utils.getTouchGestureFragment | getTouchGestureFragment}\n * - {@link Utils.getWheelGestureFragment | getWheelGestureFragment}\n *\n * @category Gestures\n */\nexport type GestureFragment = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n  deltaX: number;\n  deltaY: number;\n  deltaZ: number;\n};\n\n/**\n * Returns true if the given string is a valid gesture device.\n *\n * @category Validation\n */\nexport const isValidInputDevice = (device: string): device is GestureDevice =>\n  MH.includes(DEVICES, device);\n\n/**\n * Returns true if the given string is a valid gesture intent.\n *\n * @category Validation\n */\nexport const isValidIntent = (intent: string): intent is GestureIntent =>\n  MH.includes(INTENTS, intent);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * devices.\n *\n * @category Validation\n */\nexport const isValidInputDeviceList = (devices: string | string[]) =>\n  isValidStrList(devices, isValidInputDevice, false);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * intents.\n *\n * @category Validation\n */\nexport const isValidIntentList = (intents: string | string[]) =>\n  isValidStrList(intents, isValidIntent, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const addDeltaZ = (current: number, increment: number) =>\n  MH.max(MIN_DELTA_Z, current * increment);\n\n/**\n * @ignore\n * @internal\n */\nexport const DEVICES: GestureDevice[] = [\n  MC.S_KEY,\n  MC.S_POINTER,\n  MC.S_TOUCH,\n  MC.S_WHEEL,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const INTENTS: GestureIntent[] = [\n  MC.S_SCROLL,\n  MC.S_ZOOM,\n  MC.S_DRAG,\n  MC.S_UNKNOWN,\n] as const;\n\n// Do not allow zooming out more than this value\nconst MIN_DELTA_Z = 0.1;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { Direction, GestureIntent } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport { GestureFragment, addDeltaZ } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"keydown\"\n * events will be considered.\n *\n * If there are no \"keydown\" events in the given list of events, returns\n * `false`.\n *\n * The deltas of all events are summed together before determining final delta\n * and direction.\n *\n * If the events are of conflicting types, i.e. some scroll, some zoom, then\n * the intent will be \"unknown\" and the direction will be \"ambiguous\".\n *\n * Otherwise, if the deltas sum up to 0, the direction will be \"none\".\n *\n * **IMPORTANT NOTES ON THE DELTA VALUES**\n *\n * For key gestures the deltas are unreliable. You should not assume they\n * correspond to the would-be scroll or zoom amount that the browser would do.\n * But they can be used to determine relative amounts for animating, etc.\n *\n * Key press events can be divided into 3 categories: that scroll by a \"line\"\n * (e.g. arrow keys), by a \"page\" (e.g. PageUp/PageDown) or by the full content\n * height/width (e.g. Home/End). The actual scroll amount that _would_ result\n * from the event is dependent on the browser, the window size or the element's\n * scroll width/height, so ours can only be a best guess.\n *\n * Since the actual pixel equivalent is browser specific, we use reasonable\n * default values of delta for each of these \"line\", \"page\" or \"content\" modes,\n * similar to what\n * {@link Utils.getWheelGestureFragment | getWheelGestureFragment} does:\n * - For \"line\", then a configurable fixed value is used\n *  ({@link settings.deltaLineHeight}).\n * - For \"page\", then a configurable fixed value is used\n *  ({@link settings.deltaPageHeight}).\n * - For \"content\", the element's scroll height is used if given, otherwise\n *   the viewport height (same as \"page\"). We do not try to get the current\n *   scroll height of the target element, (which would be the best guess value\n *   of `deltaY` in case of Home/End key presses), as that would either involve\n *   an asynchronous action or would result in forced layout. If the caller is\n *   already tracking the scroll height of the target, you can pass this as an\n *   argument. Otherwise, we'll default to using the viewport height, same as\n *   for PageUp/Down.\n *\n * If the key gesture fragment is a result of multiple events that were\n * accumulated, the deltas are summed as usual, e.g. if a \"page\" is equal to 20\n * \"lines\", then pressing PageDown and then 10 times Up, would result in a\n * delta equal to 10 \"lines\" down.\n *\n * For zoom intents, `deltaZ` gives a relative change of scale, whereby each\n * press of + or - steps up by 15% or down by ~13% (`1 / 1.15` to be exact)\n * since the previous one.\n *\n * @param {} [options.angleDiffThreshold]\n *                                  See {@link getVectorDirection}\n * @param {} [options.scrollHeight] Use this as deltaY when Home/End is pressed\n *\n * @return {} `false` if there are no \"keydown\" events in the list, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getKeyGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n    scrollHeight?: number;\n  },\n): GestureFragment | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  const LINE = settings.deltaLineHeight;\n  const PAGE = settings.deltaPageHeight;\n  const CONTENT = options?.scrollHeight ?? PAGE;\n\n  const deltasUp = (amount: number): DeltasArr => [0, -amount, 1];\n  const deltasDown = (amount: number): DeltasArr => [0, amount, 1];\n  const deltasLeft = (amount: number): DeltasArr => [-amount, 0, 1];\n  const deltasRight = (amount: number): DeltasArr => [amount, 0, 1];\n  const deltasIn: DeltasArr = [0, 0, 1.15];\n  const deltasOut: DeltasArr = [0, 0, 1 / 1.15];\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent | null = null;\n  let deltaX = 0,\n    deltaY = 0,\n    deltaZ = 1;\n\n  for (const event of events) {\n    if (!MH.isKeyboardEvent(event) || event.type !== MC.S_KEYDOWN) {\n      continue;\n    }\n\n    const deltasForKey: Record<string, DeltasArr | null> = {\n      [SK_UP]: deltasUp(LINE),\n      [SK_ARROWUP]: deltasUp(LINE),\n      [SK_PAGEUP]: deltasUp(PAGE),\n      Home: deltasUp(CONTENT),\n      [SK_DOWN]: deltasDown(LINE),\n      [SK_ARROWDOWN]: deltasDown(LINE),\n      [SK_PAGEDOWN]: deltasDown(PAGE),\n      End: deltasDown(CONTENT),\n      [SK_LEFT]: deltasLeft(LINE),\n      [SK_ARROWLEFT]: deltasLeft(LINE),\n      [SK_RIGHT]: deltasRight(LINE),\n      [SK_ARROWRIGHT]: deltasRight(LINE),\n      \" \": (event.shiftKey ? deltasUp : deltasDown)(PAGE),\n      \"+\": deltasIn,\n      \"=\": event.ctrlKey ? deltasIn : null,\n      \"-\": deltasOut,\n    };\n\n    const theseDeltas = deltasForKey[event.key] || null;\n    if (!theseDeltas) {\n      // not a relevant key\n      continue;\n    }\n\n    const [thisDeltaX, thisDeltaY, thisDeltaZ] = theseDeltas;\n    const thisIntent = thisDeltaZ !== 1 ? MC.S_ZOOM : MC.S_SCROLL;\n\n    deltaX += thisDeltaX;\n    deltaY += thisDeltaY;\n    deltaZ = addDeltaZ(deltaZ, thisDeltaZ);\n\n    if (!intent) {\n      intent = thisIntent;\n    } else if (intent !== thisIntent) {\n      // mixture of zoom and scroll\n      intent = MC.S_UNKNOWN;\n    }\n  }\n\n  if (!intent) {\n    return false; // no relevant events\n  } else if (intent === MC.S_UNKNOWN) {\n    direction = MC.S_AMBIGUOUS;\n  } else if (intent === MC.S_ZOOM) {\n    direction = deltaZ > 1 ? MC.S_IN : deltaZ < 1 ? MC.S_OUT : MC.S_NONE;\n  } else {\n    direction = getVectorDirection(\n      [deltaX, deltaY],\n      options?.angleDiffThreshold,\n    );\n  }\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_KEY,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n      };\n};\n\n// --------------------\n\ntype DeltasArr = [number, number, number];\n\nconst SK_UP = \"Up\";\nconst SK_DOWN = \"Down\";\nconst SK_LEFT = \"Left\";\nconst SK_RIGHT = \"Right\";\nconst SK_PAGE = \"Page\";\nconst SK_ARROW = \"Arrow\";\nconst SK_PAGEUP = (SK_PAGE + SK_UP) as `${typeof SK_PAGE}${typeof SK_UP}`;\nconst SK_PAGEDOWN = (SK_PAGE + SK_DOWN) as `${typeof SK_PAGE}${typeof SK_DOWN}`;\nconst SK_ARROWUP = (SK_ARROW + SK_UP) as `${typeof SK_ARROW}${typeof SK_UP}`;\nconst SK_ARROWDOWN = (SK_ARROW +\n  SK_DOWN) as `${typeof SK_ARROW}${typeof SK_DOWN}`;\nconst SK_ARROWLEFT = (SK_ARROW +\n  SK_LEFT) as `${typeof SK_ARROW}${typeof SK_LEFT}`;\nconst SK_ARROWRIGHT = (SK_ARROW +\n  SK_RIGHT) as `${typeof SK_ARROW}${typeof SK_RIGHT}`;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\nimport { getBrowserSupport } from \"@lisn/utils/event\";\nimport { GestureFragment } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. If the browser\n * supports Pointer events, then only \"pointermove\" events will be considered.\n * Otherwise, only \"mousemove\" events will be considered.\n *\n * If there are less than 2 such events in the given list of events, returns\n * `false`.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"pointercancel\" in the list or buttons other than the primary are pressed,\n * returns `null`.\n *\n * Pointer gestures always require the primary button to be pressed and the\n * resulting intent is always \"drag\", and `deltaZ` is always 1.\n *\n * @param {} [options.angleDiffThreshold] See {@link getVectorDirection}\n *\n * @return {} `false` if there are less than 2 \"pointermove\"/\"mousemove\" events\n * in the list, `null` if the gesture is terminated, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getPointerGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let isCancelled = false;\n  const supports = getBrowserSupport();\n\n  // If the browser supports pointer events, then only take those; otherwise\n  // take the mouse events\n  const pointerEventClass = supports._pointer ? PointerEvent : MouseEvent;\n  const pointerUpType = supports._pointer ? MC.S_POINTERUP : MC.S_MOUSEUP;\n\n  const filteredEvents: MouseEvent[] = MH.filter(\n    events,\n    (event): event is MouseEvent => {\n      const eType = event.type;\n      isCancelled = isCancelled || eType === MC.S_POINTERCANCEL;\n      if (eType !== MC.S_CLICK && MH.isInstanceOf(event, pointerEventClass)) {\n        // Only events where the primary button is pressed (unless it's a\n        // pointerup event, in which case no buttons should be pressed) are\n        // considered, otherwise consider it terminated\n        isCancelled =\n          isCancelled ||\n          (eType === pointerUpType && event.buttons !== 0) ||\n          (eType !== pointerUpType && event.buttons !== 1);\n        // we don't handle touch pointer events\n        return !MH.isTouchPointerEvent(event);\n      }\n      return false;\n    },\n  );\n\n  const numEvents = MH.lengthOf(filteredEvents);\n  if (numEvents < 2) {\n    return false; // no enough events\n  }\n\n  if (isCancelled) {\n    return null; // terminated\n  }\n\n  const firstEvent = filteredEvents[0];\n  const lastEvent = filteredEvents[numEvents - 1];\n  if (MH.getPointerType(firstEvent) !== MH.getPointerType(lastEvent)) {\n    return null; // different devices, consider it terminated\n  }\n\n  const deltaX = lastEvent.clientX - firstEvent.clientX;\n  const deltaY = lastEvent.clientY - firstEvent.clientY;\n  const direction = getVectorDirection(\n    [deltaX, deltaY],\n    options?.angleDiffThreshold,\n  );\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_POINTER,\n        direction,\n        intent: MC.S_DRAG,\n        deltaX,\n        deltaY,\n        deltaZ: 1,\n      };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureIntent, Vector } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport {\n  maxAbs,\n  havingMaxAbs,\n  distanceBetween,\n  areAntiParallel,\n} from \"@lisn/utils/math\";\nimport { GestureFragment } from \"@lisn/utils/gesture\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Gestures\n */\nexport type TouchDiff = {\n  startX: number;\n  startY: number;\n\n  endX: number;\n  endY: number;\n\n  deltaX: number;\n  deltaY: number;\n\n  isSignificant: boolean;\n};\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"touchmove\" events\n * will be considered.\n *\n * If there are less than 2 such events in the given list of events, returns `false`.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that by default swipe actions follow the natural direction: swipe up\n * with scroll intent results in direction down and swipe down results in\n * direction up. Drag intent always follows the direction of the gesture.\n *\n * For zoom intents, which necessarily involves exactly two fingers `deltaZ`\n * is based on the relative change in distance between the fingers.\n *\n * @param {} [options.deltaThreshold]\n *                          A change of x or y coordinate less than this is\n *                          considered insignificant, for the purposes of\n *                          determining:\n *                          1) whether the inferred direction is in one of the\n *                             four cardinal ones, or otherwise ambiguous; and\n *                          2) whether more than two fingers have moved and\n *                             therefore whether the direction could be zoom or\n *                             not\n * @param {} [options.angleDiffThreshold] See {@link getVectorDirection}\n * @param {} [options.reverseScroll]\n *                          If set to `true`, will disable natural scroll\n *                          direction.\n * @param {} [options.dragHoldTime]\n *                          If the user presses and holds for at least the\n *                          given amount of milliseconds before moving the\n *                          finger(s), gestures other than pinch will be\n *                          treated as a drag instead of scroll as long as the\n *                          number of fingers touching the screen is\n *                          `options.dragNumFingers`. Default is 500ms.\n * @param {} [options.dragNumFingers]\n *                          The number of fingers that could be considered a\n *                          drag intent. Default is 1.\n *\n * @return {} `false` if there are less than 2 \"touchmove\" events in the list,\n * `null` if the gesture is terminated, otherwise a {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getTouchGestureFragment = (\n  events: Event[],\n  options?: {\n    deltaThreshold?: number;\n    angleDiffThreshold?: number;\n    reverseScroll?: boolean;\n    dragHoldTime?: number;\n    dragNumFingers?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let moves = getTouchDiff(events, options?.deltaThreshold);\n\n  if (!moves) {\n    return null; // terminated\n  }\n\n  let numMoves = MH.lengthOf(moves);\n\n  const holdTime = getHoldTime(events);\n  const canBeDrag =\n    holdTime >= (options?.dragHoldTime ?? 500) &&\n    numMoves === (options?.dragNumFingers ?? 1);\n  const angleDiffThreshold = options?.angleDiffThreshold;\n\n  let deltaX = havingMaxAbs(...moves.map((m) => m.deltaX));\n  let deltaY = havingMaxAbs(...moves.map((m) => m.deltaY));\n  let deltaZ = 1;\n\n  if (numMoves > 2) {\n    // Take only the significant ones\n    moves = MH.filter(moves, (d) => d.isSignificant);\n    numMoves = MH.lengthOf(moves);\n  }\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent = MC.S_UNKNOWN;\n  if (numMoves === 2) {\n    // Check if it's a zoom\n    const vectorA: Vector = [moves[0].deltaX, moves[0].deltaY];\n    const vectorB: Vector = [moves[1].deltaX, moves[1].deltaY];\n\n    // If either finger is approx stationary, or if they move in opposite directions,\n    // treat it as zoom.\n    if (\n      !havingMaxAbs(...vectorA) || // finger A still\n      !havingMaxAbs(...vectorB) || // finger B still\n      areAntiParallel(vectorA, vectorB, angleDiffThreshold)\n    ) {\n      // It's a pinch motion => zoom\n      const startDistance = distanceBetween(\n        [moves[0].startX, moves[0].startY],\n        [moves[1].startX, moves[1].startY],\n      );\n\n      const endDistance = distanceBetween(\n        [moves[0].endX, moves[0].endY],\n        [moves[1].endX, moves[1].endY],\n      );\n\n      direction = startDistance < endDistance ? MC.S_IN : MC.S_OUT;\n      deltaZ = endDistance / startDistance;\n      deltaX = deltaY = 0;\n      intent = MC.S_ZOOM;\n    }\n  }\n\n  const deltaSign = canBeDrag || options?.reverseScroll ? 1 : -1;\n  // If scrolling, swap the deltas for natural scroll direction.\n  // Add +0 to force -0 to be +0 since jest doesn't think they're equal\n  deltaX = deltaSign * deltaX + 0;\n  deltaY = deltaSign * deltaY + 0;\n\n  if (direction === MC.S_NONE) {\n    // Wasn't a zoom. Check if all moves are aligned.\n    let isFirst = true;\n\n    for (const m of moves) {\n      // There's at least one significant move, assume scroll or drag intent.\n      intent = canBeDrag ? MC.S_DRAG : MC.S_SCROLL;\n\n      const thisDirection = getVectorDirection(\n        [deltaSign * m.deltaX, deltaSign * m.deltaY],\n        angleDiffThreshold,\n      );\n\n      if (thisDirection === MC.S_NONE) {\n        continue;\n      }\n\n      if (isFirst) {\n        direction = thisDirection;\n      } else if (direction !== thisDirection) {\n        direction = MC.S_AMBIGUOUS;\n        break;\n      }\n\n      isFirst = false;\n    }\n  }\n\n  if (direction === MC.S_NONE) {\n    const lastTouchEvent = events.filter(MH.isTouchEvent).slice(-1)[0];\n    // If all fingers have lifted off, consider it terminated, otherwise wait\n    // for more events.\n    return MH.lengthOf(lastTouchEvent?.touches) ? false : null;\n  }\n\n  return {\n    device: MC.S_TOUCH,\n    direction,\n    intent,\n    deltaX,\n    deltaY,\n    deltaZ,\n  };\n};\n\n/**\n * Returns a description of the changes in each finger between the first and\n * the last relevant TouchEvent in the list.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that, `deltaX`/`deltaY` are the end X/Y coordinate minus the start X/Y\n * coordinate. For natural scroll direction you should swap their signs.\n *\n * @param {} deltaThreshold If the change of x and y coordinate are both less\n *                          than this, it is marked as not significant.\n *\n * @category Gestures\n */\nexport const getTouchDiff = (\n  events: Event[],\n  deltaThreshold = 0,\n): TouchDiff[] | null => {\n  // Group each touch point of each event by identifier, so that we can get the\n  // start and end coordinate of each finger\n  const groupedTouches = newXMap<number, Touch[]>((): Touch[] => []);\n\n  for (const event of events) {\n    if (!MH.isTouchEvent(event)) {\n      continue;\n    }\n\n    if (event.type === MC.S_TOUCHCANCEL) {\n      return null; // gesture terminated\n    }\n\n    for (const touch of event.touches) {\n      groupedTouches.sGet(touch.identifier).push(touch);\n    }\n  }\n\n  const moves: TouchDiff[] = [];\n\n  for (const touchList of groupedTouches.values()) {\n    const nTouches = MH.lengthOf(touchList);\n    if (nTouches < 2) {\n      // Only one event had that finger in it, so there's no move for it\n      continue;\n    }\n\n    const firstTouch = touchList[0];\n    const lastTouch = touchList[nTouches - 1];\n    const startX = firstTouch.clientX;\n    const startY = firstTouch.clientY;\n\n    const endX = lastTouch.clientX;\n    const endY = lastTouch.clientY;\n\n    const deltaX = endX - startX;\n    const deltaY = endY - startY;\n\n    const isSignificant = maxAbs(deltaX, deltaY) >= deltaThreshold;\n\n    // Consider it a move in one of the 4 cardinal ones\n    moves.push({\n      startX,\n      startY,\n      endX,\n      endY,\n      deltaX,\n      deltaY,\n      isSignificant,\n    });\n  }\n\n  return moves;\n};\n\n// --------------------\n\nconst getHoldTime = (events: Event[]) => {\n  const firstStart = events.findIndex((e) => e.type === MC.S_TOUCHSTART);\n  const firstMove = events.findIndex((e) => e.type === MC.S_TOUCHMOVE);\n  if (firstStart < 0 || firstMove < 1) {\n    return 0;\n  }\n\n  return events[firstMove].timeStamp - events[firstStart].timeStamp;\n};\n","/**\n * @module\n * @ignore\n * @internal\n *\n * FULL CREDIT FOR THIS GOES TO\n * https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n *\n * ADAPTED FROM THE ABOVE SOURCE\n *\n * ORIGINAL COPYRIGHT IN FILE PRESERVED:\n *\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * ORIGINAL LICENSE\n *\n * BSD License\n *\n * For FixedDataTable software\n *\n * Copyright (c) 2015, Facebook, Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *\n *  * Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n *  * Neither the name Facebook nor the names of its contributors may be used to\n *    endorse or promote products derived from this software without specific\n *    prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { settings } from \"@lisn/globals/settings\";\n\n/**\n * ORIGINAL DEVELOPER COMMENT PRESERVED\n *\n * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n * complicated, thus this doc is long and (hopefully) detailed enough to answer\n * your questions.\n *\n * If you need to react to the mouse wheel in a predictable way, this code is\n * like your bestest friend. * hugs *\n *\n * As of today, there are 4 DOM event types you can listen to:\n *\n *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n *\n * So what to do?  The is the best:\n *\n *   normalizeWheel.getEventType();\n *\n * In your event callback, use this code to get sane interpretation of the\n * deltas.  This code will return an object with properties:\n *\n *   spinX   -- normalized spin speed (use for zoom) - x plane\n *   spinY   -- \" - y plane\n *   pixelX  -- normalized distance (to pixels) - x plane\n *   pixelY  -- \" - y plane\n *\n * Wheel values are provided by the browser assuming you are using the wheel to\n * scroll a web page by a number of lines or pixels (or pages).  Values can vary\n * significantly on different platforms and browsers, forgetting that you can\n * scroll at different speeds.  Some devices (like trackpads) emit more events\n * at smaller increments with fine granularity, and some emit massive jumps with\n * linear speed or acceleration.\n *\n * This code does its best to normalize the deltas for you:\n *\n *   - spin is trying to normalize how far the wheel was spun (or trackpad\n *     dragged).  This is super useful for zoom support where you want to\n *     throw away the chunky scroll steps on the PC and make those equal to\n *     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n *     resolve a single slow step on a wheel to 1.\n *\n *   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n *     get the crazy differences between browsers, but at least it'll be in\n *     pixels!\n *\n *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n *     should translate to positive value zooming IN, negative zooming OUT.\n *     This matches the newer 'wheel' event.\n *\n * Why are there spinX, spinY (or pixels)?\n *\n *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n *     with a mouse.  It results in side-scrolling in the browser by default.\n *\n *   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n *\n *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n *     probably is by browsers in conjunction with fancy 3D controllers .. but\n *     you know.\n *\n * Implementation info:\n *\n * Examples of 'wheel' event if you scroll slowly (down) by one step with an\n * average mouse:\n *\n *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n *\n * On the trackpad:\n *\n *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n *\n * On other/older browsers.. it's more complicated as there can be multiple and\n * also missing delta values.\n *\n * The 'wheel' event is more standard:\n *\n * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n *\n * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n * backward compatibility with older events.  Those other values help us\n * better normalize spin speed.  Example of what the browsers provide:\n *\n *                          | event.wheelDelta | event.detail\n *        ------------------+------------------+--------------\n *          Safari v5/OS X  |       -120       |       0\n *          Safari v5/Win7  |       -120       |       0\n *         Chrome v17/OS X  |       -120       |       0\n *         Chrome v17/Win7  |       -120       |       0\n *                IE9/Win7  |       -120       |   undefined\n *         Firefox v4/OS X  |     undefined    |       1\n *         Firefox v4/Win7  |     undefined    |       3\n */\nexport const normalizeWheel = (event: LegacyWheelEvent): WheelData => {\n  let spinX = 0,\n    spinY = 0,\n    pixelX = event.deltaX,\n    pixelY = event.deltaY;\n\n  const LINE = settings.deltaLineHeight;\n\n  // Legacy\n  if (event.detail !== undefined) {\n    spinY = event.detail;\n  }\n  if (event.wheelDelta !== undefined) {\n    spinY = -event.wheelDelta / 120;\n  }\n  if (event.wheelDeltaY !== undefined) {\n    spinY = -event.wheelDeltaY / 120;\n  }\n  if (event.wheelDeltaX !== undefined) {\n    spinX = -event.wheelDeltaX / 120;\n  }\n\n  if ((pixelX || pixelY) && event.deltaMode) {\n    if (event.deltaMode === 1) {\n      // delta in LINE units\n      pixelX *= LINE;\n      pixelY *= LINE;\n    } else {\n      // delta in PAGE units\n      pixelX *= settings.deltaPageWidth;\n      pixelY *= settings.deltaPageHeight;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pixelX && !spinX) {\n    spinX = pixelX < 1 ? -1 : 1;\n  }\n  if (pixelY && !spinY) {\n    spinY = pixelY < 1 ? -1 : 1;\n  }\n\n  return { spinX, spinY, pixelX, pixelY };\n};\n\nexport type WheelData = {\n  spinX: number;\n  spinY: number;\n  pixelX: number;\n  pixelY: number;\n};\n\n// --------------------\n\ntype LegacyWheelEvent = WheelEvent & {\n  wheelDelta?: number;\n  wheelDeltaX?: number;\n  wheelDeltaY?: number;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureIntent } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport { havingMaxAbs } from \"@lisn/utils/math\";\nimport { normalizeWheel } from \"@lisn/utils/normalize-wheel\";\n\nimport { GestureFragment, addDeltaZ } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"wheel\" events\n * will be considered.\n *\n * If there are no \"wheel\" events in the given list of events, returns `false`.\n *\n * The deltas of all events are summed together before determining final delta\n * and direction.\n *\n * If the events are of conflicting types, i.e. some scroll, some zoom, then\n * the intent will be \"unknown\" and the direction will be \"ambiguous\".\n *\n * If the deltas sum up to 0, the direction will be \"none\".\n *\n * **IMPORTANT NOTES ON THE DELTA VALUES**\n *\n * For wheel gestures the deltas are _highly_ unreliable, especially when\n * zooming (Control + wheel or pinching trackpad). You should not assume they\n * correspond to the would-be scroll or zoom amount that the browser would do.\n * But they can be used to determine relative amounts for animating, etc.\n *\n * If the browser reports the delta values of a WheelEvent to be in mode \"line\",\n * then a configurable fixed value is used\n * ({@link Settings.settings.deltaLineHeight | settings.deltaLineHeight}).\n *\n * If the browser reports the delta values of a WheelEvent to be in mode \"page\",\n * then a configurable fixed value is used\n * ({@link Settings.settings.deltaPageWidth | settings.deltaPageWidth} and\n * ({@link Settings.settings.deltaPageHeight | settings.deltaPageHeight}).\n *\n * For zoom intents `deltaZ` is based on what the browser reports as the\n * `deltaY`, which in most browsers roughly corresponds to a percentage zoom\n * factor.\n *\n * @param {} [options.angleDiffThreshold] See {@link getVectorDirection}.\n *                                        Default is 5.\n *\n * @return {} `false` if there are no \"wheel\" events in the list, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getWheelGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent | null = null;\n  let deltaX = 0,\n    deltaY = 0,\n    deltaZ = 1;\n\n  for (const event of events) {\n    if (!MH.isWheelEvent(event) || event.type !== MC.S_WHEEL) {\n      continue;\n    }\n\n    const data = normalizeWheel(event);\n    let thisIntent: GestureIntent = MC.S_SCROLL;\n    let thisDeltaX = data.pixelX;\n    let thisDeltaY = data.pixelY;\n    let thisDeltaZ = 1;\n    const maxDelta = havingMaxAbs(thisDeltaX, thisDeltaY);\n\n    if (event.ctrlKey && !thisDeltaX) {\n      // Browsers report negative deltaY for zoom in, so swap sign\n      let percentage = -maxDelta;\n      // If it's more than 50, assume it's a mouse wheel => delta is roughly\n      // multiple of 10%. Otherwise a trackpad => delta is roughly multiple of 1%\n      if (MH.abs(percentage) >= 50) {\n        percentage /= 10;\n      }\n\n      thisDeltaZ = 1 + percentage / 100;\n\n      thisDeltaX = thisDeltaY = 0;\n      thisIntent = MC.S_ZOOM;\n    } else if (event.shiftKey && !thisDeltaX) {\n      // Holding Shift while turning wheel or swiping trackpad in vertically\n      // results in sideways scroll.\n      thisDeltaX = thisDeltaY;\n      thisDeltaY = 0;\n    }\n\n    deltaX += thisDeltaX;\n    deltaY += thisDeltaY;\n    deltaZ = addDeltaZ(deltaZ, thisDeltaZ);\n\n    if (!thisIntent) {\n      // not a relevant key\n    } else if (!intent) {\n      intent = thisIntent;\n    } else if (intent !== thisIntent) {\n      // mixture of zoom and scroll\n      intent = MC.S_UNKNOWN;\n    }\n  }\n\n  if (!intent) {\n    return false; // no relevant events\n  } else if (intent === MC.S_UNKNOWN) {\n    direction = MC.S_AMBIGUOUS;\n  } else if (intent === MC.S_ZOOM) {\n    direction = deltaZ > 1 ? MC.S_IN : deltaZ < 1 ? MC.S_OUT : MC.S_NONE;\n  } else {\n    direction = getVectorDirection(\n      [deltaX, deltaY],\n      options?.angleDiffThreshold,\n    );\n  }\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_WHEEL,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n      };\n};\n","/**\n * @module Watchers/GestureWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureIntent,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  addClasses,\n  removeClasses,\n  setNumericStyleProps,\n} from \"@lisn/utils/css-alter\";\nimport { isValidDirection } from \"@lisn/utils/directions\";\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { getDebouncedHandler } from \"@lisn/utils/tasks\";\n\nimport { addDeltaZ } from \"@lisn/utils/gesture\";\n\nimport {\n  isValidInputDevice,\n  isValidIntent,\n  GestureFragment,\n  DEVICES,\n  INTENTS,\n} from \"@lisn/utils/gesture\";\nimport { getKeyGestureFragment } from \"@lisn/utils/gesture-key\";\nimport { getPointerGestureFragment } from \"@lisn/utils/gesture-pointer\";\nimport { getTouchGestureFragment } from \"@lisn/utils/gesture-touch\";\nimport { getWheelGestureFragment } from \"@lisn/utils/gesture-wheel\";\nimport { logError } from \"@lisn/utils/log\";\nimport {\n  maxAbs,\n  toNonNegNum,\n  toPosNum,\n  toNumWithBounds,\n} from \"@lisn/utils/math\";\nimport { randId, objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { LoggerInterface } from \"@lisn/debug/types\";\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link GestureWatcher} listens for user gestures resulting from wheel,\n * pointer, touch or key input events.\n *\n * It supports scroll, zoom or drag type gestures.\n *\n * It manages registered callbacks globally and reuses event listeners for more\n * efficient performance.\n */\nexport class GestureWatcher {\n  /**\n   * Call the given handler whenever the user performs a gesture on the target\n   * matching the given options.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same event target, even if the options differ. If the handler has already\n   * been added for this target, either using {@link onGesture} or\n   * {@link trackGesture}, then it will be removed and re-added with the\n   * current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onGesture: (\n    target: EventTarget,\n    handler: OnGestureHandler,\n    options?: OnGestureOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offGesture: (target: EventTarget, handler: OnGestureHandler) => void;\n\n  /**\n   * This is the same as {@link onGesture} except that if `handler` is not\n   * given, then it defaults to an internal handler that updates a set of CSS\n   * variables on the target's style:\n   *\n   *   - `--lisn-js--<Intent>-delta-x`\n   *   - `--lisn-js--<Intent>-delta-y`\n   *   - `--lisn-js--<Intent>-delta-z`\n   *\n   * where and `<Intent>` is one of {@link GestureIntent} and the delta X, Y\n   * and Z are the _total summed up_ `deltaX`, `deltaY` and `deltaZ` since the\n   * callback was added, summed over all devices used (key, touch, etc).\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackGesture} or using\n   * {@link onGesture}, then it will be removed and re-added with the current\n   * options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly trackGesture: (\n    element: Element,\n    handler?: OnGestureHandler | null,\n    options?: OnGestureOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackGesture}.\n   */\n  readonly noTrackGesture: (\n    element: Element,\n    handler?: OnGestureHandler | null,\n  ) => void;\n\n  /**\n   * Creates a new instance of GestureWatcher with the given\n   * {@link GestureWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: GestureWatcherConfig = {}) {\n    return new GestureWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of GestureWatcher with the given\n   * {@link GestureWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: GestureWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new GestureWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: GestureWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"GestureWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"GestureWatcher\", logAtCreation: config })\n      : null;\n\n    const allCallbacks = newXWeakMap<\n      EventTarget,\n      Map<\n        OnGestureHandler,\n        {\n          _callback: OnGestureCallback;\n          _wrapper: OnGestureHandlerWrapper;\n          _options: OnGestureOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    // For each target and event type, add only 1 global listener that will then\n    // manage the event queues and callbacks.\n    const allListeners = newXWeakMap<\n      EventTarget,\n      Map<GestureDevice, DeviceListeners>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const createCallback = (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      options: OnGestureOptionsInternal,\n    ): OnGestureCallback => {\n      MH.remove(allCallbacks.get(target)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler for\", options);\n      const { _callback, _wrapper } = getCallbackAndWrapper(\n        handler,\n        options,\n        logger,\n      );\n\n      _callback.onRemove(() => deleteHandler(target, handler, options));\n\n      allCallbacks.sGet(target).set(handler, {\n        _callback,\n        _wrapper,\n        _options: options,\n      });\n\n      return _callback;\n    };\n\n    // ----------\n\n    // async for consistency with other watchers and future compatibility in\n    // case of change needed\n    const setupOnGesture = async (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      userOptions: OnGestureOptions | undefined,\n    ) => {\n      const options = getOptions(config, userOptions || {});\n      createCallback(target, handler, options);\n\n      for (const device of options._devices || DEVICES) {\n        let listeners = allListeners.get(target)?.get(device);\n        if (listeners) {\n          debug: logger?.debug4(\n            `Listeners already added for ${device}`,\n            target,\n            options,\n          );\n        } else {\n          debug: logger?.debug4(\n            `Adding listeners for ${device}`,\n            target,\n            options,\n          );\n\n          listeners = setupListeners(target, device, options);\n          allListeners.sGet(target).set(device, listeners);\n        }\n\n        listeners._nCallbacks++;\n        if (options._preventDefault) {\n          listeners._nPreventDefault++;\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      options: OnGestureOptionsInternal,\n    ) => {\n      MH.deleteKey(allCallbacks.get(target), handler);\n      allCallbacks.prune(target);\n\n      for (const device of options._devices || DEVICES) {\n        const listeners = allListeners.get(target)?.get(device);\n        if (listeners) {\n          listeners._nCallbacks--;\n          if (options._preventDefault) {\n            listeners._nPreventDefault--;\n          }\n\n          if (!listeners._nCallbacks) {\n            debug: logger?.debug4(\n              `No more callbacks for target and device ${device}; removing listeners`,\n              target,\n            );\n\n            MH.deleteKey(allListeners.get(target), device);\n            listeners._remove();\n          }\n        }\n      }\n    };\n\n    // ----------\n\n    const invokeCallbacks = (\n      target: EventTarget,\n      device: GestureDevice,\n      event: Event,\n    ): boolean /* true if terminated */ => {\n      const preventDefault =\n        (allListeners.get(target)?.get(device)?._nPreventDefault || 0) > 0;\n\n      let isTerminated = false;\n      for (const { _wrapper } of allCallbacks.get(target)?.values() || []) {\n        isTerminated =\n          _wrapper(target, device, event, preventDefault) || isTerminated;\n      }\n\n      return isTerminated;\n    };\n\n    // ----------\n\n    const setupListeners = (\n      target: EventTarget,\n      device: GestureDevice,\n      options: OnGestureOptionsInternal,\n    ): DeviceListeners => {\n      const intents = options._intents;\n      let hasAddedTabIndex = false;\n      let hasPreventedSelect = false;\n\n      if (\n        device === MC.S_KEY &&\n        MH.isElement(target) &&\n        !MH.getTabIndex(target)\n      ) {\n        hasAddedTabIndex = true;\n        // enable element to receive keydown events\n        MH.setTabIndex(target);\n      } else if (MH.isElement(target) && device === MC.S_TOUCH) {\n        if (options._preventDefault) {\n          addClasses(target, MC.PREFIX_NO_TOUCH_ACTION);\n        }\n\n        if (!intents || MH.includes(intents, MC.S_DRAG)) {\n          hasPreventedSelect = true;\n          preventSelect(target);\n        }\n      }\n\n      const addOrRemoveListeners = (\n        action: \"add\" | \"remove\",\n        listener: EventListener,\n        eventTypes: readonly (keyof GlobalEventHandlersEventMap)[],\n      ) => {\n        const method =\n          action === \"add\" ? addEventListenerTo : removeEventListenerFrom;\n        for (const eventType of eventTypes) {\n          debug: logger?.debug8(`${action} listener for ${eventType}`, target);\n          method(target, eventType, listener, {\n            passive: false,\n            capture: true,\n          });\n        }\n      };\n\n      const addInitialListener = () =>\n        addOrRemoveListeners(\"add\", initialListener, initiatingEvents[device]);\n\n      const removeInitialListener = () =>\n        addOrRemoveListeners(\n          \"remove\",\n          initialListener,\n          initiatingEvents[device],\n        );\n\n      const addOngoingListener = () =>\n        addOrRemoveListeners(\"add\", processEvent, ongoingEvents[device]);\n\n      const removeOngoingListener = () =>\n        addOrRemoveListeners(\"remove\", processEvent, ongoingEvents[device]);\n\n      const initialListener = (event: Event) => {\n        processEvent(event);\n        removeInitialListener();\n        addOngoingListener();\n      };\n\n      const processEvent = (event: Event) => {\n        const isTerminated = invokeCallbacks(target, device, event);\n        if (isTerminated) {\n          removeOngoingListener();\n          addInitialListener();\n        }\n      };\n\n      addInitialListener();\n\n      return {\n        _nCallbacks: 0,\n        _nPreventDefault: 0,\n        _remove: () => {\n          if (MH.isElement(target)) {\n            if (hasAddedTabIndex) {\n              MH.unsetTabIndex(target);\n            }\n\n            removeClasses(target, MC.PREFIX_NO_TOUCH_ACTION);\n\n            if (hasPreventedSelect) {\n              undoPreventSelect(target);\n            }\n          }\n\n          removeOngoingListener();\n          removeInitialListener();\n        },\n      };\n    };\n\n    // ----------\n\n    this.trackGesture = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setGestureCssProps;\n        // initial values\n        for (const intent of INTENTS) {\n          setGestureCssProps(element, {\n            intent,\n            totalDeltaX: 0,\n            totalDeltaY: 0,\n            totalDeltaZ: 1,\n          });\n        }\n      }\n\n      return setupOnGesture(element, handler, options);\n    };\n\n    // ----------\n\n    this.noTrackGesture = (element, handler?) => {\n      if (!handler) {\n        handler = setGestureCssProps;\n\n        // delete the properties\n        for (const intent of INTENTS) {\n          setGestureCssProps(element, { intent });\n        }\n      }\n\n      this.offGesture(element, handler);\n    };\n\n    // ----------\n\n    this.onGesture = setupOnGesture;\n\n    // ----------\n\n    this.offGesture = (target, handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(target)?.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type GestureWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnGestureOptions.preventDefault | preventDefault} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.debounceWindow | debounceWindow} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 150\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.deltaThreshold | deltaThreshold} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 5\n   */\n  deltaThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.angleDiffThreshold | angleDiffThreshold} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * It does not make much sense to set this to 0.\n   *\n   * The value is in _degrees_, not radians.\n   *\n   * @defaultValue 35\n   */\n  angleDiffThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.naturalTouchScroll | naturalTouchScroll} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue true\n   */\n  naturalTouchScroll?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.touchDragHoldTime | touchDragHoldTime} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 500\n   */\n  touchDragHoldTime?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.touchDragNumFingers | touchDragNumFingers} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 1\n   */\n  touchDragNumFingers?: number;\n};\n\n/**\n * @interface\n */\nexport type OnGestureOptions = {\n  /**\n   * One or more device types to listen for. If not specified, then all devices\n   * are enabled.\n   *\n   * It can be a comma-separated list of {@link GestureDevice}s or an array of\n   * such devices.\n   *\n   * @defaultValue undefined\n   */\n  devices?: CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If given, callback will only be called if the gesture's direction is one\n   * of the given ones.\n   *\n   * It can be a comma-separated list of {@link Direction}s or an array of such\n   * directions.\n   *\n   * @defaultValue undefined\n   */\n  directions?: CommaSeparatedStr<Direction> | Direction[];\n\n  /**\n   * If given, callback will only be called if the gesture's intent is one\n   * of the given ones.\n   *\n   * It can be a comma-separated list of {@link GestureIntent}s or an\n   * array of such intents.\n   *\n   * @defaultValue undefined\n   */\n  intents?: CommaSeparatedStr<GestureIntent> | GestureIntent[];\n\n  /**\n   * Set minimum total delta X. Further reductions in delta X below this value\n   * will be ignored.\n   *\n   * The value is in pixels and can be negative.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaX?: number;\n\n  /**\n   * Set maximum total delta X. Further increase in delta X above this value\n   * will be ignored.\n   *\n   * The value is in pixels.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaX?: number;\n\n  /**\n   * Set minimum total delta Y. Further reductions in delta Y below this value\n   * will be ignored.\n   *\n   * The value is in pixels and can be negative.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaY?: number;\n\n  /**\n   * Set maximum total delta Y. Further increase in delta Y above this value\n   * will be ignored.\n   *\n   * The value is in pixels.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaY?: number;\n\n  /**\n   * Set minimum total delta Z. Further reductions in delta Z below this value\n   * will be ignored.\n   *\n   * The value is in percentage zoom, relative to 1, and can be less than 1 but\n   * must be > 0.1 which is a hard minimum.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaZ?: number;\n\n  /**\n   * Set maximum total delta Z. Further increase in delta Z above this value\n   * will be ignored.\n   *\n   * The value is in percentage zoom, relative to 1, and must be positive.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaZ?: number;\n\n  /**\n   * If true, the events of the gesture, e.g. relevant key presses or touch\n   * moves, etc, will have their default action prevented.\n   *\n   * **IMPORTANT:** For pointer gestures, then pointer/mouse down and click\n   * will be prevented.\n   *\n   * @defaultValue {@link GestureWatcherConfig.preventDefault}\n   */\n  preventDefault?: boolean;\n\n  /**\n   * If given, callback will be called at most once every `debounceWindow`\n   * milliseconds.\n   *\n   * Note that if both `debounceWindow` and `deltaThreshold` are set, _both_\n   * must be exceeded before callback is called.\n   *\n   * @defaultValue {@link GestureWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n\n  /**\n   * Callback will only be called when the gesture's accumulated delta, since\n   * the last time callback was called, exceeds `deltaThreshold`.\n   *\n   * At least one of the three deltas (X, Y or Z) must exceed this number (in\n   * absolute value). Note that when comparing `deltaZ`, it is multiplied by\n   * 100 since it represents fractions of 1 (100%). So supplying\n   * `deltaThreshold` of 10 means is equivalent to the following condition:\n   *\n   * ```\n   * abs(deltaX) >= 10 || abs(deltaY) >= 10 ||  abs(1 - deltaZ) >= 0.1\n   * ```\n   *\n   * Accumulation of the delta ends if the gesture is terminated, for example,\n   * in case of touch gestures, by a \"touchcancel\" event of by the final finger\n   * lifting off..\n   *\n   * Note that if both `debounceWindow` and `deltaThreshold` are set, _both_\n   * must be exceeded before callback is called.\n   *\n   * @defaultValue {@link GestureWatcherConfig.deltaThreshold}\n   */\n  deltaThreshold?: number;\n\n  /**\n   * See {@link Utils.getVectorDirection | getVectorDirection}.\n   *\n   * @defaultValue {@link GestureWatcherConfig.angleDiffThreshold}\n   */\n  angleDiffThreshold?: number;\n\n  /**\n   * Whether touch scroll gestures follow the natural direction: swipe up\n   * with scroll intent results in direction down and swipe down results in\n   * direction up.\n   *\n   * @defaultValue {@link GestureWatcherConfig.naturalTouchScroll}\n   */\n  naturalTouchScroll?: boolean;\n\n  /**\n   * If the user presses and holds on a touchscreen for at least the given\n   * amount of milliseconds before moving the finger(s), touch gestures other\n   * than pinch will be treated as a drag intent instead of scroll as long as\n   * the number of fingers touching the screen is {@link touchDragNumFingers}.\n   *\n   * Set to 0 in order to treat _all_ non-pinch touch gestures as drag.\n   *\n   * Set to a negative number in order to treat _all_ non-pinch touch gestures\n   * as scroll.\n   *\n   * @defaultValue {@link GestureWatcherConfig.touchDragHoldTime}\n   */\n  touchDragHoldTime?: number;\n\n  /**\n   * The number of fingers that could be considered a drag intent for touch\n   * gestures.\n   *\n   * @defaultValue {@link GestureWatcherConfig.touchDragHoldTime}\n   */\n  touchDragNumFingers?: number;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the event target that was passed to the {@link GestureWatcher.onGesture}\n *   call (equivalent to\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget | Event:currentTarget}).\n * - the {@link GestureData} that describes the gesture's progression since the\n *   last time the callback was called and since the callback was added.\n */\nexport type OnGestureHandlerArgs = [EventTarget, GestureData, Event[]];\nexport type OnGestureCallback = Callback<OnGestureHandlerArgs>;\nexport type OnGestureHandler =\n  | CallbackHandler<OnGestureHandlerArgs>\n  | OnGestureCallback;\n\nexport type GestureData = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n\n  /**\n   * Delta in the horizontal direction since the start of the gesture.\n   */\n  deltaX: number;\n\n  /**\n   * Delta in the vertical direction since the start of the gesture.\n   */\n  deltaY: number;\n\n  /**\n   * Relative fractional zoom in or out for zoom intents since the start of\n   * the gesture.\n   *\n   * For zoom in, `deltaZ` is always > 1, and for zoom out it is < 1.\n   *\n   * For non-zoom gestures it is 1.\n   */\n  deltaZ: number;\n\n  /**\n   * The time in milliseconds it took for the gesture. This will be the\n   * difference in timestamps between the first and last event that composed\n   * the gesture. For key and wheel gestures this could be 0, since 1 event is\n   * sufficient for them.\n   */\n  time: number;\n\n  /**\n   * Delta in the horizontal direction since the callback was added.\n   */\n  totalDeltaX: number;\n\n  /**\n   * Delta in the vertical direction since the callback was added.\n   */\n  totalDeltaY: number;\n\n  /**\n   * Percentage (relative) zoom in or out for zoom intents since the callback\n   * was added.\n   */\n  totalDeltaZ: number;\n};\n\n// ----------------------------------------\n\ntype GestureWatcherConfigInternal = {\n  _preventDefault: boolean;\n  _debounceWindow: number;\n  _deltaThreshold: number;\n  _angleDiffThreshold: number;\n  _naturalTouchScroll: boolean;\n  _touchDragHoldTime: number;\n  _touchDragNumFingers: number;\n};\n\ntype OnGestureOptionsInternal = {\n  _devices: GestureDevice[] | null;\n  _directions: Direction[] | null;\n  _intents: GestureIntent[] | null;\n  _minTotalDeltaX: number | null;\n  _maxTotalDeltaX: number | null;\n  _minTotalDeltaY: number | null;\n  _maxTotalDeltaY: number | null;\n  _minTotalDeltaZ: number | null;\n  _maxTotalDeltaZ: number | null;\n  _preventDefault: boolean;\n  _debounceWindow: number;\n  _deltaThreshold: number;\n  _angleDiffThreshold: number;\n  _naturalTouchScroll: boolean;\n  _touchDragHoldTime: number;\n  _touchDragNumFingers: number;\n};\n\ntype OnGestureHandlerWrapper = (\n  _target: EventTarget,\n  _device: GestureDevice,\n  _event: Event,\n  _preventDefault: boolean,\n) => boolean;\n\n// Specific to a combination of target + device\ntype DeviceListeners = {\n  _nCallbacks: number; // total number of callbacks\n  _nPreventDefault: number; // total number wanting to prevent default action\n  _remove: () => void;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, GestureWatcher>();\n\nconst getConfig = (\n  config: GestureWatcherConfig,\n): GestureWatcherConfigInternal => {\n  return {\n    _preventDefault: config.preventDefault ?? true,\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 150),\n    _deltaThreshold: toNonNegNum(config.deltaThreshold, 5),\n    _angleDiffThreshold: toPosNum(config.angleDiffThreshold, 35),\n    _naturalTouchScroll: config.naturalTouchScroll ?? true,\n    _touchDragHoldTime: config.touchDragHoldTime ?? 500,\n    _touchDragNumFingers: config.touchDragNumFingers ?? 1,\n  };\n};\n\nconst initiatingEvents: {\n  [D in GestureDevice]: readonly (keyof GlobalEventHandlersEventMap)[];\n} = {\n  key: [MC.S_KEYDOWN],\n  // If the browser doesn't support pointer events, then\n  // addEventListenerTo will transform it into mousedown\n  //\n  // We need to listen for click, since that occurs after a pointerup (i.e.\n  // after a gesure is terminated and the ongoing listeners removed), but it\n  // needs to have its default action prevented.\n  pointer: [MC.S_POINTERDOWN, MC.S_CLICK],\n  touch: [MC.S_TOUCHSTART],\n  wheel: [MC.S_WHEEL],\n} as const;\n\nconst ongoingEvents: {\n  [D in GestureDevice]: readonly (keyof GlobalEventHandlersEventMap)[];\n} = {\n  key: [MC.S_KEYDOWN],\n  pointer: [\n    // If the browser doesn't support point events, then\n    // addEventListenerTo will transform them into mouse*\n    MC.S_POINTERDOWN,\n    MC.S_POINTERUP, // would terminate\n    MC.S_POINTERMOVE,\n    MC.S_POINTERCANCEL, // would terminate\n    MC.S_CLICK, // would terminate; can be default-prevented\n  ],\n  touch: [MC.S_TOUCHSTART, MC.S_TOUCHEND, MC.S_TOUCHMOVE, MC.S_TOUCHCANCEL],\n  wheel: [MC.S_WHEEL],\n} as const;\n\nconst fragmentGetters: {\n  [D in GestureDevice]: (\n    events: Event[],\n    options: {\n      deltaThreshold?: number;\n      angleDiffThreshold?: number;\n      reverseScroll?: boolean;\n      dragHoldTime?: number;\n      dragNumFingers?: number;\n    },\n  ) => GestureFragment | null | false;\n} = {\n  [MC.S_KEY]: getKeyGestureFragment,\n  [MC.S_POINTER]: getPointerGestureFragment,\n  [MC.S_TOUCH]: getTouchGestureFragment,\n  [MC.S_WHEEL]: getWheelGestureFragment,\n};\n\nconst getOptions = (\n  config: GestureWatcherConfigInternal,\n  options: OnGestureOptions,\n): OnGestureOptionsInternal => {\n  const debounceWindow = toNonNegNum(\n    options[MC.S_DEBOUNCE_WINDOW],\n    config._debounceWindow, // watcher is never debounced, so apply default here\n  );\n  const deltaThreshold = toNonNegNum(\n    options.deltaThreshold,\n    config._deltaThreshold,\n  );\n\n  return {\n    _devices:\n      validateStrList(\"devices\", options.devices, isValidInputDevice) || null,\n    _directions:\n      validateStrList(\"directions\", options.directions, isValidDirection) ||\n      null,\n    _intents:\n      validateStrList(\"intents\", options.intents, isValidIntent) || null,\n    _minTotalDeltaX: options.minTotalDeltaX ?? null,\n    _maxTotalDeltaX: options.maxTotalDeltaX ?? null,\n    _minTotalDeltaY: options.minTotalDeltaY ?? null,\n    _maxTotalDeltaY: options.maxTotalDeltaY ?? null,\n    _minTotalDeltaZ: options.minTotalDeltaZ ?? null,\n    _maxTotalDeltaZ: options.maxTotalDeltaZ ?? null,\n    _preventDefault: options.preventDefault ?? config._preventDefault,\n    _debounceWindow: debounceWindow,\n    _deltaThreshold: deltaThreshold,\n    _angleDiffThreshold: toNonNegNum(\n      options.angleDiffThreshold,\n      config._angleDiffThreshold,\n    ),\n    _naturalTouchScroll:\n      options.naturalTouchScroll ?? config._naturalTouchScroll,\n    _touchDragHoldTime: options.touchDragHoldTime ?? config._touchDragHoldTime,\n    _touchDragNumFingers:\n      options.touchDragNumFingers ?? config._touchDragNumFingers,\n  };\n};\n\n// Since each callback needs to accumulate events during its debounce window\n// and until its threshold is exceeded, we use a wrapper around the\n// user-supplied handler to do that.\nconst getCallbackAndWrapper = (\n  handler: OnGestureHandler,\n  options: OnGestureOptionsInternal,\n  logger: LoggerInterface | null,\n): { _callback: OnGestureCallback; _wrapper: OnGestureHandlerWrapper } => {\n  let totalDeltaX = 0,\n    totalDeltaY = 0,\n    totalDeltaZ = 1;\n  // When there's a pointer down, drag then pointerup, since we prevent\n  // pointerdown default action, this results in a click event shortly\n  // afterwards even when there's been a movement of the mouse. We detect that\n  // and prevent this click.\n  let preventNextClick = false;\n\n  const directions = options._directions;\n  const intents = options._intents;\n  const minTotalDeltaX = options._minTotalDeltaX;\n  const maxTotalDeltaX = options._maxTotalDeltaX;\n  const minTotalDeltaY = options._minTotalDeltaY;\n  const maxTotalDeltaY = options._maxTotalDeltaY;\n  const minTotalDeltaZ = options._minTotalDeltaZ;\n  const maxTotalDeltaZ = options._maxTotalDeltaZ;\n  const deltaThreshold = options._deltaThreshold;\n  const angleDiffThreshold = options._angleDiffThreshold;\n  const reverseScroll = !options._naturalTouchScroll;\n  const dragHoldTime = options._touchDragHoldTime;\n  const dragNumFingers = options._touchDragNumFingers;\n\n  // The event queue is cleared when the threshold is exceeded AND the debounce\n  // window has passed. It's not necessary for the actual handler to be called\n  // then (e.g. if the direction or intent doesn't match, it won't be).\n  const eventQueue: Event[] = [];\n  const id = randId();\n\n  // Since handler could be a function or a callback (not callable), we wrap it\n  // so that in case it's already a callback, its removal will result in\n  // deleteHandler getting called. It is not debounced itself, instead there's\n  // a debounced wrapper that invokes it.\n  const callback = wrapCallback(handler);\n\n  // The debounced callback wrapper is what is debounced.\n  // It accumulates total deltas and checks if the conditions (of threshold,\n  // direction and intent) are satisfied before calling the real handler.\n  //\n  // Most importantly, since it is only called when the debounce window has\n  // expired it can clear the event queue if the threshold is also exceeded.\n  const debouncedWrapper = getDebouncedHandler(\n    options._debounceWindow,\n    (\n      target: EventTarget,\n      fragment: GestureFragment,\n      eventQueueCopy: Event[],\n    ) => {\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      const deltaX = fragment.deltaX;\n      const deltaY = fragment.deltaY;\n      const deltaZ = fragment.deltaZ;\n      const device = fragment.device;\n\n      if (\n        MH.round(maxAbs(deltaX, deltaY, (1 - deltaZ) * 100)) < deltaThreshold\n      ) {\n        debug: logger?.debug7(\n          `[${id}] Delta threshold not exceeded for callback`,\n        );\n        return;\n      }\n\n      debug: logger?.debug9(`[${id}] Done summing events for ${device}`);\n      clearEventQueue(device, eventQueue);\n\n      const newTotalDeltaX = toNumWithBounds(totalDeltaX + deltaX, {\n        min: minTotalDeltaX,\n        max: maxTotalDeltaX,\n      });\n\n      const newTotalDeltaY = toNumWithBounds(totalDeltaY + deltaY, {\n        min: minTotalDeltaY,\n        max: maxTotalDeltaY,\n      });\n\n      const newTotalDeltaZ = toNumWithBounds(addDeltaZ(totalDeltaZ, deltaZ), {\n        min: minTotalDeltaZ,\n        max: maxTotalDeltaZ,\n      });\n\n      if (\n        newTotalDeltaX === totalDeltaX &&\n        newTotalDeltaY === totalDeltaY &&\n        newTotalDeltaZ === totalDeltaZ\n      ) {\n        return;\n      }\n\n      totalDeltaX = newTotalDeltaX;\n      totalDeltaY = newTotalDeltaY;\n      totalDeltaZ = newTotalDeltaZ;\n\n      const direction = fragment.direction;\n      const intent = fragment.intent;\n      const time =\n        eventQueueCopy[MH.lengthOf(eventQueueCopy) - 1]?.timeStamp -\n          eventQueueCopy[0]?.timeStamp || 0;\n\n      const data = {\n        device,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n        time,\n        totalDeltaX,\n        totalDeltaY,\n        totalDeltaZ,\n      };\n\n      if (\n        direction !== MC.S_NONE &&\n        (!directions || MH.includes(directions, direction)) &&\n        (!intents || MH.includes(intents, intent))\n      ) {\n        callback.invoke(target, data, eventQueueCopy).catch(logError);\n      } else {\n        debug: logger?.debug7(\n          `[${id}] Directions or intents not matching for callback`,\n        );\n      }\n    },\n  );\n\n  // This wrapper is NOT debounced and adds the events to the queue, prevents\n  // default action if needed, and indicates whether the gesture is terminated.\n  const wrapper = (\n    target: EventTarget,\n    device: GestureDevice,\n    event: Event,\n    preventDefault: boolean,\n  ) => {\n    eventQueue.push(event);\n\n    const fragment = fragmentGetters[device](eventQueue, {\n      angleDiffThreshold,\n      deltaThreshold,\n      reverseScroll,\n      dragHoldTime,\n      dragNumFingers,\n    });\n\n    debug: logger?.debug8(\n      `[${id}] Got fragment for ${device} (${event.type})`,\n      fragment,\n      [...eventQueue].map((e) => e.type),\n    );\n\n    if (preventDefault) {\n      preventDefaultActionFor(\n        event,\n        !!fragment || (event.type === MC.S_CLICK && preventNextClick),\n      );\n    }\n\n    if (fragment === false) {\n      // not enough events in the queue, pass\n      debug: logger?.debug9(`[${id}] Not enough events for gesture ${device}`);\n      return false;\n    } else if (fragment === null) {\n      // consider the gesture terminated\n      clearEventQueue(device, eventQueue);\n      debug: logger?.debug9(`[${id}] Gesture for ${device} terminated`);\n      return true;\n    }\n\n    if (device === MC.S_POINTER) {\n      // If we're here, there's been a drag, expect a click immediately\n      // afterwards and prevent default action.\n      preventNextClick = true;\n      MH.setTimer(() => {\n        preventNextClick = false;\n      }, 10);\n    }\n\n    debouncedWrapper(\n      target,\n      fragment,\n      [...eventQueue], // copy\n    );\n\n    return false;\n  };\n\n  return { _callback: callback, _wrapper: wrapper };\n};\n\nconst clearEventQueue = (device: GestureDevice, queue: Event[]) => {\n  const keepLastEvent = device === MC.S_POINTER || device === MC.S_TOUCH;\n  queue.splice(0, MH.lengthOf(queue) - (keepLastEvent ? 1 : 0));\n};\n\nconst preventDefaultActionFor = (event: Event, isActualGesture: boolean) => {\n  const target = event.currentTarget;\n  const eventType = event.type;\n  const isPointerDown =\n    eventType === MC.S_POINTERDOWN || eventType === MC.S_MOUSEDOWN;\n\n  if (\n    eventType === MC.S_TOUCHMOVE ||\n    eventType === MC.S_WHEEL ||\n    ((eventType === MC.S_CLICK || eventType === MC.S_KEYDOWN) &&\n      isActualGesture) ||\n    (isPointerDown && (event as MouseEvent).buttons === 1)\n  ) {\n    MH.preventDefault(event);\n\n    if (isPointerDown && MH.isHTMLElement(target)) {\n      // Otherwise capturing key events won't work\n      target.focus({ preventScroll: true });\n    }\n  }\n};\n\nconst setGestureCssProps = (\n  target: EventTarget,\n  data: Partial<GestureData>,\n) => {\n  const intent = data.intent;\n\n  if (!MH.isElement(target) || !intent || intent === MC.S_UNKNOWN) {\n    return;\n  }\n\n  const prefix = `${intent}-`;\n\n  if (intent === MC.S_ZOOM) {\n    setNumericStyleProps(\n      target,\n      {\n        deltaZ: data.totalDeltaZ,\n      },\n      {\n        _prefix: prefix,\n        _numDecimal: 2,\n      },\n    ); // don't await here\n  } else {\n    setNumericStyleProps(\n      target,\n      {\n        deltaX: data.totalDeltaX,\n        deltaY: data.totalDeltaY,\n      },\n      {\n        _prefix: prefix,\n      },\n    ); // don't await here\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { sortedKeysByVal } from \"@lisn/utils/math\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  BitSpace,\n  newBitSpaces,\n  createBitSpace,\n} from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid device name.\n *\n * @category Validation\n */\nexport const isValidDevice = (device: string): device is Device =>\n  ORDERED_DEVICES.has(device);\n\n/**\n * Returns true if the given string is a valid aspect ratio name.\n *\n * @category Validation\n */\nexport const isValidAspectRatio = (\n  aspectRatio: string,\n): aspectRatio is AspectRatio => ORDERED_ASPECTR.has(aspectRatio);\n\n/**\n * Returns true if the given string is a valid device specification (including\n * `\"min <Device>\"`, etc).\n *\n * Returns false for \"\", although if you passed \"\" in\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} it would\n * accept it as specifying _all_ devices.\n *\n * @category Validation\n */\nexport const isValidDeviceList = (\n  device: string | string[],\n): device is DeviceSpec | Device[] =>\n  isValidForType(S_DEVICES, device, ORDERED_DEVICES);\n\n/**\n * Returns true if the given string is a valid aspect ratio specification\n * (including `\"min <AspectRatio>\"`, etc).\n *\n * Returns false for \"\", although if you passed \"\" in\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} it would\n * accept it as specifying _all_ aspect ratios.\n *\n * @category Validation\n */\nexport const isValidAspectRatioList = (\n  aspectR: string | string[],\n): aspectR is AspectRatioSpec | AspectRatio[] =>\n  isValidForType(S_ASPECTRS_CAMEL, aspectR, ORDERED_ASPECTR);\n\n/**\n * Returns a list of {@link Device}s that are not covered by the given device\n * specification. See\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for accepted\n * formats.\n *\n * Returns an empty for \"\" or for a specification that includes all devices.\n *\n * @category Layout\n */\nexport const getOtherDevices = (device: DeviceSpec | Device[]): Device[] =>\n  getOtherLayouts(S_DEVICES, device, ORDERED_DEVICES);\n\n/**\n * Returns a list of {@link AspectRatio}s that are not covered by the given\n * aspect ratio specification. See\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for accepted\n * formats.\n *\n * Returns an empty for \"\" or for a specification that includes all aspect\n * ratios.\n *\n * @category Layout\n */\nexport const getOtherAspectRatios = (\n  aspectR: AspectRatioSpec | AspectRatio[],\n): AspectRatio[] => getOtherLayouts(S_ASPECTRS_CAMEL, aspectR, ORDERED_ASPECTR);\n\n/**\n * @ignore\n * @internal\n */\nexport const getLayoutBitmask = (options?: {\n  devices?: DeviceSpec | Device[];\n  aspectRatios?: AspectRatioSpec | AspectRatio[];\n}): number => {\n  let layoutBitmask =\n    getBitmaskFromSpec(S_DEVICES, options?.devices, ORDERED_DEVICES) |\n    getBitmaskFromSpec(\n      S_ASPECTRS_CAMEL,\n      options?.aspectRatios,\n      ORDERED_ASPECTR,\n    );\n\n  if (!layoutBitmask) {\n    layoutBitmask = ORDERED_DEVICES.bitmask | ORDERED_ASPECTR.bitmask; // default: all\n  }\n\n  return layoutBitmask;\n};\n\n// In ascending order by width.\nconst ORDERED_DEVICE_NAMES = sortedKeysByVal(settings.deviceBreakpoints);\nconst ORDERED_ASPECTR_NAMES = sortedKeysByVal(settings.aspectRatioBreakpoints);\n\nconst bitSpaces = newBitSpaces();\n\n/**\n * @ignore\n * @internal\n */\nexport const ORDERED_DEVICES = createBitSpace(\n  bitSpaces,\n  ...ORDERED_DEVICE_NAMES,\n);\n\n/**\n * @ignore\n * @internal\n */\nexport const ORDERED_ASPECTR = createBitSpace(\n  bitSpaces,\n  ...ORDERED_ASPECTR_NAMES,\n);\n\n/**\n * @ignore\n * @internal\n */\nexport const NUM_LAYOUTS =\n  MH.lengthOf(ORDERED_DEVICE_NAMES) + MH.lengthOf(ORDERED_ASPECTR_NAMES);\n\n// --------------------\n\nconst S_DEVICES = \"devices\";\nconst S_ASPECTRS_CAMEL = \"aspectRatios\";\n\nconst LAYOUT_RANGE_REGEX = RegExp(\n  \"^ *(\" +\n    \"(?<layoutA>[a-z-]+) +to +(?<layoutB>[a-z-]+)|\" +\n    \"min +(?<minLayout>[a-z-]+)|\" +\n    \"max +(?<maxLayout>[a-z-]+)\" +\n    \") *$\",\n);\n\nconst getLayoutsFromBitmask = <T extends Device | AspectRatio>(\n  keyName: string,\n  bitmask: number,\n  bitSpace: BitSpace<T>,\n): T[] => {\n  const layouts: T[] = [];\n  for (let bit = bitSpace.start; bit <= bitSpace.end; bit++) {\n    const value = 1 << bit;\n    if (bitmask & value) {\n      const name = bitSpace.nameOf(value);\n      if (name) {\n        layouts.push(name);\n      }\n    }\n  }\n\n  return layouts;\n};\n\nconst getOtherLayouts = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[],\n  bitSpace: BitSpace<T>,\n): T[] => {\n  const bitmask = getBitmaskFromSpec(keyName, spec, bitSpace);\n  if (!bitmask) {\n    return [];\n  }\n\n  const oppositeBitmask = bitSpace.bitmask & ~bitmask;\n  return getLayoutsFromBitmask(keyName, oppositeBitmask, bitSpace);\n};\n\nconst isValidForType = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[],\n  bitSpace: BitSpace<T>,\n): boolean => {\n  try {\n    const bitmask = getBitmaskFromSpec(keyName, spec, bitSpace);\n    return bitmask !== 0;\n  } catch (err) {\n    if (MH.isInstanceOf(err, LisnUsageError)) {\n      return false;\n    }\n    throw err;\n  }\n};\n\nconst getBitmaskFromSpec = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[] | undefined | null,\n  bitSpace: BitSpace<T>,\n): number => {\n  if (MH.isEmpty(spec)) {\n    return 0;\n  }\n  const singleKeyName = keyName.slice(0, -1);\n\n  if (MH.isString(spec)) {\n    const rangeMatch = spec.match(LAYOUT_RANGE_REGEX);\n    if (rangeMatch) {\n      /* istanbul ignore next */ // shouldn't happen\n      if (!rangeMatch.groups) {\n        throw MH.bugError(\"Layout regex has no named groups\");\n      }\n\n      const minLayout =\n        rangeMatch.groups.layoutA || rangeMatch.groups.minLayout;\n      const maxLayout =\n        rangeMatch.groups.layoutB || rangeMatch.groups.maxLayout;\n\n      if (minLayout !== undefined && !bitSpace.has(minLayout)) {\n        throw MH.usageError(`Unknown ${singleKeyName} '${minLayout}'`);\n      }\n\n      if (maxLayout !== undefined && !bitSpace.has(maxLayout)) {\n        throw MH.usageError(`Unknown ${singleKeyName} '${maxLayout}'`);\n      }\n\n      return bitSpace.bitmaskFor(minLayout, maxLayout);\n    }\n  }\n\n  let bitmask = 0;\n  const layouts = validateStrList(keyName, spec, bitSpace.has);\n  if (layouts) {\n    for (const lt of layouts) {\n      bitmask |= bitSpace.bit[lt];\n    }\n  }\n\n  return bitmask;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  ScrollDirection,\n  ScrollTarget,\n  TargetCoordinates,\n  CoordinateOffset,\n  ScrollPosition,\n  Offset,\n} from \"@lisn/globals/types\";\n\nimport { getComputedStylePropNow } from \"@lisn/utils/css-alter\";\nimport { SCROLL_DIRECTIONS } from \"@lisn/utils/directions\";\nimport {\n  waitForInteractive,\n  waitForElementOrInteractive,\n} from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { maxAbs, easeInOutQuad } from \"@lisn/utils/math\";\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Scrolling\n */\nexport type ScrollAction = {\n  cancel: () => boolean;\n\n  /**\n   * Will reject if the scroll is cancelled.\n   */\n  waitFor: () => Promise<ScrollPosition>;\n};\n\n/**\n * @category Scrolling\n * @interface\n */\nexport type ScrollToOptions = {\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue If `document.body` is scrollable, will use that; otherwise `document.scrollingElement`\n   */\n  scrollable?: Element;\n\n  /**\n   * Offset the target coordinates by the given amount(s).\n   *\n   * E.g. if the final target coordinates are computed to be\n   * `{top: 100, left: 0}` and you specify offset as `{top: 10, left: 20}`, it\n   * will scroll to  `{top: 110, left: 20}`.\n   *\n   * @defaultValue undefined\n   */\n  offset?: CoordinateOffset;\n\n  // TODO maybe support fixed velocity as an alternative to fixed duration?\n  /**\n   * The duration of the scroll animation. If not given, it is instant.\n   *\n   * @defaultValue 0\n   */\n  duration?: number;\n\n  /**\n   * Whether another request to us to scroll the same target can interrupt this\n   * scroll before it finishes.\n   *\n   * @defaultValue false\n   */\n  weCanInterrupt?: boolean;\n\n  /**\n   * Whether a user attempt to scroll the target can interrupt this before it\n   * finishes.\n   *\n   * @defaultValue false\n   */\n  userCanInterrupt?: boolean;\n\n  /**\n   * If the scrolling element is already at the given coordinates (or strictly\n   * speaking we allow for 5 pixels difference), then if `altTarget` is given,\n   * this will become the target to scroll to.\n   *\n   * @defaultValue undefined\n   */\n  altTarget?: TargetCoordinates | Element | string;\n\n  /**\n   * Offset the target coordinates by the given amount(s) when `altTarget` is used.\n   *\n   * See {@link ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined\n   */\n  altOffset?: CoordinateOffset;\n};\n\n// ----------\n\n/**\n * Returns true if the given element is scrollable in the given direction, or\n * in either direction (if `axis` is not given).\n *\n * **IMPORTANT:** If you enable `active` then be aware that:\n * 1. It may attempt to scroll the target in order to determine whether it's\n *    scrollable in a more reliable way than the default method of comparing\n *    clientWidth/Height to scrollWidth/Height. If there is currently any\n *    ongoing scroll on the target, this will stop it, so never use that inside\n *    scroll-triggered handlers.\n * 2. If the layout has been invalidated and not yet recalculated,\n *    this will cause a forced layout, so always {@link waitForMeasureTime}\n *    before calling this function when possible.\n *\n * @param {} [options.axis]    One of \"x\" or \"y\" for horizontal or vertical\n *                             scroll respectively. If not given, it checks\n *                             both.\n * @param {} [options.active]  If true, then if the target's current scroll\n *                             offset is 0, it will attempt to scroll it rather\n *                             than looking at the clientWidth/Height to\n *                             scrollWidth/Height. This is more reliable but can\n *                             cause issues, see note above.\n * @param {} [options.noCache] By default the result of a check is cached for\n *                             1s and if there's already a cached result for\n *                             this element, it is returns. Set this to true to\n *                             disable checking the cache and also saving the\n *                             result into the cache.\n *\n * @category Scrolling\n */\nexport const isScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n): boolean => {\n  const { axis, active, noCache } = options || {};\n  if (!axis) {\n    return (\n      isScrollable(element, { axis: \"y\", active, noCache }) ||\n      isScrollable(element, { axis: \"x\", active, noCache })\n    );\n  }\n\n  if (!noCache) {\n    const cachedResult = isScrollableCache.get(element)?.get(axis);\n    if (!MH.isNullish(cachedResult)) {\n      return cachedResult;\n    }\n  }\n\n  const offset = axis === \"x\" ? \"Left\" : \"Top\";\n  let result = false;\n  let doCache = !noCache;\n\n  if (element[`scroll${offset}`]) {\n    result = true;\n  } else if (active) {\n    // Use scrollTo with explicit behavior set to instant instead of setting\n    // the scrollTop/Left properties since the latter doesn't work with\n    // scroll-behavior smooth.\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 1 });\n    const canScroll = element[`scroll${offset}`] > 0;\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 0 });\n    result = canScroll;\n  } else {\n    const dimension = axis === \"x\" ? \"Width\" : \"Height\";\n    result = element[`scroll${dimension}`] > element[`client${dimension}`];\n    // No need to cache a passive check.\n    doCache = false;\n  }\n\n  if (doCache) {\n    isScrollableCache.sGet(element).set(axis, result);\n    MH.setTimer(() => {\n      MH.deleteKey(isScrollableCache.get(element), axis);\n      isScrollableCache.prune(element);\n    }, IS_SCROLLABLE_CACHE_TIMEOUT);\n  }\n\n  return result;\n};\n\n/**\n * Returns the closest scrollable ancestor of the given element, _not including\n * it_.\n *\n * @param {} options See {@link isScrollable}\n *\n * @return {} `null` if no scrollable ancestors are found.\n *\n * @category Scrolling\n */\nexport const getClosestScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n) => {\n  // Walk up the tree, starting at the element in question but excluding it.\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = MH.parentOf(ancestor))) {\n    if (isScrollable(ancestor, options)) {\n      return ancestor;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Returns the current {@link ScrollAction} if any.\n *\n * @category Scrolling\n */\nexport const getCurrentScrollAction = (\n  scrollable?: Element,\n): ScrollAction | null => {\n  scrollable = toScrollableOrDefault(scrollable);\n  const action = currentScrollAction.get(scrollable);\n  if (action) {\n    return MH.copyObject(action);\n  }\n  return null;\n};\n\n/**\n * Scrolls the given scrollable element to the given `to` target.\n *\n * Returns `null` if there's an ongoing scroll that is not cancellable.\n *\n * Note that if `to` is an element or a selector, then it _must_ be a\n * descendant of the scrollable element.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *               If the target coordinates are invalid.\n *\n * @param {} to  If this is an element, then its top-left position is used as\n *               the target coordinates. If it is a string, then it is treated\n *               as a selector for an element using `querySelector`.\n *\n * @return {} `null` if there's an ongoing scroll that is not cancellable,\n * otherwise a {@link ScrollAction}.\n *\n * @category Scrolling\n */\nexport const scrollTo = (\n  to: TargetCoordinates | Element | string,\n  userOptions?: ScrollToOptions,\n): ScrollAction | null => {\n  const options = getOptions(to, userOptions);\n  const scrollable = options._scrollable;\n\n  // cancel current scroll action if any\n  const currentScroll = currentScrollAction.get(scrollable);\n  if (currentScroll) {\n    if (!currentScroll.cancel()) {\n      // current scroll action is not cancellable by us\n      return null;\n    }\n  }\n\n  let isCancelled = false;\n\n  const cancelFn = options._weCanInterrupt\n    ? () => (isCancelled = true)\n    : () => false;\n\n  const scrollEvents = [\"touchmove\", \"wheel\"]; // don't bother with keyboard\n  let preventScrollHandler: EventListener | null = null;\n\n  if (options._userCanInterrupt) {\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(\n        scrollable,\n        eventType,\n        () => {\n          isCancelled = true;\n        },\n        { once: true },\n      );\n    }\n  } else {\n    preventScrollHandler = MH.preventDefault;\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(scrollable, eventType, preventScrollHandler, {\n        passive: false,\n      });\n    }\n  }\n\n  const promise = initiateScroll(options, () => isCancelled);\n\n  const thisScrollAction: ScrollAction = {\n    waitFor: () => promise,\n    cancel: cancelFn,\n  };\n\n  const cleanup = () => {\n    if (currentScrollAction.get(scrollable) === thisScrollAction) {\n      MH.deleteKey(currentScrollAction, scrollable);\n    }\n\n    if (preventScrollHandler) {\n      for (const eventType of scrollEvents) {\n        removeEventListenerFrom(scrollable, eventType, preventScrollHandler, {\n          passive: false,\n        });\n      }\n    }\n  };\n\n  thisScrollAction.waitFor().then(cleanup).catch(cleanup);\n\n  currentScrollAction.set(scrollable, thisScrollAction);\n  return thisScrollAction;\n};\n\n/**\n * Returns true if the given string is a valid scroll direction.\n *\n * @category Validation\n */\nexport const isValidScrollDirection = (\n  direction: string,\n): direction is ScrollDirection => MH.includes(SCROLL_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid scroll\n * directions.\n *\n * @category Validation\n */\nexport const isValidScrollDirectionList = (directions: string | string[]) =>\n  isValidStrList(directions, isValidScrollDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const mapScrollable = (original: Element, actualScrollable: Element) =>\n  mappedScrollables.set(original, actualScrollable);\n\n/**\n * @ignore\n * @internal\n */\nexport const unmapScrollable = (original: Element) =>\n  MH.deleteKey(mappedScrollables, original);\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientWidthNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetWidth -\n      getBorderWidth(element, MC.S_LEFT) -\n      getBorderWidth(element, MC.S_RIGHT)\n    : element[MC.S_CLIENT_WIDTH];\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientHeightNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetHeight -\n      getBorderWidth(element, MC.S_TOP) -\n      getBorderWidth(element, MC.S_BOTTOM)\n    : element[MC.S_CLIENT_HEIGHT];\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainContentElement = (): HTMLElement | null =>\n  mainContentElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainContentElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainContentElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainScrollableElement = (): HTMLElement | null =>\n  mainScrollableElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainScrollableElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainScrollableElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultScrollingElement = () => {\n  const body = MH.getBody();\n  return isScrollable(body) ? body : MH.getDocScrollingElement() || body;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetScrollableElement = (\n  target: ScrollTarget | null | undefined,\n): Element | null => toScrollableOrMain(target, tryGetMainScrollableElement);\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchScrollableElement = async (\n  target: ScrollTarget | null | undefined,\n): Promise<Element> => toScrollableOrMain(target, fetchMainScrollableElement);\n\n// ----------------------------------------\n\ntype ScrollToOptionsInternal = {\n  _target: TargetCoordinates;\n  _offset: CoordinateOffset | null;\n  _altTarget: TargetCoordinates | null;\n  _altOffset: CoordinateOffset | null;\n  _scrollable: Element;\n  _duration: number;\n  _weCanInterrupt: boolean;\n  _userCanInterrupt: boolean;\n};\n\nconst IS_SCROLLABLE_CACHE_TIMEOUT = 1000;\n\nconst isScrollableCache = newXMap<Element, Map<\"x\" | \"y\", boolean>>(() =>\n  MH.newMap(),\n);\n\nconst mappedScrollables = MH.newMap<Element, Element>();\n\nconst currentScrollAction = MH.newMap<Element, ScrollAction>();\n\nconst DIFF_THRESHOLD = 5;\nconst arePositionsDifferent = (start: ScrollPosition, end: ScrollPosition) =>\n  maxAbs(start.top - end.top, start.left - end.left) >= DIFF_THRESHOLD;\n\nconst toScrollableOrMain = <R>(\n  target: ScrollTarget | null | undefined,\n  getMain: () => R,\n): Element | R => {\n  if (MH.isElement(target)) {\n    return mappedScrollables.get(target) || target;\n  }\n\n  if (!target || target === MH.getWindow() || target === MH.getDoc()) {\n    return getMain();\n  }\n\n  throw MH.usageError(\"Unsupported scroll target\");\n};\n\nconst toScrollableOrDefault = (scrollable: Element | undefined): Element =>\n  scrollable ?? getDefaultScrollingElement();\n\nconst getOptions = (\n  to: TargetCoordinates | Element | string,\n  options: ScrollToOptions | undefined,\n): ScrollToOptionsInternal => {\n  const scrollable = toScrollableOrDefault(options?.scrollable);\n  const target = getTargetCoordinates(scrollable, to);\n  const altTarget = options?.altTarget\n    ? getTargetCoordinates(scrollable, options?.altTarget)\n    : null;\n\n  return {\n    _target: target,\n    _offset: options?.offset || null,\n    _altTarget: altTarget,\n    _altOffset: options?.altOffset || null,\n    _scrollable: scrollable,\n    _duration: options?.duration || 0,\n    _weCanInterrupt: options?.weCanInterrupt ?? false,\n    _userCanInterrupt: options?.userCanInterrupt ?? false,\n  };\n};\n\nconst getTargetCoordinates = (\n  scrollable: Element,\n  target: TargetCoordinates | Element | string,\n): TargetCoordinates => {\n  const docScrollingElement = MH.getDocScrollingElement();\n\n  if (MH.isElement(target)) {\n    if (scrollable === target || !scrollable.contains(target)) {\n      throw MH.usageError(\"Target must be a descendant of the scrollable one\");\n    }\n\n    return {\n      top: () =>\n        scrollable[MC.S_SCROLL_TOP] +\n        MH.getBoundingClientRect(target).top -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).top),\n      left: () =>\n        scrollable[MC.S_SCROLL_LEFT] +\n        MH.getBoundingClientRect(target).left -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).left),\n    };\n  }\n\n  if (MH.isString(target)) {\n    const targetEl = MH.docQuerySelector(target);\n    if (!targetEl) {\n      throw MH.usageError(`No match for '${target}'`);\n    }\n\n    return getTargetCoordinates(scrollable, targetEl);\n  }\n\n  if (!MH.isObject(target) || !(\"top\" in target || \"left\" in target)) {\n    throw MH.usageError(\"Invalid coordinates\");\n  }\n\n  return target;\n};\n\nconst getStartEndPosition = async (\n  options: ScrollToOptionsInternal,\n): Promise<{ start: ScrollPosition; end: ScrollPosition }> => {\n  await waitForMeasureTime();\n\n  const applyOffset = (\n    position: ScrollPosition,\n    offset: CoordinateOffset | null,\n  ) => {\n    position.top += offset?.top || 0;\n    position.left += offset?.left || 0;\n  };\n\n  const scrollable = options._scrollable;\n  const start = {\n    top: scrollable[MC.S_SCROLL_TOP],\n    left: scrollable[MC.S_SCROLL_LEFT],\n  };\n\n  let end = getEndPosition(scrollable, start, options._target);\n  applyOffset(end, options._offset);\n\n  if (!arePositionsDifferent(start, end) && options._altTarget) {\n    end = getEndPosition(scrollable, start, options._altTarget);\n    applyOffset(end, options._altOffset);\n  }\n\n  return { start, end };\n};\n\n// must be called in \"measure time\"\nconst getEndPosition = (\n  scrollable: Element,\n  startPosition: ScrollPosition,\n  targetCoordinates: TargetCoordinates,\n): ScrollPosition => {\n  // by default no change in scroll top or left\n  const endPosition = MH.copyObject(startPosition);\n\n  if (!MH.isNullish(targetCoordinates?.top)) {\n    if (MH.isFunction(targetCoordinates.top)) {\n      endPosition.top = targetCoordinates.top(scrollable);\n    } else {\n      endPosition.top = targetCoordinates.top;\n    }\n  }\n\n  if (!MH.isNullish(targetCoordinates?.left)) {\n    if (MH.isFunction(targetCoordinates.left)) {\n      endPosition.left = targetCoordinates.left(scrollable);\n    } else {\n      endPosition.left = targetCoordinates.left;\n    }\n  }\n\n  // Set boundaries\n  const scrollH = scrollable[MC.S_SCROLL_HEIGHT];\n  const scrollW = scrollable[MC.S_SCROLL_WIDTH];\n  const clientH = getClientHeightNow(scrollable);\n  const clientW = getClientWidthNow(scrollable);\n  endPosition.top = MH.min(scrollH - clientH, endPosition.top);\n  endPosition.top = MH.max(0, endPosition.top);\n\n  endPosition.left = MH.min(scrollW - clientW, endPosition.left);\n  endPosition.left = MH.max(0, endPosition.left);\n\n  return endPosition;\n};\n\nconst initiateScroll = async (\n  options: ScrollToOptionsInternal,\n  isCancelled: () => boolean,\n) => {\n  const position = await getStartEndPosition(options);\n  const duration = options._duration;\n  const scrollable = options._scrollable;\n\n  let startTime: number, previousTimeStamp: number;\n  let currentPosition: ScrollPosition = position.start;\n\n  const step = async () => {\n    await waitForMutateTime(); // effectively next animation frame\n    // Element.scrollTo equates to a measurement and needs to run after\n    // painting to avoid forced layout.\n    await waitForMeasureTime();\n    const timeStamp = MH.timeNow();\n\n    if (isCancelled()) {\n      // Reject the promise\n      throw currentPosition;\n    }\n\n    if (!startTime) {\n      // If it's very close to the target, no need to scroll smoothly\n      if (\n        duration === 0 ||\n        !arePositionsDifferent(currentPosition, position.end)\n      ) {\n        MH.elScrollTo(scrollable, position.end);\n        return position.end;\n      }\n\n      startTime = timeStamp;\n    }\n\n    if (startTime !== timeStamp && previousTimeStamp !== timeStamp) {\n      const elapsed = timeStamp - startTime;\n      const progress = easeInOutQuad(MH.min(1, elapsed / duration));\n\n      currentPosition = {\n        top:\n          position.start.top +\n          (position.end.top - position.start.top) * progress,\n        left:\n          position.start.left +\n          (position.end.left - position.start.left) * progress,\n      };\n\n      MH.elScrollTo(scrollable, currentPosition);\n\n      if (progress === 1) {\n        return currentPosition;\n      }\n    }\n\n    previousTimeStamp = timeStamp;\n    return step();\n  };\n\n  return step();\n};\n\nconst isScrollableBodyInQuirks = (element: Element): element is HTMLElement =>\n  element === MH.getBody() && MH.getDocScrollingElement() === null;\n\n// must be called in \"measure time\"\nconst getBorderWidth = (element: Element, side: Offset) =>\n  MH.ceil(MH.parseFloat(getComputedStylePropNow(element, `border-${side}`)));\n\n// ------------------------------\n\nlet mainContentElement: HTMLElement;\nlet mainScrollableElement: HTMLElement;\n\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      const mainScrollableElementSelector =\n        settings.mainScrollableElementSelector;\n\n      const contentElement = await waitForElementOrInteractive(() => {\n        return mainScrollableElementSelector\n          ? MH.docQuerySelector(mainScrollableElementSelector)\n          : MH.getBody(); // default if no selector\n      });\n\n      // defaults\n      mainScrollableElement = getDefaultScrollingElement();\n      mainContentElement = MH.getBody();\n\n      if (!contentElement) {\n        logError(\n          MH.usageError(\n            `No match for '${mainScrollableElementSelector}'. ` +\n              \"Scroll tracking/capturing may not work as intended.\",\n          ),\n        );\n      } else if (!MH.isHTMLElement(contentElement)) {\n        logWarn(\"mainScrollableElementSelector should point to an HTMLElement\");\n      } else if (contentElement !== mainContentElement) {\n        mainScrollableElement = mainContentElement = contentElement;\n      }\n    })();\n  }\n\n  return initPromise;\n};\n\n// Try to find the main scrollable/content elements asap so that tryGetMain*\n// can return them if called before fetchMain*\nif (MH.hasDOM()) {\n  waitForInteractive().then(init);\n}\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  addClasses,\n  addClassesNow,\n  setDataNow,\n  setStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, wrapScrollingContent } from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { camelToKebabCase, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  isScrollable,\n  tryGetMainContentElement,\n  fetchMainContentElement,\n} from \"@lisn/utils/scroll\";\n\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Overlays\n * @interface\n */\nexport type OverlayOptions = {\n  /**\n   * The parent element to insert the overlay into.\n   *\n   * If not given, then:\n   * - if the overlay is to have a `position: fixed`, then `document.body` is used\n   * - otherwise,\n   *   {@link Watchers/ScrollWatcher.ScrollWatcher.fetchMainContentElement | ScrollWatcher.fetchMainContentElement} is\n   *   used\n   */\n  parent?: HTMLElement;\n\n  /**\n   * If set, then it will be assigned as the DOM element ID for the new\n   * overlay.\n   *\n   * Furthermore, the new overlay will be created and will not be saved for\n   * future reuse.\n   *\n   * By default, if `id` is not given, the overlay will be saved, and if\n   * {@link createOverlay} is called again with the same `style`, `data` and\n   * parent, the previous overlay is returned.\n   */\n  id?: string;\n\n  /**\n   * Every entry in this object will be set on the `style` of the new overlay.\n   *\n   * **IMPORTANT:** By default overlays are positioned absolutely, so if you need\n   * another positioning, override this here by setting a `position` key in\n   * `style`. If position is either \"absolute\" (by default or explicitly set) or\n   * \"fixed\", and none of `top` or `bottom` is given, `top: 0` is set; and\n   * similarly, if none of `left` or `right` is given, `left: 0` is set.\n   */\n  style?: Record<string, string>;\n\n  /**\n   * Every entry in this object will be set as a data attribute on the new\n   * overlay.\n   *\n   * Keys can be either kebab-case or camelCase (they will be converted if\n   * needed). Do _not_ include the \"data-\" prefix which will be added\n   * automatically. E.g. both \"foo-bar\" and \"fooBar\" will result in\n   * \"data-foo-bar\" being set.\n   */\n  data?: Record<string, string>;\n};\n\n/**\n * Returns an existing overlay for this specification. If the overlay was just\n * created it may not yet be attached to the DOM.\n *\n * @category Overlays\n */\nexport const getOverlay = (userOptions?: OverlayOptions) => {\n  const options = tryGetOverlayOptions(userOptions);\n  if (!options) {\n    return null;\n  }\n\n  return overlays.get(options._parent)?.get(options._overlayKey) || null;\n};\n\n/**\n * Creates a new overlay, and inserts it into the DOM as soon as\n * {@link waitForMutateTime} resolves, or returns an already existing matching\n * overlay.\n *\n * **Note** that if {@link OverlayOptions.id} is set, a new overlay will\n * _always_ be created.\n *\n * @category Overlays\n */\nexport const createOverlay = async (userOptions?: OverlayOptions) => {\n  const options = await fetchOverlayOptions(userOptions);\n  const canReuse = !options._id;\n\n  if (canReuse) {\n    const existingOverlay = overlays\n      .get(options._parent)\n      ?.get(options._overlayKey);\n\n    if (existingOverlay) {\n      if (!MH.parentOf(existingOverlay)) {\n        // not yet inserted into the DOM, so wait until it is\n        await waitForMutateTime();\n      }\n      return existingOverlay;\n    }\n  }\n\n  // Create a new one\n  const overlay = createOnlyOverlay(options);\n  if (canReuse) {\n    // Save it now before awating, so that concurrent requests to create the\n    // same one use it\n    overlays.sGet(options._parent).set(options._overlayKey, overlay);\n  } else {\n    overlay.id = options._id;\n  }\n\n  const isPercentageHOffset = MH.includes(\n    (options._style.left || \"\") + (options._style.right || \"\"),\n    \"%\",\n  );\n\n  const isPercentageVOffset = MH.includes(\n    (options._style.top || \"\") + (options._style.bottom || \"\"),\n    \"%\",\n  );\n\n  let needsContentWrapping = false;\n  let parentEl = options._parent;\n  if (isPercentageHOffset || isPercentageVOffset) {\n    needsContentWrapping =\n      (isPercentageHOffset && isScrollable(parentEl, { axis: \"x\" })) ||\n      (isPercentageVOffset && isScrollable(parentEl, { axis: \"y\" }));\n  }\n\n  if (needsContentWrapping) {\n    if (settings.contentWrappingAllowed) {\n      parentEl = await wrapScrollingContent(parentEl);\n    } else {\n      logWarn(\n        \"Percentage offset view trigger with scrolling root requires contentWrappingAllowed\",\n      );\n    }\n  }\n\n  if (options._style.position === MC.S_ABSOLUTE) {\n    // Ensure parent has non-static positioning\n    addClasses(parentEl, MH.prefixName(\"overlay-container\"));\n  }\n\n  await moveElement(overlay, { to: parentEl });\n\n  return overlay;\n};\n\n// ----------------------------------------\n\ntype OverlayOptionsInternal = {\n  _parent: HTMLElement;\n  _id: string;\n  _style: Record<string, string>;\n  _data: Record<string, string>;\n  _overlayKey: string;\n};\n\nconst overlays = newXWeakMap<HTMLElement, Map<string, HTMLElement>>(() =>\n  MH.newMap(),\n);\n\nconst tryGetOverlayOptions = (\n  userOptions: OverlayOptions | undefined,\n): OverlayOptionsInternal | null => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = tryGetParent(userOptions?.parent, style.position);\n  if (!parentEl) {\n    return null;\n  }\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst fetchOverlayOptions = async (\n  userOptions: OverlayOptions | undefined,\n): Promise<OverlayOptionsInternal> => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = await fetchParent(userOptions?.parent, style.position);\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst getOverlayKey = (\n  style: Record<string, string>,\n  data: Record<string, string>,\n) => objToStrKey(style) + \"|\" + objToStrKey(data);\n\nconst getCssProperties = (style: Record<string, string> | undefined) => {\n  const finalCssProperties: Record<string, string> = MH.merge(\n    { position: MC.S_ABSOLUTE }, // default\n    style,\n  );\n\n  if (\n    finalCssProperties.position === MC.S_ABSOLUTE ||\n    finalCssProperties.position === MC.S_FIXED\n  ) {\n    if (\n      MH.isEmpty(finalCssProperties.top) &&\n      MH.isEmpty(finalCssProperties.bottom)\n    ) {\n      finalCssProperties.top = \"0px\";\n    }\n\n    if (\n      MH.isEmpty(finalCssProperties.left) &&\n      MH.isEmpty(finalCssProperties.right)\n    ) {\n      finalCssProperties.left = \"0px\";\n    }\n  }\n\n  return finalCssProperties;\n};\n\nconst tryGetParent = (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED ? MH.getBody() : tryGetMainContentElement());\n\nconst fetchParent = async (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED\n    ? await waitForElement(MH.getBody)\n    : await fetchMainContentElement());\n\nconst createOnlyOverlay = (options: OverlayOptionsInternal) => {\n  const overlay = MH.createElement(\"div\");\n\n  addClassesNow(overlay, MH.prefixName(\"overlay\"));\n\n  const data = options._data;\n  for (const attr of MH.keysOf(data)) {\n    setDataNow(overlay, camelToKebabCase(attr), data[attr]);\n  }\n\n  const style = options._style;\n  for (const prop of MH.keysOf(style)) {\n    setStylePropNow(overlay, prop, style[prop]);\n  }\n\n  return overlay;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size } from \"@lisn/globals/types\";\n\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { createOverlay } from \"@lisn/utils/overlays\";\n\n/**\n * Returns the content box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @category Size measurements\n */\nexport const getEntryContentBox = (entry: ResizeObserverEntry): Size => {\n  const size = entry.contentBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  }\n\n  const rect = entry.contentRect;\n  return { [MC.S_WIDTH]: rect[MC.S_WIDTH], [MC.S_HEIGHT]: rect[MC.S_HEIGHT] };\n};\n\n/**\n * Returns the border box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @param {} fallbackToContent If the entry does not contain border box\n *                             measurements (depending on browser), then fall\n *                             back to using the content box size. Otherwise\n *                             (by default) will return `NaN` values for width\n *                             and height.\n *\n * @category Size measurements\n */\nexport const getEntryBorderBox = (\n  entry: ResizeObserverEntry,\n  fallbackToContent = false,\n): Size => {\n  const size = entry.borderBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  } else if (fallbackToContent) {\n    return getEntryContentBox(entry);\n  }\n\n  return { [MC.S_WIDTH]: NaN, [MC.S_HEIGHT]: NaN };\n};\n\n/**\n * Returns true if the given string is a valid box type.\n *\n * @category Validation\n */\nexport const isValidBox = (box: string): box is Box =>\n  MH.includes(ALL_BOXES, box);\n\n/**\n * Returns true if the given string is a valid dimension.\n *\n * @category Validation\n */\nexport const isValidDimension = (dimension: string): dimension is Dimension =>\n  MH.includes(ALL_DIMENSIONS, dimension);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetViewportOverlay = (): HTMLElement | null =>\n  viewportOverlay ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via SizeWatcher\n */\nexport const fetchViewportOverlay = async (): Promise<HTMLElement> => {\n  await init();\n\n  return viewportOverlay;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchViewportSize = async (realtime = false) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const root = MH.hasDOM()\n    ? (MH.getDocScrollingElement() ?? MH.getBody())\n    : null;\n\n  return {\n    [MC.S_WIDTH]: root?.clientWidth || 0,\n    [MC.S_HEIGHT]: root?.clientHeight || 0,\n  };\n};\n\n// ----------------------------------------\n\nconst S_INLINE_SIZE = \"inlineSize\";\nconst S_BLOCK_SIZE = \"blockSize\";\n\nconst ALL_BOXES: Box[] = [\"content\", \"border\"] as const;\nconst ALL_DIMENSIONS: Dimension[] = [MC.S_WIDTH, MC.S_HEIGHT] as const;\n\nconst getSizeFromInlineBlock = (\n  size: ResizeObserverSize | ReadonlyArray<ResizeObserverSize>,\n): Size => {\n  /* istanbul ignore else */\n  if (MH.isIterableObject(size)) {\n    return {\n      [MC.S_WIDTH]: size[0][S_INLINE_SIZE],\n      [MC.S_HEIGHT]: size[0][S_BLOCK_SIZE],\n    };\n  }\n  return {\n    // in some browsers inlineSize and blockSize are scalars and nor Arrays\n    [MC.S_WIDTH]: (size as { [S_INLINE_SIZE]: number })[S_INLINE_SIZE],\n    [MC.S_HEIGHT]: (size as { [S_BLOCK_SIZE]: number })[S_BLOCK_SIZE],\n  };\n};\n\n// ------------------------------\n\nlet viewportOverlay: HTMLElement;\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      viewportOverlay = await createOverlay({\n        id: MH.prefixName(\"vp-ovrl\"),\n        style: {\n          position: \"fixed\",\n          [MC.S_WIDTH]: \"100vw\",\n          [MC.S_HEIGHT]: \"100vh\",\n        },\n      });\n    })();\n  }\n\n  return initPromise;\n};\n","/**\n * @module Modules/XResizeObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logWarn, logError } from \"@lisn/utils/log\";\n\nimport debug from \"@lisn/debug/debug\";\n\nexport type XResizeObserverCallback = (\n  entries: ResizeObserverEntry[],\n  observer: XResizeObserver,\n) => void;\n\n/**\n * {@link XResizeObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}\n * - observes both border box and content box size changes\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n * - can debounce the callback\n */\nexport class XResizeObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe | ResizeObserver:observe} except it accepts multiple targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent resize.\n   *\n   * If the target is already being observed, nothing is done.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/unobserve | ResizeObserver:unobserve} except it accepts multiple targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/disconnect | ResizeObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * @param {} debounceWindow Debounce the handler so that it's called at most\n   *                          every `debounceWindow` ms.\n   */\n  constructor(callback: XResizeObserverCallback, debounceWindow?: number) {\n    const logger = debug ? new debug.Logger({ name: \"XResizeObserver\" }) : null;\n\n    // Keep the latest ResizeObserverEntry for each target during the\n    // debounceWindow. Short-lived, so ok to use a Map.\n    const buffer = MH.newMap<Element, ResizeObserverEntry>();\n\n    // Since internally we have two observers, one for border box, one for\n    // content box, we will get called initially twice for a target. So we keep\n    // a counter of 1 or 2 for how many more calls to ignore.\n    const targetsToSkip = MH.newWeakMap<Element, 1 | 2>();\n\n    let observedTargets = MH.newWeakSet<Element>();\n\n    debounceWindow = debounceWindow || 0;\n\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      // Override entries for previous targets, but keep entries whose targets\n      // were not resized in this round\n      for (const entry of entries) {\n        const target = MH.targetOf(entry);\n        const skipNum = targetsToSkip.get(target);\n        if (skipNum !== undefined) {\n          if (skipNum === 2) {\n            // expect one more call\n            targetsToSkip.set(target, 1);\n          } else {\n            // done\n            /* istanbul ignore next */\n            if (skipNum !== 1) {\n              logError(MH.bugError(`# targetsToSkip is ${skipNum}`));\n            }\n            MH.deleteKey(targetsToSkip, target);\n          }\n\n          continue;\n        }\n\n        buffer.set(target, entry);\n      }\n\n      debug: logger?.debug9(\n        `Got ${entries.length} new entries. ` +\n          `Have ${buffer.size} unique-target entries`,\n        entries,\n      );\n\n      if (!timer && MH.sizeOf(buffer)) {\n        timer = MH.setTimer(() => {\n          if (MH.sizeOf(buffer)) {\n            callback(MH.arrayFrom(buffer.values()), this);\n            buffer.clear();\n          }\n\n          timer = null;\n        }, debounceWindow);\n      }\n    };\n\n    const borderObserver = MH.newResizeObserver(resizeHandler);\n    const contentObserver = MH.newResizeObserver(resizeHandler);\n    if (!borderObserver || !contentObserver) {\n      logWarn(\n        \"This browser does not support ResizeObserver. Some features won't work.\",\n      );\n    }\n\n    const observeTarget = (target: Element) => {\n      observedTargets.add(target);\n      borderObserver?.observe(target, { box: \"border-box\" });\n      contentObserver?.observe(target);\n    };\n\n    // --------------------\n\n    this.observe = (...targets) => {\n      debug: logger?.debug10(\"Observing targets\", targets);\n\n      for (const target of targets) {\n        observeTarget(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      debug: logger?.debug10(\"Observing targets (later)\", targets);\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.set(target, 2);\n        observeTarget(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      debug: logger?.debug10(\"Unobserving targets\", targets);\n\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        borderObserver?.unobserve(target);\n        contentObserver?.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      debug: logger?.debug10(\"Disconnecting\");\n      observedTargets = MH.newWeakSet();\n      borderObserver?.disconnect();\n      contentObserver?.disconnect();\n    };\n  }\n}\n","/**\n * @module Watchers/SizeWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size, SizeTarget } from \"@lisn/globals/types\";\n\nimport { setNumericStyleProps } from \"@lisn/utils/css-alter\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum } from \"@lisn/utils/math\";\nimport {\n  isValidBox,\n  isValidDimension,\n  getEntryBorderBox,\n  getEntryContentBox,\n  tryGetViewportOverlay,\n  fetchViewportOverlay,\n} from \"@lisn/utils/size\";\nimport { objToStrKey } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XResizeObserver } from \"@lisn/modules/x-resize-observer\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link SizeWatcher} monitors the size of a given target. It's built on top\n * of {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}.\n *\n * It manages registered callbacks globally and reuses ResizeObservers.\n *\n * Each instance of SizeWatcher manages up to two ResizeObservers: one\n * for content-box size changes and one for border-box size changes.\n */\nexport class SizeWatcher {\n  /**\n   * Call the given handler whenever the target's size changes.\n   *\n   * Unless {@link OnResizeOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest size data.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly onResize: (\n    handler: OnResizeHandler,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offResize: (handler: OnResizeHandler, target?: SizeTarget) => void;\n\n  /**\n   * This is the same as {@link onResize} except that if `handler` is not given,\n   * then it defaults to an  handler that updates a set of CSS variables on the\n   * target's style:\n   *\n   * - If {@link OnResizeOptions.target | options.target} is not given, or is\n   *   `window`, the following CSS variables are set on the root (`html`)\n   *   element and represent the viewport size:\n   *   - `--lisn-js--window-border-width`\n   *   - `--lisn-js--window-border-height`\n   *   - `--lisn-js--window-content-width`\n   *   - `--lisn-js--window-content-height`\n   *\n   * - Otherwise, the following variables are set on the target itself and\n   *   represent its visible size:\n   *   - `--lisn-js--border-width`\n   *   - `--lisn-js--border-height`\n   *   - `--lisn-js--content-width`\n   *   - `--lisn-js--content-height`\n   *\n   * If `target` is `document`, then it will use `document.documentElement`.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly trackSize: (\n    handler?: OnResizeHandler | null,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackSize}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackSize: (\n    handler?: OnResizeHandler | null,\n    target?: SizeTarget,\n  ) => void;\n\n  /**\n   * Get the size of the given target. It will get the size from a\n   * ResizeObserverEntry and so it's always delayed by one frame at least.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly fetchCurrentSize: (target?: SizeTarget) => Promise<SizeData>;\n\n  /**\n   * Creates a new instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: SizeWatcherConfig = {}) {\n    return new SizeWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: SizeWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new SizeWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: SizeWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"SizeWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"SizeWatcher\", logAtCreation: config })\n      : null;\n\n    const allSizeData = MH.newWeakMap<Element, SizeData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnResizeHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    // Don't debounce the observer, only callbacks.\n    const xObserver = new XResizeObserver(resizeHandler);\n\n    // ----------\n\n    const fetchCurrentSize = async (\n      target: SizeTarget | undefined,\n    ): Promise<SizeData> => {\n      const element = await fetchElement(target);\n      const sizeData = allSizeData.get(element);\n      if (sizeData) {\n        return MH.copyObject(sizeData);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp ResizeObserver\n        const observer = MH.newResizeObserver((entries) => {\n          const sizeData = getSizeData(entries[0]);\n          observer?.disconnect();\n          resolve(sizeData); // no need to copy or save it\n        });\n\n        if (observer) {\n          observer.observe(element);\n        } else {\n          // Warning would have already been logged by XResizeObserver\n          resolve({\n            border: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n            content: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n          });\n        }\n      });\n    };\n\n    // ----------\n\n    const fetchOptions = async (\n      options: OnResizeOptions,\n    ): Promise<OnResizeOptionsInternal> => {\n      const box = options.box ?? null;\n      if (box && !isValidBox(box)) {\n        throw MH.usageError(`Unknown box type: '${box}'`);\n      }\n\n      const dimension = options.dimension ?? null;\n      if (dimension && !isValidDimension(dimension)) {\n        throw MH.usageError(`Unknown dimension: '${dimension}'`);\n      }\n\n      return {\n        _element: await fetchElement(MH.targetOf(options)),\n        _box: box,\n        _dimension: dimension,\n        // If threshold is 0, internally treat as 1 (pixel)\n        _threshold:\n          toNonNegNum(options.threshold, config._resizeThreshold) || 1,\n        _debounceWindow:\n          options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n      };\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = { _callback: callback, _options: options };\n      allCallbacks.sGet(element).set(handler, entry);\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnResize = async (\n      handler: OnResizeHandler,\n      userOptions: OnResizeOptions | undefined,\n    ) => {\n      const options = await fetchOptions(userOptions || {});\n      const element = options._element;\n\n      // Don't await for the size data before creating the callback so that\n      // setupOnResize and removeOnResize have the same \"timing\" and therefore\n      // calling onResize and offResize immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options);\n      const callback = entry._callback;\n      const sizeData = await fetchCurrentSize(element);\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = sizeData;\n      allSizeData.set(element, sizeData);\n\n      // Always use observeLater. This is because the initial call to callback\n      // shouldn't be debounced, and so we call it manually here, regardless if\n      // it's a new target or not. Therefore we don't want the observer to also\n      // call it in case it _is_ a new target.\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, sizeData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, sizeData);\n      }\n    };\n\n    // ----------\n\n    const removeOnResize = async (\n      handler: OnResizeHandler,\n      target: SizeTarget | undefined,\n    ) => {\n      const options = await fetchOptions({ target });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setSizeCssProps) {\n          // delete the properties\n          setSizeCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ) => {\n      const element = options._element;\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n        xObserver.unobserve(element);\n        MH.deleteKey(allSizeData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = (entry: ResizeObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      const latestData = getSizeData(entry);\n      allSizeData.set(element, latestData);\n\n      debug: logger?.debug9(\"New size data\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        const thresholdsExceeded = hasExceededThreshold(\n          entry._options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\"Threshold not exceeded\");\n          continue;\n        }\n\n        entry._data = latestData;\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentSize = fetchCurrentSize;\n\n    // ----------\n\n    this.trackSize = async (handler?, options?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      return setupOnResize(handler, options);\n    };\n\n    // ----------\n\n    this.noTrackSize = (handler?, target?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      removeOnResize(handler, target); // no need to await\n    };\n\n    // ----------\n\n    this.onResize = setupOnResize;\n\n    // ----------\n\n    this.offResize = (handler, target?) => {\n      removeOnResize(handler, target); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type SizeWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnResizeOptions.debounceWindow | debounceWindow} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnResizeOptions.threshold | threshold} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 50\n   */\n  resizeThreshold?: number;\n};\n\n/**\n * @interface\n */\nexport type OnResizeOptions = {\n  /**\n   * If it is not given, or is `null` or `window`, then it will track the size\n   * of the viewport (akin to `clientHeight` on `documentElement`).\n   *\n   * If it is `document`, then it will use `document.documentElement`.\n   *\n   * Other values of target must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  target?: SizeTarget;\n\n  /**\n   * Specifies whether to listen for changes in content box size or border box\n   * size.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  box?: Box;\n\n  /**\n   * Specifies whether to listen for changes in width or height.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  dimension?: Dimension;\n\n  /**\n   * If non-0, the handler will only be called when the target's size in the\n   * observed {@link OnResizeOptions.dimension} and {@link OnResizeOptions.box}\n   * type has changed at least `threshold` pixels since the last time the\n   * handler was called.\n   *\n   * Special case when `threshold` is 0 and at least one of\n   * {@link OnResizeOptions.dimension} or {@link OnResizeOptions.box} is given:\n   * if there's a resize event but the size in the observed dimensions/box\n   * types has not changed, the callback is _not_ called.\n   *\n   * @defaultValue {@link SizeWatcherConfig.resizeThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * @defaultValue {@link SizeWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * The handler is invoked with three arguments:\n *\n * - the element that has been resized: if the target you requested was the\n *   viewport, then this will be a fixed positioned overlay that tracks the\n *   size of the viewport\n * - the {@link SizeData} for the element\n */\nexport type OnResizeHandlerArgs = [Element, SizeData];\nexport type OnResizeCallback = Callback<OnResizeHandlerArgs>;\nexport type OnResizeHandler =\n  | CallbackHandler<OnResizeHandlerArgs>\n  | OnResizeCallback;\n\nexport type SizeData = Record<Box, Size>;\n\n// ----------------------------------------\n\ntype SizeWatcherConfigInternal = {\n  _debounceWindow: number;\n  _resizeThreshold: number;\n};\n\ntype OnResizeOptionsInternal = {\n  _element: Element;\n  _box: Box | null;\n  _dimension: Dimension | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnResizeCallback;\n  _options: OnResizeOptionsInternal;\n  _data?: SizeData;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, SizeWatcher>();\n\nconst getConfig = (config: SizeWatcherConfig): SizeWatcherConfigInternal => {\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _resizeThreshold: toNonNegNum(config.resizeThreshold, 50) || 1,\n  };\n};\n\n// --------------------\n\nconst hasExceededThreshold = (\n  options: OnResizeOptionsInternal,\n  latestData: SizeData,\n  lastThresholdData: SizeData | undefined,\n): boolean => {\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  let box: Box, dim: Dimension;\n  for (box in latestData) {\n    if (options._box && options._box !== box) {\n      continue;\n    }\n\n    for (dim in latestData[box]) {\n      if (options._dimension && options._dimension !== dim) {\n        continue;\n      }\n\n      const diff = MH.abs(latestData[box][dim] - lastThresholdData[box][dim]);\n      if (diff >= options._threshold) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nconst getSizeData = (entry: ResizeObserverEntry): SizeData => {\n  const borderBox = getEntryBorderBox(entry, true);\n  const contentBox = getEntryContentBox(entry);\n\n  return {\n    border: borderBox,\n    content: contentBox,\n  };\n};\n\nconst setSizeCssProps = (\n  element: Element,\n  sizeData: SizeData | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetViewportOverlay()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"window-\";\n  }\n\n  const props = {\n    borderWidth: sizeData?.border[MC.S_WIDTH],\n    borderHeight: sizeData?.border[MC.S_HEIGHT],\n    contentWidth: sizeData?.content[MC.S_WIDTH],\n    contentHeight: sizeData?.content[MC.S_HEIGHT],\n  };\n  setNumericStyleProps(element, props, { _prefix: prefix }); // don't await here\n};\n\nconst fetchElement = async (\n  target: SizeTarget | undefined,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  }\n\n  if (!target || target === MH.getWindow()) {\n    return fetchViewportOverlay();\n  }\n\n  if (target === MH.getDoc()) {\n    return MH.getDocElement();\n  }\n\n  throw MH.usageError(\"Unsupported resize target\");\n};\n\nconst invokeCallback = (\n  callback: OnResizeCallback,\n  element: Element,\n  sizeData: SizeData,\n) => callback.invoke(element, MH.copyObject(sizeData)).catch(logError);\n","/**\n * @module Watchers/LayoutWatcher\n */\n\n// NOTES FOR DEVELOPERS\n//\n// For each layout (device or aspect ratio), we create an overlay that has a\n// a width that corresponds to the layout:\n//  - for device layouts, it's a fixed width in pixels, equal to the minimum\n//    width of the device\n//  - for aspect ratio layouts, the overlay has a width that's relative to\n//    the root's height, equal to the minimum width of the aspect ratio\n//\n// Then we observe each overlay with an IntersectionObserver whose root\n// is this Watcher's root and whose root margin is -100% from the left (i.e.\n// right-most edge of the root).\n//\n// If the root is null, i.e. the viewport, the overlays will have a \"fixed\"\n// position and be inserted in document.body. Otherwise, they'll be inserted\n// in the root element with an \"absolute\" position. The root element, if not\n// body must be positioned. It gets a default position of \"relative\" through\n// the class `.lisn-overlay-container`, which Overlays ensures it gets.\n//\n// If using custom root we track its size through SizeWatcher as the\n// aspectRatio overlays are relative to the height, and we can't rely on CSS\n// alone as the root may not have a fixed height through CSS.\n//\n// Whenever any overlay intersects the root, this means that the viewport\n// width is now equal to or narrower than the overlay.\n//\n// ~~~~ The current device or aspect ratio corresponds to the _widest_\n// ~~~~ overlay that does not intersect.\n//\n// For example:\n//\n// | mobile\n// ========| mobile-wide\n// ======================| tablet\n// =========================================| desktop\n//\n// _________________________________| viewport width\n//\n// Here, mobile, mobile-wide and tablet overlays are _not_ intersecting, only\n// desktop intersects. The device layout is therefore tablet.\n//\n// Therefore:\n// - have the layout bit spaces ordered from narrowest layout at lowest bit\n//   to widest layout at hightest bit\n// - keep a running bitmask of which overlays are not intersecting and update\n//   it each time there is an IntersectionObserverEntry.\n// - get the highest device or aspect ratio bit in that bitmask to find out\n//   the widest non-intersecting overlay\n//\n// For simplicity we create overlays also for layouts that have a 0-width.\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  Layout,\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport {\n  getLayoutBitmask,\n  NUM_LAYOUTS,\n  ORDERED_DEVICES,\n  ORDERED_ASPECTR,\n} from \"@lisn/utils/layout\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { omitKeys, copyExistingKeys } from \"@lisn/utils/misc\";\nimport { createOverlay } from \"@lisn/utils/overlays\";\nimport { objToStrKey } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link LayoutWatcher} listens for changes in either the width or aspect\n * ratio of the viewport or the given {@link LayoutWatcherConfig.root | root}.\n *\n * It does not track resize events; rather it's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class LayoutWatcher {\n  /**\n   * Call the given handler whenever the layout changes.\n   *\n   * Unless {@link OnLayoutOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current layout.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times, even if\n   * the options differ. If the handler has already been added, it is removed\n   * and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onLayout: (\n    handler: OnLayoutHandler,\n    options?: OnLayoutOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offLayout: (handler: OnLayoutHandler) => void;\n\n  /**\n   * Get the current screen layout.\n   */\n  readonly fetchCurrentLayout: () => Promise<LayoutData>;\n\n  /**\n   * Creates a new instance of LayoutWatcher with the given\n   * {@link LayoutWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: LayoutWatcherConfig = {}) {\n    return new LayoutWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of LayoutWatcher with the given\n   * {@link LayoutWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: LayoutWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new LayoutWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: LayoutWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"LayoutWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"LayoutWatcher\", logAtCreation: config })\n      : null;\n    let nonIntersectingBitmask = 0;\n    let currentLayoutData: LayoutData = {\n      device: null,\n      aspectRatio: null,\n    };\n\n    const allCallbacks = MH.newMap<\n      OnLayoutHandler,\n      {\n        _callback: OnLayoutCallback;\n        _layoutBitmask: number;\n      }\n    >();\n\n    // ----------\n\n    const fetchCurrentLayout = async (): Promise<LayoutData> => {\n      await readyPromise;\n\n      return MH.copyObject(currentLayoutData);\n    };\n\n    // ----------\n\n    const setupOverlays = async () => {\n      const { root, overlays } = await createOverlays(\n        config._root,\n        config._deviceBreakpoints,\n        config._aspectRatioBreakpoints,\n      );\n\n      return MH.newPromise<void>((resolve) => {\n        let isReady = false;\n\n        const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n          const numEntries = MH.lengthOf(entries);\n          debug: logger?.debug9(`Got ${numEntries} new entries`, entries);\n\n          if (!isReady) {\n            /* istanbul ignore next */ // shouldn't happen\n            if (numEntries < NUM_LAYOUTS) {\n              logWarn(\n                MH.bugError(\n                  `Got IntersectionObserver ${numEntries}, ` +\n                    `expected >= ${NUM_LAYOUTS}`,\n                ),\n              );\n            }\n          }\n\n          for (const entry of entries) {\n            nonIntersectingBitmask = getNonIntersecting(\n              nonIntersectingBitmask,\n              entry,\n            );\n          }\n\n          // If this is the initial call from IntersectionObserver, skip callbacks.\n          // Those that have skipInitial: false would be called elsewhere, by\n          // setupOnLayout\n          processLayoutChange(!isReady);\n          isReady = true;\n          resolve(); // ready after IntersectionObserver has called us the 1st time\n        };\n\n        // ----------\n\n        const observeOptions = {\n          root,\n          rootMargin: \"5px 0% 5px -100%\",\n        };\n\n        const observer = MH.newIntersectionObserver(\n          intersectionHandler,\n          observeOptions,\n        );\n\n        for (const triggerOverlay of overlays) {\n          observer.observe(triggerOverlay);\n        }\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnLayoutHandler,\n      layoutBitmask: number,\n    ): OnLayoutCallback => {\n      MH.remove(allCallbacks.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", layoutBitmask);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler);\n      });\n\n      allCallbacks.set(handler, {\n        _callback: callback,\n        _layoutBitmask: layoutBitmask,\n      });\n      return callback;\n    };\n\n    const setupOnLayout = async (\n      handler: OnLayoutHandler,\n      options: OnLayoutOptions | undefined,\n    ) => {\n      const layoutBitmask = getLayoutBitmask(options);\n      const callback = createCallback(handler, layoutBitmask);\n\n      if (options?.skipInitial) {\n        return;\n      }\n\n      const layoutData = await fetchCurrentLayout();\n\n      if (\n        !callback.isRemoved() &&\n        changeMatches(layoutBitmask, layoutData, null)\n      ) {\n        debug: logger?.debug5(\"Calling initially with\", layoutData);\n        await invokeCallback(callback, layoutData);\n      }\n    };\n\n    const deleteHandler = (handler: OnLayoutHandler) => {\n      MH.deleteKey(allCallbacks, handler);\n      // no need to unobserve the overlays\n    };\n\n    const processLayoutChange = (skipCallbacks: boolean) => {\n      const deviceBit = MH.floor(\n        MH.log2(nonIntersectingBitmask & ORDERED_DEVICES.bitmask),\n      );\n\n      const aspectRatioBit = MH.floor(\n        MH.log2(nonIntersectingBitmask & ORDERED_ASPECTR.bitmask),\n      );\n\n      const layoutData: LayoutData = { device: null, aspectRatio: null };\n\n      // -Infinity means all of the overlays are intersecting, which would only\n      // happen if the narrowest overlay is not actually 0-width (which is not the\n      // case by default and against the recommended settings).\n      if (deviceBit !== -MC.INFINITY) {\n        layoutData.device = ORDERED_DEVICES.nameOf(1 << deviceBit);\n      }\n      if (aspectRatioBit !== -MC.INFINITY) {\n        layoutData.aspectRatio = ORDERED_ASPECTR.nameOf(1 << aspectRatioBit);\n      }\n\n      debug: logger?.debug8(\"New layout\", layoutData);\n\n      if (!skipCallbacks) {\n        for (const entry of allCallbacks.values()) {\n          const layoutBitmask = entry._layoutBitmask;\n          if (!changeMatches(layoutBitmask, layoutData, currentLayoutData)) {\n            debug: logger?.debug9(\n              `Layout change does not match bitmask ${layoutBitmask}`,\n            );\n            continue;\n          }\n\n          invokeCallback(entry._callback, layoutData);\n        }\n      }\n\n      currentLayoutData = layoutData;\n    };\n\n    const readyPromise = setupOverlays(); // no need to await\n\n    // ----------\n\n    this.fetchCurrentLayout = fetchCurrentLayout;\n\n    // ----------\n\n    this.onLayout = setupOnLayout;\n\n    // ----------\n\n    this.offLayout = (handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type LayoutWatcherConfig = {\n  /**\n   * The root element whose layout to watch. If not given or `null`, then the\n   * viewport layout is watched.\n   *\n   * @defaultValue null\n   */\n  root?: HTMLElement | null;\n\n  /**\n   * Use custom device breakpoints. Only known device names ({@link Device})\n   * are supported. If any are missing from the given dictionary, the value\n   * from {@link settings.deviceBreakpoints} is used.\n   *\n   * @defaultValue {@link settings.deviceBreakpoints}\n   */\n  deviceBreakpoints?: typeof settings.deviceBreakpoints;\n\n  /**\n   * Use custom aspect ratio breakpoints. Only known aspect ratio names\n   * ({@link AspectRatio}) are supported. If any are missing from the given\n   * dictionary, the value from {@link settings.aspectRatioBreakpoints} is\n   * used.\n   *\n   * @defaultValue {@link settings.aspectRatioBreakpoints}\n   */\n  aspectRatioBreakpoints?: typeof settings.aspectRatioBreakpoints;\n};\n\n/**\n * @interface\n */\nexport type OnLayoutOptions = {\n  /**\n   * Specifies a list of {@link Device}s to target for.\n   *\n   * The handler will only be called if there is a change of device to a device\n   * matching the specification.\n   *\n   * It can be:\n   * - \"min <Device>\": devices at least as wide as `<Device>`\n   * - \"max <Device>\": devices at most as wide as `<Device>`\n   * - \"<DeviceMin> to <DeviceMax>\": devices at least as wide as `<DeviceMin>`\n   *                                 and at most as wide as `<DeviceMax>`\n   * - a comma-separated list of device names\n   * - an array of device names\n   *\n   * **NOTE**\n   *\n   * If only one of {@link devices} or {@link aspectRatios} is specified, the\n   * handler will only be called for matching changes of device or aspect ratio\n   * respectively.\n   *\n   * If neither is specified, the handler will be called for any change of layout\n   * (device or aspect ratio).\n   *\n   * Also note that an empty array is treated the same as not given, or `null`.\n   *\n   * @defaultValue undefined\n   */\n  devices?: DeviceSpec | Device[];\n\n  /**\n   * Specifies a list of {@link AspectRatio}s to target for.\n   *\n   * The handler will only be called if there is a change of aspect ratio to\n   * an aspect ratios matching the specification.\n   *\n   * It can be:\n   * - \"min <AspectRatio>\": aspect ratios at least as wide as `<AspectRatio>`\n   * - \"max <AspectRatio>\": aspect ratios at most as wide as `<AspectRatio>`\n   * - \"<AspectRatioMin> to <AspectRatioMax>\": aspect ratios at least as wide\n   *                        as `<AspectRatioMin>` and at most as wide as\n   *                        `<AspectRatioMax>`\n   * - a comma-separated list of aspect ratio names\n   * - an array of aspect ratio names\n   *\n   * **NOTE**\n   *\n   * If only one of {@link devices} or {@link aspectRatios} is specified, the\n   * handler will only be called for matching changes of device or aspect ratio\n   * respectively.\n   *\n   * If neither is specified, the handler will be called for any change of layout\n   * (device or aspect ratio).\n   *\n   * @defaultValue undefined\n   */\n  aspectRatios?: AspectRatioSpec | AspectRatio[];\n\n  /**\n   * Do not call the handler until there's a future change of layout.\n   *\n   * By default, we call the handler (almost) immediately with the current\n   * layout data if it matches the given {@link devices} and {@link aspectRatios}.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with one argument:\n *\n * - the current {@link LayoutData}\n */\nexport type OnLayoutHandlerArgs = [LayoutData];\nexport type OnLayoutCallback = Callback<OnLayoutHandlerArgs>;\nexport type OnLayoutHandler =\n  | CallbackHandler<OnLayoutHandlerArgs>\n  | OnLayoutCallback;\n\n/**\n * Note that {@link device} or {@link aspectRatio} would only be null if the\n * viewport is narrower than the narrowest device/aspect ratio. This would only\n * happen if the narrowest device/aspect ratio is _not_ 0-width (which is not\n * the case with the default breakpoints and is against the recommendation for\n * setting breakpoints.\n */\nexport type LayoutData = {\n  device: Device | null;\n  aspectRatio: AspectRatio | null;\n};\n\n// ----------------------------------------\n\ntype LayoutWatcherConfigInternal = {\n  _root: HTMLElement | null;\n  _deviceBreakpoints: typeof settings.deviceBreakpoints;\n  _aspectRatioBreakpoints: typeof settings.aspectRatioBreakpoints;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<HTMLElement | null, Map<string, LayoutWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst VAR_BORDER_HEIGHT = MH.prefixCssJsVar(\"border-height\");\nconst PREFIX_DEVICE = MH.prefixName(\"device\");\nconst PREFIX_ASPECTR = MH.prefixName(\"aspect-ratio\");\n\nconst getConfig = (\n  config: LayoutWatcherConfig | undefined,\n): LayoutWatcherConfigInternal => {\n  const deviceBreakpoints = MH.copyObject(settings.deviceBreakpoints);\n  if (config?.deviceBreakpoints) {\n    copyExistingKeys(config.deviceBreakpoints, deviceBreakpoints);\n  }\n\n  const aspectRatioBreakpoints = MH.copyObject(settings.aspectRatioBreakpoints);\n\n  if (config?.aspectRatioBreakpoints) {\n    copyExistingKeys(config.aspectRatioBreakpoints, aspectRatioBreakpoints);\n  }\n\n  return {\n    _root: config?.root || null,\n    _deviceBreakpoints: deviceBreakpoints,\n    _aspectRatioBreakpoints: aspectRatioBreakpoints,\n  };\n};\n\n// ----------------------------------------\n\nconst createOverlays = async (\n  root: HTMLElement | null,\n  deviceBreakpoints: typeof settings.deviceBreakpoints,\n  aspectRatioBreakpoints: typeof settings.aspectRatioBreakpoints,\n) => {\n  const overlayPromises = [];\n\n  let overlayParent: HTMLElement;\n  if (root) {\n    overlayParent = root;\n  } else {\n    // Since modals remove the scrollbar on the body when active, the width of\n    // the body changes upon open/close of a modal, which would create\n    // glitching if it happens near a device breakpoint. So if the root is the\n    // viewport, we create a fixed positioned container to hold the overlays\n    // and set its width to be 100vw and use that as the root of\n    overlayParent = await createOverlay({\n      style: {\n        position: \"fixed\",\n        [MC.S_WIDTH]: \"100vw\",\n      },\n    });\n  }\n\n  let device: Device;\n  for (device in deviceBreakpoints) {\n    overlayPromises.push(\n      createOverlay({\n        parent: overlayParent,\n        style: {\n          position: \"absolute\",\n          [MC.S_WIDTH]: deviceBreakpoints[device] + \"px\",\n        },\n        data: {\n          [PREFIX_DEVICE]: device,\n        },\n      }),\n    );\n  }\n\n  const parentHeightCss = root ? `var(${VAR_BORDER_HEIGHT}, 0) * 1px` : \"100vh\";\n  if (root) {\n    SizeWatcher.reuse().trackSize(null, { target: root });\n  }\n\n  let aspectRatio: AspectRatio;\n  for (aspectRatio in aspectRatioBreakpoints) {\n    overlayPromises.push(\n      createOverlay({\n        parent: overlayParent,\n        style: {\n          position: \"absolute\",\n          [MC.S_WIDTH]:\n            `calc(${aspectRatioBreakpoints[aspectRatio]} ` +\n            `* ${parentHeightCss})`,\n        },\n        data: {\n          [PREFIX_ASPECTR]: aspectRatio,\n        },\n      }),\n    );\n  }\n\n  const overlays = await MH.promiseAll(overlayPromises);\n  return { root: overlayParent, overlays };\n};\n\nconst getOverlayLayout = (overlay: HTMLElement): Layout | null => {\n  const layout =\n    getData(overlay, PREFIX_DEVICE) || getData(overlay, PREFIX_ASPECTR);\n  /* istanbul ignore else */\n  if (layout && (ORDERED_DEVICES.has(layout) || ORDERED_ASPECTR.has(layout))) {\n    return layout;\n  } else {\n    // shouldn't happen\n    logError(MH.bugError(\"No device or aspectRatio data attribute\"));\n    return null;\n  }\n};\n\nconst changeMatches = (\n  layoutBitmask: number,\n  thisLayoutData: LayoutData,\n  prevLayoutData: LayoutData | undefined | null,\n): boolean => {\n  // True if the callback is interested in a change of device and there's a\n  // change of device and the new device is one of the ones it's interested in\n  // (or it's null, i.e. device is undefined).\n  // And the same for aspect ratios.\n\n  if (\n    prevLayoutData?.device !== thisLayoutData.device &&\n    (!thisLayoutData.device ||\n      ORDERED_DEVICES.bit[thisLayoutData.device] & layoutBitmask)\n  ) {\n    return true;\n  }\n\n  if (\n    prevLayoutData?.aspectRatio !== thisLayoutData.aspectRatio &&\n    (!thisLayoutData.aspectRatio ||\n      ORDERED_ASPECTR.bit[thisLayoutData.aspectRatio] & layoutBitmask)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nconst getNonIntersecting = (\n  nonIntersectingBitmask: number, // current\n  entry: IntersectionObserverEntry,\n): number => {\n  const target = MH.targetOf(entry);\n  /* istanbul ignore next */ // shouldn't happen\n  if (!MH.isHTMLElement(target)) {\n    logError(\n      MH.bugError(\n        `IntersectionObserver called us with '${MH.typeOrClassOf(target)}'`,\n      ),\n    );\n    return nonIntersectingBitmask;\n  }\n\n  const layout = getOverlayLayout(target);\n  let bit = 0;\n  if (!layout) {\n    // error already logged by getOverlayLayout\n  } else if (ORDERED_DEVICES.has(layout)) {\n    bit = ORDERED_DEVICES.bit[layout];\n  } else if (ORDERED_ASPECTR.has(layout)) {\n    bit = ORDERED_ASPECTR.bit[layout];\n  } else {\n    /* istanbul ignore next */ // shouldn't happen\n    logError(\n      MH.bugError(`Unknown device or aspectRatio data attribute: ${layout}`),\n    );\n  }\n\n  if (entry.isIntersecting) {\n    nonIntersectingBitmask &= ~bit;\n  } else {\n    nonIntersectingBitmask |= bit;\n  }\n\n  return nonIntersectingBitmask;\n};\n\nconst invokeCallback = (callback: OnLayoutCallback, layoutData: LayoutData) =>\n  callback.invoke(MH.copyObject(layoutData)).catch(logError);\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { PointerAction } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * Returns true if the given string is a valid pointer action.\n *\n * @category Validation\n */\nexport const isValidPointerAction = (action: string): action is PointerAction =>\n  MH.includes(POINTER_ACTIONS, action);\n\n/**\n * Returns true if the given string or array is a valid list of pointer\n * actions.\n *\n * @category Validation\n */\nexport const isValidPointerActionList = (actions: string | string[]) =>\n  isValidStrList(actions, isValidPointerAction, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const POINTER_ACTIONS: PointerAction[] = [\n  MC.S_CLICK,\n  MC.S_HOVER,\n  MC.S_PRESS,\n] as const;\n","/**\n * @module Watchers/PointerWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { PointerAction, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { isValidPointerAction, POINTER_ACTIONS } from \"@lisn/utils/pointer\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * {@link PointerWatcher} listens for simple pointer actions like clicks, press\n * and hold or hover.\n */\nexport class PointerWatcher {\n  /**\n   * Call the `startHandler` whenever the pointer action begins.\n   * Call the `endHandler` whenever the pointer action ends. If `endHandler` is\n   * not given, it defaults to `startHandler`.\n   *\n   * For an explanation of what \"begins\" and \"ends\" means for each supported\n   * action, see {@link OnPointerOptions.actions}.\n   *\n   * **IMPORTANT:** The same handlers can _not_ be added multiple times for the\n   * same event target, even if the options differ. If the handler has already\n   * been added for this target, then it will be removed and re-added with the\n   * current options.\n   */\n  readonly onPointer: (\n    target: EventTarget,\n    startHandler: OnPointerHandler,\n    endHandler?: OnPointerHandler,\n    options?: OnPointerOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes previously added handlers.\n   */\n  readonly offPointer: (\n    target: EventTarget,\n    startHandler: OnPointerHandler,\n    endHandler?: OnPointerHandler,\n  ) => void;\n\n  /**\n   * Creates a new instance of PointerWatcher with the given\n   * {@link PointerWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: PointerWatcherConfig = {}) {\n    return new PointerWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of PointerWatcher with the given\n   * {@link PointerWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: PointerWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new PointerWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: PointerWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"PointerWatcher.create\");\n    }\n\n    // Keep this watcher super simple. The events we listen for don't fire at a\n    // high rate and it's unlikely for there to be many many callbacks for each\n    // target and event type, so don't bother with using a delegating listener,\n    // etc.\n\n    // Keep a map of callbacks so we can lookup the callback by the handler\n    // (and also to prevent duplicate handler for each target, for consistency\n    // with other watchers).\n    const allCallbacks = newXWeakMap<\n      EventTarget,\n      Map<OnPointerHandler, OnPointerCallback>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const createCallback = (\n      target: EventTarget,\n      handler: OnPointerHandler,\n    ): OnPointerCallback => {\n      MH.remove(allCallbacks.get(target)?.get(handler));\n\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        MH.deleteKey(allCallbacks.get(target), handler);\n      });\n\n      allCallbacks.sGet(target).set(handler, callback);\n      return callback;\n    };\n\n    // async for consistency with other watchers and future compatibility in\n    // case of change needed\n    const setupOnPointer = async (\n      target: EventTarget,\n      startHandler: OnPointerHandler,\n      endHandler: OnPointerHandler | undefined,\n      userOptions: OnPointerOptions | undefined,\n    ) => {\n      const options = getOptions(config, userOptions);\n      const startCallback = createCallback(target, startHandler);\n      const endCallback =\n        endHandler && endHandler !== startHandler\n          ? createCallback(target, endHandler)\n          : startCallback;\n\n      for (const action of options._actions) {\n        listenerSetupFn[action](target, startCallback, endCallback, options);\n      }\n    };\n\n    // ----------\n\n    this.onPointer = setupOnPointer;\n\n    // ----------\n\n    this.offPointer = (target, startHandler, endHandler?) => {\n      const entry = allCallbacks.get(target);\n      MH.remove(entry?.get(startHandler));\n      if (endHandler) {\n        MH.remove(entry?.get(endHandler));\n      }\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type PointerWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnPointerOptions.preventDefault | preventDefault} in calls to\n   * {@link PointerWatcher.onPointer}.\n   *\n   * @defaultValue false\n   */\n  preventDefault?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnPointerOptions.preventSelect | preventSelect} in calls to\n   * {@link PointerWatcher.onPointer}.\n   *\n   * @defaultValue true\n   */\n  preventSelect?: boolean;\n};\n\n/**\n * @interface\n */\nexport type OnPointerOptions = {\n  /**\n   * One or more of of \"click\", \"hover\" or \"press\". If not specified, then all\n   * actions are enabled.\n   *\n   * It can be a comma-separated list of {@link PointerAction}s or an array of\n   * such actions.\n   *\n   * For click actions, the start handler is called for every odd number of\n   * clicks (1st, 3rd, 5th, etc), and the end handler is called for every other\n   * click. It functions like a toggle.\n   *\n   * For hover and press actions, the start handler is called when the pointer\n   * enters or presses down on the target respectively, and the end handler is\n   * called when the pointer leaves or comes off the target respectively.\n   *\n   * Note that on touch screens, hover and press actions behave identically.\n   *\n   * @defaultValue undefined\n   */\n  actions?: CommaSeparatedStr<PointerAction> | PointerAction[];\n\n  /**\n   * If true, the events of the pointer actions, e.g. click, will have their\n   * default action prevented.\n   *\n   * @defaultValue {@link PointerWatcherConfig.preventDefault}\n   */\n  preventDefault?: boolean;\n\n  /**\n   * If true (default), then for press actions (and hover actions on touch\n   * screens) it will prevent starting a text selection.\n   *\n   * @defaultValue {@link PointerWatcherConfig.preventSelect}\n   */\n  preventSelect?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the event target that was passed to the {@link PointerWatcher.onPointer}\n *   call (equivalent to\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget | Event:currentTarget}).\n * - the {@link PointerActionData} describing the state of the action.\n */\nexport type OnPointerHandlerArgs = [EventTarget, PointerActionData, Event];\nexport type OnPointerCallback = Callback<OnPointerHandlerArgs>;\nexport type OnPointerHandler =\n  | CallbackHandler<OnPointerHandlerArgs>\n  | OnPointerCallback;\n\nexport type PointerActionData = {\n  action: PointerAction;\n  state: \"ON\" | \"OFF\";\n};\n\n// ----------------------------------------\n\ntype PointerWatcherConfigInternal = {\n  _preventDefault: boolean;\n  _preventSelect: boolean;\n};\n\ntype OnPointerOptionsInternal = {\n  _actions: PointerAction[];\n  _preventDefault: boolean;\n  _preventSelect: boolean;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, PointerWatcher>();\n\nconst getConfig = (\n  config: PointerWatcherConfig | undefined,\n): PointerWatcherConfigInternal => {\n  return {\n    _preventDefault: config?.preventDefault ?? false,\n    _preventSelect: config?.preventSelect ?? true,\n  };\n};\n\nconst getOptions = (\n  config: PointerWatcherConfigInternal,\n  options: OnPointerOptions | undefined,\n): OnPointerOptionsInternal => {\n  return {\n    _actions:\n      validateStrList(\"actions\", options?.actions, isValidPointerAction) ||\n      POINTER_ACTIONS,\n    _preventDefault: options?.preventDefault ?? config._preventDefault,\n    _preventSelect: options?.preventSelect ?? config._preventSelect,\n  };\n};\n\nconst setupClickListener = (\n  target: EventTarget,\n  startCallback: OnPointerCallback,\n  endCallback: OnPointerCallback,\n  options: OnPointerOptionsInternal,\n) => {\n  // false if next will start; true if next will end.\n  let toggleState = false;\n\n  const wrapper = (event: Event) => {\n    if (options._preventDefault) {\n      MH.preventDefault(event);\n    }\n\n    toggleState = !toggleState;\n\n    const data: PointerActionData = {\n      action: MC.S_CLICK,\n      state: toggleState ? \"ON\" : \"OFF\",\n    };\n\n    invokeCallback(\n      toggleState ? startCallback : endCallback,\n      target,\n      data,\n      event,\n    );\n  };\n\n  addEventListenerTo(target, MC.S_CLICK, wrapper);\n\n  const remove = () => removeEventListenerFrom(target, MC.S_CLICK, wrapper);\n\n  startCallback.onRemove(remove);\n  endCallback.onRemove(remove);\n};\n\nconst setupPointerListeners = (\n  action: typeof MC.S_HOVER | typeof MC.S_PRESS,\n  target: EventTarget,\n  startCallback: OnPointerCallback,\n  endCallback: OnPointerCallback,\n  options: OnPointerOptionsInternal,\n) => {\n  // If the browser doesn't support pointer events, then\n  // addEventListenerTo will transform these into mouse*\n  const startEventSuff = action === MC.S_HOVER ? \"enter\" : \"down\";\n  const endEventSuff = action === MC.S_HOVER ? \"leave\" : \"up\";\n  const startEvent = MC.S_POINTER + startEventSuff;\n  const endEvent = MC.S_POINTER + endEventSuff;\n\n  const wrapper = (event: Event, callback: OnPointerCallback) => {\n    if (options._preventDefault) {\n      MH.preventDefault(event);\n    }\n\n    const data: PointerActionData = {\n      action,\n      state:\n        MH.strReplace(event.type, /pointer|mouse/, \"\") === startEventSuff\n          ? \"ON\"\n          : \"OFF\",\n    };\n\n    invokeCallback(callback, target, data, event);\n  };\n  const startListener = (event: Event) => wrapper(event, startCallback);\n  const endListener = (event: Event) => wrapper(event, endCallback);\n\n  addEventListenerTo(target, startEvent, startListener);\n  addEventListenerTo(target, endEvent, endListener);\n\n  // On some touch screen devices pressing and holding will initiate select\n  // and result in touchend, so we prevent text select\n  if (options._preventSelect) {\n    preventSelect(target);\n  }\n\n  startCallback.onRemove(() => {\n    undoPreventSelect(target);\n    removeEventListenerFrom(target, startEvent, startListener);\n  });\n\n  endCallback.onRemove(() => {\n    undoPreventSelect(target);\n    removeEventListenerFrom(target, endEvent, endListener);\n  });\n};\n\nconst listenerSetupFn: {\n  [D in PointerAction]: (\n    target: EventTarget,\n    startCallback: OnPointerCallback,\n    endCallback: OnPointerCallback,\n    options: OnPointerOptionsInternal,\n  ) => void;\n} = {\n  click: setupClickListener,\n  hover: (...args) => setupPointerListeners(MC.S_HOVER, ...args),\n  press: (...args) => setupPointerListeners(MC.S_PRESS, ...args),\n} as const;\n\nconst invokeCallback = (\n  callback: OnPointerCallback,\n  target: EventTarget,\n  actionData: PointerActionData,\n  event: Event,\n) => callback.invoke(target, MH.copyObject(actionData), event).catch(logError);\n","/**\n * @module Watchers/ScrollWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { XYDirection, ScrollDirection, SizeTarget } from \"@lisn/globals/types\";\n\nimport {\n  ScrollTarget,\n  TargetCoordinate,\n  TargetCoordinates,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { getData, setNumericStyleProps } from \"@lisn/utils/css-alter\";\nimport { getMaxDeltaDirection } from \"@lisn/utils/directions\";\nimport { moveElement, wrapScrollingContent } from \"@lisn/utils/dom-alter\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum, maxAbs } from \"@lisn/utils/math\";\nimport {\n  scrollTo,\n  getCurrentScrollAction,\n  getClientWidthNow,\n  getClientHeightNow,\n  tryGetMainScrollableElement,\n  fetchMainContentElement,\n  fetchMainScrollableElement,\n  fetchScrollableElement,\n  isValidScrollDirection,\n  ScrollAction,\n  ScrollToOptions,\n} from \"@lisn/utils/scroll\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { MutationOperation, DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n// re-export for convenience\nexport type { ScrollAction, ScrollToOptions } from \"@lisn/utils/scroll\";\n\n/**\n * {@link ScrollWatcher} listens for scroll events in any direction.\n *\n * It manages registered callbacks globally and reuses event listeners for more\n * efficient performance.\n */\nexport class ScrollWatcher {\n  /**\n   * Call the given handler whenever the given scrollable is scrolled.\n   *\n   * Unless {@link OnScrollOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest scroll data. If a scroll has\n   * not yet been observed on the scrollable and its `scrollTop` and\n   * `scrollLeft` are 0, then the direction is {@link Types.NoDirection} and\n   * the handler is only called if {@link Types.NoDirection} is part of the\n   * supplied {@link OnScrollOptions.directions | options.directions} (or\n   * {@link OnScrollOptions.directions | options.directions} is not given).\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking content size changes using\n   * {@link trackScroll}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onScroll: (\n    handler: OnScrollHandler,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly offScroll: (\n    handler: OnScrollHandler,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * This everything that {@link onScroll} does plus more:\n   *\n   * In addition to a scroll event, the handler is also called when either the\n   * offset size or scroll (content) size of the scrollable changes as that\n   * would affect its `scrollTopFraction` and `scrollLeftFraction` and possibly\n   * the `scrollTop` and `scrollLeft` as well.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates a set of CSS variables on the scrollable element's style:\n   *\n   * - If {@link OnScrollOptions.scrollable | options.scrollable} is not given,\n   *   or is `null`, `window` or `document`, the following CSS variables are\n   *   set on the root (`html`) element and represent the scroll of the\n   *   {@link fetchMainScrollableElement}:\n   *   - `--lisn-js--page-scroll-top`\n   *   - `--lisn-js--page-scroll-top-fraction`\n   *   - `--lisn-js--page-scroll-left`\n   *   - `--lisn-js--page-scroll-left-fraction`\n   *   - `--lisn-js--page-scroll-width`\n   *   - `--lisn-js--page-scroll-height`\n   *\n   * - Otherwise, the following variables are set on the scrollable itself,\n   *   and represent its scroll offset:\n   *   - `--lisn-js--scroll-top`\n   *   - `--lisn-js--scroll-top-fraction`\n   *   - `--lisn-js--scroll-left`\n   *   - `--lisn-js--scroll-left-fraction`\n   *   - `--lisn-js--scroll-width`\n   *   - `--lisn-js--scroll-height`\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly trackScroll: (\n    handler?: OnScrollHandler | null,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackScroll}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly noTrackScroll: (\n    handler?: OnScrollHandler | null,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * Get the scroll offset of the given scrollable. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param {} realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                    this only when doing realtime scroll-based animations\n   *                    as it may cause a forced layout.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScroll: (\n    scrollable?: ScrollTarget,\n    realtime?: boolean,\n  ) => Promise<ScrollData>;\n\n  /**\n   * Scrolls the given scrollable element to in the given direction.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the direction or options are invalid.\n   */\n  readonly scroll: (\n    direction: XYDirection,\n    options?: ScrollOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Scrolls the given scrollable element to the given `to` scrollable.\n   *\n   * Returns `null` if there's an ongoing scroll that is not cancellable.\n   *\n   * Note that if `to` is an element or a selector, then it _must_ be a\n   * descendant of the scrollable element.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the \"to\" coordinates or options are invalid.\n   *\n   * @param {} to  If this is an element, then its top-left position is used as\n   *               the target coordinates. If it is a string, then it is treated\n   *               as a selector for an element using `querySelector`.\n   * @param {} [options.scrollable]\n   *               If not given, it defaults to {@link fetchMainScrollableElement}\n   *\n   * @return {} `null` if there's an ongoing scroll that is not cancellable,\n   * otherwise a {@link ScrollAction}.\n   */\n  readonly scrollTo: (\n    to: TargetCoordinates | Element | string,\n    options?: ScrollToOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Returns the current {@link ScrollAction} if any.\n   *\n   * @param {} scrollable\n   *               If not given, it defaults to {@link fetchMainScrollableElement}\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScrollAction: (\n    scrollable?: Element,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Cancels the ongoing scroll that's resulting from smooth scrolling\n   * triggered in the past. Does not interrupt or prevent further scrolling.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   *\n   * @param {} [options.immediate]  If true, then it will not use\n   *                                {@link waitForMeasureTime} or\n   *                                {@link Utils.waitForMutateTime | waitForMutateTime}.\n   *                                Warning: this will likely result in forced layout.\n   */\n  readonly stopUserScrolling: (options?: {\n    scrollable?: ScrollTarget;\n    immediate?: boolean;\n  }) => Promise<void>;\n\n  /**\n   * Returns the element that holds the main page content. By default it's\n   * `document.body` but is overridden by\n   * {@link settings.mainScrollableElementSelector}.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainContentElement(): Promise<HTMLElement> {\n    return fetchMainContentElement();\n  }\n\n  /**\n   * Returns the scrollable element that holds the wrapper around the main page\n   * content. By default it's `document.scrollable` (unless `document.body` is\n   * actually scrollable, in which case it will be used) but it will be\n   * different if {@link settings.mainScrollableElementSelector} is set.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainScrollableElement(): Promise<HTMLElement> {\n    return fetchMainScrollableElement();\n  }\n\n  /**\n   * Creates a new instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: ScrollWatcherConfig = {}) {\n    return new ScrollWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: ScrollWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new ScrollWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ScrollWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ScrollWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ScrollWatcher\", logAtCreation: config })\n      : null;\n\n    const allScrollData = MH.newWeakMap<Element, ScrollData>();\n\n    const activeListeners = MH.newWeakMap<\n      ScrollTarget,\n      { _nRealtime: number }\n    >();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnScrollHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const fetchCurrentScroll = async (\n      element: Element,\n      realtime = false,\n      isScrollEvent = false,\n    ): Promise<ScrollData> => {\n      // The scroll data can change event without a scroll event, e.g. by the\n      // element changing size, so always get the latest here.\n      const previousEventData = allScrollData.get(element);\n      const latestData = await fetchScrollData(\n        element,\n        previousEventData,\n        realtime,\n      );\n\n      // If there hasn't been a scroll event, use the old scroll direction\n      if (!isScrollEvent && previousEventData) {\n        latestData.direction = previousEventData.direction;\n      }\n      return latestData;\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n      trackType: TrackType,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      };\n      allCallbacks.sGet(element).set(handler, entry);\n\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnScroll = async (\n      handler: OnScrollHandler,\n      userOptions: OnScrollOptions | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, userOptions || {});\n      const element = options._element;\n\n      // Don't await for the scroll data before creating the callback so that\n      // setupOnScroll and removeOnScroll have the same \"timing\" and therefore\n      // calling onScroll and offScroll immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options, trackType);\n      const callback = entry._callback;\n\n      const eventTarget = options._eventTarget;\n      const scrollData = await fetchCurrentScroll(\n        element,\n        options._debounceWindow === 0,\n      );\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = scrollData;\n      allScrollData.set(element, scrollData);\n\n      if (trackType === TRACK_FULL) {\n        await setupSizeTrack(entry);\n      }\n\n      let listenerOptions = activeListeners.get(eventTarget);\n      if (!listenerOptions) {\n        debug: logger?.debug4(\"Adding scroll listener\", eventTarget);\n        listenerOptions = { _nRealtime: 0 };\n        activeListeners.set(eventTarget, listenerOptions);\n        // Don't debounce the scroll handler, only the callbacks.\n        addEventListenerTo(eventTarget, MC.S_SCROLL, scrollHandler);\n      }\n\n      if (options._debounceWindow === 0) {\n        listenerOptions._nRealtime++;\n      }\n\n      const directions = options._directions;\n      if (\n        !callback.isRemoved() &&\n        !userOptions?.skipInitial &&\n        directionMatches(directions, scrollData.direction)\n      ) {\n        debug: logger?.debug5(\"Calling initially with\", element, scrollData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, scrollData);\n      }\n    };\n\n    // ----------\n\n    const removeOnScroll = async (\n      handler: OnScrollHandler,\n      scrollable: ScrollTarget | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, { scrollable });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setScrollCssProps) {\n          // delete the properties\n          setScrollCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n    ) => {\n      const element = options._element;\n      const eventTarget = options._eventTarget;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      const listenerOptions = activeListeners.get(eventTarget);\n      if (listenerOptions && options._debounceWindow === 0) {\n        listenerOptions._nRealtime--;\n      }\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for scrollable; removing listener\",\n          element,\n        );\n\n        MH.deleteKey(allScrollData, element);\n        removeEventListenerFrom(eventTarget, MC.S_SCROLL, scrollHandler);\n        MH.deleteKey(activeListeners, eventTarget);\n      }\n    };\n\n    // ----------\n\n    const setupSizeTrack = async (entry: CallbackEntry) => {\n      const options = entry._options;\n      const element = options._element;\n      const scrollCallback = entry._callback;\n      debug: logger?.debug8(\"Setting up size tracking\", element);\n\n      const doc = MH.getDoc();\n      const docScrollingElement = MH.getDocScrollingElement();\n\n      const resizeCallback = wrapCallback(async () => {\n        // Get the latest scroll data for the scrollable\n        // Currently, the resize callback is already delayed by a frame due to\n        // the SizeWatcher, so we don't need to treat this as realtime.\n        const latestData = await fetchCurrentScroll(element);\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n        } else if (!scrollCallback.isRemoved()) {\n          await invokeCallback(scrollCallback, element, latestData);\n        }\n      });\n\n      scrollCallback.onRemove(resizeCallback.remove);\n\n      // Don't use default instance as it has a high threshold.\n      const sizeWatcher = SizeWatcher.reuse();\n      const setupOnResize = (target?: SizeTarget) =>\n        sizeWatcher.onResize(resizeCallback, {\n          target,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          // TODO maybe accepts resizeThreshold option\n          threshold: options._threshold,\n        });\n\n      if (element === docScrollingElement) {\n        // In case we're tracking the main document scroll, then we only need to\n        // observe the viewport size and the size of the documentElement (which is\n        // the content size).\n\n        setupOnResize(); // viewport size\n        setupOnResize(doc); // content size\n\n        return;\n      }\n\n      // ResizeObserver only detects changes in offset width/height which is\n      // the visible size of the scrolling element, and that is not affected by the\n      // size of its content.\n      // But we also need to detect changes in the scroll width/height which is\n      // the size of the content.\n      // We also need to keep track of elements being added to the scrollable element.\n\n      const observedElements = MH.newSet<Element>([element]);\n\n      // Observe the scrolling element\n      setupOnResize(element);\n\n      // And also its children (if possible, single wrapper around children\n      const allowedToWrap =\n        settings.contentWrappingAllowed === true &&\n        element !== docScrollingElement &&\n        getData(element, MC.PREFIX_NO_WRAP) === null;\n\n      let wrapper: Element;\n      if (allowedToWrap) {\n        // Wrap the content and observe the wrapper\n        wrapper = await wrapScrollingContent(element);\n        setupOnResize(wrapper);\n        observedElements.add(wrapper);\n\n        //\n      } else {\n        for (const child of MH.childrenOf(element)) {\n          setupOnResize(child);\n          observedElements.add(child);\n        }\n      }\n\n      // Watch for newly added elements\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      const onAddedCallback = wrapCallback((operation: MutationOperation) => {\n        const child = MH.currentTargetOf(operation);\n        // If we've just added the wrapper, it will be in DOMWatcher's queue,\n        // so check.\n        if (child !== wrapper) {\n          if (allowedToWrap) {\n            // Move this child into the wrapper. If this results in change of size\n            // for wrapper, SizeWatcher will call us.\n            moveElement(child, { to: wrapper, ignoreMove: true });\n          } else {\n            // Track the size of this child.\n            // Don't skip initial, call the callback now\n            setupOnResize(child);\n            observedElements.add(child);\n          }\n        }\n      });\n\n      domWatcher.onMutation(onAddedCallback, { categories: [MC.S_ADDED] });\n      resizeCallback.onRemove(onAddedCallback.remove);\n    };\n\n    // ----------\n\n    const scrollHandler = async (event: Event) => {\n      // We cannot use event.currentTarget because scrollHandler is called inside\n      // a setTimeout so by that time, currentTarget is null or something else.\n      //\n      // However, target and currentTarget only differ when the event is in the\n      // bubbling or capturing phase. Because\n      //\n      // - the scroll event only bubbles when fired on document, and (it only\n      //   bubbles up to window)\n      // - and we never attach the listener to the capturing phase\n      // - and we always use document instead of window to listen for scroll on\n      //   document\n      //\n      // then event.target suffices.\n      const scrollable = MH.targetOf(event);\n      /* istanbul ignore next */\n      if (!scrollable || !(MH.isElement(scrollable) || MH.isDoc(scrollable))) {\n        return;\n      }\n\n      const element = await fetchScrollableElement(scrollable);\n      const realtime = (activeListeners.get(scrollable)?._nRealtime || 0) > 0;\n      const latestData = await fetchCurrentScroll(element, realtime, true);\n      allScrollData.set(element, latestData);\n\n      debug: logger?.debug9(\"Scroll event\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        // Consider the direction since the last scroll event and not the\n        // direction based on the largest delta the last time the callback\n        // was called.\n        const options = entry._options;\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n          continue;\n        }\n\n        // If threshold has been exceeded, always update the latest data for\n        // this callback.\n        entry._data = latestData;\n\n        if (!directionMatches(options._directions, latestData.direction)) {\n          debug: logger?.debug9(\n            \"Direction does not match\",\n            options,\n            latestData,\n          );\n          continue;\n        }\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentScroll = (scrollable?, realtime?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        fetchCurrentScroll(element, realtime),\n      );\n\n    // ----------\n\n    this.scroll = (direction, options = {}) => {\n      if (!isValidScrollDirection(direction)) {\n        throw MH.usageError(`Unknown scroll direction: '${direction}'`);\n      }\n\n      const isVertical = direction === MC.S_UP || direction === MC.S_DOWN;\n      const sign = direction === MC.S_UP || direction === MC.S_LEFT ? -1 : 1;\n      let targetCoordinate: TargetCoordinate;\n\n      const amount = options.amount ?? 100;\n      const asFractionOf = options.asFractionOf;\n\n      if (asFractionOf === \"visible\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * getClientHeightNow(el)) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * getClientWidthNow(el)) / 100;\n\n        //\n      } else if (asFractionOf === \"content\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * el[MC.S_SCROLL_HEIGHT]) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * el[MC.S_SCROLL_WIDTH]) / 100;\n\n        //\n      } else if (asFractionOf !== undefined && asFractionOf !== \"pixel\") {\n        throw MH.usageError(\n          `Unknown 'asFractionOf' keyword: '${asFractionOf}'`,\n        );\n\n        //\n      } else {\n        targetCoordinate = isVertical\n          ? (el) => el[MC.S_SCROLL_TOP] + sign * amount\n          : (el) => el[MC.S_SCROLL_LEFT] + sign * amount;\n      }\n\n      const target = isVertical\n        ? { top: targetCoordinate }\n        : { left: targetCoordinate };\n\n      return this.scrollTo(target, options);\n    };\n\n    // ----------\n\n    this.scrollTo = async (to, options = {}) =>\n      scrollTo(\n        to,\n        MH.merge(\n          { duration: config._scrollDuration }, // default\n          options,\n          {\n            scrollable: await fetchScrollableElement(options.scrollable),\n          }, // override\n        ),\n      );\n\n    // ----------\n\n    this.fetchCurrentScrollAction = (scrollable?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        getCurrentScrollAction(element),\n      );\n\n    // ----------\n\n    this.stopUserScrolling = async (options = {}) => {\n      const element = await fetchScrollableElement(options.scrollable);\n      const stopScroll = () =>\n        MH.elScrollTo(element, {\n          top: element[MC.S_SCROLL_TOP],\n          left: element[MC.S_SCROLL_LEFT],\n        });\n\n      if (options.immediate) {\n        stopScroll();\n      } else {\n        waitForMeasureTime().then(stopScroll);\n      }\n    };\n\n    // ----------\n\n    this.trackScroll = (handler?, options?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      return setupOnScroll(handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackScroll = (handler?, scrollable?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      removeOnScroll(handler, scrollable, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onScroll = (handler, options?) =>\n      setupOnScroll(handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offScroll = (handler, scrollable?) => {\n      removeOnScroll(handler, scrollable, TRACK_REGULAR); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type ScrollWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnScrollOptions.debounceWindow | debounceWindow} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnScrollOptions.threshold | threshold} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 50\n   */\n  scrollThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link ScrollOptions.duration | duration} in calls to\n   * {@link ScrollWatcher.scroll} and {@link ScrollWatcher.scrollTo}.\n   *\n   * @defaultValue 1000\n   */\n  scrollDuration?: number;\n};\n\n/**\n * @interface\n */\nexport type OnScrollOptions = {\n  /**\n   * If it is not given, or is `null`, `window` or `document`, then it will\n   * track the scroll of the {@link ScrollWatcher.fetchMainScrollableElement}.\n   *\n   * Other values must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  scrollable?: ScrollTarget;\n\n  /**\n   * If non-0, the scroll handler will only be called when the scrollable's\n   * scroll offset in the observed direction has changed at least\n   * `scrollThreshold` pixels since the last time the handler was called.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.scrollThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Specifies a list of {@link ScrollDirection}s to listen for.\n   *\n   * It can be a comma-separated list of direction names or an array of such\n   * names.\n   *\n   * If not given, then it listens for scrolls in any direction, including\n   * {@link Types.NoDirection} and {@link Types.AmbiguousDirection}.\n   *\n   * The {@link Types.NoDirection} occurs when the callback is called initially\n   * (if `skipInitial` is not `true`) and there hasn't yet been a scroll\n   * observed on the scrollable _and_ it's `scrollTop`/`scrollLeft` are 0.\n   *\n   * The {@link Types.AmbiguousDirection} occurs when the user scrolls\n   * diagonally with close to equal deltas in both horizontal and vertical\n   * direction.\n   *\n   * **IMPORTANT:**\n   *\n   * The direction of a scroll event is always based on comparing `deltaX` and\n   * `deltaY` relative to the _last scroll event_ (within the `debounceWindow`,\n   * and not to the scroll data for the last time the callback was called (in\n   * case it was skipped because `threshold` was not exceeded or in case it was\n   * debounced by a larger window than the watcher).\n   *\n   * I.e. if you have both `threshold` and `directions` restricted, or if the\n   * callback has a larger debounce window than the watcher, it is possible for\n   * there to be a change in the relevant `scrollTop`/`scrollLeft` offset that\n   * exceeds the threshold, and for the callback to _not_ be called.\n   *\n   * For a callback to be called, both of these must be true:\n   * - the change in `scrollTop`/`scrollLeft`, _compared to the last time the\n   *   callback was called_ must exceed the {@link threshold}\n   * - the effective scroll direction, _compared to the last scroll event_\n   *   prior to the _watcher's_ debounce window must be one of the given\n   *   {@link directions}.\n   *\n   * @defaultValue undefined\n   */\n  directions?: CommaSeparatedStr<ScrollDirection> | ScrollDirection[];\n\n  /**\n   * Do not call the handler until there's a future scroll of the element.\n   *\n   * By default we call the handler (almost) immediately if there's been a\n   * scroll in one of the given directions, or if there has not been a scroll\n   * but directions includes {@link Types.NoDirection}, but you can disable\n   * this initial call here.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts, but you probably need this when doing\n   * scroll-based animations.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * @interface\n */\nexport type ScrollOptions = ScrollToOptions & {\n  /**\n   * How much to scroll in the given direction.\n   *\n   * @defaultValue 100\n   */\n  amount?: number;\n\n  /**\n   * If set to \"pixel\" (default), `amount` is taken as absolute pixels.\n   *\n   * If set to \"visible\", `amount` is taken as percent of the element's visible\n   * size in the scrolling direction (100 means full client width for\n   * horizontal or height for vertical scroll).\n   *\n   * If set to \"content\", `amount` is taken as percent of the element's full\n   * content size in the scrolling direction (100 means full scroll width for\n   * horizontal or height for vertical scroll).\n   *\n   * @defaultValue \"pixel\"\n   */\n  asFractionOf?: \"pixel\" | \"visible\" | \"content\";\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the element that has been resized\n * - the {@link ScrollData} for the element\n */\nexport type OnScrollHandlerArgs = [Element, ScrollData];\nexport type OnScrollCallback = Callback<OnScrollHandlerArgs>;\nexport type OnScrollHandler =\n  | CallbackHandler<OnScrollHandlerArgs>\n  | OnScrollCallback;\n\nexport type ScrollData = {\n  clientWidth: number;\n  clientHeight: number;\n\n  scrollTop: number;\n\n  /**\n   * This is the `scrollTop` relative to the full `scrollHeight` minus the\n   * `clientHeight`, ranging from 0 to 1.\n   */\n  scrollTopFraction: number;\n\n  scrollLeft: number;\n\n  /**\n   * This is the `scrollLeft` relative to the full `scrollWidth` minus the\n   * `clientWidth`, ranging from 0 to 1.\n   */\n  scrollLeftFraction: number;\n\n  scrollWidth: number;\n  scrollHeight: number;\n\n  /**\n   * This is the direction of the last scroll action, i.e. _compared to the\n   * last scroll event_, not necessarily based on the deltas compared to the\n   * last time this callback was called.\n   */\n  direction: ScrollDirection;\n};\n\n// ----------------------------------------\n\ntype ScrollWatcherConfigInternal = {\n  _debounceWindow: number;\n  _scrollThreshold: number;\n  _scrollDuration: number;\n};\n\ntype OnScrollOptionsInternal = {\n  _element: Element;\n  _eventTarget: ScrollTarget;\n  _directions: ScrollDirection[] | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnScrollCallback;\n  _trackType: TrackType;\n  _options: OnScrollOptionsInternal;\n  _data?: ScrollData;\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, ScrollWatcher>();\n\nconst getConfig = (\n  config: ScrollWatcherConfig,\n): ScrollWatcherConfigInternal => {\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _scrollThreshold: toNonNegNum(config.scrollThreshold, 50) || 1,\n    _scrollDuration: toNonNegNum(config.scrollDuration, 1000),\n  };\n};\n\nconst TRACK_REGULAR = 1; // only scroll events\nconst TRACK_FULL = 2; // scroll + resizing of content and/or wrapper\n\n// --------------------\n\nconst fetchOnScrollOptions = async (\n  config: ScrollWatcherConfigInternal,\n  options: OnScrollOptions,\n): Promise<OnScrollOptionsInternal> => {\n  const directions =\n    validateStrList(\"directions\", options.directions, isValidScrollDirection) ||\n    null;\n\n  const element = await fetchScrollableElement(options.scrollable);\n\n  return {\n    _element: element,\n    _eventTarget: getEventTarget(element),\n    _directions: directions,\n    // If threshold is 0, internally treat as 1 (pixel)\n    _threshold: toNonNegNum(options.threshold, config._scrollThreshold) || 1,\n    _debounceWindow: options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n  };\n};\n\nconst directionMatches = (\n  userDirections: ScrollDirection[] | null,\n  latestDirection: ScrollDirection,\n) => !userDirections || MH.includes(userDirections, latestDirection);\n\nconst hasExceededThreshold = (\n  options: OnScrollOptionsInternal,\n  latestData: ScrollData,\n  lastThresholdData: ScrollData | undefined,\n): boolean => {\n  const directions = options._directions;\n  const threshold = options._threshold;\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  const topDiff = maxAbs(\n    latestData[MC.S_SCROLL_TOP] - lastThresholdData[MC.S_SCROLL_TOP],\n    latestData[MC.S_SCROLL_HEIGHT] - lastThresholdData[MC.S_SCROLL_HEIGHT],\n    latestData[MC.S_CLIENT_HEIGHT] - lastThresholdData[MC.S_CLIENT_HEIGHT],\n  );\n\n  const leftDiff = maxAbs(\n    latestData[MC.S_SCROLL_LEFT] - lastThresholdData[MC.S_SCROLL_LEFT],\n    latestData[MC.S_SCROLL_WIDTH] - lastThresholdData[MC.S_SCROLL_WIDTH],\n    latestData[MC.S_CLIENT_WIDTH] - lastThresholdData[MC.S_CLIENT_WIDTH],\n  );\n\n  // If the callback is only interested in up/down, then only check the\n  // scrollTop delta, and similarly for left/right.\n  let checkTop = false,\n    checkLeft = false;\n  if (\n    !directions ||\n    MH.includes(directions, MC.S_NONE) ||\n    MH.includes(directions, MC.S_AMBIGUOUS)\n  ) {\n    checkTop = checkLeft = true;\n  } else {\n    if (\n      MH.includes(directions, MC.S_UP) ||\n      MH.includes(directions, MC.S_DOWN)\n    ) {\n      checkTop = true;\n    }\n    if (\n      MH.includes(directions, MC.S_LEFT) ||\n      MH.includes(directions, MC.S_RIGHT)\n    ) {\n      checkLeft = true;\n    }\n  }\n\n  return (\n    (checkTop && topDiff >= threshold) || (checkLeft && leftDiff >= threshold)\n  );\n};\n\nconst fetchScrollData = async (\n  element: Element,\n  previousEventData: ScrollData | undefined,\n  realtime: boolean,\n): Promise<ScrollData> => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollTop = MH.ceil(element[MC.S_SCROLL_TOP]);\n  const scrollLeft = MH.ceil(element[MC.S_SCROLL_LEFT]);\n  const scrollWidth = element[MC.S_SCROLL_WIDTH];\n  const scrollHeight = element[MC.S_SCROLL_HEIGHT];\n  const clientWidth = getClientWidthNow(element);\n  const clientHeight = getClientHeightNow(element);\n\n  const scrollTopFraction =\n    MH.round(scrollTop) / (scrollHeight - clientHeight || MC.INFINITY);\n  const scrollLeftFraction =\n    MH.round(scrollLeft) / (scrollWidth - clientWidth || MC.INFINITY);\n\n  const prevScrollTop = previousEventData?.scrollTop || 0;\n  const prevScrollLeft = previousEventData?.scrollLeft || 0;\n\n  const direction = getMaxDeltaDirection(\n    scrollLeft - prevScrollLeft,\n    scrollTop - prevScrollTop,\n  );\n\n  return {\n    direction,\n    [MC.S_SCROLL_TOP]: scrollTop,\n    [MC.S_SCROLL_TOP_FRACTION]: scrollTopFraction,\n    [MC.S_SCROLL_LEFT]: scrollLeft,\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollLeftFraction,\n    [MC.S_SCROLL_WIDTH]: scrollWidth,\n    [MC.S_SCROLL_HEIGHT]: scrollHeight,\n    [MC.S_CLIENT_WIDTH]: clientWidth,\n    [MC.S_CLIENT_HEIGHT]: clientHeight,\n  };\n};\n\nconst setScrollCssProps = (\n  element: Element,\n  scrollData: Partial<ScrollData> | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetMainScrollableElement()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"page-\";\n  }\n\n  scrollData = scrollData || {};\n  const props = {\n    [MC.S_SCROLL_TOP]: scrollData[MC.S_SCROLL_TOP],\n    [MC.S_SCROLL_TOP_FRACTION]: scrollData[MC.S_SCROLL_TOP_FRACTION],\n    [MC.S_SCROLL_LEFT]: scrollData[MC.S_SCROLL_LEFT],\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollData[MC.S_SCROLL_LEFT_FRACTION],\n    [MC.S_SCROLL_WIDTH]: scrollData[MC.S_SCROLL_WIDTH],\n    [MC.S_SCROLL_HEIGHT]: scrollData[MC.S_SCROLL_HEIGHT],\n  };\n  setNumericStyleProps(element, props, { _prefix: prefix });\n};\n\nconst getEventTarget = (element: Element): ScrollTarget => {\n  if (element === MH.getDocScrollingElement()) {\n    return MH.getDoc();\n  }\n\n  return element;\n};\n\nconst invokeCallback = (\n  callback: OnScrollCallback,\n  element: Element,\n  scrollData: ScrollData,\n) => callback.invoke(element, MH.copyObject(scrollData)).catch(logError);\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { ScrollOffset, View, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { isValidStrList, validateStrList } from \"@lisn/utils/validation\";\n\nimport { newBitSpaces, createBitSpace } from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid {@link ScrollOffset}.\n *\n * @category Validation\n */\nexport const isValidScrollOffset = (offset: string): offset is ScrollOffset =>\n  offset.match(OFFSET_REGEX) !== null;\n\n/**\n * Returns true if the given string is a valid \"view\".\n *\n * @category Validation\n */\nexport const isValidView = (view: string): view is View =>\n  MH.includes(VIEWS, view);\n\n/**\n * Returns true if the given string or array is a list of valid views.\n *\n * @category Validation\n */\nexport const isValidViewList = (views: string | string[]) =>\n  isValidStrList(views, isValidView, false);\n\n/**\n * Returns the views that are opposite to the given set of views.\n *\n * Above and below are opposites, and so are left and right.\n *\n * \"at\" is a special case. It is considered opposite to any view in the sense\n * that if it is not present in `views` it will always be included in the\n * returned array. However it is not \"strongly\" opposite in the sense that it\n * will not cause other views to be included in the result unless it is the\n * only view in `views`. That is, there are two sets of strongly opposite pairs\n * (\"above\"/\"below\" and \"left\"/\"right\") and at least one of the two opposing\n * views of a pair must be present for the other one to be included, _except in\n * the special case of `views` being \"at\"_. See examples below for\n * clarification.\n *\n * **Note** that the order of the returned array is not defined.\n *\n * @example\n * Returns [\"above\", \"below\", \"left\", \"right\"] (not definite order), since\n * \"at\" is the only view present and is opposite to all:\n *\n * ```javascript\n * getOppositeViews(\"at\"); // -> [\"above\", \"below\", \"left\", \"right\"] (not necessarily in this order)\n * ```\n *\n * @example\n * Returns [\"below\"]. \"left\" and \"right\" are NOT included even though \"at\" is\n * given, because at least one of the two opposing views of a pair must be\n * present for the other one to be included (except in the special case of\n * `views` being \"at\").\n *\n * ```javascript\n * getOppositeViews(\"at,above\"); // -> [\"below\"]\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above\"); // -> [\"at\", \"below\"] (not necessarily in this order)\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above,below\"); // -> [\"at\"]\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"at,above,below\"); // -> []\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above,right\"); // -> [\"at\", \"below\", \"left\"] (not necessarily in this order)\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"at,above,right\"); // -> [\"below\", \"left\"] (not necessarily in this order)\n * ```\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid, including if it's empty \"\".\n *\n * @category Views\n */\nexport const getOppositeViews = (\n  views: CommaSeparatedStr<View> | View[],\n): View[] => {\n  if (!views) {\n    throw MH.usageError(\"'views' cannot be empty\");\n  }\n\n  const bitmask = getViewsBitmask(views);\n  let oppositeBitmask = VIEWS_SPACE.bitmask & ~bitmask; // initial, all not present in bitmask\n\n  // If the given view is \"at\", then include all the other ones.\n  // Otherwise include only the opposite views of those directional\n  // (above/below/left/right) that are present. I.e. if neither left not right\n  // is given, then don't include them\n  if (bitmask !== VIEWS_SPACE.bit.at) {\n    // remove the opposite ones to those not present\n    if (!(bitmask & VIEWS_SPACE.bit.above)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.below;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.below)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.above;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.left)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.right;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.right)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.left;\n    }\n  }\n\n  return getViewsFromBitmask(oppositeBitmask);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getViewsBitmask = (\n  viewsStr: View[] | string | undefined,\n): number => {\n  let viewsBitmask = 0;\n  const views = validateStrList(\"views\", viewsStr, isValidView);\n\n  if (views) {\n    for (const v of views) {\n      if (!isValidView(v)) {\n        throw MH.usageError(`Unknown view '${v}'`);\n      }\n\n      viewsBitmask |= VIEWS_SPACE.bit[v];\n    }\n  } else {\n    viewsBitmask = VIEWS_SPACE.bitmask; // default: all\n  }\n\n  return viewsBitmask;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const parseScrollOffset = (input: string) => {\n  const match = input.match(OFFSET_REGEX);\n  if (!match) {\n    throw MH.usageError(`Invalid offset: '${input}'`);\n  }\n\n  const reference = match.groups?.ref;\n  const value = match.groups?.value;\n  /* istanbul ignore next */ // shouldn't happen\n  if (!reference || !value) {\n    throw MH.bugError(\"Offset regex: blank named groups\");\n  }\n\n  return { reference, value };\n};\n\nconst VIEWS: View[] = [\n  MC.S_AT,\n  MC.S_ABOVE,\n  MC.S_BELOW,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const VIEWS_SPACE = createBitSpace<View>(newBitSpaces(), ...VIEWS);\n\n// --------------------\n\nconst OFFSET_REGEX = RegExp(\"(?<ref>top|bottom|left|right): *(?<value>[^ ].+)\");\n\nconst getViewsFromBitmask = (bitmask: number): View[] => {\n  const views: View[] = [];\n  for (let bit = VIEWS_SPACE.start; bit <= VIEWS_SPACE.end; bit++) {\n    const value = 1 << bit;\n    if (bitmask & value) {\n      const name = VIEWS_SPACE.nameOf(value);\n      if (name) {\n        views.push(name);\n      }\n    }\n  }\n\n  return views;\n};\n","/**\n * @module Modules/XIntersectionObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nexport type XIntersectionObserverCallback = (\n  entries: IntersectionObserverEntry[],\n  observer: XIntersectionObserver,\n) => void;\n\n/**\n * {@link XIntersectionObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}\n * with added capabilities:\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n */\nexport class XIntersectionObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root | IntersectionObserver:root}.\n   */\n  readonly root!: Element | Document | null;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin | IntersectionObserver:rootMargin}.\n   */\n  readonly rootMargin!: string;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/thresholds | IntersectionObserver:thresholds}.\n   */\n  readonly thresholds!: number[];\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/observe | IntersectionObserver:observe} except it accepts multiple\n   * targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent intersection change.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/unobserve | IntersectionObserver:unobserve} except it accepts multiple\n   * targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/disconnect | IntersectionObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * Like `IntersectionObserver.takeRecords`.\n   */\n  readonly takeRecords: () => void;\n\n  constructor(\n    callback: XIntersectionObserverCallback,\n    observeOptions?: IntersectionObserverInit,\n  ) {\n    let observedTargets = MH.newWeakSet<Element>();\n    const targetsToSkip = MH.newWeakSet<Element>();\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      const selectedEntries = [];\n\n      for (const entry of entries) {\n        if (targetsToSkip.has(MH.targetOf(entry))) {\n          MH.deleteKey(targetsToSkip, MH.targetOf(entry));\n          continue;\n        }\n\n        selectedEntries.push(entry);\n      }\n\n      if (MH.lengthOf(selectedEntries)) {\n        callback(selectedEntries, this);\n      }\n    };\n\n    const observer = MH.newIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    MH.defineProperty(this, \"root\", { get: () => observer.root });\n    MH.defineProperty(this, \"rootMargin\", {\n      get: () => observer.rootMargin,\n    });\n    MH.defineProperty(this, \"thresholds\", {\n      get: () => observer.thresholds,\n    });\n\n    this.observe = (...targets) => {\n      for (const target of targets) {\n        observedTargets.add(target);\n        observer.observe(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.add(target);\n        this.observe(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        observer.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      observedTargets = MH.newWeakSet();\n      observer.disconnect();\n    };\n\n    this.takeRecords = () => observer.takeRecords();\n  }\n}\n","/**\n * @module Watchers/ViewWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  ViewTarget,\n  View,\n  BoundingRect,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { setNumericStyleProps } from \"@lisn/utils/css-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForSubsequentMeasureTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys, compareValuesIn } from \"@lisn/utils/misc\";\nimport { createOverlay, OverlayOptions } from \"@lisn/utils/overlays\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport { toMargins, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  VIEWS_SPACE,\n  getViewsBitmask,\n  parseScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap, newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XIntersectionObserver } from \"@lisn/modules/x-intersection-observer\";\n\nimport { DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewWatcher} monitors the position of a given target relative to the\n * given {@link ViewWatcherConfig.root | root} or the viewport.\n *\n * It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class ViewWatcher {\n  /**\n   * Call the given handler whenever the {@link ViewWatcherConfig.root | root}'s\n   * view relative to the target position changes, i.e. when the target enters\n   * or leaves the root.\n   *\n   * Unless {@link OnViewOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current view if it matches this\n   * set of options*.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking position across root\n   * using {@link trackView}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or the options are invalid.\n   */\n  readonly onView: (\n    target: ViewTarget,\n    handler: OnViewHandler,\n    options?: OnViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offView: (target: ViewTarget, handler: OnViewHandler) => void;\n\n  /**\n   * This does more than just {@link onView}. The difference is that in\n   * addition to a change of {@link View}, such as the target entering or\n   * leaving the ViewWatcher's {@link ViewWatcherConfig.root | root} (by\n   * default the viewport), the handler is also called each time the target's\n   * relative view changes _while inside the root_.\n   *\n   * A change of relative position happens when:\n   * - the target is resized\n   * - the root is resized\n   * - the any of the target's scrollable ancestors is scrolled\n   * - the target's attributes changed that resulted in a change of position\n   *\n   * All of the above are accounted for. Internally it uses\n   * {@link ScrollWatcher}, {@link DOMWatcher} and {@link SizeWatcher} to keep\n   * track of all of this.\n   *\n   * If the target is leaves the ViewWatcher's\n   * {@link ViewWatcherConfig.root | root}, the handler will be called with\n   * the {@link ViewData}, and the above events will stop being tracked until\n   * the target enters the watcher's root again.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates the following set of CSS variables on the target's style and\n   * represent its relative position:\n   *\n   * - `--lisn-js--r-top`\n   * - `--lisn-js--r-bottom`\n   * - `--lisn-js--r-left`\n   * - `--lisn-js--r-right`\n   * - `--lisn-js--r-width`\n   * - `--lisn-js--r-height`\n   * - `--lisn-js--r-h-middle`\n   * - `--lisn-js--r-v-middle`\n   *\n   * See {@link ViewData.relative} for an explanation of each.\n   *\n   * Note that only Element targets are supported here and not offsets.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or \"views\" are invalid.\n   */\n  readonly trackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n    options?: TrackViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackView}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n  ) => void;\n\n  /**\n   * Get the current view relative to the target. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param {} realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                    this only when doing realtime scroll-based animations\n   *                    as it may cause a forced layout.\n   */\n  readonly fetchCurrentView: (\n    target: ViewTarget,\n    realtime?: boolean,\n  ) => Promise<ViewData>;\n\n  /**\n   * Creates a new instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: ViewWatcherConfig = {}) {\n    return new ViewWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing  instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: ViewWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new ViewWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ViewWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ViewWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ViewWatcher\", logAtCreation: config })\n      : null;\n\n    const allViewData = MH.newWeakMap<Element, ViewData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<\n        OnViewHandler,\n        {\n          _callback: OnViewCallback;\n          _trackType: TrackType;\n          _options: OnViewOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      debug: logger?.debug9(`Got ${entries.length} new entries`, entries);\n\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    const observeOptions = {\n      root: config._root,\n      threshold: config._threshold,\n      rootMargin: config._rootMargin,\n    };\n\n    const xObserver = new XIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    // ----------\n\n    const fetchCurrentView = (\n      element: Element,\n      realtime = false,\n    ): Promise<ViewData> => {\n      const fetchData = async (\n        entryOrElement: IntersectionObserverEntry | Element,\n      ) => {\n        const intersection = await fetchIntersectionData(\n          config,\n          entryOrElement,\n          realtime,\n        );\n        const data = await fetchViewData(intersection, realtime);\n        return data;\n      };\n\n      if (realtime) {\n        return fetchData(element);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp IntersectionObserver\n        const observer = MH.newIntersectionObserver((entries) => {\n          const promise = fetchData(entries[0]);\n          observer.disconnect();\n          promise.then(resolve);\n        }, observeOptions);\n\n        observer.observe(element);\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n      trackType: TrackType,\n    ): OnViewCallback => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      allCallbacks.sGet(element).set(handler, {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      });\n\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      userOptions: (OnViewOptions & TrackViewOptions) | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOptions(config._root, target, userOptions);\n      const element = options._element;\n\n      const callback = createCallback(handler, options, trackType);\n\n      // View watcher should be used before the DOM is loaded since the initial\n      // size of the root may be 0 or close to 0 and would lead to premature\n      // triggering.\n      await waitForInteractive();\n\n      // Initial call doesn't need to be realtime, and best to use an actual\n      // IntersectionObserverEntry for that one.\n      let viewData = await fetchCurrentView(element);\n\n      if (\n        viewData.rootBounds[MC.S_WIDTH] === 0 &&\n        viewData.rootBounds[MC.S_HEIGHT] === 0\n      ) {\n        // Possibly the root is being setup now, wait for one AF\n        debug: logger?.debug5(\n          \"Got zero root size, deferring for a bit\",\n          config._root,\n        );\n        await waitForSubsequentMeasureTime();\n        viewData = await fetchCurrentView(element);\n      }\n\n      if (trackType === TRACK_FULL) {\n        // Detect resize or scroll\n        await setupInviewTrack(options, callback, viewData);\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      // Always use observeLater to skip the initial call from the\n      // IntersectionObserver, and call callbacks that have skipInitial: false\n      // here. Otherwise, we can't tell from inside the intersectionHandler whether\n      // a callback wants to skip its initial call or not.\n      //\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, viewData);\n        if (viewsToBitmask(viewData.views) & options._viewsBitmask) {\n          await invokeCallback(callback, element, viewData);\n        }\n      }\n    };\n\n    // ----------\n\n    const removeOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      trackType: TrackType,\n    ) => {\n      // For time sync, so that if called immediately after onView without\n      // awaiting, it will remove the callback that is about to be added.\n      // But if no such handler has been added we may unnecessarily\n      // create an overlay... TODO\n      const options = await fetchOptions(config._root, target, {});\n      const element = options._element;\n\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setViewCssProps) {\n          // delete the properties\n          setViewCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n    ) => {\n      const element = options._element;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n\n        xObserver.unobserve(element);\n        MH.deleteKey(allViewData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = async (entry: IntersectionObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      // This doesn't need to be \"realtime\", since IntersectionObserver alone\n      // introduces a delay.\n      const intersection = await fetchIntersectionData(config, entry);\n      const latestData = await fetchViewData(intersection);\n      debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n      const viewsBitmask = viewsToBitmask(latestData.views);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        if (viewsBitmask & entry._options._viewsBitmask) {\n          invokeCallback(entry._callback, element, latestData);\n        }\n      }\n    };\n\n    // ----------\n\n    const setupInviewTrack = async (\n      options: OnViewOptionsInternal,\n      viewCallback: OnViewCallback,\n      viewData: ViewData,\n    ) => {\n      const element = options._element;\n      debug: logger?.debug8(\n        \"Setting up size, scroll and attribute tracking\",\n        element,\n      );\n\n      const sizeWatcher = SizeWatcher.reuse();\n      const scrollWatcher = ScrollWatcher.reuse();\n      const realtime = options._debounceWindow === 0;\n\n      // Detect when target's class or style attribute change\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      // We need to remove the tracking callback when target leaves view and re-add\n      // it when it enters view. But the OnViewCallback that is associated may have\n      // already been added prior, by calling onView with this handler, so we can't\n      // always wrap around it, in order to detect when it's called with a change\n      // of view. So we setup another OnViewCallback tied to the tracking callback.\n      let isInview = false;\n\n      let removeTrackCallback: (() => void) | null = null;\n\n      // Finds any scrollable ancestors of the element and detect scroll on them.\n      const scrollableAncestors = await fetchScrollableAncestors(\n        element,\n        realtime,\n      );\n      if (viewCallback.isRemoved()) {\n        return;\n      }\n\n      const addTrackCallback = () => {\n        const trackCallback = wrapCallback(async () => {\n          const prevData = allViewData.get(element);\n\n          // Get the latest view data for the target\n          const latestData = await fetchCurrentView(element, realtime);\n          debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n          const changed = viewChanged(latestData, prevData);\n          if (changed) {\n            // When comparing for changes, we round the numbers to certain number\n            // of decimal places, and allViewData serves as a \"last threshold\"\n            // state, so only update it if there was a significant change.\n            // Otherwise very quick changes in small increments would get\n            // rejected as \"no change\".\n            allViewData.set(element, latestData);\n\n            if (isInview && !viewCallback.isRemoved()) {\n              // Could have been removed during the debounce window\n              await invokeCallback(viewCallback, element, latestData);\n            }\n          } else {\n            debug: logger?.debug9(\"ViewData same as last\");\n          }\n        });\n\n        // TODO Is there a better way to detect when it's moved?\n        viewCallback.onRemove(trackCallback.remove);\n        removeTrackCallback = trackCallback.remove;\n\n        // Detect when target's class or style attribute change\n        domWatcher.onMutation(trackCallback, {\n          categories: [MC.S_ATTRIBUTE],\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when target is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: element,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the root is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: config._root ?? MH.getWindow(),\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the target's scrollable ancestors are scrolled (this\n        // will almost certainly include the main scrollable element).\n        for (const ancestor of scrollableAncestors) {\n          scrollWatcher.onScroll(trackCallback, {\n            scrollable: ancestor,\n            [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n            threshold: options._scrollThreshold,\n            [MC.S_SKIP_INITIAL]: true,\n          });\n        }\n      };\n\n      const enterOrLeaveCallback = createCallback(\n        (target__ignored, viewData) => {\n          if (viewData.views[0] === MC.S_AT) {\n            if (!isInview) {\n              isInview = true;\n              addTrackCallback();\n            }\n          } else if (removeTrackCallback) {\n            isInview = false;\n            removeTrackCallback();\n            removeTrackCallback = null;\n          }\n        },\n        MH.assign(options, {\n          _viewsBitmask: VIEWS_SPACE.bitmask,\n        }),\n        TRACK_REGULAR,\n      );\n\n      viewCallback.onRemove(enterOrLeaveCallback.remove);\n\n      allViewData.set(element, viewData); // to avoid duplicate initial call\n      // Setup the track and the \"inView\" state\n      if (!enterOrLeaveCallback.isRemoved()) {\n        invokeCallback(enterOrLeaveCallback, element, viewData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentView = (target, realtime = false) =>\n      fetchElement(config._root, target).then((element) =>\n        fetchCurrentView(element, realtime),\n      );\n\n    // ----------\n\n    this.trackView = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      return setupOnView(element, handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackView = (element, handler?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      removeOnView(element, handler, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onView = (target, handler, options?) =>\n      setupOnView(target, handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offView = (target, handler) =>\n      removeOnView(target, handler, TRACK_REGULAR); // no need to await\n  }\n}\n\n/**\n * @interface\n */\nexport type ViewWatcherConfig = {\n  /**\n   * The root element to use for the IntersectionObserver.\n   *\n   * **NOTE:** If the target you want to observe (via\n   * {@link ViewWatcher.onView}) is inside a scrolling element, then you should\n   * probably set the watcher's root to be that scrolling element or a wrapper\n   * around it. However, even if you don't or can't do that, the watcher will\n   * try to be smart about that, and when the target is no longer intercepting\n   * because it's scrolled outside its scrolling container, and yet its\n   * bounding box is still inside the watcher root (e.g. the viewport) the\n   * watcher will determine the relative view based on the scrolling container\n   * and not the actual watcher root.\n   *\n   * @defaultValue null\n   */\n  root?: Element | null;\n\n  /**\n   * The rootMargin to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue \"0px 0px 0px 0px\"\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue 0\n   */\n  threshold?: number | number[];\n};\n\n/**\n * @interface\n */\nexport type OnViewOptions = {\n  /**\n   * Specifies a list of {@link View}s to target for.\n   *\n   * The handler will only be called if there is a change of view relative to\n   * the target that matches the given ones.\n   *\n   * It can be a comma-separated list of \"views\" or an array of such names.\n   *\n   * @defaultValue undefined\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * @interface\n */\nexport type TrackViewOptions = {\n  /**\n   * Use this debounce window for the {@link ScrollWatcher} and\n   * {@link SizeWatcher} involved in the view tracking.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts during scroll, but you probably need this when\n   * doing scroll-based animations.\n   *\n   * @defaultValue undefined // ScrollWatcher and SizeWatcher defaults\n   */\n  debounceWindow?: number;\n\n  /**\n   * Use this resize threshold for the {@link SizeWatcher} involved in the view\n   * tracking.\n   *\n   * @defaultValue undefined // SizeWatcher default\n   */\n  resizeThreshold?: number;\n\n  /**\n   * Use this scroll threshold for the {@link ScrollWatcher} involved in the\n   * view tracking.\n   *\n   * @defaultValue undefined // ScrollWatcher default\n   */\n  scrollThreshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - The element that is the target of the IntersectionObserver. If the call to\n *   {@link ViewWatcher.onView} specified an element as the target, it will be\n *   the same. If it specified an offset, then the element passed to the\n *   callback will be an absolutely positioned trigger overlay that's created\n *   as a result.\n * - the {@link ViewData} for relative to the target\n */\nexport type OnViewHandlerArgs = [Element, ViewData];\nexport type OnViewCallback = Callback<OnViewHandlerArgs>;\nexport type OnViewHandler = CallbackHandler<OnViewHandlerArgs> | OnViewCallback;\n\nexport type ViewData = {\n  isIntersecting: boolean;\n\n  targetBounds: BoundingRect;\n\n  rootBounds: BoundingRect;\n\n  /**\n   * The current view or views of the target. There would be two views given\n   * only if the target is _not_ in view and it's diagonally across from the\n   * root, e.g. both below and to the right.\n   */\n  views: [View, View?];\n\n  /**\n   * This is the target's position relative to the\n   * {@link ViewWatcherConfig.root | root} with values relative to the root\n   * size.\n   *\n   * It is like the {@link targetBounds} except that each quantity is scaled by\n   * the root's width or height, and having two additional computed values.\n   */\n  relative: {\n    x: number;\n    y: number;\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n    width: number;\n    height: number;\n\n    /**\n     * Average of the relative left and right.\n     */\n    hMiddle: number;\n\n    /**\n     * Average of the relative top and bottom.\n     */\n    vMiddle: number;\n  };\n};\n\n// ----------------------------------------\n\ntype ViewWatcherConfigInternal = {\n  _root: Element | null;\n  _rootMargin: string;\n  _threshold: number | number[];\n};\n\ntype OnViewOptionsInternal = {\n  _element: Element;\n  _viewsBitmask: number;\n  _debounceWindow: number | undefined;\n  _resizeThreshold: number | undefined;\n  _scrollThreshold: number | undefined;\n};\n\ntype IntersectionData = {\n  _target: Element;\n  _targetBounds: BoundingRect;\n  _root: Element | null;\n  _rootMargins: [number, number, number, number];\n  _rootBounds: BoundingRect;\n  _isIntersecting: boolean | null; // null means unknown, no IntersectionObserverEntry\n  _isCrossOrigin: boolean | null; // null means unknown, no IntersectionObserverEntry\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, ViewWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (\n  config: ViewWatcherConfig | undefined,\n): ViewWatcherConfigInternal => {\n  return {\n    _root: config?.root || null,\n    _rootMargin: config?.rootMargin ?? \"0px 0px 0px 0px\",\n    _threshold: config?.threshold || 0,\n  };\n};\n\nconst TRACK_REGULAR = 1; // only entering/leaving root\nconst TRACK_FULL = 2; // entering/leaving + moving across (fine-grained)\n\n// --------------------\n\nconst fetchOptions = async (\n  root: Element | null,\n  target: ViewTarget,\n  options: (OnViewOptions & TrackViewOptions) | undefined,\n): Promise<OnViewOptionsInternal> => {\n  return {\n    _element: await fetchElement(root, target),\n    _viewsBitmask: getViewsBitmask(options?.views),\n    _debounceWindow: options?.debounceWindow,\n    _resizeThreshold: options?.resizeThreshold,\n    _scrollThreshold: options?.scrollThreshold,\n  };\n};\n\nconst fetchScrollableAncestors = async (\n  element: Element,\n  realtime: boolean,\n) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollableAncestors = [];\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = getClosestScrollable(ancestor, { active: true }))) {\n    scrollableAncestors.push(ancestor);\n  }\n\n  return scrollableAncestors;\n};\n\nconst viewChanged = (latestData: ViewData, prevData: ViewData | undefined) =>\n  !prevData ||\n  viewsToBitmask(prevData.views) !== viewsToBitmask(latestData.views) ||\n  !compareValuesIn(\n    MH.copyBoundingRectProps(prevData.targetBounds),\n    MH.copyBoundingRectProps(latestData.targetBounds),\n  ) ||\n  !compareValuesIn(prevData.rootBounds, latestData.rootBounds) ||\n  !compareValuesIn(prevData.relative, latestData.relative);\n\nconst viewsToBitmask = (views: [View, View?]) =>\n  VIEWS_SPACE.bit[views[0]] | (views[1] ? VIEWS_SPACE.bit[views[1]] : 0);\n\nconst fetchIntersectionData = async (\n  config: ViewWatcherConfigInternal,\n  entryOrTarget: IntersectionObserverEntry | Element,\n  realtime = false,\n): Promise<IntersectionData> => {\n  const root = config._root;\n  const vpSize = await fetchViewportSize(realtime);\n  const rootMargins = toMargins(config._rootMargin, vpSize);\n\n  let target: Element;\n  let targetBounds: BoundingRect;\n  let rootBounds: BoundingRect | null = null;\n  let isIntersecting: boolean | null = null;\n  let isCrossOrigin: boolean | null = null;\n\n  if (MH.isInstanceOf(entryOrTarget, IntersectionObserverEntry)) {\n    target = entryOrTarget.target;\n    targetBounds = entryOrTarget.boundingClientRect;\n    rootBounds = entryOrTarget.rootBounds;\n    isIntersecting = entryOrTarget.isIntersecting;\n    isCrossOrigin = !entryOrTarget.rootBounds;\n  } else {\n    target = entryOrTarget;\n    targetBounds = await fetchBounds(target, realtime);\n  }\n\n  if (!rootBounds) {\n    rootBounds = await fetchBounds(root, realtime, rootMargins);\n  }\n\n  return {\n    _target: target,\n    _targetBounds: targetBounds,\n    _root: root,\n    _rootMargins: rootMargins,\n    _rootBounds: rootBounds,\n    _isIntersecting: isIntersecting,\n    _isCrossOrigin: isCrossOrigin,\n  };\n};\n\nconst fetchBounds = async (\n  root: Element | null,\n  realtime: boolean,\n  rootMargins?: [number, number, number, number],\n): Promise<BoundingRect> => {\n  let rect: BoundingRect;\n\n  if (root) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    rect = MH.copyBoundingRectProps(MH.getBoundingClientRect(root));\n  } else {\n    const { width, height } = await fetchViewportSize(realtime);\n    rect = {\n      x: 0,\n      left: 0,\n      right: width,\n      width,\n      y: 0,\n      top: 0,\n      bottom: height,\n      height,\n    };\n  }\n\n  if (rootMargins) {\n    rect.x = rect[MC.S_LEFT] -= rootMargins[3];\n    rect[MC.S_RIGHT] += rootMargins[1];\n    rect[MC.S_WIDTH] += rootMargins[1] + rootMargins[3];\n\n    rect.y = rect[MC.S_TOP] -= rootMargins[0];\n    rect[MC.S_BOTTOM] += rootMargins[2];\n    rect[MC.S_HEIGHT] += rootMargins[0] + rootMargins[2];\n  }\n\n  return rect;\n};\n\nconst fetchViewData = async (\n  intersection: IntersectionData,\n  realtime = false,\n): Promise<ViewData> => {\n  const vpSize = await fetchViewportSize(realtime);\n  const vpHeight = vpSize[MC.S_HEIGHT];\n  const vpWidth = vpSize[MC.S_WIDTH];\n\n  const views = await fetchViews(intersection, realtime);\n\n  const relative = MH.merge(\n    { hMiddle: NaN, vMiddle: NaN },\n    MH.copyBoundingRectProps(intersection._targetBounds),\n  );\n\n  relative.y /= vpHeight;\n  relative[MC.S_TOP] /= vpHeight;\n  relative[MC.S_BOTTOM] /= vpHeight;\n  relative[MC.S_HEIGHT] /= vpHeight;\n\n  relative.x /= vpWidth;\n  relative[MC.S_LEFT] /= vpWidth;\n  relative[MC.S_RIGHT] /= vpWidth;\n  relative[MC.S_WIDTH] /= vpWidth;\n\n  relative.hMiddle = (relative[MC.S_LEFT] + relative[MC.S_RIGHT]) / 2;\n  relative.vMiddle = (relative[MC.S_TOP] + relative[MC.S_BOTTOM]) / 2;\n\n  const viewData: ViewData = {\n    isIntersecting: intersection._isIntersecting ?? views[0] === MC.S_AT,\n    targetBounds: intersection._targetBounds,\n    rootBounds: intersection._rootBounds,\n    views,\n    relative,\n  };\n\n  return viewData;\n};\n\nconst fetchViews = async (\n  intersection: IntersectionData,\n  realtime: boolean,\n  useScrollingAncestor?: Element,\n): Promise<[View, View?]> => {\n  if (intersection._isIntersecting) {\n    return [MC.S_AT];\n  }\n\n  let rootBounds: BoundingRect;\n  if (useScrollingAncestor) {\n    rootBounds = await fetchBounds(\n      useScrollingAncestor,\n      realtime,\n      intersection._rootMargins,\n    );\n  } else {\n    rootBounds = intersection._rootBounds;\n  }\n\n  const targetBounds = intersection._targetBounds;\n  const delta = {\n    _left: rootBounds[MC.S_LEFT] - targetBounds[MC.S_LEFT],\n    _right: targetBounds[MC.S_RIGHT] - rootBounds[MC.S_RIGHT],\n    _top: rootBounds[MC.S_TOP] - targetBounds[MC.S_TOP],\n    _bottom: targetBounds[MC.S_BOTTOM] - rootBounds[MC.S_BOTTOM],\n  };\n\n  let xView: View | null = null;\n  let yView: View | null = null;\n  if (delta._left > 0 && delta._right > 0) {\n    // Target is wider than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    xView = delta._left > delta._right ? MC.S_RIGHT : MC.S_LEFT;\n  } else if (delta._left > 0) {\n    // Target is to the left of the root\n    xView = MC.S_RIGHT;\n  } else if (delta._right > 0) {\n    // Target is to the right of the root\n    xView = MC.S_LEFT;\n  } // else target is horizontally contained in root, see below\n\n  if (delta._top > 0 && delta._bottom > 0) {\n    // Target is taller than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    yView = delta._top > delta._bottom ? MC.S_BELOW : MC.S_ABOVE;\n  } else if (delta._top > 0) {\n    // Target is above the root\n    yView = MC.S_BELOW;\n  } else if (delta._bottom > 0) {\n    // Target is below the root\n    yView = MC.S_ABOVE;\n  } // else target is vertically contained in root, see below\n\n  if (xView && yView) {\n    // diagonally out of vide\n    return [xView, yView];\n  } else if (xView) {\n    // horizontally out of vide\n    return [xView];\n  } else if (yView) {\n    // vertically out of vide\n    return [yView];\n  }\n\n  // The target is contained in the root bounds and yet isIntersecting was\n  // not true. This means that either:\n  //\n  // 1. It may be intersecting, but we didn't get an actual\n  //    IntersectionObserverEntry and we don't know if it's intersecting\n  //    or not\n  // 2. The target is inside a scrolling element that is _not_ being used as\n  //    the observer root, and the target has scrolled out of the scrollable\n  //    bounds but still inside the viewport\n  // 3. We're inside a cross-origin iFrame and the iFrame is partially or\n  //    fully not-intersecting\n\n  if (!intersection._isCrossOrigin) {\n    // This is case 1. or 2. => get the views relative to the closest\n    // scrollable ancestor relative to which it is _not_ intersecting, if\n    // any. If it's nested inside several scrolling elements, we'll end up\n    // looping over each one until we find the one for which the target is\n    // outside its box.\n    //\n    // It is too risky to use active isScrollable check here since we could be\n    // inside an onScroll handler, so just use passive.\n    const scrollingAncestor = getClosestScrollable(\n      useScrollingAncestor ?? intersection._target,\n    );\n\n    if (scrollingAncestor) {\n      return fetchViews(intersection, realtime, scrollingAncestor);\n    }\n  }\n\n  // Either case 3. (cross-origin iframe outside the viewport) or case 1. and\n  // the target is actually intersecting the root. Either way, it's to be\n  // considered in-view of its root.\n  return [MC.S_AT];\n};\n\nconst setViewCssProps = (\n  element: Element,\n  viewData: ViewData | undefined | null,\n) => {\n  const relative: Record<string, number> = viewData?.relative || {};\n  const props = {\n    top: relative.top,\n    bottom: relative.bottom,\n    left: relative.left,\n    right: relative.right,\n    [MC.S_WIDTH]: relative[MC.S_WIDTH],\n    [MC.S_HEIGHT]: relative[MC.S_HEIGHT],\n    hMiddle: relative.hMiddle,\n    vMiddle: relative.vMiddle,\n  };\n  setNumericStyleProps(element, props, { _prefix: \"r-\", _numDecimal: 4 }); // don't await here\n};\n\nconst fetchElement = async (\n  root: Element | null,\n  target: ViewTarget,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  } else if (!MH.isString(target)) {\n    throw MH.usageError(\n      \"'target' must be an offset string or an HTMLElement | SVGElement | MathMLElement\",\n    );\n  }\n\n  const overlayOptions = getOverlayOptions(root, target);\n  return await createOverlay(overlayOptions);\n};\n\nconst getOverlayOptions = (\n  root: Element | null,\n  target: string,\n): OverlayOptions => {\n  const { reference, value } = parseScrollOffset(target);\n\n  let ovrDimension: \"width\" | \"height\";\n  if (reference === MC.S_TOP || reference === MC.S_BOTTOM) {\n    ovrDimension = MC.S_WIDTH;\n  } else if (reference === MC.S_LEFT || reference === MC.S_RIGHT) {\n    ovrDimension = MC.S_HEIGHT;\n  } else {\n    throw MH.usageError(`Invalid offset reference: '${reference}'`);\n  }\n\n  return {\n    parent: MH.isHTMLElement(root) ? root : undefined,\n    style: {\n      [reference]: value,\n      [ovrDimension]: \"100%\",\n    },\n  };\n};\n\nconst invokeCallback = (\n  callback: OnViewCallback,\n  element: Element,\n  viewData: ViewData,\n) => callback.invoke(element, MH.copyObject(viewData)).catch(logError);\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport { settings } from \"@lisn/globals/settings\";\nsettings.autoWidgets = true;\n\nexport { settings } from \"@lisn/globals/settings\";\nexport * as watchers from \"@lisn/watchers/index\";\n","/**\n * ## Specification for the HTML API for widgets\n *\n * The following describes the general syntax when using the HTML API for\n * automatic creation of widgets based on data attributes\n * ({@link Settings.settings.autoWidgets | settings.autoWidgets} must be true.\n *\n * A widget specification should be given as a\n * `data-lisn-<WidgetName>=\"<WidgetConfList>\"` attribute.\n *\n * Alternatively, if using all default configurations, you can simply add the\n * `lisn-<WidgetName>` CSS class. Specifying a configuration using CSS classes\n * is not currently possible for widgets, only triggers.\n *\n * The general specification for a widget is of the form:\n *\n * ```\n * <WidgetConfList> ::= <WidgetConf> { \";\" <WidgetConf> }\n *\n * <WidgetConf> ::= [ <WidgetOption> { \"|\" <WidgetOption> } ]\n *\n * <WidgetOption> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n * ```\n *\n * **NOTE:**\n *\n * There can be 0 or more spaces around any of the separator characters.\n *\n * Not all widgets support multiple instances per single element and therefore\n * multiple configurations. Refer to the specific widget.\n *\n * The characters \"|\", \";\", \"=\" are reserved separators and cannot be used\n * literally as part of an option value.\n *\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { hasClass, getData } from \"@lisn/utils/css-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { toArrayIfSingle } from \"@lisn/utils/misc\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString, kebabToCamelCase, splitOn } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { DOMWatcher } from \"@lisn/watchers/dom-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\nexport class Widget {\n  /**\n   * Disables the functionality of the widget. What this means is specific to\n   * each widget.\n   */\n  readonly disable: () => Promise<void>;\n\n  /**\n   * Re-enables the functionality of the widget. What this means is specific to\n   * each widget.\n   */\n  readonly enable: () => Promise<void>;\n\n  /**\n   * Re-enables the widget if disabled, otherwise disables it.\n   */\n  readonly toggleEnable: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is disabled.\n   */\n  readonly onDisable: (handler: WidgetHandler) => void;\n\n  /**\n   * The given handler will be called when the widget is enabled.\n   */\n  readonly onEnable: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is currently disabled.\n   */\n  readonly isDisabled: () => boolean;\n\n  /**\n   * Undoes all modifications to the element and returns it to its original state.\n   *\n   * You will need to recreate it if you want to enable its functionality again.\n   */\n  readonly destroy: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is destroyed.\n   */\n  readonly onDestroy: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is destroyed.\n   */\n  readonly isDestroyed: () => boolean;\n\n  /**\n   * Returns the element passed to the widget constructor.\n   */\n  readonly getElement: () => Element;\n\n  /**\n   * Retrieve an existing widget by element and ID.\n   */\n  static get(element: Element, id: string): Widget | null {\n    return instances.get(element)?.get(id) || null;\n  }\n\n  /**\n   * **IMPORTANT:** If ID is given and there's already a widget with this ID on\n   * this element, it will be destroyed!\n   */\n  constructor(element: Element, config?: { id?: string }) {\n    const logger = debug\n      ? new debug.Logger({\n          name: `${this.constructor.name}-${formatAsString(element)}`,\n          logAtCreation: this,\n        })\n      : null;\n\n    const id = config?.id;\n    if (id) {\n      instances.get(element)?.get(id)?.destroy(); // don't await here\n      instances.sGet(element).set(id, this);\n    }\n\n    let isDisabled = false;\n    let isDestroyed = false;\n    let destroyPromise: Promise<void>;\n\n    const enableCallbacks = MH.newSet<WidgetCallback>();\n    const disableCallbacks = MH.newSet<WidgetCallback>();\n    const destroyCallbacks = MH.newSet<WidgetCallback>();\n\n    this.disable = async () => {\n      if (!isDisabled) {\n        debug: logger?.debug8(\"Disabling\");\n        isDisabled = true;\n\n        for (const callback of disableCallbacks) {\n          await callback.invoke(this);\n        }\n      }\n    };\n\n    this.enable = async () => {\n      if (!isDestroyed && isDisabled) {\n        debug: logger?.debug8(\"Enabling\");\n        isDisabled = false;\n\n        for (const callback of enableCallbacks) {\n          await callback.invoke(this);\n        }\n      }\n    };\n\n    this.toggleEnable = async () => {\n      if (!isDestroyed) {\n        await (isDisabled ? this.enable : this.disable)();\n      }\n    };\n\n    this.onDisable = (handler) => disableCallbacks.add(wrapCallback(handler));\n    this.onEnable = (handler) => enableCallbacks.add(wrapCallback(handler));\n\n    this.isDisabled = () => isDisabled;\n\n    this.destroy = () => {\n      if (!destroyPromise) {\n        destroyPromise = (async () => {\n          debug: logger?.debug8(\"Destroying\");\n          isDestroyed = true;\n          await this.disable();\n\n          for (const callback of destroyCallbacks) {\n            await callback.invoke(this);\n          }\n\n          enableCallbacks.clear();\n          disableCallbacks.clear();\n          destroyCallbacks.clear();\n\n          if (id) {\n            const elInstances = instances.get(element);\n            if (elInstances?.get(id) === this) {\n              MH.deleteKey(elInstances, id);\n              instances.prune(element);\n            }\n          }\n        })();\n      }\n\n      return destroyPromise;\n    };\n\n    this.onDestroy = (handler) => destroyCallbacks.add(wrapCallback(handler));\n\n    this.isDestroyed = () => isDestroyed;\n\n    this.getElement = () => element;\n  }\n}\n\nexport type WidgetCallbackArgs = [Widget];\nexport type WidgetCallback = Callback<WidgetCallbackArgs>;\nexport type WidgetHandler =\n  | WidgetCallback\n  | CallbackHandler<WidgetCallbackArgs>;\n\n/**\n * **NOTE:** If the function returns a widget or a list of widgets created for\n * the given element, then each one will be automatically destroyed if the\n * element is removed from the DOM.\n */\nexport type WidgetCreateFn<Config extends Record<string, unknown>> = (\n  element: Element,\n  config?: Config,\n) => Widget | Widget[] | null | Promise<Widget | Widget[] | null>;\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidatorObject<\n  Config extends Record<string, unknown>,\n> = {\n  [K in keyof Config]: (key: K, v: unknown) => Config[K];\n};\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigAsyncValidatorObject<\n  Config extends Record<string, unknown>,\n> = {\n  [K in keyof Config]: (key: K, v: unknown) => Config[K] | Promise<Config[K]>;\n};\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidatorFunc<Config extends Record<string, unknown>> =\n  (\n    element: Element,\n  ) =>\n    | WidgetConfigValidatorObject<Config>\n    | WidgetConfigAsyncValidatorObject<Config>;\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidator<Config extends Record<string, unknown>> =\n  | WidgetConfigValidatorObject<Config>\n  | WidgetConfigValidatorFunc<Config>;\n\n/**\n * Enables automatic setting up of a widget from an elements matching the given\n * selector.\n *\n * If {@link settings.autoWidgets} is true, nothing is done. Otherwise,\n * when an element matching the selector is added to the DOM, `newWidget` will\n * be called and it's expected to setup the widget.\n *\n * **IMPORTANT:** The widget that is returned by `newWidget` will be\n * automatically destroyed when the element that created them is removed from\n * the DOM.\n *\n * **IMPORTANT:** If a widget by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param {} name       The name of the widget. Should be in kebab-case.\n * @param {} newWidget  Called for every element matching the widget selector.\n * @param {} configValidator\n *                      A validator object, or a function that returns such an\n *                      object, for all options supported by the widget. If\n *                      given, then the `newWidget` function will also be\n *                      passed a configuration object constructed from the\n *                      element's data attribute.\n * @param {} [options.selector]\n *                      The selector to match elements for. If not given, then\n *                      uses a default value of `[data-lisn-<name>], .lisn-<name>`\n * @param {} [options.supportsMultiple]\n *                      If true, and if `configValidator` is given, then the\n *                      value of the element's widget specific data attribute\n *                      will be split on \";\" and each one parsed individually\n *                      as a configuration. Then the `newWidget` function will\n *                      be called once for each configuration.\n */\nexport const registerWidget = async <Config extends Record<string, unknown>>(\n  name: string,\n  newWidget: WidgetCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n  options?: {\n    selector?: string;\n    supportsMultiple?: boolean;\n  },\n) => {\n  if (registeredWidgets.has(name)) {\n    return;\n  }\n\n  registeredWidgets.add(name);\n\n  // init after DOM loaded so that the settings can be configured by the user\n  // straight after loading LISN.js\n  await waitForInteractive();\n\n  const prefixedName = MH.prefixName(name);\n  const selector = options?.selector ?? getDefaultWidgetSelector(prefixedName);\n\n  if (settings.autoWidgets) {\n    const domWatcher = DOMWatcher.reuse();\n    domWatcher.onMutation(\n      async (operation) => {\n        const element = MH.currentTargetOf(operation);\n        const thisConfigValidator = MH.isFunction(configValidator)\n          ? await configValidator(element)\n          : configValidator;\n\n        const widgets: Widget[] = [];\n        const configSpecs: string[] = [];\n        const dataAttr = getData(element, prefixedName);\n\n        if (options?.supportsMultiple) {\n          if (hasClass(element, prefixedName)) {\n            configSpecs.push(\"\");\n          }\n\n          if (dataAttr !== null) {\n            configSpecs.push(\n              ...(dataAttr ? splitOn(dataAttr, \";\", true) : [\"\"]),\n            );\n          }\n        } else {\n          configSpecs.push(dataAttr ?? \"\");\n        }\n\n        for (const spec of configSpecs) {\n          const config = thisConfigValidator\n            ? await fetchWidgetConfig(spec, thisConfigValidator)\n            : undefined;\n\n          const theseWidgets = await newWidget(element, config);\n          if (theseWidgets) {\n            widgets.push(...toArrayIfSingle(theseWidgets));\n          }\n        }\n\n        // auto-destroy on element remove\n        if (MH.lengthOf(widgets)) {\n          domWatcher.onMutation(\n            () => {\n              for (const w of widgets) {\n                w.destroy();\n              }\n            },\n            {\n              target: element,\n              categories: [MC.S_REMOVED],\n            },\n          );\n        }\n      },\n      {\n        selector,\n        categories: [MC.S_ADDED],\n      },\n    );\n  }\n};\n\n/**\n * Returns a configuration object from the given user input, which can be\n * either an object or a `<separator>` separated string of key=values.\n *\n * If `input` is a string, it must be of the format:\n *\n * ```\n * <UserConfigString> ::= <OptionSpec> { <Separator> <OptionSpec> }\n *\n * <OptionSpec> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n * ```\n *\n * By default, for widgets `<separator>` is \"|\".\n *\n * **NOTE:** If `input` is a string, option names will be converted from\n * kebab-case to camelCase.\n *\n * The given `validator` defines the shape of the returned object. It is called\n * for each entry _in the `validator` object_, with that key and the\n * corresponding value from the input configuration, as the two parameters.\n *\n * If a key is not found in the input, the value passed to the validating\n * function will be `undefined`.\n *\n * If the input is a string and a key has no value, the value passed to the\n * validating function will be an empty string `\"\"`.\n *\n * The final configuration contains all keys from the `validator` object with\n * the value that the validating function for each key returned.\n *\n * There are several built-in validating functions that you can make use of.\n *\n * @see {@link Utils.validateStrList}\n * @see {@link Utils.validateNumber}\n * @see {@link Utils.validateBoolean}\n * @see {@link Utils.validateString}\n * @see {@link Utils.validateBooleanOrString}\n */\nexport const getWidgetConfig = <Config extends Record<string, unknown>>(\n  input: Record<string, unknown> | string | null | undefined,\n  validator: WidgetConfigValidatorObject<Config>,\n  separator = \"|\",\n): Config => {\n  const config = {} as Config;\n  if (!(input instanceof Object)) {\n    input = toOptionsObject(input, separator);\n  }\n\n  for (const key in validator) {\n    config[key] = validator[key](key, input[key]);\n  }\n  return config;\n};\n\n/**\n * Like {@link getWidgetConfig} but it accepts an object whose validator\n * functions may return a promise.\n */\nexport const fetchWidgetConfig = async <Config extends Record<string, unknown>>(\n  input: Record<string, unknown> | string | null | undefined,\n  validator: WidgetConfigAsyncValidatorObject<Config>,\n  separator = \"|\",\n): Promise<Config> => {\n  const config = {} as Config;\n  const configPromises = getWidgetConfig<{\n    [K in keyof Config]: Config[K] | Promise<Config[K]>;\n  }>(input, validator, separator);\n\n  for (const key in configPromises) {\n    config[key] = await configPromises[key];\n  }\n\n  return config;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultWidgetSelector = (prefix: string) =>\n  `.${prefix},[data-${prefix}]`;\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchUniqueWidget = async <W extends Widget>(\n  name: string,\n  element: Element,\n  Type: { get: (element: Element) => W | null },\n): Promise<W | null> => {\n  let widget = Type.get(element);\n  if (!widget) {\n    await waitForDelay(0); // in case it's being processed now\n    widget = Type.get(element);\n\n    if (!widget) {\n      logWarn(`No ${name} widget for element ${formatAsString(element)}`);\n      return null;\n    }\n  }\n\n  return widget;\n};\n\nconst instances = newXWeakMap<Element, Map<string, Widget>>(() => MH.newMap());\nconst registeredWidgets = MH.newSet<string>();\n\n// --------------------\n\nconst toOptionsObject = (\n  input: string | null | undefined,\n  separator: string,\n) => {\n  const options: Record<string, string> = {};\n  for (const entry of MH.filter(\n    splitOn(input ?? \"\", separator, true),\n    (v) => !MH.isEmpty(v),\n  )) {\n    const [key, value] = splitOn(entry, /\\s*=\\s*/, true, 1);\n    options[kebabToCamelCase(key)] = value ?? \"\";\n  }\n  return options;\n};\n","/**\n * @module Actions\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { splitOn } from \"@lisn/utils/text\";\n\nimport { WidgetConfigValidator, fetchWidgetConfig } from \"@lisn/widgets/widget\";\n\n/**\n * @interface\n */\nexport type Action = {\n  do: () => void;\n  undo: () => void;\n  toggle: () => void;\n};\n\nexport type ActionCreateFn<Config extends Record<string, unknown>> = (\n  element: Element,\n  args: string[],\n  config?: Config,\n) => Action | Promise<Action>;\n\n/**\n * Registers the given action so that it can be parsed by\n * {@link Triggers.registerTrigger}.\n *\n * **IMPORTANT:** If an action by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param {} name      The name of the action. Should be in kebab-case.\n * @param {} newAction Called for every action specification for a trigger\n *                     parsed by {@link Triggers.registerTrigger}\n */\nexport const registerAction = <Config extends Record<string, unknown>>(\n  name: string,\n  newAction: ActionCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  if (registeredActions.has(name)) {\n    return;\n  }\n\n  const newActionFromSpec = async (\n    element: Element,\n    argsAndOptions: string,\n  ) => {\n    const thisConfigValidator = MH.isFunction(configValidator)\n      ? await configValidator(element)\n      : configValidator;\n\n    const args: string[] = [];\n    const config = thisConfigValidator\n      ? await fetchWidgetConfig(argsAndOptions, thisConfigValidator, \",\")\n      : undefined;\n\n    for (const entry of splitOn(argsAndOptions, \",\", true)) {\n      if (entry) {\n        if (!MH.includes(entry, \"=\")) {\n          args.push(entry);\n        }\n      }\n    }\n\n    return newAction(element, args, config);\n  };\n\n  registeredActions.set(name, newActionFromSpec);\n};\n\n/**\n * Returns an {@link Action} registered under the given name and instantiated\n * with the given element and arguments and options parsed from the given string.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given spec is not valid.\n */\nexport const fetchAction = async (\n  element: Element,\n  name: string,\n  argsAndOptions?: string,\n): Promise<Action> => {\n  const newActionFromSpec = registeredActions.get(name);\n  if (!newActionFromSpec) {\n    throw MH.usageError(`Unknown action '${name}'`);\n  }\n\n  return await newActionFromSpec(element, argsAndOptions || \"\");\n};\n\n// --------------------\n\nconst registeredActions = MH.newMap<\n  string,\n  (element: Element, spec: string) => Action | Promise<Action>\n>();\n","/**\n * @module Actions\n *\n * @categoryDescription Adding/removing class\n * {@link AddClass} and {@link RemoveClass} add or remove a list of CSS classes\n * to/from the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { addClasses, removeClasses, toggleClass } from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Adds or removes a list of CSS classes to/from the given element.\n *\n * **IMPORTANT:** When constructed, it removes all given classes from the\n * element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"add-class\".\n * - Accepted string arguments: one or more CSS classes\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@add-class: clsA, clsB\"></div>\n * ```\n *\n * @category Adding/removing class\n */\nexport class AddClass implements Action {\n  /**\n   * Adds the classes given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Removes the classes given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles each class given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"add-class\",\n      (element, classNames) => new AddClass(element, ...classNames),\n    );\n  }\n\n  constructor(element: Element, ...classNames: string[]) {\n    const { _add, _remove, _toggle } = getMethods(element, classNames);\n    _remove(); // initial state\n\n    this.do = _add;\n    this.undo = _remove;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Removes or adds a list of CSS classes to/from the given element.\n *\n * **IMPORTANT:** When constructed, it adds all given classes from the element\n * as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"remove-class\".\n * - Accepted string arguments: one or more CSS classes\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@remove-class: clsA, clsB\"></div>\n * ```\n *\n * @category Adding/removing class\n */\nexport class RemoveClass implements Action {\n  /**\n   * Removes the classes given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Adds the classes given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles each class given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"remove-class\",\n      (element, classNames) => new RemoveClass(element, ...classNames),\n    );\n  }\n\n  constructor(element: Element, ...classNames: string[]) {\n    const { _add, _remove, _toggle } = getMethods(element, classNames);\n    _add(); // initial state\n\n    this.do = _remove;\n    this.undo = _add;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element, classNames: string[]) => {\n  return {\n    _add: () => addClasses(element, ...classNames),\n\n    _remove: () => removeClasses(element, ...classNames),\n\n    _toggle: async () => {\n      for (const cls of classNames) {\n        await toggleClass(element, cls);\n      }\n    },\n  };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  addClassesNow,\n  removeClassesNow,\n  getData,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\n\n/**\n * @param {} webAnimationCallback This function is called for each\n *                                {@link https://developer.mozilla.org/en-US/docs/Web/API/Animation | Animation}\n *                                on the element. It {@link waitForMeasureTime}\n *                                before reading the animations.\n * @param {} legacyCallback       This function is called if the browser does\n *                                not support the Web Animations API. It is\n *                                called after {@link waitForMutateTime} so it\n *                                can safely modify styles.\n * @param {} realtime             If true, then it does not\n *                                {@link waitForMeasureTime} or\n *                                {@link waitForMutateTime} and runs\n *                                synchronously.\n *\n * @category Animations\n */\nexport const iterateAnimations = async (\n  element: Element,\n  webAnimationCallback: (animation: Animation) => void,\n  legacyCallback: (element: Element) => void,\n  realtime = false,\n) => {\n  /* istanbul ignore next */ // jsdom doesn't support Web Animations\n  if (\n    \"getAnimations\" in element &&\n    getData(element, MH.prefixName(\"test-legacy\")) === null\n  ) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    for (const animation of element.getAnimations()) {\n      webAnimationCallback(animation);\n    }\n\n    // Old browsers, no Animation API\n  } else {\n    if (!realtime) {\n      await waitForMutateTime();\n    }\n\n    legacyCallback(element);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const resetCssAnimationsNow = (element: Element) => {\n  addClassesNow(element, MC.PREFIX_ANIMATE_DISABLE); // cause it to reset\n  // If we remove the disable class immediately, then it will not have the\n  // effect to reset the animation, since the browser won't see any change in\n  // the classList at the start of the frame. So we ideally need to remove the\n  // disable class after the next paint. However, depending on the animation,\n  // and its state, disabling animation and waiting for the next animation\n  // frame may cause a visible glitch, so we need to force layout now.\n  /* eslint-disable-next-line @typescript-eslint/no-unused-expressions */\n  element[MC.S_CLIENT_WIDTH]; // forces layout\n\n  removeClassesNow(element, MC.PREFIX_ANIMATE_DISABLE);\n};\n","/**\n * @module Actions\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  iterateAnimations,\n  resetCssAnimationsNow,\n} from \"@lisn/utils/animations\";\nimport {\n  hasClass,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n} from \"@lisn/utils/css-alter\";\nimport { isPageReady, waitForPageReady } from \"@lisn/utils/dom-events\";\nimport { formatAsString } from \"@lisn/utils/text\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport debug from \"@lisn/debug/debug\";\nimport { LoggerInterface } from \"@lisn/debug/types\";\n\n/**\n * Plays or reverses all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it resets and pauses the animations as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@animate\"></div>\n * ```\n *\n * @category Animation\n */\nexport class Animate implements Action {\n  /**\n   * (Re)plays the animations forwards.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * (Re)plays the animations backwards.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Reverses the animations from its current direction.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate\", (element) => new Animate(element));\n  }\n\n  constructor(element: Element) {\n    const logger = debug\n      ? new debug.Logger({\n          name: `Animate-${formatAsString(element)}`,\n        })\n      : null;\n\n    // initial state is 0% and paused\n    animate(element, GO_FORWARD, logger, true);\n    let isFirst = true;\n\n    this.do = () => animate(element, GO_FORWARD, logger);\n    this.undo = () => animate(element, GO_BACKWARD, logger);\n    this[MC.S_TOGGLE] = () => {\n      const res = animate(element, isFirst ? GO_FORWARD : GO_TOGGLE, logger);\n      isFirst = false;\n      return res;\n    };\n  }\n}\n\n// --------------------\n\ntype AnimateDirection =\n  | typeof GO_FORWARD\n  | typeof GO_BACKWARD\n  | typeof GO_TOGGLE;\n\nconst GO_FORWARD = 0;\nconst GO_BACKWARD = 1;\nconst GO_TOGGLE = 2;\n\nconst animate = (\n  element: Element,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial = false,\n) => {\n  debug: logger?.debug8(\"Animating element\");\n  return iterateAnimations(\n    element,\n    /* istanbul ignore next */ // jsdom doesn't support Web Animations\n    (animation) => setupAnimation(animation, direction, logger, isInitial),\n    (element) => setupAnimationLegacy(element, direction, logger, isInitial),\n    isInitial,\n  );\n};\n\n/* istanbul ignore next */ // jsdom doesn't support Web Animations\nconst setupAnimation = (\n  animation: Animation,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  const pauseTillReady = !isPageReady();\n  const isBackward = animation.playbackRate === -1;\n\n  debug: logger?.debug9(\"Setting up animation\", animation, {\n    direction,\n    isBackward,\n  });\n\n  if (\n    direction === GO_TOGGLE ||\n    (direction === GO_FORWARD && isBackward) ||\n    (direction === GO_BACKWARD && !isBackward)\n  ) {\n    debug: logger?.debug9(\"Reversing animation\", animation.playState);\n    animation.reverse();\n  } else if (animation.playState === \"paused\") {\n    debug: logger?.debug9(\"Playing animation\", animation.playState);\n    animation.play();\n  } else {\n    debug: logger?.debug9(\n      \"Animation has played or is playing already\",\n      animation.playState,\n    );\n  }\n\n  if (isInitial || pauseTillReady) {\n    debug: logger?.debug9(\"Pausing animation\", animation.playState);\n    animation.pause();\n\n    if (!isInitial) {\n      // we were only pausing until ready\n      /* istanbul ignore next */\n      waitForPageReady().then(() => {\n        debug: logger?.debug9(\"Restarting animation\", animation.playState);\n        animation.play();\n      });\n    }\n  }\n\n  // If the element is moved (including if wrapped, such as by the ViewTrigger),\n  // this will cancel CSS animations and replace them with new running ones\n  if (MH.isInstanceOf(animation, CSSAnimation)) {\n    const cancelHandler = (event: AnimationPlaybackEvent) =>\n      onAnimationCancel(event, animation, direction, logger, isInitial);\n\n    animation.addEventListener(MC.S_CANCEL, cancelHandler);\n    animation.addEventListener(\"finish\", () =>\n      animation.removeEventListener(MC.S_CANCEL, cancelHandler),\n    );\n  }\n};\n\n/* istanbul ignore next */ // jsdom doesn't support Web Animations\nconst onAnimationCancel = (\n  event: AnimationPlaybackEvent,\n  animation: CSSAnimation,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  // setup again the new animation\n  debug: logger?.debug9(\"Animation cancelled, re-setting up new one\");\n  const target = MH.targetOf(event);\n  if (!MH.isInstanceOf(target, Animation)) {\n    return;\n  }\n\n  const effect = target.effect;\n  if (!MH.isInstanceOf(effect, KeyframeEffect)) {\n    return;\n  }\n\n  for (const newAnimation of MH.targetOf(effect)?.getAnimations() || []) {\n    if (\n      MH.isInstanceOf(newAnimation, CSSAnimation) &&\n      newAnimation.animationName === animation.animationName\n    ) {\n      setupAnimation(newAnimation, direction, logger, isInitial);\n      break;\n    }\n  }\n};\n\nconst setupAnimationLegacy = (\n  element: Element,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  const isBackward = hasClass(element, MC.PREFIX_ANIMATE_REVERSE);\n  const isPaused = hasClass(element, MC.PREFIX_ANIMATE_PAUSE);\n\n  const pauseTillReady = !isPageReady();\n\n  const goBackwards =\n    direction === GO_BACKWARD || (direction === GO_TOGGLE && !isBackward);\n\n  const doPause = isInitial || pauseTillReady;\n\n  debug: logger?.debug9(\"Setting up legacy animations\", element, {\n    direction,\n    isBackward,\n    isPaused,\n    goBackwards,\n    doPause,\n  });\n\n  if (goBackwards === isBackward && doPause === isPaused) {\n    // nothing to do\n    debug: logger?.debug9(\"No need to reset or pause animation\");\n    return;\n  }\n\n  resetCssAnimationsNow(element);\n\n  removeClassesNow(element, MC.PREFIX_ANIMATE_PAUSE, MC.PREFIX_ANIMATE_REVERSE);\n  addClassesNow(\n    element,\n    ...(goBackwards ? [MC.PREFIX_ANIMATE_REVERSE] : []),\n    ...(doPause ? [MC.PREFIX_ANIMATE_PAUSE] : []),\n  );\n\n  if (!isInitial && pauseTillReady) {\n    waitForPageReady().then(() =>\n      removeClasses(element, MC.PREFIX_ANIMATE_PAUSE),\n    );\n  }\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Animation\n * {@link AnimatePlay} and {@link AnimatePause} resume or pause all animations\n * on the given element. They work with CSS or Web Animations.\n *\n * {@link Actions.Animate | Animate} plays or reverses all animations on the\n * given element. It works with CSS or Web Animations.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  iterateAnimations,\n  resetCssAnimationsNow,\n} from \"@lisn/utils/animations\";\nimport {\n  hasClass,\n  addClassesNow,\n  removeClassesNow,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Resumes or pauses all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it resets and pauses the animations as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate-play\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Play/pause</button>\n * <div data-lisn-on-click=\"@animate-play +target=#btn\"></div>\n * ```\n *\n * @category Animation\n */\nexport class AnimatePlay implements Action {\n  /**\n   * Resumes the animations without resetting them.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Pauses the animations without resetting them.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Resumes the animations if paused, otherwise pauses them.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate-play\", (element) => new AnimatePlay(element));\n  }\n\n  constructor(element: Element) {\n    const { _play, _pause, _toggle } = getMethods(element);\n\n    // initial state is 0% and paused\n    animate(element, PAUSE, true);\n\n    this.do = _play;\n    this.undo = _pause;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Pauses or resumes all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it plays the animations as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate-pause\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Play/pause</button>\n * <div data-lisn-on-click=\"@animate-pause +target=#btn\"></div>\n * ```\n *\n * @category Animation\n */\nexport class AnimatePause implements Action {\n  /**\n   * Pauses the animations without resetting them.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Resumes the animations without resetting them.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Resumes the animations if paused, otherwise pauses them.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate-pause\", (element) => new AnimatePause(element));\n  }\n\n  constructor(element: Element) {\n    const { _play, _pause, _toggle } = getMethods(element);\n\n    // Initial state is playing\n    _play();\n\n    this.do = _pause;\n    this.undo = _play;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\ntype AnimateAction = typeof PLAY | typeof PAUSE | typeof TOGGLE;\n\nconst PLAY = 0;\nconst PAUSE = 1;\nconst TOGGLE = 2;\n\nconst getMethods = (element: Element) => {\n  return {\n    _play: () => animate(element, PLAY),\n    _pause: () => animate(element, PAUSE),\n    _toggle: () => animate(element, TOGGLE),\n  };\n};\n\nconst animate = (\n  element: Element,\n  action: AnimateAction,\n  isInitial = false,\n) => {\n  return iterateAnimations(\n    element,\n    /* istanbul ignore next */ // jsdom doesn't support Web Animations\n    (animation) => {\n      const isPaused = animation.playState === \"paused\";\n      if (action === PLAY || (isPaused && action === TOGGLE)) {\n        animation.play();\n      } else {\n        animation.pause();\n      }\n    },\n    (element) => {\n      if (isInitial) {\n        resetCssAnimationsNow(element);\n      }\n\n      const isPaused = hasClass(element, MC.PREFIX_ANIMATE_PAUSE);\n      if (action === PLAY || (isPaused && action === TOGGLE)) {\n        removeClassesNow(element, MC.PREFIX_ANIMATE_PAUSE);\n      } else {\n        addClassesNow(element, MC.PREFIX_ANIMATE_PAUSE);\n      }\n    },\n    isInitial,\n  );\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Showing/hiding elements\n * {@link Display} and {@link Undisplay} displays or \"undisplays\" (display:\n * none) the given element.\n *\n * {@link Actions.Show | Show} and {@link Actions.Hide | Hide} show or hide the\n * given element with a smooth fading transition.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  displayElement,\n  displayElementNow,\n  undisplayElement,\n  undisplayElementNow,\n  toggleDisplayElement,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Displays or \"undisplays\" (display: none) the given element.\n *\n * **IMPORTANT:** When constructed, it adds `display: none` to the element as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"display\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Display/undisplay</button>\n * <div data-lisn-on-click=\"@display +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Display implements Action {\n  /**\n   * It reverts the element to its original `display` property.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Sets `display: none` on the element.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Displays the element if it's \"undisplayed\", otherwise \"undisplays\" it.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"display\", (element) => new Display(element));\n  }\n\n  constructor(element: Element) {\n    undisplayElementNow(element); // initial state\n\n    const { _display, _undisplay, _toggle } = getMethods(element);\n    this.do = _display;\n    this.undo = _undisplay;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * \"Undisplays\" (display: none) or displays the given element.\n *\n * **IMPORTANT:** When constructed, it removes the `lisn-undisplay` class if\n * present on the element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"undisplay\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Display/undisplay</button>\n * <div data-lisn-on-click=\"@undisplay +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Undisplay implements Action {\n  /**\n   * Sets `display: none` on the element.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * It reverts the element to its original `display` property.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Displays the element if it's \"undisplayed\", otherwise \"undisplays\" it.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"undisplay\", (element) => new Undisplay(element));\n  }\n\n  constructor(element: Element) {\n    displayElementNow(element); // initial state\n\n    const { _display, _undisplay, _toggle } = getMethods(element);\n    this.do = _undisplay;\n    this.undo = _display;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  return {\n    _display: async () => {\n      await displayElement(element); // ignore return val\n    },\n\n    _undisplay: async () => {\n      await undisplayElement(element); // ignore return val\n    },\n\n    _toggle: async () => {\n      await toggleDisplayElement(element); // ignore return val\n    },\n  };\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Searching for reference elements\n * The functions allow you to find elements that match a given string\n * specification.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { logError } from \"@lisn/utils/log\";\n\n/**\n * Get the element that matches the given reference specification.\n *\n * The specification is of the form:\n *\n * ```\n * <FullSpec> ::=\n *     <Relation> \".\" <ClassName>  |\n *     <Relation> [\"-\" <ReferenceName>] |\n *     #<DOM_ID>\n *\n * <Relation> :==\n *     \"next\"  |\n *     \"prev\"  |\n *     \"this\"  |\n *     \"first\" |\n *     \"last\"\n * ```\n *\n * - `<DOM_ID>` is the unique ID of the element\n * - `<ClassName>` is a CSS class on the element\n * - `<ReferenceName>` is the value of the `data-lisn-ref` attribute on the\n *   element you are targeting. If not given, defaults to the value of the\n *   `data-lisn-ref` attribute on `thisElement`.\n *\n * There now follows an explanation of how \"next\", \"prev\", \"this\", \"first\" and\n * \"last\" search the DOM:\n * - \"next\": the tree is search in document order (depth first, then breadth),\n *   so the returned element could be a descendant of `thisElement`\n * - \"prev\": the tree is search in document order (depth first, then breadth),\n *   but excluding ancestors of `thisElement`, so the returned element is\n *   guaranteed to _not_ be an ancestor or descendant of `thisElement`.\n * - \"this\": if the given element itself matches the specification, it is\n *   returned, otherwise the closest ancestor of the given element that matches\n *   the specification\n * - \"first\": the first element matching; the tree is search in document order\n *   (depth first, then breadth).\n * - \"last\": the last element matching; the tree is search in document order\n *   (depth first, then breadth).\n *\n * @category DOM: Searching for reference elements\n *\n * @param {} thisElement The element to search relative to\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                        If the specification is invalid or if thisElement is\n *                        not given for a specification of \"next\", \"prev\" or \"this\"\n */\nexport const getReferenceElement = (\n  spec: string,\n  thisElement: Element,\n): Element | null => {\n  if (!spec) {\n    return thisElement;\n  }\n\n  if (spec[0] === \"#\") {\n    // element ID\n    const referenceElement = MH.getElementById(spec.slice(1));\n    if (!referenceElement) {\n      return null;\n    }\n    return referenceElement;\n  }\n\n  const relation = [\"next\", \"prev\", \"this\", \"first\", \"last\"].find(\n    (p) => spec.startsWith(`${p}.`) || spec.startsWith(`${p}-`) || spec === p,\n  );\n\n  if (!relation) {\n    throw MH.usageError(`Invalid search specification '${spec}'`);\n  }\n\n  const rest = spec.slice(MH.lengthOf(relation));\n  const matchOp = rest.slice(0, 1);\n  let refOrCls = rest.slice(1);\n\n  let selector: string;\n  if (matchOp === \".\") {\n    selector = matchOp + refOrCls;\n  } else {\n    if (!refOrCls) {\n      refOrCls = getData(thisElement, PREFIX_REF) || \"\";\n    }\n\n    if (!refOrCls) {\n      throw MH.usageError(`No reference name in '${spec}'`);\n    }\n\n    selector = `[${DATA_REF}=\"${refOrCls}\"]`;\n  }\n\n  let referenceElement;\n  if (relation === \"first\") {\n    referenceElement = getFirstReferenceElement(selector);\n  } else if (relation === \"last\") {\n    referenceElement = getLastReferenceElement(selector);\n  } else {\n    if (relation === \"this\") {\n      referenceElement = getThisReferenceElement(selector, thisElement);\n    } else if (relation === \"next\") {\n      referenceElement = getNextReferenceElement(selector, thisElement);\n    } else if (relation === \"prev\") {\n      referenceElement = getPrevReferenceElement(selector, thisElement);\n    } else {\n      /* istanbul ignore next */ {\n        logError(MH.bugError(`Unhandled relation case ${relation}`));\n        return null;\n      }\n    }\n  }\n\n  if (!referenceElement) {\n    return null;\n  }\n\n  return referenceElement;\n};\n\n/**\n * Like {@link getReferenceElement} excepts if no element matches the\n * specification if will wait for at most the given time for such an element.\n *\n * @category DOM: Searching for reference elements\n */\nexport const waitForReferenceElement = (\n  spec: string,\n  thisElement: Element,\n  timeout = 200,\n) => waitForElement(() => getReferenceElement(spec, thisElement), timeout);\n\n// ----------------------------------------\n\nconst PREFIX_REF = MH.prefixName(\"ref\");\nconst DATA_REF = MH.prefixData(PREFIX_REF);\n\nconst getAllReferenceElements = (\n  selector: string,\n): NodeListOf<Element> | null => MH.docQuerySelectorAll(selector);\n\nconst getFirstReferenceElement = (selector: string): Element | null =>\n  MH.docQuerySelector(selector);\n\nconst getLastReferenceElement = (selector: string): Element | null => {\n  const allRefs = getAllReferenceElements(selector);\n  return (allRefs && allRefs[MH.lengthOf(allRefs) - 1]) || null;\n};\n\nconst getThisReferenceElement = (\n  selector: string,\n  thisElement: Element,\n): Element | null => thisElement.closest(selector);\n\nconst getNextReferenceElement = (selector: string, thisElement: Element) =>\n  getNextOrPrevReferenceElement(selector, thisElement, false);\n\nconst getPrevReferenceElement = (selector: string, thisElement: Element) =>\n  getNextOrPrevReferenceElement(selector, thisElement, true);\n\nconst getNextOrPrevReferenceElement = (\n  selector: string,\n  thisElement: Element,\n  goBackward: boolean,\n): Element | null => {\n  thisElement = getThisReferenceElement(selector, thisElement) || thisElement;\n\n  if (!MH.getDoc().contains(thisElement)) {\n    return null;\n  }\n\n  const allRefs = getAllReferenceElements(selector);\n  if (!allRefs) {\n    return null;\n  }\n\n  const numRefs = MH.lengthOf(allRefs);\n  let refIndex = goBackward ? numRefs - 1 : -1;\n  for (let i = 0; i < numRefs; i++) {\n    const currentIsAfter = MH.isNodeBAfterA(thisElement, allRefs[i]);\n\n    // As soon as we find either the starting element or the first element\n    // that follows it, stop iteration.\n    // - If we're looking for the previous reference, then take the previous\n    //   element in the iteration.\n    // - Otherwise, if the current element in the iteration is the same as the\n    //   starting one, then take either the next element in the iteration.\n    //   - Otherwise, (if the current element follows the starting one, as\n    //     would happen if the starting element was not in the list of matched\n    //     elements, take the current element in the iteration.\n    if (allRefs[i] === thisElement || currentIsAfter) {\n      refIndex = i + (goBackward ? -1 : currentIsAfter ? 0 : 1);\n      break;\n    }\n  }\n\n  return allRefs[refIndex] || null;\n};\n","/**\n * ## Specification for the HTML API for triggers\n *\n * The following describes the general syntax when using the HTML API and\n * automatic widgets\n * ({@link Settings.settings.autoWidgets | settings.autoWidgets} is true)\n * specifically for triggers and actions.\n *\n * A trigger specification should be given as a\n * `data-lisn-on-<TriggerName>=\"<TriggerSpecList>\"` attribute.\n * A fallback option of using a CSS class of the form\n * `lisn-on-<TriggerName>--<TriggerSpec>` is also supported but not recommended.\n *\n * The general specification for a trigger is of the form:\n *\n * ```\n * <TriggerSpecList> ::= <TriggerSpec> { \";\" <TriggerSpec> }\n *\n * <TriggerSpec> ::= [ <TriggerArg> { \",\" <TriggerArg> } ]\n *                   \"@\" <ActionSpec> { \"@\" <ActionSpec> }\n *                   { \"+\" <TriggerOption> }\n *\n * <TriggerOption> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n *\n * <ActionSpec> ::= <ActionName> [ \":\" <ActionArgOrOption> { \",\" <ActionArgOrOption> } ]\n *\n * <ActionArgOrOption> ::= <ActionArg> | <OptionName> \"=\" <OptionValue>\n * ```\n *\n * where `<TriggerArg>` is the particular trigger's main argument, which could\n * be required or optional (and not all triggers accept an argument). See each\n * trigger's specification for their arguments and options.\n *\n * Also refer to each action for their accepted arguments and/or options if any.\n *\n * **NOTE:**\n *\n * There can be 0 or more spaces around any of the separator characters.\n *\n * At least one action (with a preceding \"@\" character) is always required.\n *\n * The characters \";\", \",\", \"=\", \"@\", \"+\" and \":\" are reserved separators and\n * cannot be used literally as part of an argument or option value.\n *\n * @module Triggers\n *\n * @categoryDescription Manual run\n * {@link Trigger} is the base trigger class that you can extend when building\n * custom triggers and it also registers a trigger that needs to be run\n * manually (by e.g. the {@link Actions.Run | Run} action).\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString, randId, splitOn } from \"@lisn/utils/text\";\nimport {\n  validateString,\n  validateNumber,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { Action, fetchAction } from \"@lisn/actions/action\";\n\nimport {\n  Widget,\n  WidgetConfigValidator,\n  WidgetConfigValidatorFunc,\n  WidgetConfigAsyncValidatorObject,\n  registerWidget,\n  fetchWidgetConfig,\n} from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link Trigger} is the base trigger class that you can extend when building\n * custom triggers and it also registers a trigger that needs to be run\n * manually (by e.g. the {@link Actions.Run | Run} action).\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * @example\n * Show the element 1000ms after the first time the trigger is run.\n *\n * ```html\n * <div data-lisn-on-run=\"@show +once +delay=1000\"></div>\n * ```\n *\n * @category Manual run\n */\nexport class Trigger extends Widget {\n  /**\n   * \"Do\"es all the {@link Action}s linked to the trigger.\n   */\n  readonly run: () => Promise<void>;\n\n  /**\n   * \"Undo\"es all the {@link Action}s linked to the trigger.\n   */\n  readonly reverse: () => Promise<void>;\n\n  /**\n   * \"Toggle\"s all the {@link Action}s linked to the trigger.\n   */\n  readonly toggle: () => Promise<void>;\n\n  /**\n   * Returns the trigger's actions.\n   */\n  readonly getActions: () => Action[];\n\n  /**\n   * Returns the trigger config.\n   */\n  readonly getConfig: () => TriggerConfig;\n\n  static get(element: Element, id: string): Trigger | null {\n    const instance = super.get(element, id);\n    if (MH.isInstanceOf(instance, Trigger)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerTrigger(\n      \"run\",\n      (element, a, actions, config) => new Trigger(element, actions, config),\n      {},\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config?: TriggerConfig) {\n    super(element, config);\n\n    const logger = debug\n      ? new debug.Logger({\n          name: `Trigger-${formatAsString(element)}`,\n          logAtCreation: { actions, config },\n        })\n      : null;\n\n    const once = config?.once ?? false;\n    const oneWay = config?.oneWay ?? false;\n    const delay = config?.delay || 0;\n    const doDelay = config?.doDelay ?? delay;\n    const undoDelay = config?.undoDelay ?? delay;\n\n    let lastCallId: string;\n    // false if next should be do; true if next should be undo.\n    // Used for determining delays only.\n    let toggleState = false;\n\n    const callActions = async (\n      delay: number,\n      callFn: (action: Action) => void,\n      newToggleState: boolean,\n    ) => {\n      if (this.isDisabled()) {\n        return;\n      }\n\n      const myCallId = randId();\n      lastCallId = myCallId;\n      debug: logger?.debug10(\n        `callActions [${myCallId}] (new toggle state ${newToggleState})`,\n        callFn,\n      );\n\n      if (delay) {\n        await waitForDelay(delay);\n        if (lastCallId !== myCallId) {\n          // overriden by subsequent call\n          debug: logger?.debug10(\n            `callActions [${myCallId}]: overriden by ${lastCallId}`,\n          );\n          return;\n        }\n      }\n\n      for (const action of actions) {\n        debug: logger?.debug10(`callActions [${myCallId}]`, action);\n        callFn(action);\n      }\n\n      toggleState = newToggleState;\n\n      if (toggleState && once) {\n        MH.remove(run);\n        MH.remove(reverse);\n        MH.remove(toggle);\n      }\n    };\n\n    const run = wrapCallback(() => {\n      callActions(\n        doDelay,\n        (action) => {\n          action.do();\n        },\n        true,\n      ); // don't await\n    });\n\n    const reverse = wrapCallback(() => {\n      if (!oneWay) {\n        callActions(\n          undoDelay,\n          (action) => {\n            action.undo();\n          },\n          false,\n        ); // don't await\n      }\n    });\n\n    const toggle = wrapCallback(() => {\n      callActions(\n        toggleState ? undoDelay : doDelay,\n        (action) => {\n          action[MC.S_TOGGLE]();\n        },\n        !toggleState,\n      ); // don't await\n    });\n\n    // ----------\n\n    this.run = run.invoke;\n    this.reverse = reverse.invoke;\n    this[MC.S_TOGGLE] = oneWay ? run.invoke : toggle.invoke;\n    this.getActions = () => [...actions]; // copy\n    this.getConfig = () => MH.copyObject(config || {});\n  }\n}\n\n/**\n * @interface\n */\nexport type TriggerConfig = {\n  /**\n   * An ID for the trigger so that it can be looked up by ID. It has to be\n   * unique for each element, but you can use the same ID on different\n   * elements.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * If true, the trigger will run at most once. This will result in the `run`\n   * or `toggle` methods removing all three of `run`, `reverse` and `toggle`\n   * when called, so that the actions are done at most once.\n   *\n   * @defaultValue false\n   */\n  once?: boolean;\n\n  /**\n   * If true, then the `reverse` method of the trigger will do nothing and the\n   * `toggle` method will always do the actions, i.e. will be equivalent to\n   * `run`.\n   *\n   * @defaultValue false\n   */\n  oneWay?: boolean;\n\n  /**\n   * Delay in milliseconds before doing, undoing or toggling actions.\n   *\n   * @defaultValue 0\n   */\n  delay?: number;\n\n  /**\n   * Delay in milliseconds before doing actions.\n   *\n   * @defaultValue {@link TriggerConfig.delay}\n   */\n  doDelay?: number;\n\n  /**\n   * Delay in milliseconds before undoing actions.\n   *\n   * @defaultValue {@link TriggerConfig.delay}\n   */\n  undoDelay?: number;\n\n  /**\n   * The element to instantiate all actions on this trigger for.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  actOn?: Element;\n};\n\nexport type TriggerCreateFn<Config extends TriggerConfig> = (\n  element: Element,\n  args: string[],\n  actions: Action[],\n  config: Config,\n) => Trigger | Promise<Trigger>;\n\n/**\n * Registers the given trigger as a widget to be automatically configured for\n * all elements that have a trigger specification with the given name.\n *\n * A trigger specification can be given as a\n * `data-lisn-on-<TriggerName>=\"<TriggerSpec> { \";\" <TriggerSpec> }\"` attribute\n * or as one or more `lisn-on-<TriggerName>--<TriggerSpec>` classes.\n *\n * See the top of the {@link Triggers} page for an explanation of `<TriggerSpec>`.\n *\n * Using classes instead of attributes is not recommended and only available as\n * a fallback option.\n *\n * **IMPORTANT:** If a trigger by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param {} name       The name of the trigger. Should be in kebab-case.\n * @param {} newTrigger Called for every trigger specification on any element\n *                      that has one or more trigger specifications.\n * @param {} configValidator\n *                      A validator object, or a function that returns such an\n *                      object, for all options that are specific to the\n *                      trigger. Base options (in {@link TriggerConfig}) will\n *                      be parsed automatically and don't need to be handled by\n *                      `configValidator`.\n *                      If the parameter is a function, it will be called with\n *                      the element on which the trigger is being defined.\n *\n * @see {@link registerWidget}\n */\nexport const registerTrigger = <Config extends TriggerConfig = TriggerConfig>(\n  name: string,\n  newTrigger: TriggerCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  const clsPref = MH.prefixName(`on-${name}`);\n\n  const newWidget = async (element: Element) => {\n    const widgets: Widget[] = [];\n    const baseConfigValidator = newBaseConfigValidator(element);\n    const thisConfigValidator = MH.isFunction(configValidator)\n      ? await configValidator(element)\n      : configValidator;\n\n    const allSpecs = splitOn(\n      getData(element, MH.prefixName(`on-${name}`)) ?? \"\",\n      TRIGGER_SEP,\n      true,\n    );\n\n    for (const cls of MH.classList(element)) {\n      if (cls.startsWith(`${clsPref}--`)) {\n        allSpecs.push(cls.slice(MH.lengthOf(clsPref) + 2));\n      }\n    }\n\n    for (const spec of allSpecs) {\n      const [tmp, configSpec] = splitOn(spec, OPTION_PREF_CHAR, true, 1);\n      const [argSpec, allActionSpecs] = splitOn(tmp, ACTION_PREF_CHAR, true, 1);\n\n      const args = MH.filterBlank(splitOn(argSpec, \",\", true)) || [];\n\n      const config = await fetchWidgetConfig(\n        configSpec,\n        MH.assign(\n          baseConfigValidator,\n          thisConfigValidator,\n        ) as WidgetConfigAsyncValidatorObject<Required<TriggerConfig> & Config>,\n        OPTION_PREF_CHAR,\n      );\n\n      const actionTarget = config.actOn ?? element;\n\n      const actions = [];\n      for (const actionSpec of splitOn(\n        allActionSpecs || \"\",\n        ACTION_PREF_CHAR,\n        true,\n      )) {\n        const [name, actionArgsAndOptions] = splitOn(\n          actionSpec,\n          ACTION_ARGS_PREF_CHAR,\n          true,\n          1,\n        );\n\n        try {\n          actions.push(\n            await fetchAction(actionTarget, name, actionArgsAndOptions || \"\"),\n          );\n        } catch (err) {\n          if (MH.isInstanceOf(err, LisnUsageError)) {\n            // fetchAction would have logged an error\n            continue;\n          }\n\n          throw err;\n        }\n      }\n\n      widgets.push(await newTrigger(element, args, actions, config));\n    }\n\n    return widgets;\n  };\n\n  registerWidget(name, newWidget, null, {\n    selector: `[class^=\"${clsPref}--\"],[class*=\" ${clsPref}--\"],[data-${clsPref}]`,\n  });\n};\n\n// --------------------\n\nconst TRIGGER_SEP = \";\";\nconst OPTION_PREF_CHAR = \"+\";\nconst ACTION_PREF_CHAR = \"@\";\nconst ACTION_ARGS_PREF_CHAR = \":\";\n\nconst newBaseConfigValidator: WidgetConfigValidatorFunc<TriggerConfig> = (\n  element,\n) => {\n  return {\n    id: validateString,\n    once: validateBoolean,\n    oneWay: validateBoolean,\n    delay: validateNumber,\n    doDelay: validateNumber,\n    undoDelay: validateNumber,\n    actOn: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling triggers\n * {@link Enable} and {@link Disable} enable or disable a list of triggers\n * defined on the given element.\n *\n * {@link Run} runs or reverses a list of triggers defined on the given\n * element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logWarn } from \"@lisn/utils/log\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString } from \"@lisn/utils/text\";\n\nimport { Trigger } from \"@lisn/triggers/trigger\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Enables or disables a list of triggers defined on the given element.\n *\n * **IMPORTANT:** When constructed, it disables all given triggers as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"enable\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button id=\"btn\">Enable/disable</button>\n * <button data-lisn-on-click=\"\n *         @enable=triggerA,triggerB +target=#btn\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-click=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Enable implements Action {\n  /**\n   * Enables the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Disables the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the enabled state on each trigger given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"enable\", (element, ids) => new Enable(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _enable, _disable, _toggleEnable } = getMethods(element, ids);\n    _disable(); // initial state\n\n    this.do = _enable;\n    this.undo = _disable;\n    this[MC.S_TOGGLE] = _toggleEnable;\n  }\n}\n\n/**\n * Disables or enables a list of triggers defined on the given element.\n *\n * **IMPORTANT:** When constructed, it enables all given triggers as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"disable\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button id=\"btn\">Enable/disable</button>\n * <button data-lisn-on-click=\"\n *         @disable=triggerA,triggerB +target=#btn\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-click=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Disable implements Action {\n  /**\n   * Disables the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Enables the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the enabled state on each trigger given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"disable\", (element, ids) => new Disable(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _enable, _disable, _toggleEnable } = getMethods(element, ids);\n    _enable(); // initial state\n\n    this.do = _disable;\n    this.undo = _enable;\n    this[MC.S_TOGGLE] = _toggleEnable;\n  }\n}\n\n/**\n * Runs or reverses a list of triggers defined on the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"run\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button data-lisn-on-click=\"\n *         @run=triggerA,triggerB\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-run=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Run implements Action {\n  /**\n   * Runs the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Reverses the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the triggers with IDs given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"run\", (element, ids) => new Run(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _run, _reverse, _toggle } = getMethods(element, ids);\n\n    this.do = _run;\n    this.undo = _reverse;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element, ids: string[]) => {\n  const triggerPromises = getTriggers(element, ids);\n  const call = async (\n    method:\n      | \"enable\"\n      | \"disable\"\n      | \"toggleEnable\"\n      | \"run\"\n      | \"reverse\"\n      | \"toggle\",\n  ) => {\n    const triggers = await triggerPromises;\n    for (const trigger of triggers) {\n      trigger[method]();\n    }\n  };\n\n  return {\n    _enable: () => call(\"enable\"),\n    _disable: () => call(\"disable\"),\n    _toggleEnable: () => call(\"toggleEnable\"),\n    _run: () => call(\"run\"),\n    _reverse: () => call(\"reverse\"),\n    _toggle: () => call(MC.S_TOGGLE),\n  };\n};\n\nconst getTriggers = async (element: Element, ids: string[]) => {\n  const triggers: Trigger[] = [];\n  if (!MH.lengthOf(ids)) {\n    logWarn(\"At least 1 ID is required for enable action\");\n    return triggers;\n  }\n\n  for (const id of ids) {\n    let trigger = Trigger.get(element, id);\n    if (!trigger) {\n      await waitForDelay(0); // in case it's being processed now\n      trigger = Trigger.get(element, id);\n\n      if (!trigger) {\n        logWarn(\n          `No trigger with ID ${id} for element ${formatAsString(element)}`,\n        );\n        continue;\n      }\n    }\n\n    triggers.push(trigger);\n  }\n\n  return triggers;\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Scrolling\n * {@link ScrollTo} scrolls to the given element or to the previous scroll\n * position.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { CoordinateOffset } from \"@lisn/globals/types\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { validateNumber } from \"@lisn/utils/validation\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * Scrolls to the given element or to the previous scroll position.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"scroll-to\".\n * - Accepted string arguments: none\n * - Accepted options:\n *   - `offsetX`: A number.\n *   - `offsetY`: A number.\n *   - `scrollable`: A string element specification for an element (see\n *     {@link Utils.getReferenceElement | getReferenceElement}). Note that,\n *     unless it's a DOM ID, the specification is parsed relative to the\n *     element being acted on and not the element the trigger is defined on (in\n *     case you've used the `act-on` trigger option).\n *\n * **NOTE:** Do not place a + sign in front of the offset values (just omit it\n * if you want a positive offset). Otherwise it will be interpreted as a\n * trigger option.\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position +10px down:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to: offsetY=10 +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position 10px _down_ and 50px _left_:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to: offsetY=10, offsetX=-50 +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the closest parent element with\n * class `scrollable` to the element's position:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div class=\"scrollable\">\n *   <div data-lisn-on-click=\"@scroll-to: scrollable=this.scrollable +target=#btn\"></div>\n * </div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-ref=\"scrollable\">\n *   <div data-lisn-on-click=\"@scroll-to: scrollable=this-scrollable +target=#btn\"></div>\n * </div>\n * ```\n *\n * @category Scrolling\n */\nexport class ScrollTo implements Action {\n  /**\n   * Scrolls the main scrolling element to the element's position.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Scrolls the main scrolling element to the last scroll position before the\n   * action was {@link do}ne. If the action had never been done, does nothing.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Scrolls the main scrolling element to the element's position, if it's not\n   * already there, or otherwise scrolls the main scrolling element to the\n   * previous saved scroll position.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"scroll-to\",\n      (element, args, config) => {\n        const offset = config\n          ? {\n              left: config.offsetX,\n              top: config.offsetY,\n            }\n          : undefined;\n\n        return new ScrollTo(element, {\n          scrollable: config?.scrollable,\n          offset,\n        });\n      },\n      newConfigValidator,\n    );\n  }\n\n  constructor(element: Element, config?: ScrollToConfig) {\n    const offset = config?.offset;\n    const scrollable = config?.scrollable;\n\n    const watcher = ScrollWatcher.reuse();\n    let prevScrollTop = -1,\n      prevScrollLeft = -1;\n\n    this.do = async () => {\n      const current = await watcher.fetchCurrentScroll();\n      prevScrollTop = current[MC.S_SCROLL_TOP];\n      prevScrollLeft = current[MC.S_SCROLL_LEFT];\n\n      const action = await watcher.scrollTo(element, {\n        offset,\n        scrollable,\n      });\n      await action?.waitFor();\n    };\n\n    this.undo = async () => {\n      if (prevScrollTop !== -1) {\n        const action = await watcher.scrollTo({\n          top: prevScrollTop,\n          left: prevScrollLeft,\n        });\n        await action?.waitFor();\n      }\n    };\n\n    this[MC.S_TOGGLE] = async () => {\n      const start = await watcher.fetchCurrentScroll();\n\n      const canReverse = prevScrollTop !== -1;\n      let hasReversed = false;\n\n      // Try to scroll to the element, but if we're already at it, then reverse\n      // to previous position if any.\n      const altTarget = {\n        top: () => {\n          hasReversed = true;\n          return prevScrollTop;\n        },\n        left: prevScrollLeft,\n      };\n\n      const action = await watcher.scrollTo(\n        element,\n        canReverse ? { altTarget, offset } : { offset },\n      );\n      await action?.waitFor();\n\n      if (!hasReversed) {\n        // We've scrolled to the element, so save the starting position as the\n        // previous one.\n        prevScrollTop = start[MC.S_SCROLL_TOP];\n        prevScrollLeft = start[MC.S_SCROLL_LEFT];\n      }\n    };\n  }\n}\n\n/**\n * @interface\n * @category Scrolling\n */\nexport type ScrollToConfig = {\n  /**\n   * See {@link Utils.ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined // none\n   */\n  offset?: CoordinateOffset;\n\n  /**\n   * See {@link Utils.ScrollToOptions.scrollable}.\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  scrollable?: Element;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<{\n  offsetX: number;\n  offsetY: number;\n  scrollable?: Element;\n}> = (element) => {\n  return {\n    offsetX: (key, value) => validateNumber(key, value) ?? 0,\n    offsetY: (key, value) => validateNumber(key, value) ?? 0,\n    scrollable: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Setting/deleting attributes\n * {@link SetAttribute} sets or deletes an attribute on the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { camelToKebabCase } from \"@lisn/utils/text\";\nimport { validateString } from \"@lisn/utils/validation\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport { WidgetConfigValidatorObject } from \"@lisn/widgets/widget\";\n\n/**\n * Either sets or deletes an attribute, or toggles between two values of an\n * attribute, on the given element.\n *\n * **IMPORTANT:** When constructed, it sets all given attributes on the\n * element to their _OFF_ (undone) state as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"set-attribute\".\n * - Accepted string arguments: name of attribute\n * - Accepted options:\n *   - `on`: A string value for the attribute. Can be blank. Omit this option\n *     in order to have the attribute deleted when the action is done.\n *   - `off`: A string value for the attribute. Can be blank. Omit this option\n *     in order to have the attribute deleted when the action is undone.\n *\n * Note that with the HTML API you can only specify one attribute per action.\n * But of course you can add the same action multiple times per trigger. See\n * examples below.\n *\n * @example\n * This is an overview of the various combinations that you can use to set an\n * attribute to a non-empty value, a blank value or delete the attribute when\n * the action is either done or undone:\n *\n * | Specification                         | Value when done | Value when undone |\n * | ------------------------------------- | --------------- | ----------------- |\n * | @set-attr: attr, on=onVal, off=offVal | \"onVal\"         | \"offVal\"          |\n * | @set-attr: attr, on=value             | \"value\"         | _deleted_         |\n * | @set-attr: attr, off=value            | _deleted_       | \"value\"           |\n * | @set-attr: attr, on=                  | \"\"              | _deleted_         |\n * | @set-attr: attr, off=                 | _deleted_       | \"\"                |\n * | @set-attr: attr, on=value, off=       | \"value\"         | \"\"                |\n * | @set-attr: attr, on= , off=value      | \"\"              | \"value\"           |\n *\n * @example\n * This will set attribute `attrA` to `valueA-ON` and `attrB` to `valueB-ON`\n * when the element enters the viewport and set `attrA` to `valueA-OFF` and\n * `attrB` to `valueB-OFF` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attrA, on=valueA-ON, off=valueA-OFF\n *                         @set-attribute: attrB, on=valueB-ON, off=valueB-OFF\"\n * ></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to `value` when the element enters the\n * viewport and _delete_ the attribute when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=value\"></div>\n * ```\n *\n * @example\n * This will _delete_ attribute `attr` when the element enters the viewport and\n * set it to `value` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, off=value\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to a blank value when the element enters the\n * viewport and _delete_ the attribute when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=\"></div>\n * ```\n *\n * @example\n * This will _delete_ attribute `attr` when the element enters the viewport and\n * set it to a blank value when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, off=\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to `value` when the element enters the\n * viewport and set it to a blank value when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=value, off=\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to a blank value when the element enters the\n * viewport and set it to `value` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=, off=value\"></div>\n * ```\n *\n * @category Setting/deleting attributes\n */\nexport class SetAttribute implements Action {\n  /**\n   * Sets the attribute to its \"ON\" value, or deletes it if that value is null.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Sets the attribute to its \"OFF\" value, or deletes it if that value is null.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the attribute from its \"ON\" to \"OFF\" value or vice versa.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"set-attribute\",\n      (element, args, config) => {\n        return new SetAttribute(element, { [args[0]]: config || {} });\n      },\n      configValidator,\n    );\n  }\n\n  constructor(element: Element, attributes: Attributes) {\n    if (!attributes) {\n      throw MH.usageError(\"Attributes are required\");\n    }\n\n    let isOn = false;\n\n    const setAttrs = async (on: boolean) => {\n      isOn = on;\n\n      await waitForMutateTime();\n\n      for (const attr in attributes) {\n        const value = attributes[attr][on ? \"on\" : \"off\"];\n        const attrName = camelToKebabCase(attr);\n\n        if (MH.isNullish(value)) {\n          MH.delAttr(element, attrName);\n        } else {\n          MH.setAttr(element, attrName, value);\n        }\n      }\n    };\n\n    this.do = () => setAttrs(true);\n\n    this.undo = () => setAttrs(false);\n\n    this[MC.S_TOGGLE] = () => setAttrs(!isOn);\n\n    this.undo(); // initial state\n  }\n}\n\n/**\n * Each key in the object is an attribute name. The `on` value is set when the\n * action is done and the `off` value is set when the action is undone. To set\n * the attribute to an empty value, use an empty string. To _delete_ the\n * attribute, use `null` as the value or simply omit the relevant `on` or `off`\n * key.\n *\n * **IMPORTANT:** Attribute names in camelCase are converted to kebab-case.\n * E.g. `dataFooBar` will translate to `data-foo-bar`.\n *\n * @category Setting/deleting attributes\n */\nexport type Attributes = Record<\n  string,\n  { on?: string | null; off?: string | null }\n>;\n\n// --------------------\n\nconst configValidator: WidgetConfigValidatorObject<Attributes[string]> = {\n  on: validateString,\n  off: validateString,\n};\n","/**\n * @module Actions\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  showElement,\n  hideElement,\n  toggleShowElement,\n  disableInitialTransition,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Shows or hides the given element with a smooth fading transition.\n *\n * **IMPORTANT:** When constructed, it will hide the element as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"show\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Show/hide</button>\n * <div data-lisn-on-click=\"@show +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Show implements Action {\n  /**\n   * Shows the element with a smooth fade in transition.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Hides the element with a smooth fade out transition.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Shows the element if it is hidden, hides it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"show\", (element) => new Show(element));\n  }\n\n  constructor(element: Element) {\n    disableInitialTransition(element);\n    hideElement(element); // initial state\n\n    const { _show, _hide, _toggle } = getMethods(element);\n    this.do = _show;\n    this.undo = _hide;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Hides or shows the given element with a smooth fading transition.\n *\n * **IMPORTANT:** When constructed, it will remove any `lisn-hide` class from\n * the element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"hide\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Show/hide</button>\n * <div data-lisn-on-click=\"@hide +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Hide implements Action {\n  /**\n   * Hides the element with a smooth fade out transition.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Shows the element with a smooth fade in transition.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Shows the element if it is hidden, hides it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"hide\", (element) => new Hide(element));\n  }\n\n  constructor(element: Element) {\n    disableInitialTransition(element);\n    showElement(element); // initial state\n\n    const { _show, _hide, _toggle } = getMethods(element);\n    this.do = _hide;\n    this.undo = _show;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  return {\n    _show: async () => {\n      await showElement(element); // ignore return val\n    },\n\n    _hide: async () => {\n      await hideElement(element); // ignore return val\n    },\n\n    _toggle: async () => {\n      await toggleShowElement(element); // ignore return val\n    },\n  };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Position } from \"@lisn/globals/types\";\n\n/**\n * @category Validation\n */\nexport const isValidPosition = (position: string): position is Position =>\n  MH.includes(POSITIONS as readonly string[], position);\n\n/**\n * @category Validation\n */\nexport const isValidTwoFoldPosition = (\n  position: string,\n): position is `${Position}-${Position}` =>\n  position.match(TWO_FOLD_POSITION_REGEX) !== null;\n\n/**\n * @ignore\n * @internal\n */\nexport const POSITIONS = [\n  MC.S_TOP,\n  MC.S_BOTTOM,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n// --------------------\n\nconst POSITIONS_OPTIONS_STR = \"(\" + POSITIONS.join(\"|\") + \")\";\n\nconst TWO_FOLD_POSITION_REGEX = RegExp(\n  `^${POSITIONS_OPTIONS_STR}-${POSITIONS_OPTIONS_STR}$`,\n);\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { XYDirection, Position } from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  hasClass,\n  addClasses,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n  getData,\n  getBoolData,\n  setData,\n  setDataNow,\n  setBoolData,\n  setBoolDataNow,\n  unsetBoolData,\n  unsetBoolDataNow,\n  delData,\n  delDataNow,\n  setHasModal,\n  delHasModal,\n  getStyleProp,\n  setStyleProp,\n  delStyleProp,\n  getComputedStyleProp,\n  getMaxTransitionDuration,\n} from \"@lisn/utils/css-alter\";\nimport {\n  wrapElement,\n  wrapElementNow,\n  moveElement,\n  moveElementNow,\n  replaceElementNow,\n  getOrAssignID,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { keyWithMaxVal } from \"@lisn/utils/math\";\nimport { toBool, toArrayIfSingle } from \"@lisn/utils/misc\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { isValidPosition, isValidTwoFoldPosition } from \"@lisn/utils/position\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport {\n  validateStrList,\n  validateBoolean,\n  validateBooleanOrString,\n  validateString,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\nimport { ViewWatcher, ViewData } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetHandler,\n  WidgetCallback,\n  WidgetConfigValidator,\n  WidgetConfigValidatorObject,\n  registerWidget,\n  getWidgetConfig,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/* ********************\n * Base Openable\n * ********************/\n\nexport type OpenableCreateFn<Config extends Record<string, unknown>> = (\n  element: HTMLElement,\n  config?: Config,\n) => Openable;\n\n/**\n * Enables automatic setting up of an {@link Openable} widget from an\n * elements matching its content element selector (`[data-lisn-<name>]` or\n * `.lisn-<name>`).\n *\n * The name you specify here should generally be the same name you pass in\n * {@link OpenableProperties.name | options.name} to the\n * {@link Openable.constructor} but it does not need to be the same.\n *\n * @param {} name        The name of the openable. Should be in kebab-case.\n * @param {} newOpenable Called for every element matching the selector.\n * @param {} configValidator\n *                        A validator object, or a function that returns such\n *                        an object, for all options supported by the widget.\n *\n * @see {@link registerWidget}\n */\nexport const registerOpenable = <Config extends Record<string, unknown>>(\n  name: string,\n  newOpenable: OpenableCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  registerWidget(\n    name,\n    (element, config) => {\n      if (MH.isHTMLElement(element)) {\n        if (!Openable.get(element)) {\n          return newOpenable(element, config);\n        }\n      } else {\n        logError(MH.usageError(\"Openable widget supports only HTMLElement\"));\n      }\n\n      return null;\n    },\n    configValidator,\n  );\n};\n\n/**\n * {@link Openable} is an abstract base class. You should not directly\n * instantiate it but can inherit it to create your own custom openable widget.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * @see {@link registerOpenable}\n */\nexport abstract class Openable extends Widget {\n  /**\n   * Opens the widget unless it is disabled.\n   */\n  readonly open: () => Promise<void>;\n\n  /**\n   * Closes the widget.\n   */\n  readonly close: () => Promise<void>;\n\n  /**\n   * Closes the widget if it is open, or opens it if it is closed (unless\n   * it is disabled).\n   */\n  readonly toggle: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is open.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onOpen: (handler: WidgetHandler) => void;\n\n  /**\n   * The given handler will be called when the widget is closed.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onClose: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is currently open.\n   */\n  readonly isOpen: () => boolean;\n\n  /**\n   * Returns the root element created by us that wraps the original content\n   * element passed to the constructor. It is located in the content element's\n   * original place.\n   */\n  readonly getRoot: () => HTMLElement;\n\n  /**\n   * Returns the element that was found to be the container. It is the closest\n   * ancestor that has a `lisn-collapsible-container` class, or if no such\n   * ancestor then the immediate parent of the content element.\n   */\n  readonly getContainer: () => HTMLElement | null;\n\n  /**\n   * Returns the trigger elements, if any. Note that these may be wrappers\n   * around the original triggers passed.\n   */\n  readonly getTriggers: () => Element[];\n\n  /**\n   * Returns the trigger elements along with their configuration.\n   */\n  readonly getTriggerConfigs: () => Map<Element, OpenableTriggerConfig>;\n\n  /**\n   * Retrieve an existing widget by its content element or any of its triggers.\n   *\n   * If the element is already part of a configured {@link Openable} widget,\n   * the widget instance is returned. Otherwise `null`.\n   *\n   * Note that trigger elements are not guaranteed to be unique among openable\n   * widgets as the same element can be a trigger for multiple such widgets. If\n   * the element you pass is a trigger, then the last openable widget that was\n   * created for it will be returned.\n   */\n  static get(element: Element): Openable | null {\n    // We manage the instances here since we also map associated elements and\n    // not just the main content element that created the widget.\n    return instances.get(element) || null;\n  }\n\n  constructor(element: HTMLElement, properties: OpenableProperties) {\n    super(element);\n\n    const { isModal, isOffcanvas } = properties;\n\n    const openCallbacks = MH.newSet<WidgetCallback>();\n    const closeCallbacks = MH.newSet<WidgetCallback>();\n\n    let isOpen = false;\n\n    // ----------\n\n    const open = async () => {\n      if (this.isDisabled() || isOpen) {\n        return;\n      }\n\n      isOpen = true;\n\n      for (const callback of openCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        setHasModal();\n      }\n\n      await setBoolData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const close = async () => {\n      if (this.isDisabled() || !isOpen) {\n        return;\n      }\n\n      isOpen = false;\n\n      for (const callback of closeCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        delHasModal();\n      }\n\n      if (isOffcanvas) {\n        scrollWrapperToTop(); // no need to await\n      }\n\n      await unsetBoolData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const scrollWrapperToTop = async () => {\n      // Wait a bit before scrolling since the hiding of the element is animated.\n      // Assume no more than 1s animation time.\n      await waitForDelay(1000);\n      await waitForMeasureTime();\n      MH.elScrollTo(outerWrapper, {\n        top: 0,\n        left: 0,\n      });\n    };\n\n    // --------------------\n\n    this.open = open;\n    this.close = close;\n    this[MC.S_TOGGLE] = () => (isOpen ? close() : open());\n    this.onOpen = (handler) => openCallbacks.add(wrapCallback(handler));\n    this.onClose = (handler) => closeCallbacks.add(wrapCallback(handler));\n    this.isOpen = () => isOpen;\n    this.getRoot = () => root;\n    this.getContainer = () => container;\n    this.getTriggers = () => [...triggers.keys()];\n    this.getTriggerConfigs = () => MH.newMap([...triggers.entries()]);\n\n    this.onDestroy(() => {\n      openCallbacks.clear();\n      closeCallbacks.clear();\n    });\n\n    const { root, container, triggers, outerWrapper } = setupElements(\n      this,\n      element,\n      properties,\n    );\n  }\n}\n\n/**\n * Per-trigger based configuration. Can either be given as an object as the\n * value of the {@link OpenableProperties.triggers} map, or it can be set as a\n * string configuration in the `data-lisn-<name>-trigger` data attribute. See\n * {@link getWidgetConfig} for the syntax.\n *\n * @example\n * ```html\n * <div data-lisn-collapsible-trigger=\"auto-close\n *                                     | icon=right\n *                                     | icon-closed=arrow-down\n *                                     | icon-open=x\"\n * ></div>\n * ```\n *\n * @interface\n */\nexport type OpenableTriggerConfig = {\n  /**\n   * The DOM ID of the trigger. Will result in the trigger element, which could\n   * be a wrapper around the original element (as in the case of\n   * {@link Collapsible} you passed, getting this ID.\n   *\n   * **IMPORTANT:** If the trigger element already has an ID and is not being\n   * wrapped, then this will override the ID and it _won't_ be restored on destroy.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) for the trigger. Will result in the trigger element, which\n   * could be a wrapper around the original element you passed, getting these\n   * classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Override the widget's {@link OpenableProperties.autoClose} for this trigger.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  autoClose?: boolean;\n\n  /**\n   * Open the openable when this trigger is hovered.\n   *\n   * If the device is touch and {@link OpenableProperties.autoClose} is enabled,\n   * the widget will be closed shortly after the pointer leaves both the\n   * trigger and the root element.\n   *\n   * @defaultValue false\n   */\n  hover?: boolean;\n\n  /**\n   * Whether to prevent default click action.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.icon} for this trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  icon?: false | Position;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconClosed} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconOpen} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/**\n * @interface\n */\nexport type OpenableProperties = {\n  /**\n   * The name of the _type_ of the openable. Will set the class prefix to\n   * `lisn-<name>`.\n   */\n  name: string;\n\n  /**\n   * The DOM ID of the openable. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the openable. Will result in the\n   * top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Whether to auto-close the widget on clicking outside the content element\n   * or on pressing Escape key. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * This is true by default for {@link Popup}, {@link Modal} and {@link Offcanvas}.\n   */\n  autoClose: boolean;\n\n  /**\n   * If true, then while the widget is open, the `document.body` will be set to\n   * `overflow: hidden`.\n   *\n   * This is true for {@link Modal}.\n   */\n  isModal: boolean;\n\n  /**\n   * If true, then the content element is assumed to be possibly scrollable and\n   * will be scrolled back to its top after the widget is closed.\n   *\n   * This is true for {@link Modal} and {@link Offcanvas}.\n   */\n  isOffcanvas: boolean;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * This is true by default for {@link Modal} and {@link Offcanvas}.\n   */\n  closeButton: boolean;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way (`<name>` is what is given as\n   * {@link name}):\n   * 1. If the content element has a `data-lisn-<name>-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-<name>-trigger` class or `data-lisn-<name>-trigger` attribute\n   *    and the same `data-lisn-<name>-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-<name>-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-<name>-trigger`\n   *    class or `data-lisn-<name>-trigger` attribute and that do _not_ have a\n   *    `data-lisn-<name>-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Whether to wrap each trigger in a new element.\n   *\n   * @defaultValue false\n   */\n  wrapTriggers?: boolean;\n\n  /**\n   * Hook to run once the widget is fully setup (which happens asynchronously).\n   *\n   * It is called during \"mutate time\". See {@link waitForMutateTime}.\n   *\n   * @defaultValue undefined\n   */\n  onSetup?: () => void;\n};\n\n/* ********************\n * Collapsible\n * ********************/\n\n/**\n * Configures the given element as a {@link Collapsible} widget.\n *\n * The Collapsible widget sets up the given element to be collapsed and\n * expanded upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link CollapsibleConfig.triggers | triggers}.\n *\n * **NOTE:** The Collapsible widget always wraps each trigger element in\n * another element in order to allow positioning the icon, if any.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-collapsible__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-reverse`: `\"true\"` or `\"false\"`\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-collapsible` class or `data-lisn-collapsible` attribute set on the\n *   element that holds the content of the collapsible\n * - `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     collapsible on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close\"` in order to have this trigger\n *     open the collapsible on hover but and override\n *     {@link CollapsibleConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-collapsible-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and the same `data-lisn-collapsible-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple collapsible with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-collapsible-trigger\">Expand</div>\n *   <div class=\"lisn-collapsible\">\n *     Some long content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a collapsible that is partially visible when collapsed, and\n * where the trigger is in a different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all other possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek=50px\n *                               | horizontal=false\n *                               | reverse=false\n *                               | auto-close\n *                               | icon=right\n *                               | icon-closed=arrow-up\"\n *                               | icon-open=arrow-down\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n */\nexport class Collapsible extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_COLLAPSIBLE,\n      (el, config) => new Collapsible(el, config),\n      collapsibleConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: CollapsibleConfig) {\n    const isHorizontal = config?.horizontal;\n    const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n\n    const onSetup = () => {\n      // The triggers here are wrappers around the original which will be\n      // replaced by the original on destroy, so no need to clean up this.\n      for (const [\n        trigger,\n        triggerConfig,\n      ] of this.getTriggerConfigs().entries()) {\n        insertCollapsibleIcon(trigger, triggerConfig, this, config);\n        setDataNow(trigger, MC.PREFIX_ORIENTATION, orientation);\n      }\n    };\n\n    super(element, {\n      name: WIDGET_NAME_COLLAPSIBLE,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? false,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: false,\n      triggers: config?.triggers,\n      wrapTriggers: true,\n      onSetup,\n    });\n\n    const root = this.getRoot();\n    const wrapper = MH.childrenOf(root)[0];\n\n    setData(root, MC.PREFIX_ORIENTATION, orientation);\n    setBoolData(root, PREFIX_REVERSE, config?.reverse ?? false);\n\n    // -------------------- Transitions\n    disableInitialTransition(element, 100);\n    disableInitialTransition(root, 100);\n    disableInitialTransition(wrapper, 100);\n\n    let disableTransitionTimer: ReturnType<typeof setTimeout> | null = null;\n    const tempEnableTransition = async () => {\n      await removeClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n      await removeClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n\n      if (disableTransitionTimer) {\n        MH.clearTimer(disableTransitionTimer);\n      }\n\n      const transitionDuration = await getMaxTransitionDuration(root);\n      disableTransitionTimer = MH.setTimer(() => {\n        if (this.isOpen()) {\n          addClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n          addClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n          disableTransitionTimer = null;\n        }\n      }, transitionDuration);\n    };\n\n    // Disable transitions except during open/close, so that resizing the\n    // window for example doesn't result in lagging width/height transition.\n    this.onOpen(tempEnableTransition);\n    this.onClose(tempEnableTransition);\n\n    // -------------------- Peek\n    const peek = config?.peek;\n    if (peek) {\n      (async () => {\n        let peekSize: string | null = null;\n        if (MH.isString(peek)) {\n          peekSize = peek;\n        } else {\n          peekSize = await getStyleProp(element, VAR_PEEK_SIZE);\n        }\n\n        addClasses(root, PREFIX_PEEK);\n        if (peekSize) {\n          setStyleProp(root, VAR_PEEK_SIZE, peekSize);\n        }\n      })();\n    }\n\n    // -------------------- Width in horizontal mode\n    if (isHorizontal) {\n      const updateWidth = async () => {\n        const width = await getComputedStyleProp(root, MC.S_WIDTH);\n        await setStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH, width);\n      };\n\n      MH.setTimer(updateWidth);\n\n      // Save its current width so that if it contains text, it does not\n      // \"collapse\" and end up super tall.\n      this.onClose(updateWidth);\n\n      this.onOpen(async () => {\n        // Update the content width before opening.\n        await updateWidth();\n\n        // Delete the fixed width property soon after opening to allow it to\n        // resize again while it's open.\n        waitForDelay(2000).then(() => {\n          if (this.isOpen()) {\n            delStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH);\n          }\n        });\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type CollapsibleConfig = {\n  /**\n   * The DOM ID of the collapsible. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the\n   * `data-lisn-collapsible-content-id` attribute used to link triggers to the\n   * collapsible.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the collapsible. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-collapsible-content-id`\n   *    attribute, then it must be a unique (for the current page) ID. In this\n   *    case, the trigger elements will be any element in the document that\n   *    has a `lisn-collapsible-trigger` class or\n   *    `data-lisn-collapsible-trigger` attribute and the same\n   *    `data-lisn-collapsible-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n   *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Open sideways (to the right) instead of downwards (default).\n   *\n   * **IMPORTANT:** In horizontal mode the width of the content element should\n   * not be set (or be `auto`), but you can use `min-width` or `max-width` in\n   * your CSS if needed.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Open to the left if horizontal or upwards if vertical.\n   *\n   * @defaultValue false\n   */\n  reverse?: boolean;\n\n  /**\n   * If not false, part of the content will be visible when the collapsible is\n   * closed. The value can be any valid CSS width specification.\n   *\n   * If you set this to `true`, then the size of the peek window will be\n   * dictated by CSS. By default the size is 100px, but you can change this by\n   * setting `--lisn-peek-size` CSS property on the content element or any of\n   * its ancestors.\n   *\n   * Otherwise, if the value is a string, it must be a CSS length including units.\n   *\n   * @defaultValue false\n   */\n  peek?: boolean | string;\n\n  /**\n   * Automatically close the collapsible when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue false\n   */\n  autoClose?: boolean;\n\n  /**\n   * Add an icon to each trigger.\n   *\n   * If set to something other than `false`, then by default the icon in the\n   * closed state is a plus (+) and in the open state it's a minus (-), but\n   * this can be configured with {@link iconClosed} and {@link iconOpen}.\n   *\n   * @defaultValue false\n   */\n  icon?: false | Position;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the closed state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"plus\"\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the open state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"minus\";\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/* ********************\n * Popup\n * ********************/\n\n/**\n * Configures the given element as a {@link Popup} widget.\n *\n * The Popup widget sets up the given element to be hidden and open in a\n * floating popup upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link PopupConfig.triggers | triggers}.\n *\n * **IMPORTANT:** The popup is positioned absolutely in its container and the\n * position is relative to the container. The container gets `width:\n * fit-content` by default but you can override this in your CSS. The popup\n * also gets a configurable `min-width` set.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-popup__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position (top, bottom, left, top-left, etc)\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-popup` class or `data-lisn-popup` attribute set on the element that\n *   holds the content of the popup\n * - `lisn-popup-trigger` class or `data-lisn-popup-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     popup on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the popup on hover but and override\n *     {@link PopupConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-popup-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and the\n *    same `data-lisn-popup-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-popup-trigger` class or\n *    `data-lisn-popup-trigger` attribute and that do _not_ have a\n *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple popup with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-popup-trigger\">Open</div>\n *   <div class=\"lisn-popup\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a popup that has a close button, and where the trigger is in a\n * different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button | position=bottom | auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n * ```\n */\nexport class Popup extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_POPUP,\n      (el, config) => new Popup(el, config),\n      popupConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: PopupConfig) {\n    super(element, {\n      name: WIDGET_NAME_POPUP,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: config?.closeButton ?? false,\n      triggers: config?.triggers,\n    });\n\n    const root = this.getRoot();\n    const container = this.getContainer();\n\n    const position = config?.position ?? S_AUTO;\n    if (position !== S_AUTO) {\n      setData(root, MC.PREFIX_PLACE, position);\n    }\n\n    if (container && position === S_AUTO) {\n      // Automatic position\n      this.onOpen(async () => {\n        const [contentSize, containerView] = await MH.promiseAll([\n          SizeWatcher.reuse().fetchCurrentSize(element),\n          ViewWatcher.reuse().fetchCurrentView(container),\n        ]);\n\n        const placement = await fetchPopupPlacement(contentSize, containerView);\n        if (placement) {\n          await setData(root, MC.PREFIX_PLACE, placement);\n        }\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type PopupConfig = {\n  /**\n   * The DOM ID of the popup. Will result in the top-level root element that's\n   * created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-popup-content-id`\n   * attribute used to link triggers to the popup.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the popup. Will result in the\n   * top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-popup-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and\n   *    the same `data-lisn-popup-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-popup-trigger`\n   *    class or `data-lisn-popup-trigger` attribute and that do _not_ have a\n   *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue false\n   */\n  closeButton?: boolean;\n\n  /**\n   * Specify the popup position _relative to its container_. Supported\n   * positions include `\"top\"`, `\"bottom\"`, `\"left\"`, `\"right\" `(which result\n   * on the popup being placed on top, bottom, etc, but center-aligned), or\n   * `\"top-left\"`, `\"left-top\"`, etc, as well as `\"auto\"`. If set to `\"auto\"`,\n   * then popup position will be based on the container position within the\n   * viewport at the time it's open.\n   *\n   * @defaultValue \"auto\"\n   */\n  position?: Position | `${Position}-${Position}` | \"auto\";\n\n  /**\n   * Automatically close the popup when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Modal\n * ********************/\n\n/**\n * Configures the given element as a {@link Modal} widget.\n *\n * The Modal widget sets up the given element to be hidden and open in a fixed\n * full-screen modal popup upon activation. Activation can be done manually by\n * calling {@link open} or when clicking on any of the given\n * {@link ModalConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-modal__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-modal` class or `data-lisn-modal` attribute set on the element that\n *   holds the content of the modal\n * - `lisn-modal-trigger` class or `data-lisn-modal-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     modal on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the modal on hover but and override\n *     {@link ModalConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-modal-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and the\n *    same `data-lisn-modal-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-modal-trigger` class or\n *    `data-lisn-modal-trigger` attribute and that do _not_ have a\n *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple modal with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-modal-trigger\">Open</div>\n *   <div class=\"lisn-modal\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a modal that doesn't automatically close on click outside or\n * Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Modal extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_MODAL,\n      (el, config) => new Modal(el, config),\n      modalConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: ModalConfig) {\n    super(element, {\n      name: WIDGET_NAME_MODAL,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: true,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type ModalConfig = {\n  /**\n   * The DOM ID of the modal. Will result in the top-level root element that's\n   * created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-modal-content-id`\n   * attribute used to link triggers to the modal.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the modal. Will result in the\n   * top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-modal-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and\n   *    the same `data-lisn-modal-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-modal-trigger`\n   *    class or `data-lisn-modal-trigger` attribute and that do _not_ have a\n   *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the modal when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * If you set this to false, then you should ensure {@link closeButton} is\n   * enabled.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Offcanvas\n * ********************/\n\n/**\n * Configures the given element as a {@link Offcanvas} widget.\n *\n * The Offcanvas widget sets up the given element to be hidden and open in a\n * fixed overlay (non full-screen) upon activation. Activation can be done\n * manually by calling {@link open} or when clicking on any of the given\n * {@link OffcanvasConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-offcanvas__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position `\"top\"`, `\"bottom\"`, `\"left\"` or\n *   `\"right\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-offcanvas` class or `data-lisn-offcanvas` attribute set on the\n *   element that holds the content of the offcanvas\n * - `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     offcanvas on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the offcanvas on hover but and override\n *     {@link OffcanvasConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and the same `data-lisn-offcanvas-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and that do _not_ have a `data-lisn-offcanvas-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple offcanvas with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-offcanvas-trigger\">Open</div>\n *   <div class=\"lisn-offcanvas\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a offcanvas that doesn't automatically close on click outside\n * or Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"position=top | auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Offcanvas extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_OFFCANVAS,\n      (el, config) => new Offcanvas(el, config),\n      offcanvasConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: OffcanvasConfig) {\n    super(element, {\n      name: WIDGET_NAME_OFFCANVAS,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n\n    const position = config?.position || MC.S_RIGHT;\n    setData(this.getRoot(), MC.PREFIX_PLACE, position);\n  }\n}\n\n/**\n * @interface\n */\nexport type OffcanvasConfig = {\n  /**\n   * The DOM ID of the offcanvas. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-offcanvas-content-id`\n   * attribute used to link triggers to the offcanvas.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the offcanvas. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and the same `data-lisn-offcanvas-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and that do _not_ have a `data-lisn-offcanvas-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Specify the offcanvas position. Supported positions are top, bottom, left,\n   * right.\n   *\n   * @defaultValue \"right\"\n   */\n  position?: Position;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the offcanvas when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n// ------------------------------\n\ntype ElementsCollection = {\n  content: HTMLElement;\n  root: HTMLElement;\n  container: HTMLElement | null;\n  outerWrapper: HTMLElement;\n  triggers: Map<Element, OpenableTriggerConfig>;\n};\n\nconst instances = MH.newWeakMap<Element, Openable>();\n\nconst WIDGET_NAME_COLLAPSIBLE = \"collapsible\";\nconst WIDGET_NAME_POPUP = \"popup\";\nconst WIDGET_NAME_MODAL = \"modal\";\nconst WIDGET_NAME_OFFCANVAS = \"offcanvas\";\n\nconst PREFIX_CLOSE_BTN = MH.prefixName(\"close-button\");\nconst PREFIX_IS_OPEN = MH.prefixName(\"is-open\");\nconst PREFIX_REVERSE = MH.prefixName(MC.S_REVERSE);\nconst PREFIX_PEEK = MH.prefixName(\"peek\");\nconst PREFIX_OPENS_ON_HOVER = MH.prefixName(\"opens-on-hover\");\nconst PREFIX_LINE = MH.prefixName(\"line\");\nconst PREFIX_ICON_POSITION = MH.prefixName(\"icon-position\");\nconst PREFIX_TRIGGER_ICON = MH.prefixName(\"trigger-icon\");\nconst PREFIX_ICON_WRAPPER = MH.prefixName(\"icon-wrapper\");\nconst S_AUTO = \"auto\";\nconst S_ARIA_EXPANDED = MC.ARIA_PREFIX + \"expanded\";\nconst S_ARIA_MODAL = MC.ARIA_PREFIX + \"modal\";\nconst VAR_PEEK_SIZE = MH.prefixCssVar(\"peek-size\");\nconst VAR_JS_COLLAPSIBLE_WIDTH = MH.prefixCssJsVar(\"collapsible-width\");\nconst MIN_CLICK_TIME_AFTER_HOVER_OPEN = 1000;\nconst S_ARROW_UP =\n  `${MC.S_ARROW}-${MC.S_UP}` as `${typeof MC.S_ARROW}-${typeof MC.S_UP}`;\nconst S_ARROW_DOWN =\n  `${MC.S_ARROW}-${MC.S_DOWN}` as `${typeof MC.S_ARROW}-${typeof MC.S_DOWN}`;\nconst S_ARROW_LEFT =\n  `${MC.S_ARROW}-${MC.S_LEFT}` as `${typeof MC.S_ARROW}-${typeof MC.S_LEFT}`;\nconst S_ARROW_RIGHT =\n  `${MC.S_ARROW}-${MC.S_RIGHT}` as `${typeof MC.S_ARROW}-${typeof MC.S_RIGHT}`;\n\nconst ARROW_TYPES = [\n  S_ARROW_UP,\n  S_ARROW_DOWN,\n  S_ARROW_LEFT,\n  S_ARROW_RIGHT,\n] as const;\n\nconst ICON_CLOSED_TYPES = [\"plus\", ...ARROW_TYPES] as const;\nconst ICON_OPEN_TYPES = [\"minus\", \"x\", ...ARROW_TYPES] as const;\ntype IconCloseType = (typeof ICON_CLOSED_TYPES)[number];\ntype IconOpenType = (typeof ICON_OPEN_TYPES)[number];\n\nconst isValidIconClosed = (value: string): value is IconCloseType =>\n  MH.includes(ICON_CLOSED_TYPES, value);\n\nconst isValidIconOpen = (value: string): value is IconOpenType =>\n  MH.includes(ICON_OPEN_TYPES, value);\n\nconst triggerConfigValidator: WidgetConfigValidatorObject<OpenableTriggerConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      value && toBool(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n    hover: validateBoolean,\n  };\n\nconst collapsibleConfigValidator: WidgetConfigValidatorObject<CollapsibleConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    horizontal: validateBoolean,\n    reverse: validateBoolean,\n    peek: validateBooleanOrString,\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      toBool(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n  };\n\nconst popupConfigValidator: WidgetConfigValidatorObject<PopupConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) =>\n    validateString(\n      key,\n      value,\n      (v) => v === S_AUTO || isValidPosition(v) || isValidTwoFoldPosition(v),\n    ),\n  autoClose: validateBoolean,\n};\n\nconst modalConfigValidator: WidgetConfigValidatorObject<ModalConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  autoClose: validateBoolean,\n};\n\nconst offcanvasConfigValidator: WidgetConfigValidatorObject<OffcanvasConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) => validateString(key, value, isValidPosition),\n  autoClose: validateBoolean,\n};\n\nconst getPrefixedNames = (name: string) => {\n  const pref = MH.prefixName(name);\n  return {\n    _root: `${pref}__root`,\n    _overlay: `${pref}__overlay`, // only used for modal/offcanvas\n    _innerWrapper: `${pref}__inner-wrapper`,\n    _outerWrapper: `${pref}__outer-wrapper`,\n    _content: `${pref}__content`,\n    _container: `${pref}__container`,\n    _trigger: `${pref}__trigger`,\n    // Use different classes for styling to the ones used for auto-discovering\n    // elements, so that re-creating existing widgets can correctly find the\n    // elements to be used by the new widget synchronously before the current\n    // one is destroyed.\n    _containerForSelect: `${pref}-container`,\n    _triggerForSelect: `${pref}-trigger`,\n    _contentId: `${pref}-content-id`,\n  };\n};\n\nconst findContainer = (content: Element, cls: string) => {\n  const currWidget = instances.get(content);\n  // If there's an existing widget that we're about to destroy, the content\n  // element will be wrapped in several elements and won't be restored until\n  // the next mutate time. In that case, to correctly determine the container\n  // element, use the current widget's root element, which is located in the\n  // content element's original place.\n  let childRef = currWidget?.getRoot() || content;\n  if (!MH.parentOf(childRef)) {\n    // The current widget is not yet initialized (i.e. we are re-creating it\n    // immediately after it was constructed)\n    childRef = content;\n  }\n\n  // Find the content container\n  let container: HTMLElement | null = childRef.closest(`.${cls}`);\n  if (!container) {\n    container = MH.parentOf(childRef);\n  }\n\n  return container;\n};\n\nconst findTriggers = (\n  content: Element,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const container = findContainer(content, prefixedNames._containerForSelect);\n  // jsdom does not like the below selector when suffixed by [data-*] or :not()...\n  // const triggerSelector = `:is(.${prefixedNames._triggerForSelect},[data-${prefixedNames._triggerForSelect}])`;\n  // So use this:\n  const getTriggerSelector = (suffix: string) =>\n    `.${prefixedNames._triggerForSelect}${suffix},` +\n    `[data-${prefixedNames._triggerForSelect}]${suffix}`;\n\n  const contentId = getData(content, prefixedNames._contentId);\n  let triggers: Element[] = [];\n\n  if (contentId) {\n    triggers = [\n      ...MH.docQuerySelectorAll(\n        getTriggerSelector(`[data-${prefixedNames._contentId}=\"${contentId}\"]`),\n      ),\n    ];\n  } else if (container) {\n    triggers = [\n      ...MH.arrayFrom(\n        MH.querySelectorAll(\n          container,\n          getTriggerSelector(`:not([data-${prefixedNames._contentId}])`),\n        ),\n      ).filter((t) => !content.contains(t)),\n    ];\n  }\n\n  return triggers;\n};\n\nconst getTriggersFrom = (\n  content: Element,\n  inputTriggers:\n    | Element[]\n    | Map<Element, OpenableTriggerConfig | null>\n    | undefined,\n  wrapTriggers: boolean,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const triggerMap = MH.newMap<Element, OpenableTriggerConfig>();\n\n  inputTriggers = inputTriggers || findTriggers(content, prefixedNames);\n\n  const addTrigger = (\n    trigger: Element,\n    triggerConfig: OpenableTriggerConfig,\n  ) => {\n    if (wrapTriggers) {\n      const wrapper = MH.createElement(\n        isInlineTag(MH.tagName(trigger)) ? \"span\" : \"div\",\n      );\n      wrapElement(trigger, { wrapper, ignoreMove: true }); // no need to await\n      trigger = wrapper;\n    }\n\n    triggerMap.set(trigger, triggerConfig);\n  };\n\n  if (MH.isArray(inputTriggers)) {\n    for (const trigger of inputTriggers) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(\n          getData(trigger, prefixedNames._triggerForSelect),\n          triggerConfigValidator,\n        ),\n      );\n    }\n  } else if (MH.isInstanceOf(inputTriggers, Map)) {\n    for (const [trigger, triggerConfig] of inputTriggers.entries()) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(triggerConfig, triggerConfigValidator),\n      );\n    }\n  }\n\n  return triggerMap;\n};\n\nconst setupElements = (\n  widget: Openable,\n  content: HTMLElement,\n  properties: OpenableProperties,\n): ElementsCollection => {\n  const prefixedNames = getPrefixedNames(properties.name);\n  const container = findContainer(content, prefixedNames._containerForSelect);\n\n  const wrapTriggers = properties.wrapTriggers ?? false;\n  const triggers = getTriggersFrom(\n    content,\n    properties.triggers,\n    wrapTriggers,\n    prefixedNames,\n  );\n\n  // Create two wrappers\n  const innerWrapper = MH.createElement(\"div\");\n  addClasses(innerWrapper, prefixedNames._innerWrapper);\n\n  const outerWrapper = wrapElementNow(innerWrapper);\n\n  // Setup the root element.\n  // For off-canvas types we need another wrapper to serve as the root and we\n  // need a placeholder element to save the content's original position so it\n  // can be restored on destroy.\n  // Otherwise use outerWrapper for root and insert the root where the content\n  // was.\n  let root: HTMLElement;\n  let placeholder: HTMLElement;\n  if (properties.isOffcanvas) {\n    addClasses(outerWrapper, prefixedNames._outerWrapper);\n    root = wrapElementNow(outerWrapper);\n    placeholder = MH.createElement(\"div\");\n\n    const overlay = MH.createElement(\"div\");\n    addClasses(overlay, prefixedNames._overlay);\n    moveElement(overlay, { to: root });\n  } else {\n    // Otherwise use the outer wrapper as the root\n    root = placeholder = outerWrapper;\n  }\n\n  if (properties.id) {\n    root.id = properties.id;\n  }\n\n  if (properties.className) {\n    addClassesNow(root, ...toArrayIfSingle(properties.className));\n  }\n\n  unsetBoolData(root, PREFIX_IS_OPEN);\n  const domID = getOrAssignID(root, properties.name);\n\n  if (properties.isModal) {\n    MH.setAttr(root, MC.S_ROLE, \"dialog\");\n    MH.setAttr(root, S_ARIA_MODAL);\n  }\n\n  addClasses(root, prefixedNames._root);\n  disableInitialTransition(root);\n\n  // Add a close button?\n  if (properties.closeButton) {\n    const closeBtn = MH.createButton(\"Close\");\n    addClasses(closeBtn, PREFIX_CLOSE_BTN);\n\n    // If autoClose is true, it will be closed on click anyway, because the\n    // close button is outside the content.\n    addEventListenerTo(closeBtn, MC.S_CLICK, () => {\n      widget.close();\n    });\n\n    moveElement(closeBtn, { to: properties.isOffcanvas ? root : innerWrapper });\n  }\n\n  // Transfer the relevant classes/data attrs from content to root element, so\n  // that our CSS can work without :has.\n  // This won't cause forced layout since the root is not yet attached to the\n  // DOM.\n  for (const cls of [\n    settings.lightThemeClassName,\n    settings.darkThemeClassName,\n  ]) {\n    if (hasClass(content, cls)) {\n      addClasses(root, cls);\n    }\n  }\n\n  const elements = {\n    content,\n    root,\n    container,\n    outerWrapper,\n    triggers,\n  };\n\n  // -------------------- Close / destroy hooks\n  widget.onClose(async () => {\n    for (const trigger of triggers.keys()) {\n      delData(trigger, PREFIX_OPENS_ON_HOVER);\n      MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n      await unsetBoolData(trigger, PREFIX_IS_OPEN);\n    }\n  });\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n\n    replaceElementNow(placeholder, content, { ignoreMove: true });\n    moveElementNow(root); // remove\n    removeClassesNow(content, prefixedNames._content);\n\n    if (container) {\n      removeClassesNow(container, prefixedNames._container);\n    }\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      MH.delAttr(trigger, MC.S_ARIA_CONTROLS);\n      MH.delAttr(trigger, S_ARIA_EXPANDED);\n\n      delDataNow(trigger, PREFIX_OPENS_ON_HOVER);\n      delDataNow(trigger, PREFIX_IS_OPEN);\n\n      removeClassesNow(\n        trigger,\n        prefixedNames._trigger,\n        ...(triggerConfig?.className || []),\n      );\n\n      if (trigger.id === triggerConfig?.id) {\n        trigger.id = \"\";\n      }\n\n      if (wrapTriggers) {\n        replaceElementNow(trigger, MH.childrenOf(trigger)[0], {\n          ignoreMove: true,\n        });\n      }\n    }\n\n    triggers.clear();\n\n    for (const el of [content, ...triggers.keys()]) {\n      if (instances.get(el) === widget) {\n        MH.deleteKey(instances, el);\n      }\n    }\n  });\n\n  // -------------------- SETUP\n  // Save the elements so we can lookup the instance\n  const currWidget = instances.get(content);\n  for (const el of [content, ...triggers.keys()]) {\n    instances.set(el, widget);\n  }\n\n  // Wait for the DOMWatcher to be active, which may not be before interactive.\n  waitForInteractive()\n    .then(currWidget?.destroy)\n    .then(waitForMutateTime)\n    .then(() => {\n      if (widget.isDestroyed()) {\n        return;\n      }\n\n      addClassesNow(content, prefixedNames._content);\n\n      if (container) {\n        addClassesNow(container, prefixedNames._container);\n      }\n\n      if (properties.isOffcanvas) {\n        moveElementNow(root, {\n          to: MH.getBody(),\n          ignoreMove: true,\n        });\n      }\n\n      // Move the placeholder element to before the content and then move\n      // content into inner wrapper.\n      moveElementNow(placeholder, {\n        // for not-offcanvas it's also the root\n        to: content,\n        position: \"before\",\n        ignoreMove: true,\n      });\n\n      moveElementNow(content, { to: innerWrapper, ignoreMove: true });\n\n      // Setup the triggers\n      for (const [trigger, triggerConfig] of triggers.entries()) {\n        MH.setAttr(trigger, MC.S_ARIA_CONTROLS, domID);\n        MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n\n        setBoolDataNow(\n          trigger,\n          PREFIX_OPENS_ON_HOVER,\n          triggerConfig[MC.S_HOVER],\n        );\n        unsetBoolDataNow(trigger, PREFIX_IS_OPEN);\n\n        addClassesNow(\n          trigger,\n          prefixedNames._trigger,\n          ...(triggerConfig?.className || []),\n        );\n\n        if (triggerConfig?.id) {\n          trigger.id = triggerConfig.id;\n        }\n      }\n\n      setupListeners(widget, elements, properties, prefixedNames);\n\n      if (properties.onSetup) {\n        properties.onSetup();\n      }\n    });\n\n  return elements;\n};\n\nconst setupListeners = (\n  widget: Openable,\n  elements: ElementsCollection,\n  properties: OpenableProperties,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const { content, root, triggers } = elements;\n  const doc = MH.getDoc();\n\n  let hoverTimeOpened = 0;\n  let isPointerOver = false;\n  let activeTrigger: Element | null = null;\n\n  // ----------\n\n  const isTrigger = (element: Element) =>\n    MH.includes(\n      MH.arrayFrom(triggers.keys()),\n      element.closest(getDefaultWidgetSelector(prefixedNames._trigger)),\n    );\n\n  const shouldPreventDefault = (trigger: Element) =>\n    triggers.get(trigger)?.preventDefault ?? true;\n\n  const usesHover = (trigger: Element) => triggers.get(trigger)?.hover;\n\n  const usesAutoClose = (trigger: Element | null) =>\n    (trigger ? triggers.get(trigger)?.autoClose : null) ?? properties.autoClose;\n\n  // ----------\n\n  const toggleTrigger = (event: Event, openIt?: boolean) => {\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger)) {\n      if (shouldPreventDefault(trigger)) {\n        MH.preventDefault(event);\n      }\n\n      // If a click was fired shortly after opening on hover, ignore\n      if (\n        openIt !== false && // not explicitly asked to close\n        widget.isOpen() &&\n        MH.timeSince(hoverTimeOpened) < MIN_CLICK_TIME_AFTER_HOVER_OPEN\n      ) {\n        return;\n      }\n\n      if (openIt ?? !widget.isOpen()) {\n        // open it\n        activeTrigger = trigger;\n        MH.setAttr(trigger, S_ARIA_EXPANDED); // will be unset on close\n        setBoolData(trigger, PREFIX_IS_OPEN); // will be unset on close\n\n        widget.open(); // no need to await\n\n        if (usesAutoClose(trigger)) {\n          if (usesHover(trigger)) {\n            addEventListenerTo(root, MC.S_POINTERENTER, setIsPointerOver);\n            addEventListenerTo(root, MC.S_POINTERLEAVE, pointerLeft);\n          }\n\n          // auto-close listeners setup by the onOpen handler below\n        }\n      } else {\n        widget.close(); // out onClose handler below will remove listeners\n      }\n    }\n  };\n\n  // ----------\n\n  const setIsPointerOver = () => {\n    isPointerOver = true;\n  };\n\n  // ----------\n\n  const unsetIsPointerOver = (event: Event) => {\n    // Keep it set to true if this is a touch pointer type; otherwise unset\n    isPointerOver = isPointerOver && MH.isTouchPointerEvent(event);\n  };\n\n  // ----------\n\n  const pointerEntered = (event: Event) => {\n    setIsPointerOver();\n    if (!widget.isOpen()) {\n      hoverTimeOpened = MH.timeNow();\n      toggleTrigger(event, true);\n    }\n  };\n\n  // ----------\n\n  const pointerLeft = (event: Event) => {\n    unsetIsPointerOver(event);\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger) && usesAutoClose(trigger)) {\n      MH.setTimer(\n        () => {\n          if (!isPointerOver) {\n            widget.close();\n          }\n        },\n        // use a delay that allows the mouse to move from trigger to content\n        // without closing it\n        // TODO make this user-configurable\n        properties.isOffcanvas ? 300 : 50,\n      );\n    }\n  };\n\n  // ----------\n\n  const closeIfEscape = (event: Event) => {\n    if ((event as KeyboardEvent).key === \"Escape\") {\n      widget.close(); // no need to await\n    }\n  };\n\n  // ----------\n\n  const closeIfClickOutside = (event: Event) => {\n    const target = MH.targetOf(event);\n    if (\n      target === doc ||\n      (MH.isElement(target) &&\n        !content.contains(target) && // outside content\n        !isTrigger(target)) // handled by pointer watcher\n    ) {\n      widget.close();\n    }\n  };\n\n  // ----------\n\n  const maybeSetupAutoCloseListeners = (\n    trigger: Element | null,\n    remove: boolean,\n  ) => {\n    if (usesAutoClose(trigger)) {\n      const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n      addOrRemove(doc, \"keyup\", closeIfEscape);\n\n      // Add a short delay so that we don't catch the bubbling of the click event\n      // that opened the widget.\n      MH.setTimer(() => addOrRemove(doc, MC.S_CLICK, closeIfClickOutside), 100);\n\n      if (trigger && usesHover(trigger)) {\n        addOrRemove(trigger, MC.S_POINTERLEAVE, pointerLeft);\n      }\n    }\n  };\n\n  // ----------\n\n  const setupOrCleanup = (remove: boolean) => {\n    const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      // Always setup click listeners\n      addOrRemove(trigger, MC.S_CLICK, toggleTrigger);\n\n      if (triggerConfig[MC.S_HOVER]) {\n        addOrRemove(trigger, MC.S_POINTERENTER, pointerEntered);\n      }\n    }\n  };\n\n  // ----------\n\n  setupOrCleanup(false);\n\n  widget.onOpen(() => {\n    maybeSetupAutoCloseListeners(activeTrigger, false); // setup listeners if relevant\n  });\n\n  widget.onClose(() => {\n    hoverTimeOpened = 0;\n    isPointerOver = false;\n\n    removeEventListenerFrom(root, MC.S_POINTERENTER, setIsPointerOver);\n    removeEventListenerFrom(root, MC.S_POINTERLEAVE, pointerLeft);\n\n    maybeSetupAutoCloseListeners(activeTrigger, true); // remove listeners if any\n    activeTrigger = null;\n  });\n\n  widget.onDestroy(() => {\n    setupOrCleanup(true); // remove\n  });\n};\n\n// COLLAPSIBLE ------------------------------\n\nconst insertCollapsibleIcon = (\n  trigger: Element,\n  triggerConfig: OpenableTriggerConfig,\n  widget: Collapsible,\n  widgetConfig: CollapsibleConfig | undefined,\n) => {\n  const iconPosition = triggerConfig.icon ?? widgetConfig?.icon;\n  const iconClosed =\n    triggerConfig.iconClosed ?? widgetConfig?.iconClosed ?? \"plus\";\n  const iconOpen = triggerConfig.iconOpen ?? widgetConfig?.iconOpen ?? \"minus\";\n\n  if (iconPosition) {\n    addClasses(trigger, PREFIX_ICON_WRAPPER);\n    setData(trigger, PREFIX_ICON_POSITION, iconPosition);\n\n    const icon = MH.createElement(\"span\");\n    setDataNow(icon, PREFIX_TRIGGER_ICON, iconClosed);\n\n    for (let l = 0; l < 2; l++) {\n      const line = MH.createElement(\"span\");\n      addClassesNow(line, PREFIX_LINE);\n      moveElementNow(line, { to: icon });\n    }\n\n    moveElement(icon, { to: trigger, ignoreMove: true });\n\n    widget.onOpen(() => {\n      if (getBoolData(trigger, PREFIX_IS_OPEN)) {\n        setData(icon, PREFIX_TRIGGER_ICON, iconOpen);\n      }\n    });\n\n    widget.onClose(() => {\n      setData(icon, PREFIX_TRIGGER_ICON, iconClosed);\n    });\n  }\n};\n\n// POPUP ------------------------------\n\nconst fetchPopupPlacement = async (\n  contentSize: SizeData,\n  containerView: ViewData,\n) => {\n  const containerPosition = containerView.relative;\n  const containerTop = containerPosition[MC.S_TOP];\n  const containerBottom = containerPosition[MC.S_BOTTOM];\n  const containerLeft = containerPosition[MC.S_LEFT];\n  const containerRight = containerPosition[MC.S_RIGHT];\n  const containerHMiddle = containerPosition.hMiddle;\n  const containerVMiddle = containerPosition.vMiddle;\n  const vpSize = await fetchViewportSize();\n  const popupWidth = contentSize.border[MC.S_WIDTH] / vpSize[MC.S_WIDTH];\n  const popupHeight = contentSize.border[MC.S_HEIGHT] / vpSize[MC.S_HEIGHT];\n\n  // - Find the maximum of these quantities:\n  //   - containerTop - popupHeight:\n  //     the space on top if placed on top-(left|right|)\n  //   - 1 - (containerBottom + popupHeight):\n  //     the space on bottom be if placed on bottom-(left|right|)\n  //   - containerLeft - popupWidth:\n  //     the space on left if placed on left-(top|bottom|)\n  //   - 1 - (containerRight + popupWidth):\n  //     the space on right if placed on right-(top|bottom|)\n  //\n  // This determines the main placement: top|bottom|left|right\n\n  // Then to determine secondary alignment:\n  // - For top/bottom placement, determine horizontal alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerLeft + popupWidth):\n  //       the space on right if left-aligned\n  //     - containerRight - popupWidth:\n  //       the space on left if right-aligned\n  //     - min(\n  //           containerHMiddle - popupWidth / 2,\n  //           1 - (containerHMiddle + popupWidth / 2),\n  //       ):\n  //       the minimum of the space on either left or right if center-aligned\n  //\n  // - For left/right placement, determine vertical alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerTop + popupHeight):\n  //       the space on bottom if top-aligned\n  //     - containerBottom - popupHeight:\n  //       the space on top if bottom-aligned\n  //     - min(\n  //           containerVMiddle - popupHeight / 2,\n  //           1 - (containerVMiddle + popupHeight / 2),\n  //       ):\n  //       the minimum of the space on either top or bottom if center-aligned\n\n  const placementVars = {\n    top: containerTop - popupHeight,\n    bottom: 1 - (containerBottom + popupHeight),\n    left: containerLeft - popupWidth,\n    right: 1 - (containerRight + popupWidth),\n  };\n\n  const placement = keyWithMaxVal(placementVars);\n  if (placement === undefined) {\n    // container must be out-view and so left/right are NaN\n    return;\n  }\n  let finalPlacement = placement;\n\n  let alignmentVars;\n  switch (placement) {\n    case MC.S_TOP:\n    case MC.S_BOTTOM:\n      alignmentVars = {\n        left: 1 - (containerLeft + popupWidth),\n        right: containerRight - popupWidth,\n        middle: MH.min(\n          containerHMiddle - popupWidth / 2,\n          1 - (containerHMiddle + popupWidth / 2),\n        ),\n      };\n      break;\n\n    case MC.S_LEFT:\n    case MC.S_RIGHT:\n      alignmentVars = {\n        top: 1 - (containerTop + popupHeight),\n        bottom: containerBottom - popupHeight,\n        middle: MH.min(\n          containerVMiddle - popupHeight / 2,\n          1 - (containerVMiddle + popupHeight / 2),\n        ),\n      };\n      break;\n\n    default:\n      return;\n  }\n\n  const alignment = keyWithMaxVal(alignmentVars);\n  if (alignment !== \"middle\") {\n    finalPlacement += \"-\" + alignment;\n  }\n\n  return finalPlacement;\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling openables\n * {@link Open} opens or closes the {@link Openable} widget setup for the given\n * element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { Openable } from \"@lisn/widgets/openable\";\nimport { fetchUniqueWidget } from \"@lisn/widgets/widget\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Opens or closes the {@link Openable} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"open\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-modal\" data-lisn-on-view=\"@open +reference=top:50%\"></div>\n * ```\n *\n * @category Controlling openables\n */\nexport class Open implements Action {\n  /**\n   * Opens the Openable widget setup for the element.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Closes the Openable widget setup for the element.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the Openable widget setup for the element.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"open\", (element) => new Open(element));\n  }\n\n  constructor(element: Element) {\n    const open = (widget: Openable | null) => widget?.open();\n    const close = (widget: Openable | null) => widget?.close();\n    const toggle = (widget: Openable | null) => widget?.toggle();\n\n    const widgetPromise = fetchUniqueWidget(\"openable\", element, Openable);\n\n    this.do = () => widgetPromise.then(open);\n    this.undo = () => widgetPromise.then(close);\n    this[MC.S_TOGGLE] = () => widgetPromise.then(toggle);\n  }\n}\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  addClasses,\n  removeClassesNow,\n  getData,\n  setData,\n  setBoolData,\n  delDataNow,\n  setStyleProp,\n  delStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { isValidInputDevice } from \"@lisn/utils/gesture\";\nimport { toInt } from \"@lisn/utils/math\";\nimport { toBool } from \"@lisn/utils/misc\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport {\n  validateStrList,\n  validateNumber,\n  validateString,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport {\n  GestureWatcher,\n  OnGestureOptions,\n  GestureData,\n} from \"@lisn/watchers/gesture-watcher\";\nimport { ScrollWatcher, ScrollOptions } from \"@lisn/watchers/scroll-watcher\";\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  WidgetCallback,\n  WidgetHandler,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as a {@link Pager} widget.\n *\n * The Pager widget sets up the elements that make up its pages to be overlayed\n * on top of each other with only one of them visible at a time. When a user\n * performs a scroll-like gesture (see {@link GestureWatcher}), the pages are\n * flicked through: gestures, whose direction is down (or left) result in the\n * next page being shown, otherwise the previous.\n *\n * The widget should have more than one page.\n *\n * Optionally, the widget can have a set of \"switch\" elements and a set of\n * \"toggle\" elements which correspond one-to-one to each page. Switches go to\n * the given page and toggles toggle the enabled/disabled state of the page.\n *\n * **IMPORTANT:** The page elements will be positioned absolutely, and\n * therefore the pager likely needs to have an explicit height. If you enable\n * {@link PagerConfig.fullscreen}, then the element will get `height: 100vh`\n * set. Otherwise, you need to set its height in your CSS.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Pager}\n * widget on a given element. Use {@link Pager.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the pager element:\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n * - `data-lisn-use-parallax`: `\"true\"` or `\"false\"`\n * - `data-lisn-total-pages`: the number of pages\n * - `data-lisn-current-page`: the current page number\n * - `data-lisn-current-page-is-last`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-first-enabled`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-last-enabled`: `\"true\"` or `\"false\"`\n *\n * The following dynamic CSS properties are also set on the pager element's style:\n * - `--lisn-js--total-pages`: the number of pages\n * - `--lisn-js--current-page`: the current page number\n *\n * The following dynamic attributes are set on each page, toggle or switch element:\n * - `data-lisn-page-state`: `\"current\"`, `\"next\"`, `\"covered\"` or `\"disabled\"`\n * - `data-lisn-page-number`: the corresponding page's number\n *\n * The following analogous dynamic CSS properties are also set on each page,\n * toggle or switch element's style:\n * - `--lisn-js--page-number`: the corresponding page's number\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-pager` class or `data-lisn-pager` attribute set on the container\n *   element that constitutes the pager\n * - `lisn-pager-page` class or `data-lisn-pager-page` attribute set on\n *   elements that should act as the pages.\n * - `lisn-pager-toggle` class or `data-lisn-pager-toggle` attribute set on\n *   elements that should act as the toggles.\n * - `lisn-pager-switch` class or `data-lisn-pager-switch` attribute set on\n *   elements that should act as the switches.\n *\n * When using auto-widgets, the elements that will be used as pages are\n * discovered in the following way:\n * 1. The top-level element that constitutes the widget is searched for any\n *    elements that contain the `lisn-pager-page` class or\n *    `data-lisn-pager-page` attribute. They do not have to be immediate\n *    children of the root element, but they **should** all be siblings.\n * 2. If there are no such elements, all of the immediate children of the\n *    widget element except any `script` or `style` elements are taken as the\n *    pages.\n *\n * The toggles and switches are descendants of the top-level element that\n * constitutes the widget, that contain the\n * `lisn-pager-toggle`/`lisn-pager-switch` class or `data-lisn-pager-toggle`/\n * `data-lisn-pager-switch` attribute. They do not have to be immediate\n * children of the root element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple pager with default settings.\n *\n * ```html\n * <div class=\"lisn-pager\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * As above but with all settings explicitly set to their default (`false`).\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen=false | parallax=false | horizontal=false\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>Horizontal: Page 1</div>\n *   <div>Horizontal: Page 2</div>\n *   <div>Horizontal: Page 3</div>\n *   <div>Horizontal: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings, as well as toggle and switch buttons.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>\n *     <div data-lisn-pager-page>Horizontal: Page 1</div>\n *     <div data-lisn-pager-page>Horizontal: Page 2</div>\n *     <div data-lisn-pager-page>Horizontal: Page 3</div>\n *     <div data-lisn-pager-page>Horizontal: Page 4</div>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-toggle>Toggle page 1</button>\n *     <button data-lisn-pager-toggle>Toggle page 2</button>\n *     <button data-lisn-pager-toggle>Toggle page 3</button>\n *     <button data-lisn-pager-toggle>Toggle page 4</button>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-switch>Go to page 1</button>\n *     <button data-lisn-pager-switch>Go to page 2</button>\n *     <button data-lisn-pager-switch>Go to page 3</button>\n *     <button data-lisn-pager-switch>Go to page 4</button>\n *   </div>\n * </div>\n * ```\n */\nexport class Pager extends Widget {\n  /**\n   * Advances the widget's page by 1. If the current page is the last one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled down/right\n   * (depending on the gesture direction).\n   */\n  readonly nextPage: () => Promise<void>;\n\n  /**\n   * Reverses the widget's page by 1. If the current page is the first one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled up/left\n   * (depending on the gesture direction).\n   */\n  readonly prevPage: () => Promise<void>;\n\n  /**\n   * Advances the widget to the given page. Note that page numbers start at 1.\n   *\n   * If this page is disabled, nothing is done.\n   */\n  readonly goToPage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Disables the given page number. Note that page numbers start at 1.\n   *\n   * The page will be skipped during transitioning to previous/next.\n   *\n   * If the page is the current one, then the current page will be switched to\n   * the previous one (that's not disabled), or if this is the first enabled\n   * page, then it will switch to the next one that's not disabled.\n   *\n   * If this is the last enabled page, nothing is done.\n   */\n  readonly disablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page number. Note that page numbers start at 1.\n   */\n  readonly enablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page if it is disabled, otherwise disables it. Note\n   * that page numbers start at 1.\n   */\n  readonly togglePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Returns true if the given page number is disabled. Note that page\n   * numbers start at 1.\n   */\n  readonly isPageDisabled: (pageNum: number) => boolean;\n\n  /**\n   * Returns the current page.\n   */\n  readonly getCurrentPage: () => Element;\n\n  /**\n   * Returns the previous page, before the last transition.\n   *\n   * If there has been no change of page, returns the first page, same as\n   * {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPage: () => Element;\n\n  /**\n   * Returns the number of the current page. Note that numbers start at 1.\n   */\n  readonly getCurrentPageNum: () => number;\n\n  /**\n   * Returns the number of the previous page, before the last transition. Note\n   * that numbers start at 1.\n   *\n   * If there has been no change of page, returns the number of the first page,\n   * same as {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPageNum: () => number;\n\n  /**\n   * The given handler will be called whenever there is a change of page. It\n   * will be called after the current page number is updated internally (so\n   * {@link getPreviousPageNum} and {@link getCurrentPageNum} will return the\n   * updated numbers), but before the page transition styles are updated.\n   *\n   * If the handler returns a promise, it will be awaited upon.\n   */\n  readonly onTransition: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns the page elements.\n   */\n  readonly getPages: () => Element[];\n\n  /**\n   * Returns the toggle elements if any.\n   */\n  readonly getToggles: () => Element[];\n\n  /**\n   * Returns the switch elements if any.\n   */\n  readonly getSwitches: () => Element[];\n\n  static get(element: Element): Pager | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Pager)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!Pager.get(element)) {\n          return new Pager(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If there are less than 2 pages given or found, or if any\n   *                page is not a descendant of the main pager element.\n   */\n  constructor(element: Element, config?: PagerConfig) {\n    const destroyPromise = Pager.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const pages = config?.pages || [];\n    const toggles = config?.toggles || [];\n    const switches = config?.switches || [];\n    const nextPrevSwitch = {\n      _next: config?.nextSwitch || null,\n      _prev: config?.prevSwitch || null,\n    };\n\n    const pageSelector = getDefaultWidgetSelector(PREFIX_PAGE__FOR_SELECT);\n    const toggleSelector = getDefaultWidgetSelector(PREFIX_TOGGLE__FOR_SELECT);\n    const switchSelector = getDefaultWidgetSelector(PREFIX_SWITCH__FOR_SELECT);\n    const nextSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_NEXT_SWITCH__FOR_SELECT,\n    );\n    const prevSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_PREV_SWITCH__FOR_SELECT,\n    );\n\n    if (!MH.lengthOf(pages)) {\n      pages.push(...MH.querySelectorAll(element, pageSelector));\n\n      if (!MH.lengthOf(pages)) {\n        pages.push(\n          ...getVisibleContentChildren(element).filter(\n            (e) => !e.matches(switchSelector),\n          ),\n        );\n      }\n    }\n\n    if (!MH.lengthOf(toggles)) {\n      toggles.push(...MH.querySelectorAll(element, toggleSelector));\n    }\n\n    if (!MH.lengthOf(switches)) {\n      switches.push(...MH.querySelectorAll(element, switchSelector));\n    }\n\n    if (!nextPrevSwitch._next) {\n      nextPrevSwitch._next = MH.querySelector(element, nextSwitchSelector);\n    }\n\n    if (!nextPrevSwitch._prev) {\n      nextPrevSwitch._prev = MH.querySelector(element, prevSwitchSelector);\n    }\n\n    const numPages = MH.lengthOf(pages);\n    if (numPages < 2) {\n      throw MH.usageError(\"Pager must have more than 1 page\");\n    }\n\n    for (const page of pages) {\n      if (!element.contains(page) || page === element) {\n        throw MH.usageError(\"Pager's pages must be its descendants\");\n      }\n    }\n\n    const components = {\n      _pages: pages,\n      _toggles: toggles,\n      _switches: switches,\n      _nextPrevSwitch: nextPrevSwitch,\n    };\n\n    const methods = getMethods(this, components, element, config);\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, element, components, config, methods);\n    });\n\n    this.nextPage = () => methods._nextPage();\n    this.prevPage = () => methods._prevPage();\n    this.goToPage = (pageNum) => methods._goToPage(pageNum);\n    this.disablePage = methods._disablePage;\n    this.enablePage = methods._enablePage;\n    this.togglePage = methods._togglePage;\n    this.isPageDisabled = methods._isPageDisabled;\n    this.getCurrentPage = methods._getCurrentPage;\n    this.getPreviousPage = methods._getPreviousPage;\n    this.getCurrentPageNum = methods._getCurrentPageNum;\n    this.getPreviousPageNum = methods._getPreviousPageNum;\n    this.onTransition = methods._onTransition;\n\n    this.getPages = () => [...pages];\n    this.getSwitches = () => [...switches];\n    this.getToggles = () => [...toggles];\n  }\n}\n\n/**\n * @interface\n */\nexport type PagerConfig = {\n  /**\n   * The elements that will make up the pages.\n   *\n   * They do not have to be immediate children of the root element, but they\n   * should all be siblings.\n   *\n   * The widget should have more than one page.\n   *\n   * If this is not specified, then\n   * 1. The top-level element that constitutes the widget is searched for any\n   *    elements that contain the `lisn-pager-page` class or the\n   *    `data-lisn-pager-page` attribute, and these are used as pages.\n   * 2. If there are no such elements, all of the immediate children of the\n   *    widget element (other than `script` and `style` elements) are taken as\n   *    the pages.\n   *\n   * **IMPORTANT:** The page elements will be positioned absolutely relative to\n   * their immediate parent, but their parent likely needs to have an explicit\n   * height. If you enable {@link PagerConfig.fullscreen}, then the page parent\n   * will get `height: 100vh` set. Otherwise, you need to set its height in\n   * your CSS.\n   *\n   * @defaultValue undefined\n   */\n  pages?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that toggles the\n   * enabled/disabled state of the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-toggle`\n   * class or the `data-lisn-pager-toggle` attribute, and these are used as\n   * toggles.\n   *\n   * @defaultValue undefined\n   */\n  toggles?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that switches the\n   * pager to the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-switch`\n   * class or the `data-lisn-pager-switch` attribute, and these are used as\n   * switches.\n   *\n   * @defaultValue undefined\n   */\n  switches?: Element[];\n\n  /**\n   * This element will be assigned a click listener that goes to the next page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-next-switch` class or the `data-lisn-pager-next-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  nextSwitch?: Element;\n\n  /**\n   * This element will be assigned a click listener that goes to the previous\n   * page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-prev-switch` class or the `data-lisn-pager-prev-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  prevSwitch?: Element;\n\n  /**\n   * Set the initial page number.\n   *\n   * @defaultValue 1\n   */\n  initialPage?: number;\n\n  /**\n   * If true, then:\n   * - the pager's height will be set to the viewport height (100vh)\n   * - the pager's scrolling ancestor will be scrolled to the top of the pager\n   *   when 30% of it is in view\n   * - scrolling beyond the first or last page will initiate scroll up/left or\n   *   down/right the pager's scrolling ancestor in order to allow \"leaving\"\n   *   the pager\n   *\n   * Note that since the pager's pages will be positioned absolutely, if you do\n   * _not_ enable this option, you will need to manually set the height of the\n   * page parent element via CSS.\n   *\n   * @defaultValue false\n   */\n  fullscreen?: boolean;\n\n  /**\n   * Use a parallax effect for switching pages.\n   *\n   * @defaultValue false\n   */\n  parallax?: boolean;\n\n  /**\n   * Transition pages sideways instead of vertically.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Transition pages upon user scroll-like and drag-like gestures via the\n   * given {@link GestureDevice}s. If set to true, then gestures using all\n   * device types are supported.\n   *\n   * Note that drag gesture is only supported by the \"pointer\" device and also\n   * the \"pointer\" device only supports drag gestures, so if you want to\n   * disable drag gestures, simply pass \"wheel,key,touch\" as this option.\n   *\n   * @defaultValue true\n   */\n  useGestures?: boolean | CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If true, then pages will be advanced backwards/forwards regardless if the\n   * gesture direction is horizontal or vertical.\n   *\n   * If false then, a gesture will go to the next page only if its direction is\n   * down (or right if {@link horizontal}), and to the previous page only if\n   * the gesture direction is up (or left if {@link horizontal}).\n   *\n   * **IMPORTANT:**\n   * If {@link fullscreen}, {@link preventDefault} and\n   * {@link alignGestureDirection} are all true, then the pager's scrollable\n   * parent must be scrollable in the same direction as the pager orientation,\n   * otherwise automatic scroll beyond the last/first page won't work.\n   *\n   * @defaultValue false\n   */\n  alignGestureDirection?: boolean;\n\n  /**\n   * Whether to prevent the default action for events that would result in\n   * gestures.\n   *\n   * **NOTE:**\n   * If true (default), then all events that originate from a device given in\n   * {@link useGestures} and that could result in a gesture will be prevented\n   * regardless of their direction and whether {@link alignGestureDirection} is\n   * true.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n};\n\n// --------------------\n\ntype Components = {\n  _pages: Element[];\n  _toggles: Element[];\n  _switches: Element[];\n  _nextPrevSwitch: { _next: Element | null; _prev: Element | null };\n};\n\n// Swiping on some trackpads results in \"trailing\" wheel events sent for some\n// while which results in multiple pages being advanced in a short while. So we\n// limit how often pages can be advanced.\nconst MIN_TIME_BETWEEN_WHEEL = 1000;\n\nconst S_CURRENT = \"current\";\nconst S_ARIA_CURRENT = MC.ARIA_PREFIX + S_CURRENT;\nconst S_COVERED = \"covered\";\nconst S_NEXT = \"next\";\nconst S_TOTAL_PAGES = \"total-pages\";\nconst S_CURRENT_PAGE = \"current-page\";\nconst S_PAGE_NUMBER = \"page-number\";\nconst WIDGET_NAME = \"pager\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_PAGE_CONTAINER = `${PREFIXED_NAME}__page-container`;\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_PAGE = `${PREFIXED_NAME}__page`;\nconst PREFIX_PAGE__FOR_SELECT = `${PREFIXED_NAME}-page`;\nconst PREFIX_TOGGLE__FOR_SELECT = `${PREFIXED_NAME}-toggle`;\nconst PREFIX_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-switch`;\nconst PREFIX_NEXT_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-next-switch`;\nconst PREFIX_PREV_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-prev-switch`;\n\nconst PREFIX_IS_FULLSCREEN = MH.prefixName(\"is-fullscreen\");\nconst PREFIX_USE_PARALLAX = MH.prefixName(\"use-parallax\");\nconst PREFIX_TOTAL_PAGES = MH.prefixName(S_TOTAL_PAGES);\nconst PREFIX_CURRENT_PAGE = MH.prefixName(S_CURRENT_PAGE);\nconst PREFIX_CURRENT_PAGE_IS_LAST = `${PREFIX_CURRENT_PAGE}-is-last`;\nconst PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED = `${PREFIX_CURRENT_PAGE}-is-first-enabled`;\nconst PREFIX_CURRENT_PAGE_IS_LAST_ENABLED = `${PREFIX_CURRENT_PAGE_IS_LAST}-enabled`;\nconst PREFIX_PAGE_STATE = MH.prefixName(\"page-state\");\nconst PREFIX_PAGE_NUMBER = MH.prefixName(S_PAGE_NUMBER);\nconst VAR_TOTAL_PAGES = MH.prefixCssJsVar(S_TOTAL_PAGES);\nconst VAR_CURRENT_PAGE = MH.prefixCssJsVar(S_CURRENT_PAGE);\nconst VAR_PAGE_NUMBER = MH.prefixCssJsVar(S_PAGE_NUMBER);\n\n// Only one Pager widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<PagerConfig> = {\n  initialPage: validateNumber,\n  fullscreen: validateBoolean,\n  parallax: validateBoolean,\n  horizontal: validateBoolean,\n  useGestures: (key, value) => {\n    if (MH.isNullish(value)) {\n      return undefined;\n    }\n\n    const bool = toBool(value);\n    if (bool !== null) {\n      return bool;\n    }\n\n    return (\n      validateStrList(\n        \"useGestures\",\n        validateString(key, value),\n        isValidInputDevice,\n      ) || true\n    );\n  },\n  alignGestureDirection: validateBoolean,\n  preventDefault: validateBoolean,\n};\n\nconst fetchClosestScrollable = (element: Element) =>\n  waitForMeasureTime().then(\n    () => getClosestScrollable(element, { active: true }) ?? undefined,\n  );\n\nconst setPageNumber = (components: Components, pageNum: number) => {\n  let lastPromise: Promise<void> = MH.promiseResolve();\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      setData(el, PREFIX_PAGE_NUMBER, pageNum + \"\");\n      lastPromise = setStyleProp(el, VAR_PAGE_NUMBER, pageNum + \"\");\n    }\n  }\n\n  return lastPromise;\n};\n\nconst setCurrentPage = (\n  pagerEl: Element,\n  currPageNum: number,\n  numPages: number,\n  isPageDisabled: (pageNum: number) => boolean,\n) => {\n  let isFirstEnabled = true;\n  let isLastEnabled = true;\n  for (let n = 1; n <= numPages; n++) {\n    if (!isPageDisabled(n)) {\n      if (n < currPageNum) {\n        isFirstEnabled = false;\n      } else if (n > currPageNum) {\n        isLastEnabled = false;\n      }\n    }\n  }\n\n  setStyleProp(pagerEl, VAR_CURRENT_PAGE, currPageNum + \"\");\n  setData(pagerEl, PREFIX_CURRENT_PAGE, currPageNum + \"\");\n  setBoolData(pagerEl, PREFIX_CURRENT_PAGE_IS_LAST, numPages === numPages);\n  setBoolData(pagerEl, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED, isFirstEnabled);\n  return setBoolData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST_ENABLED,\n    isLastEnabled,\n  );\n};\n\nconst setPageState = async (\n  components: Components,\n  pageNum: number,\n  state: string,\n) => {\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      await setData(el, PREFIX_PAGE_STATE, state);\n    }\n  }\n};\n\nconst init = (\n  widget: Pager,\n  element: Element,\n  components: Components,\n  config: PagerConfig | undefined,\n  methods: ReturnType<typeof getMethods>,\n) => {\n  const pages = components._pages;\n  const toggles = components._toggles;\n  const switches = components._switches;\n  const nextSwitch = components._nextPrevSwitch._next;\n  const prevSwitch = components._nextPrevSwitch._prev;\n  const pageContainer = pages[0]?.parentElement;\n\n  let initialPage = toInt(config?.initialPage ?? 1);\n  const isFullscreen = config?.fullscreen ?? false;\n  const isParallax = config?.parallax ?? false;\n  const isHorizontal = config?.horizontal ?? false;\n  const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n  const useGestures = config?.useGestures ?? true;\n  const alignGestureDirection = config?.alignGestureDirection ?? false;\n  const preventDefault = config?.preventDefault ?? true;\n\n  const scrollWatcher = ScrollWatcher.reuse();\n  let gestureWatcher: GestureWatcher | null = null;\n  let viewWatcher: ViewWatcher | null = null;\n  if (isFullscreen) {\n    viewWatcher = ViewWatcher.reuse({ rootMargin: \"0px\", threshold: 0.3 });\n  }\n\n  if (useGestures) {\n    gestureWatcher = GestureWatcher.reuse();\n  }\n\n  const getGestureOptions = (\n    directions: Direction | Direction[] | undefined,\n  ): OnGestureOptions => {\n    return {\n      devices: MH.isBoolean(useGestures) // i.e. true; if it's false, then gestureWatcher is null\n        ? undefined // all devices\n        : useGestures,\n      intents: [MC.S_DRAG, MC.S_SCROLL],\n      directions,\n      deltaThreshold: 25,\n      preventDefault,\n    };\n  };\n\n  const scrollToPager = async () => {\n    scrollWatcher.scrollTo(element, {\n      scrollable: await fetchClosestScrollable(element),\n    });\n  };\n\n  const transitionOnGesture = (target: EventTarget, data: GestureData) => {\n    const swapDirection = data.intent === MC.S_DRAG;\n\n    if (MH.includes([MC.S_LEFT, MC.S_UP], data.direction)) {\n      (swapDirection ? methods._nextPage : methods._prevPage)(data);\n    } else {\n      (swapDirection ? methods._prevPage : methods._nextPage)(data);\n    }\n  };\n\n  const addWatcher = () => {\n    gestureWatcher?.onGesture(\n      element,\n      transitionOnGesture,\n      getGestureOptions(\n        alignGestureDirection\n          ? isHorizontal\n            ? [MC.S_LEFT, MC.S_RIGHT]\n            : [MC.S_UP, MC.S_DOWN]\n          : undefined, // all directions\n      ),\n    );\n\n    viewWatcher?.onView(element, scrollToPager, { views: \"at\" });\n  };\n\n  const getPageNumForEvent = (event: Event) => {\n    const target = MH.currentTargetOf(event);\n    return MH.isElement(target)\n      ? toInt(getData(target, PREFIX_PAGE_NUMBER))\n      : 0;\n  };\n\n  const toggleClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._togglePage(pageNum);\n  };\n\n  const switchClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._goToPage(pageNum);\n  };\n\n  const nextSwitchClickListener = () => methods._nextPage();\n  const prevSwitchClickListener = () => methods._prevPage();\n\n  const removeWatcher = () => {\n    gestureWatcher?.offGesture(element, transitionOnGesture);\n\n    viewWatcher?.offView(element, scrollToPager);\n  };\n\n  // SETUP ------------------------------\n\n  widget.onDisable(removeWatcher);\n  widget.onEnable(addWatcher);\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n    delDataNow(element, MC.PREFIX_ORIENTATION);\n    delDataNow(element, PREFIX_IS_FULLSCREEN);\n    delDataNow(element, PREFIX_USE_PARALLAX);\n    delDataNow(element, PREFIX_CURRENT_PAGE);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST_ENABLED);\n    delDataNow(element, PREFIX_TOTAL_PAGES);\n    delStylePropNow(element, VAR_CURRENT_PAGE);\n    delStylePropNow(element, VAR_TOTAL_PAGES);\n\n    for (let idx = 0; idx < MH.lengthOf(pages); idx++) {\n      removeClassesNow(pages[idx], PREFIX_PAGE);\n\n      for (const [el, listener] of [\n        [pages[idx], null],\n        [toggles[idx], toggleClickListener],\n        [switches[idx], switchClickListener],\n      ] as const) {\n        if (el) {\n          delDataNow(el, PREFIX_PAGE_STATE);\n          delDataNow(el, PREFIX_PAGE_NUMBER);\n          delStylePropNow(el, VAR_PAGE_NUMBER);\n          if (listener) {\n            removeEventListenerFrom(el, MC.S_CLICK, listener);\n          }\n        }\n      }\n\n      MH.delAttr(pages[idx], S_ARIA_CURRENT);\n    }\n\n    if (nextSwitch) {\n      removeEventListenerFrom(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n    }\n\n    if (prevSwitch) {\n      removeEventListenerFrom(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n    }\n\n    removeClassesNow(element, PREFIX_ROOT);\n    if (pageContainer) {\n      removeClassesNow(pageContainer, PREFIX_PAGE_CONTAINER);\n    }\n  });\n\n  addWatcher();\n  addClasses(element, PREFIX_ROOT);\n  if (pageContainer) {\n    addClasses(pageContainer, PREFIX_PAGE_CONTAINER);\n  }\n\n  const numPages = MH.lengthOf(pages);\n  setData(element, MC.PREFIX_ORIENTATION, orientation);\n  setBoolData(element, PREFIX_IS_FULLSCREEN, isFullscreen);\n  setBoolData(element, PREFIX_USE_PARALLAX, isParallax);\n  setData(element, PREFIX_TOTAL_PAGES, numPages + \"\");\n  setStyleProp(element, VAR_TOTAL_PAGES, (numPages || 1) + \"\");\n\n  for (const page of pages) {\n    disableInitialTransition(page);\n    addClasses(page, PREFIX_PAGE);\n  }\n\n  for (let idx = 0; idx < numPages; idx++) {\n    setPageNumber(components, idx + 1);\n    setPageState(components, idx + 1, S_NEXT);\n\n    for (const [el, listener] of [\n      [toggles[idx], toggleClickListener],\n      [switches[idx], switchClickListener],\n    ] as const) {\n      if (el) {\n        addEventListenerTo(el, MC.S_CLICK, listener);\n      }\n    }\n  }\n\n  if (nextSwitch) {\n    addEventListenerTo(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n  }\n\n  if (prevSwitch) {\n    addEventListenerTo(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n  }\n\n  if (initialPage < 1 || initialPage > numPages) {\n    initialPage = 1;\n  }\n  methods._goToPage(initialPage);\n};\n\nconst getMethods = (\n  widget: Pager,\n  components: Components,\n  element: Element,\n  config: PagerConfig | undefined,\n) => {\n  const pages = components._pages;\n  const scrollWatcher = ScrollWatcher.reuse();\n  const isFullscreen = config?.fullscreen;\n  const disabledPages: Record<number, boolean> = {};\n  const callbacks = MH.newSet<WidgetCallback>();\n\n  const fetchScrollOptions = async (): Promise<ScrollOptions> => ({\n    scrollable: await fetchClosestScrollable(element),\n    // default amount is already 100%\n    asFractionOf: \"visible\",\n    weCanInterrupt: true,\n  });\n\n  let currPageNum = -1;\n  let lastPageNum = -1;\n  let lastTransition = 0;\n\n  const canTransition = (gestureData?: GestureData) => {\n    if (widget.isDisabled()) {\n      return false;\n    }\n\n    if (gestureData?.device !== MC.S_WHEEL) {\n      return true;\n    }\n\n    const timeNow = MH.timeNow();\n    if (timeNow - lastTransition > MIN_TIME_BETWEEN_WHEEL) {\n      lastTransition = timeNow;\n      return true;\n    }\n\n    return false;\n  };\n\n  const goToPage = async (pageNum: number, gestureData?: GestureData) => {\n    pageNum = toInt(pageNum, -1);\n    if (pageNum === currPageNum || !canTransition(gestureData)) {\n      return;\n    }\n\n    const numPages = MH.lengthOf(pages);\n\n    if (\n      (currPageNum === 1 && pageNum === 0) ||\n      (currPageNum === numPages && pageNum === numPages + 1)\n    ) {\n      // next/prev page beyond last/first\n      if (isFullscreen) {\n        scrollWatcher.scroll(\n          pageNum\n            ? gestureData?.direction === MC.S_RIGHT\n              ? MC.S_RIGHT\n              : MC.S_DOWN\n            : gestureData?.direction === MC.S_LEFT\n              ? MC.S_LEFT\n              : MC.S_UP,\n          await fetchScrollOptions(),\n        ); // no need to await\n      }\n\n      return;\n    }\n\n    if (isPageDisabled(pageNum) || pageNum < 1 || pageNum > numPages) {\n      // invalid or disabled\n      return;\n    }\n\n    lastPageNum = currPageNum > 0 ? currPageNum : pageNum;\n    currPageNum = pageNum;\n\n    for (const callback of callbacks) {\n      await callback.invoke(widget);\n    }\n\n    MH.delAttr(pages[lastPageNum - 1], S_ARIA_CURRENT);\n    for (\n      let n = lastPageNum;\n      n !== currPageNum;\n      currPageNum < lastPageNum ? n-- : n++\n    ) {\n      if (!isPageDisabled(n)) {\n        setPageState(\n          components,\n          n,\n          currPageNum < lastPageNum ? S_NEXT : S_COVERED,\n        );\n      }\n    }\n\n    setCurrentPage(element, currPageNum, numPages, isPageDisabled);\n    MH.setAttr(pages[currPageNum - 1], S_ARIA_CURRENT);\n    await setPageState(components, currPageNum, S_CURRENT);\n  };\n\n  const nextPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum + 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage++;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const prevPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum - 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage--;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const isPageDisabled = (pageNum: number) => disabledPages[pageNum] === true;\n\n  const disablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || pageNum < 1 || pageNum > MH.lengthOf(pages)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = true;\n\n    if (pageNum === currPageNum) {\n      await prevPage();\n\n      if (pageNum === currPageNum) {\n        await nextPage();\n\n        if (pageNum === currPageNum) {\n          disabledPages[pageNum] = false;\n          return; // only enabled one\n        }\n      }\n    }\n\n    setCurrentPage(element, currPageNum, MH.lengthOf(pages), isPageDisabled);\n    await setPageState(components, pageNum, MC.S_DISABLED);\n  };\n\n  const enablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || !isPageDisabled(pageNum)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = false;\n\n    setCurrentPage(element, currPageNum, MH.lengthOf(pages), isPageDisabled);\n    await setPageState(\n      components,\n      pageNum,\n      pageNum < currPageNum ? S_COVERED : S_NEXT,\n    );\n  };\n\n  const togglePage = (pageNum: number) =>\n    isPageDisabled(pageNum) ? enablePage(pageNum) : disablePage(pageNum);\n\n  const onTransition = (handler: WidgetHandler) =>\n    callbacks.add(wrapCallback(handler));\n\n  return {\n    _nextPage: nextPage,\n    _prevPage: prevPage,\n    _goToPage: goToPage,\n    _disablePage: disablePage,\n    _enablePage: enablePage,\n    _togglePage: togglePage,\n    _isPageDisabled: isPageDisabled,\n    _getCurrentPage: () => pages[currPageNum - 1],\n    _getPreviousPage: () => pages[lastPageNum - 1],\n    _getCurrentPageNum: () => (MH.lengthOf(pages) > 0 ? currPageNum : 0),\n    _getPreviousPageNum: () => (MH.lengthOf(pages) > 0 ? lastPageNum : 0),\n    _onTransition: onTransition,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling pagers\n * {@link NextPage} and {@link PrevPage} advance or reverse the {@link Pager}\n * widget setup for the given element.\n *\n * {@link GoToPage} sets the {@link Pager} to the given page or toggles to the\n * last saved one.\n *\n * {@link EnablePage} and {@link DisablePage} enable or disable the given page\n * of the {@link Pager} widget setup for the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { toInt } from \"@lisn/utils/math\";\n\nimport { Pager } from \"@lisn/widgets/pager\";\nimport { fetchUniqueWidget } from \"@lisn/widgets/widget\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Advances or reverses the {@link Pager} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"next-page\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@next-page +target=#myNextButton\"></div>\n * <button id=\"myNextButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class NextPage implements Action {\n  /**\n   * Advances the pager by one page.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Reverses the pager by one page.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Undoes the last action: reverses the pager if {@link do} was last called\n   * or advances it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"next-page\", (element) => new NextPage(element));\n  }\n\n  constructor(element: Element) {\n    let toggleState = false;\n    const { _nextPage, _prevPage } = getMethods(element);\n\n    this.do = () => {\n      toggleState = true;\n      return _nextPage();\n    };\n\n    this.undo = () => {\n      toggleState = false;\n      return _prevPage();\n    };\n\n    this[MC.S_TOGGLE] = () => {\n      const method = toggleState ? _prevPage : _nextPage;\n      toggleState = !toggleState;\n      return method();\n    };\n  }\n}\n\n/**\n * Reverses or advances the {@link Pager} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"prev-page\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@prev-page +target=#myPrevButton\"></div>\n * <button id=\"myPrevButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class PrevPage implements Action {\n  /**\n   * Reverses the pager by one page.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Advances the pager by one page.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Undoes the last action: advances the pager if {@link do} was last called\n   * or reverses it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"prev-page\", (element) => new PrevPage(element));\n  }\n\n  constructor(element: Element) {\n    let toggleState = false;\n    const { _nextPage, _prevPage } = getMethods(element);\n\n    this.do = () => {\n      toggleState = true;\n      return _prevPage();\n    };\n\n    this.undo = () => {\n      toggleState = false;\n      return _nextPage();\n    };\n\n    this[MC.S_TOGGLE] = () => {\n      const method = toggleState ? _nextPage : _prevPage;\n      toggleState = !toggleState;\n      return method();\n    };\n  }\n}\n\n/**\n * Goes to a given page, or to the last one beforehand, of the {@link Pager}\n * widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"go-to-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@go-to-page:2 +target=#myGoToButton\"></div>\n * <button id=\"myGoToButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class GoToPage implements Action {\n  /**\n   * Goes to the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Goes to the last saved page number before the action was {@link do}ne. If\n   * the action had never been done, does nothing.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Goes to the page number given to the constructor, or if already at this\n   * number, goes to the last saved page if any. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"go-to-page\",\n      (element, args) => new GoToPage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page is required\");\n    }\n\n    const { _goToPage } = getMethods(element);\n\n    this.do = () => _goToPage(pageNum);\n    this.undo = () => _goToPage(-1);\n    this[MC.S_TOGGLE] = () => _goToPage(pageNum, -1);\n  }\n}\n\n/**\n * Enables or disables the given page of the {@link Pager} widget setup for the\n * given element.\n *\n * **IMPORTANT:** When constructed, it disables the given page as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"enable-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@enable-page:2 +target=#myEnableButton\"></div>\n * <button id=\"myEnableButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class EnablePage implements Action {\n  /**\n   * Enables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Disables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Enables the page number given to the constructor, if it is disabled,\n   * otherwise disables it. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"enable-page\",\n      (element, args) => new EnablePage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page number is required\");\n    }\n\n    const { _enablePage, _disablePage, _togglePage } = getMethods(element);\n    _disablePage(pageNum); // initial state\n\n    this.do = () => _enablePage(pageNum);\n    this.undo = () => _disablePage(pageNum);\n    this[MC.S_TOGGLE] = () => _togglePage(pageNum);\n  }\n}\n\n/**\n * Disables or enables the given page of the {@link Pager} widget setup for the\n * given element.\n *\n * **IMPORTANT:** When constructed, it enables the given page as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"disable-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"myDisableButton\"></button>\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@disable-page:2 +target=#myDisableButton\"></div>\n * ```\n *\n * @category Controlling pagers\n */\nexport class DisablePage implements Action {\n  /**\n   * Disables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Enables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Disables the page number given to the constructor, if it is enabled,\n   * otherwise enables it. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"disable-page\",\n      (element, args) => new DisablePage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page number is required\");\n    }\n\n    const { _enablePage, _disablePage, _togglePage } = getMethods(element);\n    _enablePage(pageNum); // initial state\n\n    this.do = () => _disablePage(pageNum);\n    this.undo = () => _enablePage(pageNum);\n    this[MC.S_TOGGLE] = () => _togglePage(pageNum);\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  let lastPageNum: number | null | undefined = null;\n\n  const nextPage = (widget: Pager | null) => widget?.nextPage();\n  const prevPage = (widget: Pager | null) => widget?.prevPage();\n\n  const goToPage = async (\n    widget: Pager | null,\n    pageNum: number,\n    altPageNum: number | null,\n  ) => {\n    const currentNum = widget?.getCurrentPageNum();\n    let targetNum: number | null | undefined =\n      currentNum === pageNum ? altPageNum : pageNum;\n    if (targetNum === -1) {\n      targetNum = lastPageNum;\n    }\n\n    if (targetNum) {\n      if (pageNum !== -1) {\n        // save the current number unless this is \"undo\"\n        lastPageNum = currentNum;\n      }\n\n      await widget?.goToPage(targetNum);\n    }\n  };\n\n  const enablePage = (widget: Pager | null, pageNum: number) =>\n    widget?.enablePage(pageNum);\n  const disablePage = (widget: Pager | null, pageNum: number) =>\n    widget?.disablePage(pageNum);\n  const togglePage = (widget: Pager | null, pageNum: number) =>\n    widget?.togglePage(pageNum);\n\n  const widgetPromise = fetchUniqueWidget(\"pager\", element, Pager);\n\n  return {\n    _nextPage: () => widgetPromise.then(nextPage),\n    _prevPage: () => widgetPromise.then(prevPage),\n\n    _goToPage: (pageNum: number, altPageNum: number | null = null) =>\n      widgetPromise.then((w) => goToPage(w, pageNum, altPageNum)),\n\n    _enablePage: (pageNum: number) =>\n      widgetPromise.then((w) => enablePage(w, pageNum)),\n    _disablePage: (pageNum: number) =>\n      widgetPromise.then((w) => disablePage(w, pageNum)),\n    _togglePage: (pageNum: number) =>\n      widgetPromise.then((w) => togglePage(w, pageNum)),\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Pointer\n * {@link ClickTrigger} allows you to run actions when a user clicks a target\n * element (first time and every other time, i.e. odd number of click), and\n * undo them when a user clicks the target element again (or every even number\n * of clicks). It always acts as a toggle.\n *\n * {@link PressTrigger} allows you to run actions when the user presses and\n * holds a pointing device (or their finger) on a target element, and undo\n * those actions when they release their pointing device or lift their finger\n * off.\n *\n * {@link HoverTrigger} allows you to run actions when the user hovers overs\n * a target element, and undo those actions when their pointing device moves\n * off the target. On touch devices it acts just like {@link PressTrigger}.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport { validateBoolean } from \"@lisn/utils/validation\";\n\nimport {\n  PointerWatcher,\n  OnPointerHandler,\n} from \"@lisn/watchers/pointer-watcher\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link ClickTrigger} allows you to run actions when a user clicks a target\n * element (first time and every other time, i.e. odd number of click), and\n * undo them when a user clicks the target element again (or every even number\n * of clicks). It always acts as a toggle.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: A boolean.\n *   - `prevent-select`: A boolean.\n *\n * @example\n * Add classes `active` and `toggled-on` when the user clicks the element\n * (first time and every other time, i.e. odd number of click), remove them\n * when clicked again (or even number of click);\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=active,toggled-on\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-click--@add-class=active,toggled-on\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * clicks it.\n *\n * ```html\n * <div data-lisn-on-click=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `visited` the first time the user clicks the element, and\n * play or reverse the animations on the element 1000ms each time the\n * user clicks it.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=visited +once ;\n *                          @animate +delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * When the user clicks the next element with class `box` then add classes `c1`\n * and `c2` to the element (that the trigger is defined on) and enable trigger\n * `my-trigger` defined on this same element; undo all of that on even number\n * of clicks on the reference box element.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class ClickTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_CLICK,\n      (element, args, actions, config) =>\n        new ClickTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: PointerTriggerConfig = {},\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_CLICK);\n  }\n}\n\n/**\n * {@link PressTrigger} allows you to run actions when the user presses and\n * holds a pointing device (or their finger) on a target element, and undo\n * those actions when they release their pointing device or lift their finger\n * off.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: boolean\n *   - `prevent-select`: boolean\n *\n * @example\n * Add classes `active` and `pressed` when the user presses and holds (with\n * mouse, finger or any pointer) the element, remove them when they release\n * the mouse.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=active,pressed\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-press--@add-class=active,pressed\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * presses on the element it.\n *\n * ```html\n * <div data-lisn-on-press=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `pressed` the first time the user presses on the element, and\n * play the animations on the element while the user is pressing on the element\n * with a delay of 100ms, reverse the animations as soon as the user releases\n * the mouse.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=pressed +once ;\n *                          @animate +do-delay=100\"\n * ></div>\n * ```\n *\n * @example\n * When the user presses and holds the next element with class `box` then add\n * classes `c1` and `c2` to the element (that the trigger is defined on) and\n * enable trigger `my-trigger` defined on this same element; undo all of that\n * when they release the mouse (or lift their finger/pointer device) from the\n * reference box element.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class PressTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_PRESS,\n      (element, args, actions, config) =>\n        new PressTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: PointerTriggerConfig = {},\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_PRESS);\n  }\n}\n\n/**\n * {@link HoverTrigger} allows you to run actions when the user hovers overs\n * a target element, and undo those actions when their pointing device moves\n * off the target. On touch devices it acts just like {@link PressTrigger}.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: boolean\n *   - `prevent-select`: boolean\n *\n * @example\n * Add classes `active` and `hovered` when the user hovers over the element,\n * remove them otherwise.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=active,hovered\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-press--@add-class=active,hovered\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * hovers over the element it.\n *\n * ```html\n * <div data-lisn-on-hover=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `hovered` the first time the user hovers over the element, and\n * play the animations on the element while the user is hovering over the\n * element with a delay of 100ms, reverse the animations as soon as the user\n * mouse leaves the element.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=hovered +once ;\n *                          @animate +do-delay=100\"\n * ></div>\n * ```\n *\n * @example\n * When the user hovers over the next element with class `box` then add classes\n * `c1` and `c2` to the element (that the trigger is defined on) and enable\n * trigger `my-trigger` defined on this same element; undo all of that when\n * their pointing device (or finger) moves off the reference element.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class HoverTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_HOVER,\n      (element, args, actions, config) =>\n        new HoverTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: PointerTriggerConfig = {},\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_HOVER);\n  }\n}\n\n/**\n * @category Pointer\n * @interface\n */\nexport type PointerTriggerConfig = TriggerConfig & {\n  /**\n   * The target to use for the hover action.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  target?: Element;\n\n  /**\n   * See {@link Watchers/PointerWatcher.OnPointerOptions | OnPointerOptions}.\n   *\n   * @defaultValue {@link PointerWatcher} default, false\n   */\n  preventDefault?: boolean;\n\n  /**\n   * See {@link Watchers/PointerWatcher.OnPointerOptions | OnPointerOptions}.\n   *\n   * @defaultValue {@link PointerWatcher} default, true\n   */\n  preventSelect?: boolean;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<PointerTriggerConfig> = (\n  element,\n) => {\n  return {\n    target: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    preventDefault: validateBoolean,\n    preventSelect: validateBoolean,\n  };\n};\n\nconst setupWatcher = (\n  widget: ClickTrigger | HoverTrigger | PressTrigger,\n  element: Element,\n  actions: Action[],\n  config: PointerTriggerConfig,\n  action: \"click\" | \"hover\" | \"press\",\n) => {\n  if (!MH.lengthOf(actions)) {\n    return;\n  }\n\n  const target = MH.targetOf(config) || element;\n\n  // For clicks use the trigger's own toggle function so that it remembers ITS\n  // state rather than the odd/even clicks. Otherwise if the trigger is\n  // disabled, then clicking will \"swap\" the state.\n  let startHandler: OnPointerHandler;\n  let endHandler: OnPointerHandler;\n  if (action === MC.S_CLICK) {\n    startHandler = endHandler = widget[MC.S_TOGGLE];\n  } else {\n    startHandler = widget.run;\n    endHandler = widget.reverse;\n  }\n\n  PointerWatcher.reuse().onPointer(\n    target,\n    startHandler,\n    endHandler,\n    MH.merge(\n      {\n        actions: action,\n      },\n      omitKeys(config, { target: null }),\n    ),\n  );\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Layout\n * {@link LayoutTrigger} allows you to run actions when the viewport or a\n * target element's width or aspect ratio matches a given specification, and\n * undo those actions when the target's width or aspect ratio no longer\n * matches.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport {\n  isValidDeviceList,\n  isValidAspectRatioList,\n  getOtherDevices,\n  getOtherAspectRatios,\n} from \"@lisn/utils/layout\";\nimport { validateStringRequired } from \"@lisn/utils/validation\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport { LayoutWatcher } from \"@lisn/watchers/layout-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link LayoutTrigger} allows you to run actions when the viewport or a\n * target element's width or aspect ratio matches a given specification, and\n * undo those actions when the target's width or aspect ratio no longer\n * matches.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (required): A single {@link DeviceSpec} or\n *   {@link AspectRatioSpec}. In this case you can use a dash (\"-\") instead of\n *   space if needed (for example if using CSS classes instead of data\n *   attributes), e.g. \"min-tablet\" instead of \"min tablet\".\n *\n * - Additional trigger options:\n *   - `root`: A string element specification. See\n *     {@link Utils.getReferenceElement | getReferenceElement}.\n *\n * @example\n * Show the element when the window width matches \"tablet\" breakpoint, hide\n * otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"tablet @show\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-layout--tablet@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the window width matches \"tablet\" breakpoint,\n * hide otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"tablet @show +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `tablet` when the window width is at least \"tablet\", hide\n * otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"min tablet @add-class=tablet\"></div>\n * ```\n *\n * @example\n * Add class `mobile` when the window width is \"mobile\" or mobile-wide, add\n * class `tablet`, when it's \"tablet\" and so on; undo that otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"max mobile-wide @add-class=mobile ;\n *                           tablet @add-class=tablet ;\n *                           desktop @add-class=desktop\"\n * ></div>\n * ```\n *\n * @example\n * Show the element when window width is at least \"mobile-wide\" and at most\n * \"tablet\", hide otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"mobile-wide to tablet @show\"></div>\n * ```\n *\n * @example\n * When the aspect ratio of the next element with class `box` is square, then\n * add classes `c1` and `c2` to the element (that the trigger is defined on) and\n * enable trigger `my-trigger` defined on this same element; undo all of that\n * otherwise (on other aspect ratios of the reference root):\n *\n * ```html\n * <div data-lisn-on-layout=\"square @add-class=c1,c2 @enable=my-trigger +root=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-layout=\"square @add-class=c1,c2 @enable=my-trigger +root=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n *\n * @category Layout\n */\nexport class LayoutTrigger extends Trigger {\n  readonly getConfig: () => LayoutTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"layout\",\n      (element, args, actions, config) => {\n        return new LayoutTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            layout: validateStringRequired(\n              \"layout\",\n              MH.strReplace(\n                MH.strReplace(args[0] || \"\", /(min|max)-/g, \"$1 \"),\n                /-to-/g,\n                \" to \",\n              ),\n              (value) =>\n                isValidDeviceList(value) || isValidAspectRatioList(value),\n            ),\n          }),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: LayoutTriggerConfig,\n  ) {\n    const layout = config?.layout || \"\";\n    if (!layout) {\n      throw MH.usageError(\"'layout' is required\");\n    }\n\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    let devices: DeviceSpec | Device[] = [];\n    let aspectRatios: AspectRatioSpec | AspectRatio[] = [];\n    let otherDevices: Device[] = [];\n    let otherAspectRatios: AspectRatio[] = [];\n\n    if (isValidDeviceList(layout)) {\n      devices = layout;\n      otherDevices = getOtherDevices(layout);\n    } else {\n      aspectRatios = layout;\n      otherAspectRatios = getOtherAspectRatios(layout);\n    }\n\n    const root = config.root;\n    const watcher = LayoutWatcher.reuse({ root });\n\n    watcher.onLayout(this.run, { devices, aspectRatios });\n\n    if (MH.lengthOf(otherDevices) || MH.lengthOf(otherAspectRatios)) {\n      watcher.onLayout(this.reverse, {\n        devices: otherDevices,\n        aspectRatios: otherAspectRatios,\n      });\n    }\n  }\n}\n\n/**\n * @category Layout\n * @interface\n */\nexport type LayoutTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link DeviceSpec} or {@link AspectRatioSpec} to use. Required.\n   * See {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for\n   * accepted formats.\n   *\n   * Actions will be \"done\" when the layout of the root matches the given spec\n   * and \"undone\" otherwise.\n   */\n  layout: DeviceSpec | Device[] | AspectRatioSpec | AspectRatio[];\n\n  /**\n   * The root to use for the {@link LayoutWatcher}.\n   * See {@link Watchers/LayoutWatcher.LayoutWatcherConfig | LayoutWatcherConfig}\n   *\n   * @defaultValue {@link LayoutWatcher} default, the viewport\n   */\n  root?: HTMLElement | null;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<LayoutTriggerConfig, \"layout\">\n> = (element) => {\n  return {\n    root: async (key, value) => {\n      const root = MH.isLiteralString(value)\n        ? await waitForReferenceElement(value, element)\n        : undefined;\n      if (root && !MH.isHTMLElement(root)) {\n        throw MH.usageError(\"root must be HTMLElement\");\n      }\n      return root;\n    },\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Load\n * {@link LoadTrigger} allows you to run actions once when the page is loaded.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForPageReady } from \"@lisn/utils/dom-events\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\n/**\n * {@link LoadTrigger} allows you to run actions one when the page is loaded.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *\n * @example\n * Scroll to the given element when the page is loaded:\n *\n * ```html\n * <div data-lisn-on-load=\":scroll-to\"></div>\n * ```\n *\n * @example\n * Scroll to 100px above the given element 500ms after the page is loaded:\n *\n * ```html\n * <div data-lisn-on-load=\"@scroll-to=0,-100 +delay=500\"></div>\n * ```\n *\n * @example\n * Scroll to 100px above the given element 500ms after the page is loaded, and\n * play animations defined on it 500ms later (1000ms after it's loaded):\n *\n * ```html\n * <div data-lisn-on-load=\"@scroll-to=0,-100 +delay=500 ;\n *                         @animate +delay=1000\"\n * ></div>\n * ```\n *\n * @category Load\n */\nexport class LoadTrigger extends Trigger {\n  readonly getConfig: () => TriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"load\",\n      (element, args, actions, config) =>\n        new LoadTrigger(element, actions, config),\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config: TriggerConfig) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    waitForPageReady().then(this.run);\n  }\n}\n","/**\n * @module Triggers\n *\n * @categoryDescription Scroll\n * {@link ScrollTrigger} allows you to run actions when the user scrolls a\n * target element (or the main scrollable element) in a given direction, and\n * undo those actions when they scroll in the opposite direction.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  XYDirection,\n  CommaSeparatedStr,\n  ScrollTarget,\n} from \"@lisn/globals/types\";\n\nimport {\n  getOppositeXYDirections,\n  isValidXYDirection,\n} from \"@lisn/utils/directions\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { validateStrList, validateNumber } from \"@lisn/utils/validation\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link ScrollTrigger} allows you to run actions when the user scrolls a\n * target element (or the main scrollable element) in a given direction, and\n * undo those actions when they scroll in the opposite direction.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (optional): One or more (comma-separated) scroll directions.\n *   Note that if you do not specify any directions, then the trigger will just\n *   run once, on any scroll.\n * - Additional trigger options:\n *   - `scrollable`: A string element specification.\n *      See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `threshold`: A number.\n *\n * @example\n * Show the element when the user scrolls the page up, hide when scrolling\n * down. User scrolling left or right not trigger the action. See\n * {@link getOppositeXYDirections}:\n *\n * ```html\n * <div data-lisn-on-scroll=\"up @show\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-scroll--up@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the first time the user scrolls the page up:\n *\n * ```html\n * <div data-lisn-on-scroll=\"up @show +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `scrolled` the first time the user scrolls the page in any\n * direction (note that the `once` option is implied here), and show the\n * element 1000ms after each time the user scrolls the page up, hide it as soon\n * as they scroll down:\n *\n * ```html\n * <div data-lisn-on-scroll=\"@add-class=scrolled ;\n *                           up @show +do-delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * When the user scrolls up or down the closest ancestor with class `section`,\n * then add classes `c1` and `c2` and enable trigger `my-trigger` defined on\n * this same element; undo all of that when scrolling right or left:\n *\n * ```html\n * <div class=\"section\">\n *   <div data-lisn-on-scroll=\"up,down @add-class=c1,c2 @enable=my-trigger +scrollable=this.section\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n *   ></div>\n *</div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-ref=\"section\">\n *   <div data-lisn-on-scroll=\"up,down @add-class=c1,c2 @enable=my-trigger +scrollable=this-section\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n *   ></div>\n *</div>\n * ```\n *\n * @category Scroll\n */\nexport class ScrollTrigger extends Trigger {\n  readonly getConfig: () => ScrollTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_SCROLL,\n      (element, args, actions, config) => {\n        return new ScrollTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            directions: validateStrList(\"directions\", args, isValidXYDirection),\n          }),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config?: ScrollTriggerConfig,\n  ) {\n    config = config ?? {};\n\n    let directions = config.directions;\n    if (!directions) {\n      config.once = true;\n      directions = [MC.S_UP, MC.S_DOWN, MC.S_LEFT, MC.S_RIGHT];\n    }\n\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const watcher = ScrollWatcher.reuse();\n    const scrollable = config.scrollable;\n    const threshold = config.threshold;\n\n    const oppositeDirections = directions\n      ? getOppositeXYDirections(directions)\n      : [];\n\n    watcher.onScroll(this.run, {\n      directions,\n      scrollable,\n      threshold,\n    });\n\n    if (MH.lengthOf(oppositeDirections)) {\n      watcher.onScroll(this.reverse, {\n        directions: oppositeDirections,\n        scrollable,\n        threshold,\n      });\n    }\n  }\n}\n\n/**\n * @category Scroll\n * @interface\n */\nexport type ScrollTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link XYDirection}s to use as the trigger.\n   * See also {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * Actions will be \"done\" when the scroll direction is one of the given ones\n   * and \"undone\" when it's the opposite direction. E.g. for \"up\" the opposite\n   * is \"down\".\n   */\n  directions?: CommaSeparatedStr<XYDirection> | XYDirection[];\n\n  /**\n   * The scrolling element target to use for the ScrollWatcher.\n   * See {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * @defaultValue {@link ScrollWatcher} default, the main scrolling element\n   */\n  scrollable?: ScrollTarget;\n\n  /**\n   * The scroll threshold to pass to the {@link ScrollWatcher}.\n   * See also {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  threshold?: number;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<ScrollTriggerConfig, \"directions\">\n> = (element) => {\n  return {\n    scrollable: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    threshold: validateNumber,\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription View\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { ViewTarget, View, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { hasClass, addClasses, getData } from \"@lisn/utils/css-alter\";\nimport { wrapElement, insertGhostClone } from \"@lisn/utils/dom-alter\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateString,\n  validateNumList,\n} from \"@lisn/utils/validation\";\nimport {\n  getOppositeViews,\n  isValidView,\n  isValidScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport { Action } from \"@lisn/actions/action\";\nimport { Animate } from \"@lisn/actions/animate\";\nimport { AnimatePlay } from \"@lisn/actions/animate-play\";\n\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (optional): One or more (comma-separated) {@link View}s.\n *   Default is \"at\".\n * - Additional trigger options:\n *   - `target`: A string element specification for an element (see\n *     {@link Utils.getReferenceElement | getReferenceElement}) or a\n *     {@link Types.ScrollOffset | ScrollOffset}.\n *   - `root`: A string element specification. See\n *     {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `rootMargin`: A string.\n *   - `threshold`: A number or list (comma-separated) of numbers.\n *\n * @example\n * Show the element when it's in the viewport, hide otherwise.\n *\n * ```html\n * <div data-lisn-on-view=\"at @show\"></div>\n * ```\n *\n * @example\n * Same as above. \"views\" is optional and defaults to \"at\".\n *\n * ```html\n * <div data-lisn-on-view=\"@show\"></div>\n * ```\n *\n * @example\n * As above but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-view--@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the first time it enters the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@show +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `seen` the first time the element enters the viewport, and play\n * the animations defined on it 1000ms after each time it enters the viewport,\n * reverse the animations as soon as it goes out of view.\n *\n * ```html\n * <div data-lisn-on-view=\"@add-class=seen +once ;\n *                         @animate +do-delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * Add class `seen` when the viewport is at or below the element (element\n * above viewport), remove it when the viewport is above the element.\n * Element going to the left or right of the viewport will not trigger the\n * action. See {@link getOppositeViews}:\n *\n * ```html\n * <div data-lisn-on-view=\"at,below @add-class=seen\"></div>\n * ```\n *\n * @example\n * Add class `cls` when the viewport is above or to the left the element\n * (element below or to the right of the viewport), remove it when the\n * viewport is either at, below or to the right of the element.\n *\n * ```html\n * <div data-lisn-on-view=\"above,left @add-class=cls\"></div>\n * ```\n *\n * @example\n * Hide the element when the viewport is above the next element with class\n * `section`, show it when the viewport is below or at the target element.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next.section\"></div>\n * <div class=\"section\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next-section\"></div>\n * <div data-lisn-ref=\"section\"></div>\n * ```\n *\n * @example\n * Open the {@link Widgets.Openable | Openable} widget configured for this\n * element when the viewport is 75% down from the top of the page.\n *\n * ```html\n * <div data-lisn-on-view=\"@open +target=top:75%\"></div>\n * ```\n *\n * @category View\n */\nexport class ViewTrigger extends Trigger {\n  readonly getConfig: () => ViewTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"view\",\n      (element, args, actions, config) => {\n        return new ViewTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            views: validateStrList(\"views\", args, isValidView),\n          } as const),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config?: ViewTriggerConfig) {\n    super(element, actions, config);\n\n    const logger = debug\n      ? new debug.Logger({\n          name: `ViewTrigger-${formatAsString(element)}`,\n        })\n      : null;\n\n    this.getConfig = () => MH.copyObject(config || {});\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const watcher = ViewWatcher.reuse({\n      root: config?.root,\n      rootMargin: config?.rootMargin?.replace(/,/g, \" \"),\n      threshold: config?.threshold,\n    });\n\n    const target = config?.target || element;\n    const views = config?.views || MC.S_AT;\n    const oppositeViews = getOppositeViews(views);\n\n    const setupWatcher = (target: ViewTarget) => {\n      if (!MH.lengthOf(oppositeViews)) {\n        debug: logger?.debug6(\"Trigger can never be reversed, running now\");\n        // The action is never undone\n        this.run();\n      } else {\n        debug: logger?.debug6(\"Setting up trigger\", views, oppositeViews);\n        watcher.onView(target, this.run, { views });\n        watcher.onView(target, this.reverse, { views: oppositeViews });\n      }\n    };\n\n    // See comment in globals/settings under contentWrappingAllowed\n    let willAnimate = false;\n    for (const action of actions) {\n      if (\n        MH.isInstanceOf(action, Animate) ||\n        MH.isInstanceOf(action, AnimatePlay)\n      ) {\n        willAnimate = true;\n        break;\n      }\n    }\n\n    if (willAnimate) {\n      setupRepresentative(element).then(setupWatcher);\n    } else {\n      setupWatcher(target);\n    }\n  }\n}\n\n/**\n * @category View\n * @interface\n */\nexport type ViewTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link View} to use as the trigger.\n   * See also {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * Actions will be \"done\" when the view matches the given spec and \"undone\"\n   * otherwise. What the opposite views are depends on the given view. E.g. for\n   * \"at\", opposites are all the other ones;  for \"above\", the opposite ones\n   * are \"at\" and \"below\"; for \"at,above\" opposite is \"below\", etc.\n   *\n   * @defaultValue \"at\"\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * The target to use for the ViewWatcher. It can be a string offset\n   * specification.\n   * See {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * @defaultValue The element on which the {@link ViewTrigger} is defined\n   */\n  target?: ViewTarget;\n\n  /**\n   * The root to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  root?: Element | null;\n\n  /**\n   * The root margin to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * It can be either space-separated or comma-separated.\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  threshold?: number | number[];\n};\n\n// ----------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<ViewTriggerConfig, \"views\">\n> = (element) => {\n  return {\n    target: (key, value) =>\n      MH.isLiteralString(value) && isValidScrollOffset(value)\n        ? value\n        : ((MH.isLiteralString(value)\n            ? waitForReferenceElement(value, element)\n            : null) ?? undefined),\n    root: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    rootMargin: validateString,\n    threshold: (key, value) => validateNumList(key, value),\n  };\n};\n\nconst setupRepresentative = async (element: Element): Promise<Element> => {\n  const allowedToWrap =\n    settings.contentWrappingAllowed === true &&\n    getData(element, MC.PREFIX_NO_WRAP) === null &&\n    // Done by another animate action?\n    !MH.classList(MH.parentOf(element))?.contains(MC.PREFIX_WRAPPER);\n\n  let target: Element;\n  if (allowedToWrap) {\n    target = await wrapElement(element, { ignoreMove: true });\n    addClasses(target, MC.PREFIX_WRAPPER);\n\n    if (isInlineTag(MH.tagName(target))) {\n      addClasses(target, MC.PREFIX_INLINE_WRAPPER);\n    }\n  } else {\n    // Otherwise create a dummy hidden clone that's not animated and position\n    // it absolutely in a wrapper of size 0 that's inserted just before the\n    // actual element, so that the hidden clone overlaps the actual element's\n    // regular (pre-transformed) position.\n\n    const prev = element.previousElementSibling;\n    const prevChild = MH.childrenOf(prev)[0];\n    if (\n      prev &&\n      hasClass(prev, MC.PREFIX_WRAPPER) &&\n      prevChild &&\n      hasClass(prevChild, MC.PREFIX_GHOST)\n    ) {\n      // Done by a previous animate action?\n      target = prevChild;\n    } else {\n      target = (await insertGhostClone(element))._clone;\n    }\n  }\n\n  return target;\n};\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport \"@lisn/bundle-essentials\"; // side effects\n\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport * as _actions from \"@lisn/actions/index\";\nimport * as triggers from \"@lisn/triggers/index\";\n\nexport * from \"@lisn/bundle-essentials\";\n\n// --- remove widget specific actions\nexport const actions = omitKeys(_actions, {\n  Open: true,\n  NextPage: true,\n  PrevPage: true,\n  GoToPage: true,\n  EnablePage: true,\n  DisablePage: true,\n} as const);\n\nexport * as triggers from \"@lisn/triggers/index\";\n\nactions.AddClass.register();\nactions.RemoveClass.register();\nactions.AnimatePlay.register();\nactions.AnimatePause.register();\nactions.Animate.register();\nactions.Display.register();\nactions.Undisplay.register();\nactions.ScrollTo.register();\nactions.SetAttribute.register();\nactions.Show.register();\nactions.Hide.register();\nactions.Enable.register();\nactions.Disable.register();\nactions.Run.register();\n\ntriggers.LayoutTrigger.register();\ntriggers.LoadTrigger.register();\ntriggers.ClickTrigger.register();\ntriggers.PressTrigger.register();\ntriggers.HoverTrigger.register();\ntriggers.ScrollTrigger.register();\ntriggers.Trigger.register();\ntriggers.ViewTrigger.register();\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { hideElement } from \"@lisn/utils/css-alter\";\nimport { hideAndRemoveElement } from \"@lisn/utils/dom-alter\";\nimport { waitForPageReady } from \"@lisn/utils/dom-events\";\nimport { validateString, validateNumber } from \"@lisn/utils/validation\";\n\nimport { DOMWatcher, OnMutationOptions } from \"@lisn/watchers/dom-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as an {@link AutoHide} widget.\n *\n * The AutoHide widget automatically hides (and optionally removes) the given\n * element, or children of it that match a given selector, after a certain\n * delay.\n *\n * It executes these actions every time the matching element(s) have a change\n * of attribute or appear (are inserted) into the DOM.\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-auto-hide` class or `data-lisn-auto-hide` attribute\n * - `lisn-auto-remove` class or `data-lisn-auto-remove` attribute (enables\n *   {@link AutoHideConfig.remove})\n *\n * **NOTE:** This widget supports multiple instances per element, you can\n * specify multiple widget configurations, separated with \";\".\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This will automatically hide (with class `lisn-hide`) the element 3 seconds\n * (default delay) after it is inserted into the DOM or after it gets any\n * attributes changed on it (for example that might show it again).\n *\n * ```html\n * <div class=\"lisn-auto-hide\">\n *   Automatically hidden in 3s.\n * </div>\n * ```\n *\n * @example\n * This will automatically hide and then remove the element 3 seconds (default\n * delay) after it is inserted into the DOM.\n *\n * ```html\n * <div class=\"lisn-auto-remove\">\n *   Automatically hidden and removed in 3s.\n * </div>\n * ```\n *\n * @example\n * This will automatically\n * - hide `p` elements with class `message` 2 seconds after they are inserted\n *   or changed\n * - hide `p` elements with class `warning` 5 seconds after they are inserted\n *   or changed; and it will save that particular {@link AutoHide} widget with\n *   ID `myID` so that it can be looked up using {@link AutoHide.get}\n * - remove `p` elements with class `disposable` 3 seconds (default delay)\n *   after they are inserted or changed\n *\n * ```html\n * <div data-lisn-auto-hide=\"selector=p.message delay=2000 ;\n *                           selector=p.warning delay=5000 id=myID\"\n *      data-lisn-auto-remove=\"selector=p.disposable\">\n *   <p>Some text, this will stay.</p>\n *   <p class=\"message\">\n *     Automatically hidden in 2s.\n *   </p>\n *   <p class=\"warning\">\n *     Automatically hidden in 5s.\n *   </p>\n *   <p class=\"disposable\">\n *     Automatically hidden and removed in 3s.\n *   </p>\n * </div>\n * ```\n */\nexport class AutoHide extends Widget {\n  static get(element: Element, id: string): AutoHide | null {\n    const instance = super.get(element, id);\n    if (MH.isInstanceOf(instance, AutoHide)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    for (const [name, remove] of [\n      [WIDGET_NAME_HIDE, false],\n      [WIDGET_NAME_REMOVE, true],\n    ] as const) {\n      registerWidget(\n        name,\n        (element, config) => {\n          return new AutoHide(element, config);\n        },\n        newConfigValidator(remove),\n        { supportsMultiple: true },\n      );\n    }\n  }\n\n  constructor(element: Element, config?: AutoHideConfig) {\n    super(element, config);\n\n    const selector = config?.selector;\n\n    const watcher = DOMWatcher.create({\n      root: element,\n      subtree: selector ? true : false,\n    });\n\n    // Watch for attribute change on this element, and for relevant children\n    // being added/changed\n    const watcherOptions: OnMutationOptions = selector\n      ? {\n          selector: selector,\n          categories: [MC.S_ADDED, MC.S_ATTRIBUTE],\n          [MC.S_SKIP_INITIAL]: true,\n        }\n      : {\n          categories: [MC.S_ATTRIBUTE],\n          [MC.S_SKIP_INITIAL]: true,\n        };\n\n    const hideOrRemoveEl = config?.remove ? hideAndRemoveElement : hideElement;\n\n    const hideRelevant = () => {\n      if (this.isDisabled()) {\n        return;\n      }\n\n      const targetElements = selector\n        ? MH.querySelectorAll(element, selector)\n        : [element];\n\n      for (const elem of targetElements) {\n        hideOrRemoveEl(elem, config?.delay ?? DEFAULT_DELAY);\n      }\n    };\n\n    const addWatcher = () => watcher.onMutation(hideRelevant, watcherOptions);\n\n    const removeWatcher = () => watcher.offMutation(hideRelevant);\n\n    // ------------------------------\n\n    // Don't hide/remove before the page is loaded\n    waitForPageReady().then(() => {\n      // Hide initially\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      hideRelevant();\n      addWatcher();\n    });\n\n    this.onDisable(removeWatcher);\n    this.onEnable(() => {\n      hideRelevant();\n      addWatcher();\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type AutoHideConfig = {\n  /**\n   * An ID for the widget so that it can be looked up by element and ID using\n   * {@link AutoHide.get}. It has to be unique for each element, but you can\n   * use the same ID on different elements.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * If true, the matched elements are removed from the DOM instead of just\n   * hidden.\n   *\n   * @defaultValue false\n   */\n  remove?: boolean;\n\n  /**\n   * If given, then the elements to be hidden/removed are selected using the\n   * given `selector` starting at the container element. If not given, then\n   * the container element itself is the target to be hidden/removed.\n   *\n   * E.g. if `selector` is `p.message`, then any newly added/changed `<p>`\n   * elements with class `message` nested under the container element will be\n   * auto-hidden/removed.\n   *\n   * @defaultValue undefined\n   */\n  selector?: string;\n\n  /**\n   * How long to wait before hiding or removing the matched elements.\n   *\n   * @defaultValue 3000\n   */\n  delay?: number;\n};\n\n// ------------------------------\n\nconst WIDGET_NAME_HIDE = \"auto-hide\";\nconst WIDGET_NAME_REMOVE = \"auto-remove\";\n\nconst DEFAULT_DELAY = 3000;\n\nconst newConfigValidator = (\n  autoRemove: boolean,\n): WidgetConfigValidatorObject<AutoHideConfig> => {\n  return {\n    id: validateString,\n    remove: () => autoRemove,\n    selector: validateString,\n    delay: validateNumber,\n  };\n};\n","/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  displayElement,\n  undisplayElement,\n  addClasses,\n  removeClasses,\n  setHasModal,\n  delHasModal,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, hideAndRemoveElement } from \"@lisn/utils/dom-alter\";\nimport { waitForElement, waitForPageReady } from \"@lisn/utils/dom-events\";\nimport { validateBoolean } from \"@lisn/utils/validation\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as a {@link PageLoader} widget.\n *\n * The page loader is a full-page spinner. You would almost certainly use this\n * only once, to hide the page before it's loaded.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link PageLoader}\n * widget on a given element. Use {@link PageLoader.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-page-loader` class or `data-lisn-page-loader` attribute set on\n *   the element that constitutes the widget. The element should be empty.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This will create a page loader using the JavaScript API.\n *\n * This will work even if\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}) is false\n *\n * ```html\n * <!-- LISN should be loaded beforehand -->\n * <script>\n *   LISN.widgets.PageLoader.enableMain();\n * </script>\n * ```\n *\n * @example\n * This will create a page loader using an existing element with default\n * {@link PageLoaderConfig}.\n *\n * ```html\n * <div class=\"lisn-page-loader\"></div>\n * ```\n *\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <div data-lisn-page-loader=\"auto-remove=false\"></div>\n * ```\n */\nexport class PageLoader extends Widget {\n  /**\n   * If element is omitted, returns the instance created by {@link enableMain}\n   * if any.\n   */\n  static get(element?: Element): PageLoader | null {\n    if (!element) {\n      return mainWidget;\n    }\n\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, PageLoader)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!PageLoader.get(element)) {\n          return new PageLoader(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * Creates a new element, inserts it into the document body and configures it\n   * as a {@link PageLoader}.\n   */\n  static enableMain(config?: PageLoaderConfig) {\n    const loader = MH.createElement(\"div\");\n    const widget = new PageLoader(loader, config);\n    widget.onDestroy(() => {\n      if (mainWidget === widget) {\n        mainWidget = null;\n      }\n      return moveElement(loader);\n    });\n\n    waitForElement(MH.getBody).then((body) => {\n      if (!widget.isDestroyed()) {\n        moveElement(loader, { to: body });\n      }\n    });\n\n    mainWidget = widget;\n    return widget;\n  }\n\n  constructor(element: Element, config?: PageLoaderConfig) {\n    const destroyPromise = PageLoader.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      addClasses(element, PREFIX_ROOT);\n\n      const spinner = MH.createElement(\"div\");\n      addClasses(spinner, PREFIX_SPINNER);\n\n      moveElement(spinner, { to: element });\n      waitForElement(MH.getBody).then(setHasModal); // we could be init before body\n\n      if (config?.autoRemove ?? true) {\n        waitForPageReady()\n          .then(() => hideAndRemoveElement(element))\n          .then(this.destroy);\n      }\n\n      this.onDisable(() => {\n        undisplayElement(element);\n        if (!MH.docQuerySelector(`.${PREFIX_ROOT}`)) {\n          delHasModal();\n        }\n      });\n\n      this.onEnable(async () => {\n        await displayElement(element);\n      });\n\n      this.onDestroy(async () => {\n        moveElement(spinner); // remove\n        await removeClasses(element, PREFIX_ROOT);\n        await displayElement(element); // revert undisplay by onDisable\n      });\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type PageLoaderConfig = {\n  /**\n   * Whether to automatically hide and remove the loader when the page is\n   * ready (see {@link waitForPageReady}.\n   *\n   * @defaultValue true\n   */\n  autoRemove?: boolean;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"page-loader\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_SPINNER = MH.prefixName(\"spinner\");\n// Only one PageLoader widget per element is allowed, but Widget requires a\n// non-blank ID.\n// In fact, it doesn't make much sense to have more than 1 page loader on the\n// whole page, but we support it, hence use a class rather than a DOM ID.\nconst DUMMY_ID = PREFIXED_NAME;\nlet mainWidget: PageLoader | null = null;\n\nconst configValidator: WidgetConfigValidatorObject<PageLoaderConfig> = {\n  autoRemove: validateBoolean,\n};\n","/**\n * @module Widgets\n */\n\n// This widget finds optimal widths of flexbox children so that their heights\n// are equal or as close as possible to each other. It takes into account\n// whether they contain text (and possibly other elements, but not images) or\n// images.\n//\n// NOTE:\n//  - We assume that a given flexbox child is either a \"text container\" and\n//    contains only text and other non-image elements (such as buttons), or is\n//    an \"image container\" and contains only images.\n//  - We also assume that all the text inside a text container is the same\n//    font size as the font size of the text container.\n//\n// ~~~~~~ BACKGROUND: analysis for one text container and one image container ~~~~~~\n//\n// A text box has a fixed area, its height decreasing as width increases.\n// Whereas an image has a fixed aspect ratio, its height increasing as width\n// increases.\n//\n// We want to find an optimal configuration at which the text container (which\n// can include other elements apart from text) and image heights are equal, or\n// if not possible, at which they are as close as possible to each other while\n// satisfying as best as possible these \"guidelines\" (constraints that are not\n// enforced), based on visual appeal:\n//   - minGap, minimum gap between each item\n//   - maxWidthR, maximum ratio between the width of the widest child and the\n//     narrowest child\n//   - maxFreeR, maximum free space in the container as a percentage of its\n//     total width\n//\n// Then we set flex-basis as the optimal width (making sure this is disabled\n// when the flex direction is column). This allows for fluid width if the user\n// to configure shrink or wrap on the flexbox using CSS.\n//\n// ~~~~~~ FORMULAE: text and image width as a function of their height ~~~~~~\n//\n// For a given height, h, the widths of the text and image are:\n//\n//                 txtArea\n//   txtW(h) =  —————————————\n//              h - txtExtraH\n//\n//   imgW(h) = imgAspectR * h\n//\n// where txtExtraH comes from buttons and other non-text elements inside the\n// text container, whose height is treated as fixed (not changing with width).\n//\n// ~~~~~~ PLOT: total width as a function of height ~~~~~~\n//\n// The sum of the widths of image and text varies with their height, h, as:\n//\n//   w(h) = txtW(h) + imgW(h)\n//\n//              txtArea\n//        =  —————————————  +  imgAspectR * h\n//           h - txtExtraH\n//\n//\n//       w(h)\n//        ^\n//        | |              .\n//        | .             .\n//        |  .           .\n// flexW  +   .         .\n//        |    .       .\n//        |     .    .\n//        |       -\n//        |\n//        |———|———|—————|———————————> h\n//            h1  h0    h2\n//\n//\n// ~~~~~~ FORMULAE: height at which total width is minimum ~~~~~~\n//\n// The minimum of the function w(h) is at h = h0\n//\n//            ⌈   txtArea  ⌉\n//   h0 = sqrt| —————————— | + txtExtraH\n//            ⌊ imgAspectR ⌋\n//\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// The widths of image and text container at height = h0 are:\n//\n//   txtW(h0) = sqrt( txtArea * imgAspectR )\n//\n//   imgW(h0) = sqrt( txtArea * imgAspectR ) + imgAspectR * txtExtraH\n//            = txtW(h0) + imgAspectR * txtExtraH\n//\n// - NOTE: at if txtExtraH is 0 (i.e. the container has only text), then\n//   their widths are equal at h0; otherwise the image is wider\n//\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// There are zero, one or two values of h at which w(h) equals the flexbox\n// width, flexW. Labelled h1 and h2 above.\n//\n// ~~~~~~ FORMULAE: height at which total width is equal to flexbox width ~~~~~~\n//\n// The heights at which the sum of the widths, w(h) equals exactly flexW are:\n//\n//          -b ± sqrt( b^2 - 4ac )\n//   h2/1 = ——————————————————————\n//                  2a\n//\n// where:\n// a = imgAspectR\n// b = - ( (imgAspectR * txtExtraH) + flexW )\n// c = txtArea + (txtExtraH * flexW)\n//\n// If h1 and h2 are real, then h1 <= h0 <= h2, as shown in plot above.\n//\n// ~~~~~~ SCENARIOS: free space or overflow in the flexbox ~~~~~~\n//\n// Whether there is a solution to the above equation, i.e. whether h1 and h2\n// are real, depends on which scenario we have:\n//\n// 1. If flexW = w(h0), then h1 = h2 = h0\n// 2. If flexW < w(h0), then there is no exact solution, i.e. it's impossible\n//    to fit the text and image inside the flexbox and have them equal heights;\n//    there is overflow even at h0\n// 3. If flexW > w(h0) (as in the graph above), then at h0 there is free space\n//    in the flexbox and we can choose any height between h1 and h2\n//\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// The widths h0, h1 and h2 represent the following visual configuration:\n//   - h0: intermediate height, maximum free space in the container;\n//   - h1: minimum height (i.e. wide text and small image), no free space in\n//     the container;\n//   - h2: maximum height (i.e. narrow text and large image), no free space in\n//     the container;\n//\n// ~~~~~~ THEREFORE: approach ~~~~~~\n//\n// 1. If flexW = w(h0), i.e. h1 = h2 = h0:\n//    => we choose h0 as the height\n// 2. If flexW < w(h0), i.e. it's impossible to fit the text and image inside\n//    the flexbox and have them equal heights:\n//    => we still choose h0 as the height as that gives the least amount of\n//       overflow; user-defined CSS can control whether the items will be\n//       shrunk, the flexbox will wrap or overflow\n// 3. If flexW > w(h0), i.e. at h0 there is free space in the flexbox:\n//    => choose a height between h1 and h2 that best fits with the guidelines\n//       maxWidthR and maxFreeR\n//\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// In scenario 3 we can look at the guidelines, maxWidthR and maxFreeR.\n//\n// ~~~~~~ GUIDELINE: maxWidthR ~~~~~~\n//\n// ~~~~~~ FORMULAE: height at which text and image width are equal ~~~~~~\n//\n// The width of the text and image container are equal at height hR0:\n//\n//         txtExtraH + sqrt( txtExtraH^2  +  4 * (h0 - txtExtraH)^2 )\n// hR0  =  ——————————————————————————————————————————————————————————\n//                                    2\n//\n// ~~~~~~ FORMULAE: height at which text to image width is maxWidthR ~~~~~~\n//\n// For heights < hR0, i.e. text becomes wider than the image, at some point the\n// ratio of text width to image width becomes maxWidthR. This happens at hR1.\n//\n//                         ⌈                 4 * (h0 - txtExtraH)^2 ⌉\n//         txtExtraH + sqrt| txtExtraH^2  +  —————————————————————— |\n//                         ⌊                        maxWidthR       ⌋\n// hR1  =  ——————————————————————————————————————————————————————————\n//                                    2\n//\n// ~~~~~~ FORMULAE: height at which image to text width is maxWidthR ~~~~~~\n//\n// For heights > hR0, i.e. text becomes narrower than the image, at some point\n// the ratio of image width to text width becomes maxWidthR. This happens at hR2.\n//\n//         txtExtraH + sqrt( txtExtraH^2  +  4 * maxWidthR * (h0 - txtExtraH)^2 )\n// hR2  =  ——————————————————————————————————————————————————————————————————————\n//                                        2\n//\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// NOTE:\n// - hR1 <= hR0 <= hR2 && hR0 <= h0\n// - hR0, hR1 and hR2 are the first (larger) roots of the quadratic equation\n//   with coefficients:\n//     a = imgAspectR * R\n//     b = - imgAspectR * txtExtraH * R\n//     c = - textArea\n//   where R = 1 gives hR0, R = maxWidthR gives hR1 and R = 1 / maxWidthR gives hR2\n// - The smaller roots of the equation should be negative, so we ignore them\n//\n// ~~~~~~ GUIDELINE: maxFreeR ~~~~~~\n//\n// ~~~~~~ FORMULAE: free space in flexbox relative to its width ~~~~~~\n//\n// The percentage of free space in the container is:\n//\n//           flexW - w(h)\n// freeR  =  ————————————\n//              flexW\n//\n//\n//                             txtArea\n//                flexW  -  —————————————  - imgAspectR * h\n//                          h - txtExtraH\n//             =  —————————————————————————————————————————\n//                                flexW\n//\n// ~~~~~~ FORMULAE: height at which relative free space is maxFreeR ~~~~~~\n//\n// This would be equal to maxFreeR at hF1 and hF2:\n//\n//          -b ± sqrt( b^2 - 4ac )\n//   hF2/1 = ——————————————————————\n//                  2a\n//\n// where:\n// a = imgAspectR\n// b = - ( (imgAspectR * txtExtraH) + ( flexW * (1 - maxFreeR) ) )\n// c = txtArea + ( txtExtraH * flexW * (1 - maxFreeR) )\n//\n// If hF1 and hF2 are real, then h1 < hF1 <= h0 <= hF2 < h2.\n//\n// ~~~~~~ THEREFORE: choosing a height in scenario 3 ~~~~~~\n//\n// So in scenario 3 we can choose any height h between\n//\n//   max(h1, hR1, hF1)  and  min(h2, hR2, hF2)\n//\n// Note, it's possible that max(h1, hR1, hF1) is greater than min(h2, hR2, hF2),\n// e.g. if hF1 > hR2 or hR1 > hF2.\n//\n// This will make the text and image equal height, fitting in the flexbox, and\n// if possible, satisfying both maxFreeR and maxWidthR.\n//\n// Here we choose the smallest height possible, which would result in the\n// larger ratio between text width and image width, but it will satisfy the\n// constraints maxFreeR and maxWidthR, so that is ok.\n//\n// ~~~~~~ GENERALISING: for more than one text and/or image container ~~~~~~\n//\n// We can generalise the above in order to find an approximate solution for the\n// case of multiple text or image containers (an exact solution would require\n// solving a polynomial of degree equal to the number of elements).\n//\n// If we imaging putting all text in one container and all images in another\n// container we are back at the above exact solutions for a single text and\n// image container.\n//\n// We can solve for the following parameters:\n// - txtArea:    total text area\n//               = sum_i(txtArea_i)\n//\n// - txtExtraH:  weighted average extra height\n//               = sum_i(txtExtraH_i * txtArea_i) / txtArea\n//\n// - imgAspectR: total image aspect ratio (for horizontally laid out image\n//               containers)\n//               = sum_i(imgAspectR_i)\n//\n// ~~~~~~ CASE 1: only images containers ~~~~~~\n// If we have only image containers, we solve for the optimal height as follows:\n//\n//   flexW = imgAspectR * h\n//\n//                   flexW\n//   => hIdeal  =  ——————————\n//                 imgAspectR\n//\n// ~~~~~~ CASE 2: only text containers ~~~~~~\n// If we have only text containers, we solve for the optimal height as follows:\n//\n//                  txtArea\n//   flexW  =  ——————————————————\n//             hIdeal - txtExtraH\n//\n//                 txtArea\n//   => hIdeal  =  ———————  +  txtExtraH\n//                  flexW\n//\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Once we've found the optimal height h, we calculate the individual widths of\n// the flexbox children as:\n//\n//                  txtArea_i\n//   txtW_i(h) =  —————————————\n//                h - txtExtraH_i\n//\n//   imgW_i(h) = imgAspectR_i * h\n//\n// ~~~~~~ IMPLEMENTATION ~~~~~~\n//\n// We go through the flexbox children and determine whether a child is a \"text\n// container\" or an \"image container\".\n//\n// For image containers, we measure the width and height and calculate the\n// aspect ratio using these.\n//\n// For text containers, we measure their width and height. We calculate the\n// text area by measuring the size of all children of the text container that\n// are deemed to contain only text (or if the entire text container is deemed\n// to contain only text, then we take its size). Then we sum the areas of\n// all such text-only boxes.\n//\n// To determine the extra height in the text container, we take the total\n// height of all text-only boxes inside it, and we subtract that from its\n// measured height.\n//\n// NOTE:\n// - This does not work if the flexbox children are set to align stretch,\n//   because in such cases there would be free vertical space in the container\n//   that shouldn't be counted.\n// - If the flexbox children or any of their descendants have paddings and\n//   margins, then this calculation would only work if the paddings/margins\n//   inside text containers are absolute and only on top and bottom, and\n//   paddings/margins inside image containers are in percentages and only on\n//   descendants of the image container. Otherwise the image aspect ratio and the\n//   extra text height would not be constant, and there may be extra width in\n//   the text container. It is very tricky to take all of this into account. So\n//   we ignore such cases and assume constant image aspect ratio and constant\n//   text area and text container extra height.\n//\n// We use resize observers to get the size of relevant elements and\n// re-calculate as needed.\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  addClasses,\n  removeClasses,\n  getData,\n  setData,\n  delData,\n  setNumericStyleProps,\n  getComputedStyleProp,\n} from \"@lisn/utils/css-alter\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport { logError } from \"@lisn/utils/log\";\nimport { isValidNum, toNumWithBounds, quadraticRoots } from \"@lisn/utils/math\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport { validateNumber } from \"@lisn/utils/validation\";\n\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\nimport { LoggerInterface } from \"@lisn/debug/types\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * Configures the given element as a {@link SameHeight} widget.\n *\n * The SameHeight widget sets up the given element as a flexbox and sets the\n * flex basis of its components so that their heights are as close as possible\n * to each other. It tracks their size (see {@link SizeWatcher}) and\n * continually updates the basis as needed.\n *\n * When calculating the best flex basis that would result in equal heights,\n * SameHeight determines whether a flex child is mostly text or mostly images\n * since the height of these scales in opposite manner with their width.\n * Therefore, the components of the widget should contain either mostly text or\n * mostly images.\n *\n * The widget should have more than one item and the items must be immediate\n * children of the container element.\n *\n * SameHeight tries to automatically determine if an item is mostly text or\n * mostly images based on the total display text content, but you can override\n * this in two ways:\n * 1. By passing a map of elements as {@link SameHeightConfig.items | items}\n *    instead of an array, and setting the value for each to either `\"text\"` or\n *    `\"image\"`\n * 2. By setting the `data-lisn-same-height-item` attribute to `\"text\"` or\n *   `\"image\"` on the children. **NOTE** however that when auto-discovering the\n *   items (i.e. when you have not explicitly passed a list/map of items), if\n *   you set the `data-lisn-same-height-item` attribute on _any_ child you must\n *   also add this attribute to all other children that are to be used by the\n *   widget. Other children (that don't have this attribute) will be ignored\n *   and assumed to be either zero-size or position absolute/fixed.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link SameHeight}\n * widget on a given element. Use {@link SameHeight.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * **IMPORTANT:** The element you pass will be set to `display: flex` and its\n * children will get `box-sizing: border-box` and continually updated\n * `flex-basis` style. You can add additional CSS to the element or its\n * children if you wish. For example you may wish to set `flex-wrap: wrap` on\n * the element and a `min-width` on the children.\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see {@link settings.autoWidgets}), the\n * following CSS classes or data attributes are recognized:\n * - `lisn-same-height` class or `data-lisn-same-height` attribute set on the\n *   container element that constitutes the widget\n *\n * When using auto-widgets, the elements that will be used as items are\n * discovered in the following way:\n * 1. The immediate children of the top-level element that constitutes the\n *    widget that have the `lisn-same-height-item` class or\n *    `data-lisn-same-height-item` attribute are taken.\n * 2. If none of the root's children have this class or attribute, then all of\n *    the immediate children of the widget element except any `script` or\n *    `style` elements are taken as the items.\n *\n * See below examples for what values you can use set for the data attribute\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple SameHeight widget with one text and one image child.\n *\n * ```html\n * <div class=\"lisn-same-height\">\n *   <div>\n *     <p>\n *       Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n *       eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n *       minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n *       aliquip ex ea commodo consequat. Duis aute irure dolor in\n *       reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n *       pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n *       culpa qui officia deserunt mollit anim id est laborum.\n *     </p>\n *   </div>\n *\n *   <div>\n *     <img\n *       src=\"https://www.wikipedia.org/portal/wikipedia.org/assets/img/Wikipedia-logo-v2@1.5x.png\"\n *     />\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a SameHeight widget with the flexbox children specified\n * explicitly (and one ignored), as well as having all custom settings.\n *\n * ```html\n * <div data-lisn-same-height=\"diff-tolerance=20\n *                             | resize-threshold=10\n *                             | debounce-window=50\n *                             | min-gap=50\n *                             | max-free-r=0.2\n *                             | max-width-r=3.2\">\n *   <div>Example ignored child</div>\n *\n *   <div data-lisn-same-height-item><!-- Will be detected as text anyway -->\n *     <p>\n *       Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n *       eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n *       minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n *       aliquip ex ea commodo consequat. Duis aute irure dolor in\n *       reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n *       pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n *       culpa qui officia deserunt mollit anim id est laborum.\n *     </p>\n *   </div>\n *\n *   <!-- Explicitly set to image type, though it will be detected as such -->\n *   <div data-lisn-same-height-item=\"image\">\n *     <img\n *       src=\"https://www.wikipedia.org/portal/wikipedia.org/assets/img/Wikipedia-logo-v2@1.5x.png\"\n *     />\n *   </div>\n *\n *   <!-- Explicitly set to text type, because it will NOT be detected as such (text too short). -->\n *   <div data-lisn-same-height-item=\"text\">\n *     <p>\n *       Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n *     </p>\n *   </div>\n * </div>\n * ```\n */\nexport class SameHeight extends Widget {\n  /**\n   * Switches the flexbox to vertical (column) mode.\n   *\n   * You can alternatively do this by setting the\n   * `data-lisn-orientation=\"vertical\"` attribute on the element at any time.\n   *\n   * You can do this for example as part of a trigger:\n   *\n   * @example\n   * ```html\n   * <div class=\"lisn-same-height\"\n   *      data-lisn-on-layout=\"max-mobile-wide:set-attribute=data-lisn-orientation#vertical\">\n   *      <!-- ... children -->\n   * </div>\n   * ```\n   */\n  readonly toColumn: () => Promise<void>;\n\n  /**\n   * Switches the flexbox back to horizontal (row) mode, which is the default.\n   *\n   * You can alternatively do this by deleting the\n   * `data-lisn-orientation` attribute on the element, or setting it to\n   * `\"horizontal\"` at any time.\n   */\n  readonly toRow: () => Promise<void>;\n\n  /**\n   * Returns the elements used as the flex children.\n   */\n  readonly getItems: () => Element[];\n\n  /**\n   * Returns a map of the elements used as the flex children with their type.\n   */\n  readonly getItemConfigs: () => Map<Element, \"text\" | \"image\">;\n\n  /**\n   * If the element is already configured as a SameHeight widget, the widget\n   * instance is returned. Otherwise null.\n   */\n  static get(containerElement: Element): SameHeight | null {\n    const instance = super.get(containerElement, DUMMY_ID);\n    if (MH.isInstanceOf(instance, SameHeight)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (MH.isHTMLElement(element)) {\n          if (!SameHeight.get(element)) {\n            return new SameHeight(element, config);\n          }\n        } else {\n          logError(\n            MH.usageError(\n              \"Only HTMLElement is supported for SameHeight widget\",\n            ),\n          );\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  constructor(containerElement: HTMLElement, config?: SameHeightConfig) {\n    const destroyPromise = SameHeight.get(containerElement)?.destroy();\n    super(containerElement, { id: DUMMY_ID });\n\n    const items = getItemsFrom(containerElement, config?.items);\n\n    if (MH.sizeOf(items) < 2) {\n      throw MH.usageError(\"SameHeight must have more than 1 item\");\n    }\n\n    for (const item of items.keys()) {\n      if (MH.parentOf(item) !== containerElement) {\n        throw MH.usageError(\n          \"SameHeight's items must be its immediate children\",\n        );\n      }\n    }\n\n    fetchConfig(containerElement, config).then((fullConfig) => {\n      (destroyPromise || MH.promiseResolve()).then(() => {\n        if (this.isDestroyed()) {\n          return;\n        }\n\n        init(this, containerElement, items, fullConfig);\n      });\n    });\n\n    this.toColumn = () =>\n      setData(containerElement, MC.PREFIX_ORIENTATION, MC.S_VERTICAL);\n\n    this.toRow = () => delData(containerElement, MC.PREFIX_ORIENTATION);\n\n    this.getItems = () => [...items.keys()];\n    this.getItemConfigs = () => MH.newMap([...items.entries()]);\n  }\n}\n\n/**\n * @interface\n */\nexport type SameHeightConfig = {\n  /**\n   * The elements that will make up the items. They **MUST** be immediate\n   * children of the container element.\n   *\n   * The widget should have more than one item.\n   *\n   * If this is not specified, then\n   * 1. The immediate children of the top-level element that constitutes the\n   *    widget that have the `lisn-same-height-item` class or\n   *    `data-lisn-same-height-item` attribute are taken.\n   * 2. If none of the root's children have this class or attribute, then all of\n   *    the immediate children of the widget element except any `script` or\n   *    `style` elements are taken as the items.\n   */\n  items?: Element[] | Map<Element, \"image\" | \"text\">;\n\n  /**\n   * After setting the flex basis of the children and their size updates, in\n   * case the resultant height differs from the predicted calculated one by\n   * `diffTolerance` in pixels, then the calculations are re-run using the new\n   * sizes. Calculations are re-run at most once only.\n   *\n   * Differences between the predicted and resultant height would happen if the\n   * children contain a mixture of text and images or if there are margins or\n   * paddings that don't scale in the same way as the content.\n   *\n   * @defaultValue {@link settings.sameHeightDiffTolerance}\n   */\n  diffTolerance?: number;\n\n  /**\n   * The `resizeThreshold` to pass to the {@link SizeWatcher}.\n   *\n   * @defaultValue {@link settings.sameHeightResizeThreshold}\n   */\n  resizeThreshold?: number;\n\n  /**\n   * The `debounceWindow` to pass to the {@link SizeWatcher}.\n   *\n   * @defaultValue {@link settings.sameHeightDebounceWindow}\n   */\n  debounceWindow?: number;\n\n  /**\n   * Minimum gap between the flex items. Note that setting this to 0 while at\n   * the same time setting `flex-wrap` to `wrap` (or `wrap-reverse`) on the\n   * element may lead to premature/unnecessary wrapping.\n   *\n   * Note that this is not strictly enforced, and is only used in finding\n   * optimal height based on other constraints. If you want to enforce this gap,\n   * set it as a `column-gap` CSS rule.\n   *\n   * @defaultValue The effective `column-gap` on the container element style or\n   *               if none, {@link settings.sameHeightMinGap}\n   */\n  minGap?: number;\n\n  /**\n   * Maximum ratio between the free space in the flex container and its total\n   * width. You can set this to a negative number to disable this restriction.\n   *\n   * It has to be < 1. Otherwise it is invalid and disables this restriction.\n   *\n   * Note that this is not strictly enforced, and is only used in finding\n   * optimal height based on other constraints.\n   *\n   * @defaultValue {@link settings.sameHeightMaxFreeR}\n   */\n  maxFreeR?: number;\n\n  /**\n   * Maximum ratio between the width of the widest item and the narrowest item.\n   * You can set this to 0 or a negative number to disable this restriction.\n   *\n   * It has to be >= 1. Otherwise it is invalid and disables this restriction.\n   *\n   * Note that this is not strictly enforced, and is only used in finding\n   * optimal height based on other constraints.\n   *\n   * @defaultValue {@link settings.sameHeightMaxWidthR}\n   */\n  maxWidthR?: number;\n};\n\n// ------------------------------\n\ntype SameHeightConfigInternal = {\n  _minGap: number;\n  _diffTolerance: number;\n  _resizeThreshold: number;\n  _debounceWindow: number;\n  _maxFreeR: number;\n  _maxWidthR: number;\n};\n\ntype ItemProperties = {\n  _type: \"\" | \"image\" | \"text\";\n  _width: number;\n  _height: number;\n  _aspectR: number;\n  _area: number;\n  _extraH: number;\n  _components: Element[];\n};\n\ntype AverageMeasurements = {\n  _tArea: number;\n  _tExtraH: number;\n  _imgAR: number;\n  _flexW: number;\n  _nItems: number;\n};\n\nconst WIDGET_NAME = \"same-height\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_ITEM = `${PREFIXED_NAME}__item`;\nconst PREFIX_ITEM__FOR_SELECT = `${PREFIXED_NAME}-item`;\n\nconst S_TEXT = \"text\";\nconst S_IMAGE = \"image\";\n\n// Only one SameHeight widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\n// We consider elements that have text content of at least <MIN_CHARS_FOR_TEXT>\n// characters to be text.\nconst MIN_CHARS_FOR_TEXT = 100;\n\nconst configValidator: WidgetConfigValidatorObject<SameHeightConfig> = {\n  diffTolerance: validateNumber,\n  resizeThreshold: validateNumber,\n  [MC.S_DEBOUNCE_WINDOW]: validateNumber,\n  minGap: validateNumber,\n  maxFreeR: validateNumber,\n  maxWidthR: validateNumber,\n};\n\nconst isText = (element: Element) =>\n  getData(element, PREFIX_ITEM__FOR_SELECT) === S_TEXT ||\n  (getData(element, PREFIX_ITEM__FOR_SELECT) !== S_IMAGE &&\n    MH.isHTMLElement(element) &&\n    MH.lengthOf(element.innerText) >= MIN_CHARS_FOR_TEXT);\n\nconst areImagesLoaded = (element: Element) => {\n  for (const img of element.querySelectorAll(\"img\")) {\n    // Don't rely on img.complete since sometimes this returns false even\n    // though the image is loaded and has a size. Just check the size.\n    if (\n      img.naturalWidth === 0 ||\n      img.width === 0 ||\n      img.naturalHeight === 0 ||\n      img.height === 0\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst fetchConfig = async (\n  containerElement: HTMLElement,\n  userConfig: SameHeightConfig | undefined,\n): Promise<SameHeightConfigInternal> => {\n  const colGapStr = await getComputedStyleProp(containerElement, \"column-gap\");\n  const minGap = getNumValue(\n    MH.strReplace(colGapStr, /px$/, \"\"),\n    settings.sameHeightMinGap,\n  );\n\n  return {\n    _minGap: toNumWithBounds(userConfig?.minGap ?? minGap, { min: 0 }, 10),\n    _maxFreeR: toNumWithBounds(\n      userConfig?.maxFreeR ?? settings.sameHeightMaxFreeR,\n      { min: 0, max: 0.9 },\n      -1,\n    ),\n    _maxWidthR: toNumWithBounds(\n      userConfig?.maxWidthR ?? settings.sameHeightMaxWidthR,\n      { min: 1 },\n      -1,\n    ),\n    _diffTolerance:\n      userConfig?.diffTolerance ?? settings.sameHeightDiffTolerance,\n    _resizeThreshold:\n      userConfig?.resizeThreshold ?? settings.sameHeightResizeThreshold,\n    _debounceWindow:\n      userConfig?.debounceWindow ?? settings.sameHeightDebounceWindow,\n  };\n};\n\nconst getNumValue = (strValue: string | null, defaultValue: number): number => {\n  const num = strValue ? MH.parseFloat(strValue) : NaN;\n  return MH.isNaN(num) ? defaultValue : num;\n};\n\nconst findItems = (containerElement: HTMLElement) => {\n  const items = [\n    ...MH.querySelectorAll(\n      containerElement,\n      getDefaultWidgetSelector(PREFIX_ITEM__FOR_SELECT),\n    ),\n  ];\n\n  if (!MH.lengthOf(items)) {\n    items.push(...getVisibleContentChildren(containerElement));\n  }\n\n  return items;\n};\n\nconst getItemsFrom = (\n  containerElement: HTMLElement,\n  inputItems: Element[] | Map<Element, \"image\" | \"text\"> | undefined,\n) => {\n  const itemMap = MH.newMap<Element, \"image\" | \"text\">();\n\n  inputItems = inputItems || findItems(containerElement);\n\n  const addItem = (item: Element, itemType?: \"text\" | \"image\") => {\n    itemType = itemType || (isText(item) ? S_TEXT : S_IMAGE);\n    itemMap.set(item, itemType);\n  };\n\n  if (MH.isArray(inputItems)) {\n    for (const item of inputItems) {\n      addItem(item);\n    }\n  } else if (MH.isInstanceOf(inputItems, Map)) {\n    for (const [item, itemType] of inputItems.entries()) {\n      addItem(item, itemType);\n    }\n  }\n\n  return itemMap;\n};\n\nconst init = (\n  widget: SameHeight,\n  containerElement: HTMLElement,\n  items: Map<Element, \"image\" | \"text\">,\n  config: SameHeightConfigInternal,\n) => {\n  const logger = debug\n    ? new debug.Logger({\n        name: `SameHeight-${formatAsString(containerElement)}`,\n      })\n    : null;\n\n  const diffTolerance = config._diffTolerance;\n  const debounceWindow = config._debounceWindow;\n\n  const sizeWatcher = SizeWatcher.reuse({\n    [MC.S_DEBOUNCE_WINDOW]: debounceWindow,\n    resizeThreshold: config._resizeThreshold,\n  });\n\n  const allItems = MH.newMap<Element, ItemProperties>();\n\n  let callCounter = 0;\n  let isFirstTime = true;\n  let lastOptimalHeight = 0;\n  let hasScheduledReset = false;\n  let counterTimeout: ReturnType<typeof setTimeout> | null = null;\n\n  // ----------\n\n  const resizeHandler = (element: Element, sizeData: SizeData) => {\n    // Since the SizeWatcher calls us once for every element, we batch the\n    // re-calculations so they are done once in every cycle.\n    // Allow the queue of ResizeObserverEntry in the SizeWatcher to be\n    // emptied, and therefore to ensure we have the latest size for all\n    // elements.\n    if (!hasScheduledReset) {\n      debug: logger?.debug7(\"Scheduling calculations\", callCounter);\n      hasScheduledReset = true;\n\n      MH.setTimer(() => {\n        hasScheduledReset = false;\n\n        if (callCounter > 1) {\n          debug: logger?.debug7(\"Already re-calculated once, skipping\");\n          callCounter = 0;\n          return;\n        }\n\n        callCounter++;\n        if (counterTimeout) {\n          MH.clearTimer(counterTimeout);\n        }\n\n        const measurements = calculateMeasurements(\n          containerElement,\n          allItems,\n          isFirstTime,\n          logger,\n        );\n\n        const height = measurements\n          ? getOptimalHeight(measurements, config, logger)\n          : null;\n\n        if (height && MH.abs(lastOptimalHeight - height) > diffTolerance) {\n          // Re-set widths again. We may be called again in the next cycle if\n          // the change in size exceeds the resizeThreshold.\n          lastOptimalHeight = height;\n          isFirstTime = false;\n          setWidths(height); // no need to await\n\n          // If we are _not_ called again in the next cycle (just after\n          // debounceWindow), then reset the counter. It means the resultant\n          // change in size did not exceed the SizeWatcher threshold.\n          counterTimeout = MH.setTimer(() => {\n            callCounter = 0;\n          }, debounceWindow + 50);\n        } else {\n          // Done, until the next time elements are resized\n          callCounter = 0;\n        }\n      }, 0);\n    }\n\n    // Save the size of the item\n    const properties = allItems.get(element);\n    if (!properties) {\n      logError(MH.bugError(\"Got SizeWatcher call for unknown element\"));\n      return;\n    }\n\n    properties._width =\n      sizeData.border[MC.S_WIDTH] || sizeData.content[MC.S_WIDTH];\n    properties._height =\n      sizeData.border[MC.S_HEIGHT] || sizeData.content[MC.S_HEIGHT];\n\n    debug: logger?.debug7(\"Got size\", element, properties);\n  };\n\n  // ----------\n\n  const observeAll = () => {\n    isFirstTime = true;\n\n    for (const element of allItems.keys()) {\n      sizeWatcher.onResize(resizeHandler, { target: element });\n    }\n  };\n\n  // ----------\n\n  const unobserveAll = () => {\n    for (const element of allItems.keys()) {\n      sizeWatcher.offResize(resizeHandler, element);\n    }\n  };\n\n  // ----------\n\n  const setWidths = (height: number) => {\n    for (const [element, properties] of allItems.entries()) {\n      if (MH.parentOf(element) === containerElement) {\n        const width = getWidthAtH(element, properties, height);\n        debug: logger?.debug9(\n          \"Setting width property\",\n          element,\n          properties,\n          width,\n        );\n        setNumericStyleProps(element, { sameHeightW: width }, { _units: \"px\" });\n      }\n    }\n  };\n\n  // SETUP ------------------------------\n\n  widget.onDisable(unobserveAll);\n  widget.onEnable(observeAll);\n\n  widget.onDestroy(async () => {\n    for (const element of allItems.keys()) {\n      if (MH.parentOf(element) === containerElement) {\n        // delete the property and attribute\n        await setNumericStyleProps(element, { sameHeightW: NaN });\n        await removeClasses(element, PREFIX_ITEM);\n      }\n    }\n\n    allItems.clear();\n\n    await removeClasses(containerElement, PREFIX_ROOT);\n  });\n\n  // Find all relevant items: the container, its direct children and the\n  // top-level text only elements.\n  const getProperties = (itemType: \"\" | \"image\" | \"text\"): ItemProperties => {\n    return {\n      _type: itemType,\n      _width: NaN,\n      _height: NaN,\n      _aspectR: NaN,\n      _area: NaN,\n      _extraH: NaN,\n      _components: [],\n    };\n  };\n\n  allItems.set(containerElement, getProperties(\"\"));\n\n  for (const [item, itemType] of items.entries()) {\n    addClasses(item, PREFIX_ITEM);\n\n    const properties: ItemProperties = getProperties(itemType);\n    allItems.set(item, properties);\n\n    if (itemType === S_TEXT) {\n      properties._components = getTextComponents(item);\n      for (const child of properties._components) {\n        allItems.set(child, getProperties(\"\"));\n      }\n    }\n  }\n\n  addClasses(containerElement, PREFIX_ROOT);\n  observeAll();\n};\n\n/**\n * Find the top-level text-only elements that are descendants of the given one.\n */\nconst getTextComponents = (element: Element): Element[] => {\n  const components: Element[] = [];\n  for (const child of getVisibleContentChildren(element)) {\n    if (isText(child)) {\n      components.push(child);\n    } else {\n      components.push(...getTextComponents(child));\n    }\n  }\n\n  return components;\n};\n\nconst calculateMeasurements = (\n  containerElement: HTMLElement,\n  allItems: Map<Element, ItemProperties>,\n  isFirstTime: boolean,\n  logger: LoggerInterface | null,\n): AverageMeasurements | null => {\n  if (getData(containerElement, MC.PREFIX_ORIENTATION) === MC.S_VERTICAL) {\n    debug: logger?.debug8(\"In vertical mode\");\n    return null;\n  }\n\n  debug: logger?.debug7(\"Calculating measurements\");\n  // initial values\n  let tArea = NaN,\n    tExtraH = 0,\n    imgAR = NaN,\n    flexW = NaN,\n    nItems = 0;\n\n  for (const [element, properties] of allItems.entries()) {\n    const width = properties._width;\n    const height = properties._height;\n\n    if (element === containerElement) {\n      flexW = width;\n      nItems = MH.lengthOf(getVisibleContentChildren(element));\n\n      //\n    } else if (properties._type === S_TEXT) {\n      let thisTxtArea = 0,\n        thisTxtExtraH = 0;\n      const components = properties._components;\n\n      if (MH.lengthOf(components)) {\n        for (const component of properties._components) {\n          const cmpProps = allItems.get(component);\n          if (cmpProps) {\n            thisTxtArea += cmpProps._width * cmpProps._height;\n          } else {\n            logError(MH.bugError(\"Text component not observed\"));\n          }\n        }\n        thisTxtExtraH = height - thisTxtArea / width;\n      } else {\n        thisTxtArea = width * height;\n      }\n\n      properties._area = thisTxtArea;\n      properties._extraH = thisTxtExtraH;\n\n      tArea = (tArea || 0) + thisTxtArea;\n      tExtraH += thisTxtExtraH;\n\n      //\n    } else if (properties._type === S_IMAGE) {\n      if (isFirstTime && !areImagesLoaded(element)) {\n        debug: logger?.debug8(\"Images not loaded\");\n        return null;\n      }\n\n      const thisAspectR = width / height;\n      imgAR = (imgAR || 0) + thisAspectR;\n      properties._aspectR = thisAspectR;\n\n      //\n    } else {\n      // skip grandchildren (text components), here\n      continue;\n    }\n\n    debug: logger?.debug8(\"Examined\", properties, {\n      tArea,\n      tExtraH,\n      imgAR,\n      flexW,\n    });\n  }\n\n  return {\n    _tArea: tArea,\n    _tExtraH: tExtraH,\n    _imgAR: imgAR,\n    _flexW: flexW,\n    _nItems: nItems,\n  };\n};\n\nconst getWidthAtH = (\n  element: Element,\n  properties: ItemProperties,\n  targetHeight: number,\n): number =>\n  properties._type === S_TEXT\n    ? properties._area / (targetHeight - (properties._extraH || 0))\n    : properties._aspectR * targetHeight;\n\nconst getOptimalHeight = (\n  measurements: AverageMeasurements,\n  config: SameHeightConfigInternal,\n  logger: LoggerInterface | null,\n) => {\n  const tArea = measurements._tArea;\n  const tExtraH = measurements._tExtraH;\n  const imgAR = measurements._imgAR;\n  const flexW =\n    measurements._flexW - (measurements._nItems - 1) * config._minGap;\n  const maxFreeR = config._maxFreeR;\n  const maxWidthR = config._maxWidthR;\n\n  debug: logger?.debug8(\"Getting optimal height\", measurements, config);\n\n  // CASE 1: No text items\n  if (MH.isNaN(tArea)) {\n    debug: logger?.debug8(\"No text items\");\n    if (!imgAR) {\n      debug: logger?.debug8(\"Images not loaded\");\n      return NaN;\n    }\n\n    return flexW / imgAR;\n  }\n\n  // CASE 2: No images\n  if (MH.isNaN(imgAR)) {\n    debug: logger?.debug8(\"No images\");\n    return tArea / flexW + tExtraH;\n  }\n\n  if (!imgAR || !tArea) {\n    debug: logger?.debug8(\n      \"Expected both images and text, but no imgAR or tArea\",\n    );\n    return NaN;\n  }\n\n  const h0 = MH.sqrt(tArea / imgAR) + tExtraH;\n\n  // heights satisfying w(h) === flexW\n  const [h2, h1] = quadraticRoots(\n    imgAR,\n    -(imgAR * tExtraH + flexW),\n    tArea + tExtraH * flexW,\n  );\n\n  // heights satisfying maxWidthR\n  let hR0 = NaN,\n    hR1 = NaN,\n    hR2 = NaN;\n  if (maxWidthR > 0) {\n    hR0 = quadraticRoots(imgAR, -imgAR * tExtraH, -tArea)[0];\n\n    hR1 = quadraticRoots(\n      imgAR * maxWidthR,\n\n      -imgAR * tExtraH * maxWidthR,\n      -tArea,\n    )[0];\n\n    hR2 = quadraticRoots(\n      imgAR / maxWidthR,\n      (-imgAR * tExtraH) / maxWidthR,\n      -tArea,\n    )[0];\n  }\n\n  // heights satisfying maxFreeR\n  let hF2 = NaN,\n    hF1 = NaN;\n  if (maxFreeR >= 0) {\n    [hF2, hF1] = quadraticRoots(\n      imgAR,\n      -(imgAR * tExtraH + flexW * (1 - maxFreeR)),\n      tArea + tExtraH * flexW * (1 - maxFreeR),\n    );\n  }\n\n  // limits on constraints\n  const hConstr1 = MH.max(...MH.filter([h1, hR1, hF1], (v) => isValidNum(v)));\n  const hConstr2 = MH.min(...MH.filter([h2, hR2, hF2], (v) => isValidNum(v)));\n\n  // text and image widths at h0\n  const tw0 = tArea / (h0 - tExtraH);\n  const iw0 = h0 * imgAR;\n\n  // free space at h0\n  const freeSpace0 = flexW - tw0 - iw0;\n\n  debug: logger?.debug8(\"Optimal height calculations\", config, measurements, {\n    h0,\n    h1,\n    h2,\n    hR0,\n    hR1,\n    hR2,\n    hF1,\n    hF2,\n    hConstr1,\n    hConstr2,\n    tw0,\n    iw0,\n    freeSpace0,\n  });\n\n  // ~~~~ Some sanity checks\n  // If any of then is NaN, the comparison would be false, so we don't need to\n  // check.\n  // Also, we round the difference to 0.1 pixels to account for rounding\n  // errors during calculations.\n  if (!h0 || h0 <= 0) {\n    debug: logger?.debug1(\"Invalid calculation: Invalid h0\");\n  } else if (isValidNum(h1) !== isValidNum(h2)) {\n    debug: logger?.debug1(\n      \"Invalid calculation: One and only one of h1 or h2 is real\",\n    );\n  } else if (isValidNum(hR1) !== isValidNum(hR2)) {\n    debug: logger?.debug1(\n      \"Invalid calculation: One and only one of hR1 or hR2 is real\",\n    );\n  } else if (isValidNum(hF1) !== isValidNum(hF2)) {\n    debug: logger?.debug1(\n      \"Invalid calculation: One and only one of hF1 or hF2 is real\",\n    );\n  } else if (h1 - h0 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: h1 > h0\");\n  } else if (h0 - h2 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: h0 > h2\");\n  } else if (hR0 - h0 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: hR0 > h0\");\n  } else if (hR1 - hR0 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: hR1 > hR0\");\n  } else if (hR0 - hR2 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: hR0 > hR2\");\n  } else if (hF1 - hF2 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: hF1 > hF2\");\n  } else if (h1 - hF1 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: h1 > hF1\");\n  } else if (hF2 - h2 > 0.1) {\n    debug: logger?.debug1(\"Invalid calculation: hF2 > h2\");\n  } else {\n    // Choose a height\n    if (freeSpace0 <= 0) {\n      // scenario 1 or 2\n      return h0;\n    } else {\n      // scenario 3\n      return MH.min(hConstr1, hConstr2);\n    }\n  }\n\n  logError(\n    MH.bugError(\"Invalid SameHeight calculations\"),\n    measurements,\n    config,\n  );\n  return NaN; // sanity checks failed\n};\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { Position } from \"@lisn/globals/types\";\n\nimport {\n  showElement,\n  hideElement,\n  displayElement,\n  undisplayElement,\n  hasClass,\n  addClasses,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n  getData,\n  setData,\n  setBoolData,\n  setBoolDataNow,\n  setDataNow,\n  delData,\n  delDataNow,\n  getComputedStyleProp,\n  getComputedStylePropNow,\n  setStyleProp,\n  setNumericStyleProps,\n} from \"@lisn/utils/css-alter\";\nimport {\n  moveElementNow,\n  moveElement,\n  moveChildrenNow,\n  wrapChildren,\n  getOrAssignID,\n} from \"@lisn/utils/dom-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n} from \"@lisn/utils/event\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { toArrayIfSingle } from \"@lisn/utils/misc\";\nimport {\n  isScrollable,\n  getDefaultScrollingElement,\n  getClientWidthNow,\n  getClientHeightNow,\n  mapScrollable,\n  unmapScrollable,\n  tryGetMainScrollableElement,\n  ScrollAction,\n} from \"@lisn/utils/scroll\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateNumber,\n  validateBoolean,\n  validateString,\n} from \"@lisn/utils/validation\";\n\nimport { ScrollWatcher, ScrollData } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * Configures the given element, which must be scrollable, to use a\n * {@link Scrollbar}.\n *\n * The Scrollbar widget is a customizable alternative to the native\n * scrollbars (vertical and horizontal). You can position each of the two\n * scrollbars on any of the four sides of the element, make them automatically\n * hide after certain time of inactivity, style them as a traditional handle\n * scrollbar or a percentage fill progress bar and so on.\n *\n * It is also itself draggable/clickable so it _can_ be used to scroll the\n * element similar to the native scrollbar. The drag/click functionality can be\n * disabled too.\n *\n * **NOTE:** If you have disabled the {@link Widgets.PageLoader | PageLoader}\n * and have left {@link ScrollbarConfig.hideNative} ON, but are seeing the\n * native scrollbars just for a fraction of a second at the beginning of the\n * page load, you may want to manually add `lisn-hide-scroll` class on the\n * scrollable element to make sure the scrollbars are hidden as soon as\n * possible (before the scrollbar widget has time to initialize.\n *\n * **IMPORTANT:** If you are using the Scrollbar on an element other than the\n * main scrollable element, it's highly recommended to enable (it is enabled by\n * default) {@link settings.contentWrappingAllowed}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Scrollbar}\n * widget on a given element. Use {@link Scrollbar.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the element:\n * - `data-lisn-has-scrollbar-top`: `\"true\"` or `\"false\"`\n * - `data-lisn-has-scrollbar-bottom`: `\"true\"` or `\"false\"`\n * - `data-lisn-has-scrollbar-left`: `\"true\"` or `\"false\"`\n * - `data-lisn-has-scrollbar-right`: `\"true\"` or `\"false\"`\n *\n * The following dynamic attributes are set on each progressbar element:\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n * - `data-lisn-place`: `\"top\"`, `\"bottom\"`, `\"left\"` or `\"right\"`\n * - `data-lisn-draggable`: `\"true\"` or `\"false\"`\n * - `data-lisn-clickable`: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see {@link settings.autoWidgets}), the\n * following CSS classes or data attributes are recognized:\n * - `lisn-scrollbar` class or `data-lisn-scrollbar` attribute set on the\n *   scrollable element that you want to enable custom scrollbars for\n *\n * See below examples for what values you can use set for the data attribute\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This will create custom scrollbars for the main scrolling element\n * (see {@link settings.mainScrollableElementSelector}).\n *\n * This will work even if {@link settings.autoWidgets}) is false\n *\n * ```html\n * <!-- LISN should be loaded beforehand -->\n * <script>\n *   // You can also just customise global default settings:\n *   // LISN.settings.scrollbarPositionV = \"top\";\n *   // LISN.settings.scrollbarAutoHide = 3000;\n *   // LISN.settings.scrollbarUseHandle = true;\n *\n *   LISN.widgets.Scrollbar.enableMain({\n *     position: \"top\",\n *     autoHide: 3000,\n *     useHandle: true\n *   });\n * </script>\n * ```\n *\n * @example\n * This will create custom scrollbars for a custom scrolling element (i.e. one\n * with overflow \"auto\" or \"scroll\").\n *\n * ```html\n * <div class=\"scrolling lisn-scrollbar\">\n *   <!-- content here... -->\n * </div>\n * ```\n *\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <div\n *   class=\"scrolling\"\n *   data-lisn-scrollbar=\"hide-native=false\n *                        | positionH=top\n *                        | positionV=left\n *                        | auto-hide=2000\n *                        | click-scroll=false\n *                        | drag-scroll=false\n *                        | use-handle=false\n *                        \">\n *   <!-- content here... -->\n * </div>\n * ```\n */\nexport class Scrollbar extends Widget {\n  /**\n   * Returns the actual scrollable element created by us which will be a\n   * descendant of the original element passed to the constructor (unless\n   * {@link settings.contentWrappingAllowed} is false).\n   */\n  readonly getScrollable: () => Element;\n\n  /**\n   * If element is omitted, returns the instance created by {@link enableMain}\n   * if any.\n   */\n  static get(scrollable?: Element): Scrollbar | null {\n    if (!scrollable) {\n      return mainWidget;\n    }\n\n    if (scrollable === MH.getDocElement()) {\n      scrollable = MH.getBody();\n    }\n\n    const instance = super.get(scrollable, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Scrollbar)) {\n      return instance;\n    }\n    return null;\n  }\n\n  /**\n   * Enables scrollbars on the {@link settings.mainScrollableElementSelector}.\n   *\n   * **NOTE:** It returns a Promise to a widget because it will wait for the\n   * main element to be present in the DOM if not already.\n   */\n  static enableMain(config?: ScrollbarConfig) {\n    return ScrollWatcher.fetchMainScrollableElement().then((main) => {\n      const widget = new Scrollbar(main, config);\n      widget.onDestroy(() => {\n        if (mainWidget === widget) {\n          mainWidget = null;\n        }\n      });\n\n      mainWidget = widget;\n      return widget;\n    });\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (MH.isHTMLElement(element)) {\n          if (!Scrollbar.get(element)) {\n            return new Scrollbar(element, config);\n          }\n        } else {\n          logError(\n            MH.usageError(\"Only HTMLElement is supported for Scrollbar widget\"),\n          );\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * Note that passing `document.body` is considered equivalent to\n   * `document.documentElement`.\n   */\n  constructor(scrollable: HTMLElement, config?: ScrollbarConfig) {\n    if (scrollable === MH.getDocElement()) {\n      scrollable = MH.getBody();\n    }\n\n    const destroyPromise = Scrollbar.get(scrollable)?.destroy();\n    super(scrollable, { id: DUMMY_ID });\n\n    const props = getScrollableProps(scrollable);\n    const ourScrollable = props.scrollable;\n\n    (destroyPromise || MH.promiseResolve()).then(async () => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      await init(this, scrollable, props, config);\n    });\n\n    this.getScrollable = () => ourScrollable;\n  }\n}\n\n/**\n * @interface\n */\nexport type ScrollbarConfig = {\n  /**\n   * The DOM ID of the scrollable element. Will result in the scrollable wrapper\n   * element that's created by us getting this ID.\n   *\n   * **IMPORTANT:** If you've disabled {@link settings.contentWrappingAllowed},\n   * then the scrollable element provided as the widget element will _not_ have\n   * its content wrapped and will remain the actual scrollable. In this case,\n   * it's ID will be set to this, so if it already has an ID, it will be\n   * overridden with this value.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * A class name or a list of class names of the scrollable element. Will\n   * result in the scrollable wrapper element that's created by us getting\n   * these classes.\n   *\n   * See explanation for {@link id}.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Hide the native scroll bar.\n   *\n   * Note that the LISN scrollbar is itself draggable/clickable so it\n   * _can_ be used to scroll the element similar to the native scrollbar.\n   *\n   * @defaultValue {@link settings.scrollbarHideNative}\n   */\n  hideNative?: boolean;\n\n  /**\n   * Whether to enable also on mobile and tablet devices. Detection is based on\n   * user agent.\n   *\n   * @defaultValue {@link settings.scrollbarOnMobile}\n   */\n  onMobile?: boolean;\n\n  /**\n   * Where to place the scrollbar that tracks the horizontal scroll.\n   *\n   * It does not need to be a horizontal position; it can for example be \"left\"\n   * or \"right\".\n   *\n   * @defaultValue {@link settings.scrollbarPositionH}\n   */\n  positionH?: Position;\n\n  /**\n   * Where to place the scrollbar that tracks the vertical scroll.\n   *\n   * It does not need to be a vertical position; it can for example be \"top\"\n   * or \"bottom\".\n   *\n   * @defaultValue {@link settings.scrollbarPositionV}\n   */\n  positionV?: Position;\n\n  /**\n   * Auto-hide the scrollbar when there's no scrolling happening for the given\n   * number of milliseconds.\n   *\n   * Set to 0 or a negative value to disable hiding.\n   *\n   * @defaultValue {@link settings.scrollbarAutoHide}\n   */\n  autoHide?: number;\n\n  /**\n   * Whether to scroll the element when a user clicks anywhere on the\n   * scrollbar.\n   *\n   * @defaultValue {@link settings.scrollbarClickScroll}\n   */\n  clickScroll?: boolean;\n\n  /**\n   * Whether to scroll the element when a user drags the handle (if\n   * {@link useHandle}) or drags along anywhere on the scrollbar (if _not_\n   * {@link useHandle}).\n   *\n   * @defaultValue {@link settings.scrollbarDragScroll}\n   */\n  dragScroll?: boolean;\n\n  /**\n   * Whether to use a traditional fixed-length handle (like the native\n   * scrollbar) to indicate the position or the default style of a fill (that\n   * starts at the beginning and ends at the scroll fraction).\n   *\n   * @defaultValue {@link settings.scrollbarUseHandle}\n   */\n  useHandle?: boolean;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"scrollbar\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\n// Only one Scrollbar widget per element is allowed, but Widget\n// requires a non-blank ID.\n// In fact, it doesn't make much sense to have more than 1 scroll-to-top button\n// on the whole page, but we support it, hence use a class rather than a DOM ID.\nconst DUMMY_ID = PREFIXED_NAME;\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_CONTAINER = `${PREFIXED_NAME}__container`;\nconst PREFIX_CONTENT = `${PREFIXED_NAME}__content`;\nconst PREFIX_BAR = `${PREFIXED_NAME}__bar`;\nconst PREFIX_WRAPPER = `${PREFIXED_NAME}__wrapper`;\nconst PREFIX_FILL = `${PREFIXED_NAME}__fill`;\nconst PREFIX_SPACER = `${PREFIXED_NAME}__spacer`;\nconst PREFIX_HANDLE = `${PREFIXED_NAME}__handle`;\nconst PREFIX_DRAGGABLE = MH.prefixName(\"draggable\");\nconst PREFIX_CLICKABLE = MH.prefixName(\"clickable\");\nconst PREFIX_HAS_WRAPPER = MH.prefixName(\"has-wrapper\");\nconst PREFIX_ALLOW_COLLAPSE = MH.prefixName(\"allow-collapse\");\nconst PREFIX_HAS_FIXED_HEIGHT = MH.prefixName(\"has-fixed-height\");\nconst PREFIX_HAS_SCROLLBAR = MH.prefixName(\"has-scrollbar\");\nconst PREFIX_HIDE_SCROLL = MH.prefixName(\"hide-scroll\");\n\nconst S_SET_POINTER_CAPTURE = \"setPointerCapture\";\nconst S_RELEASE_POINTER_CAPTURE = \"releasePointerCapture\";\nconst S_ARIA_VALUENOW = MC.ARIA_PREFIX + \"valuenow\";\nconst S_SCROLLBAR = \"scrollbar\";\n\nlet mainWidget: Scrollbar | null = null;\n\nconst configValidator: WidgetConfigValidatorObject<ScrollbarConfig> = {\n  id: validateString,\n  className: validateStrList,\n  hideNative: validateBoolean,\n  onMobile: validateBoolean,\n  positionH: validateString,\n  positionV: validateString,\n  autoHide: validateNumber,\n  clickScroll: validateBoolean,\n  dragScroll: validateBoolean,\n  useHandle: validateBoolean,\n};\n\nconst getScrollableProps = (containerElement: HTMLElement) => {\n  // If main scrollable element doesn't exist yet, then the containerElement\n  // passed can't be it anyway, so no need to use fetchMainScrollableElement.\n  const mainScrollableElement = tryGetMainScrollableElement();\n\n  const body = MH.getBody();\n  const defaultScrollable = getDefaultScrollingElement();\n\n  const isBody = containerElement === body;\n  const isMainScrollable =\n    (isBody ? defaultScrollable : containerElement) === mainScrollableElement;\n\n  const root: HTMLElement = isMainScrollable\n    ? mainScrollableElement\n    : isBody\n      ? defaultScrollable\n      : containerElement;\n\n  // check if we're using body in quirks mode\n  const isBodyInQuirks = root === body && defaultScrollable === body;\n\n  const allowedToWrap =\n    settings.contentWrappingAllowed &&\n    getData(containerElement, MC.PREFIX_NO_WRAP) === null;\n\n  const needsSticky = !isMainScrollable && !allowedToWrap;\n  const barParent = isMainScrollable ? body : containerElement;\n  const hasFixedHeight = isScrollable(root, { axis: \"y\" });\n\n  let contentWrapper: HTMLElement | null = null;\n  let scrollable = root;\n  if (!isMainScrollable && !isBody && allowedToWrap) {\n    if (allowedToWrap) {\n      contentWrapper = MH.createElement(\"div\");\n      scrollable = contentWrapper;\n    } else {\n      logWarn(\n        \"Scrollbar on elements other than the main scrollable \" +\n          \"when settings.contentWrappingAllowed is false relies on \" +\n          \"position: sticky, is experimental and may not work properly\",\n      );\n    }\n  }\n\n  return {\n    isMainScrollable,\n    isBody,\n    isBodyInQuirks,\n    root,\n    scrollable,\n    barParent,\n    contentWrapper,\n    needsSticky,\n    hasFixedHeight,\n  };\n};\n\nconst init = (\n  widget: Scrollbar,\n  containerElement: HTMLElement,\n  props: ReturnType<typeof getScrollableProps>,\n  config: ScrollbarConfig | undefined,\n) => {\n  const {\n    isMainScrollable,\n    isBody,\n    isBodyInQuirks,\n    root,\n    scrollable,\n    barParent,\n    contentWrapper,\n    needsSticky,\n    hasFixedHeight,\n  } = props;\n\n  const logger = debug\n    ? new debug.Logger({\n        name: `Scrollbar-${formatAsString(root)}`,\n        logAtCreation: { props, config },\n      })\n    : null;\n\n  // config\n  const onMobile = config?.onMobile ?? settings.scrollbarOnMobile ?? false;\n  const hideNative =\n    config?.hideNative ?? settings.scrollbarHideNative ?? false;\n  const positionH = config?.positionH || settings.scrollbarPositionH;\n  const positionV = config?.positionV || settings.scrollbarPositionV;\n  const autoHideDelay = config?.autoHide ?? settings.scrollbarAutoHide;\n  const clickScroll = config?.clickScroll ?? settings.scrollbarClickScroll;\n  const dragScroll =\n    config?.dragScroll ?? settings.scrollbarDragScroll ?? false;\n  const useHandle = config?.useHandle ?? settings.scrollbarUseHandle ?? false;\n\n  if (MC.IS_MOBILE && !onMobile) {\n    return;\n  }\n\n  mapScrollable(root, scrollable);\n\n  // ----------\n\n  const newScrollbar = (wrapper: Element, position: string) => {\n    const barIsHorizontal = position === MC.S_TOP || position === MC.S_BOTTOM;\n\n    const scrollbar = MH.createElement(\"div\");\n    addClassesNow(scrollbar, PREFIX_BAR);\n    setDataNow(\n      scrollbar,\n      MC.PREFIX_ORIENTATION,\n      barIsHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL,\n    );\n    setDataNow(scrollbar, MC.PREFIX_PLACE, position);\n\n    if (clickScroll || dragScroll) {\n      MH.setAttr(scrollbar, MC.S_ROLE, S_SCROLLBAR);\n      MH.setAttr(scrollbar, MC.S_ARIA_CONTROLS, scrollDomID);\n    }\n\n    const fill = MH.createElement(\"div\");\n    addClassesNow(fill, useHandle ? PREFIX_SPACER : PREFIX_FILL);\n\n    let handle: Element | null = null;\n    if (useHandle) {\n      handle = MH.createElement(\"div\");\n      addClassesNow(handle, PREFIX_HANDLE);\n      setBoolDataNow(handle, PREFIX_DRAGGABLE, dragScroll);\n    }\n\n    setBoolDataNow(scrollbar, PREFIX_DRAGGABLE, dragScroll && !useHandle);\n    setBoolDataNow(scrollbar, PREFIX_CLICKABLE, clickScroll);\n\n    moveElementNow(fill, { to: scrollbar });\n\n    if (handle) {\n      moveElementNow(handle, { to: scrollbar });\n    }\n    moveElementNow(scrollbar, { to: wrapper });\n\n    return {\n      _bar: scrollbar,\n      _handle: handle,\n      _fill: fill,\n    };\n  };\n\n  // ----------\n\n  const setProgress = async (scrollData: ScrollData, tracksH: boolean) => {\n    const scrollbar = tracksH ? scrollbarH : scrollbarV;\n    const hasBarPrefix = `${PREFIX_HAS_SCROLLBAR}-${tracksH ? positionH : positionV}`;\n\n    const completeFraction = tracksH\n      ? scrollData[MC.S_SCROLL_LEFT_FRACTION]\n      : scrollData[MC.S_SCROLL_TOP_FRACTION];\n\n    const viewFraction = tracksH\n      ? scrollData[MC.S_CLIENT_WIDTH] / scrollData[MC.S_SCROLL_WIDTH]\n      : scrollData[MC.S_CLIENT_HEIGHT] / scrollData[MC.S_SCROLL_HEIGHT];\n\n    logger?.debug9(\"Updating progress\", {\n      tracksH,\n      completeFraction,\n      viewFraction,\n    });\n\n    MH.setAttr(\n      scrollbar,\n      S_ARIA_VALUENOW,\n      MH.round(completeFraction * 100) + \"\",\n    );\n\n    setNumericStyleProps(\n      scrollbar,\n      { viewFr: viewFraction, completeFr: completeFraction },\n      { _numDecimal: 4 },\n    );\n\n    const scrollAxis = tracksH ? \"x\" : \"y\";\n    if (isScrollable(scrollable, { axis: scrollAxis }) && viewFraction < 1) {\n      setBoolData(containerElement, hasBarPrefix);\n      displayElement(scrollbar);\n    } else {\n      delData(containerElement, hasBarPrefix);\n      undisplayElement(scrollbar);\n    }\n  };\n\n  // ----------\n\n  const updateProgress = (target: Element, scrollData: ScrollData) => {\n    setProgress(scrollData, true);\n    setProgress(scrollData, false);\n\n    if (!isMainScrollable && !isBody) {\n      setBoxMeasureProps(containerElement);\n    }\n\n    if (autoHideDelay > 0) {\n      showElement(wrapper).then(() => hideElement(wrapper, autoHideDelay));\n    }\n  };\n\n  const updatePropsOnResize = (target: Element, sizeData: SizeData) => {\n    setBoxMeasureProps(containerElement);\n    setNumericStyleProps(\n      containerElement,\n      { barHeight: sizeData.border[MC.S_HEIGHT] },\n      { _units: \"px\", _numDecimal: 2 },\n    );\n  };\n\n  // ----------\n\n  let isDragging = false;\n  let lastOffset = 0;\n  let lastTargetFraction = 0;\n  let scrollAction: ScrollAction | null;\n\n  const onClickOrDrag = async (event: Event, tracksH: boolean) => {\n    MH.preventDefault(event);\n    const scrollbar = tracksH ? scrollbarH : scrollbarV;\n    const handle = tracksH ? handleH : handleV;\n\n    const target = MH.targetOf(event);\n    if (!MH.isMouseEvent(event) || !MH.isHTMLElement(target)) {\n      return;\n    }\n\n    const eventType = event.type;\n\n    const isClick =\n      eventType === MC.S_POINTERDOWN || eventType === MC.S_MOUSEDOWN;\n    const isHandleClick =\n      isClick && useHandle && hasClass(target, PREFIX_HANDLE);\n    const startsDrag = isClick && dragScroll && (isHandleClick || !useHandle);\n\n    if (startsDrag) {\n      isDragging = true;\n      setOrReleasePointerCapture(event, scrollbar, S_SET_POINTER_CAPTURE);\n    }\n\n    logger?.debug10(\"Click or drag\", {\n      eventType,\n      isClick,\n      isHandleClick,\n      isDragging,\n      startsDrag,\n    });\n\n    if ((!isClick && !isDragging) || (isClick && !startsDrag && !clickScroll)) {\n      // - Either moving pointer when no drag scroll has been started OR\n      // - Clicking when no drag is allowed in the context of the click and no\n      //   click scroll is allowed either\n      return;\n    }\n\n    await waitForMeasureTime();\n    const barIsHorizontal = isHorizontal(scrollbar);\n\n    const barLength = barIsHorizontal\n      ? scrollbar[MC.S_CLIENT_WIDTH]\n      : scrollbar[MC.S_CLIENT_HEIGHT];\n\n    const currScrollOffset = tracksH\n      ? scrollable[MC.S_SCROLL_LEFT]\n      : scrollable[MC.S_SCROLL_TOP];\n\n    const maxScrollOffset = tracksH\n      ? scrollable[MC.S_SCROLL_WIDTH] - getClientWidthNow(scrollable)\n      : scrollable[MC.S_SCROLL_HEIGHT] - getClientHeightNow(scrollable);\n\n    // Get click offset relative to the scrollbar regardless of what the\n    // event target is and what transforms is has applied.\n    const rect = MH.getBoundingClientRect(scrollbar);\n    const offset = barIsHorizontal\n      ? event.clientX - rect.left\n      : event.clientY - rect.top;\n\n    logger?.debug10(\"Pointer offset\", offset);\n\n    if (offset === lastOffset) {\n      return;\n    }\n\n    const deltaOffset = isClick ? offset : offset - lastOffset;\n    lastOffset = offset;\n\n    if (!isClick && useHandle) {\n      // Dragging the handle\n      const handleLength = handle\n        ? MH.parseFloat(\n            getComputedStylePropNow(\n              handle,\n              barIsHorizontal ? MC.S_WIDTH : MC.S_HEIGHT,\n            ),\n          )\n        : 0;\n\n      lastTargetFraction =\n        lastTargetFraction + deltaOffset / (barLength - (handleLength || 0));\n    } else if (isHandleClick) {\n      // Starting a handle drag\n      lastTargetFraction = currScrollOffset / maxScrollOffset;\n    } else {\n      // Clicking or dragging on the bar -> scroll to the offset under the pointer\n      lastTargetFraction = offset / barLength;\n    }\n\n    if (isHandleClick || (isClick && !clickScroll)) {\n      return;\n    }\n\n    const targetScrollOffset = lastTargetFraction * maxScrollOffset;\n    const targetCoordinates = tracksH\n      ? { left: targetScrollOffset }\n      : { top: targetScrollOffset };\n\n    logger?.debug10(\"Scroll target offset\", {\n      lastTargetFraction,\n      targetCoordinates,\n    });\n\n    if (isClick) {\n      // smooth scroll\n      scrollAction = await scrollWatcher.scrollTo(targetCoordinates, {\n        scrollable,\n        weCanInterrupt: true,\n      });\n    } else {\n      scrollAction?.cancel();\n      scrollAction = null;\n      MH.elScrollTo(scrollable, targetCoordinates);\n    }\n  };\n\n  // ----------\n\n  const onRelease = (event: Event, tracksH: boolean) => {\n    const scrollbar = tracksH ? scrollbarH : scrollbarV;\n    setOrReleasePointerCapture(event, scrollbar, S_RELEASE_POINTER_CAPTURE);\n\n    isDragging = false;\n    scrollAction = null;\n  };\n\n  const onClickOrDragH = (event: Event) => onClickOrDrag(event, true);\n  const onClickOrDragV = (event: Event) => onClickOrDrag(event, false);\n  const onReleaseH = (event: Event) => onRelease(event, true);\n  const onReleaseV = (event: Event) => onRelease(event, false);\n\n  // ----------\n\n  const maybeSetNativeHidden = () => {\n    if (hideNative) {\n      addClasses(scrollable, PREFIX_HIDE_SCROLL);\n      if (isBodyInQuirks) {\n        addClasses(MH.getDocElement(), PREFIX_HIDE_SCROLL);\n      }\n    }\n  };\n\n  const setNativeShown = () => {\n    removeClasses(scrollable, PREFIX_HIDE_SCROLL);\n    if (isBodyInQuirks) {\n      removeClasses(MH.getDocElement(), PREFIX_HIDE_SCROLL);\n    }\n  };\n\n  // ----------\n\n  const addWatchers = () => {\n    // Track scroll in any direction as well as changes in border or content size\n    // of the element and its contents.\n    scrollWatcher.trackScroll(updateProgress, {\n      threshold: 0,\n      scrollable,\n    });\n\n    // Track changes in content or border size of the container element which\n    // would also detect changes in its padding.\n    sizeWatcher.onResize(updatePropsOnResize, {\n      target: containerElement,\n      threshold: 0,\n    });\n  };\n\n  const removeWatchers = () => {\n    scrollWatcher.noTrackScroll(updateProgress, scrollable);\n    sizeWatcher.offResize(updatePropsOnResize, containerElement);\n  };\n\n  // SETUP ------------------------------\n\n  if (!isMainScrollable && !isBody) {\n    addClasses(containerElement, PREFIX_CONTAINER);\n  }\n\n  setBoolData(containerElement, PREFIX_ALLOW_COLLAPSE, !MC.IS_MOBILE);\n\n  // Wrap children if needed\n  if (contentWrapper) {\n    addClasses(contentWrapper, PREFIX_CONTENT);\n    wrapChildren(containerElement, {\n      wrapper: contentWrapper,\n      ignoreMove: true,\n    }); // no need to await here\n\n    setBoolData(containerElement, PREFIX_HAS_WRAPPER);\n    if (hasFixedHeight) {\n      setBoolData(containerElement, PREFIX_HAS_FIXED_HEIGHT);\n    }\n  }\n\n  maybeSetNativeHidden();\n\n  if (config?.id) {\n    scrollable.id = config.id;\n  }\n\n  if (config?.className) {\n    addClasses(scrollable, ...toArrayIfSingle(config.className));\n  }\n\n  const scrollDomID = // for ARIA\n    clickScroll || dragScroll ? getOrAssignID(scrollable, S_SCROLLBAR) : \"\";\n  const scrollWatcher = ScrollWatcher.reuse({ [MC.S_DEBOUNCE_WINDOW]: 0 });\n  const sizeWatcher = SizeWatcher.reuse({ [MC.S_DEBOUNCE_WINDOW]: 0 });\n\n  addClasses(barParent, PREFIX_ROOT);\n\n  const wrapper = MH.createElement(\"div\");\n  preventSelect(wrapper);\n  addClasses(wrapper, MC.PREFIX_NO_TOUCH_ACTION);\n  addClasses(wrapper, PREFIX_WRAPPER);\n\n  if (isBody || isMainScrollable) {\n    setData(wrapper, MC.PREFIX_POSITION, MC.S_FIXED);\n  } else if (needsSticky) {\n    setData(wrapper, MC.PREFIX_POSITION, MC.S_STICKY);\n  }\n\n  const { _bar: scrollbarH, _handle: handleH } = newScrollbar(\n    wrapper,\n    positionH,\n  );\n  const { _bar: scrollbarV, _handle: handleV } = newScrollbar(\n    wrapper,\n    positionV,\n  );\n\n  moveElement(wrapper, {\n    to: barParent,\n    position: \"prepend\",\n  });\n\n  addWatchers();\n\n  // Track clicking and dragging on the two scrollbars\n  if (dragScroll) {\n    addEventListenerTo(scrollbarH, MC.S_POINTERMOVE, onClickOrDragH);\n    addEventListenerTo(scrollbarV, MC.S_POINTERMOVE, onClickOrDragV);\n\n    addEventListenerTo(scrollbarH, MC.S_POINTERUP, onReleaseH);\n    addEventListenerTo(scrollbarV, MC.S_POINTERUP, onReleaseV);\n  }\n\n  if (dragScroll || clickScroll) {\n    addEventListenerTo(scrollbarH, MC.S_POINTERDOWN, onClickOrDragH);\n    addEventListenerTo(scrollbarV, MC.S_POINTERDOWN, onClickOrDragV);\n  }\n\n  widget.onDisable(() => {\n    removeWatchers();\n    undisplayElement(scrollbarH);\n    undisplayElement(scrollbarV);\n    setNativeShown();\n  });\n\n  widget.onEnable(() => {\n    addWatchers();\n    displayElement(scrollbarH);\n    displayElement(scrollbarV);\n    maybeSetNativeHidden();\n  });\n\n  widget.onDestroy(async () => {\n    unmapScrollable(root);\n\n    await waitForMutateTime();\n    if (contentWrapper) {\n      moveChildrenNow(contentWrapper, containerElement, { ignoreMove: true });\n      moveElementNow(contentWrapper); // remove\n    }\n\n    moveElementNow(wrapper); // remove\n\n    if (dragScroll) {\n      removeEventListenerFrom(scrollbarH, MC.S_POINTERMOVE, onClickOrDragH);\n      removeEventListenerFrom(scrollbarV, MC.S_POINTERMOVE, onClickOrDragV);\n\n      removeEventListenerFrom(scrollbarH, MC.S_POINTERUP, onReleaseH);\n      removeEventListenerFrom(scrollbarV, MC.S_POINTERUP, onReleaseV);\n    }\n\n    if (dragScroll || clickScroll) {\n      removeEventListenerFrom(scrollbarH, MC.S_POINTERDOWN, onClickOrDragH);\n      removeEventListenerFrom(scrollbarV, MC.S_POINTERDOWN, onClickOrDragV);\n    }\n\n    removeClassesNow(barParent, PREFIX_ROOT);\n    removeClassesNow(containerElement, PREFIX_CONTAINER);\n\n    for (const position of [MC.S_TOP, MC.S_BOTTOM, MC.S_LEFT, MC.S_RIGHT]) {\n      delDataNow(containerElement, `${PREFIX_HAS_SCROLLBAR}-${position}`);\n    }\n\n    delDataNow(containerElement, PREFIX_HAS_WRAPPER);\n    if (hasFixedHeight) {\n      delDataNow(containerElement, PREFIX_HAS_FIXED_HEIGHT);\n    }\n  });\n};\n\nconst isHorizontal = (scrollbar: Element) =>\n  getData(scrollbar, MC.PREFIX_ORIENTATION) === MC.S_HORIZONTAL;\n\nconst setBoxMeasureProps = async (element: HTMLElement) => {\n  for (const side of [MC.S_TOP, MC.S_RIGHT, MC.S_BOTTOM, MC.S_LEFT]) {\n    for (const key of [`padding-${side}`, `border-${side}-width`]) {\n      const padding = await getComputedStyleProp(element, key);\n      setStyleProp(element, MH.prefixCssJsVar(key), padding);\n    }\n  }\n};\n\nconst setOrReleasePointerCapture = (\n  event: Event,\n  scrollbar: Element,\n  method: \"setPointerCapture\" | \"releasePointerCapture\",\n) => {\n  if (MH.isPointerEvent(event) && method in scrollbar) {\n    scrollbar[method](event.pointerId);\n  }\n};\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { ScrollOffset } from \"@lisn/globals/types\";\n\nimport {\n  showElement,\n  hideElement,\n  displayElement,\n  undisplayElement,\n  disableInitialTransition,\n  addClasses,\n  removeClasses,\n  setData,\n  delData,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, insertArrow } from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { validateString } from \"@lisn/utils/validation\";\nimport { isValidScrollOffset } from \"@lisn/utils/views\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as a {@link ScrollToTop} widget.\n *\n * The ScrollToTop widget adds a scroll-to-top button in the lower right corder\n * of the screen (can be changed to bottom left) which scrolls smoothly (and\n * more slowly than the native scroll) back to the top.\n *\n * The button is only shown when the scroll offset from the top is more than a\n * given configurable amount.\n *\n * **NOTE:** Currently the widget only supports fixed positioned button that\n * scrolls the main scrolling element (see\n * {@link Settings.settings.mainScrollableElementSelector | settings.mainScrollableElementSelector}).\n *\n * **IMPORTANT:** You should not instantiate more than one {@link ScrollToTop}\n * widget on a given element. Use {@link ScrollToTop.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the element:\n * - `data-lisn-place`: `\"left\"` or `\"right\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-scroll-to-top` class or `data-lisn-scroll-to-top` attribute set on\n *   the element that constitutes the widget. The element should be empty.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This will create a scroll-to-top button using the JavaScript API.\n *\n * This will work even if\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}) is false.\n *\n * ```html\n * <!-- LISN should be loaded beforehand -->\n * <script>\n *   LISN.widgets.ScrollToTop.enableMain({\n *     position: \"left\",\n *     offset: \"top: 300vh\"\n *   });\n * </script>\n * ```\n *\n * You can customise the offset show/hide trigger via CSS as well as long as\n * {@link ScrollToTopConfig.offset} is left at its default value which uses\n * this CSS property:\n *\n * ```html\n * <style type=\"text/css\" media=\"screen\">\n *   :root {\n *     --lisn-scroll-to-top--offset: 300vh;\n *   }\n * </style>\n * ```\n *\n * @example\n * This will create a scroll-to-top button for the main scrolling element\n * using an existing element for the button with default\n * {@link ScrollToTopConfig}.\n *\n * ```html\n * <div class=\"lisn-scroll-to-top\"></div>\n * ```\n *\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <div data-lisn-scroll-to-top=\"position=left | offset=top:300vh\"></div>\n * ```\n */\nexport class ScrollToTop extends Widget {\n  /**\n   * If element is omitted, returns the instance created by {@link enableMain}\n   * if any.\n   */\n  static get(element?: Element): ScrollToTop | null {\n    if (!element) {\n      return mainWidget;\n    }\n\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, ScrollToTop)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!ScrollToTop.get(element)) {\n          return new ScrollToTop(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * Creates a new button element, inserts it into the document body and\n   * configures it as a {@link ScrollToTop}.\n   */\n  static enableMain(config?: ScrollToTopConfig) {\n    const button = MH.createButton(\"Back to top\");\n    const widget = new ScrollToTop(button, config);\n    widget.onDestroy(() => {\n      if (mainWidget === widget) {\n        mainWidget = null;\n      }\n      return moveElement(button);\n    });\n\n    waitForElement(MH.getBody).then((body) => {\n      if (!widget.isDestroyed()) {\n        moveElement(button, { to: body });\n      }\n    });\n\n    mainWidget = widget;\n    return widget;\n  }\n\n  constructor(element: Element, config?: ScrollToTopConfig) {\n    const destroyPromise = ScrollToTop.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const scrollWatcher = ScrollWatcher.reuse();\n    const viewWatcher = ViewWatcher.reuse();\n\n    const offset: ScrollOffset =\n      config?.offset ||\n      `${MC.S_TOP}: var(${MH.prefixCssVar(\"scroll-to-top--offset\")}, 200vh)`;\n    const position: \"left\" | \"right\" = config?.position || MC.S_RIGHT;\n\n    const clickListener = () => scrollWatcher.scrollTo({ top: 0 });\n\n    const arrow = insertArrow(element, MC.S_UP);\n\n    const showIt = () => {\n      showElement(element);\n    };\n\n    const hideIt = () => {\n      hideElement(element);\n    };\n\n    // SETUP ------------------------------\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      disableInitialTransition(element);\n      addClasses(element, PREFIX_ROOT);\n      setData(element, MC.PREFIX_PLACE, position);\n\n      hideIt(); // initial\n\n      addEventListenerTo(element, MC.S_CLICK, clickListener);\n\n      viewWatcher.onView(offset, showIt, {\n        views: [MC.S_AT, MC.S_BELOW],\n      });\n\n      viewWatcher.onView(offset, hideIt, {\n        views: [MC.S_ABOVE],\n      });\n\n      this.onDisable(() => {\n        undisplayElement(element);\n      });\n\n      this.onEnable(() => {\n        displayElement(element);\n      });\n\n      this.onDestroy(async () => {\n        removeEventListenerFrom(element, MC.S_CLICK, clickListener);\n\n        await delData(element, MC.PREFIX_PLACE);\n        await moveElement(arrow); // remove\n        await removeClasses(element, PREFIX_ROOT);\n\n        await displayElement(element); // revert undisplay by onDisable\n        viewWatcher.offView(offset, showIt);\n        viewWatcher.offView(offset, hideIt);\n      });\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type ScrollToTopConfig = {\n  /**\n   * The button will be shown when the scroll top offset of the page is below\n   * the given value, and hidden otherwise. Accepts a colon-separated key:value\n   * string where the key is \"top\" or \"bottom\" (or if your page scrolls\n   * horizontally, then use \"left\" or \"right\"), and the value can be any valid\n   * CSS length specification, e.g. \"top: 200vh\" or \"top: var(--offset, 50%)\".\n   *\n   * Alternatively, you set the `--lisn-scroll-to-top--offset` CSS variable on\n   * the document root, which is used by the default value.\n   *\n   * @defaultValue \"top: var(--lisn-scroll-to-top--offset, 200vh)\"\n   */\n  offset?: ScrollOffset;\n\n  /**\n   * The horizontal position of the scroll-to-top button.\n   *\n   * @defaultValue \"right\"\n   */\n  position?: \"left\" | \"right\";\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"scroll-to-top\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\n// Only one ScrollToTop widget per element is allowed, but Widget requires a\n// non-blank ID.\n// In fact, it doesn't make much sense to have more than 1 scroll-to-top button\n// on the whole page, but we support it, hence use a class rather than a DOM ID.\nconst DUMMY_ID = PREFIXED_NAME;\nlet mainWidget: ScrollToTop | null = null;\n\nconst configValidator: WidgetConfigValidatorObject<ScrollToTopConfig> = {\n  offset: (key, value) => validateString(key, value, isValidScrollOffset),\n  position: (key, value) =>\n    validateString(key, value, (v) => v === MC.S_LEFT || v === MC.S_RIGHT),\n};\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  addClasses,\n  removeClasses,\n  getBoolData,\n  setBoolData,\n  unsetBoolData,\n  delData,\n  copyStyle,\n  setNumericStyleProps,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, swapElements, cloneElement } from \"@lisn/utils/dom-alter\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { toInt } from \"@lisn/utils/math\";\nimport { validateString } from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  WidgetCallback,\n  WidgetHandler,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/**\n * Configures the given element as a {@link Sortable} widget.\n *\n * The Sortable widget allows the user to reorder elements by dragging and\n * dropping. It works on touch devices as well. However, it does not yet\n * support automatic scrolling when dragging beyond edge of screen on mobile\n * devices. For this, you may want to use\n * {@link https://github.com/SortableJS/Sortable | SortableJS} instead.\n *\n * The widget should have more than one draggable item.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Sortable}\n * widget on a given element. Use {@link Sortable.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on each item element:\n * - `data-lisn-is-draggable`: `\"true\"` or `\"false\"` (false if the item is disabled)\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-sortable` class or `data-lisn-sortable` attribute set on the\n *   container element that constitutes the sortable container\n * - `lisn-sortable-item` class or `data-lisn-sortable-item` attribute set on\n *   elements that should act as the items.\n *\n * When using auto-widgets, the elements that will be used as items are\n * discovered in the following way:\n * 1. The top-level element that constitutes the widget is searched for any\n *    elements that contain the `lisn-sortable-item` class or\n *    `data-lisn-sortable-item` attribute. They do not have to be immediate\n *    children of the root element.\n * 2. If there are no such elements, all of the immediate children of the\n *    widget element (other than `script` and `style` elements) are taken as\n *    the items.\n *\n * @example\n * ```html\n * <div class=\"lisn-sortable\">\n *   <div class=\"box\">Item 1</div>\n *   <div class=\"box\">Item 2</div>\n *   <div class=\"box\">Item 3</div>\n *   <div class=\"box\">Item 4</div>\n * </div>\n * ```\n */\nexport class Sortable extends Widget {\n  /**\n   * Disables the given item number. Note that item numbers start at 1.\n   *\n   * @param {} currentOrder If false (default), the item numbers refer to the\n   *                        original order. If true, they refer to the current\n   *                        document order.\n   */\n  readonly disableItem: (\n    itemNum: number,\n    currentOrder?: boolean,\n  ) => Promise<void>;\n\n  /**\n   * Re-enables the given item number. Note that item numbers start at 1.\n   *\n   * @param {} currentOrder If false (default), the item numbers refer to the\n   *                        original order. If true, they refer to the current\n   *                        document order.\n   */\n  readonly enableItem: (\n    itemNum: number,\n    currentOrder?: boolean,\n  ) => Promise<void>;\n\n  /**\n   * Re-enables the given item number if it is disabled, otherwise disables it.\n   * Note that item numbers start at 1.\n   *\n   * @param {} currentOrder If false (default), the item numbers refer to the\n   *                        original order. If true, they refer to the current\n   *                        document order.\n   */\n  readonly toggleItem: (\n    itemNum: number,\n    currentOrder?: boolean,\n  ) => Promise<void>;\n\n  /**\n   * Returns true if the given item number is disabled. Note that item numbers\n   * start at 1.\n   *\n   * @param {} currentOrder If false (default), the item numbers refer to the\n   *                        original order. If true, they refer to the current\n   *                        document order.\n   */\n  readonly isItemDisabled: (itemNum: number, currentOrder?: boolean) => boolean;\n\n  /**\n   * The given handler will be called whenever the user moves an item to\n   * another position. It will be called after the item is moved so\n   * {@link getItems} called with `currentOrder = true` will return the updated\n   * order.\n   *\n   * If the handler returns a promise, it will be awaited upon.\n   */\n  readonly onMove: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns the item elements.\n   *\n   * @param {} currentOrder If false (default), returns the items in the\n   *                        original order. If true, they are returned in the\n   *                        current document order.\n   */\n  readonly getItems: (currentOrder?: boolean) => Element[];\n\n  static get(element: Element): Sortable | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Sortable)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!Sortable.get(element)) {\n          return new Sortable(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If there are less than 2 items given or found.\n   */\n  constructor(element: Element, config?: SortableConfig) {\n    const destroyPromise = Sortable.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const items = config?.items || [];\n    if (!MH.lengthOf(items)) {\n      items.push(\n        ...MH.querySelectorAll(\n          element,\n          getDefaultWidgetSelector(PREFIX_ITEM__FOR_SELECT),\n        ),\n      );\n\n      if (!MH.lengthOf(items)) {\n        items.push(...MH.querySelectorAll(element, `[${MC.S_DRAGGABLE}]`));\n\n        if (!MH.lengthOf(items)) {\n          items.push(...getVisibleContentChildren(element));\n        }\n      }\n    }\n\n    if (MH.lengthOf(items) < 2) {\n      throw MH.usageError(\"Sortable must have more than 1 item\");\n    }\n\n    const methods = getMethods(this, items, config);\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, element, items, methods);\n    });\n\n    this.disableItem = methods._disableItem;\n    this.enableItem = methods._enableItem;\n    this.toggleItem = methods._toggleItem;\n    this.isItemDisabled = methods._isItemDisabled;\n    this.onMove = methods._onMove;\n\n    this.getItems = (currentOrder = false) =>\n      currentOrder ? methods._getSortedItems() : [...items];\n  }\n}\n\n/**\n * @interface\n */\nexport type SortableConfig = {\n  /**\n   * The elements that will be used as the draggable items.\n   *\n   * The widget should have more than one draggable item.\n   *\n   * If this is not specified, then\n   * 1. The top-level element that constitutes the widget is searched for any\n   *    elements that contain the class `lisn-sortable-item`. They do not\n   *    have to be immediate children of the root element.\n   * 2. If there are no such elements, all of the immediate children of the\n   *    widget element (other than `script` and `style` elements) are taken as\n   *    the items.\n   */\n  items?: Element[];\n\n  /**\n   * Whether to move the dragged item to before/after the drop target, or swap\n   * it with the drop target.\n   *\n   * Note that the moving/swapping action is being done as the user is dragging\n   * as soon as they drag over another item, so in order to achieve a swap\n   * effect, the user needs to be able to drag an item from one location to\n   * another without the path of the mouse crossing over all in-between items.\n   *\n   * @defaultValue \"move\";\n   */\n  mode?: \"move\" | \"swap\";\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"sortable\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_IS_DRAGGABLE = MH.prefixName(\"is-draggable\");\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_ITEM = `${PREFIXED_NAME}__item`;\nconst PREFIX_ITEM__FOR_SELECT = `${PREFIXED_NAME}-item`;\n\nconst PREFIX_FLOATING_CLONE = `${PREFIXED_NAME}__ghost`;\n\n// Only one Sortable widget per element is allowed, but Widget requires a\n// non-blank ID.\n// In fact, it doesn't make much sense to have more than 1 scroll-to-top button\n// on the whole page, but we support it, hence use a class rather than a DOM ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<SortableConfig> = {\n  mode: (key, value) =>\n    validateString(key, value, (v) => v === \"swap\" || v === \"move\"),\n};\n\nconst touchMoveOptions = { passive: false, capture: true };\n\nconst isItemDraggable = (item: Element) =>\n  getBoolData(item, PREFIX_IS_DRAGGABLE);\n\nconst init = (\n  widget: Sortable,\n  element: Element,\n  items: Element[],\n  methods: ReturnType<typeof getMethods>,\n) => {\n  let currentDraggedItem: Element | null = null;\n  let floatingClone: Element | null = null;\n  let ignoreCancel = false;\n  let grabOffset = [0, 0];\n\n  const setIgnoreCancel = () => (ignoreCancel = true);\n\n  const onDragStart = (event: Event) => {\n    const currTarget = MH.currentTargetOf(event);\n\n    if (\n      MH.isElement(currTarget) &&\n      isItemDraggable(currTarget) &&\n      MH.isMouseEvent(event)\n    ) {\n      currentDraggedItem = currTarget;\n      MH.setAttr(currTarget, MC.S_DRAGGABLE);\n\n      if (MH.isTouchPointerEvent(event)) {\n        const target = MH.targetOf(event);\n        if (MH.isElement(target)) {\n          target.releasePointerCapture(event.pointerId);\n        }\n      }\n\n      addEventListenerTo(\n        MH.getDoc(),\n        MC.S_TOUCHMOVE,\n        onTouchMove,\n        touchMoveOptions,\n      );\n\n      waitForMeasureTime().then(() => {\n        // Get pointer offset relative to the current item being dragged\n        // regardless of what the event target is and what transforms is has\n        // applied.\n        const rect = MH.getBoundingClientRect(currTarget);\n        grabOffset = [event.clientX - rect.left, event.clientY - rect.top];\n      });\n    }\n  };\n\n  const onDragEnd = (event: Event) => {\n    if (ignoreCancel && event.type === MC.S_POINTERCANCEL) {\n      ignoreCancel = false;\n      return;\n    }\n\n    if (currentDraggedItem) {\n      MH.unsetAttr(currentDraggedItem, MC.S_DRAGGABLE);\n      currentDraggedItem = null;\n\n      removeEventListenerFrom(\n        MH.getDoc(),\n        MC.S_TOUCHMOVE,\n        onTouchMove,\n        touchMoveOptions,\n      );\n\n      if (floatingClone) {\n        moveElement(floatingClone);\n        floatingClone = null;\n      }\n    }\n  };\n\n  const onTouchMove = (event: Event) => {\n    if (MH.isTouchEvent(event) && MH.lengthOf(event.touches) === 1) {\n      const parentEl = MH.parentOf(currentDraggedItem);\n      if (parentEl && currentDraggedItem) {\n        MH.preventDefault(event);\n\n        const touch = event.touches[0];\n        const clientX = touch.clientX;\n        const clientY = touch.clientY;\n\n        if (!floatingClone) {\n          floatingClone = cloneElement(currentDraggedItem);\n          addClasses(floatingClone, PREFIX_FLOATING_CLONE);\n          copyStyle(currentDraggedItem, floatingClone, [\n            \"width\",\n            \"height\",\n          ]).then(() => {\n            if (floatingClone) {\n              moveElement(floatingClone, { to: parentEl });\n            }\n          });\n        }\n\n        if (floatingClone) {\n          setNumericStyleProps(\n            floatingClone,\n            {\n              clientX: clientX - grabOffset[0],\n              clientY: clientY - grabOffset[1],\n            },\n            { _units: \"px\" },\n          );\n        }\n      }\n    }\n  };\n\n  const onDragEnter = (event: Event) => {\n    const currTarget = MH.currentTargetOf(event);\n    const dragged = currentDraggedItem;\n\n    if (\n      (MH.isTouchPointerEvent(event) || event.type === MC.S_DRAGENTER) &&\n      dragged &&\n      MH.isElement(currTarget) &&\n      currTarget !== dragged\n    ) {\n      methods._dragItemOnto(dragged, currTarget); // no need to await\n    }\n  };\n\n  const setupEvents = () => {\n    for (const item of items) {\n      preventSelect(item);\n\n      addEventListenerTo(item, MC.S_POINTERDOWN, onDragStart);\n\n      addEventListenerTo(item, MC.S_DRAGSTART, setIgnoreCancel); // non-touch\n\n      addEventListenerTo(item, MC.S_POINTERENTER, onDragEnter); // touch\n      addEventListenerTo(item, MC.S_DRAGENTER, onDragEnter); // non-touch\n\n      addEventListenerTo(item, MC.S_DRAGOVER, MH.preventDefault); // non-touch\n\n      addEventListenerTo(item, MC.S_DRAGEND, onDragEnd); // non-touch\n      addEventListenerTo(item, MC.S_DROP, onDragEnd); // non-touch\n\n      addEventListenerTo(MH.getDoc(), MC.S_POINTERUP, onDragEnd);\n      addEventListenerTo(MH.getDoc(), MC.S_POINTERCANCEL, onDragEnd);\n    }\n  };\n\n  // SETUP ------------------------------\n\n  for (const item of items) {\n    addClasses(item, PREFIX_ITEM);\n    setBoolData(item, PREFIX_IS_DRAGGABLE);\n  }\n\n  widget.onEnable(setupEvents);\n\n  widget.onDisable(() => {\n    for (const item of items) {\n      undoPreventSelect(item);\n\n      removeEventListenerFrom(item, MC.S_POINTERDOWN, onDragStart);\n\n      removeEventListenerFrom(item, MC.S_DRAGSTART, setIgnoreCancel);\n\n      removeEventListenerFrom(item, MC.S_POINTERENTER, onDragEnter);\n      removeEventListenerFrom(item, MC.S_DRAGENTER, onDragEnter);\n\n      removeEventListenerFrom(item, MC.S_DRAGOVER, MH.preventDefault);\n\n      removeEventListenerFrom(item, MC.S_POINTERUP, onDragEnd);\n      removeEventListenerFrom(item, MC.S_POINTERCANCEL, onDragEnd);\n      removeEventListenerFrom(item, MC.S_DRAGEND, onDragEnd);\n      removeEventListenerFrom(item, MC.S_DROP, onDragEnd);\n    }\n  });\n\n  widget.onDestroy(async () => {\n    for (const item of items) {\n      await removeClasses(item, PREFIX_ITEM);\n      await delData(item, PREFIX_IS_DRAGGABLE);\n    }\n  });\n\n  setupEvents();\n};\n\nconst getMethods = (\n  widget: Sortable,\n  items: Element[],\n  config: SortableConfig | undefined,\n) => {\n  const doSwap = config?.mode === \"swap\";\n\n  const disabledItems: Record<number, boolean> = {};\n  const callbacks = MH.newSet<WidgetCallback>();\n\n  const getSortedItems = () =>\n    [...items].sort((a, b) => (MH.isNodeBAfterA(a, b) ? -1 : 1));\n\n  const getOrigItemNumber = (itemNum: number, currentOrder = false) =>\n    currentOrder ? items.indexOf(getSortedItems()[itemNum - 1]) + 1 : itemNum;\n\n  const isItemDisabled = (itemNum: number, currentOrder = false) =>\n    disabledItems[getOrigItemNumber(itemNum, currentOrder)] === true;\n\n  const disableItem = async (itemNum: number, currentOrder = false) => {\n    itemNum = getOrigItemNumber(toInt(itemNum), currentOrder);\n    if (widget.isDisabled() || itemNum < 1 || itemNum > MH.lengthOf(items)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledItems[itemNum] = true;\n    await unsetBoolData(items[itemNum - 1], PREFIX_IS_DRAGGABLE);\n  };\n\n  const enableItem = async (itemNum: number, currentOrder = false) => {\n    itemNum = getOrigItemNumber(toInt(itemNum), currentOrder);\n    if (widget.isDisabled() || !isItemDisabled(itemNum)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledItems[itemNum] = false;\n    await setBoolData(items[itemNum - 1], PREFIX_IS_DRAGGABLE);\n  };\n\n  const toggleItem = (itemNum: number, currentOrder = false) =>\n    isItemDisabled(itemNum, currentOrder)\n      ? enableItem(itemNum, currentOrder)\n      : disableItem(itemNum, currentOrder);\n\n  const onMove = (handler: WidgetHandler) =>\n    callbacks.add(wrapCallback(handler));\n\n  // This is internal only for now...\n  const dragItemOnto = async (dragged: Element, draggedOver: Element) => {\n    if (doSwap) {\n      await swapElements(dragged, draggedOver, { ignoreMove: true });\n    } else {\n      await moveElement(dragged, {\n        to: draggedOver,\n        position: MH.isNodeBAfterA(dragged, draggedOver) ? \"after\" : \"before\",\n        ignoreMove: true,\n      });\n    }\n\n    for (const callback of callbacks) {\n      await callback.invoke(widget);\n    }\n  };\n\n  return {\n    _getSortedItems: getSortedItems,\n    _disableItem: disableItem,\n    _enableItem: enableItem,\n    _toggleItem: toggleItem,\n    _isItemDisabled: isItemDisabled,\n    _onMove: onMove,\n    _dragItemOnto: dragItemOnto,\n  };\n};\n","/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { validateBoolean, validateNumber } from \"@lisn/utils/validation\";\n\nimport { GestureWatcher } from \"@lisn/watchers/gesture-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * This is a simple wrapper around the {@link GestureWatcher}. If you are using\n * the JavaScript API, you should use the {@link GestureWatcher} directly. The\n * purpose of this widget is to expose the watcher's ability to track gestures\n * and set relevant CSS properties via the HTML API. See\n * {@link GestureWatcher.trackGesture}.\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-track-gesture` class or `data-lisn-track-gesture` attribute set on\n *   the element that constitutes the widget.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This will track user gestures over this element and set the relevant CSS\n * properties. It will use the default {@link GestureWatcher} options.\n *\n * ```html\n * <div class=\"lisn-track-gesture\"></div>\n * ```\n *\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <div data-lisn-track-gesture=\"prevent-default=false\n *                               | min-delta-x=-100\n *                               | max-delta-x=100\n *                               | min-delta-y=-100\n *                               | max-delta-y=100\n *                               | min-delta-z=0.5\n *                               | max-delta-z=2\"\n * ></div>\n * ```\n */\nexport class TrackGesture extends Widget {\n  static get(element: Element): TrackGesture | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, TrackGesture)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!TrackGesture.get(element)) {\n          return new TrackGesture(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  constructor(element: Element, config?: TrackGestureConfig) {\n    super(element, { id: DUMMY_ID });\n\n    GestureWatcher.reuse().trackGesture(element, null, {\n      preventDefault: config?.preventDefault,\n      minTotalDeltaX: config?.minDeltaX,\n      maxTotalDeltaX: config?.maxDeltaX,\n      minTotalDeltaY: config?.minDeltaY,\n      maxTotalDeltaY: config?.maxDeltaY,\n      minTotalDeltaZ: config?.minDeltaZ,\n      maxTotalDeltaZ: config?.maxDeltaZ,\n    });\n\n    this.onDestroy(() => GestureWatcher.reuse().noTrackGesture(element));\n  }\n}\n\n/**\n * @interface\n */\nexport type TrackGestureConfig = {\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.preventDefault | OnGestureOptions.preventDefault}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  preventDefault?: boolean;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.minTotalDeltaX | OnGestureOptions.minTotalDeltaX}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  minDeltaX?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.maxTotalDeltaX | OnGestureOptions.maxTotalDeltaX}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  maxDeltaX?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.minTotalDeltaY | OnGestureOptions.minTotalDeltaY}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  minDeltaY?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.maxTotalDeltaY | OnGestureOptions.maxTotalDeltaY}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  maxDeltaY?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.minTotalDeltaZ | OnGestureOptions.minTotalDeltaZ}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  minDeltaZ?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/GestureWatcher.OnGestureOptions.maxTotalDeltaZ | OnGestureOptions.maxTotalDeltaZ}.\n   *\n   * @defaultValue undefined // GestureWatcher default\n   */\n  maxDeltaZ?: number;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"track-gesture\";\n// Only one TrackGesture widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = WIDGET_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<TrackGestureConfig> = {\n  preventDefault: validateBoolean,\n  minDeltaX: validateNumber,\n  maxDeltaX: validateNumber,\n  minDeltaY: validateNumber,\n  maxDeltaY: validateNumber,\n  minDeltaZ: validateNumber,\n  maxDeltaZ: validateNumber,\n};\n","/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { validateNumber } from \"@lisn/utils/validation\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * This is a simple wrapper around the {@link ScrollWatcher}. If you are using\n * the JavaScript API, you should use the {@link ScrollWatcher} directly. The\n * purpose of this widget is to expose the watcher's ability to track scroll\n * and set relevant CSS properties via the HTML API. See\n * {@link ScrollWatcher.trackScroll}.\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-track-scroll` class or `data-lisn-track-scroll` attribute set on\n *   the element that constitutes the widget.\n *\n * @example\n * This will track scroll on this element and set the relevant CSS properties.\n *\n * ```html\n * <div class=\"lisn-track-scroll\"></div>\n * ```\n */\nexport class TrackScroll extends Widget {\n  static get(element: Element): TrackScroll | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, TrackScroll)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!TrackScroll.get(element)) {\n          return new TrackScroll(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  constructor(element: Element, config?: TrackScrollConfig) {\n    super(element, { id: DUMMY_ID });\n\n    ScrollWatcher.reuse().trackScroll(\n      null,\n      MH.assign(\n        {\n          scrollable: element,\n        },\n        config,\n      ),\n    );\n\n    this.onDestroy(() => ScrollWatcher.reuse().noTrackScroll(null, element));\n  }\n}\n\n/**\n * @interface\n */\nexport type TrackScrollConfig = {\n  /**\n   * Corresponds to\n   * {@link Watchers/ScrollWatcher.OnScrollOptions.threshold | OnScrollOptions.threshold}.\n   *\n   * @defaultValue undefined // ScrollWatcher default\n   */\n  threshold?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ScrollWatcher.OnScrollOptions.debounceWindow | OnScrollOptions.debounceWindow}.\n   *\n   * @defaultValue undefined // ScrollWatcher default\n   */\n  debounceWindow?: number;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"track-scroll\";\n// Only one TrackScroll widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = WIDGET_NAME;\n\nconst configValidator: WidgetConfigValidatorObject<TrackScrollConfig> = {\n  threshold: validateNumber,\n  debounceWindow: validateNumber,\n};\n","/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport { Widget, registerWidget } from \"@lisn/widgets/widget\";\n\n/**\n * This is a simple wrapper around the {@link SizeWatcher}. If you are using\n * the JavaScript API, you should use the {@link SizeWatcher} directly. The\n * purpose of this widget is to expose the watcher's ability to track size\n * and set relevant CSS properties via the HTML API. See\n * {@link SizeWatcher.trackSize}.\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-track-size` class or `data-lisn-track-size` attribute set on\n *   the element that constitutes the widget.\n *\n * This widget does not support configuration and uses the default\n * {@link SizeWatcher} configuration except for resize threshold equal to 0.\n *\n * @example\n * This will track the size of this element and set the relevant CSS\n * properties. It will use the default {@link SizeWatcher} options and resize\n * threshold of 0.\n *\n * ```html\n * <div class=\"lisn-track-size\"></div>\n * ```\n */\nexport class TrackSize extends Widget {\n  static get(element: Element): TrackSize | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, TrackSize)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(WIDGET_NAME, (element) => {\n      if (!TrackSize.get(element)) {\n        return new TrackSize(element);\n      }\n      return null;\n    });\n  }\n\n  constructor(element: Element) {\n    super(element, { id: DUMMY_ID });\n\n    SizeWatcher.reuse().trackSize(null, {\n      target: element,\n      threshold: 0,\n    });\n\n    this.onDestroy(() => SizeWatcher.reuse().noTrackSize(null, element));\n  }\n}\n\n// --------------------\n\nconst WIDGET_NAME = \"track-size\";\n// Only one TrackSize widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = WIDGET_NAME;\n","/**\n * @module Widgets\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport {\n  validateNumber,\n  validateString,\n  validateNumList,\n} from \"@lisn/utils/validation\";\n\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorFunc,\n  registerWidget,\n} from \"@lisn/widgets/widget\";\n\n/**\n * This is a simple wrapper around the {@link ViewWatcher}. If you are using\n * the JavaScript API, you should use the {@link ViewWatcher} directly. The\n * purpose of this widget is to expose the watcher's ability to track an\n * element's position across the viewport (or a given root element) and set\n * relevant CSS properties via the HTML API. See {@link ViewWatcher.trackView}.\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-track-view` class or `data-lisn-track-view` attribute set on\n *   the element that constitutes the widget.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * Note that the root margin value can either be comma-separated or\n * space-separated.\n *\n * @example\n * This will track the element across the viewport and set the relevant CSS\n * properties.\n *\n * ```html\n * <div class=\"lisn-track-view\"></div>\n * ```\n *\n * @example\n * As above but with custom settings.\n *\n * ```html\n * <div id=\"myRoot\"></div>\n * <div data-lisn-track-view=\"root=#myRoot\n *                            | root-margin=100px,50px\n *                            | threshold=0,0.5\"\n * ></div>\n * ```\n */\nexport class TrackView extends Widget {\n  static get(element: Element): TrackView | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, TrackView)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!TrackView.get(element)) {\n          return new TrackView(element, config);\n        }\n        return null;\n      },\n      newConfigValidator,\n    );\n  }\n\n  constructor(element: Element, config?: TrackViewConfig) {\n    super(element, { id: DUMMY_ID });\n\n    const watcher = ViewWatcher.reuse({\n      root: config?.root,\n      rootMargin: config?.rootMargin?.replace(/,/g, \" \"),\n      threshold: config?.threshold,\n    });\n\n    watcher.trackView(element, null, config);\n\n    this.onDestroy(() => watcher.noTrackView(element));\n  }\n}\n\n/**\n * @interface\n */\nexport type TrackViewConfig = {\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.ViewWatcherConfig.root | ViewWatcherConfig.root}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  root?: Element | null;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.ViewWatcherConfig.rootMargin | ViewWatcherConfig.rootMargin}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  rootMargin?: string;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.ViewWatcherConfig.threshold | ViewWatcherConfig.threshold}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  threshold?: number | number[];\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.TrackViewOptions.debounceWindow | TrackViewOptions.debounceWindow}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  debounceWindow?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.TrackViewOptions.resizeThreshold | TrackViewOptions.resizeThreshold}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  resizeThreshold?: number;\n\n  /**\n   * Corresponds to\n   * {@link Watchers/ViewWatcher.TrackViewOptions.scrollThreshold | TrackViewOptions.scrollThreshold}.\n   *\n   * @defaultValue undefined // ViewWatcher default\n   */\n  scrollThreshold?: number;\n};\n\n// --------------------\n\nconst WIDGET_NAME = \"track-view\";\n// Only one TrackView widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = WIDGET_NAME;\n\nconst newConfigValidator: WidgetConfigValidatorFunc<TrackViewConfig> = (\n  element: Element,\n) => {\n  return {\n    root: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    rootMargin: validateString,\n    threshold: (key, value) => validateNumList(key, value),\n    debounceWindow: validateNumber,\n    resizeThreshold: validateNumber,\n    scrollThreshold: validateNumber,\n  };\n};\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport \"@lisn/bundle-slim\"; // side effects\n\nimport * as actions from \"@lisn/actions/index\";\nimport * as triggers from \"@lisn/triggers/index\";\nimport * as widgets from \"@lisn/widgets/index\";\n\nexport * from \"@lisn/bundle-essentials\";\nexport * as actions from \"@lisn/actions/index\";\nexport * as triggers from \"@lisn/triggers/index\";\nexport * as widgets from \"@lisn/widgets/index\";\n\nactions.AddClass.register();\nactions.RemoveClass.register();\nactions.AnimatePlay.register();\nactions.AnimatePause.register();\nactions.Animate.register();\nactions.Display.register();\nactions.Undisplay.register();\nactions.Open.register();\nactions.NextPage.register();\nactions.PrevPage.register();\nactions.GoToPage.register();\nactions.EnablePage.register();\nactions.DisablePage.register();\nactions.ScrollTo.register();\nactions.SetAttribute.register();\nactions.Show.register();\nactions.Hide.register();\nactions.Enable.register();\nactions.Disable.register();\nactions.Run.register();\n\ntriggers.LayoutTrigger.register();\ntriggers.LoadTrigger.register();\ntriggers.ClickTrigger.register();\ntriggers.PressTrigger.register();\ntriggers.HoverTrigger.register();\ntriggers.ScrollTrigger.register();\ntriggers.Trigger.register();\ntriggers.ViewTrigger.register();\n\nwidgets.AutoHide.register();\nwidgets.Collapsible.register();\nwidgets.Popup.register();\nwidgets.Modal.register();\nwidgets.Offcanvas.register();\nwidgets.PageLoader.register();\nwidgets.Pager.register();\nwidgets.SameHeight.register();\nwidgets.ScrollToTop.register();\nwidgets.Scrollbar.register();\nwidgets.Sortable.register();\nwidgets.TrackGesture.register();\nwidgets.TrackScroll.register();\nwidgets.TrackSize.register();\nwidgets.TrackView.register();\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport \"@lisn/bundle\"; // side effects\n\nimport { settings } from \"@lisn/globals/settings\";\nsettings.verbosityLevel = 10;\n\nexport * from \"@lisn/bundle\";\nexport * as debug from \"@lisn/debug/index\";\nexport * as utils from \"@lisn/utils/index\";\nexport * as modules from \"@lisn/modules/index\";\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","import { Polling } from \"./polling.js\";\n/**\n * HTTP long-polling based on the built-in `fetch()` method.\n *\n * Usage: browser, Node.js (since v18), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/fetch\n * @see https://caniuse.com/fetch\n * @see https://nodejs.org/api/globals.html#fetch\n */\nexport class Fetch extends Polling {\n    doPoll() {\n        this._fetch()\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch read error\", res.status, res);\n            }\n            res.text().then((data) => this.onData(data));\n        })\n            .catch((err) => {\n            this.onError(\"fetch read error\", err);\n        });\n    }\n    doWrite(data, callback) {\n        this._fetch(data)\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch write error\", res.status, res);\n            }\n            callback();\n        })\n            .catch((err) => {\n            this.onError(\"fetch write error\", err);\n        });\n    }\n    _fetch(data) {\n        var _a;\n        const isPost = data !== undefined;\n        const headers = new Headers(this.opts.extraHeaders);\n        if (isPost) {\n            headers.set(\"content-type\", \"text/plain;charset=UTF-8\");\n        }\n        (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.appendCookies(headers);\n        return fetch(this.uri(), {\n            method: isPost ? \"POST\" : \"GET\",\n            body: isPost ? data : null,\n            headers,\n            credentials: this.opts.withCredentials ? \"include\" : \"omit\",\n        }).then((res) => {\n            var _a;\n            // @ts-ignore getSetCookie() was added in Node.js v19.7.0\n            (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(res.headers.getSetCookie());\n            return res;\n        });\n    }\n}\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n"],"names":["PREFIX","LOG_PREFIX","OBJECT","Object","SYMBOL","Symbol","ARRAY","Array","STRING","String","FUNCTION","Function","MATH","Math","NUMBER","Number","PROMISE","Promise","PI","INFINITY","Infinity","S_ABSOLUTE","S_FIXED","S_STICKY","S_WIDTH","S_HEIGHT","S_TOP","S_BOTTOM","S_UP","S_DOWN","S_LEFT","S_RIGHT","S_AT","S_ABOVE","S_BELOW","S_IN","S_OUT","S_NONE","S_AMBIGUOUS","S_ADDED","S_REMOVED","S_ATTRIBUTE","S_KEY","S_MOUSE","S_POINTER","S_TOUCH","S_WHEEL","S_CLICK","S_HOVER","S_PRESS","S_SCROLL","S_ZOOM","S_DRAG","S_UNKNOWN","S_SCROLL_TOP","concat","S_SCROLL_LEFT","S_SCROLL_WIDTH","S_SCROLL_HEIGHT","S_CLIENT_WIDTH","S_CLIENT_HEIGHT","S_SCROLL_TOP_FRACTION","S_SCROLL_LEFT_FRACTION","S_HORIZONTAL","S_VERTICAL","S_SKIP_INITIAL","S_DEBOUNCE_WINDOW","S_TOGGLE","S_CANCEL","S_KEYDOWN","S_MOUSEUP","S_MOUSEDOWN","S_POINTERUP","S_POINTERDOWN","S_POINTERENTER","S_POINTERLEAVE","S_POINTERMOVE","S_POINTERCANCEL","S_TOUCHSTART","S_TOUCHEND","S_TOUCHMOVE","S_TOUCHCANCEL","S_DRAGSTART","S_DRAGEND","S_DRAGENTER","S_DRAGOVER","S_DROP","S_SELECTSTART","S_ATTRIBUTES","S_CHILD_LIST","S_REVERSE","S_DRAGGABLE","S_DISABLED","S_ARROW","S_ROLE","ARIA_PREFIX","S_ARIA_CONTROLS","PREFIX_WRAPPER","PREFIX_INLINE_WRAPPER","PREFIX_TRANSITION","PREFIX_TRANSITION_DISABLE","PREFIX_HIDE","PREFIX_SHOW","PREFIX_DISPLAY","PREFIX_UNDISPLAY","PREFIX_PLACE","PREFIX_ORIENTATION","PREFIX_POSITION","PREFIX_GHOST","PREFIX_NO_SELECT","PREFIX_NO_TOUCH_ACTION","PREFIX_NO_WRAP","S_ANIMATE","ANIMATE_PREFIX","PREFIX_ANIMATE_DISABLE","PREFIX_ANIMATE_PAUSE","PREFIX_ANIMATE_REVERSE","USER_AGENT","navigator","userAgent","IS_MOBILE","match","LisnError","_Error","_classCallCheck","_callSuper","arguments","_inherits","_createClass","_wrapNativeSuper","Error","LisnUsageError","_LisnError","_this","message","length","undefined","name","LisnBugError","_LisnError2","_this2","root","self","_typeof","global","kebabToCamelCase","str","replace","m","toUpperCase","charAt","camelToKebabCase","toLowerCase","prefixName","MC","prefixCssVar","prefixCssJsVar","prefixData","prefixLisnData","s","timeNow","Date","now","bind","timeSince","startTime","hasDOM","document","getWindow","window","getDoc","getDocElement","documentElement","getDocScrollingElement","scrollingElement","getBody","body","getReadyState","readyState","getPointerType","event","isPointerEvent","pointerType","isMouseEvent","onAnimationFrame","requestAnimationFrame","createElement","tagName","options","createButton","label","tag","btn","setTabIndex","setAttr","isNullish","v","isEmpty","isIterableObject","isNonPrimitive","iterator","isArray","isInstanceOf","isObject","typeOf","isNumber","isString","isLiteralString","isBoolean","isFunction","isDoc","target","MouseEvent","PointerEvent","isTouchPointerEvent","isWheelEvent","WheelEvent","isKeyboardEvent","KeyboardEvent","isTouchEvent","TouchEvent","isNode","Node","isElement","Element","isHTMLElement","HTMLElement","isNodeBAfterA","nodeA","nodeB","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","strReplace","replacement","setTimer","setTimeout","clearTimer","clearTimeout","getBoundingClientRect","el","copyBoundingRectProps","rect","_defineProperty","x","left","right","y","top","bottom","querySelector","selector","querySelectorAll","docQuerySelector","docQuerySelectorAll","getElementById","id","getAttr","getAttribute","value","setAttribute","unsetAttr","delAttr","removeAttribute","includes","arr","startAt","indexOf","filter","array","filterFn","filterBlank","result","lengthOf","sizeOf","obj","_obj$size","size","_obj$length","preventDefault","arrayFrom","from","keysOf","keys","defineProperty","merge","_MC$OBJECT","_len","a","_key","assign","apply","copyObject","promiseResolve","resolve","promiseAll","all","freezeObj","freeze","hasOwnProp","o","prop","prototype","hasOwnProperty","call","preventExtensions","stringify","JSON","floor","ceil","log2","sqrt","max","min","abs","round","pow","parseFloat","isNaN","Class","constructorOf","constructor","typeOrClassOf","_constructorOf","parentOf","element","parentElement","childrenOf","children","targetOf","currentTargetOf","currentTarget","classList","S_TABINDEX","getTabIndex","index","unsetTabIndex","remove","deleteObjKey","key","deleteKey","map","elScrollTo","coords","behavior","scrollTo","elScrollBy","scrollBy","newPromise","executor","newMap","entries","Map","newWeakMap","WeakMap","newSet","values","Set","newWeakSet","WeakSet","newIntersectionObserver","callback","IntersectionObserver","newResizeObserver","ResizeObserver","newMutationObserver","MutationObserver","usageError","msg","bugError","illegalConstructorError","useWhat","CONSOLE","console","consoleDebug","debug","consoleLog","log","consoleInfo","info","consoleWarn","warn","consoleError","error","settings","MH","mainScrollableElementSelector","contentWrappingAllowed","pageLoadTimeout","autoWidgets","scrollbarHideNative","scrollbarOnMobile","scrollbarPositionH","scrollbarPositionV","scrollbarAutoHide","scrollbarClickScroll","scrollbarDragScroll","scrollbarUseHandle","sameHeightDiffTolerance","sameHeightResizeThreshold","sameHeightDebounceWindow","sameHeightMinGap","sameHeightMaxFreeR","sameHeightMaxWidthR","deviceBreakpoints","mobile","tablet","desktop","aspectRatioBreakpoints","tall","square","wide","lightThemeClassName","darkThemeClassName","deltaLineHeight","deltaPageWidth","deltaPageHeight","verbosityLevel","remoteLoggerURL","remoteLoggerOnMobileOnly","roundNumTo","numDecimal","multiplicationFactor","isValidNum","isFinite","toNum","defaultValue","numValue","toInt","toNonNegNum","toPosNum","toNumWithBounds","limits","_limits$min","_limits$max","isDefaultGiven","_ref","maxAbs","_toConsumableArray","minAbs","_len2","_key2","havingMaxAbs","_len3","_key3","sort","b","havingMinAbs","_len4","_key4","hAngle","normalizeAngle","atan2","degToRad","radToDeg","areParallel","vA","vB","angleDiffThreshold","angleA","angleB","areAntiParallel","distanceBetween","ptA","ptB","quadraticRoots","c","z","easeInOutQuad","sortedKeysByVal","descending","keyWithMaxVal","slice","keyWithMinVal","getBitmask","start","end","isTouchScreen","matchMedia","matches","copyExistingKeys","fromObj","toObj","omitKeys","keysToRm","res","compareValuesIn","objA","objB","roundTo","valA","valB","keyExists","toArrayIfSingle","toBool","formatAsString","maxLen","maybeConvertToString","joinAsString","separator","args","join","splitOn","input","trim","limit","output","addEntry","push","matchIndex","matchLength","_match$index","exec","randId","nChars","segment","random","toString","toMargins","absoluteSize","_parts$","_parts$2","_parts$3","toPxValue","strValue","margin","parts","margins","objToStrKey","flattenForSorting","k","stringifyReplacer","nested","classStr","stack","isValidStrList","checkFn","allowEmpty","validateStrList","err","_toArray","toArray","_validateString","validateNumList","_toArray2","_validateNumber","validateNumber","validateBoolean","_validateBoolean","validateString","validateStringRequired","validateBooleanOrString","stringCheckFn","_validateBooleanOrString","typeDescription","numVal","boolVal","BitSpaces","counter","newCounter","create","propNames","newBitSpace","get","_nBits","_bitmask","newBitSpaces","createBitSpace","spaces","bitmask","space","bit","has","p","bitmaskFor","pStart","pEnd","thisStart","thisEnd","nameOf","val","_propNames","_iterator","_createForOfIteratorHelper","_step","n","done","enumerable","e","f","isValidMutationCategory","category","DOM_CATEGORIES_SPACE","isValidMutationCategoryList","categories","scheduleHighPriorityTask","task","scheduler","postTask","priority","channel","MessageChannel","port1","onmessage","close","port2","postMessage","getDebouncedHandler","debounceWindow","handler","timer","lastArgs","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop","waitForDelay","delay","LocalConsole","isiOS","iOSlog","isJest","jestLog","_len5","_key5","_len6","_key6","newXMap","getDefaultV","XMap","newXMapGetter","newXWeakMap","XWeakMap","newXWeakMapGetter","XMapBase","set","sGet","prune","sk","rest","_XMapBase","clear","_XMapBase2","RemoteConsole","url","connectTimeout","DEFAULT_TIMEOUT","hasFailed","isClosed","tmpQueue","sendLog","level","destroy","cleanup","_instances$get","level__ignored","args__ignored","instance","instances","socket","ioClient","disconnectTimer","entry","sent","t0","abrupt","io","on","emit","disconnect","shift","reuse","_instances$get2","rConsole","Console","remoteUrl","remoteConsole","localConsole","_remoteConsole","Logger","config","myConfig","debugID","getBooleanURLParam","isMobile","myConsole","remoteLoggerConnectTimeout","logPrefix","debugPrefix","getName","getVerbosityLevel","setVerbosityLevel","l","debug1","logDebugN","debug2","debug3","debug4","debug5","debug6","debug7","_len7","_key7","debug8","_len8","_key8","debug9","_len9","_key9","debug10","_len10","_key10","_len11","_key11","_len12","_key12","_len13","_key13","_len14","_key14","_len15","_key15","logAtCreation","logger","_len16","_key16","unshift","regex","test","getURLParameter","loc","location","URLSearchParams","urlParams","search","RegExp","href","decodeURIComponent","wrapCallback","handlerOrCallback","isRemoved","callablesMap","invoke","wrapper","Callback","onRemove","rmFn","CallbackScheduler","_clear","fn","add","reject","_push","REMOVE","queues","flush","_ref2","_callee2","queue","_callee2$","_context2","_running","_task","_x","item","_onRemove","logInfo","isMessageSeen","logWarn","logError","discardMessages","isSeen","waitForMutateTime","scheduleDOMTask","scheduledDOMMutations","waitForMeasureTime","scheduledDOMMeasurements","waitForSubsequentMutateTime","then","waitForSubsequentMeasureTime","hasScheduledDOMTasks","runAllDOMTasks","runDOMTaskQueue","getVisibleContentChildren","isVisibleContentTag","isInlineTag","inlineTags","isDOMElement","SVGElement","MathMLElement","transitionElementNow","fromCls","toCls","cancelCSSTransitions","didChange","hasClass","removeClassesNow","addClassesNow","transitionElement","thisTransition","transitionDuration","_args","scheduleCSSTransition","_isCancelled","_finish","getMaxTransitionDuration","_x2","_x3","displayElementNow","displayElement","undisplayElementNow","undisplayElement","showElementNow","showElement","hideElementNow","hideElement","toggleDisplayElementNow","isElementUndisplayed","toggleDisplayElement","toggleShowElementNow","isElementHidden","toggleShowElement","className","contains","_MH$classList","classNames","addClasses","_MH$classList2","removeClasses","toggleClassNow","force","toggle","toggleClass","getData","getBoolData","setDataNow","setData","setBoolDataNow","setBoolData","unsetBoolDataNow","unsetBoolData","delDataNow","delData","getComputedStylePropNow","getComputedStyle","getPropertyValue","getComputedStyleProp","getStylePropNow","_style","style","getStyleProp","setStylePropNow","_style2","setProperty","setStyleProp","delStylePropNow","_style3","removeProperty","delStyleProp","propVal","duration","_x4","disableInitialTransition","_ref3","_callee3","_args3","_callee3$","_context3","_x5","setHasModal","PREFIX_HAS_MODAL","delHasModal","copyStyle","_ref4","_callee4","fromElement","toElement","includeComputedProps","props","_prop","_prop2","_callee4$","_context4","_x6","_x7","_x8","setNumericStyleProps","_ref5","_callee5","transformFn","varPrefix","cssPropSuffix","varName","_options$_numDecimal","thisNumDecimal","currValue","_args5","_callee5$","_context5","_transformFn","_prefix","t1","_numDecimal","t2","t3","_units","_x9","_x10","scheduledCSSTransitions","scheduledTransitions","toClasses","_i","_toClasses","scheduledTransition","_cancel","isCancelled","wrapElementNow","createWrapperFor","ignoreMove","to","replaceWith","append","wrapElement","wrapChildrenNow","moveChildrenNow","moveElementNow","wrapChildren","replaceElementNow","newElement","replaceElement","swapElementsNow","elementA","elementB","temp","swapElements","oldParent","newParent","child","moveChildren","_x11","_x12","_x13","parentEl","position","moveElement","_ref6","_callee6","_callee6$","_context6","_x14","_x15","hideAndRemoveElement","_ref7","_callee7","_args7","_callee7$","_context7","_x16","getOrAssignID","prefix","domID","wrapScrollingContent","_ref8","_callee8","firstChild","_callee8$","_context8","PREFIX_CONTENT_WRAPPER","_x17","cloneElement","clone","cloneNode","insertGhostCloneNow","insertBefore","_wrapper","_clone","insertGhostClone","recordsToSkipOnce","getIgnoreMove","clearIgnoreMove","insertArrow","direction","arrow","waitForElement","timeout","callFn","observer","observe","childList","subtree","waitForElementOrInteractive","isInteractive","waitForInteractive","INTERACTIVE","COMPLETE","addEventListener","waitForComplete","waitForPageReady","pageIsReady","dispatchReady","isPageReady","DOMWatcher","CONSTRUCTOR_KEY","buffer","t","_target","_categoryBitmask","_attributes","_addedTo","_removedFrom","allCallbacks","mutationHandler","records","record","recType","type","_iterator3","addedNodes","_step3","operation","ADDED_BIT","_iterator4","removedNodes","_step4","REMOVED_BIT","attributeName","ATTRIBUTE_BIT","_iterator2","_step2","shouldSkipOperation","processOperation","observers","_observer","_isActive","createCallback","_allCallbacks$get","_callback","deleteHandler","_options","setupOnMutation","userOptions","childQueue","_arr","initOperation","bufferedOperation","diffOperation","getOptions","_root","activateObserver","skipInitial","_selector","takeRecords","getDiffOperation","invokeCallback","activeCategories","_iterator5","_step5","deactivateObserver","_iterator6","_step6","categoryBitmask","currentTargets","mutationType","_subtree","requestToSkip","removedFrom","addedTo","requestFrom","requestTo","onMutation","offMutation","_allCallbacks$get2","getConfig","configStrKey","_config$subtree","CATEGORIES_BITS","_iterator7","_step7","cat","operationA","operationB","attributes","_iterator8","_step8","attr","_iterator9","_step9","getMaxDeltaDirection","deltaX","deltaY","getVectorDirection","vector","getOppositeDirection","OPPOSITE_DIRECTIONS","getOppositeXYDirections","directions","directionList","isValidXYDirection","opposites","opposite","XY_DIRECTIONS","isValidZDirection","Z_DIRECTIONS","isValidDirection","DIRECTIONS","isValidDirectionList","SCROLL_DIRECTIONS","callEventListener","handleEvent","addEventListenerTo","eventType","transformEventType","getEventHandlerData","thirdArg","wrappedHandler","supports","getBrowserSupport","_optionsArg","_options$capture","capture","once","removeEventListenerFrom","setEventHandlerData","_wrappedHandler","_thirdArg","data","removeEventListener","deleteEventHandlerData","preventSelect","undoPreventSelect","browserEventSupport","_pointer","passive","signal","optTest","opt","_loop","thisOpt","AbortController","dummyHandler","dummyElement","e__ignored","registeredEventHandlerData","getEventOptionsStr","finalOptions","_registeredEventHandl","optionsStr","_registeredEventHandl2","startsWith","isValidInputDevice","device","DEVICES","isValidIntent","intent","INTENTS","isValidInputDeviceList","devices","isValidIntentList","intents","addDeltaZ","current","increment","MIN_DELTA_Z","getKeyGestureFragment","events","_options$scrollHeight","LINE","PAGE","CONTENT","scrollHeight","deltasUp","amount","deltasDown","deltasLeft","deltasRight","deltasIn","deltasOut","deltaZ","_deltasForKey","deltasForKey","SK_UP","SK_ARROWUP","SK_PAGEUP","SK_DOWN","SK_ARROWDOWN","SK_PAGEDOWN","SK_LEFT","SK_ARROWLEFT","SK_RIGHT","SK_ARROWRIGHT","shiftKey","ctrlKey","theseDeltas","_theseDeltas","_slicedToArray","thisDeltaX","thisDeltaY","thisDeltaZ","thisIntent","SK_PAGE","SK_ARROW","getPointerGestureFragment","pointerEventClass","pointerUpType","filteredEvents","eType","buttons","numEvents","firstEvent","lastEvent","clientX","clientY","getTouchGestureFragment","_options$dragHoldTime","_options$dragNumFinge","moves","getTouchDiff","deltaThreshold","numMoves","holdTime","getHoldTime","canBeDrag","dragHoldTime","dragNumFingers","d","isSignificant","vectorA","vectorB","startDistance","startX","startY","endDistance","endX","endY","deltaSign","reverseScroll","isFirst","thisDirection","lastTouchEvent","touches","groupedTouches","touch","identifier","touchList","nTouches","firstTouch","lastTouch","firstStart","findIndex","firstMove","timeStamp","normalizeWheel","spinX","spinY","pixelX","pixelY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","deltaMode","getWheelGestureFragment","maxDelta","percentage","GestureWatcher","allListeners","_getCallbackAndWrappe","getCallbackAndWrapper","setupOnGesture","_allListeners$get","listeners","_devices","setupListeners","_nCallbacks","_preventDefault","_nPreventDefault","_allListeners$get2","_remove","invokeCallbacks","_allListeners$get3","isTerminated","_intents","hasAddedTabIndex","hasPreventedSelect","addOrRemoveListeners","action","listener","eventTypes","method","addInitialListener","initialListener","initiatingEvents","removeInitialListener","addOngoingListener","processEvent","ongoingEvents","removeOngoingListener","trackGesture","setGestureCssProps","totalDeltaX","totalDeltaY","totalDeltaZ","noTrackGesture","offGesture","onGesture","_allCallbacks$get3","_config$preventDefaul","_config$naturalTouchS","_config$touchDragHold","_config$touchDragNumF","_debounceWindow","_deltaThreshold","_angleDiffThreshold","_naturalTouchScroll","naturalTouchScroll","_touchDragHoldTime","touchDragHoldTime","_touchDragNumFingers","touchDragNumFingers","pointer","wheel","fragmentGetters","_options$minTotalDelt","_options$maxTotalDelt","_options$minTotalDelt2","_options$maxTotalDelt2","_options$minTotalDelt3","_options$maxTotalDelt3","_options$preventDefau","_options$naturalTouch","_options$touchDragHol","_options$touchDragNum","_directions","_minTotalDeltaX","minTotalDeltaX","_maxTotalDeltaX","maxTotalDeltaX","_minTotalDeltaY","minTotalDeltaY","_maxTotalDeltaY","maxTotalDeltaY","_minTotalDeltaZ","minTotalDeltaZ","_maxTotalDeltaZ","maxTotalDeltaZ","preventNextClick","eventQueue","debouncedWrapper","fragment","eventQueueCopy","_eventQueueCopy","_eventQueueCopy$","clearEventQueue","newTotalDeltaX","newTotalDeltaY","newTotalDeltaZ","time","preventDefaultActionFor","keepLastEvent","splice","isActualGesture","isPointerDown","focus","preventScroll","isValidDevice","ORDERED_DEVICES","isValidAspectRatio","aspectRatio","ORDERED_ASPECTR","isValidDeviceList","isValidForType","S_DEVICES","isValidAspectRatioList","aspectR","S_ASPECTRS_CAMEL","getOtherDevices","getOtherLayouts","getOtherAspectRatios","getLayoutBitmask","layoutBitmask","getBitmaskFromSpec","aspectRatios","ORDERED_DEVICE_NAMES","ORDERED_ASPECTR_NAMES","bitSpaces","NUM_LAYOUTS","LAYOUT_RANGE_REGEX","getLayoutsFromBitmask","keyName","bitSpace","layouts","spec","oppositeBitmask","singleKeyName","rangeMatch","groups","minLayout","layoutA","maxLayout","layoutB","lt","isScrollable","axis","active","noCache","_isScrollableCache$ge","cachedResult","isScrollableCache","offset","doCache","canScroll","dimension","IS_SCROLLABLE_CACHE_TIMEOUT","getClosestScrollable","ancestor","getCurrentScrollAction","scrollable","toScrollableOrDefault","currentScrollAction","_scrollable","currentScroll","cancel","cancelFn","_weCanInterrupt","scrollEvents","preventScrollHandler","_userCanInterrupt","promise","initiateScroll","thisScrollAction","waitFor","_scrollEvents","isValidScrollDirection","isValidScrollDirectionList","mapScrollable","original","actualScrollable","mappedScrollables","unmapScrollable","getClientWidthNow","isScrollableBodyInQuirks","offsetWidth","getBorderWidth","getClientHeightNow","offsetHeight","tryGetMainContentElement","mainContentElement","fetchMainContentElement","init","tryGetMainScrollableElement","mainScrollableElement","fetchMainScrollableElement","getDefaultScrollingElement","tryGetScrollableElement","toScrollableOrMain","fetchScrollableElement","DIFF_THRESHOLD","arePositionsDifferent","getMain","_options$weCanInterru","_options$userCanInter","getTargetCoordinates","altTarget","_offset","_altTarget","_altOffset","altOffset","_duration","weCanInterrupt","userCanInterrupt","docScrollingElement","targetEl","getStartEndPosition","applyOffset","getEndPosition","startPosition","targetCoordinates","endPosition","scrollH","scrollW","clientH","clientW","previousTimeStamp","currentPosition","step","elapsed","progress","side","initPromise","contentElement","getOverlay","_overlays$get","tryGetOverlayOptions","overlays","_parent","_overlayKey","createOverlay","canReuse","_overlays$get2","existingOverlay","overlay","isPercentageHOffset","isPercentageVOffset","needsContentWrapping","fetchOverlayOptions","_id","createOnlyOverlay","_userOptions$data","_userOptions$id","getCssProperties","tryGetParent","parent","_data","getOverlayKey","_userOptions$data2","_userOptions$id2","fetchParent","finalCssProperties","userSuppliedParent","getEntryContentBox","contentBoxSize","getSizeFromInlineBlock","contentRect","getEntryBorderBox","fallbackToContent","borderBoxSize","NaN","isValidBox","box","ALL_BOXES","isValidDimension","ALL_DIMENSIONS","tryGetViewportOverlay","viewportOverlay","fetchViewportOverlay","fetchViewportSize","_MH$getDocScrollingEl","realtime","_args2","clientWidth","clientHeight","S_INLINE_SIZE","S_BLOCK_SIZE","XResizeObserver","targetsToSkip","observedTargets","resizeHandler","skipNum","borderObserver","contentObserver","observeTarget","targets","_targets","observeLater","_i2","_targets2","unobserve","_i3","_targets3","SizeWatcher","allSizeData","processEntry","xObserver","fetchCurrentSize","sizeData","fetchElement","getSizeData","border","content","fetchOptions","_options$box","_options$dimension","_options$MC$S_DEBOUNC","threshold","_resizeThreshold","t4","_element","_box","_dimension","_threshold","setupOnResize","removeOnResize","currEntry","setSizeCssProps","latestData","thresholdsExceeded","hasExceededThreshold","trackSize","noTrackSize","onResize","offResize","resizeThreshold","lastThresholdData","dim","diff","borderBox","contentBox","borderWidth","borderHeight","contentWidth","contentHeight","LayoutWatcher","nonIntersectingBitmask","currentLayoutData","fetchCurrentLayout","readyPromise","setupOverlays","_yield$createOverlays","createOverlays","_deviceBreakpoints","_aspectRatioBreakpoints","isReady","intersectionHandler","numEntries","getNonIntersecting","processLayoutChange","observeOptions","rootMargin","triggerOverlay","_layoutBitmask","setupOnLayout","layoutData","changeMatches","skipCallbacks","deviceBit","aspectRatioBit","onLayout","offLayout","VAR_BORDER_HEIGHT","PREFIX_DEVICE","PREFIX_ASPECTR","overlayPromises","overlayParent","parentHeightCss","getOverlayLayout","layout","thisLayoutData","prevLayoutData","isIntersecting","isValidPointerAction","POINTER_ACTIONS","isValidPointerActionList","actions","PointerWatcher","setupOnPointer","startHandler","endHandler","startCallback","endCallback","_actions","listenerSetupFn","onPointer","offPointer","_config$preventSelect","_preventSelect","_options$preventSelec","setupClickListener","toggleState","state","setupPointerListeners","startEventSuff","endEventSuff","startEvent","endEvent","startListener","endListener","click","hover","press","actionData","ScrollWatcher","allScrollData","activeListeners","fetchCurrentScroll","isScrollEvent","previousEventData","fetchScrollData","trackType","_trackType","setupOnScroll","eventTarget","scrollData","listenerOptions","fetchOnScrollOptions","_eventTarget","TRACK_FULL","setupSizeTrack","_nRealtime","scrollHandler","directionMatches","removeOnScroll","setScrollCssProps","scrollCallback","doc","resizeCallback","sizeWatcher","observedElements","allowedToWrap","domWatcher","onAddedCallback","_activeListeners$get","finish","scroll","_options$amount","isVertical","sign","targetCoordinate","asFractionOf","_scrollDuration","t5","t6","t7","fetchCurrentScrollAction","stopUserScrolling","stopScroll","_args8","immediate","trackScroll","noTrackScroll","onScroll","TRACK_REGULAR","offScroll","_scrollThreshold","scrollThreshold","scrollDuration","_ref9","_callee9","_callee9$","_context9","getEventTarget","userDirections","latestDirection","topDiff","leftDiff","checkTop","checkLeft","_ref10","_callee10","scrollTop","scrollLeft","scrollWidth","scrollTopFraction","scrollLeftFraction","prevScrollTop","prevScrollLeft","_callee10$","_context10","isValidScrollOffset","OFFSET_REGEX","isValidView","view","VIEWS","isValidViewList","views","getOppositeViews","getViewsBitmask","VIEWS_SPACE","at","above","below","getViewsFromBitmask","viewsStr","viewsBitmask","parseScrollOffset","_match$groups","_match$groups2","reference","ref","XIntersectionObserver","selectedEntries","thresholds","ViewWatcher","allViewData","_rootMargin","fetchCurrentView","fetchData","entryOrElement","intersection","fetchIntersectionData","fetchViewData","setupOnView","viewData","rootBounds","setupInviewTrack","viewsToBitmask","_viewsBitmask","removeOnView","setViewCssProps","_entry","viewCallback","scrollWatcher","isInview","removeTrackCallback","scrollableAncestors","addTrackCallback","enterOrLeaveCallback","fetchScrollableAncestors","_config$_root","trackCallback","prevData","changed","viewChanged","target__ignored","trackView","noTrackView","onView","offView","_config$rootMargin","targetBounds","relative","entryOrTarget","vpSize","rootMargins","isCrossOrigin","_args9","IntersectionObserverEntry","boundingClientRect","fetchBounds","_targetBounds","_rootMargins","_rootBounds","_isIntersecting","_isCrossOrigin","_x18","_x19","_yield$fetchViewportS","width","height","_x20","_x21","_x22","_ref11","_callee11","_intersection$_isInte","vpHeight","vpWidth","_args11","_callee11$","_context11","fetchViews","hMiddle","vMiddle","_x23","_ref12","_callee12","useScrollingAncestor","delta","xView","yView","scrollingAncestor","_callee12$","_context12","_left","_right","_top","_bottom","_x24","_x25","_x26","_ref13","_callee13","overlayOptions","_callee13$","_context13","getOverlayOptions","_x27","_x28","_parseScrollOffset","ovrDimension","Widget","isDisabled","isDestroyed","destroyPromise","enableCallbacks","disableCallbacks","destroyCallbacks","disable","enable","toggleEnable","onDisable","onEnable","elInstances","onDestroy","getElement","registerWidget","newWidget","configValidator","_options$selector","prefixedName","registeredWidgets","getDefaultWidgetSelector","thisConfigValidator","widgets","configSpecs","dataAttr","_configSpecs","_config","theseWidgets","supportsMultiple","fetchWidgetConfig","w","getWidgetConfig","validator","toOptionsObject","configPromises","fetchUniqueWidget","Type","widget","_splitOn","_splitOn2","registerAction","newAction","registeredActions","newActionFromSpec","argsAndOptions","fetchAction","AddClass","_getMethods","getMethods","_add","_toggle","undo","register","_construct","RemoveClass","_getMethods2","_toggle2","cls","iterateAnimations","webAnimationCallback","legacyCallback","animation","getAnimations","resetCssAnimationsNow","Animate","animate","GO_FORWARD","GO_BACKWARD","GO_TOGGLE","isInitial","setupAnimation","setupAnimationLegacy","pauseTillReady","isBackward","playbackRate","playState","reverse","play","pause","CSSAnimation","cancelHandler","onAnimationCancel","_MH$targetOf","Animation","effect","KeyframeEffect","newAnimation","animationName","isPaused","goBackwards","doPause","AnimatePlay","_play","_pause","PAUSE","AnimatePause","PLAY","TOGGLE","Display","_display","_undisplay","Undisplay","_display2","_undisplay2","getReferenceElement","thisElement","referenceElement","relation","find","matchOp","refOrCls","PREFIX_REF","DATA_REF","getFirstReferenceElement","getLastReferenceElement","getThisReferenceElement","getNextReferenceElement","getPrevReferenceElement","waitForReferenceElement","getAllReferenceElements","allRefs","closest","getNextOrPrevReferenceElement","goBackward","numRefs","refIndex","i","currentIsAfter","Trigger","_Widget","_config$once","_config$oneWay","_config$doDelay","_config$undoDelay","oneWay","doDelay","undoDelay","lastCallId","callActions","newToggleState","myCallId","run","getActions","_superPropGet","registerTrigger","newTrigger","clsPref","_getData","baseConfigValidator","allSpecs","_config$actOn","tmp","configSpec","_splitOn3","_splitOn4","argSpec","allActionSpecs","actionTarget","actionSpec","_splitOn5","_splitOn6","_name","actionArgsAndOptions","newBaseConfigValidator","TRIGGER_SEP","OPTION_PREF_CHAR","ACTION_PREF_CHAR","actOn","ACTION_ARGS_PREF_CHAR","Enable","ids","_enable","_disable","_toggleEnable","Disable","Run","_getMethods3","_run","_reverse","triggerPromises","getTriggers","triggers","trigger","ScrollTo","watcher","canReverse","hasReversed","offsetX","offsetY","newConfigValidator","_validateNumber2","SetAttribute","isOn","setAttrs","attrName","off","Show","_show","_hide","Hide","_show2","_hide2","isValidPosition","POSITIONS","isValidTwoFoldPosition","TWO_FOLD_POSITION_REGEX","POSITIONS_OPTIONS_STR","registerOpenable","newOpenable","Openable","properties","isModal","isOffcanvas","openCallbacks","closeCallbacks","isOpen","open","PREFIX_IS_OPEN","scrollWrapperToTop","outerWrapper","onOpen","onClose","getRoot","getContainer","container","getTriggerConfigs","_setupElements","setupElements","Collapsible","_Openable","_config$autoClose","_config$reverse","isHorizontal","horizontal","orientation","onSetup","_step3$value","triggerConfig","insertCollapsibleIcon","_assertThisInitialized","WIDGET_NAME_COLLAPSIBLE","autoClose","closeButton","wrapTriggers","PREFIX_REVERSE","disableTransitionTimer","tempEnableTransition","peek","peekSize","VAR_PEEK_SIZE","PREFIX_PEEK","updateWidth","VAR_JS_COLLAPSIBLE_WIDTH","collapsibleConfigValidator","Popup","_Openable2","_config$autoClose2","_config$closeButton","_config$position","_this3","WIDGET_NAME_POPUP","S_AUTO","_yield$MH$promiseAll","_yield$MH$promiseAll2","contentSize","containerView","placement","fetchPopupPlacement","popupConfigValidator","Modal","_Openable3","_config$autoClose3","_config$closeButton2","WIDGET_NAME_MODAL","modalConfigValidator","Offcanvas","_Openable4","_config$autoClose4","_config$closeButton3","_this4","WIDGET_NAME_OFFCANVAS","offcanvasConfigValidator","PREFIX_CLOSE_BTN","PREFIX_OPENS_ON_HOVER","PREFIX_LINE","PREFIX_ICON_POSITION","PREFIX_TRIGGER_ICON","PREFIX_ICON_WRAPPER","S_ARIA_EXPANDED","S_ARIA_MODAL","MIN_CLICK_TIME_AFTER_HOVER_OPEN","S_ARROW_UP","S_ARROW_DOWN","S_ARROW_LEFT","S_ARROW_RIGHT","ARROW_TYPES","ICON_CLOSED_TYPES","ICON_OPEN_TYPES","isValidIconClosed","isValidIconOpen","triggerConfigValidator","icon","iconClosed","iconOpen","getPrefixedNames","pref","_overlay","_innerWrapper","_outerWrapper","_content","_container","_trigger","_containerForSelect","_triggerForSelect","_contentId","findContainer","currWidget","childRef","findTriggers","prefixedNames","getTriggerSelector","suffix","contentId","getTriggersFrom","inputTriggers","triggerMap","addTrigger","_step5$value","_properties$wrapTrigg","innerWrapper","placeholder","closeBtn","elements","_step7$value","_arr2","_arr3","_step8$value","hoverTimeOpened","isPointerOver","activeTrigger","isTrigger","shouldPreventDefault","_triggers$get$prevent","_triggers$get","usesHover","_triggers$get2","usesAutoClose","_triggers$get3","toggleTrigger","openIt","setIsPointerOver","pointerLeft","unsetIsPointerOver","pointerEntered","closeIfEscape","closeIfClickOutside","maybeSetupAutoCloseListeners","addOrRemove","setupOrCleanup","_step9$value","widgetConfig","_triggerConfig$icon","_triggerConfig$iconCl","_triggerConfig$iconOp","iconPosition","line","_ref14","containerPosition","containerTop","containerBottom","containerLeft","containerRight","containerHMiddle","containerVMiddle","popupWidth","popupHeight","placementVars","finalPlacement","alignmentVars","alignment","middle","Open","widgetPromise","Pager","_Pager$get","DUMMY_ID","pages","toggles","switches","nextPrevSwitch","_next","nextSwitch","_prev","prevSwitch","pageSelector","PREFIX_PAGE__FOR_SELECT","toggleSelector","PREFIX_TOGGLE__FOR_SELECT","switchSelector","PREFIX_SWITCH__FOR_SELECT","nextSwitchSelector","PREFIX_NEXT_SWITCH__FOR_SELECT","prevSwitchSelector","PREFIX_PREV_SWITCH__FOR_SELECT","numPages","page","components","_pages","_toggles","_switches","_nextPrevSwitch","methods","nextPage","_nextPage","prevPage","_prevPage","goToPage","pageNum","_goToPage","disablePage","_disablePage","enablePage","_enablePage","togglePage","_togglePage","isPageDisabled","_isPageDisabled","getCurrentPage","_getCurrentPage","getPreviousPage","_getPreviousPage","getCurrentPageNum","_getCurrentPageNum","getPreviousPageNum","_getPreviousPageNum","onTransition","_onTransition","getPages","getSwitches","getToggles","WIDGET_NAME","MIN_TIME_BETWEEN_WHEEL","S_CURRENT","S_ARIA_CURRENT","S_COVERED","S_NEXT","S_TOTAL_PAGES","S_CURRENT_PAGE","S_PAGE_NUMBER","PREFIXED_NAME","PREFIX_ROOT","PREFIX_PAGE_CONTAINER","PREFIX_PAGE","PREFIX_IS_FULLSCREEN","PREFIX_USE_PARALLAX","PREFIX_TOTAL_PAGES","PREFIX_CURRENT_PAGE","PREFIX_CURRENT_PAGE_IS_LAST","PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED","PREFIX_CURRENT_PAGE_IS_LAST_ENABLED","PREFIX_PAGE_STATE","PREFIX_PAGE_NUMBER","VAR_TOTAL_PAGES","VAR_CURRENT_PAGE","VAR_PAGE_NUMBER","initialPage","fullscreen","parallax","useGestures","bool","alignGestureDirection","fetchClosestScrollable","_getClosestScrollable","setPageNumber","lastPromise","setCurrentPage","pagerEl","currPageNum","isFirstEnabled","isLastEnabled","setPageState","_pages$","_config$initialPage","_config$fullscreen","_config$parallax","_config$horizontal","_config$useGestures","_config$alignGestureD","pageContainer","isFullscreen","isParallax","gestureWatcher","viewWatcher","getGestureOptions","scrollToPager","transitionOnGesture","swapDirection","addWatcher","_gestureWatcher","_viewWatcher","getPageNumForEvent","toggleClickListener","switchClickListener","nextSwitchClickListener","prevSwitchClickListener","removeWatcher","_gestureWatcher2","_viewWatcher2","idx","_step4$value","_step6$value","disabledPages","callbacks","fetchScrollOptions","lastPageNum","lastTransition","canTransition","gestureData","targetPage","NextPage","PrevPage","GoToPage","EnablePage","_getMethods4","DisablePage","_getMethods5","altPageNum","currentNum","targetNum","ClickTrigger","_Trigger","setupWatcher","PressTrigger","_Trigger2","HoverTrigger","_Trigger3","LayoutTrigger","_possibleConstructorReturn","otherDevices","otherAspectRatios","LoadTrigger","ScrollTrigger","oppositeDirections","ViewTrigger","oppositeViews","willAnimate","setupRepresentative","prevChild","previousElementSibling","AutoHide","watcherOptions","hideOrRemoveEl","hideRelevant","targetElements","_config$delay","elem","DEFAULT_DELAY","WIDGET_NAME_HIDE","WIDGET_NAME_REMOVE","_step2$value","autoRemove","PageLoader","_PageLoader$get","_config$autoRemove","spinner","PREFIX_SPINNER","mainWidget","enableMain","loader","SameHeight","containerElement","_SameHeight$get","items","getItemsFrom","fetchConfig","fullConfig","toColumn","toRow","getItems","getItemConfigs","PREFIX_ITEM","PREFIX_ITEM__FOR_SELECT","S_TEXT","S_IMAGE","MIN_CHARS_FOR_TEXT","diffTolerance","isText","innerText","areImagesLoaded","img","naturalWidth","naturalHeight","userConfig","_userConfig$minGap","_userConfig$maxFreeR","_userConfig$maxWidthR","_userConfig$diffToler","_userConfig$resizeThr","_userConfig$debounceW","colGapStr","minGap","getNumValue","_minGap","_maxFreeR","maxFreeR","_maxWidthR","maxWidthR","_diffTolerance","num","findItems","inputItems","itemMap","addItem","itemType","allItems","callCounter","isFirstTime","lastOptimalHeight","hasScheduledReset","counterTimeout","measurements","calculateMeasurements","getOptimalHeight","setWidths","_width","_height","observeAll","unobserveAll","getWidthAtH","sameHeightW","getProperties","_type","_aspectR","_area","_extraH","_components","getTextComponents","_iterator10","_step10","_iterator11","_step11","tArea","tExtraH","imgAR","flexW","nItems","_iterator12","_step12","_step12$value","thisTxtArea","thisTxtExtraH","_iterator13","_step13","component","cmpProps","thisAspectR","_tArea","_tExtraH","_imgAR","_flexW","_nItems","targetHeight","h0","_quadraticRoots","_quadraticRoots2","h2","h1","hR0","hR1","hR2","hF2","hF1","_quadraticRoots3","_quadraticRoots4","hConstr1","hConstr2","tw0","iw0","freeSpace0","Scrollbar","_Scrollbar$get","getScrollableProps","ourScrollable","getScrollable","main","PREFIX_CONTAINER","PREFIX_CONTENT","PREFIX_BAR","PREFIX_FILL","PREFIX_SPACER","PREFIX_HANDLE","PREFIX_DRAGGABLE","PREFIX_CLICKABLE","PREFIX_HAS_WRAPPER","PREFIX_ALLOW_COLLAPSE","PREFIX_HAS_FIXED_HEIGHT","PREFIX_HAS_SCROLLBAR","PREFIX_HIDE_SCROLL","S_SET_POINTER_CAPTURE","S_RELEASE_POINTER_CAPTURE","S_ARIA_VALUENOW","S_SCROLLBAR","hideNative","onMobile","positionH","positionV","autoHide","clickScroll","dragScroll","useHandle","defaultScrollable","isBody","isMainScrollable","isBodyInQuirks","needsSticky","barParent","hasFixedHeight","contentWrapper","_config$onMobile","_config$hideNative","_config$autoHide","_config$clickScroll","_config$dragScroll","_config$useHandle","autoHideDelay","newScrollbar","barIsHorizontal","scrollbar","scrollDomID","fill","handle","_bar","_handle","_fill","setProgress","tracksH","hasBarPrefix","completeFraction","viewFraction","scrollAxis","scrollbarH","scrollbarV","viewFr","completeFr","updateProgress","setBoxMeasureProps","updatePropsOnResize","barHeight","isDragging","lastOffset","lastTargetFraction","scrollAction","onClickOrDrag","isClick","isHandleClick","startsDrag","barLength","currScrollOffset","maxScrollOffset","deltaOffset","handleLength","targetScrollOffset","_scrollAction","handleH","handleV","setOrReleasePointerCapture","onRelease","onClickOrDragH","onClickOrDragV","onReleaseH","onReleaseV","maybeSetNativeHidden","setNativeShown","addWatchers","removeWatchers","_newScrollbar","_newScrollbar2","padding","pointerId","ScrollToTop","_ScrollToTop$get","clickListener","showIt","hideIt","button","Sortable","_Sortable$get","disableItem","_disableItem","enableItem","_enableItem","toggleItem","_toggleItem","isItemDisabled","_isItemDisabled","onMove","_onMove","currentOrder","_getSortedItems","PREFIX_IS_DRAGGABLE","PREFIX_FLOATING_CLONE","mode","touchMoveOptions","isItemDraggable","currentDraggedItem","floatingClone","ignoreCancel","grabOffset","setIgnoreCancel","onDragStart","currTarget","releasePointerCapture","onTouchMove","onDragEnd","onDragEnter","dragged","_dragItemOnto","setupEvents","doSwap","disabledItems","getSortedItems","getOrigItemNumber","itemNum","dragItemOnto","draggedOver","TrackGesture","minDeltaX","maxDeltaX","minDeltaY","maxDeltaY","minDeltaZ","maxDeltaZ","TrackScroll","TrackSize","TrackView","withNativeBlob","withNativeArrayBuffer","isView","lookup","decode","protocol","globalThis","DEFAULT_TRANSPORTS","RESERVED_EVENTS","Engine"],"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","x_google_ignoreList":[84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111]}