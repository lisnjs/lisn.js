{"version":3,"file":"pager.js","names":["MC","MH","disableInitialTransition","addClasses","removeClassesNow","getData","setData","setBooleanData","delDataNow","getComputedStyleProp","setStyleProp","delStylePropNow","waitForMeasureTime","waitForMutateTime","getVisibleContentChildren","addEventListenerTo","removeEventListenerFrom","isValidInputDevice","toInt","toBoolean","getClosestScrollable","formatAsString","validateStrList","validateNumber","validateString","validateBoolean","wrapCallback","GestureWatcher","ScrollWatcher","SizeWatcher","ViewWatcher","Widget","registerWidget","getDefaultWidgetSelector","debug","Pager","get","element","instance","DUMMY_ID","isInstanceOf","register","WIDGET_NAME","config","configValidator","constructor","_Pager$get","destroyPromise","destroy","id","_defineProperty","pages","toggles","switches","nextPrevSwitch","_next","nextSwitch","_prev","prevSwitch","pageSelector","PREFIX_PAGE__FOR_SELECT","toggleSelector","PREFIX_TOGGLE__FOR_SELECT","switchSelector","PREFIX_SWITCH__FOR_SELECT","nextSwitchSelector","PREFIX_NEXT_SWITCH__FOR_SELECT","prevSwitchSelector","PREFIX_PREV_SWITCH__FOR_SELECT","lengthOf","push","querySelectorAll","filter","e","matches","querySelector","numPages","usageError","page","contains","components","_pages","_toggles","_switches","_nextPrevSwitch","methods","getMethods","promiseResolve","then","isDestroyed","init","nextPage","_nextPage","prevPage","_prevPage","goToPage","pageNum","_goToPage","disablePage","_disablePage","enablePage","_enablePage","togglePage","_togglePage","isPageDisabled","_isPageDisabled","getCurrentPage","_getCurrentPage","getPreviousPage","_getPreviousPage","getCurrentPageNum","_getCurrentPageNum","getPreviousPageNum","_getPreviousPageNum","onTransition","_onTransition","getPages","getSwitches","getToggles","MIN_TIME_BETWEEN_WHEEL","S_CURRENT","S_ARIA_CURRENT","ARIA_PREFIX","S_COVERED","S_NEXT","S_TOTAL_PAGES","S_VISIBLE_PAGES","S_CURRENT_PAGE","S_PAGE_NUMBER","PREFIXED_NAME","prefixName","PREFIX_ROOT","PREFIX_PAGE_CONTAINER","PREFIX_PAGE","PREFIX_STYLE","PREFIX_IS_FULLSCREEN","PREFIX_USE_PARALLAX","PREFIX_TOTAL_PAGES","PREFIX_VISIBLE_PAGES","PREFIX_CURRENT_PAGE","PREFIX_CURRENT_PAGE_IS_LAST","PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED","PREFIX_CURRENT_PAGE_IS_LAST_ENABLED","PREFIX_PAGE_STATE","PREFIX_PAGE_NUMBER","VAR_CURRENT_PAGE","prefixCssJsVar","VAR_TOTAL_PAGES","VAR_VISIBLE_PAGES","VAR_VISIBLE_GAPS","VAR_TRANSLATED_PAGES","VAR_TRANSLATED_GAPS","VAR_PAGE_NUMBER","SUPPORTED_STYLES","isValidStyle","value","includes","initialPage","style","key","pageSize","peek","fullscreen","parallax","horizontal","useGestures","isNullish","undefined","bool","alignGestureDirection","preventDefault","fetchClosestScrollable","_getClosestScrollable","active","setPageNumber","lastPromise","el","setPageState","state","setCurrentPage","pagerEl","pageNumbers","isFirstEnabled","isLastEnabled","n","_total","_current","widget","_config$initialPage","_config$style","_config$pageSize","_config$peek","_config$fullscreen","_config$parallax","_config$horizontal","_config$useGestures","_config$alignGestureD","_config$preventDefaul","logger","Logger","name","logAtCreation","pageContainer","parentOf","pagerStyle","isCarousel","minPageSize","enablePeek","isFullscreen","isParallax","isHorizontal","orientation","S_HORIZONTAL","S_VERTICAL","scrollWatcher","reuse","sizeWatcher","resizeThreshold","gestureWatcher","viewWatcher","rootMargin","threshold","recalculateCarouselProps","t","data","gap","parseFloat","containerSize","content","S_WIDTH","S_HEIGHT","getNumVisiblePages","addPeek","numVisiblePages","max","min","floor","debug8","currPageNum","prevPageNum","numHidden","hasPeek","visibleStart","isAtEdge","numTranslated","ceil","numVisibleGaps","fractionalNumVisiblePages","getGestureOptions","directions","devices","isBoolean","intents","S_DRAG","S_SCROLL","deltaThreshold","scrollToPager","scrollTo","scrollable","transitionOnGesture","target","swapDirection","intent","S_LEFT","S_UP","direction","addWatchers","onGesture","S_RIGHT","S_DOWN","onResize","onView","views","removeWatchers","offGesture","offResize","offView","getPageNumForEvent","event","currentTargetOf","isElement","toggleClickListener","switchClickListener","nextSwitchClickListener","prevSwitchClickListener","onDisable","onEnable","onDestroy","PREFIX_ORIENTATION","idx","listener","S_CLICK","delAttr","disabledPages","callbacks","newSet","fetchScrollOptions","asFractionOf","weCanInterrupt","lastPageNum","lastTransition","canTransition","gestureData","isDisabled","device","S_WHEEL","timeNow","scroll","callback","invoke","setAttr","targetPage","S_DISABLED","handler","add"],"sources":["../../../src/ts/widgets/pager.ts"],"sourcesContent":["/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  addClasses,\n  removeClassesNow,\n  getData,\n  setData,\n  setBooleanData,\n  delDataNow,\n  getComputedStyleProp,\n  setStyleProp,\n  delStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { isValidInputDevice } from \"@lisn/utils/gesture\";\nimport { toInt } from \"@lisn/utils/math\";\nimport { toBoolean } from \"@lisn/utils/misc\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateNumber,\n  validateString,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport {\n  GestureWatcher,\n  OnGestureOptions,\n  GestureData,\n} from \"@lisn/watchers/gesture-watcher\";\nimport { ScrollWatcher, ScrollOptions } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  WidgetCallback,\n  WidgetHandler,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * Configures the given element as a {@link Pager} widget.\n *\n * The Pager widget sets up the elements that make up its pages to be overlayed\n * on top of each other with only one of them visible at a time. When a user\n * performs a scroll-like gesture (see {@link GestureWatcher}), the pages are\n * flicked through: gestures, whose direction is down (or left) result in the\n * next page being shown, otherwise the previous.\n *\n * The widget should have more than one page.\n *\n * Optionally, the widget can have a set of \"switch\" elements and a set of\n * \"toggle\" elements which correspond one-to-one to each page. Switches go to\n * the given page and toggles toggle the enabled/disabled state of the page.\n *\n * **IMPORTANT:** Unless the {@link PagerConfig.style} is set to \"carousel\", the\n * page elements will be positioned absolutely, and therefore the pager likely\n * needs to have an explicit height. If you enable\n * {@link PagerConfig.fullscreen}, then the element will get `height: 100vh`\n * set. Otherwise, you need to set its height in your CSS.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Pager}\n * widget on a given element. Use {@link Pager.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the pager element:\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n * - `data-lisn-use-parallax`: `\"true\"` or `\"false\"`\n * - `data-lisn-total-pages`: the number of pages\n * - `data-lisn-visible-pages`: **for carousel only** the number of visible pages;\n *   can be fractional if {@link PagerConfig.peek} is enabled\n * - `data-lisn-current-page`: the current page number\n * - `data-lisn-current-page-is-last`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-first-enabled`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-last-enabled`: `\"true\"` or `\"false\"`\n *\n * The following dynamic CSS properties are also set on the pager element's style:\n * - `--lisn-js--total-pages`: the number of pages\n * - `--lisn-js--visible-pages`: **for carousel only** the number of visible pages\n * - `--lisn-js--current-page`: the current page number\n *\n * The following dynamic attributes are set on each page, toggle or switch element:\n * - `data-lisn-page-state`: `\"current\"`, `\"next\"`, `\"covered\"` or `\"disabled\"`\n * - `data-lisn-page-number`: the corresponding page's number\n *\n * The following analogous dynamic CSS properties are also set on each page,\n * toggle or switch element's style:\n * - `--lisn-js--page-number`: the corresponding page's number\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-pager` class or `data-lisn-pager` attribute set on the container\n *   element that constitutes the pager\n * - `lisn-pager-page` class or `data-lisn-pager-page` attribute set on\n *   elements that should act as the pages.\n * - `lisn-pager-toggle` class or `data-lisn-pager-toggle` attribute set on\n *   elements that should act as the toggles.\n * - `lisn-pager-switch` class or `data-lisn-pager-switch` attribute set on\n *   elements that should act as the switches.\n *\n * When using auto-widgets, the elements that will be used as pages are\n * discovered in the following way:\n * 1. The top-level element that constitutes the widget is searched for any\n *    elements that contain the `lisn-pager-page` class or\n *    `data-lisn-pager-page` attribute. They do not have to be immediate\n *    children of the root element, but they **should** all be siblings.\n * 2. If there are no such elements, all of the immediate children of the\n *    widget element except any `script` or `style` elements are taken as the\n *    pages.\n *\n * The toggles and switches are descendants of the top-level element that\n * constitutes the widget, that contain the\n * `lisn-pager-toggle`/`lisn-pager-switch` class or `data-lisn-pager-toggle`/\n * `data-lisn-pager-switch` attribute. They do not have to be immediate\n * children of the root element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple pager with default settings.\n *\n * ```html\n * <div class=\"lisn-pager\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * As above but with all settings explicitly set to their default (`false`).\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen=false | parallax=false | horizontal=false\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>Horizontal: Page 1</div>\n *   <div>Horizontal: Page 2</div>\n *   <div>Horizontal: Page 3</div>\n *   <div>Horizontal: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings, as well as toggle and switch buttons.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>\n *     <div data-lisn-pager-page>Horizontal: Page 1</div>\n *     <div data-lisn-pager-page>Horizontal: Page 2</div>\n *     <div data-lisn-pager-page>Horizontal: Page 3</div>\n *     <div data-lisn-pager-page>Horizontal: Page 4</div>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-toggle>Toggle page 1</button>\n *     <button data-lisn-pager-toggle>Toggle page 2</button>\n *     <button data-lisn-pager-toggle>Toggle page 3</button>\n *     <button data-lisn-pager-toggle>Toggle page 4</button>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-switch>Go to page 1</button>\n *     <button data-lisn-pager-switch>Go to page 2</button>\n *     <button data-lisn-pager-switch>Go to page 3</button>\n *     <button data-lisn-pager-switch>Go to page 4</button>\n *   </div>\n * </div>\n * ```\n */\nexport class Pager extends Widget {\n  /**\n   * Advances the widget's page by 1. If the current page is the last one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled down/right\n   * (depending on the gesture direction).\n   */\n  readonly nextPage: () => Promise<void>;\n\n  /**\n   * Reverses the widget's page by 1. If the current page is the first one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled up/left\n   * (depending on the gesture direction).\n   */\n  readonly prevPage: () => Promise<void>;\n\n  /**\n   * Advances the widget to the given page. Note that page numbers start at 1.\n   *\n   * If this page is disabled, nothing is done.\n   */\n  readonly goToPage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Disables the given page number. Note that page numbers start at 1.\n   *\n   * The page will be skipped during transitioning to previous/next.\n   *\n   * If the page is the current one, then the current page will be switched to\n   * the previous one (that's not disabled), or if this is the first enabled\n   * page, then it will switch to the next one that's not disabled.\n   *\n   * If this is the last enabled page, nothing is done.\n   */\n  readonly disablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page number. Note that page numbers start at 1.\n   */\n  readonly enablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page if it is disabled, otherwise disables it. Note\n   * that page numbers start at 1.\n   */\n  readonly togglePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Returns true if the given page number is disabled. Note that page\n   * numbers start at 1.\n   */\n  readonly isPageDisabled: (pageNum: number) => boolean;\n\n  /**\n   * Returns the current page.\n   */\n  readonly getCurrentPage: () => Element;\n\n  /**\n   * Returns the previous page, before the last transition.\n   *\n   * If there has been no change of page, returns the first page, same as\n   * {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPage: () => Element;\n\n  /**\n   * Returns the number of the current page. Note that numbers start at 1.\n   */\n  readonly getCurrentPageNum: () => number;\n\n  /**\n   * Returns the number of the previous page, before the last transition. Note\n   * that numbers start at 1.\n   *\n   * If there has been no change of page, returns the number of the first page,\n   * same as {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPageNum: () => number;\n\n  /**\n   * The given handler will be called whenever there is a change of page. It\n   * will be called after the current page number is updated internally (so\n   * {@link getPreviousPageNum} and {@link getCurrentPageNum} will return the\n   * updated numbers), but before the page transition styles are updated.\n   *\n   * If the handler returns a promise, it will be awaited upon.\n   */\n  readonly onTransition: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns the page elements.\n   */\n  readonly getPages: () => Element[];\n\n  /**\n   * Returns the toggle elements if any.\n   */\n  readonly getToggles: () => Element[];\n\n  /**\n   * Returns the switch elements if any.\n   */\n  readonly getSwitches: () => Element[];\n\n  static get(element: Element): Pager | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Pager)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!Pager.get(element)) {\n          return new Pager(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If there are less than 2 pages given or found, or if any\n   *                page is not a descendant of the main pager element.\n   */\n  constructor(element: Element, config?: PagerConfig) {\n    const destroyPromise = Pager.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const pages = config?.pages || [];\n    const toggles = config?.toggles || [];\n    const switches = config?.switches || [];\n    const nextPrevSwitch = {\n      _next: config?.nextSwitch || null,\n      _prev: config?.prevSwitch || null,\n    };\n\n    const pageSelector = getDefaultWidgetSelector(PREFIX_PAGE__FOR_SELECT);\n    const toggleSelector = getDefaultWidgetSelector(PREFIX_TOGGLE__FOR_SELECT);\n    const switchSelector = getDefaultWidgetSelector(PREFIX_SWITCH__FOR_SELECT);\n    const nextSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_NEXT_SWITCH__FOR_SELECT,\n    );\n    const prevSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_PREV_SWITCH__FOR_SELECT,\n    );\n\n    if (!MH.lengthOf(pages)) {\n      pages.push(...MH.querySelectorAll(element, pageSelector));\n\n      if (!MH.lengthOf(pages)) {\n        pages.push(\n          ...getVisibleContentChildren(element).filter(\n            (e) => !e.matches(switchSelector),\n          ),\n        );\n      }\n    }\n\n    if (!MH.lengthOf(toggles)) {\n      toggles.push(...MH.querySelectorAll(element, toggleSelector));\n    }\n\n    if (!MH.lengthOf(switches)) {\n      switches.push(...MH.querySelectorAll(element, switchSelector));\n    }\n\n    if (!nextPrevSwitch._next) {\n      nextPrevSwitch._next = MH.querySelector(element, nextSwitchSelector);\n    }\n\n    if (!nextPrevSwitch._prev) {\n      nextPrevSwitch._prev = MH.querySelector(element, prevSwitchSelector);\n    }\n\n    const numPages = MH.lengthOf(pages);\n    if (numPages < 2) {\n      throw MH.usageError(\"Pager must have more than 1 page\");\n    }\n\n    for (const page of pages) {\n      if (!element.contains(page) || page === element) {\n        throw MH.usageError(\"Pager's pages must be its descendants\");\n      }\n    }\n\n    const components = {\n      _pages: pages,\n      _toggles: toggles,\n      _switches: switches,\n      _nextPrevSwitch: nextPrevSwitch,\n    };\n\n    const methods = getMethods(this, components, element, config);\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, element, components, config, methods);\n    });\n\n    this.nextPage = () => methods._nextPage();\n    this.prevPage = () => methods._prevPage();\n    this.goToPage = (pageNum) => methods._goToPage(pageNum);\n    this.disablePage = methods._disablePage;\n    this.enablePage = methods._enablePage;\n    this.togglePage = methods._togglePage;\n    this.isPageDisabled = methods._isPageDisabled;\n    this.getCurrentPage = methods._getCurrentPage;\n    this.getPreviousPage = methods._getPreviousPage;\n    this.getCurrentPageNum = methods._getCurrentPageNum;\n    this.getPreviousPageNum = methods._getPreviousPageNum;\n    this.onTransition = methods._onTransition;\n\n    this.getPages = () => [...pages];\n    this.getSwitches = () => [...switches];\n    this.getToggles = () => [...toggles];\n  }\n}\n\n/**\n * @interface\n */\nexport type PagerConfig = {\n  /**\n   * The elements that will make up the pages.\n   *\n   * They do not have to be immediate children of the root element, but they\n   * should all be siblings.\n   *\n   * The widget should have more than one page.\n   *\n   * If this is not specified, then\n   * 1. The top-level element that constitutes the widget is searched for any\n   *    elements that contain the `lisn-pager-page` class or the\n   *    `data-lisn-pager-page` attribute, and these are used as pages.\n   * 2. If there are no such elements, all of the immediate children of the\n   *    widget element (other than `script` and `style` elements) are taken as\n   *    the pages.\n   *\n   * **IMPORTANT:** Unless the {@link style} is set to \"carousel\", the page\n   * elements will be positioned absolutely, and therefore the pager likely\n   * needs to have an explicit height. If you enable {@link fullscreen}, then\n   * the element will get `height: 100vh` set. Otherwise, you need to set its\n   * height in your CSS.\n   *\n   * @defaultValue undefined\n   */\n  pages?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that toggles the\n   * enabled/disabled state of the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-toggle`\n   * class or the `data-lisn-pager-toggle` attribute, and these are used as\n   * toggles.\n   *\n   * @defaultValue undefined\n   */\n  toggles?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that switches the\n   * pager to the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-switch`\n   * class or the `data-lisn-pager-switch` attribute, and these are used as\n   * switches.\n   *\n   * @defaultValue undefined\n   */\n  switches?: Element[];\n\n  /**\n   * This element will be assigned a click listener that goes to the next page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-next-switch` class or the `data-lisn-pager-next-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  nextSwitch?: Element;\n\n  /**\n   * This element will be assigned a click listener that goes to the previous\n   * page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-prev-switch` class or the `data-lisn-pager-prev-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  prevSwitch?: Element;\n\n  /**\n   * Set the initial page number.\n   *\n   * @defaultValue 1\n   */\n  initialPage?: number;\n\n  /**\n   * Set the style of the widget. This determines the basic CSS applied.\n   *\n   * When importing the stylesheets in your project, if not using the full\n   * stylesheet (lisn.css) you can import either pager.css which contains all\n   * three pager styles, or only `pager-<style>.css`.\n   *\n   * **NOTE:** The base css only includes the minimum required for positioning\n   * and transitioning pages. The switches and toggles are intentionally not\n   * styled for flexibility. You should style those in your CSS.\n   *\n   * **IMPORTANT:** Unless the {@link style} is set to \"carousel\", the page\n   * elements will be positioned absolutely, and therefore the pager likely\n   * needs to have an explicit height. If you enable {@link fullscreen}, then\n   * the element will get `height: 100vh` set. Otherwise, you need to set its\n   * height in your CSS.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue \"slider\"\n   */\n  style?: \"slider\" | \"carousel\" | \"tabs\";\n\n  /**\n   * Only relevant is {@link style} is \"carousel\".\n   *\n   * The *minimum* page height (or width in {@link horizontal} mode) in pixels.\n   * This will determine the number of visible slides at any one width of the\n   * pager. Pages will still grow to fill the size of the carousel itself.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue 300\n   */\n  pageSize?: number;\n\n  /**\n   * Only relevant is {@link style} is \"carousel\".\n   *\n   * Whether to show a bit of the upcoming and/or previous pages that are\n   * hidden when not all fit.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue false\n   */\n  peek?: boolean;\n\n  /**\n   * If true, then:\n   * - if the pager {@link style} is \"slider\", the pager's height will be set\n   *   to the viewport height (100vh)\n   * - the pager's scrolling ancestor will be scrolled to the top of the pager\n   *   when 30% of it is in view\n   * - scrolling beyond the first or last page will initiate scroll up/left or\n   *   down/right the pager's scrolling ancestor in order to allow \"leaving\"\n   *   the pager\n   *\n   * Note that except in \"carousel\" {@link style} the pager's pages will be\n   * positioned absolutely, and so if you do _not_ enable this option, you will\n   * need to manually set the height of the page parent element via CSS.\n   *\n   * @defaultValue false\n   */\n  fullscreen?: boolean;\n\n  /**\n   * Only relevant is {@link style} is \"slider\" (default) or \"carousel\".\n   *\n   * Use a parallax effect for switching pages.\n   *\n   * @defaultValue false\n   */\n  parallax?: boolean;\n\n  /**\n   * Only relevant is {@link style} is \"slider\" (default) or \"carousel\".\n   *\n   * Transition pages sideways instead of vertically.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Transition pages upon user scroll-like and drag-like gestures via the\n   * given {@link GestureDevice}s. If set to true, then gestures using all\n   * device types are supported.\n   *\n   * Note that drag gesture is only supported by the \"pointer\" device and also\n   * the \"pointer\" device only supports drag gestures, so if you want to\n   * disable drag gestures, simply pass \"wheel,key,touch\" as this option.\n   *\n   * @defaultValue true\n   */\n  useGestures?: boolean | CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If true, then pages will be advanced backwards/forwards regardless if the\n   * gesture direction is horizontal or vertical.\n   *\n   * If false then, a gesture will go to the next page only if its direction is\n   * down if {@link horizontal} is false/right if {@link horizontal} is true,\n   * and to the previous page only if the gesture direction is up if\n   * {@link horizontal} is false/left if {@link horizontal} is true.\n   *\n   * **IMPORTANT:**\n   * If {@link fullscreen}, {@link preventDefault} and\n   * {@link alignGestureDirection} are all true, then the pager's scrollable\n   * parent must be scrollable in the same direction as the pager orientation,\n   * otherwise automatic scroll beyond the last/first page won't work.\n   *\n   * @defaultValue false\n   */\n  alignGestureDirection?: boolean;\n\n  /**\n   * Whether to prevent the default action for events that would result in\n   * gestures.\n   *\n   * **NOTE:**\n   * If true (default), then all events that originate from a device given in\n   * {@link useGestures} and that could result in a gesture will be prevented\n   * regardless of their direction and whether {@link alignGestureDirection} is\n   * true.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n};\n\n// --------------------\n\ntype Components = {\n  _pages: Element[];\n  _toggles: Element[];\n  _switches: Element[];\n  _nextPrevSwitch: { _next: Element | null; _prev: Element | null };\n};\n\n// Swiping on some trackpads results in \"trailing\" wheel events sent for some\n// while which results in multiple pages being advanced in a short while. So we\n// limit how often pages can be advanced.\nconst MIN_TIME_BETWEEN_WHEEL = 1000;\n\nconst S_CURRENT = \"current\";\nconst S_ARIA_CURRENT = MC.ARIA_PREFIX + S_CURRENT;\nconst S_COVERED = \"covered\";\nconst S_NEXT = \"next\";\nconst S_TOTAL_PAGES = \"total-pages\";\nconst S_VISIBLE_PAGES = \"visible-pages\";\nconst S_CURRENT_PAGE = \"current-page\";\nconst S_PAGE_NUMBER = \"page-number\";\nconst WIDGET_NAME = \"pager\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_PAGE_CONTAINER = `${PREFIXED_NAME}__page-container`;\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_PAGE = `${PREFIXED_NAME}__page`;\nconst PREFIX_PAGE__FOR_SELECT = `${PREFIXED_NAME}-page`;\nconst PREFIX_TOGGLE__FOR_SELECT = `${PREFIXED_NAME}-toggle`;\nconst PREFIX_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-switch`;\nconst PREFIX_NEXT_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-next-switch`;\nconst PREFIX_PREV_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-prev-switch`;\n\nconst PREFIX_STYLE = `${PREFIXED_NAME}-style`;\nconst PREFIX_IS_FULLSCREEN = MH.prefixName(\"is-fullscreen\");\nconst PREFIX_USE_PARALLAX = MH.prefixName(\"use-parallax\");\nconst PREFIX_TOTAL_PAGES = MH.prefixName(S_TOTAL_PAGES);\nconst PREFIX_VISIBLE_PAGES = MH.prefixName(S_VISIBLE_PAGES);\nconst PREFIX_CURRENT_PAGE = MH.prefixName(S_CURRENT_PAGE);\nconst PREFIX_CURRENT_PAGE_IS_LAST = `${PREFIX_CURRENT_PAGE}-is-last`;\nconst PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED = `${PREFIX_CURRENT_PAGE}-is-first-enabled`;\nconst PREFIX_CURRENT_PAGE_IS_LAST_ENABLED = `${PREFIX_CURRENT_PAGE_IS_LAST}-enabled`;\nconst PREFIX_PAGE_STATE = MH.prefixName(\"page-state\");\nconst PREFIX_PAGE_NUMBER = MH.prefixName(S_PAGE_NUMBER);\nconst VAR_CURRENT_PAGE = MH.prefixCssJsVar(S_CURRENT_PAGE);\nconst VAR_TOTAL_PAGES = MH.prefixCssJsVar(S_TOTAL_PAGES);\nconst VAR_VISIBLE_PAGES = MH.prefixCssJsVar(S_VISIBLE_PAGES);\nconst VAR_VISIBLE_GAPS = MH.prefixCssJsVar(\"visible-gaps\");\nconst VAR_TRANSLATED_PAGES = MH.prefixCssJsVar(\"translated-pages\");\nconst VAR_TRANSLATED_GAPS = MH.prefixCssJsVar(\"translated-gaps\");\nconst VAR_PAGE_NUMBER = MH.prefixCssJsVar(S_PAGE_NUMBER);\n\n// Only one Pager widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\nconst SUPPORTED_STYLES = [\"slider\", \"carousel\", \"tabs\"] as const;\ntype PagerStyle = (typeof SUPPORTED_STYLES)[number];\n\nconst isValidStyle = (value: string): value is PagerStyle =>\n  MH.includes(SUPPORTED_STYLES, value);\n\nconst configValidator: WidgetConfigValidatorObject<PagerConfig> = {\n  initialPage: validateNumber,\n  style: (key, value) => validateString(key, value, isValidStyle),\n  pageSize: validateNumber,\n  peek: validateBoolean,\n  fullscreen: validateBoolean,\n  parallax: validateBoolean,\n  horizontal: validateBoolean,\n  useGestures: (key, value) => {\n    if (MH.isNullish(value)) {\n      return undefined;\n    }\n\n    const bool = toBoolean(value);\n    if (bool !== null) {\n      return bool;\n    }\n\n    return (\n      validateStrList(\n        \"useGestures\",\n        validateString(key, value),\n        isValidInputDevice,\n      ) || true\n    );\n  },\n  alignGestureDirection: validateBoolean,\n  preventDefault: validateBoolean,\n};\n\nconst fetchClosestScrollable = (element: Element) =>\n  waitForMeasureTime().then(\n    () => getClosestScrollable(element, { active: true }) ?? undefined,\n  );\n\nconst setPageNumber = (components: Components, pageNum: number) => {\n  let lastPromise: Promise<void> = MH.promiseResolve();\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      setData(el, PREFIX_PAGE_NUMBER, pageNum + \"\");\n      lastPromise = setStyleProp(el, VAR_PAGE_NUMBER, pageNum + \"\");\n    }\n  }\n\n  return lastPromise;\n};\n\nconst setPageState = async (\n  components: Components,\n  pageNum: number,\n  state: string,\n) => {\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      await setData(el, PREFIX_PAGE_STATE, state);\n    }\n  }\n};\n\nconst setCurrentPage = (\n  pagerEl: Element,\n  pageNumbers: {\n    _current: number;\n    _total: number;\n  },\n  isPageDisabled: (pageNum: number) => boolean,\n) => {\n  let isFirstEnabled = true;\n  let isLastEnabled = true;\n  for (let n = 1; n <= pageNumbers._total; n++) {\n    if (!isPageDisabled(n)) {\n      if (n < pageNumbers._current) {\n        isFirstEnabled = false;\n      } else if (n > pageNumbers._current) {\n        isLastEnabled = false;\n      }\n    }\n  }\n\n  setStyleProp(pagerEl, VAR_CURRENT_PAGE, pageNumbers._current + \"\");\n  setData(pagerEl, PREFIX_CURRENT_PAGE, pageNumbers._current + \"\");\n  setBooleanData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST,\n    pageNumbers._current === pageNumbers._total,\n  );\n  setBooleanData(pagerEl, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED, isFirstEnabled);\n  return setBooleanData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST_ENABLED,\n    isLastEnabled,\n  );\n};\n\nconst init = (\n  widget: Pager,\n  element: Element,\n  components: Components,\n  config: PagerConfig | undefined,\n  methods: ReturnType<typeof getMethods>,\n) => {\n  const logger = debug\n    ? new debug.Logger({\n        name: `Pager-${formatAsString(element)}`,\n        logAtCreation: config,\n      })\n    : null;\n\n  const pages = components._pages;\n  const toggles = components._toggles;\n  const switches = components._switches;\n  const nextSwitch = components._nextPrevSwitch._next;\n  const prevSwitch = components._nextPrevSwitch._prev;\n  const pageContainer = MH.parentOf(pages[0]);\n\n  let initialPage = toInt(config?.initialPage ?? 1);\n  const pagerStyle = config?.style ?? \"slider\";\n  const isCarousel = pagerStyle === \"carousel\";\n  const minPageSize = config?.pageSize ?? 300;\n  const enablePeek = config?.peek ?? false;\n  const isFullscreen = config?.fullscreen ?? false;\n  const isParallax = config?.parallax ?? false;\n  const isHorizontal = config?.horizontal ?? false;\n  const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n  const useGestures = config?.useGestures ?? true;\n  const alignGestureDirection = config?.alignGestureDirection ?? false;\n  const preventDefault = config?.preventDefault ?? true;\n\n  const scrollWatcher = ScrollWatcher.reuse();\n  const sizeWatcher = isCarousel\n    ? SizeWatcher.reuse({ resizeThreshold: 10 })\n    : null;\n  const gestureWatcher = useGestures ? GestureWatcher.reuse() : null;\n  const viewWatcher = isFullscreen\n    ? ViewWatcher.reuse({ rootMargin: \"0px\", threshold: 0.3 })\n    : null;\n\n  const recalculateCarouselProps = async (t?: Element, data?: SizeData) => {\n    if (data) {\n      // there's been a resize\n      const gap =\n        MH.parseFloat(await getComputedStyleProp(element, \"gap\")) || 0;\n      const containerSize =\n        data.content[isHorizontal ? MC.S_WIDTH : MC.S_HEIGHT];\n\n      const getNumVisiblePages = (addPeek = false) =>\n        (numVisiblePages = MH.max(\n          1, // at least 1\n          MH.min(\n            MH.floor(\n              (containerSize + gap - (addPeek ? 0.5 * minPageSize : 0)) /\n                (minPageSize + gap),\n            ),\n            numPages, // and at most total number\n          ),\n        ));\n\n      numVisiblePages = getNumVisiblePages();\n      if (enablePeek && numVisiblePages < numPages) {\n        // Not all pages fit now and we will add a \"peek\" from the pages on the\n        // edge.\n        // Re-calculate with peek added in case the resultant page size when we\n        // add the \"peek\" will make it smaller than the min.\n        numVisiblePages = getNumVisiblePages(true);\n      }\n\n      logger?.debug8(\"Pager resized\", { gap, containerSize, numVisiblePages });\n    } // otherwise just a page transition\n\n    const currPageNum = widget.getCurrentPageNum();\n    const prevPageNum = widget.getPreviousPageNum();\n    const numHidden = numPages - numVisiblePages;\n    const hasPeek = enablePeek && numVisiblePages < numPages;\n\n    // centre the current page as much as possible\n    let visibleStart = currPageNum - (numVisiblePages - 1) / 2;\n    let isAtEdge = false;\n\n    if (visibleStart >= numHidden + 1) {\n      visibleStart = numHidden + 1;\n      isAtEdge = true;\n    } else if (visibleStart <= 1) {\n      visibleStart = 1;\n      isAtEdge = true;\n    }\n\n    let numTranslated = 0;\n    if (hasPeek) {\n      numTranslated = MH.max(0, visibleStart - 1 - (isAtEdge ? 0.5 : 0.25));\n    } else {\n      numTranslated =\n        (prevPageNum > currPageNum ? MH.floor : MH.ceil)(visibleStart) - 1;\n    }\n\n    const numVisibleGaps = !hasPeek\n      ? numVisiblePages - 1\n      : isAtEdge || numVisiblePages % 2 === 0\n        ? numVisiblePages\n        : numVisiblePages + 1;\n\n    const fractionalNumVisiblePages = hasPeek\n      ? numVisiblePages + 0.5\n      : numVisiblePages;\n\n    logger?.debug8(\"Carousel calculations\", {\n      currPageNum,\n      prevPageNum,\n      visibleStart,\n      isAtEdge,\n      numVisiblePages,\n      numVisibleGaps,\n      numTranslated,\n    });\n\n    setData(element, PREFIX_VISIBLE_PAGES, fractionalNumVisiblePages + \"\");\n    setStyleProp(element, VAR_VISIBLE_PAGES, fractionalNumVisiblePages + \"\");\n    setStyleProp(element, VAR_VISIBLE_GAPS, numVisibleGaps + \"\");\n    setStyleProp(element, VAR_TRANSLATED_PAGES, numTranslated + \"\");\n    setStyleProp(element, VAR_TRANSLATED_GAPS, MH.floor(numTranslated) + \"\");\n  };\n\n  const getGestureOptions = (\n    directions: Direction | Direction[] | undefined,\n  ): OnGestureOptions => {\n    return {\n      devices: MH.isBoolean(useGestures) // i.e. true; if it's false, then gestureWatcher is null\n        ? undefined // all devices\n        : useGestures,\n      intents: [MC.S_DRAG, MC.S_SCROLL],\n      directions,\n      deltaThreshold: 25,\n      preventDefault,\n    };\n  };\n\n  const scrollToPager = async () => {\n    scrollWatcher.scrollTo(element, {\n      scrollable: await fetchClosestScrollable(element),\n    });\n  };\n\n  const transitionOnGesture = (target: EventTarget, data: GestureData) => {\n    const swapDirection = data.intent === MC.S_DRAG;\n\n    if (MH.includes([MC.S_LEFT, MC.S_UP], data.direction)) {\n      (swapDirection ? methods._nextPage : methods._prevPage)(data);\n    } else {\n      (swapDirection ? methods._prevPage : methods._nextPage)(data);\n    }\n  };\n\n  const addWatchers = () => {\n    gestureWatcher?.onGesture(\n      element,\n      transitionOnGesture,\n      getGestureOptions(\n        alignGestureDirection\n          ? isHorizontal\n            ? [MC.S_LEFT, MC.S_RIGHT]\n            : [MC.S_UP, MC.S_DOWN]\n          : undefined, // all directions\n      ),\n    );\n\n    sizeWatcher?.onResize(recalculateCarouselProps, { target: element });\n    viewWatcher?.onView(element, scrollToPager, { views: \"at\" });\n  };\n\n  const removeWatchers = () => {\n    gestureWatcher?.offGesture(element, transitionOnGesture);\n    sizeWatcher?.offResize(recalculateCarouselProps, element);\n    viewWatcher?.offView(element, scrollToPager);\n  };\n\n  const getPageNumForEvent = (event: Event) => {\n    const target = MH.currentTargetOf(event);\n    return MH.isElement(target)\n      ? toInt(getData(target, PREFIX_PAGE_NUMBER))\n      : 0;\n  };\n\n  const toggleClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._togglePage(pageNum);\n  };\n\n  const switchClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._goToPage(pageNum);\n  };\n\n  const nextSwitchClickListener = () => methods._nextPage();\n  const prevSwitchClickListener = () => methods._prevPage();\n\n  // SETUP ------------------------------\n\n  widget.onDisable(removeWatchers);\n  widget.onEnable(addWatchers);\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n    delDataNow(element, MC.PREFIX_ORIENTATION);\n    delDataNow(element, PREFIX_STYLE);\n    delDataNow(element, PREFIX_IS_FULLSCREEN);\n    delDataNow(element, PREFIX_USE_PARALLAX);\n    delDataNow(element, PREFIX_CURRENT_PAGE);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST_ENABLED);\n    delDataNow(element, PREFIX_TOTAL_PAGES);\n    delDataNow(element, PREFIX_VISIBLE_PAGES);\n    delStylePropNow(element, VAR_CURRENT_PAGE);\n    delStylePropNow(element, VAR_TOTAL_PAGES);\n    delStylePropNow(element, VAR_VISIBLE_PAGES);\n    delStylePropNow(element, VAR_VISIBLE_GAPS);\n    delStylePropNow(element, VAR_TRANSLATED_PAGES);\n    delStylePropNow(element, VAR_TRANSLATED_GAPS);\n\n    for (let idx = 0; idx < MH.lengthOf(pages); idx++) {\n      removeClassesNow(pages[idx], PREFIX_PAGE);\n\n      for (const [el, listener] of [\n        [pages[idx], null],\n        [toggles[idx], toggleClickListener],\n        [switches[idx], switchClickListener],\n      ] as const) {\n        if (el) {\n          delDataNow(el, PREFIX_PAGE_STATE);\n          delDataNow(el, PREFIX_PAGE_NUMBER);\n          delStylePropNow(el, VAR_PAGE_NUMBER);\n          if (listener) {\n            removeEventListenerFrom(el, MC.S_CLICK, listener);\n          }\n        }\n      }\n\n      MH.delAttr(pages[idx], S_ARIA_CURRENT);\n    }\n\n    if (nextSwitch) {\n      removeEventListenerFrom(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n    }\n\n    if (prevSwitch) {\n      removeEventListenerFrom(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n    }\n\n    removeClassesNow(element, PREFIX_ROOT);\n    if (pageContainer) {\n      removeClassesNow(pageContainer, PREFIX_PAGE_CONTAINER);\n    }\n  });\n\n  if (isCarousel) {\n    widget.onTransition(() => recalculateCarouselProps());\n  }\n\n  addWatchers();\n  addClasses(element, PREFIX_ROOT);\n  if (pageContainer) {\n    addClasses(pageContainer, PREFIX_PAGE_CONTAINER);\n  }\n\n  const numPages = MH.lengthOf(pages);\n  let numVisiblePages = numPages;\n\n  setData(element, MC.PREFIX_ORIENTATION, orientation);\n  setData(element, PREFIX_STYLE, pagerStyle);\n  setBooleanData(element, PREFIX_IS_FULLSCREEN, isFullscreen);\n  setBooleanData(element, PREFIX_USE_PARALLAX, isParallax);\n  setData(element, PREFIX_TOTAL_PAGES, numPages + \"\");\n  setStyleProp(element, VAR_TOTAL_PAGES, (numPages || 1) + \"\");\n\n  for (const page of pages) {\n    disableInitialTransition(page);\n    addClasses(page, PREFIX_PAGE);\n  }\n\n  for (let idx = 0; idx < numPages; idx++) {\n    setPageNumber(components, idx + 1);\n    setPageState(components, idx + 1, S_NEXT);\n\n    for (const [el, listener] of [\n      [toggles[idx], toggleClickListener],\n      [switches[idx], switchClickListener],\n    ] as const) {\n      if (el) {\n        addEventListenerTo(el, MC.S_CLICK, listener);\n      }\n    }\n  }\n\n  if (nextSwitch) {\n    addEventListenerTo(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n  }\n\n  if (prevSwitch) {\n    addEventListenerTo(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n  }\n\n  if (initialPage < 1 || initialPage > numPages) {\n    initialPage = 1;\n  }\n  methods._goToPage(initialPage);\n};\n\nconst getMethods = (\n  widget: Pager,\n  components: Components,\n  element: Element,\n  config: PagerConfig | undefined,\n) => {\n  const pages = components._pages;\n  const scrollWatcher = ScrollWatcher.reuse();\n  const isFullscreen = config?.fullscreen;\n  const disabledPages: Record<number, boolean> = {};\n  const callbacks = MH.newSet<WidgetCallback>();\n\n  const fetchScrollOptions = async (): Promise<ScrollOptions> => ({\n    scrollable: await fetchClosestScrollable(element),\n    // default amount is already 100%\n    asFractionOf: \"visible\",\n    weCanInterrupt: true,\n  });\n\n  let currPageNum = -1;\n  let lastPageNum = -1;\n  let lastTransition = 0;\n\n  const canTransition = (gestureData?: GestureData) => {\n    if (widget.isDisabled()) {\n      return false;\n    }\n\n    if (gestureData?.device !== MC.S_WHEEL) {\n      return true;\n    }\n\n    const timeNow = MH.timeNow();\n    if (timeNow - lastTransition > MIN_TIME_BETWEEN_WHEEL) {\n      lastTransition = timeNow;\n      return true;\n    }\n\n    return false;\n  };\n\n  const goToPage = async (pageNum: number, gestureData?: GestureData) => {\n    pageNum = toInt(pageNum, -1);\n    if (pageNum === currPageNum || !canTransition(gestureData)) {\n      return;\n    }\n\n    const numPages = MH.lengthOf(pages);\n\n    if (\n      (currPageNum === 1 && pageNum === 0) ||\n      (currPageNum === numPages && pageNum === numPages + 1)\n    ) {\n      // next/prev page beyond last/first\n      if (isFullscreen) {\n        scrollWatcher.scroll(\n          pageNum\n            ? gestureData?.direction === MC.S_RIGHT\n              ? MC.S_RIGHT\n              : MC.S_DOWN\n            : gestureData?.direction === MC.S_LEFT\n              ? MC.S_LEFT\n              : MC.S_UP,\n          await fetchScrollOptions(),\n        ); // no need to await\n      }\n\n      return;\n    }\n\n    if (isPageDisabled(pageNum) || pageNum < 1 || pageNum > numPages) {\n      // invalid or disabled\n      return;\n    }\n\n    lastPageNum = currPageNum > 0 ? currPageNum : pageNum;\n    currPageNum = pageNum;\n\n    for (const callback of callbacks) {\n      await callback.invoke(widget);\n    }\n\n    MH.delAttr(pages[lastPageNum - 1], S_ARIA_CURRENT);\n    for (\n      let n = lastPageNum;\n      n !== currPageNum;\n      currPageNum < lastPageNum ? n-- : n++\n    ) {\n      if (!isPageDisabled(n)) {\n        setPageState(\n          components,\n          n,\n          currPageNum < lastPageNum ? S_NEXT : S_COVERED,\n        );\n      }\n    }\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: numPages },\n      isPageDisabled,\n    );\n    MH.setAttr(pages[currPageNum - 1], S_ARIA_CURRENT);\n    await setPageState(components, currPageNum, S_CURRENT);\n  };\n\n  const nextPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum + 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage++;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const prevPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum - 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage--;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const isPageDisabled = (pageNum: number) => disabledPages[pageNum] === true;\n\n  const disablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || pageNum < 1 || pageNum > MH.lengthOf(pages)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = true;\n\n    if (pageNum === currPageNum) {\n      await prevPage();\n\n      if (pageNum === currPageNum) {\n        // was the first enabled one\n        await nextPage();\n\n        if (pageNum === currPageNum) {\n          // was the only enabled one\n          disabledPages[pageNum] = false;\n          return;\n        }\n      }\n    }\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: MH.lengthOf(pages) },\n      isPageDisabled,\n    );\n    await setPageState(components, pageNum, MC.S_DISABLED);\n  };\n\n  const enablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || !isPageDisabled(pageNum)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = false;\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: MH.lengthOf(pages) },\n      isPageDisabled,\n    );\n    await setPageState(\n      components,\n      pageNum,\n      pageNum < currPageNum ? S_COVERED : S_NEXT,\n    );\n  };\n\n  const togglePage = (pageNum: number) =>\n    isPageDisabled(pageNum) ? enablePage(pageNum) : disablePage(pageNum);\n\n  const onTransition = (handler: WidgetHandler) =>\n    callbacks.add(wrapCallback(handler));\n\n  return {\n    _nextPage: nextPage,\n    _prevPage: prevPage,\n    _goToPage: goToPage,\n    _disablePage: disablePage,\n    _enablePage: enablePage,\n    _togglePage: togglePage,\n    _isPageDisabled: isPageDisabled,\n    _getCurrentPage: () => pages[currPageNum - 1],\n    _getPreviousPage: () => pages[lastPageNum - 1],\n    _getCurrentPageNum: () => (MH.lengthOf(pages) > 0 ? currPageNum : 0),\n    _getPreviousPageNum: () => (MH.lengthOf(pages) > 0 ? lastPageNum : 0),\n    _onTransition: onTransition,\n  };\n};\n"],"mappings":";;;AAAA;AACA;AACA;;AAEA,OAAO,KAAKA,EAAE;AACd,OAAO,KAAKC,EAAE;AAQd,SACEC,wBAAwB,EACxBC,UAAU,EACVC,gBAAgB,EAChBC,OAAO,EACPC,OAAO,EACPC,cAAc,EACdC,UAAU,EACVC,oBAAoB,EACpBC,YAAY,EACZC,eAAe;AAEjB,SACEC,kBAAkB,EAClBC,iBAAiB;AAEnB,SAASC,yBAAyB;AAClC,SAASC,kBAAkB,EAAEC,uBAAuB;AACpD,SAASC,kBAAkB;AAC3B,SAASC,KAAK;AACd,SAASC,SAAS;AAClB,SAASC,oBAAoB;AAC7B,SAASC,cAAc;AACvB,SACEC,eAAe,EACfC,cAAc,EACdC,cAAc,EACdC,eAAe;AAGjB,SAASC,YAAY;AAErB,SACEC,cAAc;AAIhB,SAASC,aAAa;AACtB,SAASC,WAAW;AACpB,SAASC,WAAW;AAEpB,SACEC,MAAM,EAINC,cAAc,EACdC,wBAAwB;AAG1B,OAAOC,KAAK;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]}