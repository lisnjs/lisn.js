{"version":3,"file":"OpenableComponent.js","names":["_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","_objectWithoutProperties","_objectWithoutPropertiesLoose","n","indexOf","propertyIsEnumerable","hasOwnProperty","useEffect","createElement","Collapsible","Popup","Modal","Offcanvas","useWidget","getElementsFromRefs","CollapsibleComponent","_ref","config","widgetRef","props","elementRef","useOpenable","newCollapsible","createOpenableElement","name","element","HTMLElement","assign","triggers","PopupComponent","_ref2","newPopup","ModalComponent","_ref3","newModal","OffcanvasComponent","_ref4","newOffcanvas","CollapsibleTriggerComponent","allProps","TriggerComponent","PopupTriggerComponent","ModalTriggerComponent","OffcanvasTriggerComponent","_ref5","as","children","contentId","configStr","prop","newWidget","current","Element","classList","remove","_ref6","className","baseProps","ref","join"],"sources":["../../src/OpenableComponent.tsx"],"sourcesContent":["\"use client\";\nimport {\n  useEffect,\n  createElement,\n  ElementType,\n  RefObject,\n  ComponentRef,\n  ComponentPropsWithoutRef,\n} from \"react\";\n\nimport {\n  Collapsible,\n  CollapsibleConfig,\n  Popup,\n  PopupConfig,\n  Modal,\n  ModalConfig,\n  Offcanvas,\n  OffcanvasConfig,\n  OpenableTriggerConfig,\n  Openable,\n} from \"lisn.js\";\n\nimport { useWidget } from \"./useWidget\";\nimport { getElementsFromRefs } from \"./util\";\nimport {\n  WidgetComponentRef,\n  WidgetComponentProps,\n  GenericComponentProps,\n} from \"./types\";\n\nexport type CollapsibleComponentRef = WidgetComponentRef<Collapsible>;\n\nexport type CollapsibleComponentConfig = Omit<CollapsibleConfig, \"triggers\"> & {\n  triggers?: RefObject<Element | null>[];\n};\n\nexport type CollapsibleComponentProps<T extends ElementType> =\n  WidgetComponentProps<T, Collapsible, CollapsibleComponentConfig> & {\n    contentId?: string;\n  };\n\nexport const CollapsibleComponent = <T extends ElementType = \"div\">({\n  config,\n  widgetRef,\n  ...props\n}: CollapsibleComponentProps<T>) => {\n  const elementRef = useOpenable<T, Collapsible, CollapsibleComponentConfig>(\n    newCollapsible,\n    config,\n    widgetRef,\n  );\n\n  return createOpenableElement<T>({\n    name: \"collapsible\",\n    elementRef,\n    ...props,\n  } as OpenableProps<T>);\n};\n\nconst newCollapsible = (\n  element: Element,\n  config?: CollapsibleComponentConfig,\n) =>\n  element instanceof HTMLElement\n    ? new Collapsible(\n        element,\n        Object.assign({}, config, {\n          triggers: getElementsFromRefs(config?.triggers),\n        }),\n      )\n    : null;\n\n// ----------\n\nexport type PopupComponentRef = WidgetComponentRef<Popup>;\n\nexport type PopupComponentConfig = Omit<PopupConfig, \"triggers\"> & {\n  triggers?: RefObject<Element | null>[];\n};\n\nexport type PopupComponentProps<T extends ElementType> = WidgetComponentProps<\n  T,\n  Popup,\n  PopupComponentConfig\n> & { contentId?: string };\n\nexport const PopupComponent = <T extends ElementType = \"div\">({\n  config,\n  widgetRef,\n  ...props\n}: PopupComponentProps<T>) => {\n  const elementRef = useOpenable<T, Popup, PopupComponentConfig>(\n    newPopup,\n    config,\n    widgetRef,\n  );\n\n  return createOpenableElement<T>({\n    name: \"popup\",\n    elementRef,\n    ...props,\n  } as OpenableProps<T>);\n};\n\nconst newPopup = (element: Element, config?: PopupComponentConfig) =>\n  element instanceof HTMLElement\n    ? new Popup(\n        element,\n        Object.assign({}, config, {\n          triggers: getElementsFromRefs(config?.triggers),\n        }),\n      )\n    : null;\n\n// ----------\n\nexport type ModalComponentRef = WidgetComponentRef<Modal>;\n\nexport type ModalComponentConfig = Omit<ModalConfig, \"triggers\"> & {\n  triggers?: RefObject<Element | null>[];\n};\n\nexport type ModalComponentProps<T extends ElementType> = WidgetComponentProps<\n  T,\n  Modal,\n  ModalComponentConfig\n> & { contentId?: string };\n\nexport const ModalComponent = <T extends ElementType = \"div\">({\n  config,\n  widgetRef,\n  ...props\n}: ModalComponentProps<T>) => {\n  const elementRef = useOpenable<T, Modal, ModalComponentConfig>(\n    newModal,\n    config,\n    widgetRef,\n  );\n\n  return createOpenableElement<T>({\n    name: \"modal\",\n    elementRef,\n    ...props,\n  } as OpenableProps<T>);\n};\n\nconst newModal = (element: Element, config?: ModalComponentConfig) =>\n  element instanceof HTMLElement\n    ? new Modal(\n        element,\n        Object.assign({}, config, {\n          triggers: getElementsFromRefs(config?.triggers),\n        }),\n      )\n    : null;\n\n// ----------\n\nexport type OffcanvasComponentRef = WidgetComponentRef<Offcanvas>;\n\nexport type OffcanvasComponentConfig = Omit<OffcanvasConfig, \"triggers\"> & {\n  triggers?: RefObject<Element | null>[];\n};\n\nexport type OffcanvasComponentProps<T extends ElementType> =\n  WidgetComponentProps<T, Offcanvas, OffcanvasComponentConfig> & {\n    contentId?: string;\n  };\n\nexport const OffcanvasComponent = <T extends ElementType = \"div\">({\n  config,\n  widgetRef,\n  ...props\n}: OffcanvasComponentProps<T>) => {\n  const elementRef = useOpenable<T, Offcanvas, OffcanvasComponentConfig>(\n    newOffcanvas,\n    config,\n    widgetRef,\n  );\n\n  return createOpenableElement<T>({\n    name: \"offcanvas\",\n    elementRef,\n    ...props,\n  } as OpenableProps<T>);\n};\n\nconst newOffcanvas = (element: Element, config?: OffcanvasComponentConfig) =>\n  element instanceof HTMLElement\n    ? new Offcanvas(\n        element,\n        Object.assign({}, config, {\n          triggers: getElementsFromRefs(config?.triggers),\n        }),\n      )\n    : null;\n\n// ----------\n\nexport type OpenableTriggerComponentConfig = OpenableTriggerConfig;\n\nexport type OpenableTriggerComponentProps<T extends ElementType> =\n  GenericComponentProps<T> & {\n    as?: T;\n    config?: OpenableTriggerComponentConfig;\n    contentId?: string;\n  };\n\nexport const CollapsibleTriggerComponent = <T extends ElementType = \"div\">(\n  allProps: OpenableTriggerComponentProps<T>,\n) =>\n  TriggerComponent({\n    name: \"collapsible\",\n    ...allProps,\n  });\n\nexport const PopupTriggerComponent = <T extends ElementType = \"div\">(\n  allProps: OpenableTriggerComponentProps<T>,\n) =>\n  TriggerComponent({\n    name: \"popup\",\n    ...allProps,\n  });\n\nexport const ModalTriggerComponent = <T extends ElementType = \"div\">(\n  allProps: OpenableTriggerComponentProps<T>,\n) =>\n  TriggerComponent({\n    name: \"modal\",\n    ...allProps,\n  });\n\nexport const OffcanvasTriggerComponent = <T extends ElementType = \"div\">(\n  allProps: OpenableTriggerComponentProps<T>,\n) =>\n  TriggerComponent({\n    name: \"offcanvas\",\n    ...allProps,\n  });\n\nconst TriggerComponent = <T extends ElementType = \"div\">({\n  name,\n  as,\n  children,\n  config,\n  contentId,\n  ...props\n}: OpenableTriggerComponentProps<T> & { name: string }) => {\n  // Since a trigger config object can only be passed as part of the widget\n  // configuration (in a trigger map) and that is created in another component,\n  // we have to use data attributes to pass the config.\n  let configStr = \"\";\n  let prop: keyof OpenableTriggerConfig;\n  config = config || {};\n  for (prop in config) {\n    configStr += (configStr ? \"|\" : \"\") + prop + \"=\" + String(config[prop]);\n  }\n\n  return createElement(\n    as || \"div\",\n    {\n      [`data-lisn-${name}-trigger`]: configStr,\n      ...(contentId ? { [`data-lisn-${name}-content-id`]: contentId } : {}),\n      ...props,\n    },\n    children,\n  );\n};\n\n// --------------------\n\nconst useOpenable = <\n  T extends ElementType,\n  W extends Openable,\n  C extends object,\n>(\n  newWidget: (element: Element, config?: C) => W | null,\n  config?: C,\n  widgetRef?: RefObject<WidgetComponentRef<W> | null>,\n) => {\n  const elementRef = useWidget<T, W, C>(newWidget, config, widgetRef);\n\n  useEffect(() => {\n    const element = elementRef.current;\n    if (element instanceof Element) {\n      element.classList.remove(\"lisn-undisplay\");\n    }\n  }, [elementRef]);\n\n  return elementRef;\n};\n\ntype OpenableProps<T extends ElementType> = {\n  name: string;\n  elementRef: RefObject<ComponentRef<T> | null>;\n  as?: T;\n  contentId?: string;\n} & ComponentPropsWithoutRef<T>;\n\nconst createOpenableElement = <T extends ElementType = \"div\">({\n  name,\n  as,\n  contentId,\n  elementRef,\n  className,\n  children,\n  ...baseProps\n}: OpenableProps<T>) => {\n  return createElement(\n    as || \"div\",\n    {\n      ref: elementRef,\n      ...(contentId ? { [`data-lisn-${name}-content-id`]: contentId } : {}),\n      className: [className ?? \"\", \"lisn-undisplay\"].join(\" \"),\n      ...baseProps,\n    },\n    children,\n  );\n};\n"],"mappings":"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","ignoreList":[]}