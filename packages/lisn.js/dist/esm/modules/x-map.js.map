{"version":3,"file":"x-map.js","names":["MC","MH","newXMap","getDefaultV","XMap","newXMapGetter","newXWeakMap","XWeakMap","newXWeakMapGetter","XMapBase","_createClass","root","_classCallCheck","_defineProperty","get","key","set","value","deleteKey","has","sGet","result","undefined","prune","sk","_len","arguments","length","rest","Array","_key","lengthOf","apply","concat","_toConsumableArray","slice","isIterableObject","size","_XMapBase2","_this","newMap","_callSuper","Symbol","iterator","defineProperty","clear","entries","keys","values","SYMBOL","_inherits","_XMapBase3","newWeakMap"],"sources":["../../../src/ts/modules/x-map.ts"],"sourcesContent":["/**\n * @module Modules/XMap\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { MapBase } from \"@lisn/globals/types\";\n\nexport type DefaultValueGetter<K, V> = (key: K) => V;\nexport type IteratorCallback<K, V> = (\n  value: V,\n  key: K,\n  map: XMap<K, V>,\n) => void;\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXMap = <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  new XMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXMapGetter =\n  <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXMap(getDefaultV);\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMap = <K extends WeakKey, V>(\n  getDefaultV: DefaultValueGetter<K, V>,\n) => new XWeakMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXWeakMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMapGetter =\n  <K extends WeakKey, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXWeakMap(getDefaultV);\n\nexport abstract class XMapBase<K, V> {\n  /**\n   * Returns the value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly get: (key: K) => V | undefined;\n\n  /**\n   * Like {@link get} except that if the key is not found in the map, then it\n   * will set and return a default value by calling `getDefaultV` passed to the\n   * constructor.\n   */\n  readonly sGet: (key: K) => V;\n\n  /**\n   * Sets a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly set: (key: K, value: V) => void;\n\n  /**\n   * Deletes a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly delete: (key: K) => void;\n\n  /**\n   * Deletes empty keys in the {@link XMap} or {@link XWeakMap} starting at the\n   * final nested path and checking the level above after deletion.\n   *\n   * A key is considered empty if it's value is undefined or it's an empty Map,\n   * Set, Array, etc (anything with size or length property equal to 0).\n   */\n  readonly prune: (sk: K, ...rest: unknown[]) => void;\n\n  /**\n   * Returns true if the {@link XMap} or {@link XWeakMap} contains the given key.\n   */\n  readonly has: (key: K) => boolean;\n\n  protected constructor(\n    root: MapBase<K, V>,\n    getDefaultV: DefaultValueGetter<K, V>,\n  ) {\n    this.get = (key) => root.get(key);\n    this.set = (key, value) => root.set(key, value);\n    this.delete = (key) => MH.deleteKey(root, key);\n    this.has = (key) => root.has(key);\n\n    this.sGet = (key) => {\n      let result = root.get(key);\n      if (result === undefined) {\n        result = getDefaultV(key);\n        root.set(key, result);\n      }\n      return result;\n    };\n\n    this.prune = (sk, ...rest) => {\n      const value = root.get(sk);\n      if (value instanceof XMapBase && MH.lengthOf(rest)) {\n        value.prune(rest[0], ...rest.slice(1));\n      }\n\n      if (\n        value === undefined ||\n        (MH.isIterableObject(value) &&\n          !(\n            (\"size\" in value && value.size) ||\n            (\"length\" in value && value.length)\n          ))\n      ) {\n        MH.deleteKey(root, sk);\n      }\n    };\n  }\n}\n\n/**\n * {@link XMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map | Map},\n * except that it supports automatically creating missing entries with\n * {@link sGet} according to a default value getter function.\n *\n * @typeParam K  The type of the keys the map holds.\n * @typeParam V  The type of the values the map holds.\n */\nexport class XMap<K, V> extends XMapBase<K, V> implements Iterable<[K, V]> {\n  /**\n   * Returns the number of entries in the {@link XMap}.\n   */\n  readonly size!: number;\n\n  /**\n   * Deletes all entries in the {@link XMap}.\n   */\n  readonly clear: () => void;\n\n  /**\n   * Returns an iterator over the {@link XMap} entries.\n   */\n  readonly entries: () => MapIterator<[K, V]>;\n\n  /**\n   * Returns an iterator over the {@link XMap} keys.\n   */\n  readonly keys: () => MapIterator<K>;\n\n  /**\n   * Returns an iterator over the {@link XMap} values.\n   */\n  readonly values: () => MapIterator<V>;\n\n  readonly [Symbol.iterator]!: () => IterableIterator<[K, V]>;\n\n  /**\n   * Returns a function that when called returns a new {@link XMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XMap}s.\n   */\n  static readonly newXMapGetter = newXMapGetter;\n\n  /**\n   * @param {} getDefaultV  This function is called each time\n   *                        {@link sGet} is called with a non-existent\n   *                        key and must return a value that is then set for\n   *                        that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newMap<K, V>();\n    super(root, getDefaultV);\n\n    MH.defineProperty(this, \"size\", { get: () => root.size });\n    this.clear = () => root.clear();\n    this.entries = () => root.entries();\n    this.keys = () => root.keys();\n    this.values = () => root.values();\n    this[MC.SYMBOL.iterator] = () => root[MC.SYMBOL.iterator]();\n  }\n}\n\n/**\n * {@link XWeakMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap | WeakMap},\n * except that it supports automatically creating missing entries with\n * with {@link sGet} according to a default value getter function.\n *\n * @typeParam K  The type of the keys the map holds.\n * @typeParam V  The type of the values the map holds.\n */\nexport class XWeakMap<K extends WeakKey, V> extends XMapBase<K, V> {\n  /**\n   * Returns a function that when called returns a new {@link XWeakMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XWeakMap}s.\n   */\n  static readonly newXWeakMapGetter = newXWeakMapGetter;\n\n  /**\n   * @param {} getDefaultV  This function is called each time\n   *                        {@link sGet} is called with a non-existent\n   *                        key and must return a value that is then set for\n   *                        that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newWeakMap<K, V>();\n    super(root, getDefaultV);\n  }\n}\n"],"mappings":"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","ignoreList":[]}