{"version":3,"file":"dom-alter.js","names":["MC","MH","settings","hideElement","hasAnyClass","addClassesNow","removeClassesNow","getData","setDataNow","setBooleanData","asyncMutatorFor","isInlineTag","logWarn","randId","wrapElementNow","element","options","wrapper","createWrapperFor","ignoreMove","from","parentOf","to","replaceWith","append","wrapElement","wrapChildrenNow","moveChildrenNow","moveElementNow","wrapChildren","replaceElementNow","newElement","replaceElement","swapElementsNow","elementA","elementB","temp","createElement","swapElements","oldParent","newParent","child","childrenOf","moveChildren","parentEl","position","remove","moveElement","hideAndRemoveElement","delay","getOrAssignID","prefix","domID","id","isAllowedToWrap","contentWrappingAllowed","PREFIX_NO_WRAP","getWrapper","tagName","classNames","PREFIX_WRAPPER","parent","lengthOf","isHTMLElement","hasTagName","getContentWrapper","firstChild","tryWrapNow","_tryWrapNow","tryWrap","tryWrapContentNow","tryWrapContent","unwrapContentNow","parentElement","unwrapContent","cloneElement","clone","cloneNode","prefixName","insertGhostCloneNow","insertBefore","PREFIX_GHOST","PREFIX_TRANSITION_DISABLE","PREFIX_ANIMATE_DISABLE","required","_wrapper","_clone","insertGhostClone","target","recordsToSkipOnce","set","getIgnoreMove","get","clearIgnoreMove","setTimer","deleteKey","insertArrow","direction","tag","arrow","S_ARROW","newMap","isElement","wrapContent","requiredBy","getWrapperFn","wrapFn","allowedToWrap","PREFIX_INLINE_WRAPPER"],"sources":["../../../src/ts/utils/dom-alter.ts"],"sourcesContent":["/**\n * @module Utils\n *\n * @categoryDescription DOM: Altering\n * These functions alter the DOM tree, but could lead to forced layout if not\n * scheduled using {@link Utils.waitForMutateTime}.\n *\n * @categoryDescription DOM: Altering (optimized)\n * These functions alter the DOM tree in an optimized way using\n * {@link Utils.waitForMutateTime} and so are asynchronous.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  hideElement,\n  hasAnyClass,\n  addClassesNow,\n  removeClassesNow,\n  getData,\n  setDataNow,\n  setBooleanData,\n} from \"@lisn/utils/css-alter\";\nimport { asyncMutatorFor } from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { randId } from \"@lisn/utils/text\";\n\n/**\n * Wraps the element in the given wrapper, or a newly created element if not given.\n *\n * @param [options.wrapper]\n *              If it's an element, it is used as the wrapper. If it's a string\n *              tag name, then a new element with this tag is created as the\n *              wrapper. If not given, then `div` is used if the element to be\n *              wrapped has an block-display tag, or otherwise `span` (if the\n *              element to be wrapped has an inline tag name).\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n * @returns The wrapper element that was either passed in options or created.\n *\n * @category DOM: Altering\n */\nexport const wrapElementNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: wrapper,\n    });\n\n    ignoreMove(wrapper, {\n      to: MH.parentOf(element),\n    });\n  }\n\n  element.replaceWith(wrapper);\n  wrapper.append(element);\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapElementNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapElement = asyncMutatorFor(wrapElementNow);\n\n/**\n * Wraps the element's children in the given wrapper, or a newly created element\n * if not given.\n *\n * @see {@link wrapElementNow}.\n *\n * @category DOM: Altering\n */\nexport const wrapChildrenNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n  const { ignoreMove } = options ?? {};\n\n  moveChildrenNow(element, wrapper, { ignoreMove });\n  moveElementNow(wrapper, {\n    to: element,\n    ignoreMove,\n  });\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapChildrenNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapChildren = asyncMutatorFor(wrapChildrenNow);\n\n/**\n * Replace an element with another one.\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const replaceElementNow = (\n  element: Element,\n  newElement: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    ignoreMove(\n      // remove element\n      element,\n      { from: MH.parentOf(element) },\n    );\n\n    ignoreMove(\n      // move newElement to element's current parent\n      newElement,\n      { from: MH.parentOf(newElement), to: MH.parentOf(element) },\n    );\n  }\n\n  element.replaceWith(newElement);\n};\n\n/**\n * Like {@link replaceElementNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const replaceElement = asyncMutatorFor(replaceElementNow);\n\n/**\n * Replace an element with another one.\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const swapElementsNow = (\n  elementA: Element,\n  elementB: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  const temp = MH.createElement(\"div\");\n  replaceElementNow(elementA, temp, options);\n  replaceElementNow(elementB, elementA, options);\n  replaceElementNow(temp, elementB, options);\n};\n\n/**\n * Like {@link swapElementsNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const swapElements = asyncMutatorFor(swapElementsNow);\n\n// [TODO v2]: moveChildren to accept newParent as options.to\n\n/**\n * Move an element's children to a new element\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the children (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveChildrenNow = (\n  oldParent: Element,\n  newParent: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    for (const child of MH.childrenOf(oldParent)) {\n      ignoreMove(child, {\n        from: oldParent,\n        to: newParent,\n      });\n    }\n  }\n\n  newParent.append(...MH.childrenOf(oldParent));\n};\n\n/**\n * Like {@link moveChildrenNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveChildren = asyncMutatorFor(moveChildrenNow);\n\n/**\n * Moves an element to a new position.\n *\n * @param [options.to]         The new parent or sibling (depending on\n *                             `options.position`). If not given, the\n *                             element is removed from the DOM.\n * @param [options.position]   - append (default): append to `options.to`\n *                             - prepend: prepend to `options.to`\n *                             - before: insert before `options.to`\n *                             - after: insert after `options.to`\n * @param [options.ignoreMove] If true, the DOM watcher instances will\n *                             ignore the operation of moving the element\n *                             (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveElementNow = (\n  element: Element,\n  options?: {\n    to?: Element;\n    position?: \"append\" | \"prepend\" | \"before\" | \"after\";\n    ignoreMove?: boolean;\n  },\n) => {\n  let parentEl = options?.to || null;\n  const position = options?.position || \"append\";\n  if (position === \"before\" || position === \"after\") {\n    parentEl = MH.parentOf(options?.to);\n  }\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: parentEl,\n    });\n  }\n\n  if (options?.to) {\n    options.to[position](element);\n  } else {\n    MH.remove(element);\n  }\n};\n\n/**\n * Like {@link moveElementNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveElement = asyncMutatorFor(moveElementNow);\n\n/**\n * It will {@link hideElement} and then remove it from the DOM.\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering (optimized)\n */\nexport const hideAndRemoveElement = async (\n  element: Element,\n  delay = 0,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  await hideElement(element, delay);\n  moveElementNow(element, options);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getOrAssignID = (element: Element, prefix = \"\") => {\n  let domID = element.id;\n  if (!domID) {\n    domID = `${prefix}-${randId()}`;\n    element.id = domID;\n  }\n\n  return domID;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const isAllowedToWrap = (element: Element) =>\n  settings.contentWrappingAllowed === true &&\n  getData(element, MC.PREFIX_NO_WRAP) === null;\n\n/**\n * @ignore\n * @internal\n *\n * @param classNames Default is [MC.PREFIX_WRAPPER]. Pass `null` to disable check.\n */\nexport const getWrapper = (\n  element: Element,\n  options?: {\n    tagName?: keyof HTMLElementTagNameMap;\n    classNames?: string[] | null;\n  },\n) => {\n  const { tagName, classNames = [MC.PREFIX_WRAPPER] } = options ?? {};\n  const parent = MH.parentOf(element);\n  if (\n    MH.lengthOf(MH.childrenOf(parent)) === 1 &&\n    MH.isHTMLElement(parent) &&\n    (!tagName || MH.hasTagName(parent, tagName)) &&\n    (!classNames || hasAnyClass(parent, ...classNames))\n  ) {\n    // Already wrapped\n    return parent;\n  }\n\n  return null; // don't check the element itself, only its parent\n};\n\n/**\n * @ignore\n * @internal\n *\n * @param classNames Default is [MC.PREFIX_WRAPPER]. Pass `null` to disable check.\n */\nexport const getContentWrapper = (\n  element: Element,\n  options?: {\n    tagName?: keyof HTMLElementTagNameMap;\n    classNames?: string[] | null;\n  },\n) => {\n  const { tagName, classNames = [MC.PREFIX_WRAPPER] } = options ?? {};\n  const firstChild = MH.childrenOf(element)[0];\n  if (\n    MH.lengthOf(MH.childrenOf(element)) === 1 &&\n    MH.isHTMLElement(firstChild) &&\n    (!tagName || MH.hasTagName(firstChild, tagName)) &&\n    (!classNames || hasAnyClass(firstChild, ...classNames))\n  ) {\n    // Already wrapped\n    return firstChild;\n  }\n\n  return null;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrapNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options?: O,\n) => _tryWrapNow(element, options);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrap = asyncMutatorFor(tryWrapNow);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrapContentNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options?: O,\n) => _tryWrapNow(element, options, true);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrapContent = asyncMutatorFor(tryWrapContentNow);\n\n/**\n * @ignore\n * @internal\n */\nexport const unwrapContentNow = (wrapper: Element, classNames?: string[]) => {\n  const parent = wrapper.parentElement;\n  if (parent) {\n    moveChildrenNow(wrapper, parent, { ignoreMove: true });\n    moveElementNow(wrapper, { ignoreMove: true });\n    if (classNames) {\n      removeClassesNow(wrapper, ...classNames);\n    }\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const unwrapContent = asyncMutatorFor(unwrapContentNow);\n\n/**\n * @ignore\n * @internal\n */\nexport const cloneElement = <E extends Element>(element: E) => {\n  const clone = element.cloneNode(true) as E;\n  setBooleanData(clone, MH.prefixName(\"clone\"));\n  return clone;\n};\n\n/**\n * Creates a dummy hidden clone that's got animation and transitions disabled\n * and absolute position, wrapped in a wrapper (of size 0) and inserts it just\n * before the `insertBefore` element (or if not given, the original element),\n * so that the hidden clone overlaps the actual element's regular\n * (pre-transformed) position.\n *\n * It clears the ID of the clone.\n *\n * Returns the clone.\n *\n * @ignore\n * @internal\n */\nexport const insertGhostCloneNow = <E extends Element>(\n  element: E,\n  insertBefore: Element | null = null,\n) => {\n  const clone = cloneElement(element);\n  clone.id = \"\";\n\n  addClassesNow(\n    clone,\n    MC.PREFIX_GHOST,\n    MC.PREFIX_TRANSITION_DISABLE,\n    MC.PREFIX_ANIMATE_DISABLE,\n  );\n\n  const wrapper = _tryWrapNow(clone, { required: true });\n\n  moveElementNow(wrapper, {\n    to: insertBefore || element,\n    position: \"before\",\n    ignoreMove: true,\n  });\n\n  return { _wrapper: wrapper, _clone: clone };\n};\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const insertGhostClone = asyncMutatorFor(insertGhostCloneNow);\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const ignoreMove = (\n  target: Element,\n  options: { from?: Element | null; to?: Element | null },\n) =>\n  recordsToSkipOnce.set(target, {\n    from: options.from || null,\n    to: options.to || null,\n  });\n\n/**\n * @ignore\n * @internal\n */\nexport const getIgnoreMove = (\n  target: Element,\n): { from: Element | null; to: Element | null } | null =>\n  recordsToSkipOnce.get(target) || null;\n\n/**\n * @ignore\n * @internal\n */\nexport const clearIgnoreMove = (target: Element) => {\n  // We should not clear the entry the first time the operation is observed\n  // (when we return true here), because there may be multiple DOMWatcher\n  // instances that will observe it and need to query it. Instead do it shortly.\n  MH.setTimer(() => {\n    MH.deleteKey(recordsToSkipOnce, target);\n  }, 100);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const insertArrow = (\n  target: Element,\n  direction: \"up\" | \"down\" | \"left\" | \"right\",\n  position: \"prepend\" | \"append\" | \"before\" | \"after\" = \"append\",\n  tag = \"span\",\n) => {\n  const arrow = MH.createElement(tag);\n  addClassesNow(arrow, MH.prefixName(MC.S_ARROW));\n  setDataNow(arrow, MH.prefixName(\"direction\"), direction);\n  moveElement(arrow, { to: target, position, ignoreMove: true });\n  return arrow;\n};\n\n// ----------------------------------------\n\ntype ContentWrappingOptions = {\n  tagName?: keyof HTMLElementTagNameMap;\n  classNames?: string[]; // if the wrapper has any one of these, it will be re-used\n  ignoreMove?: boolean; // default is true here\n  required?: boolean; // if true, will ignore contentWrappingAllowed and data-lisn-no-wrap\n  requiredBy?: string; // for logging purposes\n};\n\nconst recordsToSkipOnce = MH.newMap<\n  /* target being moved */ Element,\n  { from: Element | null; to: Element | null }\n>();\n\nconst createWrapperFor = (\n  element: Element,\n  wrapper: HTMLElement | keyof HTMLElementTagNameMap | undefined,\n) => {\n  if (MH.isElement(wrapper)) {\n    return wrapper;\n  }\n\n  let tag = wrapper;\n  if (!tag) {\n    if (isInlineTag(MH.tagName(element))) {\n      tag = \"span\";\n    } else {\n      tag = \"div\";\n    }\n  }\n\n  return MH.createElement(tag);\n};\n\nconst _tryWrapNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options: O | undefined,\n  wrapContent = false, // if true, wrap its children, otherwise given element\n) => {\n  const {\n    tagName,\n    classNames = [MC.PREFIX_WRAPPER],\n    ignoreMove = true,\n    required = false,\n    requiredBy = \"\",\n  } = options ?? {};\n\n  const getWrapperFn = wrapContent ? getContentWrapper : getWrapper;\n  const wrapFn = wrapContent ? wrapChildrenNow : wrapElementNow;\n  const allowedToWrap = isAllowedToWrap(element);\n\n  let wrapper = getWrapperFn(element, options);\n  if (!wrapper && (required || allowedToWrap)) {\n    wrapper = wrapFn(element, { wrapper: tagName, ignoreMove });\n    if (classNames) {\n      addClassesNow(wrapper, ...classNames);\n    }\n    if (isInlineTag(MH.tagName(wrapper))) {\n      addClassesNow(wrapper, MC.PREFIX_INLINE_WRAPPER);\n    }\n\n    if (!allowedToWrap && requiredBy) {\n      logWarn(\n        `content wrapping is disabled for element but wrapping is required by ${requiredBy}`,\n      );\n    }\n  }\n\n  return wrapper as O extends { required: true }\n    ? HTMLElement\n    : HTMLElement | null;\n};\n"],"mappings":"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","ignoreList":[]}