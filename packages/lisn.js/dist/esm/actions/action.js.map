{"version":3,"file":"action.js","names":["MH","splitOn","fetchWidgetConfig","registerAction","name","newAction","configValidator","registeredActions","has","newActionFromSpec","element","argsAndOptions","thisConfigValidator","isFunction","args","config","undefined","entry","includes","push","set","fetchAction","get","usageError","newMap"],"sources":["../../../src/ts/actions/action.ts"],"sourcesContent":["/**\n * @module Actions\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { splitOn } from \"@lisn/utils/text\";\n\nimport { WidgetConfigValidator, fetchWidgetConfig } from \"@lisn/widgets/widget\";\n\n/**\n * @interface\n */\nexport type Action = {\n  do: () => void;\n  undo: () => void;\n  toggle: () => void;\n};\n\nexport type ActionCreateFn<Config extends Record<string, unknown>> = (\n  element: Element,\n  args: string[],\n  config?: Config,\n) => Action | Promise<Action>;\n\n/**\n * Registers the given action so that it can be parsed by\n * {@link Triggers.registerTrigger}.\n *\n * **IMPORTANT:** If an action by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param name      The name of the action. Should be in kebab-case.\n * @param newAction Called for every action specification for a trigger\n *                  parsed by {@link Triggers.registerTrigger}\n */\nexport const registerAction = <Config extends Record<string, unknown>>(\n  name: string,\n  newAction: ActionCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  if (registeredActions.has(name)) {\n    return;\n  }\n\n  const newActionFromSpec = async (\n    element: Element,\n    argsAndOptions: string,\n  ) => {\n    const thisConfigValidator = MH.isFunction(configValidator)\n      ? await configValidator(element)\n      : configValidator;\n\n    const args: string[] = [];\n    const config = thisConfigValidator\n      ? await fetchWidgetConfig(argsAndOptions, thisConfigValidator, \",\")\n      : undefined;\n\n    for (const entry of splitOn(argsAndOptions, \",\", true)) {\n      if (entry) {\n        if (!MH.includes(entry, \"=\")) {\n          args.push(entry);\n        }\n      }\n    }\n\n    return newAction(element, args, config);\n  };\n\n  registeredActions.set(name, newActionFromSpec);\n};\n\n/**\n * Returns an {@link Action} registered under the given name and instantiated\n * with the given element and arguments and options parsed from the given string.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given spec is not valid.\n */\nexport const fetchAction = async (\n  element: Element,\n  name: string,\n  argsAndOptions?: string,\n): Promise<Action> => {\n  const newActionFromSpec = registeredActions.get(name);\n  if (!newActionFromSpec) {\n    throw MH.usageError(`Unknown action '${name}'`);\n  }\n\n  return await newActionFromSpec(element, argsAndOptions || \"\");\n};\n\n// --------------------\n\nconst registeredActions = MH.newMap<\n  string,\n  (element: Element, spec: string) => Action | Promise<Action>\n>();\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,KAAKA,EAAE;AAEd,SAASC,OAAO;AAEhB,SAAgCC,iBAAiB;;AAEjD;AACA;AACA;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAGA,CAC5BC,IAAY,EACZC,SAAiC,EACjCC,eAAsD,KACnD;EACH,IAAIC,iBAAiB,CAACC,GAAG,CAACJ,IAAI,CAAC,EAAE;IAC/B;EACF;EAEA,MAAMK,iBAAiB,GAAG,MAAAA,CACxBC,OAAgB,EAChBC,cAAsB,KACnB;IACH,MAAMC,mBAAmB,GAAGZ,EAAE,CAACa,UAAU,CAACP,eAAe,CAAC,GACtD,MAAMA,eAAe,CAACI,OAAO,CAAC,GAC9BJ,eAAe;IAEnB,MAAMQ,IAAc,GAAG,EAAE;IACzB,MAAMC,MAAM,GAAGH,mBAAmB,GAC9B,MAAMV,iBAAiB,CAACS,cAAc,EAAEC,mBAAmB,EAAE,GAAG,CAAC,GACjEI,SAAS;IAEb,KAAK,MAAMC,KAAK,IAAIhB,OAAO,CAACU,cAAc,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE;MACtD,IAAIM,KAAK,EAAE;QACT,IAAI,CAACjB,EAAE,CAACkB,QAAQ,CAACD,KAAK,EAAE,GAAG,CAAC,EAAE;UAC5BH,IAAI,CAACK,IAAI,CAACF,KAAK,CAAC;QAClB;MACF;IACF;IAEA,OAAOZ,SAAS,CAACK,OAAO,EAAEI,IAAI,EAAEC,MAAM,CAAC;EACzC,CAAC;EAEDR,iBAAiB,CAACa,GAAG,CAAChB,IAAI,EAAEK,iBAAiB,CAAC;AAChD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMY,WAAW,GAAG,MAAAA,CACzBX,OAAgB,EAChBN,IAAY,EACZO,cAAuB,KACH;EACpB,MAAMF,iBAAiB,GAAGF,iBAAiB,CAACe,GAAG,CAAClB,IAAI,CAAC;EACrD,IAAI,CAACK,iBAAiB,EAAE;IACtB,MAAMT,EAAE,CAACuB,UAAU,CAAC,mBAAmBnB,IAAI,GAAG,CAAC;EACjD;EAEA,OAAO,MAAMK,iBAAiB,CAACC,OAAO,EAAEC,cAAc,IAAI,EAAE,CAAC;AAC/D,CAAC;;AAED;;AAEA,MAAMJ,iBAAiB,GAAGP,EAAE,CAACwB,MAAM,CAGjC,CAAC","ignoreList":[]}