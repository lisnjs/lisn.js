{"version":3,"file":"x-map.cjs","names":["MC","_interopRequireWildcard","require","MH","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","newXMap","getDefaultV","XMap","exports","newXMapGetter","newXWeakMap","XWeakMap","newXWeakMapGetter","XMapBase","constructor","root","key","delete","deleteKey","sGet","result","undefined","prune","sk","rest","lengthOf","slice","isIterableObject","size","length","newMap","iterator","clear","entries","keys","values","SYMBOL","newWeakMap"],"sources":["../../../src/ts/modules/x-map.ts"],"sourcesContent":["/**\n * @module Modules/XMap\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { MapBase } from \"@lisn/globals/types\";\n\nexport type DefaultValueGetter<K, V> = (key: K) => V;\nexport type IteratorCallback<K, V> = (\n  value: V,\n  key: K,\n  map: XMap<K, V>,\n) => void;\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXMap = <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  new XMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXMapGetter =\n  <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXMap(getDefaultV);\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMap = <K extends WeakKey, V>(\n  getDefaultV: DefaultValueGetter<K, V>,\n) => new XWeakMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXWeakMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMapGetter =\n  <K extends WeakKey, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXWeakMap(getDefaultV);\n\nexport abstract class XMapBase<K, V> {\n  /**\n   * Returns the value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly get: (key: K) => V | undefined;\n\n  /**\n   * Like {@link get} except that if the key is not found in the map, then it\n   * will set and return a default value by calling `getDefaultV` passed to the\n   * constructor.\n   */\n  readonly sGet: (key: K) => V;\n\n  /**\n   * Sets a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly set: (key: K, value: V) => void;\n\n  /**\n   * Deletes a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly delete: (key: K) => void;\n\n  /**\n   * Deletes empty keys in the {@link XMap} or {@link XWeakMap} starting at the\n   * final nested path and checking the level above after deletion.\n   *\n   * A key is considered empty if it's value is undefined or it's an empty Map,\n   * Set, Array, etc (anything with size or length property equal to 0).\n   */\n  readonly prune: (sk: K, ...rest: unknown[]) => void;\n\n  /**\n   * Returns true if the {@link XMap} or {@link XWeakMap} contains the given key.\n   */\n  readonly has: (key: K) => boolean;\n\n  protected constructor(\n    root: MapBase<K, V>,\n    getDefaultV: DefaultValueGetter<K, V>,\n  ) {\n    this.get = (key) => root.get(key);\n    this.set = (key, value) => root.set(key, value);\n    this.delete = (key) => MH.deleteKey(root, key);\n    this.has = (key) => root.has(key);\n\n    this.sGet = (key) => {\n      let result = root.get(key);\n      if (result === undefined) {\n        result = getDefaultV(key);\n        root.set(key, result);\n      }\n      return result;\n    };\n\n    this.prune = (sk, ...rest) => {\n      const value = root.get(sk);\n      if (value instanceof XMapBase && MH.lengthOf(rest)) {\n        value.prune(rest[0], ...rest.slice(1));\n      }\n\n      if (\n        value === undefined ||\n        (MH.isIterableObject(value) &&\n          !(\n            (\"size\" in value && value.size) ||\n            (\"length\" in value && value.length)\n          ))\n      ) {\n        MH.deleteKey(root, sk);\n      }\n    };\n  }\n}\n\n/**\n * {@link XMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map | Map},\n * except that it supports automatically creating missing entries with\n * {@link sGet} according to a default value getter function.\n *\n * @typeParam K  The type of the keys the map holds.\n * @typeParam V  The type of the values the map holds.\n */\nexport class XMap<K, V> extends XMapBase<K, V> implements Iterable<[K, V]> {\n  /**\n   * Returns the number of entries in the {@link XMap}.\n   */\n  readonly size!: number;\n\n  /**\n   * Deletes all entries in the {@link XMap}.\n   */\n  readonly clear: () => void;\n\n  /**\n   * Returns an iterator over the {@link XMap} entries.\n   */\n  readonly entries: () => MapIterator<[K, V]>;\n\n  /**\n   * Returns an iterator over the {@link XMap} keys.\n   */\n  readonly keys: () => MapIterator<K>;\n\n  /**\n   * Returns an iterator over the {@link XMap} values.\n   */\n  readonly values: () => MapIterator<V>;\n\n  readonly [Symbol.iterator]!: () => IterableIterator<[K, V]>;\n\n  /**\n   * Returns a function that when called returns a new {@link XMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XMap}s.\n   */\n  static readonly newXMapGetter = newXMapGetter;\n\n  /**\n   * @param {} getDefaultV  This function is called each time\n   *                        {@link sGet} is called with a non-existent\n   *                        key and must return a value that is then set for\n   *                        that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newMap<K, V>();\n    super(root, getDefaultV);\n\n    MH.defineProperty(this, \"size\", { get: () => root.size });\n    this.clear = () => root.clear();\n    this.entries = () => root.entries();\n    this.keys = () => root.keys();\n    this.values = () => root.values();\n    this[MC.SYMBOL.iterator] = () => root[MC.SYMBOL.iterator]();\n  }\n}\n\n/**\n * {@link XWeakMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap | WeakMap},\n * except that it supports automatically creating missing entries with\n * with {@link sGet} according to a default value getter function.\n *\n * @typeParam K  The type of the keys the map holds.\n * @typeParam V  The type of the values the map holds.\n */\nexport class XWeakMap<K extends WeakKey, V> extends XMapBase<K, V> {\n  /**\n   * Returns a function that when called returns a new {@link XWeakMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XWeakMap}s.\n   */\n  static readonly newXWeakMapGetter = newXWeakMapGetter;\n\n  /**\n   * @param {} getDefaultV  This function is called each time\n   *                        {@link sGet} is called with a non-existent\n   *                        key and must return a value that is then set for\n   *                        that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newWeakMap<K, V>();\n    super(root, getDefaultV);\n  }\n}\n"],"mappings":"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","ignoreList":[]}