{"version":3,"file":"css-alter.js","names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","MC","MH","waitForMeasureTime","waitForMutateTime","waitForSubsequentMutateTime","isDOMElement","isValidNum","roundNumTo","waitForDelay","camelToKebabCase","splitOn","transitionElementNow","element","fromCls","toCls","cancelCSSTransitions","didChange","hasClass","removeClassesNow","addClassesNow","transitionElement","_ref","_callee","delay","thisTransition","transitionDuration","_args","_callee$","_context","undefined","scheduleCSSTransition","_isCancelled","_finish","getMaxTransitionDuration","_x","_x2","_x3","displayElementNow","PREFIX_UNDISPLAY","PREFIX_DISPLAY","displayElement","undisplayElementNow","undisplayElement","showElementNow","PREFIX_HIDE","PREFIX_SHOW","showElement","hideElementNow","hideElement","toggleDisplayElementNow","isElementUndisplayed","toggleDisplayElement","toggleShowElementNow","isElementHidden","toggleShowElement","el","className","classList","contains","_MH$classList","_len","classNames","Array","_key","add","addClasses","_len2","_key2","concat","_MH$classList2","_len3","_key3","remove","removeClasses","_len4","_key4","toggleClassNow","force","toggle","toggleClass","getData","getAttr","prefixData","getBoolData","setDataNow","setAttr","setData","setBoolDataNow","setBoolData","unsetBoolDataNow","unsetAttr","unsetBoolData","delDataNow","delAttr","delData","getComputedStylePropNow","prop","getComputedStyle","getPropertyValue","getComputedStyleProp","getStylePropNow","_style","style","getStyleProp","setStylePropNow","_style2","setProperty","setStyleProp","delStylePropNow","_style3","removeProperty","delStyleProp","_ref2","_callee2","propVal","_callee2$","_context2","max","_toConsumableArray","map","strValue","duration","parseFloat","_x4","disableInitialTransition","_ref3","_callee3","_args3","_callee3$","_context3","PREFIX_TRANSITION_DISABLE","_x5","setHasModal","getBody","PREFIX_HAS_MODAL","delHasModal","copyStyle","_ref4","_callee4","fromElement","toElement","includeComputedProps","props","_iterator","_step","_prop","_prop2","_callee4$","_context4","_createForOfIteratorHelper","err","_x6","_x7","_x8","setNumericStyleProps","_ref5","_callee5","options","transformFn","varPrefix","cssPropSuffix","varName","_options$_numDecimal","thisNumDecimal","currValue","_args5","_callee5$","_context5","_transformFn","prefixCssJsVar","_prefix","t0","t1","_numDecimal","t2","t3","_units","_x9","_x10","prefixName","scheduledCSSTransitions","newWeakMap","scheduledTransitions","get","_len5","toClasses","_key5","_i","_toClasses","scheduledTransition","_cancel","set","isCancelled","deleteObjKey"],"sources":["../../../src/ts/utils/css-alter.ts"],"sourcesContent":["/**\n * @module Utils\n *\n * @categoryDescription CSS: Altering\n * These functions transition an element from one CSS class to another, but\n * could lead to forced layout if not scheduled using {@link waitForMutateTime}.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n *\n * @categoryDescription CSS: Altering (optimized)\n * These functions transition an element from one CSS class to another in an\n * optimized way using {@link waitForMutateTime} and so are asynchronous.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement } from \"@lisn/globals/types\";\n\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n  waitForSubsequentMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isDOMElement } from \"@lisn/utils/dom-query\";\nimport { isValidNum, roundNumTo } from \"@lisn/utils/math\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { camelToKebabCase, splitOn } from \"@lisn/utils/text\";\n\n/**\n * Removes the given `fromCls` class and adds the given `toCls` class to the\n * element.\n *\n * Unlike {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace | DOMTokenList:replace},\n * this will always add `toCls` even if `fromCls` isn't in the element's class list.\n *\n * @returns {} True if there was a change made (class removed or added),\n *             false otherwise.\n *\n * @category CSS: Altering\n */\nexport const transitionElementNow = (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n) => {\n  cancelCSSTransitions(element, fromCls, toCls);\n\n  // Avoid triggering MutationObserver unnecessarily.\n  let didChange = false;\n  if (hasClass(element, fromCls)) {\n    didChange = true;\n    removeClassesNow(element, fromCls);\n  }\n\n  if (!hasClass(element, toCls)) {\n    addClassesNow(element, toCls);\n    didChange = true;\n  }\n\n  return didChange;\n};\n\n/**\n * Like {@link transitionElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay, and it finally awaits for the effective style's\n * transition-duration.\n *\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, this one is\n * cancelled.\n *\n * @example\n *\n * - {@link showElement} with delay of 100 schedules `lisn-hide` -> `lisn-show`\n *   in 100ms\n * - then if {@link hideElementNow} is called, or a scheduled\n *   {@link hideElement} completes  before that timer runs out, this call to\n *   {@link showElement} aborts\n *\n * ```javascript\n * hideElement(someElement, 10);\n * // this will be aborted in 10ms when the scheduled hideElement above\n * // completes\n * showElement(someElement, 100);\n * ```\n *\n * ```javascript\n * // this will be aborted in 10ms when the hideElement that will be scheduled\n * // below completes\n * showElement(someElement, 100);\n * hideElement(someElement, 10);\n * ```\n *\n * ```javascript\n * // this will be aborted immediately by hideElementNow that runs straight\n * // afterwards\n * showElement(someElement, 100);\n * hideElementNow(someElement);\n * ```\n *\n * ```javascript\n * hideElementNow(someElement);\n * // this will NOT be aborted because hideElementNow has completed already\n * showElement(someElement, 100);\n * ```\n *\n * @category CSS: Altering (optimized)\n */\nexport const transitionElement = async (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n  delay = 0,\n) => {\n  const thisTransition = scheduleCSSTransition(element, toCls);\n\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForMutateTime();\n  if (thisTransition._isCancelled()) {\n    // it has been overridden by a later transition\n    return false;\n  }\n\n  const didChange = transitionElementNow(element, fromCls, toCls);\n  thisTransition._finish();\n\n  if (!didChange) {\n    return false;\n  }\n\n  // Await for the transition duration so that caller awaiting on us knows when\n  // it's complete.\n  const transitionDuration = await getMaxTransitionDuration(element);\n  if (transitionDuration) {\n    await waitForDelay(transitionDuration);\n  }\n\n  return true;\n};\n\n/**\n * Transitions an element from class `lisn-undisplay` (which applies `display:\n * none`) to `lisn-display` (no style associated with this).\n *\n * The difference between this and simply removing the `lisn-undisplay` class\n * is that previously scheduled transitions to `lisn-undisplay` will be\n * cancelled.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const displayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY);\n\n/**\n * Like {@link displayElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const displayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY, delay);\n\n/**\n * The opposite of {@link displayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const undisplayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY);\n\n/**\n * Like {@link undisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const undisplayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY, delay);\n\n/**\n * Transitions an element from class `lisn-hide` (which makes the element\n * hidden) to `lisn-show` (which shows it). These classes have CSS\n * transitions applied so the element is faded into and out of view.\n *\n * @see {@link transitionElementNow}.\n *\n * @category CSS: Altering\n */\nexport const showElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW);\n\n/**\n * Like {@link showElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const showElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW, delay);\n\n/**\n * The opposite of {@link showElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const hideElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE);\n\n/**\n * Like {@link hideElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const hideElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE, delay);\n\n/**\n * If {@link isElementUndisplayed}, it will {@link displayElementNow},\n * otherwise it will {@link undisplayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleDisplayElementNow = (element: Element) =>\n  isElementUndisplayed(element)\n    ? displayElementNow(element)\n    : undisplayElementNow(element);\n\n/**\n * Like {@link toggleDisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleDisplayElement = (element: Element, delay = 0) =>\n  isElementUndisplayed(element)\n    ? displayElement(element, delay)\n    : undisplayElement(element, delay);\n\n/**\n * If {@link isElementHidden}, it will {@link showElementNow}, otherwise\n * {@link hideElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleShowElementNow = (element: Element) =>\n  isElementHidden(element) ? showElementNow(element) : hideElementNow(element);\n\n/**\n * Like {@link toggleShowElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleShowElement = (element: Element, delay = 0) =>\n  isElementHidden(element)\n    ? showElement(element, delay)\n    : hideElement(element, delay);\n\n/**\n * Returns true if the element's class list contains `lisn-hide`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementHidden = (element: Element) =>\n  hasClass(element, MC.PREFIX_HIDE);\n\n/**\n * Returns true if the element's class list contains `lisn-undisplay`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementUndisplayed = (element: Element) =>\n  hasClass(element, MC.PREFIX_UNDISPLAY);\n\n/**\n * Returns true if the element's class list contains the given class.\n *\n * @category CSS: Altering (optimized)\n */\nexport const hasClass = (el: Element, className: string) =>\n  MH.classList(el).contains(className);\n\n/**\n * Adds the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const addClassesNow = (el: Element, ...classNames: string[]) =>\n  MH.classList(el).add(...classNames);\n\n/**\n * Like {@link addClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const addClasses = (el: Element, ...classNames: string[]) =>\n  waitForMutateTime().then(() => addClassesNow(el, ...classNames));\n\n/**\n * Removes the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const removeClassesNow = (el: Element, ...classNames: string[]) =>\n  MH.classList(el).remove(...classNames);\n\n/**\n * Like {@link removeClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const removeClasses = (el: Element, ...classNames: string[]) =>\n  waitForMutateTime().then(() => removeClassesNow(el, ...classNames));\n\n/**\n * Toggles the given class on the element.\n *\n * @param {} force See {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle | DOMTokenList:toggle}\n *\n * @category CSS: Altering\n */\nexport const toggleClassNow = (\n  el: Element,\n  className: string,\n  force?: boolean,\n) => MH.classList(el).toggle(className, force);\n\n/**\n * Like {@link toggleClassNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleClass = (el: Element, className: string, force?: boolean) =>\n  waitForMutateTime().then(() => toggleClassNow(el, className, force));\n\n// For *Data: to avoid unnecessary type checking that ensures element is\n// HTMLElement or SVGElement, use getAttribute instead of dataset.\n\n/**\n * Returns the value of the given data attribute. The name of the attribute\n * must _not_ start with `data`. It can be in either camelCase or kebab-case,\n * it is converted as needed.\n *\n * @category CSS: Altering (optimized)\n */\nexport const getData = (el: Element, name: string) =>\n  MH.getAttr(el, MH.prefixData(name));\n\n/**\n * Returns the value of the given data attribute as a boolean. Its value is\n * expected to be either blank or \"true\" (which result in `true`), or \"false\"\n * (which results in `false`).\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering (optimized)\n */\nexport const getBoolData = (el: Element, name: string) => {\n  const value = getData(el, name);\n  return value !== null && value !== \"false\";\n};\n\n/**\n * Sets the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const setDataNow = (el: Element, name: string, value: string) =>\n  MH.setAttr(el, MH.prefixData(name), value);\n\n/**\n * Like {@link setDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const setData = (el: Element, name: string, value: string) =>\n  waitForMutateTime().then(() => setDataNow(el, name, value));\n\n/**\n * Sets the given data attribute with value \"true\" (default) or \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const setBoolDataNow = (el: Element, name: string, value = true) =>\n  MH.setAttr(el, MH.prefixData(name), value + \"\");\n\n/**\n * Like {@link setBoolDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const setBoolData = (el: Element, name: string, value = true) =>\n  waitForMutateTime().then(() => setBoolDataNow(el, name, value));\n\n/**\n * Sets the given data attribute with value \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const unsetBoolDataNow = (el: Element, name: string) =>\n  MH.unsetAttr(el, MH.prefixData(name));\n\n/**\n * Like {@link unsetBoolDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const unsetBoolData = (el: Element, name: string) =>\n  waitForMutateTime().then(() => unsetBoolDataNow(el, name));\n\n/**\n * Deletes the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const delDataNow = (el: Element, name: string) =>\n  MH.delAttr(el, MH.prefixData(name));\n\n/**\n * Like {@link delDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const delData = (el: Element, name: string) =>\n  waitForMutateTime().then(() => delDataNow(el, name));\n\n/**\n * Returns the value of the given property from the computed style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getComputedStylePropNow = (element: Element, prop: string) =>\n  getComputedStyle(element).getPropertyValue(prop);\n\n/**\n * Like {@link getComputedStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getComputedStyleProp = (element: Element, prop: string) =>\n  waitForMeasureTime().then(() => getComputedStylePropNow(element, prop));\n\n/**\n * Returns the value of the given property from the inline style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.getPropertyValue(prop);\n\n/**\n * Like {@link getStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getStyleProp = (element: Element, prop: string) =>\n  waitForMeasureTime().then(() => getStylePropNow(element, prop));\n\n/**\n * Sets the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const setStylePropNow = (\n  element: Element,\n  prop: string,\n  value: string,\n) => (element as DOMElement).style?.setProperty(prop, value);\n\n/**\n * Like {@link setStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const setStyleProp = (element: Element, prop: string, value: string) =>\n  waitForMutateTime().then(() => setStylePropNow(element, prop, value));\n\n/**\n * Deletes the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const delStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.removeProperty(prop);\n\n/**\n * Like {@link delStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const delStyleProp = (element: Element, prop: string) =>\n  waitForMutateTime().then(() => delStylePropNow(element, prop));\n\n/**\n * In milliseconds.\n *\n * @ignore\n * @internal\n */\nexport const getMaxTransitionDuration = async (element: Element) => {\n  const propVal = await getComputedStyleProp(element, \"transition-duration\");\n\n  return MH.max(\n    ...splitOn(propVal, \",\", true).map((strValue) => {\n      let duration = MH.parseFloat(strValue) || 0;\n\n      if (strValue === duration + \"s\") {\n        duration *= 1000;\n      }\n\n      return duration;\n    }),\n  );\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const disableInitialTransition = async (element: Element, delay = 0) => {\n  await addClasses(element, MC.PREFIX_TRANSITION_DISABLE);\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForSubsequentMutateTime();\n  removeClassesNow(element, MC.PREFIX_TRANSITION_DISABLE);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const setHasModal = () => setBoolData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const delHasModal = () => delData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const copyStyle = async (\n  fromElement: Element,\n  toElement: Element,\n  includeComputedProps?: string[],\n) => {\n  if (!isDOMElement(fromElement) || !isDOMElement(toElement)) {\n    return;\n  }\n\n  await waitForMeasureTime();\n  const props: Record<string, string> = {};\n\n  if (includeComputedProps) {\n    for (const prop of includeComputedProps) {\n      props[prop] = getComputedStylePropNow(fromElement, prop);\n    }\n  }\n\n  const style = fromElement.style; // only inline styles\n  for (const prop in style) {\n    const value = style.getPropertyValue(prop);\n    if (value) {\n      props[prop] = value;\n    }\n  }\n\n  for (const prop in props) {\n    setStyleProp(toElement, prop, props[prop]);\n  }\n\n  addClasses(toElement, ...MH.classList(fromElement));\n};\n\n/**\n * If the props keys are in camelCase they are converted to kebab-case\n *\n * If a value is null or undefined, the property is deleted.\n *\n * @ignore\n * @internal\n */\nexport const setNumericStyleProps = async (\n  element: Element,\n  props: CssNumericProps,\n  options: {\n    _prefix?: string;\n    _units?: string;\n    _numDecimal?: number;\n    _transformFn?: (prop: string, currVal: number, newVal: number) => number;\n  } = {},\n) => {\n  if (!isDOMElement(element)) {\n    return;\n  }\n\n  const transformFn = options._transformFn;\n\n  const varPrefix = MH.prefixCssJsVar(options?._prefix || \"\");\n  for (const prop in props) {\n    const cssPropSuffix = camelToKebabCase(prop);\n    const varName = `${varPrefix}${cssPropSuffix}`;\n\n    let value: number | null;\n\n    if (!isValidNum(props[prop])) {\n      value = null;\n    } else {\n      value = props[prop];\n      const thisNumDecimal =\n        options?._numDecimal ?? (value > 0 && value < 1 ? 2 : 0);\n\n      if (transformFn) {\n        const currValue = MH.parseFloat(await getStyleProp(element, varName));\n\n        value = transformFn(prop, currValue || 0, value);\n      }\n\n      value = roundNumTo(value, thisNumDecimal);\n    }\n\n    if (value === null) {\n      delStyleProp(element, varName);\n    } else {\n      setStyleProp(element, varName, value + (options?._units || \"\"));\n    }\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\ntype CssNumericProps = Record<string, number | undefined | null>;\n\n// ----------------------------------------\n\ntype CSSTransition = {\n  _cancel: () => undefined;\n  _finish: () => undefined;\n  _isCancelled: () => boolean;\n};\n\nconst PREFIX_HAS_MODAL = MH.prefixName(\"has-modal\");\n\nconst scheduledCSSTransitions = MH.newWeakMap<\n  Element,\n  Record<string, CSSTransition>\n>();\n\nconst cancelCSSTransitions = (element: Element, ...toClasses: string[]) => {\n  const scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    return;\n  }\n\n  for (const toCls of toClasses) {\n    const scheduledTransition = scheduledTransitions[toCls];\n    if (scheduledTransition) {\n      scheduledTransition._cancel();\n    }\n  }\n};\n\nconst scheduleCSSTransition = (element: Element, toCls: string) => {\n  let scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    scheduledTransitions = {};\n    scheduledCSSTransitions.set(element, scheduledTransitions);\n  }\n\n  let isCancelled = false;\n  scheduledTransitions[toCls] = {\n    _cancel: () => {\n      isCancelled = true;\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _finish: () => {\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _isCancelled: () => {\n      return isCancelled;\n    },\n  };\n\n  return scheduledTransitions[toCls];\n};\n"],"mappings":"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","ignoreList":[]}