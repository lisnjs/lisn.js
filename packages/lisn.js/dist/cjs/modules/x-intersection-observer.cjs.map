{"version":3,"file":"x-intersection-observer.cjs","names":["MH","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","o","Symbol","iterator","constructor","prototype","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","length","_n","F","s","done","value","f","TypeError","next","_arrayLikeToArray","toString","slice","name","from","test","_defineProperties","enumerable","configurable","writable","_toPropertyKey","key","_createClass","_classCallCheck","_defineProperty","_toPrimitive","toPrimitive","String","Number","XIntersectionObserver","exports","callback","observeOptions","_this","observedTargets","newWeakSet","targetsToSkip","intersectionHandler","entries","selectedEntries","_iterator","_step","entry","targetOf","deleteKey","push","err","lengthOf","observer","newIntersectionObserver","root","rootMargin","thresholds","observe","_len","arguments","targets","_key","_i","_targets","target","add","observeLater","_len2","_key2","_i2","_targets2","unobserve","_len3","_key3","_i3","_targets3","disconnect","takeRecords"],"sources":["../../../src/ts/modules/x-intersection-observer.ts"],"sourcesContent":["/**\n * @module Modules/XIntersectionObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nexport type XIntersectionObserverCallback = (\n  entries: IntersectionObserverEntry[],\n  observer: XIntersectionObserver,\n) => void;\n\n/**\n * {@link XIntersectionObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}\n * with added capabilities:\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n */\nexport class XIntersectionObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root | IntersectionObserver:root}.\n   */\n  readonly root!: Element | Document | null;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin | IntersectionObserver:rootMargin}.\n   */\n  readonly rootMargin!: string;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/thresholds | IntersectionObserver:thresholds}.\n   */\n  readonly thresholds!: number[];\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/observe | IntersectionObserver:observe} except it accepts multiple\n   * targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent intersection change.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/unobserve | IntersectionObserver:unobserve} except it accepts multiple\n   * targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/disconnect | IntersectionObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * Like `IntersectionObserver.takeRecords`.\n   */\n  readonly takeRecords: () => void;\n\n  constructor(\n    callback: XIntersectionObserverCallback,\n    observeOptions?: IntersectionObserverInit,\n  ) {\n    let observedTargets = MH.newWeakSet<Element>();\n    const targetsToSkip = MH.newWeakSet<Element>();\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      const selectedEntries = [];\n\n      for (const entry of entries) {\n        if (targetsToSkip.has(MH.targetOf(entry))) {\n          MH.deleteKey(targetsToSkip, MH.targetOf(entry));\n          continue;\n        }\n\n        selectedEntries.push(entry);\n      }\n\n      if (MH.lengthOf(selectedEntries)) {\n        callback(selectedEntries, this);\n      }\n    };\n\n    const observer = MH.newIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    MH.defineProperty(this, \"root\", { get: () => observer.root });\n    MH.defineProperty(this, \"rootMargin\", {\n      get: () => observer.rootMargin,\n    });\n    MH.defineProperty(this, \"thresholds\", {\n      get: () => observer.thresholds,\n    });\n\n    this.observe = (...targets) => {\n      for (const target of targets) {\n        observedTargets.add(target);\n        observer.observe(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.add(target);\n        this.observe(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        observer.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      observedTargets = MH.newWeakSet();\n      observer.disconnect();\n    };\n\n    this.takeRecords = () => observer.takeRecords();\n  }\n}\n"],"mappings":"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","ignoreList":[]}