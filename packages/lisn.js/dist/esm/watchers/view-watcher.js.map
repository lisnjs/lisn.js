{"version":3,"file":"view-watcher.js","names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","toString","from","test","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_defineProperty","_toPrimitive","toPrimitive","String","Number","MC","MH","setNumericStyleProps","waitForInteractive","waitForMeasureTime","waitForSubsequentMeasureTime","logError","omitKeys","compareValuesIn","createOverlay","getClosestScrollable","fetchViewportSize","toMargins","objToStrKey","VIEWS_SPACE","getViewsBitmask","parseScrollOffset","wrapCallback","newXMap","newXWeakMap","XIntersectionObserver","DOMWatcher","ScrollWatcher","SizeWatcher","debug","ViewWatcher","config","CONSTRUCTOR_KEY","illegalConstructorError","logger","Logger","logAtCreation","allViewData","newWeakMap","allCallbacks","newMap","intersectionHandler","entries","debug9","concat","_iterator","_step","entry","processEntry","err","observeOptions","root","_root","threshold","_threshold","rootMargin","_rootMargin","xObserver","fetchCurrentView","element","realtime","undefined","fetchData","_ref","_callee","entryOrElement","intersection","data","_callee$","_context","fetchIntersectionData","fetchViewData","_x","newPromise","observer","newIntersectionObserver","promise","disconnect","observe","createCallback","handler","options","trackType","_allCallbacks$get","_element","remove","get","_callback","debug5","callback","onRemove","deleteHandler","sGet","set","_trackType","_options","setupOnView","_ref2","_callee2","target","userOptions","viewData","_callee2$","_context2","fetchOptions","rootBounds","S_WIDTH","S_HEIGHT","TRACK_FULL","setupInviewTrack","isRemoved","observeLater","skipInitial","viewsToBitmask","views","_viewsBitmask","invokeCallback","_x2","_x3","_x4","_x5","removeOnView","_ref3","_callee3","_allCallbacks$get2","currEntry","_callee3$","_context3","setViewCssProps","_x6","_x7","_x8","deleteKey","prune","has","debug4","unobserve","_ref4","_callee4","_allCallbacks$get3","latestData","viewsBitmask","_iterator2","_step2","_entry","_callee4$","_context4","targetOf","_x9","_ref5","_callee6","viewCallback","sizeWatcher","scrollWatcher","domWatcher","isInview","removeTrackCallback","scrollableAncestors","addTrackCallback","enterOrLeaveCallback","_callee6$","_context6","debug8","reuse","_debounceWindow","subtree","fetchScrollableAncestors","_config$_root","trackCallback","_callee5","prevData","changed","_callee5$","_context5","viewChanged","onMutation","categories","S_ATTRIBUTE","S_SKIP_INITIAL","onResize","S_DEBOUNCE_WINDOW","_resizeThreshold","getWindow","_iterator3","_step3","ancestor","onScroll","scrollable","_scrollThreshold","target__ignored","S_AT","assign","bitmask","TRACK_REGULAR","_x10","_x11","_x12","fetchElement","trackView","noTrackView","onView","offView","getConfig","_instances$get","myConfig","configStrKey","instance","instances","SYMBOL","_config$rootMargin","_ref7","_callee7","_callee7$","_context7","t0","t1","t2","debounceWindow","t3","resizeThreshold","t4","scrollThreshold","_x13","_x14","_x15","_ref8","_callee8","_callee8$","_context8","active","_x16","_x17","copyBoundingRectProps","targetBounds","relative","bit","_ref9","_callee9","entryOrTarget","vpSize","rootMargins","isIntersecting","isCrossOrigin","_args9","_callee9$","_context9","isInstanceOf","IntersectionObserverEntry","boundingClientRect","fetchBounds","_target","_targetBounds","_rootMargins","_rootBounds","_isIntersecting","_isCrossOrigin","_x18","_x19","_ref10","_callee10","rect","_yield$fetchViewportS","width","height","_callee10$","_context10","getBoundingClientRect","x","left","right","top","bottom","S_LEFT","S_RIGHT","S_TOP","S_BOTTOM","_x20","_x21","_x22","_ref11","_callee11","_intersection$_isInte","vpHeight","vpWidth","_args11","_callee11$","_context11","fetchViews","merge","hMiddle","NaN","vMiddle","_x23","_ref12","_callee12","useScrollingAncestor","delta","xView","yView","scrollingAncestor","_callee12$","_context12","_left","_right","_top","_bottom","S_BELOW","S_ABOVE","_x24","_x25","_x26","props","_prefix","_numDecimal","_ref13","_callee13","overlayOptions","_callee13$","_context13","isElement","isString","usageError","getOverlayOptions","_x27","_x28","_parseScrollOffset","reference","ovrDimension","parent","isHTMLElement","style","copyObject"],"sources":["../../../src/ts/watchers/view-watcher.ts"],"sourcesContent":["/**\n * @module Watchers/ViewWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  ViewTarget,\n  View,\n  BoundingRect,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { setNumericStyleProps } from \"@lisn/utils/css-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForSubsequentMeasureTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys, compareValuesIn } from \"@lisn/utils/misc\";\nimport { createOverlay, OverlayOptions } from \"@lisn/utils/overlays\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport { toMargins, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  VIEWS_SPACE,\n  getViewsBitmask,\n  parseScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap, newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XIntersectionObserver } from \"@lisn/modules/x-intersection-observer\";\n\nimport { DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewWatcher} monitors the position of a given target relative to the\n * given {@link ViewWatcherConfig.root | root} or the viewport.\n *\n * It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class ViewWatcher {\n  /**\n   * Call the given handler whenever the {@link ViewWatcherConfig.root | root}'s\n   * view relative to the target position changes, i.e. when the target enters\n   * or leaves the root.\n   *\n   * Unless {@link OnViewOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current view if it matches this\n   * set of options*.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking position across root\n   * using {@link trackView}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or the options are invalid.\n   */\n  readonly onView: (\n    target: ViewTarget,\n    handler: OnViewHandler,\n    options?: OnViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offView: (target: ViewTarget, handler: OnViewHandler) => void;\n\n  /**\n   * This does more than just {@link onView}. The difference is that in\n   * addition to a change of {@link View}, such as the target entering or\n   * leaving the ViewWatcher's {@link ViewWatcherConfig.root | root} (by\n   * default the viewport), the handler is also called each time the target's\n   * relative view changes _while inside the root_.\n   *\n   * A change of relative position happens when:\n   * - the target is resized\n   * - the root is resized\n   * - the any of the target's scrollable ancestors is scrolled\n   * - the target's attributes changed that resulted in a change of position\n   *\n   * All of the above are accounted for. Internally it uses\n   * {@link ScrollWatcher}, {@link DOMWatcher} and {@link SizeWatcher} to keep\n   * track of all of this.\n   *\n   * If the target is leaves the ViewWatcher's\n   * {@link ViewWatcherConfig.root | root}, the handler will be called with\n   * the {@link ViewData}, and the above events will stop being tracked until\n   * the target enters the watcher's root again.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates the following set of CSS variables on the target's style and\n   * represent its relative position:\n   *\n   * - `--lisn-js--r-top`\n   * - `--lisn-js--r-bottom`\n   * - `--lisn-js--r-left`\n   * - `--lisn-js--r-right`\n   * - `--lisn-js--r-width`\n   * - `--lisn-js--r-height`\n   * - `--lisn-js--r-h-middle`\n   * - `--lisn-js--r-v-middle`\n   *\n   * See {@link ViewData.relative} for an explanation of each.\n   *\n   * Note that only Element targets are supported here and not offsets.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or \"views\" are invalid.\n   */\n  readonly trackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n    options?: TrackViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackView}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n  ) => void;\n\n  /**\n   * Get the current view relative to the target. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param {} realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                    this only when doing realtime scroll-based animations\n   *                    as it may cause a forced layout.\n   */\n  readonly fetchCurrentView: (\n    target: ViewTarget,\n    realtime?: boolean,\n  ) => Promise<ViewData>;\n\n  /**\n   * Creates a new instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: ViewWatcherConfig = {}) {\n    return new ViewWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing  instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: ViewWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new ViewWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ViewWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ViewWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ViewWatcher\", logAtCreation: config })\n      : null;\n\n    const allViewData = MH.newWeakMap<Element, ViewData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<\n        OnViewHandler,\n        {\n          _callback: OnViewCallback;\n          _trackType: TrackType;\n          _options: OnViewOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      debug: logger?.debug9(`Got ${entries.length} new entries`, entries);\n\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    const observeOptions = {\n      root: config._root,\n      threshold: config._threshold,\n      rootMargin: config._rootMargin,\n    };\n\n    const xObserver = new XIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    // ----------\n\n    const fetchCurrentView = (\n      element: Element,\n      realtime = false,\n    ): Promise<ViewData> => {\n      const fetchData = async (\n        entryOrElement: IntersectionObserverEntry | Element,\n      ) => {\n        const intersection = await fetchIntersectionData(\n          config,\n          entryOrElement,\n          realtime,\n        );\n        const data = await fetchViewData(intersection, realtime);\n        return data;\n      };\n\n      if (realtime) {\n        return fetchData(element);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp IntersectionObserver\n        const observer = MH.newIntersectionObserver((entries) => {\n          const promise = fetchData(entries[0]);\n          observer.disconnect();\n          promise.then(resolve);\n        }, observeOptions);\n\n        observer.observe(element);\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n      trackType: TrackType,\n    ): OnViewCallback => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      allCallbacks.sGet(element).set(handler, {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      });\n\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      userOptions: (OnViewOptions & TrackViewOptions) | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOptions(config._root, target, userOptions);\n      const element = options._element;\n\n      const callback = createCallback(handler, options, trackType);\n\n      // View watcher should be used before the DOM is loaded since the initial\n      // size of the root may be 0 or close to 0 and would lead to premature\n      // triggering.\n      await waitForInteractive();\n\n      // Initial call doesn't need to be realtime, and best to use an actual\n      // IntersectionObserverEntry for that one.\n      let viewData = await fetchCurrentView(element);\n\n      if (\n        viewData.rootBounds[MC.S_WIDTH] === 0 &&\n        viewData.rootBounds[MC.S_HEIGHT] === 0\n      ) {\n        // Possibly the root is being setup now, wait for one AF\n        debug: logger?.debug5(\n          \"Got zero root size, deferring for a bit\",\n          config._root,\n        );\n        await waitForSubsequentMeasureTime();\n        viewData = await fetchCurrentView(element);\n      }\n\n      if (trackType === TRACK_FULL) {\n        // Detect resize or scroll\n        await setupInviewTrack(options, callback, viewData);\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      // Always use observeLater to skip the initial call from the\n      // IntersectionObserver, and call callbacks that have skipInitial: false\n      // here. Otherwise, we can't tell from inside the intersectionHandler whether\n      // a callback wants to skip its initial call or not.\n      //\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, viewData);\n        if (viewsToBitmask(viewData.views) & options._viewsBitmask) {\n          await invokeCallback(callback, element, viewData);\n        }\n      }\n    };\n\n    // ----------\n\n    const removeOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      trackType: TrackType,\n    ) => {\n      // For time sync, so that if called immediately after onView without\n      // awaiting, it will remove the callback that is about to be added.\n      // But if no such handler has been added we may unnecessarily\n      // create an overlay... TODO\n      const options = await fetchOptions(config._root, target, {});\n      const element = options._element;\n\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setViewCssProps) {\n          // delete the properties\n          setViewCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n    ) => {\n      const element = options._element;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n\n        xObserver.unobserve(element);\n        MH.deleteKey(allViewData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = async (entry: IntersectionObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      // This doesn't need to be \"realtime\", since IntersectionObserver alone\n      // introduces a delay.\n      const intersection = await fetchIntersectionData(config, entry);\n      const latestData = await fetchViewData(intersection);\n      debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n      const viewsBitmask = viewsToBitmask(latestData.views);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        if (viewsBitmask & entry._options._viewsBitmask) {\n          invokeCallback(entry._callback, element, latestData);\n        }\n      }\n    };\n\n    // ----------\n\n    const setupInviewTrack = async (\n      options: OnViewOptionsInternal,\n      viewCallback: OnViewCallback,\n      viewData: ViewData,\n    ) => {\n      const element = options._element;\n      debug: logger?.debug8(\n        \"Setting up size, scroll and attribute tracking\",\n        element,\n      );\n\n      const sizeWatcher = SizeWatcher.reuse();\n      const scrollWatcher = ScrollWatcher.reuse();\n      const realtime = options._debounceWindow === 0;\n\n      // Detect when target's class or style attribute change\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      // We need to remove the tracking callback when target leaves view and re-add\n      // it when it enters view. But the OnViewCallback that is associated may have\n      // already been added prior, by calling onView with this handler, so we can't\n      // always wrap around it, in order to detect when it's called with a change\n      // of view. So we setup another OnViewCallback tied to the tracking callback.\n      let isInview = false;\n\n      let removeTrackCallback: (() => void) | null = null;\n\n      // Finds any scrollable ancestors of the element and detect scroll on them.\n      const scrollableAncestors = await fetchScrollableAncestors(\n        element,\n        realtime,\n      );\n      if (viewCallback.isRemoved()) {\n        return;\n      }\n\n      const addTrackCallback = () => {\n        const trackCallback = wrapCallback(async () => {\n          const prevData = allViewData.get(element);\n\n          // Get the latest view data for the target\n          const latestData = await fetchCurrentView(element, realtime);\n          debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n          const changed = viewChanged(latestData, prevData);\n          if (changed) {\n            // When comparing for changes, we round the numbers to certain number\n            // of decimal places, and allViewData serves as a \"last threshold\"\n            // state, so only update it if there was a significant change.\n            // Otherwise very quick changes in small increments would get\n            // rejected as \"no change\".\n            allViewData.set(element, latestData);\n\n            if (isInview && !viewCallback.isRemoved()) {\n              // Could have been removed during the debounce window\n              await invokeCallback(viewCallback, element, latestData);\n            }\n          } else {\n            debug: logger?.debug9(\"ViewData same as last\");\n          }\n        });\n\n        // TODO Is there a better way to detect when it's moved?\n        viewCallback.onRemove(trackCallback.remove);\n        removeTrackCallback = trackCallback.remove;\n\n        // Detect when target's class or style attribute change\n        domWatcher.onMutation(trackCallback, {\n          categories: [MC.S_ATTRIBUTE],\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when target is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: element,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the root is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: config._root ?? MH.getWindow(),\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the target's scrollable ancestors are scrolled (this\n        // will almost certainly include the main scrollable element).\n        for (const ancestor of scrollableAncestors) {\n          scrollWatcher.onScroll(trackCallback, {\n            scrollable: ancestor,\n            [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n            threshold: options._scrollThreshold,\n            [MC.S_SKIP_INITIAL]: true,\n          });\n        }\n      };\n\n      const enterOrLeaveCallback = createCallback(\n        (target__ignored, viewData) => {\n          if (viewData.views[0] === MC.S_AT) {\n            if (!isInview) {\n              isInview = true;\n              addTrackCallback();\n            }\n          } else if (removeTrackCallback) {\n            isInview = false;\n            removeTrackCallback();\n            removeTrackCallback = null;\n          }\n        },\n        MH.assign(options, {\n          _viewsBitmask: VIEWS_SPACE.bitmask,\n        }),\n        TRACK_REGULAR,\n      );\n\n      viewCallback.onRemove(enterOrLeaveCallback.remove);\n\n      allViewData.set(element, viewData); // to avoid duplicate initial call\n      // Setup the track and the \"inView\" state\n      if (!enterOrLeaveCallback.isRemoved()) {\n        invokeCallback(enterOrLeaveCallback, element, viewData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentView = (target, realtime = false) =>\n      fetchElement(config._root, target).then((element) =>\n        fetchCurrentView(element, realtime),\n      );\n\n    // ----------\n\n    this.trackView = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      return setupOnView(element, handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackView = (element, handler?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      removeOnView(element, handler, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onView = (target, handler, options?) =>\n      setupOnView(target, handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offView = (target, handler) =>\n      removeOnView(target, handler, TRACK_REGULAR); // no need to await\n  }\n}\n\n/**\n * @interface\n */\nexport type ViewWatcherConfig = {\n  /**\n   * The root element to use for the IntersectionObserver.\n   *\n   * **NOTE:** If the target you want to observe (via\n   * {@link ViewWatcher.onView}) is inside a scrolling element, then you should\n   * probably set the watcher's root to be that scrolling element or a wrapper\n   * around it. However, even if you don't or can't do that, the watcher will\n   * try to be smart about that, and when the target is no longer intercepting\n   * because it's scrolled outside its scrolling container, and yet its\n   * bounding box is still inside the watcher root (e.g. the viewport) the\n   * watcher will determine the relative view based on the scrolling container\n   * and not the actual watcher root.\n   *\n   * @defaultValue null\n   */\n  root?: Element | null;\n\n  /**\n   * The rootMargin to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue \"0px 0px 0px 0px\"\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue 0\n   */\n  threshold?: number | number[];\n};\n\n/**\n * @interface\n */\nexport type OnViewOptions = {\n  /**\n   * Specifies a list of {@link View}s to target for.\n   *\n   * The handler will only be called if there is a change of view relative to\n   * the target that matches the given ones.\n   *\n   * It can be a comma-separated list of \"views\" or an array of such names.\n   *\n   * @defaultValue undefined\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * @interface\n */\nexport type TrackViewOptions = {\n  /**\n   * Use this debounce window for the {@link ScrollWatcher} and\n   * {@link SizeWatcher} involved in the view tracking.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts during scroll, but you probably need this when\n   * doing scroll-based animations.\n   *\n   * @defaultValue undefined // ScrollWatcher and SizeWatcher defaults\n   */\n  debounceWindow?: number;\n\n  /**\n   * Use this resize threshold for the {@link SizeWatcher} involved in the view\n   * tracking.\n   *\n   * @defaultValue undefined // SizeWatcher default\n   */\n  resizeThreshold?: number;\n\n  /**\n   * Use this scroll threshold for the {@link ScrollWatcher} involved in the\n   * view tracking.\n   *\n   * @defaultValue undefined // ScrollWatcher default\n   */\n  scrollThreshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - The element that is the target of the IntersectionObserver. If the call to\n *   {@link ViewWatcher.onView} specified an element as the target, it will be\n *   the same. If it specified an offset, then the element passed to the\n *   callback will be an absolutely positioned trigger overlay that's created\n *   as a result.\n * - the {@link ViewData} for relative to the target\n */\nexport type OnViewHandlerArgs = [Element, ViewData];\nexport type OnViewCallback = Callback<OnViewHandlerArgs>;\nexport type OnViewHandler = CallbackHandler<OnViewHandlerArgs> | OnViewCallback;\n\nexport type ViewData = {\n  isIntersecting: boolean;\n\n  targetBounds: BoundingRect;\n\n  rootBounds: BoundingRect;\n\n  /**\n   * The current view or views of the target. There would be two views given\n   * only if the target is _not_ in view and it's diagonally across from the\n   * root, e.g. both below and to the right.\n   */\n  views: [View, View?];\n\n  /**\n   * This is the target's position relative to the\n   * {@link ViewWatcherConfig.root | root} with values relative to the root\n   * size.\n   *\n   * It is like the {@link targetBounds} except that each quantity is scaled by\n   * the root's width or height, and having two additional computed values.\n   */\n  relative: {\n    x: number;\n    y: number;\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n    width: number;\n    height: number;\n\n    /**\n     * Average of the relative left and right.\n     */\n    hMiddle: number;\n\n    /**\n     * Average of the relative top and bottom.\n     */\n    vMiddle: number;\n  };\n};\n\n// ----------------------------------------\n\ntype ViewWatcherConfigInternal = {\n  _root: Element | null;\n  _rootMargin: string;\n  _threshold: number | number[];\n};\n\ntype OnViewOptionsInternal = {\n  _element: Element;\n  _viewsBitmask: number;\n  _debounceWindow: number | undefined;\n  _resizeThreshold: number | undefined;\n  _scrollThreshold: number | undefined;\n};\n\ntype IntersectionData = {\n  _target: Element;\n  _targetBounds: BoundingRect;\n  _root: Element | null;\n  _rootMargins: [number, number, number, number];\n  _rootBounds: BoundingRect;\n  _isIntersecting: boolean | null; // null means unknown, no IntersectionObserverEntry\n  _isCrossOrigin: boolean | null; // null means unknown, no IntersectionObserverEntry\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, ViewWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (\n  config: ViewWatcherConfig | undefined,\n): ViewWatcherConfigInternal => {\n  return {\n    _root: config?.root || null,\n    _rootMargin: config?.rootMargin ?? \"0px 0px 0px 0px\",\n    _threshold: config?.threshold || 0,\n  };\n};\n\nconst TRACK_REGULAR = 1; // only entering/leaving root\nconst TRACK_FULL = 2; // entering/leaving + moving across (fine-grained)\n\n// --------------------\n\nconst fetchOptions = async (\n  root: Element | null,\n  target: ViewTarget,\n  options: (OnViewOptions & TrackViewOptions) | undefined,\n): Promise<OnViewOptionsInternal> => {\n  return {\n    _element: await fetchElement(root, target),\n    _viewsBitmask: getViewsBitmask(options?.views),\n    _debounceWindow: options?.debounceWindow,\n    _resizeThreshold: options?.resizeThreshold,\n    _scrollThreshold: options?.scrollThreshold,\n  };\n};\n\nconst fetchScrollableAncestors = async (\n  element: Element,\n  realtime: boolean,\n) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollableAncestors = [];\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = getClosestScrollable(ancestor, { active: true }))) {\n    scrollableAncestors.push(ancestor);\n  }\n\n  return scrollableAncestors;\n};\n\nconst viewChanged = (latestData: ViewData, prevData: ViewData | undefined) =>\n  !prevData ||\n  viewsToBitmask(prevData.views) !== viewsToBitmask(latestData.views) ||\n  !compareValuesIn(\n    MH.copyBoundingRectProps(prevData.targetBounds),\n    MH.copyBoundingRectProps(latestData.targetBounds),\n  ) ||\n  !compareValuesIn(prevData.rootBounds, latestData.rootBounds) ||\n  !compareValuesIn(prevData.relative, latestData.relative);\n\nconst viewsToBitmask = (views: [View, View?]) =>\n  VIEWS_SPACE.bit[views[0]] | (views[1] ? VIEWS_SPACE.bit[views[1]] : 0);\n\nconst fetchIntersectionData = async (\n  config: ViewWatcherConfigInternal,\n  entryOrTarget: IntersectionObserverEntry | Element,\n  realtime = false,\n): Promise<IntersectionData> => {\n  const root = config._root;\n  const vpSize = await fetchViewportSize(realtime);\n  const rootMargins = toMargins(config._rootMargin, vpSize);\n\n  let target: Element;\n  let targetBounds: BoundingRect;\n  let rootBounds: BoundingRect | null = null;\n  let isIntersecting: boolean | null = null;\n  let isCrossOrigin: boolean | null = null;\n\n  if (MH.isInstanceOf(entryOrTarget, IntersectionObserverEntry)) {\n    target = entryOrTarget.target;\n    targetBounds = entryOrTarget.boundingClientRect;\n    rootBounds = entryOrTarget.rootBounds;\n    isIntersecting = entryOrTarget.isIntersecting;\n    isCrossOrigin = !entryOrTarget.rootBounds;\n  } else {\n    target = entryOrTarget;\n    targetBounds = await fetchBounds(target, realtime);\n  }\n\n  if (!rootBounds) {\n    rootBounds = await fetchBounds(root, realtime, rootMargins);\n  }\n\n  return {\n    _target: target,\n    _targetBounds: targetBounds,\n    _root: root,\n    _rootMargins: rootMargins,\n    _rootBounds: rootBounds,\n    _isIntersecting: isIntersecting,\n    _isCrossOrigin: isCrossOrigin,\n  };\n};\n\nconst fetchBounds = async (\n  root: Element | null,\n  realtime: boolean,\n  rootMargins?: [number, number, number, number],\n): Promise<BoundingRect> => {\n  let rect: BoundingRect;\n\n  if (root) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    rect = MH.copyBoundingRectProps(MH.getBoundingClientRect(root));\n  } else {\n    const { width, height } = await fetchViewportSize(realtime);\n    rect = {\n      x: 0,\n      left: 0,\n      right: width,\n      width,\n      y: 0,\n      top: 0,\n      bottom: height,\n      height,\n    };\n  }\n\n  if (rootMargins) {\n    rect.x = rect[MC.S_LEFT] -= rootMargins[3];\n    rect[MC.S_RIGHT] += rootMargins[1];\n    rect[MC.S_WIDTH] += rootMargins[1] + rootMargins[3];\n\n    rect.y = rect[MC.S_TOP] -= rootMargins[0];\n    rect[MC.S_BOTTOM] += rootMargins[2];\n    rect[MC.S_HEIGHT] += rootMargins[0] + rootMargins[2];\n  }\n\n  return rect;\n};\n\nconst fetchViewData = async (\n  intersection: IntersectionData,\n  realtime = false,\n): Promise<ViewData> => {\n  const vpSize = await fetchViewportSize(realtime);\n  const vpHeight = vpSize[MC.S_HEIGHT];\n  const vpWidth = vpSize[MC.S_WIDTH];\n\n  const views = await fetchViews(intersection, realtime);\n\n  const relative = MH.merge(\n    { hMiddle: NaN, vMiddle: NaN },\n    MH.copyBoundingRectProps(intersection._targetBounds),\n  );\n\n  relative.y /= vpHeight;\n  relative[MC.S_TOP] /= vpHeight;\n  relative[MC.S_BOTTOM] /= vpHeight;\n  relative[MC.S_HEIGHT] /= vpHeight;\n\n  relative.x /= vpWidth;\n  relative[MC.S_LEFT] /= vpWidth;\n  relative[MC.S_RIGHT] /= vpWidth;\n  relative[MC.S_WIDTH] /= vpWidth;\n\n  relative.hMiddle = (relative[MC.S_LEFT] + relative[MC.S_RIGHT]) / 2;\n  relative.vMiddle = (relative[MC.S_TOP] + relative[MC.S_BOTTOM]) / 2;\n\n  const viewData: ViewData = {\n    isIntersecting: intersection._isIntersecting ?? views[0] === MC.S_AT,\n    targetBounds: intersection._targetBounds,\n    rootBounds: intersection._rootBounds,\n    views,\n    relative,\n  };\n\n  return viewData;\n};\n\nconst fetchViews = async (\n  intersection: IntersectionData,\n  realtime: boolean,\n  useScrollingAncestor?: Element,\n): Promise<[View, View?]> => {\n  if (intersection._isIntersecting) {\n    return [MC.S_AT];\n  }\n\n  let rootBounds: BoundingRect;\n  if (useScrollingAncestor) {\n    rootBounds = await fetchBounds(\n      useScrollingAncestor,\n      realtime,\n      intersection._rootMargins,\n    );\n  } else {\n    rootBounds = intersection._rootBounds;\n  }\n\n  const targetBounds = intersection._targetBounds;\n  const delta = {\n    _left: rootBounds[MC.S_LEFT] - targetBounds[MC.S_LEFT],\n    _right: targetBounds[MC.S_RIGHT] - rootBounds[MC.S_RIGHT],\n    _top: rootBounds[MC.S_TOP] - targetBounds[MC.S_TOP],\n    _bottom: targetBounds[MC.S_BOTTOM] - rootBounds[MC.S_BOTTOM],\n  };\n\n  let xView: View | null = null;\n  let yView: View | null = null;\n  if (delta._left > 0 && delta._right > 0) {\n    // Target is wider than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    xView = delta._left > delta._right ? MC.S_RIGHT : MC.S_LEFT;\n  } else if (delta._left > 0) {\n    // Target is to the left of the root\n    xView = MC.S_RIGHT;\n  } else if (delta._right > 0) {\n    // Target is to the right of the root\n    xView = MC.S_LEFT;\n  } // else target is horizontally contained in root, see below\n\n  if (delta._top > 0 && delta._bottom > 0) {\n    // Target is taller than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    yView = delta._top > delta._bottom ? MC.S_BELOW : MC.S_ABOVE;\n  } else if (delta._top > 0) {\n    // Target is above the root\n    yView = MC.S_BELOW;\n  } else if (delta._bottom > 0) {\n    // Target is below the root\n    yView = MC.S_ABOVE;\n  } // else target is vertically contained in root, see below\n\n  if (xView && yView) {\n    // diagonally out of vide\n    return [xView, yView];\n  } else if (xView) {\n    // horizontally out of vide\n    return [xView];\n  } else if (yView) {\n    // vertically out of vide\n    return [yView];\n  }\n\n  // The target is contained in the root bounds and yet isIntersecting was\n  // not true. This means that either:\n  //\n  // 1. It may be intersecting, but we didn't get an actual\n  //    IntersectionObserverEntry and we don't know if it's intersecting\n  //    or not\n  // 2. The target is inside a scrolling element that is _not_ being used as\n  //    the observer root, and the target has scrolled out of the scrollable\n  //    bounds but still inside the viewport\n  // 3. We're inside a cross-origin iFrame and the iFrame is partially or\n  //    fully not-intersecting\n\n  if (!intersection._isCrossOrigin) {\n    // This is case 1. or 2. => get the views relative to the closest\n    // scrollable ancestor relative to which it is _not_ intersecting, if\n    // any. If it's nested inside several scrolling elements, we'll end up\n    // looping over each one until we find the one for which the target is\n    // outside its box.\n    //\n    // It is too risky to use active isScrollable check here since we could be\n    // inside an onScroll handler, so just use passive.\n    const scrollingAncestor = getClosestScrollable(\n      useScrollingAncestor ?? intersection._target,\n    );\n\n    if (scrollingAncestor) {\n      return fetchViews(intersection, realtime, scrollingAncestor);\n    }\n  }\n\n  // Either case 3. (cross-origin iframe outside the viewport) or case 1. and\n  // the target is actually intersecting the root. Either way, it's to be\n  // considered in-view of its root.\n  return [MC.S_AT];\n};\n\nconst setViewCssProps = (\n  element: Element,\n  viewData: ViewData | undefined | null,\n) => {\n  const relative: Record<string, number> = viewData?.relative || {};\n  const props = {\n    top: relative.top,\n    bottom: relative.bottom,\n    left: relative.left,\n    right: relative.right,\n    [MC.S_WIDTH]: relative[MC.S_WIDTH],\n    [MC.S_HEIGHT]: relative[MC.S_HEIGHT],\n    hMiddle: relative.hMiddle,\n    vMiddle: relative.vMiddle,\n  };\n  setNumericStyleProps(element, props, { _prefix: \"r-\", _numDecimal: 4 }); // don't await here\n};\n\nconst fetchElement = async (\n  root: Element | null,\n  target: ViewTarget,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  } else if (!MH.isString(target)) {\n    throw MH.usageError(\n      \"'target' must be an offset string or an HTMLElement | SVGElement | MathMLElement\",\n    );\n  }\n\n  const overlayOptions = getOverlayOptions(root, target);\n  return await createOverlay(overlayOptions);\n};\n\nconst getOverlayOptions = (\n  root: Element | null,\n  target: string,\n): OverlayOptions => {\n  const { reference, value } = parseScrollOffset(target);\n\n  let ovrDimension: \"width\" | \"height\";\n  if (reference === MC.S_TOP || reference === MC.S_BOTTOM) {\n    ovrDimension = MC.S_WIDTH;\n  } else if (reference === MC.S_LEFT || reference === MC.S_RIGHT) {\n    ovrDimension = MC.S_HEIGHT;\n  } else {\n    throw MH.usageError(`Invalid offset reference: '${reference}'`);\n  }\n\n  return {\n    parent: MH.isHTMLElement(root) ? root : undefined,\n    style: {\n      [reference]: value,\n      [ovrDimension]: \"100%\",\n    },\n  };\n};\n\nconst invokeCallback = (\n  callback: OnViewCallback,\n  element: Element,\n  viewData: ViewData,\n) => callback.invoke(element, MH.copyObject(viewData)).catch(logError);\n"],"mappings":"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","ignoreList":[]}