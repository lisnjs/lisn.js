{"version":3,"file":"size.cjs","names":["MC","_interopRequireWildcard","require","MH","_domOptimize","_overlays","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","getEntryContentBox","entry","size","contentBoxSize","getSizeFromInlineBlock","rect","contentRect","S_WIDTH","S_HEIGHT","exports","getEntryBorderBox","fallbackToContent","borderBoxSize","NaN","isValidBox","box","includes","ALL_BOXES","isValidDimension","dimension","ALL_DIMENSIONS","tryGetViewportOverlay","viewportOverlay","fetchViewportOverlay","init","fetchViewportSize","realtime","_MH$getDocScrollingEl","waitForMeasureTime","root","hasDOM","getDocScrollingElement","getBody","clientWidth","clientHeight","S_INLINE_SIZE","S_BLOCK_SIZE","isIterableObject","initPromise","createOverlay","id","prefixName","style","position"],"sources":["../../../src/ts/utils/size.ts"],"sourcesContent":["/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size } from \"@lisn/globals/types\";\n\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { createOverlay } from \"@lisn/utils/overlays\";\n\n/**\n * Returns the content box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @category Size measurements\n */\nexport const getEntryContentBox = (entry: ResizeObserverEntry): Size => {\n  const size = entry.contentBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  }\n\n  const rect = entry.contentRect;\n  return { [MC.S_WIDTH]: rect[MC.S_WIDTH], [MC.S_HEIGHT]: rect[MC.S_HEIGHT] };\n};\n\n/**\n * Returns the border box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @param {} fallbackToContent If the entry does not contain border box\n *                             measurements (depending on browser), then fall\n *                             back to using the content box size. Otherwise\n *                             (by default) will return `NaN` values for width\n *                             and height.\n *\n * @category Size measurements\n */\nexport const getEntryBorderBox = (\n  entry: ResizeObserverEntry,\n  fallbackToContent = false,\n): Size => {\n  const size = entry.borderBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  } else if (fallbackToContent) {\n    return getEntryContentBox(entry);\n  }\n\n  return { [MC.S_WIDTH]: NaN, [MC.S_HEIGHT]: NaN };\n};\n\n/**\n * Returns true if the given string is a valid box type.\n *\n * @category Validation\n */\nexport const isValidBox = (box: string): box is Box =>\n  MH.includes(ALL_BOXES, box);\n\n/**\n * Returns true if the given string is a valid dimension.\n *\n * @category Validation\n */\nexport const isValidDimension = (dimension: string): dimension is Dimension =>\n  MH.includes(ALL_DIMENSIONS, dimension);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetViewportOverlay = (): HTMLElement | null =>\n  viewportOverlay ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via SizeWatcher\n */\nexport const fetchViewportOverlay = async (): Promise<HTMLElement> => {\n  await init();\n\n  return viewportOverlay;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchViewportSize = async (realtime = false) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const root = MH.hasDOM()\n    ? (MH.getDocScrollingElement() ?? MH.getBody())\n    : null;\n\n  return {\n    [MC.S_WIDTH]: root?.clientWidth || 0,\n    [MC.S_HEIGHT]: root?.clientHeight || 0,\n  };\n};\n\n// ----------------------------------------\n\nconst S_INLINE_SIZE = \"inlineSize\";\nconst S_BLOCK_SIZE = \"blockSize\";\n\nconst ALL_BOXES: Box[] = [\"content\", \"border\"] as const;\nconst ALL_DIMENSIONS: Dimension[] = [MC.S_WIDTH, MC.S_HEIGHT] as const;\n\nconst getSizeFromInlineBlock = (\n  size: ResizeObserverSize | ReadonlyArray<ResizeObserverSize>,\n): Size => {\n  /* istanbul ignore else */\n  if (MH.isIterableObject(size)) {\n    return {\n      [MC.S_WIDTH]: size[0][S_INLINE_SIZE],\n      [MC.S_HEIGHT]: size[0][S_BLOCK_SIZE],\n    };\n  }\n  return {\n    // in some browsers inlineSize and blockSize are scalars and nor Arrays\n    [MC.S_WIDTH]: (size as { [S_INLINE_SIZE]: number })[S_INLINE_SIZE],\n    [MC.S_HEIGHT]: (size as { [S_BLOCK_SIZE]: number })[S_BLOCK_SIZE],\n  };\n};\n\n// ------------------------------\n\nlet viewportOverlay: HTMLElement;\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      viewportOverlay = await createOverlay({\n        id: MH.prefixName(\"vp-ovrl\"),\n        style: {\n          position: \"fixed\",\n          [MC.S_WIDTH]: \"100vw\",\n          [MC.S_HEIGHT]: \"100vh\",\n        },\n      });\n    })();\n  }\n\n  return initPromise;\n};\n"],"mappings":"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","ignoreList":[]}