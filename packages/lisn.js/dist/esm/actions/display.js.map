{"version":3,"file":"display.js","names":["MC","displayElement","displayElementNow","undisplayElement","undisplayElementNow","toggleDisplayElement","registerAction","Display","register","element","constructor","_defineProperty","_display","_undisplay","_toggle","getMethods","do","undo","S_TOGGLE","Undisplay"],"sources":["../../../src/ts/actions/display.ts"],"sourcesContent":["/**\n * @module Actions\n *\n * @categoryDescription Showing/hiding elements\n * {@link Display} and {@link Undisplay} displays or \"undisplays\" (display:\n * none) the given element.\n *\n * {@link Actions.Show | Show} and {@link Actions.Hide | Hide} show or hide the\n * given element with a smooth fading transition.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  displayElement,\n  displayElementNow,\n  undisplayElement,\n  undisplayElementNow,\n  toggleDisplayElement,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Displays or \"undisplays\" (display: none) the given element.\n *\n * **IMPORTANT:** When constructed, it adds `display: none` to the element as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"display\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Display/undisplay</button>\n * <div data-lisn-on-click=\"@display +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Display implements Action {\n  /**\n   * It reverts the element to its original `display` property.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Sets `display: none` on the element.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Displays the element if it's \"undisplayed\", otherwise \"undisplays\" it.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"display\", (element) => new Display(element));\n  }\n\n  constructor(element: Element) {\n    undisplayElementNow(element); // initial state\n\n    const { _display, _undisplay, _toggle } = getMethods(element);\n    this.do = _display;\n    this.undo = _undisplay;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * \"Undisplays\" (display: none) or displays the given element.\n *\n * **IMPORTANT:** When constructed, it removes the `lisn-undisplay` class if\n * present on the element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"undisplay\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Display/undisplay</button>\n * <div data-lisn-on-click=\"@undisplay +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Undisplay implements Action {\n  /**\n   * Sets `display: none` on the element.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * It reverts the element to its original `display` property.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Displays the element if it's \"undisplayed\", otherwise \"undisplays\" it.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"undisplay\", (element) => new Undisplay(element));\n  }\n\n  constructor(element: Element) {\n    displayElementNow(element); // initial state\n\n    const { _display, _undisplay, _toggle } = getMethods(element);\n    this.do = _undisplay;\n    this.undo = _display;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  return {\n    _display: async () => {\n      await displayElement(element); // ignore return val\n    },\n\n    _undisplay: async () => {\n      await undisplayElement(element); // ignore return val\n    },\n\n    _toggle: async () => {\n      await toggleDisplayElement(element); // ignore return val\n    },\n  };\n};\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,EAAE;AAEd,SACEC,cAAc,EACdC,iBAAiB,EACjBC,gBAAgB,EAChBC,mBAAmB,EACnBC,oBAAoB;AAGtB,SAAiBC,cAAc;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,OAAO,CAAmB;EAgBrC,OAAOC,QAAQA,CAAA,EAAG;IAChBF,cAAc,CAAC,SAAS,EAAGG,OAAO,IAAK,IAAIF,OAAO,CAACE,OAAO,CAAC,CAAC;EAC9D;EAEAC,WAAWA,CAACD,OAAgB,EAAE;IAnB9B;AACF;AACA;IAFEE,eAAA;IAKA;AACF;AACA;IAFEA,eAAA;IAKA;AACF;AACA;IAFEA,eAAA;IAUEP,mBAAmB,CAACK,OAAO,CAAC,CAAC,CAAC;;IAE9B,MAAM;MAAEG,QAAQ;MAAEC,UAAU;MAAEC;IAAQ,CAAC,GAAGC,UAAU,CAACN,OAAO,CAAC;IAC7D,IAAI,CAACO,EAAE,GAAGJ,QAAQ;IAClB,IAAI,CAACK,IAAI,GAAGJ,UAAU;IACtB,IAAI,CAACb,EAAE,CAACkB,QAAQ,CAAC,GAAGJ,OAAO;EAC7B;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,SAAS,CAAmB;EAgBvC,OAAOX,QAAQA,CAAA,EAAG;IAChBF,cAAc,CAAC,WAAW,EAAGG,OAAO,IAAK,IAAIU,SAAS,CAACV,OAAO,CAAC,CAAC;EAClE;EAEAC,WAAWA,CAACD,OAAgB,EAAE;IAnB9B;AACF;AACA;IAFEE,eAAA;IAKA;AACF;AACA;IAFEA,eAAA;IAKA;AACF;AACA;IAFEA,eAAA;IAUET,iBAAiB,CAACO,OAAO,CAAC,CAAC,CAAC;;IAE5B,MAAM;MAAEG,QAAQ;MAAEC,UAAU;MAAEC;IAAQ,CAAC,GAAGC,UAAU,CAACN,OAAO,CAAC;IAC7D,IAAI,CAACO,EAAE,GAAGH,UAAU;IACpB,IAAI,CAACI,IAAI,GAAGL,QAAQ;IACpB,IAAI,CAACZ,EAAE,CAACkB,QAAQ,CAAC,GAAGJ,OAAO;EAC7B;AACF;;AAEA;;AAEA,MAAMC,UAAU,GAAIN,OAAgB,IAAK;EACvC,OAAO;IACLG,QAAQ,EAAE,MAAAA,CAAA,KAAY;MACpB,MAAMX,cAAc,CAACQ,OAAO,CAAC,CAAC,CAAC;IACjC,CAAC;IAEDI,UAAU,EAAE,MAAAA,CAAA,KAAY;MACtB,MAAMV,gBAAgB,CAACM,OAAO,CAAC,CAAC,CAAC;IACnC,CAAC;IAEDK,OAAO,EAAE,MAAAA,CAAA,KAAY;MACnB,MAAMT,oBAAoB,CAACI,OAAO,CAAC,CAAC,CAAC;IACvC;EACF,CAAC;AACH,CAAC","ignoreList":[]}