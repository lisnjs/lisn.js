{"version":3,"file":"lisn.essentials.js","sources":["../../lisn.js/src/ts/globals/minification-constants.ts","../../lisn.js/src/ts/globals/errors.ts","../../lisn.js/src/ts/globals/minification-helpers.ts","../../lisn.js/src/ts/globals/settings.ts","../../lisn.js/src/ts/utils/math.ts","../../lisn.js/src/ts/utils/misc.ts","../../lisn.js/src/ts/utils/text.ts","../../lisn.js/src/ts/utils/validation.ts","../../lisn.js/src/ts/modules/bit-spaces.ts","../../lisn.js/src/ts/utils/dom.ts","../../lisn.js/src/ts/utils/tasks.ts","../../lisn.js/src/ts/modules/callback.ts","../../lisn.js/src/ts/utils/log.ts","../../lisn.js/src/ts/utils/dom-optimize.ts","../../lisn.js/src/ts/utils/dom-query.ts","../../lisn.js/src/ts/utils/css-alter.ts","../../lisn.js/src/ts/utils/dom-alter.ts","../../lisn.js/src/ts/utils/dom-events.ts","../../lisn.js/src/ts/modules/x-map.ts","../../lisn.js/src/ts/watchers/dom-watcher.ts","../../lisn.js/src/ts/utils/directions.ts","../../lisn.js/src/ts/utils/event.ts","../../lisn.js/src/ts/utils/gesture.ts","../../lisn.js/src/ts/utils/gesture-key.ts","../../lisn.js/src/ts/utils/gesture-pointer.ts","../../lisn.js/src/ts/utils/gesture-touch.ts","../../lisn.js/src/ts/utils/normalize-wheel.ts","../../lisn.js/src/ts/utils/gesture-wheel.ts","../../lisn.js/src/ts/watchers/gesture-watcher.ts","../../lisn.js/src/ts/utils/layout.ts","../../lisn.js/src/ts/utils/scroll.ts","../../lisn.js/src/ts/utils/overlays.ts","../../lisn.js/src/ts/utils/size.ts","../../lisn.js/src/ts/modules/x-resize-observer.ts","../../lisn.js/src/ts/watchers/size-watcher.ts","../../lisn.js/src/ts/watchers/layout-watcher.ts","../../lisn.js/src/ts/utils/pointer.ts","../../lisn.js/src/ts/watchers/pointer-watcher.ts","../../lisn.js/src/ts/watchers/scroll-watcher.ts","../../lisn.js/src/ts/utils/views.ts","../../lisn.js/src/ts/modules/x-intersection-observer.ts","../../lisn.js/src/ts/watchers/view-watcher.ts","../../lisn.js/src/ts/watchers/index.ts","../../lisn.js/src/ts/bundle-essentials.ts"],"sourcesContent":["/**\n * For minification optimization.\n *\n * @module\n * @ignore\n * @internal\n */\n\nexport const PREFIX = \"lisn\";\nexport const LOG_PREFIX = \"[LISN.js]\";\n\nexport const OBJECT = Object;\nexport const SYMBOL = Symbol;\nexport const ARRAY = Array;\nexport const STRING = String;\nexport const FUNCTION = Function;\nexport const MATH = Math;\nexport const NUMBER = Number;\nexport const PROMISE = Promise;\n\nexport const PI = MATH.PI;\nexport const INFINITY = Infinity;\n\nexport const S_ABSOLUTE = \"absolute\";\nexport const S_FIXED = \"fixed\";\nexport const S_STICKY = \"sticky\";\n\nexport const S_WIDTH = \"width\";\nexport const S_HEIGHT = \"height\";\n\nexport const S_TOP = \"top\";\nexport const S_BOTTOM = \"bottom\";\n\nexport const S_UP = \"up\";\nexport const S_DOWN = \"down\";\n\nexport const S_LEFT = \"left\";\nexport const S_RIGHT = \"right\";\n\nexport const S_AT = \"at\";\nexport const S_ABOVE = \"above\";\nexport const S_BELOW = \"below\";\n\nexport const S_IN = \"in\";\nexport const S_OUT = \"out\";\n\nexport const S_NONE = \"none\";\nexport const S_AMBIGUOUS = \"ambiguous\";\n\nexport const S_ADDED = \"added\";\nexport const S_REMOVED = \"removed\";\nexport const S_ATTRIBUTE = \"attribute\";\n\nexport const S_KEY = \"key\";\nexport const S_MOUSE = \"mouse\";\nexport const S_POINTER = \"pointer\";\nexport const S_TOUCH = \"touch\";\nexport const S_WHEEL = \"wheel\";\nexport const S_CLICK = \"click\";\nexport const S_HOVER = \"hover\";\nexport const S_PRESS = \"press\";\n\nexport const S_SCROLL = \"scroll\";\nexport const S_ZOOM = \"zoom\";\nexport const S_DRAG = \"drag\";\nexport const S_UNKNOWN = \"unknown\";\n\nexport const S_SCROLL_TOP = `${S_SCROLL}Top` as `${typeof S_SCROLL}Top`;\nexport const S_SCROLL_LEFT = `${S_SCROLL}Left` as `${typeof S_SCROLL}Left`;\n\nexport const S_SCROLL_WIDTH = `${S_SCROLL}Width` as `${typeof S_SCROLL}Width`;\nexport const S_SCROLL_HEIGHT =\n  `${S_SCROLL}Height` as `${typeof S_SCROLL}Height`;\n\nexport const S_CLIENT_WIDTH = \"clientWidth\";\nexport const S_CLIENT_HEIGHT = \"clientHeight\";\n\nexport const S_SCROLL_TOP_FRACTION =\n  `${S_SCROLL}TopFraction` as `${typeof S_SCROLL}TopFraction`;\nexport const S_SCROLL_LEFT_FRACTION =\n  `${S_SCROLL}LeftFraction` as `${typeof S_SCROLL}LeftFraction`;\n\nexport const S_HORIZONTAL = \"horizontal\";\nexport const S_VERTICAL = \"vertical\";\nexport const S_SKIP_INITIAL = \"skipInitial\";\nexport const S_DEBOUNCE_WINDOW = \"debounceWindow\";\nexport const S_TOGGLE = \"toggle\";\n\nexport const S_CANCEL = \"cancel\";\n\nexport const S_KEYDOWN = (S_KEY + S_DOWN) as `${typeof S_KEY}${typeof S_DOWN}`;\n\nexport const S_MOUSEUP = (S_MOUSE + S_UP) as `${typeof S_MOUSE}${typeof S_UP}`;\nexport const S_MOUSEDOWN = (S_MOUSE +\n  S_DOWN) as `${typeof S_MOUSE}${typeof S_DOWN}`;\nexport const S_MOUSEMOVE = `${S_MOUSE}move` as `${typeof S_MOUSE}move`;\n\nexport const S_POINTERUP = (S_POINTER +\n  S_UP) as `${typeof S_POINTER}${typeof S_UP}`;\nexport const S_POINTERDOWN = (S_POINTER +\n  S_DOWN) as `${typeof S_POINTER}${typeof S_DOWN}`;\nexport const S_POINTERENTER = `${S_POINTER}enter` as `${typeof S_POINTER}enter`;\nexport const S_POINTERLEAVE = `${S_POINTER}leave` as `${typeof S_POINTER}leave`;\nexport const S_POINTERMOVE = `${S_POINTER}move` as `${typeof S_POINTER}move`;\nexport const S_POINTERCANCEL = (S_POINTER +\n  S_CANCEL) as `${typeof S_POINTER}${typeof S_CANCEL}`;\n\nexport const S_TOUCHSTART = `${S_TOUCH}start` as `${typeof S_TOUCH}start`;\nexport const S_TOUCHEND = `${S_TOUCH}end` as `${typeof S_TOUCH}end`;\nexport const S_TOUCHMOVE = `${S_TOUCH}move` as `${typeof S_TOUCH}move`;\nexport const S_TOUCHCANCEL = (S_TOUCH +\n  S_CANCEL) as `${typeof S_TOUCH}${typeof S_CANCEL}`;\n\nexport const S_DRAGSTART = `${S_DRAG}start` as `${typeof S_DRAG}start`;\nexport const S_DRAGEND = `${S_DRAG}end` as `${typeof S_DRAG}end`;\nexport const S_DRAGENTER = `${S_DRAG}enter` as `${typeof S_DRAG}enter`;\nexport const S_DRAGOVER = `${S_DRAG}over` as `${typeof S_DRAG}over`;\nexport const S_DRAGLEAVE = `${S_DRAG}leave` as `${typeof S_DRAG}leave`;\nexport const S_DROP = \"drop\";\n\nexport const S_SELECTSTART = \"selectstart\";\n\nexport const S_ATTRIBUTES = \"attributes\";\nexport const S_CHILD_LIST = \"childList\";\n\nexport const S_REVERSE = \"reverse\";\nexport const S_DRAGGABLE = \"draggable\";\nexport const S_DISABLED = \"disabled\";\n\nexport const S_ARROW = \"arrow\";\n\nexport const S_ROLE = \"role\";\n\nexport const ARIA_PREFIX = \"aria-\";\nexport const S_ARIA_CONTROLS = ARIA_PREFIX + \"controls\";\n\nexport const PREFIX_WRAPPER = `${PREFIX}-wrapper`;\nexport const PREFIX_INLINE_WRAPPER = `${PREFIX_WRAPPER}-inline`;\nexport const PREFIX_TRANSITION = `${PREFIX}-transition`;\nexport const PREFIX_TRANSITION_DISABLE = `${PREFIX_TRANSITION}__disable`;\nexport const PREFIX_HIDE = `${PREFIX}-hide`;\nexport const PREFIX_SHOW = `${PREFIX}-show`;\nexport const PREFIX_DISPLAY = `${PREFIX}-display`;\nexport const PREFIX_UNDISPLAY = `${PREFIX}-undisplay`;\nexport const PREFIX_PLACE = `${PREFIX}-place`;\nexport const PREFIX_ORIENTATION = `${PREFIX}-orientation`;\nexport const PREFIX_POSITION = `${PREFIX}-position`;\nexport const PREFIX_GHOST = `${PREFIX}-ghost`;\nexport const PREFIX_BORDER_SIZE = `${PREFIX}-border-size`;\nexport const PREFIX_NO_SELECT = `${PREFIX}-no-select`;\nexport const PREFIX_NO_TOUCH_ACTION = `${PREFIX}-no-touch-action`;\nexport const PREFIX_NO_WRAP = `${PREFIX}-no-wrap`;\n\nexport const S_ANIMATE = \"animate\";\nexport const ANIMATE_PREFIX = `${PREFIX}-${S_ANIMATE}__`;\nexport const PREFIX_ANIMATE_DISABLE = `${ANIMATE_PREFIX}disable`;\nexport const PREFIX_ANIMATE_PAUSE = `${ANIMATE_PREFIX}pause`;\nexport const PREFIX_ANIMATE_REVERSE = `${ANIMATE_PREFIX}${S_REVERSE}`;\nexport const PREFIX_ANIMATE_INFINITE = `${ANIMATE_PREFIX}infinite`;\n\nexport const USER_AGENT =\n  typeof navigator === \"undefined\" ? \"\" : navigator.userAgent;\n\nexport const IS_MOBILE =\n  USER_AGENT.match(\n    /Mobile|Android|Silk\\/|Kindle|BlackBerry|Opera Mini|Opera Mobi/,\n  ) !== null;\n","/**\n * @module Errors\n */\n\nimport { LOG_PREFIX } from \"@lisn/globals/minification-constants\";\n\n/**\n * Base error type emitted by LISN.\n */\nexport abstract class LisnError extends Error {}\n\n/**\n * Error type emitted for invalid input or incorrect usage of a function.\n */\nexport class LisnUsageError extends LisnError {\n  constructor(message = \"\") {\n    super(`${LOG_PREFIX} Incorrect usage: ${message}`);\n    this.name = \"LisnUsageError\";\n  }\n}\n\n/**\n * Error type emitted if an assertion is wrong => report bug.\n */\nexport class LisnBugError extends LisnError {\n  constructor(message = \"\") {\n    super(`${LOG_PREFIX} Please report a bug: ${message}`);\n    this.name = \"LisnBugError\";\n  }\n}\n","/**\n * For minification optimization\n *\n * @module\n * @ignore\n * @internal\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  BoundingRect,\n  IterableObject,\n  Constructor,\n  InstanceType,\n  MapBase,\n  SetBase,\n  Spread,\n} from \"@lisn/globals/types\";\n\nimport { LisnUsageError, LisnBugError } from \"@lisn/globals/errors\";\n\n// credit: underscore.js\nconst root =\n  (typeof self === \"object\" && self.self === self && self) ||\n  (typeof global == \"object\" && global.global === global && global) ||\n  Function(\"return this\")() ||\n  {};\n\nexport const kebabToCamelCase = (str: string) =>\n  str.replace(/-./g, (m) => toUpperCase(m.charAt(1)));\n\nexport const camelToKebabCase = (str: string) =>\n  str\n    .replace(/[A-Z][a-z]/g, (m) => \"-\" + toLowerCase(m))\n    .replace(/[A-Z]+/, (m) => \"-\" + toLowerCase(m));\n\nexport const prefixName = (name: string) => `${MC.PREFIX}-${name}`;\n\nexport const prefixCssVar = (name: string) => \"--\" + prefixName(name);\n\nexport const prefixCssJsVar = (name: string) => prefixCssVar(\"js--\" + name);\n\nexport const prefixData = (name: string) => `data-${camelToKebabCase(name)}`;\n\nexport const prefixLisnData = (name: string) => prefixData(prefixName(name));\n\nexport const toLowerCase = (s: string) => s.toLowerCase();\n\nexport const toUpperCase = (s: string) => s.toUpperCase();\n\nexport const timeNow = Date.now.bind(Date);\n\nexport const timeSince = (startTime: number) => timeNow() - startTime;\n\nexport const hasDOM = () => typeof document !== \"undefined\";\n\nexport const getWindow = () => window;\n\nexport const getDoc = () => document;\n\nexport const getDocElement = () => getDoc().documentElement;\n\nexport const getDocScrollingElement = () =>\n  getDoc().scrollingElement as HTMLElement | null;\n\nexport const getBody = () => getDoc().body;\n\nexport const getReadyState = () => getDoc().readyState;\n\nexport const getPointerType = (event: Event) =>\n  isPointerEvent(event)\n    ? event.pointerType\n    : isMouseEvent(event)\n      ? \"mouse\"\n      : null;\n\nexport const onAnimationFrame = (callback: FrameRequestCallback) =>\n  requestAnimationFrame(callback);\n\nexport const createElement = (\n  tagName: string,\n  options?: ElementCreationOptions,\n) => getDoc().createElement(tagName, options);\n\nexport const createButton = (label = \"\", tag = \"button\") => {\n  const btn = createElement(tag);\n  setTabIndex(btn);\n  setAttr(btn, MC.S_ROLE, \"button\");\n  setAttr(btn, MC.ARIA_PREFIX + \"label\", label);\n  return btn;\n};\n\nexport const isNullish = (v: unknown): v is null | undefined =>\n  v === undefined || v === null;\n\nexport const isEmpty = (v: unknown): v is null | undefined | \"\" =>\n  isNullish(v) || v === \"\";\n\nexport const isIterableObject = (v: unknown): v is IterableObject<unknown> =>\n  isNonPrimitive(v) && MC.SYMBOL.iterator in v;\n\nexport const isArray = (v: unknown) => isInstanceOf(v, MC.ARRAY);\n\nexport const isObject = (v: unknown) => isInstanceOf(v, MC.OBJECT);\n\nexport const isNonPrimitive = (v: unknown): v is object =>\n  v !== null && typeOf(v) === \"object\";\n\n// only primitive number\nexport const isNumber = (v: unknown): v is number => typeOf(v) === \"number\";\n\n/* eslint-disable-next-line @typescript-eslint/no-wrapper-object-types */\nexport const isString = (v: unknown): v is string | String =>\n  typeOf(v) === \"string\" || isInstanceOf(v, MC.STRING);\n\nexport const isLiteralString = (v: unknown): v is string =>\n  typeOf(v) === \"string\";\n\nexport const isBoolean = (v: unknown): v is boolean => typeOf(v) === \"boolean\";\n\n/* eslint-disable-next-line @typescript-eslint/no-unsafe-function-type */\nexport const isFunction = (v: unknown): v is Function =>\n  typeOf(v) === \"function\" || isInstanceOf(v, MC.FUNCTION);\n\nexport const isDoc = (target: unknown): target is Document =>\n  target === getDoc();\n\nexport const isMouseEvent = (event: Event): event is MouseEvent =>\n  isInstanceOf(event, MouseEvent);\n\nexport const isPointerEvent = (event: Event): event is PointerEvent =>\n  typeof PointerEvent !== \"undefined\" && isInstanceOf(event, PointerEvent);\n\nexport const isTouchPointerEvent = (event: Event): event is PointerEvent =>\n  isPointerEvent(event) && getPointerType(event) === MC.S_TOUCH;\n\nexport const isWheelEvent = (event: Event): event is WheelEvent =>\n  isInstanceOf(event, WheelEvent);\n\nexport const isKeyboardEvent = (event: Event): event is KeyboardEvent =>\n  isInstanceOf(event, KeyboardEvent);\n\nexport const isTouchEvent = (event: Event): event is TouchEvent =>\n  typeof TouchEvent !== \"undefined\" && isInstanceOf(event, TouchEvent);\n\nexport const isNode = (target: unknown) => isInstanceOf(target, Node);\n\nexport const isElement = (target: unknown) => isInstanceOf(target, Element);\n\nexport const isHTMLElement = (target: unknown) =>\n  isInstanceOf(target, HTMLElement);\n\nexport const isNodeBAfterA = (nodeA: Node, nodeB: Node) =>\n  (nodeA.compareDocumentPosition(nodeB) & Node.DOCUMENT_POSITION_FOLLOWING) !==\n  0;\n\nexport const strReplace = (\n  s: string,\n  match: string | RegExp,\n  replacement: string,\n) => s.replace(match, replacement);\n\nexport const setTimer = root.setTimeout.bind(root);\n\nexport const clearTimer = root.clearTimeout.bind(root);\n\nexport const getBoundingClientRect = (element: Element) =>\n  element.getBoundingClientRect();\n\n// Copy size properties explicitly to another object so they can be used with\n// the spread operator (DOMRect/DOMRectReadOnly's properties are not enumerable)\nexport const copyBoundingRectProps = (rect: BoundingRect): BoundingRect => {\n  return {\n    x: rect.x,\n    left: rect.left,\n    right: rect.right,\n    [MC.S_WIDTH]: rect[MC.S_WIDTH],\n    y: rect.y,\n    top: rect.top,\n    bottom: rect.bottom,\n    [MC.S_HEIGHT]: rect[MC.S_HEIGHT],\n  };\n};\n\nexport const querySelector = (root: Element | Document, selector: string) =>\n  root.querySelector(selector);\n\nexport const querySelectorAll = (root: Element | Document, selector: string) =>\n  root.querySelectorAll(selector);\n\nexport const docQuerySelector = (selector: string) =>\n  querySelector(getDoc(), selector);\n\nexport const docQuerySelectorAll = (selector: string) =>\n  querySelectorAll(getDoc(), selector);\n\nexport const getElementById = (id: string) => getDoc().getElementById(id);\n\nexport const getAttr = (element: Element, name: string) =>\n  element.getAttribute(name);\n\nexport const setAttr = (element: Element, name: string, value = \"true\") =>\n  element.setAttribute(name, value);\n\nexport const unsetAttr = (element: Element, name: string) =>\n  element.setAttribute(name, \"false\");\n\nexport const delAttr = (element: Element, name: string) =>\n  element.removeAttribute(name);\n\nexport const includes = (\n  arr: readonly unknown[] | string,\n  v: unknown,\n  startAt?: number,\n) => (arr.indexOf as (v: unknown, startAt?: number) => number)(v, startAt) >= 0;\n\nexport const every = <\n  A extends readonly unknown[],\n  C extends ArrayCallbackFn<A[number]>,\n>(\n  array: A,\n  predicate: C,\n) => array.every(predicate);\n\nexport const some = <\n  A extends readonly unknown[],\n  C extends ArrayCallbackFn<A[number]>,\n>(\n  array: A,\n  predicate: C,\n) => array.some(predicate);\n\nexport const filter = <\n  A extends readonly unknown[],\n  T extends A[number],\n  C extends ArrayCallbackFn<A[number]> | FilterFnTypeP<A[number], T>,\n>(\n  array: A,\n  filterFn: C,\n) => array.filter(filterFn) as FilteredType<C, A[number], T>[];\n\nexport const filterBlank = <A extends readonly unknown[]>(\n  array: A | null | undefined,\n) => {\n  const result = array\n    ? filter(array, (v): v is NonNullable<A[number]> => !isEmpty(v))\n    : undefined;\n\n  return lengthOf(result) ? result : undefined;\n};\n\nexport const sizeOf = (obj: { size: number } | null | undefined) =>\n  obj?.size ?? 0;\n\nexport const lengthOf = (obj: { length: number } | null | undefined) =>\n  obj?.length ?? 0;\n\nexport const lastOf = <A extends readonly unknown[]>(a: A | null | undefined) =>\n  a?.slice(-1)[0] as LastElement<A>;\n\nexport const firstOf = <A extends readonly unknown[]>(\n  a: A | null | undefined,\n) => a?.slice(0, 1)[0] as FirstElement<A>;\n\nexport const tagName = (element: Element) => element.tagName;\n\nexport const hasTagName = (element: Element, tag: string) =>\n  toLowerCase(tagName(element)) === toLowerCase(tag);\n\nexport const preventDefault = (event: Event) => event.preventDefault();\n\nexport const arrayFrom = MC.ARRAY.from.bind(MC.ARRAY);\n\nexport const keysOf = <T extends Record<string | symbol, unknown>>(\n  obj: T,\n): Array<keyof T & string> => MC.OBJECT.keys(obj);\n\nexport const defineProperty = MC.OBJECT.defineProperty.bind(MC.OBJECT);\n\n// use it in place of object spread\nexport const merge = <A extends readonly (object | null | undefined)[]>(\n  ...a: [...A]\n) => {\n  return MC.OBJECT.assign({}, ...a) as Spread<A>;\n};\n\n// alias for clarity of purpose\nexport const copyObject = <T extends object>(obj: T) => merge(obj);\n\nexport const promiseResolve = MC.PROMISE.resolve.bind(MC.PROMISE);\n\nexport const promiseAll = MC.PROMISE.all.bind(MC.PROMISE);\n\nexport const assign = MC.OBJECT.assign.bind(MC.OBJECT);\n\nexport const freezeObj = MC.OBJECT.freeze.bind(MC.OBJECT);\n\nexport const hasOwnProp = (o: object, prop: string | symbol) =>\n  MC.OBJECT.prototype.hasOwnProperty.call(o, prop);\n\nexport const preventExtensions = MC.OBJECT.preventExtensions.bind(MC.OBJECT);\n\nexport const stringify = JSON.stringify.bind(JSON);\n\nexport const floor = MC.MATH.floor.bind(MC.MATH);\n\nexport const ceil = MC.MATH.ceil.bind(MC.MATH);\n\nexport const log2 = MC.MATH.log2.bind(MC.MATH);\n\nexport const sqrt = MC.MATH.sqrt.bind(MC.MATH);\n\nexport const max = MC.MATH.max.bind(MC.MATH);\n\nexport const min = MC.MATH.min.bind(MC.MATH);\n\nexport const abs = MC.MATH.abs.bind(MC.MATH);\n\nexport const round = MC.MATH.round.bind(MC.MATH);\n\nexport const pow = MC.MATH.pow.bind(MC.MATH);\n\nexport const parseFloat = MC.NUMBER.parseFloat.bind(MC.NUMBER);\n\nexport const isNaN = MC.NUMBER.isNaN.bind(MC.NUMBER);\n\nexport const isInstanceOf = <C extends Constructor<unknown>>(\n  value: unknown,\n  Class: C,\n): value is InstanceType<C> => value instanceof Class;\n\nexport const constructorOf = (obj: object) => obj.constructor;\n\nexport const typeOf = (obj: unknown) => typeof obj;\n\nexport const typeOrClassOf = (obj: unknown) =>\n  isObject(obj) ? constructorOf(obj)?.name : typeOf(obj);\n\nexport const parentOf = (element: Element | undefined | null) =>\n  element?.parentElement || null;\n\nexport const childrenOf = (element: Element | undefined | null) =>\n  element?.children || [];\n\nexport const targetOf = <O extends { target?: unknown } | null | undefined>(\n  obj: O,\n) =>\n  obj?.target as O extends { target: infer T }\n    ? T\n    : O extends { target?: infer T }\n      ? T | undefined\n      : undefined;\n\nexport const currentTargetOf = <\n  O extends { currentTarget?: unknown } | null | undefined,\n>(\n  obj: O,\n) =>\n  obj?.currentTarget as O extends { currentTarget: infer T }\n    ? T\n    : O extends { currentTarget?: infer T }\n      ? T | undefined\n      : undefined;\n\nexport const classList = <T extends Element | null | undefined>(element: T) =>\n  element?.classList as T extends Element ? DOMTokenList : undefined;\n\nconst S_TABINDEX = \"tabindex\";\nexport const getTabIndex = (element: Element) => getAttr(element, S_TABINDEX);\n\nexport const setTabIndex = (element: Element, index = \"0\") =>\n  setAttr(element, S_TABINDEX, index);\n\nexport const unsetTabIndex = (element: Element) => delAttr(element, S_TABINDEX);\n\nexport const remove = (obj: { remove: () => void } | null | undefined) =>\n  obj?.remove();\n\nexport const deleteObjKey = <O extends object>(obj: O, key: keyof O) =>\n  delete obj[key];\n\nexport const deleteKey = <K, V>(\n  map: MapBase<K, V> | SetBase<K> | null | undefined,\n  key: K,\n) => map?.delete(key);\n\nexport const elScrollTo = (\n  element: Element,\n  coords: { top?: number; left?: number },\n  behavior: ScrollBehavior = \"instant\",\n) => element.scrollTo(merge({ behavior }, coords));\n\nexport const elScrollBy = (\n  element: Element,\n  coords: { top?: number; left?: number },\n  behavior: ScrollBehavior = \"instant\",\n) => element.scrollBy(merge({ behavior }, coords));\n\nexport const newPromise = <T>(\n  executor: (\n    resolve: (value: T) => void,\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    reject: (reason?: any) => void,\n  ) => void,\n) => new Promise(executor);\n\nexport const newMap = <K, V>(entries?: readonly (readonly [K, V])[] | null) =>\n  new Map(entries);\n\nexport const newWeakMap = <K extends WeakKey, V>(\n  entries?: readonly (readonly [K, V])[] | null,\n) => new WeakMap(entries);\n\nexport const newSet = <T>(values?: readonly T[] | null) => new Set(values);\n\nexport const newWeakSet = <T extends WeakKey>(values?: readonly T[] | null) =>\n  new WeakSet(values);\n\nexport const newIntersectionObserver = (\n  callback: IntersectionObserverCallback,\n  options?: IntersectionObserverInit,\n) => new IntersectionObserver(callback, options);\n\nexport const newResizeObserver = (callback: ResizeObserverCallback) =>\n  typeof ResizeObserver === \"undefined\" ? null : new ResizeObserver(callback);\n\nexport const newMutationObserver = (callback: MutationCallback) =>\n  new MutationObserver(callback);\n\nexport const usageError = (msg: string) => new LisnUsageError(msg);\n\nexport const bugError = (msg: string) => new LisnBugError(msg);\n\nexport const illegalConstructorError = (useWhat: string) =>\n  usageError(`Illegal constructor. Use ${useWhat}.`);\n\nconst CONSOLE = console;\nexport const consoleDebug = CONSOLE.debug.bind(CONSOLE);\n\nexport const consoleLog = CONSOLE.log.bind(CONSOLE);\n\nexport const consoleInfo = CONSOLE.info.bind(CONSOLE);\n\nexport const consoleWarn = CONSOLE.warn.bind(CONSOLE);\n\nexport const consoleError = CONSOLE.error.bind(CONSOLE);\n\n// --------------------\n\ntype FirstElement<T extends readonly unknown[]> = T extends readonly [\n  infer Head,\n  ...infer Last__ignored,\n]\n  ? Head\n  : T[number] | undefined;\n\ntype LastElement<T extends readonly unknown[]> = T extends readonly [\n  ...infer Head__ignored,\n  infer Last,\n]\n  ? Last\n  : T[number] | undefined;\n\ntype ArrayCallbackFn<V> = (\n  value: V,\n  index: number,\n  array: readonly V[],\n) => unknown;\ntype FilterFnTypeP<V, T extends V> = (\n  value: V,\n  index: number,\n  array: readonly V[],\n) => value is T;\ntype FilteredType<\n  C extends ArrayCallbackFn<V> | FilterFnTypeP<V, T>,\n  V,\n  T extends V,\n> = C extends FilterFnTypeP<V, infer T> ? T : V;\n","/**\n * @module Settings\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\n/**\n * LISN's settings.\n * @readonly\n *\n * If you wish to modify them, then you need to do so immediately after loading\n * LISN before you instantiate any watchers, etc. For example:\n *\n * ```html\n * <!doctype html>\n * <html>\n *   <head>\n *     <meta charset=\"UTF-8\" />\n *     <meta name=\"viewport\" content=\"width=device-width\" />\n *     <script src=\"lisn.js\" charset=\"utf-8\"></script>\n *     <script charset=\"utf-8\">\n *       // modify LISN settings, for example:\n *       LISN.settings.deviceBreakpoints.desktop = 1024;\n *     </script>\n *   </head>\n *   <body>\n *   </body>\n * </html>\n * ```\n */\nexport const settings = MH.preventExtensions({\n  /**\n   * A unique selector (preferably `#some-id`) for the element that holds the\n   * main page content, if other than `document.body`.\n   *\n   * E.g. if your main content is inside a custom scrollable container, rather\n   * than directly in `document.body`, then pass a selector for it here.\n   *\n   * The element must be scrollable, i.e. have a fixed size and `overflow: scroll`.\n   *\n   * **IMPORTANT:** You must set this before initializing any watchers, widgets,\n   * etc. If you are using the HTML API, then you must set this before the\n   * document `readyState` becomes interactive.\n   *\n   * @defaultValue null // document.scrollingElement\n   * @category Generic\n   */\n  mainScrollableElementSelector: null as string | null,\n\n  /**\n   * This setting allows us to automatically wrap certain elements or groups of\n   * elements into a single `div` or `span` element to allow for more reliable\n   * or efficient working of certain features. In particular:\n   *\n   * 1. View tracking using relative offsets and a scrolling root **requires wrapping**\n   *\n   * When using view position tracking with a percentage offset specification\n   * (e.g. `top: 50%`) _and_ a custom root element that is scrollable_ (and\n   * obviously has a size smaller than the content), you **MUST** enable\n   * content wrapping, otherwise the trigger offset elements cannot be\n   * positioned relative to the scrolling _content size_.\n   *\n   * 2. Scroll tracking\n   *\n   * When using scroll tracking, including scrollbars, on a scrolling element\n   * (that obviously has a size smaller than the content), it's recommended for\n   * the content of the scrollable element to be wrapped in a single `div`\n   * container, to allow for more efficient and reliable detection of changes\n   * in the _scrollable content_ size.\n   *\n   * If content wrapping is disabled, when scroll tracking is used on a given\n   * element (other than the root of the document), each of the immediate\n   * children of the scrollable element have their sizes tracked, which could\n   * lead to more resource usage.\n   *\n   * 3. Scrollbars on custom elements\n   *\n   * When you setup a {@link Widgets.Scrollbar} widget for a custom\n   * scrollable element that may not be the main scrollable (and therefore\n   * won't take up the full viewport all the time), then to be able to position\n   * to scrollbar relative to the scrollable element, its content needs to be\n   * wrapped.\n   *\n   * If this setting is OFF, then the scrollbars on custom elements have to\n   * rely on position sticky which doesn't have as wide browser support as the\n   * default option.\n   *\n   * 4. Animating on viewport enter/leave\n   *\n   * For elements that have transforms applied as part of an animation or\n   * transition, if you wish to run or reverse the animation when the element\n   * enters or leaves the viewport, then the transform can interfere with the\n   * viewport tracking. For example, if undoing the animation as soon as the\n   * element leaves the viewport makes it enter it again (because it's moved),\n   * then this will result in a glitch.\n   *\n   * If content wrapping is disabled, then to get around such issues, a dummy\n   * element is positioned on top of the actual element and is the one tracked\n   * across the viewport instead. Either approach could cause issues depending\n   * on your CSS, so it's your choice which one is applied.\n   *\n   * ----------\n   *\n   * **IMPORTANT:** Certain widgets always require wrapping of elements or their\n   * children. This setting only applies in cases where wrapping is optional.\n   * If you can, it's recommended to leave this setting ON. You can still try to\n   * disable wrapping on a per-element basis by setting `data-lisn-no-wrap`\n   * attribute on it. Alternatively, if the elements that need wrapping are\n   * already wrapped in an element with a class `lisn-wrapper`, this will be\n   * used as the wrapper.\n   *\n   * @defaultValue true\n   * @category Generic\n   */\n  contentWrappingAllowed: true,\n  // [TODO v2] rename this setting\n\n  /**\n   * The timeout in milliseconds for waiting for the `document.readyState` to\n   * become `complete`. The timer begins _once the `readyState` becomes\n   * `interactive`_.\n   *\n   * The page will be considered \"ready\" either when the `readyState` becomes\n   * `complete` or this many milliseconds after it becomes `interactive`,\n   * whichever is first.\n   *\n   * Set to 0 or a negative number to disable timeout.\n   *\n   * @defaultValue 2000 // i.e. 2s\n   * @category Generic\n   */\n  pageLoadTimeout: 2000,\n\n  /**\n   * This enables LISN's HTML API. Then the page will be parsed (and watched\n   * for dynamically added elements at any time) for any elements matching a\n   * widget selector. Any element that has a matching CSS class or data\n   * attribute will be setup according to the relevant widget, which may wrap,\n   * clone or add attributes to the element.\n   *\n   * This is enabled by default for bundles, and disabled otherwise.\n   *\n   * **IMPORTANT:** You must set this before the document `readyState` becomes\n   * interactive.\n   *\n   * @defaultValue `false` in general, but `true` in browser bundles\n   * @category Widgets\n   */\n  autoWidgets: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.hideNative | ScrollbarConfig.hideNative}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarHideNative: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.onMobile | ScrollbarConfig.onMobile}.\n   *\n   * @defaultValue false\n   * @category Widgets/Scrollbar\n   */\n  scrollbarOnMobile: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.positionH | ScrollbarConfig.positionH}.\n   *\n   * @defaultValue \"bottom\"\n   * @category Widgets/Scrollbar\n   */\n  scrollbarPositionH: \"bottom\",\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.positionV | ScrollbarConfig.positionV}.\n   *\n   * @defaultValue \"right\"\n   * @category Widgets/Scrollbar\n   */\n  scrollbarPositionV: \"right\",\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.autoHide | ScrollbarConfig.autoHide}.\n   *\n   * @defaultValue -1\n   * @category Widgets/Scrollbar\n   */\n  scrollbarAutoHide: -1,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.clickScroll | ScrollbarConfig.clickScroll}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarClickScroll: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.dragScroll | ScrollbarConfig.dragScroll}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarDragScroll: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.useHandle | ScrollbarConfig.useHandle}.\n   *\n   * @defaultValue false\n   * @category Widgets/Scrollbar\n   */\n  scrollbarUseHandle: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.diffTolerance | SameHeightConfig.diffTolerance}.\n   *\n   * @defaultValue 15\n   * @category Widgets/SameHeight\n   */\n  sameHeightDiffTolerance: 15,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.resizeThreshold | SameHeightConfig.resizeThreshold}.\n   *\n   * @defaultValue 5\n   * @category Widgets/SameHeight\n   */\n  sameHeightResizeThreshold: 5,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.debounceWindow | SameHeightConfig.debounceWindow}.\n   *\n   * @defaultValue 100\n   * @category Widgets/SameHeight\n   */\n  sameHeightDebounceWindow: 100,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.minGap | SameHeightConfig.minGap}.\n   *\n   * @defaultValue 30\n   * @category Widgets/SameHeight\n   */\n  sameHeightMinGap: 30,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.maxFreeR | SameHeightConfig.maxFreeR}.\n   *\n   * @defaultValue 0.4\n   * @category Widgets/SameHeight\n   */\n  sameHeightMaxFreeR: 0.4,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.maxWidthR | SameHeightConfig.maxWidthR}.\n   *\n   * @defaultValue 1.7\n   * @category Widgets/SameHeight\n   */\n  sameHeightMaxWidthR: 1.7,\n\n  /**\n   * Set custom device breakpoints as width in pixels.\n   *\n   * The value of each sets its lower limit, i.e. it specifies a device whose\n   * width is larger than the given value (and up to the next larger one).\n   *\n   * If you specify only some of the below devices, then the other ones will\n   * keep their default breakpoint values.\n   *\n   * Adding device types, other than the ones listed below is not supported.\n   *\n   * @category Device layouts\n   */\n  deviceBreakpoints: {\n    /**\n     * This should be left as 0 as it's the catch-all for anything narrower\n     * than \"mobile-wide\".\n     *\n     * @defaultValue 0\n     */\n    mobile: 0,\n\n    /**\n     * Anything wider than the given value is \"mobile-wide\", up to the value of\n     * \"tablet\".\n     *\n     * @defaultValue 576\n     */\n    \"mobile-wide\": 576,\n\n    /**\n     * Anything wider than the given value is \"tablet\", up to the value of\n     * \"desktop\".\n     *\n     * @defaultValue 768\n     */\n    tablet: 768, // tablet is anything above this (up to desktop)\n\n    /**\n     * Anything wider than the given value is \"desktop\".\n     *\n     * @defaultValue 992\n     */\n    desktop: 992, // desktop is anything above this\n  },\n\n  /**\n   * Set custom aspect ratio breakpoints (as ratio of width to height).\n   *\n   * The value of each sets its lower limit, i.e. it specifies an aspect ratio\n   * that is wider than the given value (and up to the next wider one).\n   *\n   * If you specify only some of the below aspect ratios, then the other ones\n   * will keep their default breakpoint values.\n   *\n   * Adding aspect ratio types, other than the ones listed below is not\n   * supported.\n   *\n   * @category Device layouts\n   */\n  aspectRatioBreakpoints: {\n    /**\n     * This should be left as 0 as it's the catch-all for anything with\n     * a narrower aspect ratio than \"tall\".\n     *\n     * @defaultValue 0\n     */\n    \"very-tall\": 0, // very tall is up to 9:16\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"tall\", up to\n     * the value of \"square\".\n     *\n     * @defaultValue 9 / 16\n     */\n    tall: 9 / 16, // tall is between 9:16 and 3:4\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"square\", up\n     * to the value of \"wide\".\n     *\n     * @defaultValue 3 / 4\n     */\n    square: 3 / 4, // square is between 3:4 and 4:3\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"wide\", up to\n     * the value of \"very-wide\".\n     *\n     * @defaultValue 4 / 3\n     */\n    wide: 4 / 3, // wide is between 4:3 and 16:9\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"very-wide\".\n     *\n     * @defaultValue 16 / 9\n     */\n    \"very-wide\": 16 / 9, // very wide is above 16:9\n  },\n\n  /**\n   * The CSS class that enables light theme.\n   *\n   * **IMPORTANT:** If you change this, you should also change the\n   * `$light-theme-cls` variable in the SCSS configuration, or otherwise add the\n   * following to your CSS:\n   *\n   * :root,\n   * .custom-light-theme-cls {\n   *   --lisn-color-fg: some-dark-color;\n   *   --lisn-color-fg-t: some-dark-color-with-transparency;\n   *   --lisn-color-bg: some-light-color;\n   *   --lisn-color-bg-t: some-light-color-with-transparency;\n   * }\n   */\n  lightThemeClassName: \"light-theme\",\n\n  /**\n   * The CSS class that enables dark theme.\n   *\n   * **IMPORTANT:** If you change this, you should also change the\n   * `$dark-theme-cls` variable in the SCSS configuration, or otherwise add the\n   * following to your CSS:\n   *\n   * .custom-dark-theme-cls {\n   *   --lisn-color-fg: some-light-color;\n   *   --lisn-color-fg-t: some-light-color-with-transparency;\n   *   --lisn-color-bg: some-dark-color;\n   *   --lisn-color-bg-t: some-dark-color-with-transparency;\n   * }\n   */\n  darkThemeClassName: \"dark-theme\",\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some key (arrows) and wheel events (where the browser reports the delta\n   * mode to be LINE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 40\n   * @category Gestures\n   */\n  deltaLineHeight: 40,\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some wheel events (where the browser reports the delta mode to be PAGE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 1600\n   * @category Gestures\n   */\n  deltaPageWidth: 1600,\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some key (PageUp/PageDown/Space) and wheel events (where the browser\n   * reports the delta mode to be PAGE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 800\n   * @category Gestures\n   */\n  deltaPageHeight: 800,\n\n  /**\n   * Controls the debugging verbosity level. Values from 0 (none) to 10 (insane)\n   * are recognized.\n   *\n   * **Note:** Logging is not available in bundles except in the \"debug\" bundle.\n   *\n   * @defaultValue `0` except in the \"debug\" bundle where it defaults to 10\n   * @category Logging\n   */\n  verbosityLevel: 0,\n\n  /**\n   * The URL of the remote logger to connect to. LISN uses\n   * {@link https://socket.io/docs/v4/client-api/ | socket.io-client}\n   * to talk to the client and emits messages on the following namespaces:\n   *\n   * - `console.debug`\n   * - `console.log`\n   * - `console.info`\n   * - `console.warn`\n   * - `console.error`\n   *\n   * There is a simple logging server that ships with LISN, see the source\n   * code repository.\n   *\n   * You can always explicitly disable remote logging on a given page by\n   * setting `disableRemoteLog=1` query parameter in the URL.\n   *\n   * **Note:** Logging is not available in bundles (except in the `debug` bundle).\n   *\n   * @defaultValue null\n   * @category Logging\n   */\n  remoteLoggerURL: null as string | null,\n\n  /**\n   * Enable remote logging only on mobile devices.\n   *\n   * You can always disable remote logging for any page by setting\n   * `disableRemoteLog=1` URL query parameter.\n   *\n   * **Note:** Logging is not available in bundles (except in the `debug` bundle).\n   *\n   * @defaultValue false\n   * @category Logging\n   */\n  remoteLoggerOnMobileOnly: false,\n});\n\n// --------------------\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Point, Vector, AtLeastOne } from \"@lisn/globals/types\";\n\n/**\n * Round a number to the given decimal precision.\n *\n * @category Math\n */\nexport const roundNumTo = (value: number, numDecimal = 0) => {\n  const multiplicationFactor = MH.pow(10, numDecimal);\n  return MH.round(value * multiplicationFactor) / multiplicationFactor;\n};\n\n/**\n * Returns true if the given value is a valid _finite_ number.\n *\n * @category Validation\n */\nexport const isValidNum = (value: unknown): value is number =>\n  MH.isNumber(value) && MC.NUMBER.isFinite(value);\n\n/**\n * If the given value is a valid _finite_ number, it is returned, otherwise\n * the default is returned.\n *\n * @category Math\n */\nexport const toNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = MH.isLiteralString(value) ? MH.parseFloat(value) : value;\n\n  // parseFloat will strip trailing non-numeric characters, so we check that\n  // the parsed number is equal to the string, if it was a string, using loose\n  // equality, in order to make sure the entire string was a number.\n  return isValidNum(numValue) && numValue == value ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid _finite integer_ number, it is returned,\n * otherwise the default is returned.\n *\n * @category Math\n */\nexport const toInt = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  let numValue = toNum(value, null);\n  numValue = numValue === null ? numValue : MH.floor(numValue);\n\n  // Ensure that the parsed int equaled the original by loose equality.\n  return isValidNum(numValue) && numValue == value ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid non-negative _finite_ number, it is returned,\n * otherwise the default is returned.\n *\n * @category Math\n */\nexport const toNonNegNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = toNum(value, null);\n  return numValue !== null && numValue >= 0 ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid positive number, it is returned, otherwise the\n * default is returned.\n *\n * @category Math\n */\nexport const toPosNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = toNum(value, null);\n  return numValue !== null && numValue > 0 ? numValue : defaultValue;\n};\n\n/**\n * Returns the given number bound by min and/or max value.\n *\n * If the value is not a valid number, then `defaultValue` is returned if given\n * (_including if it is null_), otherwise `limits.min` if given and not null,\n * otherwise `limits.max` if given and not null, or finally 0.\n *\n * If the value is outside the bounds, then:\n * - if `defaultValue` is given, `defaultValue` is returned (_including if it\n *   is null_)\n * - otherwise, the min or the max value (whichever one is violated) is\n *   returned\n *\n * @category Math\n */\nexport const toNumWithBounds = <D extends number | false | null = number>(\n  value: unknown,\n  limits: AtLeastOne<{ min: number | null; max: number | null }>,\n  defaultValue?: D,\n): number | D => {\n  const isDefaultGiven = defaultValue !== undefined;\n  const numValue = toNum(value, null);\n  const min = limits?.min ?? null;\n  const max = limits?.max ?? null;\n\n  let result: number | D;\n  if (!isValidNum(numValue)) {\n    result = isDefaultGiven ? defaultValue : (min ?? max ?? 0);\n  } else if (min !== null && numValue < min) {\n    result = isDefaultGiven ? defaultValue : min;\n  } else if (max !== null && numValue > max) {\n    result = isDefaultGiven ? defaultValue : max;\n  } else {\n    result = numValue;\n  }\n\n  return result;\n};\n\n/**\n * Returns the largest absolute value among the given ones.\n *\n * The result is always positive.\n *\n * @category Math\n */\nexport const maxAbs = (...values: number[]) =>\n  MH.max(...values.map((v) => MH.abs(v)));\n\n/**\n * Returns the smallest absolute value among the given ones.\n *\n * The result is always positive.\n *\n * @category Math\n */\nexport const minAbs = (...values: number[]) =>\n  MH.min(...values.map((v) => MH.abs(v)));\n\n/**\n * Returns the value with the largest absolute value among the given ones.\n *\n * The result can be negative.\n *\n * @category Math\n */\nexport const havingMaxAbs = (...values: number[]): number =>\n  MH.lengthOf(values)\n    ? values.sort((a, b) => MH.abs(b) - MH.abs(a))[0]\n    : -MC.INFINITY;\n\n/**\n * Returns the value with the smallest absolute value among the given ones.\n *\n * The result can be negative.\n *\n * @category Math\n */\nexport const havingMinAbs = (...values: number[]) =>\n  MH.lengthOf(values)\n    ? values.sort((a, b) => MH.abs(a) - MH.abs(b))[0]\n    : MC.INFINITY;\n\n/**\n * Returns the angle (in radians) that the vector defined by the given x, y\n * makes with the positive horizontal axis.\n *\n * The angle returned is in the range -PI to PI, not including -PI.\n *\n * @category Math\n */\nexport const hAngle = (x: number, y: number) =>\n  normalizeAngle(MC.MATH.atan2(y, x)); // ensure that -PI is transformed to +PI\n\n/**\n * Normalizes the given angle (in radians) so that it's in the range -PI to PI,\n * not including -PI.\n *\n * @category Math\n */\nexport const normalizeAngle = (a: number) => {\n  // ensure it's positive in the range 0 to 2 PI\n  while (a < 0 || a > MC.PI * 2) {\n    a += (a < 0 ? 1 : -1) * MC.PI * 2;\n  }\n\n  // then, if > PI, offset by - 2PI\n  return a > MC.PI ? a - MC.PI * 2 : a;\n};\n\n/**\n * Converts the given angle in degrees to radians.\n *\n * @category Math\n */\nexport const degToRad = (a: number) => (a * MC.PI) / 180;\n\n/**\n * Converts the given angle in radians to degrees.\n *\n * @category Math\n */\nexport const radToDeg = (a: number) => (a * 180) / MC.PI;\n\n/**\n * Returns true if the given vectors point in the same direction.\n *\n * @param angleDiffThreshold\n *                  Sets the threshold in degrees when comparing the angles of\n *                  two vectors. E.g. for 5 degrees threshold, directions\n *                  whose vectors are within 5 degrees of each other are\n *                  considered parallel.\n *                  It doesn't make sense for this value to be < 0 or >= 90\n *                  degrees. If it is, it's forced to be positive (absolute)\n *                  and <= 89.99.\n *\n * @category Math\n */\nexport const areParallel = (vA: Vector, vB: Vector, angleDiffThreshold = 0) => {\n  const angleA = hAngle(vA[0], vA[1]);\n  const angleB = hAngle(vB[0], vB[1]);\n  angleDiffThreshold = MH.min(89.99, MH.abs(angleDiffThreshold));\n\n  return (\n    MH.abs(normalizeAngle(angleA - angleB)) <= degToRad(angleDiffThreshold)\n  );\n};\n\n/**\n * Returns true if the given vectors point in the opposite direction.\n *\n * @param angleDiffThreshold\n *                  Sets the threshold in degrees when comparing the angles of\n *                  two vectors. E.g. for 5 degrees threshold, directions\n *                  whose vectors are within 175-185 degrees of each other are\n *                  considered antiparallel.\n *                  It doesn't make sense for this value to be < 0 or >= 90\n *                  degrees. If it is, it's forced to be positive (absolute)\n *                  and <= 89.99.\n *\n * @category Math\n */\nexport const areAntiParallel = (\n  vA: Vector,\n  vB: Vector,\n  angleDiffThreshold = 0,\n) => areParallel(vA, [-vB[0], -vB[1]], angleDiffThreshold);\n\n/**\n * Returns the distance between two points on the screen.\n *\n * @category Math\n */\nexport const distanceBetween = (ptA: Point, ptB: Point) =>\n  MH.sqrt(MH.pow(ptA[0] - ptB[0], 2) + MH.pow(ptA[1] - ptB[1], 2));\n\n/**\n * Returns the two roots of the quadratic equation with coefficients\n * `a`, `b` & `c`, i.e. `a * x^2 + b * x + c = 0`\n *\n * The roots may be `NaN` if the quadratic has no real solutions.\n *\n * @category Math\n */\nexport const quadraticRoots = (a: number, b: number, c: number) => {\n  const z = MH.sqrt(b * b - 4 * a * c);\n  return [(-b + z) / (2 * a), (-b - z) / (2 * a)];\n};\n\n/**\n * Returns the value that an \"easing\" quadratic function would have at the\n * given x.\n *\n * @see https://easings.net/#easeInOutQuad\n *\n * @param x Must be between 0 and 1.\n *\n * @returns The current y-axis value between 0 and 1.\n *\n * @category Math\n */\nexport const easeInOutQuad = (x: number) =>\n  x < 0.5 ? 2 * x * x : 1 - MH.pow(-2 * x + 2, 2) / 2;\n\n/**\n * Returns an array of object's keys sorted by the numeric value they hold.\n *\n * @category Math\n */\nexport const sortedKeysByVal = <T extends Record<string, number>>(\n  obj: T,\n  descending = false,\n): Array<keyof T> => {\n  if (descending) {\n    return MH.keysOf(obj).sort((x: keyof T, y: keyof T) => obj[y] - obj[x]);\n  }\n\n  return MH.keysOf(obj).sort((x: keyof T, y: keyof T) => obj[x] - obj[y]);\n};\n\n/**\n * Returns the key in the given object which holds the largest numeric value.\n *\n * If the object is empty, returns `undefined`.\n *\n * @category Math\n */\nexport const keyWithMaxVal = (\n  obj: Record<string, number>,\n): string | undefined => {\n  return MH.lastOf(sortedKeysByVal(obj));\n};\n\n/**\n * Returns the key in the given object which holds the smallest numeric value.\n *\n * If the object is empty, returns `undefined`.\n *\n * @category Math\n */\nexport const keyWithMinVal = (\n  obj: Record<string, number>,\n): string | undefined => {\n  return MH.firstOf(sortedKeysByVal(obj));\n};\n\n/**\n * Takes two integers and returns a bitmask that covers all values between\n * 1 << start and 1 << end, _including the starting and ending one_.\n *\n * If pStart > pEnd, they are reversed.\n *\n * getBitmask(start, start) always returns 1 << start\n * getBitmask(start, end) always returns same as getBitmask(end, start)\n *\n * @category Math\n */\nexport const getBitmask = (start: number, end: number): number =>\n  start > end\n    ? getBitmask(end, start)\n    : (~0 >>> (32 - end - 1 + start)) << start;\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { roundNumTo } from \"@lisn/utils/math\";\n\nexport const isTouchScreen = () =>\n  MH.hasDOM() ? matchMedia(\"(any-pointer: coarse)\").matches : false;\n\nexport const supportsSticky = () =>\n  MH.hasDOM()\n    ? typeof CSS !== \"undefined\" && CSS.supports(\"position\", \"sticky\")\n    : false;\n\nexport const isInQuirksMode = () =>\n  MH.hasDOM() ? document.compatMode === \"BackCompat\" : false;\n\nexport const copyExistingKeys = <T extends object>(fromObj: T, toObj: T) => {\n  for (const key in toObj) {\n    if (!MH.hasOwnProp(toObj, key)) {\n      continue;\n    }\n\n    if (key in fromObj) {\n      if (MH.isNonPrimitive(fromObj[key]) && MH.isNonPrimitive(toObj[key])) {\n        copyExistingKeys(fromObj[key], toObj[key]);\n      } else {\n        toObj[key] = fromObj[key];\n      }\n    }\n  }\n};\n\n// Omits the keys in object keysToRm from obj. This is to avoid hardcording the\n// key names as a string so as to allow minifier to mangle them, and to avoid\n// using object spread.\nexport const omitKeys = <\n  O extends object,\n  R extends { [K in keyof O]?: unknown },\n>(\n  obj: O,\n  keysToRm: R,\n): Omit<O, keyof R> => {\n  const res: Partial<O> = {};\n  let key: keyof O;\n\n  for (key in obj) {\n    if (!(key in keysToRm)) {\n      res[key] = obj[key];\n    }\n  }\n\n  return res as Omit<O, keyof R>;\n};\n\n// Returns true if the two objects are equal. If values are numeric, it will\n// round to the given number of decimal places.\nexport const compareValuesIn = <T extends object>(\n  objA: T,\n  objB: T,\n  roundTo = 3,\n) => {\n  for (const key in objA) {\n    if (!MH.hasOwnProp(objA, key)) {\n      continue;\n    }\n\n    const valA = objA[key];\n    const valB = objB[key];\n\n    if (MH.isNonPrimitive(valA) && MH.isNonPrimitive(valB)) {\n      if (!compareValuesIn(valA, valB)) {\n        return false;\n      }\n    } else if (MH.isNumber(valA) && MH.isNumber(valB)) {\n      if (roundNumTo(valA, roundTo) !== roundNumTo(valB, roundTo)) {\n        return false;\n      }\n    } else if (valA !== valB) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const keyExists = <T extends object>(\n  obj: T,\n  key: string | number | symbol,\n): key is keyof T => MH.isNonPrimitive(obj) && key in obj;\n\nexport const toArrayIfSingle = <T>(value?: T | T[] | null | undefined): T[] =>\n  MH.isArray(value) ? value : !MH.isNullish(value) ? [value] : [];\n\nexport const toBoolean = (value: unknown) =>\n  value === true || value === \"true\" || value === \"\"\n    ? true\n    : MH.isNullish(value) || value === false || value === \"false\"\n      ? false\n      : null;\n\n/**\n * @deprecated\n */\nexport const toBool = toBoolean;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Size, StrRecord } from \"@lisn/globals/types\";\n\n/**\n * Formats an object as a string. It supports more meaningful formatting as\n * string for certain types rather than using the default string\n * representation.\n *\n * **NOTE:** This is not intended for serialization of data that needs to be\n * de-serialized. Only for debugging output.\n *\n * @param value    The value to format as string.\n * @param [maxLen] Maximum length of the returned string. If not given or\n *                 is <= 0, the string is not truncated. Otherwise, if the\n *                 result is longer than maxLen, it is truncated to\n *                 `maxLen - 3` and added a suffix of \"...\".\n *                 Note that if `maxLen` is > 0 but <= 3, the result is\n *                 always \"...\"\n *\n * @category Text\n */\nexport const formatAsString = (value: unknown, maxLen?: number) => {\n  const result = maybeConvertToString(value, false);\n\n  if (!MH.isNullish(maxLen) && maxLen > 0 && MH.lengthOf(result) > maxLen) {\n    return result.slice(0, MH.max(0, maxLen - 3)) + \"...\";\n  }\n\n  return result;\n};\n\n/**\n * Join an array of values as string using separator. It uses\n * {@link formatAsString} rather than the default string representation as\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join | Array:join} would.\n *\n * @param separator The separator to use to delimit each argument.\n * @param args      Objects or values to convert to string and join.\n *\n * @category Text\n */\nexport const joinAsString = (separator: string, ...args: unknown[]) =>\n  args.map((a) => formatAsString(a)).join(separator);\n\n/**\n * Similar to\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split | String.prototype.split}\n * except that\n * 1. `limit` is interpreted as the maximum number of splits, and the\n *   returned array contains `limit + 1` entries. Also if `limit` is given and\n *   the number of substrings is greater than the limit, all the remaining\n *   substrings are present in the final substring.\n * 2. If input is an empty string (or containing only whitespace), returns an\n *    empty array.\n *\n * @example\n * ```javascript\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 0); // -> ['foo, bar, baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 1); // -> ['foo', 'bar, baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 2); // -> ['foo', 'bar', 'baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 3); // -> ['foo', 'bar', 'baz']\n * ```\n *\n * @param trim  If true, entries will be trimmed for whitespace after splitting.\n *\n * @param limit If not given or < 0, the string will be split on every\n *              occurrence of `separator`. Otherwise, it will be split on\n *              the first `limit` number of occurrences of `separator`.\n *\n * @category Text\n */\nexport const splitOn = (\n  input: string,\n  separator: string | RegExp,\n  trim?: boolean,\n  limit?: number,\n) => {\n  if (!input.trim()) {\n    return [];\n  }\n\n  limit ??= -1;\n\n  const output: string[] = [];\n  const addEntry = (s: string) => output.push(trim ? s.trim() : s);\n\n  while (limit--) {\n    let matchIndex = -1,\n      matchLength = 0;\n    if (MH.isLiteralString(separator)) {\n      matchIndex = input.indexOf(separator);\n      matchLength = MH.lengthOf(separator);\n    } else {\n      const match = separator.exec(input);\n      matchIndex = match?.index ?? -1;\n      matchLength = match ? MH.lengthOf(match[0]) : 0;\n    }\n\n    if (matchIndex < 0) {\n      break;\n    }\n\n    addEntry(input.slice(0, matchIndex));\n    input = input.slice(matchIndex + matchLength);\n  }\n\n  addEntry(input);\n  return output;\n};\n\n/**\n * Converts a kebab-cased-string to camelCase.\n * The result is undefined if the input string is not formatted in\n * kebab-case.\n *\n * @category Text\n */\nexport const kebabToCamelCase = MH.kebabToCamelCase;\n\n/**\n * Converts a camelCasedString to kebab-case.\n * The result is undefined if the input string is not formatted in\n * camelCase.\n *\n * @category Text\n */\nexport const camelToKebabCase = MH.camelToKebabCase;\n\n/**\n * Generates a random string of a fixed length.\n *\n * **IMPORTANT:** This is _not_ suitable for cryptographic applications.\n *\n * @param nChars The length of the returned stirng.\n *\n * @category Text\n */\nexport const randId = (nChars = 8) => {\n  const segment = () =>\n    MH.floor(100000 + MC.MATH.random() * 900000).toString(36);\n\n  let s = \"\";\n  while (MH.lengthOf(s) < nChars) {\n    s += segment();\n  }\n  return s.slice(0, nChars);\n};\n\n/**\n * Returns an array of numeric margins in pixels from the given margin string.\n * The string should contain margins in either pixels or percentage; other\n * units are not supported.\n *\n * Percentage values are converted to pixels relative to the given\n * `absoluteSize`: left/right margins relative to the width, and top/bottom\n * margins relative to the height.\n *\n * Note that for the margin property, percentages are always relative to the\n * WIDTH of the parent, so you should pass the parent width as both the width\n * and the height keys in `absoluteSize`. But for IntersectionObserver's\n * `rootMargin`, top/bottom margin is relative to the height of the root, so\n * pass the actual root size.\n *\n * @returns [topMarginInPx, rightMarginInPx, bottomMarginInPx, leftMarginInPx]\n *\n * @category Text\n */\nexport const toMargins = (value: string, absoluteSize: Size) => {\n  const toPxValue = (strValue: string | undefined, index: number) => {\n    let margin = MH.parseFloat(strValue || \"\") || 0;\n\n    if (strValue === margin + \"%\") {\n      margin *=\n        index % 2 ? absoluteSize[MC.S_HEIGHT] : absoluteSize[MC.S_WIDTH];\n    }\n\n    return margin;\n  };\n\n  const parts = splitOn(value, \" \", true);\n  const margins: [number, number, number, number] = [\n    // top\n    toPxValue(parts[0], 0),\n    // right\n    toPxValue(parts[1] ?? parts[0], 1),\n    // bottom\n    toPxValue(parts[2] ?? parts[0], 2),\n    // left\n    toPxValue(parts[3] ?? parts[1] ?? parts[0], 3),\n  ];\n\n  return margins;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const objToStrKey = (obj: StrRecord): string =>\n  MH.stringify(flattenForSorting(obj));\n\n// --------------------\n\nconst flattenForSorting = (obj: StrRecord): unknown[] => {\n  const array = MH.isArray(obj)\n    ? obj\n    : MH.keysOf(obj)\n        .sort()\n        .map((k) => obj[k]);\n\n  return array.map((value) => {\n    if (\n      MH.isArray(value) ||\n      (MH.isNonPrimitive(value) && MH.constructorOf(value) === MC.OBJECT)\n    ) {\n      return flattenForSorting(value);\n    }\n    return value;\n  });\n};\n\nconst stringifyReplacer = (key: string, value: unknown) =>\n  key ? maybeConvertToString(value, true) : value;\n\nconst maybeConvertToString = <B extends boolean, V>(\n  value: V,\n  nested: B,\n): B extends false ? string : string | V => {\n  let result: string | V = \"\";\n\n  if (MH.isElement(value)) {\n    const classStr = MH.classList(value).toString().trim();\n\n    result = value.id\n      ? \"#\" + value.id\n      : `<${MH.tagName(value)}${classStr ? ' class=\"' + classStr + '\"' : \"\"}>`;\n\n    //\n  } else if (MH.isInstanceOf(value, Error)) {\n    /* istanbul ignore else */\n    if (\"stack\" in value && MH.isString(value.stack)) {\n      result = value.stack;\n    } else {\n      result = `Error: ${value.message}`;\n    }\n\n    //\n  } else if (MH.isArray(value)) {\n    result =\n      \"[\" +\n      value\n        .map((v) =>\n          MH.isString(v) ? MH.stringify(v) : maybeConvertToString(v, false),\n        )\n        .join(\",\") +\n      \"]\";\n\n    //\n  } else if (MH.isIterableObject(value)) {\n    result =\n      MH.typeOrClassOf(value) +\n      \"(\" +\n      maybeConvertToString(MH.arrayFrom(value), false) +\n      \")\";\n\n    //\n  } else if (MH.isNonPrimitive(value)) {\n    result = nested ? value : MH.stringify(value, stringifyReplacer);\n\n    //\n  } else {\n    // primitive\n    result = nested ? value : MC.STRING(value);\n  }\n\n  return result as B extends false ? string : string | V;\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\n\nimport { CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { toNum } from \"@lisn/utils/math\";\nimport { toBoolean } from \"@lisn/utils/misc\";\nimport { splitOn } from \"@lisn/utils/text\";\n\n/**\n * Returns true if the input is a string array or comma-separated string, whose\n * elements are valid according to the `validator` function.\n *\n * @param allowEmpty If `false`, then input without any entries is\n * considered _invalid_.\n *\n * @category Validation\n */\nexport const isValidStrList = <T extends string = string>(\n  value: unknown,\n  checkFn: (value: string) => value is T,\n  allowEmpty = true,\n): value is CommaSeparatedStr<T> | T[] => {\n  try {\n    const res = validateStrList(\"\", value, checkFn);\n    return allowEmpty || !MH.isNullish(res);\n  } catch (err) {\n    if (MH.isInstanceOf(err, LisnUsageError)) {\n      return false;\n    }\n    throw err;\n  }\n};\n\n/**\n * Returns an array of strings from the given list while validating each one\n * using the `checkFn` function.\n *\n * If it returns without throwing, the input is necessarily valid.\n * If the result is an empty array, it will return `null`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the input is not a string or array of strings, or if any\n *                entries do not pass `checkFn`.\n *\n * @param key Used in the error message thrown\n *\n * @returns `undefined` if the input contains no non-empty values (after\n * trimming whitespace on left/right from each), otherwise a non-empty array of\n * values.\n *\n * @category Validation\n */\nexport const validateStrList = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n): T[] | undefined =>\n  MH.filterBlank(\n    toArray(value)?.map((v) =>\n      _validateString(key, v, checkFn, \"a string or a string array\"),\n    ),\n  );\n\n/**\n * Returns an array of numbers from the given list.\n *\n * If it returns without throwing, the input is necessarily valid.\n * If the result is an empty array, it will return `null`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the input is not a number or array of numbers. Numerical\n *                strings are accepted.\n *\n * @param key Used in the error message thrown\n *\n * @returns `undefined` if the input contains no non-empty values (after\n * trimming whitespace on left/right from each), otherwise a non-empty array of\n * values.\n *\n * @category Validation\n */\nexport const validateNumList = (\n  key: string,\n  value: unknown,\n): number[] | undefined =>\n  MH.filterBlank(\n    toArray(value)?.map((v) =>\n      _validateNumber(key, v, \"a number or a number array\"),\n    ),\n  );\n\n/**\n * Returns a number corresponding to the supplied value, ensuring the supplied\n * value is a valid number or a string containing only a number.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @returns `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateNumber = (key: string, value: unknown) =>\n  _validateNumber(key, value);\n\n/**\n * Returns a boolean corresponding to the given value as follows:\n *\n * - `null` and `undefined` result in `undefined`\n * - `false` and `\"false\"` result in `false`\n * - `\"\"`, `true` and `\"true\"` result in `true`\n * - other values throw an error error\n *\n * Note that an empty string is treated as `true`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is not a valid boolean or boolean string.\n *\n * @returns `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateBoolean = (key: string, value: unknown) =>\n  _validateBoolean(key, value);\n\n/**\n * Returns a valid string from the supplied value, ensuring the supplied value\n * is a string that conforms to the given `checkFn`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @param checkFn If given and the supplied value is a string, then it is\n *                called with the value as a single argument. It must return\n *                true if the value is valid and false otherwise. If it is not\n *                given, then any literal string is accepted.\n *\n * @returns `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n) => _validateString(key, value, checkFn);\n\n/**\n * Like {@link validateString} except it requires input to be given and\n * non-empty.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid or empty.\n *\n * @category Validation\n */\nexport const validateStringRequired = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n): T => {\n  const result = _validateString(key, value, checkFn);\n\n  if (MH.isEmpty(result)) {\n    throw MH.usageError(`'${key}' is required`);\n  }\n\n  return result;\n};\n\n/**\n * Returns a valid boolean or a string from the supplied value, ensuring the\n * supplied value is either a boolean or boolean string (see\n * {@link validateBoolean}), or a string that conforms to the given `checkFn`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @param stringCheckFn If given and the supplied value is a string _other than\n *                      a boolean string_, then it is called with the value as\n *                      a single argument. It must return true if the value is\n *                      valid and false otherwise. If it is not given, then any\n *                      literal string is accepted.\n *\n * @category Validation\n */\nexport const validateBooleanOrString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  stringCheckFn?: (value: string) => value is T,\n) => _validateBooleanOrString(key, value, stringCheckFn);\n\n// --------------------\n\nconst toArray = (value: unknown): unknown[] | undefined => {\n  let result: unknown[] | null;\n  if (MH.isArray(value)) {\n    result = value;\n  } else if (MH.isIterableObject(value)) {\n    result = MH.arrayFrom(value);\n  } else if (MH.isLiteralString(value)) {\n    result = splitOn(value, \",\");\n  } else if (!MH.isNullish(value)) {\n    result = [value];\n  } else {\n    result = null;\n  }\n\n  return result\n    ? MH.filterBlank(result.map((v) => (MH.isLiteralString(v) ? v.trim() : v)))\n    : undefined;\n};\n\nconst _validateNumber = (\n  key: string,\n  value: unknown,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const numVal = toNum(value, null);\n  if (numVal === null) {\n    throw MH.usageError(`'${key}' must be ${typeDescription ?? \"a number\"}`);\n  }\n\n  return numVal;\n};\n\nconst _validateBoolean = (\n  key: string,\n  value: unknown,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const boolVal = toBoolean(value);\n  if (boolVal === null) {\n    throw MH.usageError(\n      `'${key}' must be ${typeDescription ?? '\"true\" or \"false\"'}`,\n    );\n  }\n\n  return boolVal;\n};\n\nconst _validateString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n  typeDescription?: string,\n): (typeof checkFn extends null | undefined ? string : T) | undefined => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  if (!MH.isLiteralString(value)) {\n    throw MH.usageError(`'${key}' must be ${typeDescription ?? \"a string\"}`);\n  } else if (checkFn && !checkFn(value)) {\n    throw MH.usageError(`Invalid value for '${key}'`);\n  }\n\n  return value as typeof checkFn extends null | undefined ? string : T;\n};\n\nconst _validateBooleanOrString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  stringCheckFn?: (value: string) => value is T,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const boolVal = toBoolean(value);\n  if (boolVal !== null) {\n    return boolVal;\n  }\n\n  if (!MH.isLiteralString(value)) {\n    throw MH.usageError(\n      `'${key}' must be ${typeDescription ?? \"a boolean or string\"}`,\n    );\n  }\n\n  return _validateString(key, value, stringCheckFn);\n};\n","/**\n * @module Modules/BitSpaces\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getBitmask } from \"@lisn/utils/math\";\n\nexport type BitPropName = string;\n\n/**\n * A union of all property names in the space.\n */\nexport type BitSpaceKey<S> = S extends BitSpace<infer T> ? T : never;\n\n/**\n * {@link BitSpace} represents a single set of mutually exclusive (or\n * orthogonal) properties.\n *\n * Each property has a numeric value equal to 1 bit-shifted by a certain number\n * of bits.\n *\n * Created using {@link BitSpaces.create}\n *\n * @interface\n */\nexport type BitSpace<T extends BitPropName> = {\n  /**\n   * The starting bit of the space. It's 0 for the first space created in a\n   * given set of {@link BitSpaces}.\n   */\n  start: number;\n\n  /**\n   * The ending bit of the space. It's always equal to\n   * start + (# of properties in space) - 1\n   */\n  end: number;\n\n  /**\n   * A bitmask of all values in the space.\n   */\n  bitmask: number;\n\n  /**\n   * Returns true if the given name is one of the properties in the space.\n   * It is case-sensitive.\n   */\n  has: (p: string) => p is T;\n\n  /**\n   * Takes the names of two properties within the space and returns a bitmask\n   * that covers all values between them _including the starting and ending\n   * one_.*\n   *\n   * If pStart > pEnd, they are reversed.\n   *\n   * * The numeric values of the properties are guaranteed to be in the same\n   *   order, increasing in value, as the keys passed to the `BitSpaces.create`,\n   *   function.\n   *\n   * @param pStart The name of the property that holds the start value.\n   *               If null the bitmask will cover from the lowest property.\n   * @param pEnd   The name of the property that holds the end cut-off value\n   *               for the bitmask. The bitmask with _not_ include pEnd's\n   *               value.\n   *               If null the bitmask will cover to the highest property,\n   *               _including_.\n   *\n   * @returns Returns a non-0 bitmask containing all values in the space between\n   *          the given ones.\n   *          Returns 0 if one or both of the given properties do not exist in\n   *          the space.\n   */\n  bitmaskFor: (pStart?: T | null, pEnd?: T | null) => number;\n\n  /**\n   * Returns the name of the property with the given value, or null if the\n   * value does not correspond to one of the space properties.\n   */\n  nameOf: (val: number) => T | null;\n\n  /**\n   * Holds properties whose numeric values are non-overlapping binary values,\n   * suitable for bitmasking.\n   *\n   * The given properties are set under the \"bit\" key in the object and hold\n   * the numeric value.\n   *\n   * @example\n   * ```javascript\n   * const space = new BitSpaces().create(\"up\", \"down\", \"left\", \"right\");\n   *\n   * // {\n   * //     bit: {\n   * //         up:    1, // at bit 0, i.e. 1 << 0\n   * //         down:  2, // at bit 1, i.e. 1 << 1\n   * //         left:  4, // at bit 2, i.e. 1 << 2\n   * //         right: 8, // at bit 3, i.e. 1 << 3\n   * //     },\n   * //     start:      0,\n   * //     end:        3,\n   * //     bitmask:    15, // 1 << 0 | 1 << 1 | 1 << 2 | 1 << 3\n   * //     has:        (p) => p === \"up\" || p === \"down\" || p === \"left\" || p === \"right\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 1 ? \"up\" : v === 2 ? \"down\" : v === 4 ...\n   * // }\n   *\n   * space.bitmaskFor(); // => space.bitmask (15)\n   * space.bitmaskFor(\"left\"); // => space.bit.left | space.bit.right (12)\n   * space.bitmaskFor(null, \"down\"); // => space.bit.up | space.bit.down (3)\n   * ```\n   */\n  bit: {\n    [key in T]: number;\n  };\n};\n\n/**\n * {@link BitSpaces} represents one or more related {@link BitSpace}s whose bit\n * values will not overlap.\n */\nexport class BitSpaces {\n  /**\n   * Creates and returns a new BitSpace that is bit shifted to the left as\n   * many bits as the ending bit of the previous space created by this\n   * instances, so that each new space created is non-overlapping with previous\n   * ones.\n   *\n   * The numeric values of the properties are guaranteed to be in the same\n   * order, increasing in value, as the keys passed to the function.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the number of bits in the space will exceed 32.\n   *\n   * @example\n   * ```javascript\n   * const spaces = new BitSpaces();\n   * const spaceA = spaces.create(\"up\", \"down\");\n   *\n   * // spaces.nBits   => 2\n   * // spaces.bitmask => 3\n   * //\n   * // spaceA:\n   * // {\n   * //     bit: {\n   * //         up:     1, // at bit 0, i.e. 1 << 0\n   * //         down:   2, // at bit 1, i.e. 1 << 1\n   * //     },\n   * //     start:      0,\n   * //     end:        1,\n   * //     bitmask:    3, // 1 << 0 | 1 << 1\n   * //     has:        (p) => p === \"up\" || p === \"down\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 1 ? \"up\" : v === 2 ? \"down\" : null\n   * // }\n   *\n   * const spaceB = spaces.create(\"left\", \"right\");\n   *\n   * // spaces.nBits   => 4\n   * // spaces.bitmask => 15\n   * //\n   * // spaceB:\n   * // {\n   * //     bit: {\n   * //         left:   4, // at bit 2, i.e. 1 << 2\n   * //         right:  8, // at bit 3, i.e. 1 << 3\n   * //     },\n   * //     start:      2,\n   * //     end:        3,\n   * //     bitmask:    12, // 1 << 2 | 1 << 3\n   * //     has:        (p) => p === \"left\" || p === \"right\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 4 ? \"left\" : v === 8 ? \"right\" : null\n   * // }\n   *\n   * ```\n   */\n  readonly create: <T extends BitPropName>(\n    ...propNames: readonly T[]\n  ) => BitSpace<T>;\n\n  /**\n   * Returns the number of bits all created spaces span, i.e. the end bit of\n   * the one + 1.\n   */\n  readonly nBits!: number;\n\n  /**\n   * Returns a bitmask containing all values in all created spaces.\n   */\n  readonly bitmask!: number;\n\n  constructor() {\n    const counter = newCounter();\n\n    this.create = (...propNames) => newBitSpace(counter, propNames);\n    MH.defineProperty(this, \"nBits\", { get: () => counter._nBits });\n    MH.defineProperty(this, \"bitmask\", { get: () => counter._bitmask });\n  }\n}\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newBitSpaces = () => new BitSpaces();\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const createBitSpace = <T extends BitPropName>(\n  spaces: BitSpaces,\n  ...propNames: readonly T[]\n): BitSpace<T> => spaces.create(...propNames);\n\n// ----------------------------------------\n\ntype BitCounter = {\n  _nBits: number;\n  _bitmask: number;\n};\n\nconst newCounter = (): BitCounter => ({\n  _nBits: 0,\n  _bitmask: 0,\n});\n\nconst newBitSpace = <T extends BitPropName>(\n  counter: BitCounter,\n  propNames: readonly T[],\n): BitSpace<T> => {\n  const start = counter._nBits;\n  const end = start + MH.lengthOf(propNames) - 1;\n  if (end >= 31) {\n    throw MH.usageError(\"BitSpaces overflow\");\n  }\n\n  const bitmask = getBitmask(start, end);\n  const space: BitSpace<T> = {\n    bit: {},\n    start,\n    end,\n    bitmask,\n\n    has: (p) =>\n      MH.isString(p) &&\n      p in space.bit &&\n      MH.isNumber((space.bit as Record<string, unknown>)[p]),\n\n    bitmaskFor: (pStart, pEnd) => {\n      if (\n        (!MH.isEmpty(pStart) && !space.has(pStart)) ||\n        (!MH.isEmpty(pEnd) && !space.has(pEnd))\n      ) {\n        return 0;\n      }\n\n      const thisStart = !MH.isEmpty(pStart)\n        ? MH.log2(space.bit[pStart])\n        : start;\n      const thisEnd = !MH.isEmpty(pEnd) ? MH.log2(space.bit[pEnd]) : end;\n\n      return getBitmask(thisStart, thisEnd);\n    },\n\n    nameOf: (val) => propNames[MH.log2(val) - start] ?? null,\n  } as BitSpace<T>;\n\n  for (const name of propNames) {\n    MH.defineProperty(space.bit, name, {\n      value: 1 << counter._nBits++,\n      enumerable: true,\n    });\n  }\n\n  counter._bitmask |= bitmask;\n\n  return space;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { MutationCategory } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newBitSpaces, createBitSpace } from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid category.\n *\n * @category Validation\n */\nexport const isValidMutationCategory = (\n  category: string,\n): category is MutationCategory => DOM_CATEGORIES_SPACE.has(category);\n\n/**\n * Returns true if the given string or array is a list of valid categories.\n *\n * @category Validation\n */\nexport const isValidMutationCategoryList = (categories: string | string[]) =>\n  isValidStrList(categories, isValidMutationCategory, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const DOM_CATEGORIES_SPACE = createBitSpace<MutationCategory>(\n  newBitSpaces(),\n  MC.S_ADDED,\n  MC.S_REMOVED,\n  MC.S_ATTRIBUTE,\n);\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\n/**\n * @category Tasks\n */\nexport type SchedulerPostTaskOptions = {\n  delay?: number;\n  priority?: TaskPriority;\n  signal?: AbortSignal;\n};\n\n/**\n * @category Tasks\n */\nexport type Scheduler = {\n  postTask<T, P extends readonly unknown[] | []>(\n    callback: (...params: P) => T,\n    options?: SchedulerPostTaskOptions,\n    ...args: P\n  ): Promise<T>;\n};\n\n/**\n * @category Tasks\n */\nexport type TaskPriority = \"user-blocking\" | \"user-visible\" | \"background\";\n\n/* eslint-disable-next-line no-var */\ndeclare var scheduler: Scheduler;\n\n/**\n * Schedules a task with high priority to be executed as soon as possible.\n *\n * It uses {@link https://developer.mozilla.org/en-US/docs/Web/API/Scheduler/postTask | Scheduler:postTask}\n * if available, otherwise falls back to\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MessageChannel | MessageChannel}.\n *\n * @category Tasks\n */\nexport const scheduleHighPriorityTask = (task: () => void) => {\n  if (typeof scheduler !== \"undefined\") {\n    scheduler.postTask(task, {\n      priority: \"user-blocking\",\n    });\n  } else {\n    // Fallback to MessageChannel\n    const channel = new MessageChannel();\n    channel.port1.onmessage = () => {\n      channel.port1.close();\n      task();\n    };\n    channel.port2.postMessage(\"\");\n  }\n};\n\n/**\n * Returns a wrapper around the given handler that is debounced by the given\n * debounce window.\n *\n * @category Tasks\n */\nexport const getDebouncedHandler = <Args extends unknown[]>(\n  debounceWindow: number,\n  handler: (...args: Args) => void,\n) => {\n  if (!debounceWindow) {\n    return handler;\n  }\n\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  let lastArgs: Args;\n\n  return (...args: Args) => {\n    lastArgs = args;\n\n    if (timer === null) {\n      timer = MH.setTimer(async () => {\n        await handler(...lastArgs);\n        timer = null;\n      }, debounceWindow);\n    }\n  };\n};\n\n/**\n * Returns a promise that resolves at least the given number of delay (in\n * milliseconds) later. Uses `setTimeout`.\n *\n * @category Tasks\n */\nexport const waitForDelay = (delay?: number) =>\n  MH.newPromise<void>((resolve) => {\n    MH.setTimer(resolve, delay);\n  });\n\n/**\n * Returns a promise that resolves at the next animation frame. Async/await\n * version of requestAnimationFrame.\n *\n * @returns The timestamp gotten from requestAnimationFrame\n *\n * @category Tasks\n */\nexport const waitForAnimationFrame = async () =>\n  MH.newPromise<number>((resolve) => {\n    MH.onAnimationFrame(resolve);\n  });\n","/**\n * @module Modules/Callback\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getDebouncedHandler } from \"@lisn/utils/tasks\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * @typeParam Args See {@link Callback}\n */\nexport type CallbackHandler<Args extends unknown[] = []> = (\n  ...args: Args\n) => CallbackReturnType | Promise<CallbackReturnType>;\n\nexport type CallbackReturnType =\n  | typeof Callback.KEEP\n  | typeof Callback.REMOVE\n  | void;\n\n/**\n * For minification optimization. Exposed through Callback.wrap.\n *\n * @ignore\n * @internal\n */\nexport const wrapCallback = <Args extends unknown[] = []>(\n  handlerOrCallback: CallbackHandler<Args> | Callback<Args>,\n  debounceWindow = 0,\n): Callback<Args> => {\n  const isFunction = MH.isFunction(handlerOrCallback);\n  let isRemoved = () => false;\n\n  if (isFunction) {\n    // check if it's an invoke method\n    const callback = callablesMap.get(handlerOrCallback);\n    if (callback) {\n      return wrapCallback(callback);\n    }\n  } else {\n    isRemoved = handlerOrCallback.isRemoved;\n  }\n\n  const handler: CallbackHandler<Args> = isFunction\n    ? handlerOrCallback\n    : (...args: Args) => handlerOrCallback.invoke(...args);\n\n  const wrapper = new Callback<Args>(\n    getDebouncedHandler(debounceWindow, (...args: Args) => {\n      if (!isRemoved()) {\n        return handler(...args);\n      }\n    }),\n  );\n\n  if (!isFunction) {\n    handlerOrCallback.onRemove(wrapper.remove);\n  }\n\n  return wrapper;\n};\n\n/**\n * {@link Callback} wraps user-supplied callbacks. Supports\n * - removing a callback either when calling {@link remove} or if the user\n *   handler returns {@link Callback.REMOVE}\n * - calling custom {@link onRemove} hooks\n * - debouncing (via {@link wrap})\n * - awaiting on an asynchronous handler and ensuring that the handler does not\n *  run concurrently to itself, i.e. subsequent {@link invoke}s will be queued\n *\n * @typeParam Args The type of arguments that the callback expects.\n */\nexport class Callback<Args extends unknown[] = []> {\n  /**\n   * Possible return value for the handler.\n   *\n   * Do not do anything. Same as not retuning anything from the function.\n   */\n  static readonly KEEP: unique symbol = MC.SYMBOL(\n    \"KEEP\",\n  ) as typeof Callback.KEEP;\n\n  /**\n   * Possible return value for the handler.\n   *\n   * Will remove this callback.\n   */\n  static readonly REMOVE: unique symbol = MC.SYMBOL(\n    \"REMOVE\",\n  ) as typeof Callback.REMOVE;\n\n  /**\n   * Call the handler with the given arguments.\n   *\n   * If the handler is asynchronous, it awaits on it. Furthermore, calls will\n   * always wait for previous calls to this handler to complete first, i.e. it\n   * never runs concurrently to itself. If you need multiple calls to the async\n   * handler to run concurrently, then wrap it in a non-async function that\n   * does not await it.\n   *\n   * The returned promise is rejected in two cases:\n   * - If the callback throws an error or returns a rejected Promise.\n   * - If the callback is removed _after_ you call {@link invoke} but before the\n   *   handler is actually called (while it's waiting in the queue to be called)\n   *   In this case, the rejection reason is {@link Callback.REMOVE}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the callback is already removed.\n   */\n  readonly invoke: (...args: Args) => Promise<void>;\n\n  /**\n   * Mark the callback as removed and call the registered {@link onRemove} hooks.\n   *\n   * Future attempts to call it will result in\n   * {@link Errors.LisnUsageError | LisnUsageError}.\n   */\n  readonly remove: () => void;\n\n  /**\n   * Returns true if the callback has been removed and cannot be called again.\n   */\n  readonly isRemoved: () => boolean;\n\n  /**\n   * Registers the given function to be called when the callback is removed.\n   *\n   * You can call {@link onRemove} multiple times to register multiple hooks.\n   */\n  readonly onRemove: (fn: () => void) => void;\n\n  /**\n   * Wraps the given handler or callback as a callback, optionally debounced by\n   * the given debounce window.\n   *\n   * If the argument is already a callback _or an invoke method of a callback_,\n   * then the wrapper will call that callback and return the same value as it.\n   * It will also set up the returned wrapper callback so that it is removed\n   * when the original (given) callback is removed. However, removing the\n   * returned wrapper callback will _not_ cause the original callback (being\n   * wrapped) to be removed. If you want to do this, then do\n   * `wrapper.onRemove(wrapped.remove)`.\n   *\n   * Note that if the argument is a callback that's already debounced by a\n   * _larger_ window, then `debounceWindow` will have no effect.\n   *\n   * @param debounceWindow If non-0, the callback will be called at most\n   *                       every `debounceWindow` ms. The arguments it will\n   *                       be called with will be the last arguments the\n   *                       wrapper was called with.\n   */\n  static readonly wrap = wrapCallback;\n\n  /**\n   * @param handler The actual function to call. This should return one of\n   *                the known {@link CallbackReturnType} values.\n   */\n  constructor(handler: CallbackHandler<Args>) {\n    const logger = debug\n      ? new debug.Logger({ name: \"Callback\", logAtCreation: handler })\n      : null;\n\n    let isRemoved = false;\n    const id = MC.SYMBOL();\n\n    const onRemove = MH.newSet<() => void>();\n\n    this.isRemoved = () => isRemoved;\n\n    this.remove = () => {\n      if (!isRemoved) {\n        debug: logger?.debug8(\"Removing\");\n        isRemoved = true;\n\n        for (const rmFn of onRemove) {\n          rmFn();\n        }\n\n        CallbackScheduler._clear(id);\n      }\n    };\n\n    this.onRemove = (fn) => onRemove.add(fn);\n\n    this.invoke = (...args) =>\n      MH.newPromise((resolve, reject) => {\n        debug: logger?.debug8(\"Calling with\", args);\n        if (isRemoved) {\n          reject(MH.usageError(\"Callback has been removed\"));\n          return;\n        }\n\n        CallbackScheduler._push(\n          id,\n          async () => {\n            let result;\n            try {\n              result = await handler(...args);\n            } catch (err) {\n              reject(err);\n            }\n\n            if (result === Callback.REMOVE) {\n              this.remove();\n            }\n\n            resolve();\n          },\n          reject,\n        );\n      });\n\n    callablesMap.set(this.invoke, this);\n  }\n}\n\n// ----------------------------------------\n\ntype CallbackSchedulerTask = () => Promise<void>;\ntype CallbackSchedulerQueueItem = {\n  _task: CallbackSchedulerTask;\n  _running: boolean;\n  _onRemove: (reason: typeof Callback.REMOVE) => void;\n};\n\ntype CallableCallback<Args extends unknown[] = []> = (...args: Args) => void;\n\nconst callablesMap = MH.newWeakMap<CallableCallback, Callback>();\n\nconst CallbackScheduler = (() => {\n  const queues = MH.newMap<symbol, CallbackSchedulerQueueItem[]>();\n\n  const flush = async (queue: CallbackSchedulerQueueItem[]) => {\n    // So that callbacks are always called asynchronously for consistency,\n    // await here before calling 1st\n    await null;\n    while (MH.lengthOf(queue)) {\n      // shouldn't throw anything as Callback must catch errors\n      queue[0]._running = true;\n      await queue[0]._task();\n\n      // only remove when done\n      queue.shift();\n    }\n  };\n\n  return {\n    _clear: (id: symbol) => {\n      const queue = queues.get(id);\n      if (queue) {\n        let item: CallbackSchedulerQueueItem | undefined;\n        while ((item = queue.shift())) {\n          if (!item._running) {\n            item._onRemove(Callback.REMOVE);\n          }\n        }\n\n        MH.deleteKey(queues, id);\n      }\n    },\n\n    _push: (id: symbol, task: CallbackSchedulerTask, onRemove: () => void) => {\n      let queue = queues.get(id);\n      if (!queue) {\n        queue = [];\n        queues.set(id, queue);\n      }\n\n      queue.push({ _task: task, _onRemove: onRemove, _running: false });\n      if (MH.lengthOf(queue) === 1) {\n        flush(queue);\n      }\n    },\n  };\n})();\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LogFunction } from \"@lisn/globals/types\";\n\nimport { joinAsString } from \"@lisn/utils/text\";\n\nimport { Callback } from \"@lisn/modules/callback\";\n\n/**\n * Like `console.info` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logInfo: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleInfo(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.warn` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logWarn: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleWarn(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.error` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logError: LogFunction = (...args) => {\n  if (\n    (MH.lengthOf(args) > 1 || args[0] !== Callback.REMOVE) &&\n    !isMessageSeen(args)\n  ) {\n    MH.consoleError(MC.LOG_PREFIX, ...args);\n  }\n};\n\nconst discardMessages = MH.newSet<string>();\nconst isMessageSeen = (args: unknown[]) => {\n  const msg = joinAsString(\" \", ...args);\n  const isSeen = discardMessages.has(msg);\n  discardMessages.add(msg);\n  return isSeen;\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Preventing layout trashing\n *\n * {@link waitForMeasureTime} allows you to schedule tasks that read or\n * \"measure\", the DOM, for example getting computed styles, taking the\n * `offsetWidth` or the `scrollTop` of an element, etc... anything that _would_\n * force a layout if it runs after the layout has been invalidated by a\n * \"mutation\".\n *\n * See https://gist.github.com/paulirish/5d52fb081b3570c81e3 for a list of\n * operations that should be run on a valid layout to avoid forced layouts.\n *\n * {@link waitForMutateTime} allows you to schedule tasks that invalidate the\n * DOM layout by making changes to the style, inserting or removing elements,\n * etc.\n *\n * These ensure that:\n * - All mutation tasks that would invalidate the style run together before the\n *   next repaint.\n * - All measurement tasks that need a valid style will run as soon as possible\n *   after the next repaint.\n * - If a mutation task is scheduled by another mutation task, it will run in\n *   the same batch.\n * - If a measurement task is scheduled by either a mutation or another\n *   measurement task, it will run in the same batch.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logError } from \"@lisn/utils/log\";\nimport { scheduleHighPriorityTask } from \"@lisn/utils/tasks\";\n\n/**\n * Returns a Promise that is resolved before the next repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForMutateTime = () =>\n  MH.newPromise<void>((resolve) => {\n    scheduleDOMTask(scheduledDOMMutations, resolve);\n  });\n\n/**\n * Returns a Promise that is resolved as soon as possible after the next\n * repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForMeasureTime = () =>\n  MH.newPromise<void>((resolve) => {\n    scheduleDOMTask(scheduledDOMMeasurements, resolve);\n  });\n\n/**\n * Returns a Promise that is resolved before the repaint that follows the next\n * repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForSubsequentMutateTime = () =>\n  waitForMutateTime().then(waitForMeasureTime).then(waitForMutateTime);\n\n/**\n * Returns a Promise that is resolved as soon as possible after the repaint\n * that follows the next repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForSubsequentMeasureTime = () =>\n  waitForMeasureTime().then(waitForMutateTime).then(waitForMeasureTime);\n\n/**\n * @ignore\n * @internal\n */\nexport const asyncMutatorFor =\n  <Args extends unknown[], Ret>(func: (...args: Args) => Ret) =>\n  async (...args: Args) =>\n    waitForMutateTime().then(() => func(...args));\n\n/**\n * @ignore\n * @internal\n */\nexport const asyncMeasurerFor =\n  <Args extends unknown[], Ret>(func: (...args: Args) => Ret) =>\n  async (...args: Args) =>\n    waitForMeasureTime().then(() => func(...args));\n\n// ----------------------------------------\n\ntype TaskResolver = () => void;\ntype DOMTaskQueue = TaskResolver[];\n\nconst scheduledDOMMeasurements: DOMTaskQueue = [];\nconst scheduledDOMMutations: DOMTaskQueue = [];\nlet hasScheduledDOMTasks = false;\n\nconst scheduleDOMTask = (queue: DOMTaskQueue, resolve: TaskResolver) => {\n  queue.push(resolve);\n  if (!hasScheduledDOMTasks) {\n    hasScheduledDOMTasks = true;\n    MH.onAnimationFrame(runAllDOMTasks);\n  }\n};\n\nconst runAllDOMTasks = async () => {\n  // We suspend (await null) after each queue to ensure that microtasks that\n  // have been added by await waitFor* or waitFor*().then run before the next\n  // queue, so that if they schedule more measurements and/or mutations, they\n  // can be flushed now, in the same batch.\n\n  // We're inside an animation frame. Run all mutation tasks now.\n  while (MH.lengthOf(scheduledDOMMutations)) {\n    runDOMTaskQueue(scheduledDOMMutations);\n    // wait for tasks awaiting on the resolved promises, then check queue again\n    await null;\n  }\n\n  // The measurement queue is now empty => scheduling measurements after\n  // this point will result in rescheduling both queues again in the next\n  // frame.\n  //\n  // Schedule the measurement tasks as soon as possible, after the upcoming\n  // paint. Use a macro task with as high priority as possible.\n  scheduleHighPriorityTask(async () => {\n    while (MH.lengthOf(scheduledDOMMeasurements)) {\n      runDOMTaskQueue(scheduledDOMMeasurements);\n      // wait for tasks awaiting on the resolved promises, then check queue again\n      await null;\n    }\n\n    if (MH.lengthOf(scheduledDOMMutations)) {\n      // There have been mutations added. Schedule another flush.\n      MH.onAnimationFrame(runAllDOMTasks);\n    } else {\n      hasScheduledDOMTasks = false;\n    }\n  });\n};\n\nconst runDOMTaskQueue = (queue: DOMTaskQueue) => {\n  let resolve: TaskResolver | undefined;\n  while ((resolve = queue.shift())) {\n    try {\n      resolve();\n    } catch (err) /* istanbul ignore next */ {\n      logError(err);\n    }\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement } from \"@lisn/globals/types\";\n\n/**\n * Returns all the child elements of the given element that are not `script` or\n * `style` tags.\n *\n * @category DOM: Querying\n */\nexport const getVisibleContentChildren = (element: Element) =>\n  MH.filter([...MH.childrenOf(element)], (ch) =>\n    isVisibleContentTag(MH.tagName(ch)),\n  );\n\n/**\n * Returns whether the given tag is _not_ `script` or `style`. Comparison is\n * case insensitive.\n *\n * @category DOM: Querying\n */\nexport const isVisibleContentTag = (tagName: string) =>\n  !MH.includes([\"script\", \"style\"], MH.toLowerCase(tagName));\n\n/**\n * Returns whether the given tag name has by default an inline display.\n * Comparison is case insensitive.\n *\n * @category DOM: Querying\n */\nexport const isInlineTag = (tagName: string) =>\n  inlineTags.has(tagName.toLowerCase());\n\n/**\n * Returns whether the given element is as {@link DOMElement}.\n *\n * @category DOM: Querying\n */\nexport const isDOMElement = (target: unknown): target is DOMElement =>\n  MH.isHTMLElement(target) ||\n  MH.isInstanceOf(target, SVGElement) ||\n  (typeof MathMLElement !== \"undefined\" &&\n    MH.isInstanceOf(target, MathMLElement));\n\n// --------------------\n\nconst inlineTags = MH.newSet([\n  \"a\",\n  \"abbr\",\n  \"acronym\",\n  \"b\",\n  \"bdi\",\n  \"bdo\",\n  \"big\",\n  \"button\",\n  \"cite\",\n  \"code\",\n  \"data\",\n  \"dfn\",\n  \"em\",\n  \"i\",\n  \"img\",\n  \"input\",\n  \"kbd\",\n  \"label\",\n  \"mark\",\n  \"map\",\n  \"object\",\n  \"output\",\n  \"q\",\n  \"rp\",\n  \"rt\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"select\",\n  \"small\",\n  \"span\",\n  \"strong\",\n  \"sub\",\n  \"sup\",\n  \"textarea\",\n  \"time\",\n  \"tt\",\n  \"u\",\n  \"var\",\n]);\n","/**\n * @module Utils\n *\n * @categoryDescription CSS: Altering\n * These functions transition an element from one CSS class to another, but\n * could lead to forced layout if not scheduled using {@link waitForMutateTime}.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n *\n * @categoryDescription CSS: Altering (optimized)\n * These functions transition an element from one CSS class to another in an\n * optimized way using {@link waitForMutateTime} and so are asynchronous.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement, FlexDirection } from \"@lisn/globals/types\";\n\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n  asyncMeasurerFor,\n  asyncMutatorFor,\n  waitForSubsequentMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isDOMElement } from \"@lisn/utils/dom-query\";\nimport { isValidNum, roundNumTo } from \"@lisn/utils/math\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { camelToKebabCase, splitOn } from \"@lisn/utils/text\";\n\n/**\n * Removes the given `fromCls` class and adds the given `toCls` class to the\n * element.\n *\n * Unlike {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace | DOMTokenList:replace},\n * this will always add `toCls` even if `fromCls` isn't in the element's class list.\n *\n * @returns True if there was a change made (class removed or added), false\n * otherwise.\n *\n * @category CSS: Altering\n */\nexport const transitionElementNow = (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n) => {\n  cancelCSSTransitions(element, fromCls, toCls);\n\n  // Avoid triggering MutationObserver unnecessarily.\n  let didChange = false;\n  if (hasClass(element, fromCls)) {\n    didChange = true;\n    removeClassesNow(element, fromCls);\n  }\n\n  if (!hasClass(element, toCls)) {\n    addClassesNow(element, toCls);\n    didChange = true;\n  }\n\n  return didChange;\n};\n\n/**\n * Like {@link transitionElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay, and it finally awaits for the effective style's\n * transition-duration.\n *\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, this one is\n * cancelled.\n *\n * @example\n *\n * - {@link showElement} with delay of 100 schedules `lisn-hide` -> `lisn-show`\n *   in 100ms\n * - then if {@link hideElementNow} is called, or a scheduled\n *   {@link hideElement} completes  before that timer runs out, this call to\n *   {@link showElement} aborts\n *\n * ```javascript\n * hideElement(someElement, 10);\n * // this will be aborted in 10ms when the scheduled hideElement above\n * // completes\n * showElement(someElement, 100);\n * ```\n *\n * ```javascript\n * // this will be aborted in 10ms when the hideElement that will be scheduled\n * // below completes\n * showElement(someElement, 100);\n * hideElement(someElement, 10);\n * ```\n *\n * ```javascript\n * // this will be aborted immediately by hideElementNow that runs straight\n * // afterwards\n * showElement(someElement, 100);\n * hideElementNow(someElement);\n * ```\n *\n * ```javascript\n * hideElementNow(someElement);\n * // this will NOT be aborted because hideElementNow has completed already\n * showElement(someElement, 100);\n * ```\n *\n * @category CSS: Altering (optimized)\n */\nexport const transitionElement = async (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n  delay = 0,\n) => {\n  const thisTransition = scheduleCSSTransition(element, toCls);\n\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForMutateTime();\n  if (thisTransition._isCancelled()) {\n    // it has been overridden by a later transition\n    return false;\n  }\n\n  const didChange = transitionElementNow(element, fromCls, toCls);\n  thisTransition._finish();\n\n  if (!didChange) {\n    return false;\n  }\n\n  // Await for the transition duration so that caller awaiting on us knows when\n  // it's complete.\n  const transitionDuration = await getMaxTransitionDuration(element);\n  if (transitionDuration) {\n    await waitForDelay(transitionDuration);\n  }\n\n  return true;\n};\n\n/**\n * Transitions an element from class `lisn-undisplay` (which applies `display:\n * none`) to `lisn-display` (no style associated with this).\n *\n * The difference between this and simply removing the `lisn-undisplay` class\n * is that previously scheduled transitions to `lisn-undisplay` will be\n * cancelled.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const displayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY);\n\n/**\n * Like {@link displayElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const displayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY, delay);\n\n/**\n * The opposite of {@link displayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const undisplayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY);\n\n/**\n * Like {@link undisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const undisplayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY, delay);\n\n/**\n * Transitions an element from class `lisn-hide` (which makes the element\n * hidden) to `lisn-show` (which shows it). These classes have CSS\n * transitions applied so the element is faded into and out of view.\n *\n * @see {@link transitionElementNow}.\n *\n * @category CSS: Altering\n */\nexport const showElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW);\n\n/**\n * Like {@link showElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const showElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW, delay);\n\n/**\n * The opposite of {@link showElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const hideElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE);\n\n/**\n * Like {@link hideElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const hideElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE, delay);\n\n/**\n * If {@link isElementUndisplayed}, it will {@link displayElementNow},\n * otherwise it will {@link undisplayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleDisplayElementNow = (element: Element) =>\n  isElementUndisplayed(element)\n    ? displayElementNow(element)\n    : undisplayElementNow(element);\n\n/**\n * Like {@link toggleDisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleDisplayElement = (element: Element, delay = 0) =>\n  isElementUndisplayed(element)\n    ? displayElement(element, delay)\n    : undisplayElement(element, delay);\n\n/**\n * If {@link isElementHidden}, it will {@link showElementNow}, otherwise\n * {@link hideElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleShowElementNow = (element: Element) =>\n  isElementHidden(element) ? showElementNow(element) : hideElementNow(element);\n\n/**\n * Like {@link toggleShowElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleShowElement = (element: Element, delay = 0) =>\n  isElementHidden(element)\n    ? showElement(element, delay)\n    : hideElement(element, delay);\n\n/**\n * Returns true if the element's class list contains `lisn-hide`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementHidden = (element: Element) =>\n  hasClass(element, MC.PREFIX_HIDE);\n\n/**\n * Returns true if the element's class list contains `lisn-undisplay`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementUndisplayed = (element: Element) =>\n  hasClass(element, MC.PREFIX_UNDISPLAY);\n\n/**\n * Returns true if the element's class list contains the given class.\n *\n * @category CSS: Altering (optimized)\n */\nexport const hasClass = (element: Element, className: string) =>\n  MH.classList(element).contains(className);\n\n/**\n * Returns true if the element's class list contains all of the given classes.\n *\n * @category CSS: Altering (optimized)\n */\nexport const hasAllClasses = (element: Element, classNames: string[]) =>\n  !MH.some(classNames, (className) => !hasClass(element, className));\n\n/**\n * Returns true if the element's class list contains any of the given classes.\n *\n * @category CSS: Altering (optimized)\n */\nexport const hasAnyClass = (element: Element, classNames: string[]) =>\n  MH.some(classNames, (className) => hasClass(element, className));\n\n/**\n * Adds the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const addClassesNow = (element: Element, ...classNames: string[]) =>\n  MH.classList(element).add(...classNames);\n\n/**\n * Like {@link addClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const addClasses = asyncMutatorFor(addClassesNow);\n\n/**\n * Removes the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const removeClassesNow = (element: Element, ...classNames: string[]) =>\n  MH.classList(element).remove(...classNames);\n\n/**\n * Like {@link removeClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const removeClasses = asyncMutatorFor(removeClassesNow);\n\n/**\n * Toggles the given class on the element.\n *\n * @param force See {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle | DOMTokenList:toggle}\n *\n * @category CSS: Altering\n */\nexport const toggleClassNow = (\n  element: Element,\n  className: string,\n  force?: boolean,\n) => MH.classList(element).toggle(className, force);\n\n/**\n * Like {@link toggleClassNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleClass = asyncMutatorFor(toggleClassNow);\n\n// For *Data: to avoid unnecessary type checking that ensures element is\n// HTMLElement or SVGElement, use getAttribute instead of dataset.\n\n/**\n * Returns the value of the given data attribute. The name of the attribute\n * must _not_ start with `data`. It can be in either camelCase or kebab-case,\n * it is converted as needed.\n *\n * @category CSS: Altering (optimized)\n */\nexport const getData = (element: Element, name: string) =>\n  MH.getAttr(element, MH.prefixData(name));\n\n/**\n * Returns the value of the given data attribute as a boolean. Its value is\n * expected to be either blank or \"true\" (which result in `true`), or \"false\"\n * (which results in `false`).\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering (optimized)\n */\nexport const getBooleanData = (element: Element, name: string) => {\n  const value = getData(element, name);\n  return value !== null && value !== \"false\";\n};\n\n/**\n * @ignore\n * @deprecated\n */\nexport const getBoolData = getBooleanData;\n\n/**\n * Sets the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const setDataNow = (element: Element, name: string, value: string) =>\n  MH.setAttr(element, MH.prefixData(name), value);\n\n/**\n * Like {@link setDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const setData = asyncMutatorFor(setDataNow);\n\n/**\n * Sets the given data attribute with value \"true\" (default) or \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const setBooleanDataNow = (\n  element: Element,\n  name: string,\n  value = true,\n) => MH.setAttr(element, MH.prefixData(name), value + \"\");\n\n/**\n * @ignore\n * @deprecated\n */\nexport const setBoolDataNow = setBooleanDataNow;\n\n/**\n * Like {@link setBooleanDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const setBooleanData = asyncMutatorFor(setBooleanDataNow);\n\n/**\n * @ignore\n * @deprecated\n */\nexport const setBoolData = setBooleanData;\n\n/**\n * Sets the given data attribute with value \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const unsetBooleanDataNow = (element: Element, name: string) =>\n  MH.unsetAttr(element, MH.prefixData(name));\n\n/**\n * @ignore\n * @deprecated\n */\nexport const unsetBoolDataNow = unsetBooleanDataNow;\n\n/**\n * Like {@link unsetBooleanDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const unsetBooleanData = asyncMutatorFor(unsetBooleanDataNow);\n\n/**\n * @ignore\n * @deprecated\n */\nexport const unsetBoolData = unsetBooleanData;\n\n/**\n * Deletes the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const delDataNow = (element: Element, name: string) =>\n  MH.delAttr(element, MH.prefixData(name));\n\n/**\n * Like {@link delDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const delData = asyncMutatorFor(delDataNow);\n\n/**\n * Returns the value of the given property from the computed style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getComputedStylePropNow = (element: Element, prop: string) =>\n  getComputedStyle(element).getPropertyValue(prop);\n\n/**\n * Like {@link getComputedStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getComputedStyleProp = asyncMeasurerFor(getComputedStylePropNow);\n\n/**\n * Returns the value of the given property from the inline style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.getPropertyValue(prop);\n\n/**\n * Like {@link getStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getStyleProp = asyncMeasurerFor(getStylePropNow);\n\n/**\n * Sets the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const setStylePropNow = (\n  element: Element,\n  prop: string,\n  value: string,\n) => (element as DOMElement).style?.setProperty(prop, value);\n\n/**\n * Like {@link setStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const setStyleProp = asyncMutatorFor(setStylePropNow);\n\n/**\n * Deletes the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const delStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.removeProperty(prop);\n\n/**\n * Like {@link delStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const delStyleProp = asyncMutatorFor(delStylePropNow);\n\n/**\n * Returns the flex direction of the given element **if it has a flex layout**.\n *\n * @returns `null` if the element does not have a flex layout.\n */\nexport const getFlexDirection = async (\n  element: Element,\n): Promise<FlexDirection | null> => {\n  const displayStyle = await getComputedStyleProp(element, \"display\");\n  if (!displayStyle.includes(\"flex\")) {\n    return null;\n  }\n\n  return (await getComputedStyleProp(\n    element,\n    \"flex-direction\",\n  )) as FlexDirection;\n};\n\n/**\n * Returns the flex direction of the given element's parent **if it has a flex\n * layout**.\n *\n * @returns `null` if the element's parent does not have a flex layout.\n */\nexport const getParentFlexDirection = async (\n  element: Element,\n): Promise<FlexDirection | null> => {\n  const parent = MH.parentOf(element);\n  return parent ? getFlexDirection(parent) : null;\n};\n\n/**\n * Returns true if the given element has a flex layout. If direction is given,\n * then it also needs to match.\n */\nexport const isFlex = async (element: Element, direction?: FlexDirection) => {\n  const flexDirection = await getFlexDirection(element);\n\n  if (direction) {\n    return direction === flexDirection;\n  }\n\n  return flexDirection !== null;\n};\n\n/**\n * Returns true if the given element's parent has a flex layout. If direction is\n * given, then it also needs to match.\n */\nexport const isFlexChild = async (\n  element: Element,\n  direction?: FlexDirection,\n) => {\n  const parent = MH.parentOf(element);\n  return parent ? isFlex(parent, direction) : false;\n};\n\n/**\n * In milliseconds.\n *\n * @ignore\n * @internal\n */\nexport const getMaxTransitionDuration = async (element: Element) => {\n  const propVal = await getComputedStyleProp(element, \"transition-duration\");\n\n  return MH.max(\n    ...splitOn(propVal, \",\", true).map((strValue) => {\n      let duration = MH.parseFloat(strValue) || 0;\n\n      if (strValue === duration + \"s\") {\n        duration *= 1000;\n      }\n\n      return duration;\n    }),\n  );\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const disableInitialTransition = async (element: Element, delay = 0) => {\n  await addClasses(element, MC.PREFIX_TRANSITION_DISABLE);\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForSubsequentMutateTime();\n  removeClassesNow(element, MC.PREFIX_TRANSITION_DISABLE);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const setHasModal = () => setBooleanData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const delHasModal = () => delData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const copyStyle = async (\n  fromElement: Element,\n  toElement: Element,\n  includeComputedProps?: string[],\n) => {\n  if (!isDOMElement(fromElement) || !isDOMElement(toElement)) {\n    return;\n  }\n\n  await waitForMeasureTime();\n  const props: Record<string, string> = {};\n\n  if (includeComputedProps) {\n    for (const prop of includeComputedProps) {\n      props[prop] = getComputedStylePropNow(fromElement, prop);\n    }\n  }\n\n  const style = fromElement.style; // only inline styles\n  for (const prop in style) {\n    const value = style.getPropertyValue(prop);\n    if (value) {\n      props[prop] = value;\n    }\n  }\n\n  for (const prop in props) {\n    setStyleProp(toElement, prop, props[prop]);\n  }\n\n  addClasses(toElement, ...MH.classList(fromElement));\n};\n\n/**\n * If the props keys are in camelCase they are converted to kebab-case\n *\n * If a value is null or undefined, the property is deleted.\n *\n * @ignore\n * @internal\n */\nexport const setNumericStyleJsVarsNow = (\n  element: Element,\n  props: CssNumericProps,\n  options: {\n    _prefix?: string;\n    _units?: string;\n    _numDecimal?: number;\n    // _transformFn?: (prop: string, currVal: number, newVal: number) => number;\n  } = {},\n) => {\n  if (!isDOMElement(element)) {\n    return;\n  }\n\n  // const transformFn = options._transformFn;\n\n  const varPrefix = MH.prefixCssJsVar(options?._prefix || \"\");\n  for (const prop in props) {\n    const cssPropSuffix = camelToKebabCase(prop);\n    const varName = `${varPrefix}${cssPropSuffix}`;\n\n    let value: number | null;\n\n    if (!isValidNum(props[prop])) {\n      value = null;\n    } else {\n      value = props[prop];\n      const thisNumDecimal =\n        options?._numDecimal ?? (value > 0 && value < 1 ? 2 : 0);\n\n      // if (transformFn) {\n      //   const currValue = MH.parseFloat(await getStyleProp(element, varName));\n      //\n      //   value = transformFn(prop, currValue || 0, value);\n      // }\n\n      value = roundNumTo(value, thisNumDecimal);\n    }\n\n    if (value === null) {\n      delStylePropNow(element, varName);\n    } else {\n      setStylePropNow(element, varName, value + (options?._units || \"\"));\n    }\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const setNumericStyleJsVars = asyncMutatorFor(setNumericStyleJsVarsNow);\n\n// ----------------------------------------\n\ntype CssNumericProps = Record<string, number | undefined | null>;\n\ntype CSSTransition = {\n  _cancel: () => undefined;\n  _finish: () => undefined;\n  _isCancelled: () => boolean;\n};\n\nconst PREFIX_HAS_MODAL = MH.prefixName(\"has-modal\");\n\nconst scheduledCSSTransitions = MH.newWeakMap<\n  Element,\n  Record<string, CSSTransition>\n>();\n\nconst cancelCSSTransitions = (element: Element, ...toClasses: string[]) => {\n  const scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    return;\n  }\n\n  for (const toCls of toClasses) {\n    const scheduledTransition = scheduledTransitions[toCls];\n    if (scheduledTransition) {\n      scheduledTransition._cancel();\n    }\n  }\n};\n\nconst scheduleCSSTransition = (element: Element, toCls: string) => {\n  let scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    scheduledTransitions = {};\n    scheduledCSSTransitions.set(element, scheduledTransitions);\n  }\n\n  let isCancelled = false;\n  scheduledTransitions[toCls] = {\n    _cancel: () => {\n      isCancelled = true;\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _finish: () => {\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _isCancelled: () => {\n      return isCancelled;\n    },\n  };\n\n  return scheduledTransitions[toCls];\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Altering\n * These functions alter the DOM tree, but could lead to forced layout if not\n * scheduled using {@link Utils.waitForMutateTime}.\n *\n * @categoryDescription DOM: Altering (optimized)\n * These functions alter the DOM tree in an optimized way using\n * {@link Utils.waitForMutateTime} and so are asynchronous.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  hideElement,\n  hasAnyClass,\n  addClassesNow,\n  removeClassesNow,\n  getData,\n  setDataNow,\n  setBooleanData,\n} from \"@lisn/utils/css-alter\";\nimport { asyncMutatorFor } from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { randId } from \"@lisn/utils/text\";\n\n/**\n * Wraps the element in the given wrapper, or a newly created element if not given.\n *\n * @param [options.wrapper]\n *              If it's an element, it is used as the wrapper. If it's a string\n *              tag name, then a new element with this tag is created as the\n *              wrapper. If not given, then `div` is used if the element to be\n *              wrapped has an block-display tag, or otherwise `span` (if the\n *              element to be wrapped has an inline tag name).\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n * @returns The wrapper element that was either passed in options or created.\n *\n * @category DOM: Altering\n */\nexport const wrapElementNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: wrapper,\n    });\n\n    ignoreMove(wrapper, {\n      to: MH.parentOf(element),\n    });\n  }\n\n  element.replaceWith(wrapper);\n  wrapper.append(element);\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapElementNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapElement = asyncMutatorFor(wrapElementNow);\n\n/**\n * Wraps the element's children in the given wrapper, or a newly created element\n * if not given.\n *\n * @see {@link wrapElementNow}.\n *\n * @category DOM: Altering\n */\nexport const wrapChildrenNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n\n  moveChildrenNow(element, wrapper, { ignoreMove: true });\n  moveElementNow(wrapper, {\n    to: element,\n    ignoreMove: true,\n  });\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapChildrenNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapChildren = asyncMutatorFor(wrapChildrenNow);\n\n/**\n * Replace an element with another one.\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const replaceElementNow = (\n  element: Element,\n  newElement: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    ignoreMove(\n      // remove element\n      element,\n      { from: MH.parentOf(element) },\n    );\n\n    ignoreMove(\n      // move newElement to element's current parent\n      newElement,\n      { from: MH.parentOf(newElement), to: MH.parentOf(element) },\n    );\n  }\n\n  element.replaceWith(newElement);\n};\n\n/**\n * Like {@link replaceElementNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const replaceElement = asyncMutatorFor(replaceElementNow);\n\n/**\n * Replace an element with another one.\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const swapElementsNow = (\n  elementA: Element,\n  elementB: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  const temp = MH.createElement(\"div\");\n  replaceElementNow(elementA, temp, options);\n  replaceElementNow(elementB, elementA, options);\n  replaceElementNow(temp, elementB, options);\n};\n\n/**\n * Like {@link swapElementsNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const swapElements = asyncMutatorFor(swapElementsNow);\n\n// [TODO v2]: moveChildren to accept newParent as options.to\n\n/**\n * Move an element's children to a new element\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the children (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveChildrenNow = (\n  oldParent: Element,\n  newParent: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    for (const child of MH.childrenOf(oldParent)) {\n      ignoreMove(child, {\n        from: oldParent,\n        to: newParent,\n      });\n    }\n  }\n\n  newParent.append(...MH.childrenOf(oldParent));\n};\n\n/**\n * Like {@link moveChildrenNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveChildren = asyncMutatorFor(moveChildrenNow);\n\n/**\n * Moves an element to a new position.\n *\n * @param [options.to]         The new parent or sibling (depending on\n *                             `options.position`). If not given, the\n *                             element is removed from the DOM.\n * @param [options.position]   - append (default): append to `options.to`\n *                             - prepend: prepend to `options.to`\n *                             - before: insert before `options.to`\n *                             - after: insert after `options.to`\n * @param [options.ignoreMove] If true, the DOM watcher instances will\n *                             ignore the operation of moving the element\n *                             (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveElementNow = (\n  element: Element,\n  options?: {\n    to?: Element;\n    position?: \"append\" | \"prepend\" | \"before\" | \"after\";\n    ignoreMove?: boolean;\n  },\n) => {\n  let parentEl = options?.to || null;\n  const position = options?.position || \"append\";\n  if (position === \"before\" || position === \"after\") {\n    parentEl = MH.parentOf(options?.to);\n  }\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: parentEl,\n    });\n  }\n\n  if (options?.to) {\n    options.to[position](element);\n  } else {\n    MH.remove(element);\n  }\n};\n\n/**\n * Like {@link moveElementNow} except it will {@link Utils.waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveElement = asyncMutatorFor(moveElementNow);\n\n/**\n * It will {@link hideElement} and then remove it from the DOM.\n *\n * @param [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering (optimized)\n */\nexport const hideAndRemoveElement = async (\n  element: Element,\n  delay = 0,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  await hideElement(element, delay);\n  moveElementNow(element, options);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getOrAssignID = (element: Element, prefix = \"\") => {\n  let domID = element.id;\n  if (!domID) {\n    domID = `${prefix}-${randId()}`;\n    element.id = domID;\n  }\n\n  return domID;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const isAllowedToWrap = (element: Element) =>\n  settings.contentWrappingAllowed === true &&\n  getData(element, MC.PREFIX_NO_WRAP) === null;\n\n/**\n * @ignore\n * @internal\n *\n * @param classNames Default is [MC.PREFIX_WRAPPER]. Pass `null` to disable check.\n */\nexport const getWrapper = (\n  element: Element,\n  options?: {\n    tagName?: keyof HTMLElementTagNameMap;\n    classNames?: string[] | null;\n  },\n) => {\n  const { tagName, classNames = [MC.PREFIX_WRAPPER] } = options ?? {};\n  const parent = MH.parentOf(element);\n  if (\n    MH.lengthOf(MH.childrenOf(parent)) === 1 &&\n    MH.isHTMLElement(parent) &&\n    (!tagName || MH.hasTagName(parent, tagName)) &&\n    (!classNames || hasAnyClass(parent, classNames))\n  ) {\n    // Already wrapped\n    return parent;\n  }\n\n  return null; // don't check the element itself, only its parent\n};\n\n/**\n * @ignore\n * @internal\n *\n * @param classNames Default is [MC.PREFIX_WRAPPER]. Pass `null` to disable check.\n */\nexport const getContentWrapper = (\n  element: Element,\n  options?: {\n    tagName?: keyof HTMLElementTagNameMap;\n    classNames?: string[] | null;\n  },\n) => {\n  const { tagName, classNames = [MC.PREFIX_WRAPPER] } = options ?? {};\n  const firstChild = MH.childrenOf(element)[0];\n  if (\n    MH.lengthOf(MH.childrenOf(element)) === 1 &&\n    MH.isHTMLElement(firstChild) &&\n    (!tagName || MH.hasTagName(firstChild, tagName)) &&\n    (!classNames || hasAnyClass(firstChild, classNames))\n  ) {\n    // Already wrapped\n    return firstChild;\n  }\n\n  return null;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrapNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options?: O,\n) => _tryWrapNow(element, options);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrap = asyncMutatorFor(tryWrapNow);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrapContentNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options?: O,\n) => _tryWrapNow(element, options, true);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryWrapContent = asyncMutatorFor(tryWrapContentNow);\n\n/**\n * @ignore\n * @internal\n */\nexport const unwrapContentNow = (wrapper: Element, classNames?: string[]) => {\n  const parent = wrapper.parentElement;\n  if (parent) {\n    moveChildrenNow(wrapper, parent, { ignoreMove: true });\n    moveElementNow(wrapper, { ignoreMove: true });\n    if (classNames) {\n      removeClassesNow(wrapper, ...classNames);\n    }\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const unwrapContent = asyncMutatorFor(unwrapContentNow);\n\n/**\n * @ignore\n * @internal\n */\nexport const cloneElement = <E extends Element>(element: E) => {\n  const clone = element.cloneNode(true) as E;\n  setBooleanData(clone, MH.prefixName(\"clone\"));\n  return clone;\n};\n\n/**\n * Creates a dummy hidden clone that's got animation and transitions disabled\n * and absolute position, wrapped in a wrapper (of size 0) and inserts it just\n * before the `insertBefore` element (or if not given, the original element),\n * so that the hidden clone overlaps the actual element's regular\n * (pre-transformed) position.\n *\n * It clears the ID of the clone.\n *\n * Returns the clone.\n *\n * @ignore\n * @internal\n */\nexport const insertGhostCloneNow = <E extends Element>(\n  element: E,\n  insertBefore: Element | null = null,\n) => {\n  const clone = cloneElement(element);\n  clone.id = \"\";\n\n  addClassesNow(\n    clone,\n    MC.PREFIX_GHOST,\n    MC.PREFIX_TRANSITION_DISABLE,\n    MC.PREFIX_ANIMATE_DISABLE,\n  );\n\n  const wrapper = _tryWrapNow(clone, { required: true });\n\n  moveElementNow(wrapper, {\n    to: insertBefore || element,\n    position: \"before\",\n    ignoreMove: true,\n  });\n\n  return { _wrapper: wrapper, _clone: clone };\n};\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const insertGhostClone = asyncMutatorFor(insertGhostCloneNow);\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const ignoreMove = (\n  target: Element,\n  options: { from?: Element | null; to?: Element | null },\n) =>\n  recordsToSkipOnce.set(target, {\n    from: options.from || null,\n    to: options.to || null,\n  });\n\n/**\n * @ignore\n * @internal\n */\nexport const getIgnoreMove = (\n  target: Element,\n): { from: Element | null; to: Element | null } | null =>\n  recordsToSkipOnce.get(target) || null;\n\n/**\n * @ignore\n * @internal\n */\nexport const clearIgnoreMove = (target: Element) => {\n  // We should not clear the entry the first time the operation is observed\n  // (when we return true here), because there may be multiple DOMWatcher\n  // instances that will observe it and need to query it. Instead do it shortly.\n  MH.setTimer(() => {\n    MH.deleteKey(recordsToSkipOnce, target);\n  }, 100);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const insertArrow = (\n  target: Element,\n  direction: \"up\" | \"down\" | \"left\" | \"right\",\n  position: \"prepend\" | \"append\" | \"before\" | \"after\" = \"append\",\n  tag = \"span\",\n) => {\n  const arrow = MH.createElement(tag);\n  addClassesNow(arrow, MH.prefixName(MC.S_ARROW));\n  setDataNow(arrow, MH.prefixName(\"direction\"), direction);\n  moveElement(arrow, { to: target, position, ignoreMove: true });\n  return arrow;\n};\n\n// ----------------------------------------\n\ntype ContentWrappingOptions = {\n  tagName?: keyof HTMLElementTagNameMap;\n  classNames?: string[]; // if the wrapper has any one of these, it will be re-used\n  ignoreMove?: boolean; // default is true here\n  required?: boolean; // if true, will ignore contentWrappingAllowed and data-lisn-no-wrap\n  requiredBy?: string; // for logging purposes\n};\n\nconst recordsToSkipOnce = MH.newMap<\n  /* target being moved */ Element,\n  { from: Element | null; to: Element | null }\n>();\n\nconst createWrapperFor = (\n  element: Element,\n  wrapper: HTMLElement | keyof HTMLElementTagNameMap | undefined,\n) => {\n  if (MH.isElement(wrapper)) {\n    return wrapper;\n  }\n\n  let tag = wrapper;\n  if (!tag) {\n    if (isInlineTag(MH.tagName(element))) {\n      tag = \"span\";\n    } else {\n      tag = \"div\";\n    }\n  }\n\n  return MH.createElement(tag);\n};\n\nconst _tryWrapNow = <O extends ContentWrappingOptions>(\n  element: Element,\n  options: O | undefined,\n  wrapContent = false, // if true, wrap its children, otherwise given element\n) => {\n  const {\n    tagName,\n    classNames = [MC.PREFIX_WRAPPER],\n    ignoreMove = true,\n    required = false,\n    requiredBy = \"\",\n  } = options ?? {};\n\n  const getWrapperFn = wrapContent ? getContentWrapper : getWrapper;\n  const wrapFn = wrapContent ? wrapChildrenNow : wrapElementNow;\n  const allowedToWrap = isAllowedToWrap(element);\n\n  let wrapper = getWrapperFn(element, options);\n  if (!wrapper && (required || allowedToWrap)) {\n    wrapper = wrapFn(element, { wrapper: tagName, ignoreMove });\n    if (classNames) {\n      addClassesNow(wrapper, ...classNames);\n    }\n    if (isInlineTag(MH.tagName(wrapper))) {\n      addClassesNow(wrapper, MC.PREFIX_INLINE_WRAPPER);\n    }\n\n    if (!allowedToWrap && requiredBy) {\n      logWarn(\n        `content wrapping is disabled for element but wrapping is required by ${requiredBy}`,\n      );\n    }\n  }\n\n  return wrapper as O extends { required: true }\n    ? HTMLElement\n    : HTMLElement | null;\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { NonNullableReturnType } from \"@lisn/globals/types\";\n\n/**\n * Returns a Promise that is resolved when the given `checkFn` function returns\n * a value other than `null` or `undefined`.\n *\n * The Promise is resolved with `checkFn`'s return value.\n *\n * The function is called initially, and then every time there are changes to\n * the DOM children. Uses\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * @param timeout If given, then if no such element is present after this many\n *                milliseconds, the promise will resolve to `null`.\n *\n * @category DOM: Events\n */\nexport const waitForElement = <\n  F extends () => unknown,\n  T extends number | undefined = undefined,\n>(\n  checkFn: F,\n  timeout?: number,\n) =>\n  MH.newPromise<\n    T extends undefined\n      ? NonNullableReturnType<F>\n      : null | NonNullableReturnType<F>\n  >((resolve) => {\n    const callFn = () => {\n      const result = checkFn();\n      if (!MH.isNullish(result)) {\n        resolve(result as NonNullableReturnType<F>);\n        return true; // done\n      }\n      return false;\n    };\n\n    if (callFn()) {\n      return; // resolved already\n    }\n\n    if (!MH.isNullish(timeout)) {\n      MH.setTimer(() => {\n        resolve(\n          null as T extends undefined\n            ? NonNullableReturnType<F>\n            : null | NonNullableReturnType<F>,\n        );\n        observer.disconnect();\n      }, timeout);\n    }\n\n    const observer = MH.newMutationObserver(() => {\n      if (callFn()) {\n        observer.disconnect();\n      }\n    });\n\n    observer.observe(MH.getDocElement(), {\n      childList: true,\n      subtree: true,\n    });\n  });\n\n/**\n * Returns a Promise that is resolved when the given `checkFn` function returns\n * a value other than `null` or `undefined` or the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * becomes \"interactive\".\n *\n * It always calls the given `checkFn` first before examining the `readyState`.\n *\n * If the `readyState` became interactive before the element was found, the\n * Promise resolves to `null`. Otherwise the Promise is resolved with `checkFn`'s\n * return value.\n *\n * The function is called initially, and then every time there are changes to\n * the DOM children. Uses\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * @category DOM: Events\n */\nexport const waitForElementOrInteractive = <F extends () => unknown>(\n  checkFn: F,\n) =>\n  MH.newPromise<NonNullableReturnType<F> | null>((resolve) => {\n    let isInteractive = false;\n    // Check element first, then readyState. The callback to waitForElement is\n    // run synchronously first time, so isInteractive will be false and checkFn\n    // will run.\n    waitForElement(() => isInteractive || checkFn()).then((res) => {\n      if (!isInteractive) {\n        resolve(res as NonNullableReturnType<F>);\n      } // else already resolved to null\n    });\n\n    waitForInteractive().then(() => {\n      isInteractive = true;\n      resolve(null);\n    });\n  });\n\n/**\n * Returns a Promise that is resolved when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"interactive\" (or if it's already \"interactive\" or \"complete\", the\n * Promise is fulfilled immediately).\n *\n * @category DOM: Events\n */\nexport const waitForInteractive = () =>\n  MH.newPromise<void>((resolve) => {\n    const readyState = MH.getReadyState();\n    if (readyState === INTERACTIVE || readyState === COMPLETE) {\n      resolve();\n      return;\n    }\n\n    MH.getDoc().addEventListener(\"DOMContentLoaded\", () => resolve());\n  });\n\n/**\n * Returns a Promise that is resolved when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"complete\" (or if it's already \"complete\", the Promise is fulfilled\n * immediately).\n *\n * @category DOM: Events\n */\nexport const waitForComplete = () =>\n  MH.newPromise<void>((resolve) => {\n    if (MH.getReadyState() === COMPLETE) {\n      resolve();\n      return;\n    }\n\n    MH.getDoc().addEventListener(\"readystatechange\", () => {\n      if (MH.getReadyState() === COMPLETE) {\n        resolve();\n      }\n    });\n  });\n\n/**\n * Returns a Promise that is resolved either when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"complete\" or the `readyState` is \"interactive\" and at least\n * {@link settings.pageLoadTimeout} milliseconds have passed (if > 0) since it\n * became \"interactive\".\n *\n * @category DOM: Events\n */\nexport const waitForPageReady = () =>\n  MH.newPromise<void>((resolve) => {\n    if (pageIsReady) {\n      resolve();\n      return;\n    }\n\n    return waitForInteractive().then(() => {\n      // Setup a listener for the complete state but wait at most\n      // <pageLoadTimeout> (if specified)\n      let timer: ReturnType<typeof setTimeout> | null = null;\n\n      const dispatchReady = () => {\n        pageIsReady = true;\n        if (timer) {\n          MH.clearTimer(timer);\n          timer = null;\n        }\n        resolve();\n      };\n\n      if (settings.pageLoadTimeout > 0) {\n        timer = MH.setTimer(() => {\n          dispatchReady();\n        }, settings.pageLoadTimeout);\n      }\n\n      waitForComplete().then(dispatchReady);\n    });\n  });\n\n/**\n * Returns true if the page is \"ready\". See {@link waitForPageReady}.\n *\n * @category DOM: Events\n */\nexport const isPageReady = () => pageIsReady;\n\n// --------------------\n\nconst COMPLETE = \"complete\";\nconst INTERACTIVE = \"interactive\";\n\nlet pageIsReady = false;\n\nif (!MH.hasDOM()) {\n  pageIsReady = true;\n} else {\n  waitForPageReady(); // ensure pageIsReady is set even if waitForPageReady is not called\n}\n","/**\n * @module Modules/XMap\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { MapBase } from \"@lisn/globals/types\";\n\nexport type DefaultValueGetter<K, V> = (key: K) => V;\nexport type IteratorCallback<K, V> = (\n  value: V,\n  key: K,\n  map: XMap<K, V>,\n) => void;\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXMap = <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  new XMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXMapGetter =\n  <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXMap(getDefaultV);\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMap = <K extends WeakKey, V>(\n  getDefaultV: DefaultValueGetter<K, V>,\n) => new XWeakMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXWeakMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMapGetter =\n  <K extends WeakKey, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXWeakMap(getDefaultV);\n\nexport abstract class XMapBase<K, V> {\n  /**\n   * Returns the value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly get: (key: K) => V | undefined;\n\n  /**\n   * Like {@link get} except that if the key is not found in the map, then it\n   * will set and return a default value by calling `getDefaultV` passed to the\n   * constructor.\n   */\n  readonly sGet: (key: K) => V;\n\n  /**\n   * Sets a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly set: (key: K, value: V) => void;\n\n  /**\n   * Deletes a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly delete: (key: K) => void;\n\n  /**\n   * Deletes empty keys in the {@link XMap} or {@link XWeakMap} starting at the\n   * final nested path and checking the level above after deletion.\n   *\n   * A key is considered empty if it's value is undefined or it's an empty Map,\n   * Set, Array, etc (anything with size or length property equal to 0).\n   */\n  readonly prune: (sk: K, ...rest: unknown[]) => void;\n\n  /**\n   * Returns true if the {@link XMap} or {@link XWeakMap} contains the given key.\n   */\n  readonly has: (key: K) => boolean;\n\n  protected constructor(\n    root: MapBase<K, V>,\n    getDefaultV: DefaultValueGetter<K, V>,\n  ) {\n    this.get = (key) => root.get(key);\n    this.set = (key, value) => root.set(key, value);\n    this.delete = (key) => MH.deleteKey(root, key);\n    this.has = (key) => root.has(key);\n\n    this.sGet = (key) => {\n      let result = root.get(key);\n      if (result === undefined) {\n        result = getDefaultV(key);\n        root.set(key, result);\n      }\n      return result;\n    };\n\n    this.prune = (sk, ...rest) => {\n      const value = root.get(sk);\n      if (value instanceof XMapBase && MH.lengthOf(rest)) {\n        value.prune(rest[0], ...rest.slice(1));\n      }\n\n      if (\n        value === undefined ||\n        (MH.isIterableObject(value) &&\n          !(\n            (\"size\" in value && value.size) ||\n            (\"length\" in value && value.length)\n          ))\n      ) {\n        MH.deleteKey(root, sk);\n      }\n    };\n  }\n}\n\n/**\n * {@link XMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map | Map},\n * except that it supports automatically creating missing entries with\n * {@link sGet} according to a default value getter function.\n *\n * @typeParam K The type of the keys the map holds.\n * @typeParam V The type of the values the map holds.\n */\nexport class XMap<K, V> extends XMapBase<K, V> implements Iterable<[K, V]> {\n  /**\n   * Returns the number of entries in the {@link XMap}.\n   */\n  readonly size!: number;\n\n  /**\n   * Deletes all entries in the {@link XMap}.\n   */\n  readonly clear: () => void;\n\n  /**\n   * Returns an iterator over the {@link XMap} entries.\n   */\n  readonly entries: () => MapIterator<[K, V]>;\n\n  /**\n   * Returns an iterator over the {@link XMap} keys.\n   */\n  readonly keys: () => MapIterator<K>;\n\n  /**\n   * Returns an iterator over the {@link XMap} values.\n   */\n  readonly values: () => MapIterator<V>;\n\n  readonly [Symbol.iterator]!: () => IterableIterator<[K, V]>;\n\n  /**\n   * Returns a function that when called returns a new {@link XMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XMap}s.\n   */\n  static readonly newXMapGetter = newXMapGetter;\n\n  /**\n   * @param getDefaultV This function is called each time {@link sGet} is\n   *                    called with a non-existent key and must return a value\n   *                    that is then set for that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newMap<K, V>();\n    super(root, getDefaultV);\n\n    MH.defineProperty(this, \"size\", { get: () => root.size });\n    this.clear = () => root.clear();\n    this.entries = () => root.entries();\n    this.keys = () => root.keys();\n    this.values = () => root.values();\n    this[MC.SYMBOL.iterator] = () => root[MC.SYMBOL.iterator]();\n  }\n}\n\n/**\n * {@link XWeakMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap | WeakMap},\n * except that it supports automatically creating missing entries with\n * with {@link sGet} according to a default value getter function.\n *\n * @typeParam K The type of the keys the map holds.\n * @typeParam V The type of the values the map holds.\n */\nexport class XWeakMap<K extends WeakKey, V> extends XMapBase<K, V> {\n  /**\n   * Returns a function that when called returns a new {@link XWeakMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XWeakMap}s.\n   */\n  static readonly newXWeakMapGetter = newXWeakMapGetter;\n\n  /**\n   * @param getDefaultV This function is called each time {@link sGet} is\n   *                    called with a non-existent key and must return a value\n   *                    that is then set for that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newWeakMap<K, V>();\n    super(root, getDefaultV);\n  }\n}\n","/**\n * @module Watchers/DOMWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  MutationCategory,\n  CommaSeparatedStr,\n  AtLeastOne,\n} from \"@lisn/globals/types\";\n\nimport { DOM_CATEGORIES_SPACE } from \"@lisn/utils/dom\";\nimport {\n  getIgnoreMove,\n  clearIgnoreMove,\n  ignoreMove,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link DOMWatcher} listens for changes do the DOM tree. It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * It manages registered callbacks globally and reuses MutationObservers for\n * more efficient performance.\n *\n * Each instance of DOMWatcher manages up to two MutationObservers: one\n * for `childList` changes and one for attribute changes, and it disconnects\n * them when there are no active callbacks for the relevant type.\n *\n * `characterData` and changes to base\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Node | Node}s\n * (non-{@link https://developer.mozilla.org/en-US/docs/Web/API/Element | Element})\n * are not supported.\n */\nexport class DOMWatcher {\n  /**\n   * Call the given handler whenever there's a matching mutation within this\n   * DOMWatcher's {@link DOMWatcherConfig.root | root}.\n   *\n   * If {@link OnMutationOptions.skipInitial | options.skipInitial} is `false`\n   * (default), _and_ {@link OnMutationOptions.selector | options.selector} is\n   * given, _and_ {@link OnMutationOptions.categories | options.categories}\n   * includes \"added\", the handler is also called (almost) immediately with all\n   * existing elements matching the selector under this DOMWatcher's\n   * {@link DOMWatcherConfig.root | root}.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times, even if\n   * the options differ. If the handler has already been added, it is removed\n   * and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are not valid.\n   */\n  readonly onMutation: (\n    handler: OnMutationHandler,\n    options?: OnMutationOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offMutation: (handler: OnMutationHandler) => void;\n\n  /**\n   * Ignore an upcoming moving/adding/removing of an element.\n   *\n   * The operation must complete within the next cycle, by the time\n   * MutationObserver calls us.\n   *\n   * Use this to prevent this instance of DOMWatcher from calling any callbacks\n   * that listen for relevant changes as a result of this operation, to prevent\n   * loops for example.\n   *\n   * **IMPORTANT:**\n   *\n   * Ignoring moving of an element from a parent _inside_ this DOMWatcher's\n   * root to another parent that's _outside_ the root, will work as expected,\n   * even though the \"adding to the new parent\" mutation will not be observed.\n   * This is because the element's current parent at the time of the mutation\n   * callback can be examined.\n   *\n   * However if you want to ignore moving of an element _from a parent outside\n   * this DOMWatcher's root_ you need to specify from: null since the \"removal\n   * from the old parent\" mutation would not be observed and there's no way to\n   * examine it's previous parent at the time the \"adding to the new parent\"\n   * mutation is observed.\n   *\n   * For this reason, setting `options.from` to be an element that's not under\n   * the root is internally treated the same as `options.from: null`.\n   */\n  readonly ignoreMove: (target: Element, options: MoveOptions) => void;\n\n  /**\n   * Creates a new instance of DOMWatcher with the given\n   * {@link DOMWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: DOMWatcherConfig) {\n    return new DOMWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of DOMWatcher with the given\n   * {@link DOMWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: DOMWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    const root = myConfig._root === MH.getBody() ? null : myConfig._root;\n    let instance = instances.get(root)?.get(configStrKey);\n    if (!instance) {\n      instance = new DOMWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: DOMWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"DOMWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"DOMWatcher\", logAtCreation: config })\n      : null;\n\n    const buffer = newXMap<Element, MutationOperationInternal>((t) => ({\n      _target: t,\n      _categoryBitmask: 0,\n      _attributes: MH.newSet(),\n      _addedTo: null,\n      _removedFrom: null,\n    }));\n\n    const allCallbacks = MH.newMap<\n      OnMutationHandler,\n      {\n        _callback: OnMutationCallback;\n        _options: OnMutationOptionsInternal;\n      }\n    >();\n\n    // ----------\n\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const mutationHandler = (records: MutationRecord[]) => {\n      debug: logger?.debug9(`Got ${records.length} new records`, records);\n\n      for (const record of records) {\n        const target = MH.targetOf(record);\n        const recType = record.type;\n\n        /* istanbul ignore next */\n        if (!MH.isElement(target)) {\n          continue;\n        }\n\n        if (recType === MC.S_CHILD_LIST) {\n          for (const child of record.addedNodes) {\n            if (MH.isElement(child)) {\n              const operation = buffer.sGet(child);\n              operation._addedTo = target;\n              operation._categoryBitmask |= ADDED_BIT;\n            }\n          }\n\n          for (const child of record.removedNodes) {\n            if (MH.isElement(child)) {\n              const operation = buffer.sGet(child);\n              operation._removedFrom = target;\n              operation._categoryBitmask |= REMOVED_BIT;\n            }\n          }\n\n          //\n        } else if (recType === MC.S_ATTRIBUTES && record.attributeName) {\n          const operation = buffer.sGet(target);\n          operation._attributes.add(record.attributeName);\n          operation._categoryBitmask |= ATTRIBUTE_BIT;\n        }\n      }\n\n      // Schedule flushing of the buffer asynchronously so that we can combine\n      // the records from the two MutationObservers.\n      if (!timer && MH.sizeOf(buffer)) {\n        timer = MH.setTimer(() => {\n          debug: logger?.debug9(`Processing ${buffer.size} operations`);\n          for (const operation of buffer.values()) {\n            if (shouldSkipOperation(operation)) {\n              debug: logger?.debug10(\"Skipping operation\", operation);\n            } else {\n              processOperation(operation);\n            }\n          }\n\n          buffer.clear();\n          timer = null;\n        }, 0);\n      }\n    };\n\n    const observers: Record<MutationType, MyObserver> = {\n      [MC.S_CHILD_LIST]: {\n        _observer: MH.newMutationObserver(mutationHandler),\n        _isActive: false,\n      },\n      [MC.S_ATTRIBUTES]: {\n        _observer: MH.newMutationObserver(mutationHandler),\n        _isActive: false,\n      },\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnMutationHandler,\n      options: OnMutationOptionsInternal,\n    ): OnMutationCallback => {\n      MH.remove(allCallbacks.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => deleteHandler(handler));\n\n      allCallbacks.set(handler, { _callback: callback, _options: options });\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnMutation = async (\n      handler: OnMutationHandler,\n      userOptions: OnMutationOptions | undefined,\n    ) => {\n      const options = getOptions(userOptions ?? {});\n      const callback = createCallback(handler, options);\n\n      let root = config._root || MH.getBody();\n      if (!root) {\n        root = await waitForElement(MH.getBody);\n      } else {\n        // So that the call is always async\n        await null;\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      if (options._categoryBitmask & (ADDED_BIT | REMOVED_BIT)) {\n        activateObserver(root, MC.S_CHILD_LIST);\n      }\n\n      if (options._categoryBitmask & ATTRIBUTE_BIT) {\n        activateObserver(root, MC.S_ATTRIBUTES);\n      }\n\n      if (\n        userOptions?.skipInitial ||\n        !options._selector ||\n        !(options._categoryBitmask & ADDED_BIT)\n      ) {\n        return;\n      }\n\n      // As some of the matching elements that currently exist in the root may\n      // have just been added and therefore in the MutationObserver's queue, to\n      // avoid calling the handler with those entries twice, we empty its queue\n      // now and process it (which would also invoke the newly added callback).\n      // Then we skip any elements returned in querySelectorAll that were in\n      // the queue.\n\n      const childQueue = observers[MC.S_CHILD_LIST]._observer.takeRecords();\n      mutationHandler(childQueue);\n\n      for (const element of [\n        ...MH.querySelectorAll(root, options._selector),\n        ...(root.matches(options._selector) ? [root] : []),\n      ]) {\n        const initOperation: MutationOperationInternal = {\n          _target: element,\n          _categoryBitmask: ADDED_BIT,\n          _attributes: MH.newSet(),\n          _addedTo: MH.parentOf(element),\n          _removedFrom: null,\n        };\n\n        const bufferedOperation = buffer.get(element);\n        const diffOperation = getDiffOperation(\n          initOperation,\n          bufferedOperation,\n        );\n\n        if (diffOperation) {\n          if (shouldSkipOperation(diffOperation)) {\n            debug: logger?.debug10(\"Skipping operation\", diffOperation);\n          } else {\n            debug: logger?.debug5(\"Calling initially with\", diffOperation);\n            await invokeCallback(callback, diffOperation);\n          }\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (handler: OnMutationHandler) => {\n      MH.deleteKey(allCallbacks, handler);\n\n      let activeCategories = 0;\n      for (const entry of allCallbacks.values()) {\n        activeCategories |= entry._options._categoryBitmask;\n      }\n\n      if (!(activeCategories & (ADDED_BIT | REMOVED_BIT))) {\n        deactivateObserver(MC.S_CHILD_LIST);\n      }\n\n      if (!(activeCategories & ATTRIBUTE_BIT)) {\n        deactivateObserver(MC.S_ATTRIBUTES);\n      }\n    };\n\n    // ----------\n\n    const processOperation = (operation: MutationOperationInternal) => {\n      debug: logger?.debug10(\"Processing operation\", operation);\n\n      for (const entry of allCallbacks.values()) {\n        const categoryBitmask = entry._options._categoryBitmask;\n        const target = entry._options._target;\n        const selector = entry._options._selector;\n\n        if (!(operation._categoryBitmask & categoryBitmask)) {\n          debug: logger?.debug10(`Category does not match: ${categoryBitmask}`);\n          continue;\n        }\n\n        const currentTargets = [];\n        if (target) {\n          if (!operation._target.contains(target)) {\n            debug: logger?.debug10(\"Target does not match\", target);\n            continue;\n          }\n\n          currentTargets.push(target);\n        }\n\n        if (selector) {\n          const matches = [...MH.querySelectorAll(operation._target, selector)];\n\n          if (operation._target.matches(selector)) {\n            matches.push(operation._target);\n          }\n\n          if (!MH.lengthOf(matches)) {\n            debug: logger?.debug10(`Selector does not match: ${selector}`);\n            continue;\n          }\n\n          currentTargets.push(...matches);\n        }\n\n        invokeCallback(entry._callback, operation, currentTargets);\n      }\n    };\n\n    // ----------\n\n    const activateObserver = (root: Element, mutationType: MutationType) => {\n      if (!observers[mutationType]._isActive) {\n        debug: logger?.debug3(\n          `Activating mutation observer for '${mutationType}'`,\n        );\n        observers[mutationType]._observer.observe(root, {\n          [mutationType]: true,\n          subtree: config._subtree,\n        });\n        observers[mutationType]._isActive = true;\n      }\n    };\n\n    // ----------\n\n    const deactivateObserver = (mutationType: MutationType) => {\n      if (observers[mutationType]._isActive) {\n        debug: logger?.debug3(\n          `Disconnecting mutation observer for '${mutationType}'`,\n        );\n        observers[mutationType]._observer.disconnect();\n        observers[mutationType]._isActive = false;\n      }\n    };\n\n    // ----------\n\n    const shouldSkipOperation = (\n      operation: MutationOperationInternal,\n    ): boolean => {\n      const target = operation._target;\n      const requestToSkip = getIgnoreMove(target);\n      if (!requestToSkip) {\n        return false;\n      }\n\n      const removedFrom = operation._removedFrom;\n      const addedTo = MH.parentOf(target);\n      const requestFrom = requestToSkip.from;\n      const requestTo = requestToSkip.to;\n\n      const root = config._root || MH.getBody();\n      // If \"from\" is currently outside our root, we may not have seen a\n      // removal operation.\n      if (\n        (removedFrom === requestFrom || !root.contains(requestFrom)) &&\n        addedTo === requestTo\n      ) {\n        clearIgnoreMove(target);\n        return true;\n      }\n\n      return false;\n    };\n\n    // ----------\n\n    this.ignoreMove = ignoreMove;\n\n    // ----------\n\n    this.onMutation = setupOnMutation;\n\n    // ----------\n\n    this.offMutation = (handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type DOMWatcherConfig = {\n  /**\n   * The root element to observe for changes.\n   *\n   * It cannot be overridden on a per-callback basis.\n   *\n   * @defaultValue document.body\n   */\n  root?: Element | null;\n\n  /**\n   * Whether to observe root's subtree for changes or just direct descendants.\n   *\n   * It cannot be overridden on a per-callback basis.\n   *\n   * @defaultValue true\n   */\n  subtree?: boolean;\n};\n\n/**\n * @interface\n */\nexport type OnMutationOptions = {\n  /**\n   * If this is given, then the handler would only be called for operations\n   * where the target is _either_ the given element or an ancestor of it, i.e.\n   * it {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/contains | Node:contains} it.\n   *\n   * @defaultValue undefined\n   */\n  target?: Element;\n\n  /**\n   * If this is given, then the handler would only be called for operations\n   * where the target matches the given selector _or contains an element\n   * matching the given selector_.\n   *\n   * @defaultValue undefined\n   */\n  selector?: string;\n\n  /**\n   * Specifies a list of {@link MutationCategory}s to target for.\n   *\n   * If not given, then the handler is called for any of the supported\n   * mutations.\n   *\n   * It can be a comma-separated list of category names or an array of such\n   * names.\n   *\n   * @defaultValue undefined\n   */\n  categories?: CommaSeparatedStr<MutationCategory> | MutationCategory[];\n\n  /**\n   * Do not call the handler until there's a future matching mutation.\n   *\n   * By default, if `selector` is given, and `categories` includes `added`, we\n   * call the handler (almost) immediately with all elements matching selector\n   * relative to this DOMWatcher's root.\n   *\n   * The initial operation will contain just the element and\n   * `addedTo: <current parent>`.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\nexport type MoveOptions = AtLeastOne<{\n  /**\n   * If to is missing or null, it's a removal operation.\n   */\n  to: Element | null;\n\n  /**\n   * If from is missing or null, it's an insertion operation.\n   */\n  from: Element | null;\n}>;\n\nexport type MutationOperation = {\n  /**\n   * The target that was changed.\n   */\n  target: Element;\n\n  /**\n   * The target that the callback was interested in.\n   *\n   * If `selector` is given as part of {@link OnMutationOptions}, then\n   * `currentTarget` will point to the target that matched the selector\n   * starting at the operation's `target` as the root. If the operation's\n   * `target` contains more than one element matching selector, the callback\n   * will be called once for _each_ matching child.\n   *\n   * If `target` is given as part of {@link OnMutationOptions}, then\n   * `currentTarget` will be that element.\n   */\n  currentTarget: Element;\n\n  /**\n   * The list of attributes that were changed in this round.\n   */\n  attributes: Set<string>;\n\n  /**\n   * The element that the target was added to, i.e. it's new parent. It is null\n   * if the target was not moved to a new element _during this round_. It does\n   * not mean that this is its current parent.\n   */\n  addedTo: Element | null;\n\n  /**\n   * The element that the target was removed from, i.e. it's old parent. It is\n   * null if the target was not removed from a previous element _during this\n   * round_. It does not mean it did not previously have a parent, but that its\n   * removal was not observed.\n   */\n  removedFrom: Element | null;\n};\n\n/**\n * The handler is invoked with one argument:\n *\n * - a {@link MutationOperation} for a set of mutations related to a particular\n *   element\n *\n * The handler could be invoked multiple times in each \"round\" (cycle of event\n * loop) if there are mutation operations for more than one element that match\n * the supplied {@link OnMutationOptions}.\n */\nexport type OnMutationHandlerArgs = [MutationOperation];\nexport type OnMutationCallback = Callback<OnMutationHandlerArgs>;\nexport type OnMutationHandler =\n  | CallbackHandler<OnMutationHandlerArgs>\n  | OnMutationCallback;\n\n// ----------------------------------------\n\ntype DOMWatcherConfigInternal = {\n  _root: Element | null;\n  _subtree: boolean;\n};\n\ntype OnMutationOptionsInternal = {\n  _target: Element | null;\n  _selector: string;\n  _categoryBitmask: number;\n};\n\ntype MyObserver = {\n  _observer: MutationObserver;\n  _isActive: boolean;\n};\n\ntype MutationType = \"childList\" | \"attributes\";\n\ntype MutationOperationInternal = {\n  _target: Element;\n  _attributes: Set<string>;\n  _addedTo: Element | null;\n  _removedFrom: Element | null;\n  _categoryBitmask: number;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, DOMWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (\n  config: DOMWatcherConfig | undefined,\n): DOMWatcherConfigInternal => {\n  return {\n    _root: config?.root || null,\n    _subtree: config?.subtree ?? true,\n  };\n};\n\nconst CATEGORIES_BITS = DOM_CATEGORIES_SPACE.bit;\nconst ADDED_BIT = CATEGORIES_BITS[MC.S_ADDED];\nconst REMOVED_BIT = CATEGORIES_BITS[MC.S_REMOVED];\nconst ATTRIBUTE_BIT = CATEGORIES_BITS[MC.S_ATTRIBUTE];\n\n// ----------------------------------------\n\nconst getOptions = (options: OnMutationOptions): OnMutationOptionsInternal => {\n  let categoryBitmask = 0;\n  const categories = validateStrList(\n    \"categories\",\n    options.categories,\n    DOM_CATEGORIES_SPACE.has,\n  );\n\n  if (categories) {\n    for (const cat of categories) {\n      categoryBitmask |= CATEGORIES_BITS[cat];\n    }\n  } else {\n    categoryBitmask = DOM_CATEGORIES_SPACE.bitmask; // default: all\n  }\n\n  const selector = options.selector || \"\";\n  if (!MH.isString(selector)) {\n    throw MH.usageError(\"'selector' must be a string\");\n  }\n\n  return {\n    _categoryBitmask: categoryBitmask,\n    _target: options.target || null,\n    _selector: options.selector || \"\",\n  };\n};\n\nconst getDiffOperation = (\n  operationA: MutationOperationInternal,\n  operationB: MutationOperationInternal | undefined,\n): MutationOperationInternal | null => {\n  if (!operationB || operationA._target !== operationB._target) {\n    return operationA;\n  }\n\n  const attributes = MH.newSet<string>();\n  for (const attr of operationA._attributes) {\n    if (!operationB._attributes.has(attr)) {\n      attributes.add(attr);\n    }\n  }\n\n  const categoryBitmask =\n    operationA._categoryBitmask ^ operationB._categoryBitmask;\n\n  const addedTo =\n    operationA._addedTo === operationB._addedTo ? null : operationA._addedTo;\n\n  const removedFrom =\n    operationA._removedFrom === operationB._removedFrom\n      ? null\n      : operationA._removedFrom;\n\n  if (!MH.sizeOf(attributes) && !categoryBitmask && !addedTo && !removedFrom) {\n    return null;\n  }\n\n  return {\n    _target: operationA._target,\n    _categoryBitmask: categoryBitmask,\n    _attributes: attributes,\n    _addedTo: addedTo,\n    _removedFrom: removedFrom,\n  };\n};\n\nconst invokeCallback = (\n  callback: OnMutationCallback,\n  operation: MutationOperationInternal,\n  currentTargets: Element[] = [],\n) => {\n  if (!MH.lengthOf(currentTargets)) {\n    currentTargets = [operation._target];\n  }\n\n  for (const currentTarget of currentTargets) {\n    callback\n      .invoke({\n        target: operation._target,\n        currentTarget,\n        attributes: operation._attributes,\n        addedTo: operation._addedTo,\n        removedFrom: operation._removedFrom,\n      })\n      .catch(logError);\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  XYDirection,\n  ZDirection,\n  NoDirection,\n  AmbiguousDirection,\n  CommaSeparatedStr,\n  Vector,\n} from \"@lisn/globals/types\";\n\nimport { maxAbs, areParallel } from \"@lisn/utils/math\";\nimport { isValidStrList, validateStrList } from \"@lisn/utils/validation\";\n\n/**\n * Returns the cardinal direction in the XY plane for the larger of the two\n * deltas (horizontal vs vertical).\n *\n * If both deltas are 0, returns \"none\".\n *\n * If both deltas are equal and non-0, returns \"ambiguous\".\n *\n * @category Directions\n */\nexport const getMaxDeltaDirection = (\n  deltaX: number,\n  deltaY: number,\n): XYDirection | NoDirection | AmbiguousDirection => {\n  if (!MH.abs(deltaX) && !MH.abs(deltaY)) {\n    return MC.S_NONE;\n  }\n\n  if (MH.abs(deltaX) === MH.abs(deltaY)) {\n    return MC.S_AMBIGUOUS;\n  }\n\n  if (MH.abs(deltaX) > MH.abs(deltaY)) {\n    return deltaX < 0 ? MC.S_LEFT : MC.S_RIGHT;\n  }\n  return deltaY < 0 ? MC.S_UP : MC.S_DOWN;\n};\n\n/**\n * Returns the approximate direction of the given 2D vector as one of the\n * cardinal (XY plane) ones: \"up\", \"down\", \"left\" or \"right\"; or \"ambiguous\".\n *\n * @param angleDiffThreshold See {@link areParallel} or\n *                           {@link Utils.areAntiParallel | areAntiParallel}.\n *                           This determines whether the inferred direction is\n *                           ambiguous. For it to _not_ be ambiguous it must\n *                           align with one of the four cardinal directions to\n *                           within `angleDiffThreshold`. It doesn't make\n *                           sense for this value to be < 0 or >= 45 degrees.\n *                           If it is, it's forced to be positive (absolute)\n *                           and <= 44.99.\n *\n * @category Directions\n */\nexport const getVectorDirection = (\n  vector: Vector,\n  angleDiffThreshold = 0,\n): XYDirection | AmbiguousDirection | NoDirection => {\n  angleDiffThreshold = MH.min(44.99, MH.abs(angleDiffThreshold));\n\n  if (!maxAbs(...vector)) {\n    return MC.S_NONE;\n  } else if (areParallel(vector, [1, 0], angleDiffThreshold)) {\n    return MC.S_RIGHT;\n  } else if (areParallel(vector, [0, 1], angleDiffThreshold)) {\n    return MC.S_DOWN;\n  } else if (areParallel(vector, [-1, 0], angleDiffThreshold)) {\n    return MC.S_LEFT;\n  } else if (areParallel(vector, [0, -1], angleDiffThreshold)) {\n    return MC.S_UP;\n  }\n\n  return MC.S_AMBIGUOUS;\n};\n\n/**\n * Returns the opposite direction to the given direction or null if the given\n * direction has no opposite.\n *\n * @example\n * ```javascript\n * getOppositeDirection(\"up\"); // -> \"down\"\n * getOppositeDirection(\"down\"); // -> \"up\"\n * getOppositeDirection(\"left\"); // -> \"right\"\n * getOppositeDirection(\"right\"); // -> \"left\"\n * getOppositeDirection(\"none\"); // -> null\n * getOppositeDirection(\"ambiguous\"); // -> null\n * ```\n *\n * @category Directions\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid.\n */\nexport const getOppositeDirection = (\n  direction: Direction,\n): Direction | null => {\n  if (!(direction in OPPOSITE_DIRECTIONS)) {\n    throw MH.usageError(\"Invalid 'direction'\");\n  }\n\n  return OPPOSITE_DIRECTIONS[direction];\n};\n\n/**\n * Returns the set of directions which are opposite to the given set of directions.\n *\n * There are two sets of opposite pairs (\"up\"/\"down\" and \"left\"/\"right\") and at\n * least one of the two opposing directions of a pair must be present for the\n * other one to be included. If both directions that constitute a pair of\n * opposites is given, then the other pair is returned instead (minus any that\n * are present in the input). See examples below for clarification.\n *\n * @example\n * ```javascript\n * getOppositeXYDirections(\"up\"); // -> [\"down\"]\n * getOppositeXYDirections(\"left\"); // -> [\"right\"]\n * getOppositeXYDirections(\"up,down\"); // -> [\"left\",\"right\"]\n * getOppositeXYDirections(\"up,left\"); // -> [\"down\",\"right\"]\n * getOppositeXYDirections(\"up,left,right\"); // -> [\"down\"]\n * getOppositeXYDirections(\"none\"); // -> throws\n * getOppositeXYDirections(\"ambiguous\"); // -> throws\n * getOppositeXYDirections(\"in\"); // -> throws\n * ```\n *\n * @category Directions\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid.\n */\nexport const getOppositeXYDirections = (\n  directions: CommaSeparatedStr<XYDirection> | XYDirection[],\n): XYDirection[] => {\n  const directionList = validateStrList(\n    \"directions\",\n    directions,\n    isValidXYDirection,\n  );\n\n  if (!directionList) {\n    throw MH.usageError(\"'directions' is required\");\n  }\n\n  const opposites: XYDirection[] = [];\n  for (const direction of directionList) {\n    const opposite = getOppositeDirection(direction);\n    if (\n      opposite &&\n      isValidXYDirection(opposite) &&\n      !MH.includes(directionList, opposite)\n    ) {\n      opposites.push(opposite);\n    }\n  }\n\n  if (!MH.lengthOf(opposites)) {\n    for (const direction of XY_DIRECTIONS) {\n      if (!MH.includes(directionList, direction)) {\n        opposites.push(direction);\n      }\n    }\n  }\n\n  return opposites;\n};\n\n/**\n * Returns true if the given direction is one of the known XY ones.\n *\n * @category Validation\n */\nexport const isValidXYDirection = (\n  direction: string,\n): direction is XYDirection => MH.includes(XY_DIRECTIONS, direction);\n\n/**\n * Returns true if the given direction is one of the known Z ones.\n *\n * @category Validation\n */\nexport const isValidZDirection = (direction: string): direction is ZDirection =>\n  MH.includes(Z_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string is a valid direction.\n *\n * @category Validation\n */\nexport const isValidDirection = (direction: string): direction is Direction =>\n  MH.includes(DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid directions.\n *\n * @category Validation\n */\nexport const isValidDirectionList = (\n  directions: string | string[],\n): directions is CommaSeparatedStr<Direction> | Direction[] =>\n  isValidStrList(directions, isValidDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const XY_DIRECTIONS = [\n  MC.S_UP,\n  MC.S_DOWN,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const Z_DIRECTIONS = [MC.S_IN, MC.S_OUT] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const SCROLL_DIRECTIONS = [\n  ...XY_DIRECTIONS,\n  MC.S_NONE,\n  MC.S_AMBIGUOUS,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const DIRECTIONS = [\n  ...XY_DIRECTIONS,\n  ...Z_DIRECTIONS,\n  MC.S_NONE,\n  MC.S_AMBIGUOUS,\n] as const;\n\n// --------------------\n\nconst OPPOSITE_DIRECTIONS = {\n  [MC.S_UP]: MC.S_DOWN,\n  [MC.S_DOWN]: MC.S_UP,\n  [MC.S_LEFT]: MC.S_RIGHT,\n  [MC.S_RIGHT]: MC.S_LEFT,\n  [MC.S_IN]: MC.S_OUT,\n  [MC.S_OUT]: MC.S_IN,\n  [MC.S_NONE]: null,\n  [MC.S_AMBIGUOUS]: null,\n} as const;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { addClasses, removeClasses } from \"@lisn/utils/css-alter\";\nimport { copyExistingKeys } from \"@lisn/utils/misc\";\n\nimport { XMap, newXMapGetter, newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * Calls the given event listener, which could be a function that's callable\n * directly, or an object that has a `handleEvent` function property.\n *\n * @category Events: Generic\n */\nexport const callEventListener = (\n  handler: EventListenerOrEventListenerObject,\n  event: Event,\n) => {\n  if (MH.isFunction(handler)) {\n    handler.call(event.currentTarget || self, event);\n  } else {\n    handler.handleEvent.call(event.currentTarget || self, event);\n  }\n};\n\n/**\n * Adds an event listener for the given event name to the given target.\n *\n * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener | EventTarget:addEventListener}\n * but it handles `options` object in case the browser does not support those.\n * Does not support the `signal` option unless browser natively supports that.\n *\n * @returns `true` if successfully added, or `false` if the same handler has\n * already been added by us, or if the handler is not a valid event listener.\n *\n * @category Events: Generic\n */\nexport const addEventListenerTo = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n): boolean => {\n  options ??= false;\n  eventType = transformEventType(eventType);\n  if (getEventHandlerData(target, eventType, handler, options)) {\n    // already added\n    return false;\n  }\n\n  let thirdArg = options;\n  let wrappedHandler = handler;\n\n  // If the user passed an options object but the browser only supports a\n  // boolen for 'useCapture', then handle this.\n  const supports = getBrowserSupport();\n  if (MH.isNonPrimitive(options)) {\n    if (!supports._optionsArg) {\n      thirdArg = options.capture ?? false;\n    }\n\n    if (options.once && !supports._options.once) {\n      // Remove the handler once it's called once\n      wrappedHandler = (event) => {\n        removeEventListenerFrom(target, eventType, handler, options);\n        callEventListener(handler, event);\n      };\n    }\n  }\n\n  setEventHandlerData(target, eventType, handler, options, {\n    _wrappedHandler: wrappedHandler,\n    _thirdArg: thirdArg,\n  });\n\n  target.addEventListener(eventType, wrappedHandler, thirdArg);\n  return true;\n};\n\n/**\n * Removes an event listener that has been added using\n * {@link addEventListenerTo}.\n *\n * **IMPORTANT:** If you have added a listener using the built-in\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener | EventTarget:addEventListener},\n * then you should use\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener | EventTarget:removeEventListener},\n * to remove it, not this function.\n *\n * @returns `true` if successfully removed, or `false` if the handler has not\n * been added by us.\n *\n * @category Events: Generic\n */\nexport const removeEventListenerFrom = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => {\n  options ??= false;\n  eventType = transformEventType(eventType);\n  const data = getEventHandlerData(target, eventType, handler, options);\n\n  if (!data) {\n    return false;\n  }\n\n  target.removeEventListener(eventType, data._wrappedHandler, data._thirdArg);\n  deleteEventHandlerData(target, eventType, handler, options);\n  return true;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const preventSelect = (target: EventTarget) => {\n  addEventListenerTo(target, MC.S_SELECTSTART, MH.preventDefault);\n  if (MH.isElement(target)) {\n    addClasses(target, MC.PREFIX_NO_SELECT);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const undoPreventSelect = (target: EventTarget) => {\n  removeEventListenerFrom(target, MC.S_SELECTSTART, MH.preventDefault);\n  if (MH.isElement(target)) {\n    removeClasses(target, MC.PREFIX_NO_SELECT);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getBrowserSupport = (): BrowserEventSupport => {\n  if (browserEventSupport) {\n    // already detected\n    return browserEventSupport;\n  }\n\n  const supports = {\n    _pointer: false,\n    _optionsArg: false,\n    _options: {\n      capture: false,\n      passive: false,\n      once: false,\n      signal: false,\n    },\n  };\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#safely_detecting_option_support\n  const optTest = {};\n  let opt: keyof typeof supports._options;\n  for (opt in supports._options) {\n    const thisOpt = opt;\n    MH.defineProperty(optTest, thisOpt, {\n      get: () => {\n        supports._options[thisOpt] = true;\n        if (thisOpt === \"signal\") {\n          return new AbortController().signal;\n        }\n        return false;\n      },\n    });\n  }\n\n  const dummyHandler = () => {}; // TypeScript does not accept null\n  const dummyElement = MH.createElement(\"div\");\n  try {\n    dummyElement.addEventListener(\"testOptionSupport\", dummyHandler, optTest);\n    dummyElement.removeEventListener(\n      \"testOptionSupport\",\n      dummyHandler,\n      optTest,\n    );\n    supports._optionsArg = true;\n  } catch (e__ignored) {\n    //\n  }\n\n  supports._pointer = \"onpointerup\" in dummyElement;\n\n  browserEventSupport = supports;\n  return supports;\n};\n\n// --------------------\n\ntype EventHandlerData = {\n  _wrappedHandler: EventListenerOrEventListenerObject;\n  _thirdArg: boolean | AddEventListenerOptions;\n};\n\nlet browserEventSupport: BrowserEventSupport;\n\nconst registeredEventHandlerData = newXWeakMap<\n  EventTarget,\n  XMap<\n    string, // event type\n    XMap<\n      EventListenerOrEventListenerObject, // user-supplied handler\n      Map<\n        string, // str repr of options\n        EventHandlerData\n      >\n    >\n  >\n>(newXMapGetter(newXMapGetter(() => MH.newMap())));\n\n// detect browser features, see below\ntype BrowserEventSupport = {\n  _pointer: boolean;\n  _optionsArg: boolean;\n  _options: {\n    capture: boolean;\n    passive: boolean;\n    once: boolean;\n    signal: boolean;\n  };\n};\n\nconst getEventOptionsStr = (\n  options: boolean | AddEventListenerOptions,\n): string => {\n  const finalOptions: AddEventListenerOptions = {\n    capture: false,\n    passive: false,\n    once: false,\n  };\n\n  if (options === false || options === true) {\n    finalOptions.capture = options;\n  } else if (MH.isObject(options)) {\n    copyExistingKeys(options, finalOptions);\n  }\n\n  return MH.stringify(finalOptions);\n};\n\nconst getEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  return registeredEventHandlerData\n    .get(target)\n    ?.get(eventType)\n    ?.get(handler)\n    ?.get(optionsStr);\n};\n\nconst deleteEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  MH.deleteKey(\n    registeredEventHandlerData.get(target)?.get(eventType)?.get(handler),\n    optionsStr,\n  );\n  registeredEventHandlerData.prune(target, eventType, handler);\n};\n\nconst setEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n  data: EventHandlerData,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  registeredEventHandlerData\n    .sGet(target)\n    .sGet(eventType)\n    .sGet(handler)\n    .set(optionsStr, data);\n};\n\nconst transformEventType = (eventType: string) => {\n  const supports = getBrowserSupport();\n  if (eventType.startsWith(MC.S_POINTER) && !supports._pointer) {\n    // TODO maybe log a warning message is it's not supported, e.g. there's no\n    // mousecancel\n    return MH.strReplace(eventType, MC.S_POINTER, MC.S_MOUSE);\n  }\n\n  return eventType;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureDevice, GestureIntent } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * `deltaX` and `deltaY` together specify the precise direction in the XY plane\n * of the move if relevant (i.e. other than zoom intent). The direction\n * specifies the effective X (\"left\"/\"right\"), Y (\"up\"/\"down\") or Z (\"in\"/\"out\")\n * direction, or \"none\"/\"ambiguous\".\n *\n * `deltaZ` specifies relative zoom in or out for zoom intents.\n * For zoom in, deltaZ is always > 1, and for zoom out it is < 1.\n * For non-zoom events it is 1.\n *\n * For zoom intents, `direction` would be either in, out or none.\n * For other intents, it would be up, down, left, right, none or ambiguous.\n *\n * For important notes on the delta values see\n * - {@link Utils.getKeyGestureFragment | getKeyGestureFragment}\n * - {@link Utils.getTouchGestureFragment | getTouchGestureFragment}\n * - {@link Utils.getWheelGestureFragment | getWheelGestureFragment}\n *\n * @category Gestures\n */\nexport type GestureFragment = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n  deltaX: number;\n  deltaY: number;\n  deltaZ: number;\n};\n\n/**\n * Returns true if the given string is a valid gesture device.\n *\n * @category Validation\n */\nexport const isValidInputDevice = (device: string): device is GestureDevice =>\n  MH.includes(DEVICES, device);\n\n/**\n * Returns true if the given string is a valid gesture intent.\n *\n * @category Validation\n */\nexport const isValidIntent = (intent: string): intent is GestureIntent =>\n  MH.includes(INTENTS, intent);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * devices.\n *\n * @category Validation\n */\nexport const isValidInputDeviceList = (devices: string | string[]) =>\n  isValidStrList(devices, isValidInputDevice, false);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * intents.\n *\n * @category Validation\n */\nexport const isValidIntentList = (intents: string | string[]) =>\n  isValidStrList(intents, isValidIntent, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const addDeltaZ = (current: number, increment: number) =>\n  MH.max(MIN_DELTA_Z, current * increment);\n\n/**\n * @ignore\n * @internal\n */\nexport const DEVICES: GestureDevice[] = [\n  MC.S_KEY,\n  MC.S_POINTER,\n  MC.S_TOUCH,\n  MC.S_WHEEL,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const INTENTS: GestureIntent[] = [\n  MC.S_SCROLL,\n  MC.S_ZOOM,\n  MC.S_DRAG,\n  MC.S_UNKNOWN,\n] as const;\n\n// Do not allow zooming out more than this value\nconst MIN_DELTA_Z = 0.1;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { Direction, GestureIntent } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport { GestureFragment, addDeltaZ } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"keydown\"\n * events will be considered.\n *\n * If there are no \"keydown\" events in the given list of events, returns\n * `false`.\n *\n * The deltas of all events are summed together before determining final delta\n * and direction.\n *\n * If the events are of conflicting types, i.e. some scroll, some zoom, then\n * the intent will be \"unknown\" and the direction will be \"ambiguous\".\n *\n * Otherwise, if the deltas sum up to 0, the direction will be \"none\".\n *\n * **IMPORTANT NOTES ON THE DELTA VALUES**\n *\n * For key gestures the deltas are unreliable. You should not assume they\n * correspond to the would-be scroll or zoom amount that the browser would do.\n * But they can be used to determine relative amounts for animating, etc.\n *\n * Key press events can be divided into 3 categories: that scroll by a \"line\"\n * (e.g. arrow keys), by a \"page\" (e.g. PageUp/PageDown) or by the full content\n * height/width (e.g. Home/End). The actual scroll amount that _would_ result\n * from the event is dependent on the browser, the window size or the element's\n * scroll width/height, so ours can only be a best guess.\n *\n * Since the actual pixel equivalent is browser specific, we use reasonable\n * default values of delta for each of these \"line\", \"page\" or \"content\" modes,\n * similar to what\n * {@link Utils.getWheelGestureFragment | getWheelGestureFragment} does:\n * - For \"line\", then a configurable fixed value is used\n *  ({@link settings.deltaLineHeight}).\n * - For \"page\", then a configurable fixed value is used\n *  ({@link settings.deltaPageHeight}).\n * - For \"content\", the element's scroll height is used if given, otherwise\n *   the viewport height (same as \"page\"). We do not try to get the current\n *   scroll height of the target element, (which would be the best guess value\n *   of `deltaY` in case of Home/End key presses), as that would either involve\n *   an asynchronous action or would result in forced layout. If the caller is\n *   already tracking the scroll height of the target, you can pass this as an\n *   argument. Otherwise, we'll default to using the viewport height, same as\n *   for PageUp/Down.\n *\n * If the key gesture fragment is a result of multiple events that were\n * accumulated, the deltas are summed as usual, e.g. if a \"page\" is equal to 20\n * \"lines\", then pressing PageDown and then 10 times Up, would result in a\n * delta equal to 10 \"lines\" down.\n *\n * For zoom intents, `deltaZ` gives a relative change of scale, whereby each\n * press of + or - steps up by 15% or down by ~13% (`1 / 1.15` to be exact)\n * since the previous one.\n *\n * @param [options.angleDiffThreshold] See {@link getVectorDirection}\n * @param [options.scrollHeight]       Use this as deltaY when Home/End is\n *                                     pressed.\n *\n * @returns `false` if there are no \"keydown\" events in the list, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getKeyGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n    scrollHeight?: number;\n  },\n): GestureFragment | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  const LINE = settings.deltaLineHeight;\n  const PAGE = settings.deltaPageHeight;\n  const CONTENT = options?.scrollHeight ?? PAGE;\n\n  const deltasUp = (amount: number): DeltasArr => [0, -amount, 1];\n  const deltasDown = (amount: number): DeltasArr => [0, amount, 1];\n  const deltasLeft = (amount: number): DeltasArr => [-amount, 0, 1];\n  const deltasRight = (amount: number): DeltasArr => [amount, 0, 1];\n  const deltasIn: DeltasArr = [0, 0, 1.15];\n  const deltasOut: DeltasArr = [0, 0, 1 / 1.15];\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent | null = null;\n  let deltaX = 0,\n    deltaY = 0,\n    deltaZ = 1;\n\n  for (const event of events) {\n    if (!MH.isKeyboardEvent(event) || event.type !== MC.S_KEYDOWN) {\n      continue;\n    }\n\n    const deltasForKey: Record<string, DeltasArr | null> = {\n      [SK_UP]: deltasUp(LINE),\n      [SK_ARROWUP]: deltasUp(LINE),\n      [SK_PAGEUP]: deltasUp(PAGE),\n      Home: deltasUp(CONTENT),\n      [SK_DOWN]: deltasDown(LINE),\n      [SK_ARROWDOWN]: deltasDown(LINE),\n      [SK_PAGEDOWN]: deltasDown(PAGE),\n      End: deltasDown(CONTENT),\n      [SK_LEFT]: deltasLeft(LINE),\n      [SK_ARROWLEFT]: deltasLeft(LINE),\n      [SK_RIGHT]: deltasRight(LINE),\n      [SK_ARROWRIGHT]: deltasRight(LINE),\n      \" \": (event.shiftKey ? deltasUp : deltasDown)(PAGE),\n      \"+\": deltasIn,\n      \"=\": event.ctrlKey ? deltasIn : null,\n      \"-\": deltasOut,\n    };\n\n    const theseDeltas = deltasForKey[event.key] || null;\n    if (!theseDeltas) {\n      // not a relevant key\n      continue;\n    }\n\n    const [thisDeltaX, thisDeltaY, thisDeltaZ] = theseDeltas;\n    const thisIntent = thisDeltaZ !== 1 ? MC.S_ZOOM : MC.S_SCROLL;\n\n    deltaX += thisDeltaX;\n    deltaY += thisDeltaY;\n    deltaZ = addDeltaZ(deltaZ, thisDeltaZ);\n\n    if (!intent) {\n      intent = thisIntent;\n    } else if (intent !== thisIntent) {\n      // mixture of zoom and scroll\n      intent = MC.S_UNKNOWN;\n    }\n  }\n\n  if (!intent) {\n    return false; // no relevant events\n  } else if (intent === MC.S_UNKNOWN) {\n    direction = MC.S_AMBIGUOUS;\n  } else if (intent === MC.S_ZOOM) {\n    direction = deltaZ > 1 ? MC.S_IN : deltaZ < 1 ? MC.S_OUT : MC.S_NONE;\n  } else {\n    direction = getVectorDirection(\n      [deltaX, deltaY],\n      options?.angleDiffThreshold,\n    );\n  }\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_KEY,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n      };\n};\n\n// --------------------\n\ntype DeltasArr = [number, number, number];\n\nconst SK_UP = \"Up\";\nconst SK_DOWN = \"Down\";\nconst SK_LEFT = \"Left\";\nconst SK_RIGHT = \"Right\";\nconst SK_PAGE = \"Page\";\nconst SK_ARROW = \"Arrow\";\nconst SK_PAGEUP = (SK_PAGE + SK_UP) as `${typeof SK_PAGE}${typeof SK_UP}`;\nconst SK_PAGEDOWN = (SK_PAGE + SK_DOWN) as `${typeof SK_PAGE}${typeof SK_DOWN}`;\nconst SK_ARROWUP = (SK_ARROW + SK_UP) as `${typeof SK_ARROW}${typeof SK_UP}`;\nconst SK_ARROWDOWN = (SK_ARROW +\n  SK_DOWN) as `${typeof SK_ARROW}${typeof SK_DOWN}`;\nconst SK_ARROWLEFT = (SK_ARROW +\n  SK_LEFT) as `${typeof SK_ARROW}${typeof SK_LEFT}`;\nconst SK_ARROWRIGHT = (SK_ARROW +\n  SK_RIGHT) as `${typeof SK_ARROW}${typeof SK_RIGHT}`;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\nimport { getBrowserSupport } from \"@lisn/utils/event\";\nimport { GestureFragment } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. If the browser\n * supports Pointer events, then only \"pointermove\" events will be considered.\n * Otherwise, only \"mousemove\" events will be considered.\n *\n * If there are less than 2 such events in the given list of events, returns\n * `false`.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"pointercancel\" in the list or buttons other than the primary are pressed,\n * returns `null`.\n *\n * Pointer gestures always require the primary button to be pressed and the\n * resulting intent is always \"drag\", and `deltaZ` is always 1.\n *\n * @param [options.angleDiffThreshold] See {@link getVectorDirection}\n *\n * @returns `false` if there are less than 2 \"pointermove\"/\"mousemove\" events\n * in the list, `null` if the gesture is terminated, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getPointerGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let isCancelled = false;\n  const supports = getBrowserSupport();\n\n  // If the browser supports pointer events, then only take those; otherwise\n  // take the mouse events\n  const pointerEventClass = supports._pointer ? PointerEvent : MouseEvent;\n  const pointerUpType = supports._pointer ? MC.S_POINTERUP : MC.S_MOUSEUP;\n\n  const filteredEvents: MouseEvent[] = MH.filter(\n    events,\n    (event): event is MouseEvent => {\n      const eType = event.type;\n      isCancelled = isCancelled || eType === MC.S_POINTERCANCEL;\n      if (eType !== MC.S_CLICK && MH.isInstanceOf(event, pointerEventClass)) {\n        // Only events where the primary button is pressed (unless it's a\n        // pointerup event, in which case no buttons should be pressed) are\n        // considered, otherwise consider it terminated\n        isCancelled =\n          isCancelled ||\n          (eType === pointerUpType && event.buttons !== 0) ||\n          (eType !== pointerUpType && event.buttons !== 1);\n        // we don't handle touch pointer events\n        return !MH.isTouchPointerEvent(event);\n      }\n      return false;\n    },\n  );\n\n  const numEvents = MH.lengthOf(filteredEvents);\n  if (numEvents < 2) {\n    return false; // no enough events\n  }\n\n  if (isCancelled) {\n    return null; // terminated\n  }\n\n  const firstEvent = filteredEvents[0];\n  const lastEvent = filteredEvents[numEvents - 1];\n  if (MH.getPointerType(firstEvent) !== MH.getPointerType(lastEvent)) {\n    return null; // different devices, consider it terminated\n  }\n\n  const deltaX = lastEvent.clientX - firstEvent.clientX;\n  const deltaY = lastEvent.clientY - firstEvent.clientY;\n  const direction = getVectorDirection(\n    [deltaX, deltaY],\n    options?.angleDiffThreshold,\n  );\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_POINTER,\n        direction,\n        intent: MC.S_DRAG,\n        deltaX,\n        deltaY,\n        deltaZ: 1,\n      };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureIntent, Vector } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport {\n  maxAbs,\n  havingMaxAbs,\n  distanceBetween,\n  areAntiParallel,\n} from \"@lisn/utils/math\";\nimport { GestureFragment } from \"@lisn/utils/gesture\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Gestures\n */\nexport type TouchDiff = {\n  startX: number;\n  startY: number;\n\n  endX: number;\n  endY: number;\n\n  deltaX: number;\n  deltaY: number;\n\n  isSignificant: boolean;\n};\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"touchmove\" events\n * will be considered.\n *\n * If there are less than 2 such events in the given list of events, returns `false`.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that by default swipe actions follow the natural direction: swipe up\n * with scroll intent results in direction down and swipe down results in\n * direction up. Drag intent always follows the direction of the gesture.\n *\n * For zoom intents, which necessarily involves exactly two fingers `deltaZ`\n * is based on the relative change in distance between the fingers.\n *\n * @param [options.deltaThreshold]\n *                          A change of x or y coordinate less than this is\n *                          considered insignificant, for the purposes of\n *                          determining:\n *                          1) whether the inferred direction is in one of the\n *                             four cardinal ones, or otherwise ambiguous; and\n *                          2) whether more than two fingers have moved and\n *                             therefore whether the direction could be zoom or\n *                             not\n * @param [options.angleDiffThreshold] See {@link getVectorDirection}\n * @param [options.reverseScroll]\n *                          If set to `true`, will disable natural scroll\n *                          direction.\n * @param [options.dragHoldTime]\n *                          If the user presses and holds for at least the\n *                          given amount of milliseconds before moving the\n *                          finger(s), gestures other than pinch will be\n *                          treated as a drag instead of scroll as long as the\n *                          number of fingers touching the screen is\n *                          `options.dragNumFingers`. Default is 500ms.\n * @param [options.dragNumFingers]\n *                          The number of fingers that could be considered a\n *                          drag intent. Default is 1.\n *\n * @returns `false` if there are less than 2 \"touchmove\" events in the list,\n * `null` if the gesture is terminated, otherwise a {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getTouchGestureFragment = (\n  events: Event[],\n  options?: {\n    deltaThreshold?: number;\n    angleDiffThreshold?: number;\n    reverseScroll?: boolean;\n    dragHoldTime?: number;\n    dragNumFingers?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let moves = getTouchDiff(events, options?.deltaThreshold);\n\n  if (!moves) {\n    return null; // terminated\n  }\n\n  let numMoves = MH.lengthOf(moves);\n\n  const holdTime = getHoldTime(events);\n  const canBeDrag =\n    holdTime >= (options?.dragHoldTime ?? 500) &&\n    numMoves === (options?.dragNumFingers ?? 1);\n  const angleDiffThreshold = options?.angleDiffThreshold;\n\n  let deltaX = havingMaxAbs(...moves.map((m) => m.deltaX));\n  let deltaY = havingMaxAbs(...moves.map((m) => m.deltaY));\n  let deltaZ = 1;\n\n  if (numMoves > 2) {\n    // Take only the significant ones\n    moves = MH.filter(moves, (d) => d.isSignificant);\n    numMoves = MH.lengthOf(moves);\n  }\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent = MC.S_UNKNOWN;\n  if (numMoves === 2) {\n    // Check if it's a zoom\n    const vectorA: Vector = [moves[0].deltaX, moves[0].deltaY];\n    const vectorB: Vector = [moves[1].deltaX, moves[1].deltaY];\n\n    // If either finger is approx stationary, or if they move in opposite directions,\n    // treat it as zoom.\n    if (\n      !havingMaxAbs(...vectorA) || // finger A still\n      !havingMaxAbs(...vectorB) || // finger B still\n      areAntiParallel(vectorA, vectorB, angleDiffThreshold)\n    ) {\n      // It's a pinch motion => zoom\n      const startDistance = distanceBetween(\n        [moves[0].startX, moves[0].startY],\n        [moves[1].startX, moves[1].startY],\n      );\n\n      const endDistance = distanceBetween(\n        [moves[0].endX, moves[0].endY],\n        [moves[1].endX, moves[1].endY],\n      );\n\n      direction = startDistance < endDistance ? MC.S_IN : MC.S_OUT;\n      deltaZ = endDistance / startDistance;\n      deltaX = deltaY = 0;\n      intent = MC.S_ZOOM;\n    }\n  }\n\n  const deltaSign = canBeDrag || options?.reverseScroll ? 1 : -1;\n  // If scrolling, swap the deltas for natural scroll direction.\n  // Add +0 to force -0 to be +0 since jest doesn't think they're equal\n  deltaX = deltaSign * deltaX + 0;\n  deltaY = deltaSign * deltaY + 0;\n\n  if (direction === MC.S_NONE) {\n    // Wasn't a zoom. Check if all moves are aligned.\n    let isFirst = true;\n\n    for (const m of moves) {\n      // There's at least one significant move, assume scroll or drag intent.\n      intent = canBeDrag ? MC.S_DRAG : MC.S_SCROLL;\n\n      const thisDirection = getVectorDirection(\n        [deltaSign * m.deltaX, deltaSign * m.deltaY],\n        angleDiffThreshold,\n      );\n\n      if (thisDirection === MC.S_NONE) {\n        continue;\n      }\n\n      if (isFirst) {\n        direction = thisDirection;\n      } else if (direction !== thisDirection) {\n        direction = MC.S_AMBIGUOUS;\n        break;\n      }\n\n      isFirst = false;\n    }\n  }\n\n  if (direction === MC.S_NONE) {\n    const lastTouchEvent = MH.lastOf(events.filter(MH.isTouchEvent));\n    // If all fingers have lifted off, consider it terminated, otherwise wait\n    // for more events.\n    return MH.lengthOf(lastTouchEvent?.touches) ? false : null;\n  }\n\n  return {\n    device: MC.S_TOUCH,\n    direction,\n    intent,\n    deltaX,\n    deltaY,\n    deltaZ,\n  };\n};\n\n/**\n * Returns a description of the changes in each finger between the first and\n * the last relevant TouchEvent in the list.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that, `deltaX`/`deltaY` are the end X/Y coordinate minus the start X/Y\n * coordinate. For natural scroll direction you should swap their signs.\n *\n * @param deltaThreshold If the change of x and y coordinate are both less\n *                       than this, it is marked as not significant.\n *\n * @category Gestures\n */\nexport const getTouchDiff = (\n  events: Event[],\n  deltaThreshold = 0,\n): TouchDiff[] | null => {\n  // Group each touch point of each event by identifier, so that we can get the\n  // start and end coordinate of each finger\n  const groupedTouches = newXMap<number, Touch[]>((): Touch[] => []);\n\n  for (const event of events) {\n    if (!MH.isTouchEvent(event)) {\n      continue;\n    }\n\n    if (event.type === MC.S_TOUCHCANCEL) {\n      return null; // gesture terminated\n    }\n\n    for (const touch of event.touches) {\n      groupedTouches.sGet(touch.identifier).push(touch);\n    }\n  }\n\n  const moves: TouchDiff[] = [];\n\n  for (const touchList of groupedTouches.values()) {\n    const nTouches = MH.lengthOf(touchList);\n    if (nTouches < 2) {\n      // Only one event had that finger in it, so there's no move for it\n      continue;\n    }\n\n    const firstTouch = touchList[0];\n    const lastTouch = touchList[nTouches - 1];\n    const startX = firstTouch.clientX;\n    const startY = firstTouch.clientY;\n\n    const endX = lastTouch.clientX;\n    const endY = lastTouch.clientY;\n\n    const deltaX = endX - startX;\n    const deltaY = endY - startY;\n\n    const isSignificant = maxAbs(deltaX, deltaY) >= deltaThreshold;\n\n    // Consider it a move in one of the 4 cardinal ones\n    moves.push({\n      startX,\n      startY,\n      endX,\n      endY,\n      deltaX,\n      deltaY,\n      isSignificant,\n    });\n  }\n\n  return moves;\n};\n\n// --------------------\n\nconst getHoldTime = (events: Event[]) => {\n  const firstStart = events.findIndex((e) => e.type === MC.S_TOUCHSTART);\n  const firstMove = events.findIndex((e) => e.type === MC.S_TOUCHMOVE);\n  if (firstStart < 0 || firstMove < 1) {\n    return 0;\n  }\n\n  return events[firstMove].timeStamp - events[firstStart].timeStamp;\n};\n","/**\n * @module\n * @ignore\n * @internal\n *\n * FULL CREDIT FOR THIS GOES TO\n * https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n *\n * ADAPTED FROM THE ABOVE SOURCE\n *\n * ORIGINAL COPYRIGHT IN FILE PRESERVED:\n *\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * ORIGINAL LICENSE\n *\n * BSD License\n *\n * For FixedDataTable software\n *\n * Copyright (c) 2015, Facebook, Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *\n *  * Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n *  * Neither the name Facebook nor the names of its contributors may be used to\n *    endorse or promote products derived from this software without specific\n *    prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { settings } from \"@lisn/globals/settings\";\n\n/**\n * ORIGINAL DEVELOPER COMMENT PRESERVED\n *\n * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n * complicated, thus this doc is long and (hopefully) detailed enough to answer\n * your questions.\n *\n * If you need to react to the mouse wheel in a predictable way, this code is\n * like your bestest friend. * hugs *\n *\n * As of today, there are 4 DOM event types you can listen to:\n *\n *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n *\n * So what to do?  The is the best:\n *\n *   normalizeWheel.getEventType();\n *\n * In your event callback, use this code to get sane interpretation of the\n * deltas.  This code will return an object with properties:\n *\n *   spinX   -- normalized spin speed (use for zoom) - x plane\n *   spinY   -- \" - y plane\n *   pixelX  -- normalized distance (to pixels) - x plane\n *   pixelY  -- \" - y plane\n *\n * Wheel values are provided by the browser assuming you are using the wheel to\n * scroll a web page by a number of lines or pixels (or pages).  Values can vary\n * significantly on different platforms and browsers, forgetting that you can\n * scroll at different speeds.  Some devices (like trackpads) emit more events\n * at smaller increments with fine granularity, and some emit massive jumps with\n * linear speed or acceleration.\n *\n * This code does its best to normalize the deltas for you:\n *\n *   - spin is trying to normalize how far the wheel was spun (or trackpad\n *     dragged).  This is super useful for zoom support where you want to\n *     throw away the chunky scroll steps on the PC and make those equal to\n *     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n *     resolve a single slow step on a wheel to 1.\n *\n *   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n *     get the crazy differences between browsers, but at least it'll be in\n *     pixels!\n *\n *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n *     should translate to positive value zooming IN, negative zooming OUT.\n *     This matches the newer 'wheel' event.\n *\n * Why are there spinX, spinY (or pixels)?\n *\n *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n *     with a mouse.  It results in side-scrolling in the browser by default.\n *\n *   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n *\n *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n *     probably is by browsers in conjunction with fancy 3D controllers .. but\n *     you know.\n *\n * Implementation info:\n *\n * Examples of 'wheel' event if you scroll slowly (down) by one step with an\n * average mouse:\n *\n *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n *\n * On the trackpad:\n *\n *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n *\n * On other/older browsers.. it's more complicated as there can be multiple and\n * also missing delta values.\n *\n * The 'wheel' event is more standard:\n *\n * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n *\n * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n * backward compatibility with older events.  Those other values help us\n * better normalize spin speed.  Example of what the browsers provide:\n *\n *                          | event.wheelDelta | event.detail\n *        ------------------+------------------+--------------\n *          Safari v5/OS X  |       -120       |       0\n *          Safari v5/Win7  |       -120       |       0\n *         Chrome v17/OS X  |       -120       |       0\n *         Chrome v17/Win7  |       -120       |       0\n *                IE9/Win7  |       -120       |   undefined\n *         Firefox v4/OS X  |     undefined    |       1\n *         Firefox v4/Win7  |     undefined    |       3\n */\nexport const normalizeWheel = (event: LegacyWheelEvent): WheelData => {\n  let spinX = 0,\n    spinY = 0,\n    pixelX = event.deltaX,\n    pixelY = event.deltaY;\n\n  const LINE = settings.deltaLineHeight;\n\n  // Legacy\n  if (event.detail !== undefined) {\n    spinY = event.detail;\n  }\n  if (event.wheelDelta !== undefined) {\n    spinY = -event.wheelDelta / 120;\n  }\n  if (event.wheelDeltaY !== undefined) {\n    spinY = -event.wheelDeltaY / 120;\n  }\n  if (event.wheelDeltaX !== undefined) {\n    spinX = -event.wheelDeltaX / 120;\n  }\n\n  if ((pixelX || pixelY) && event.deltaMode) {\n    if (event.deltaMode === 1) {\n      // delta in LINE units\n      pixelX *= LINE;\n      pixelY *= LINE;\n    } else {\n      // delta in PAGE units\n      pixelX *= settings.deltaPageWidth;\n      pixelY *= settings.deltaPageHeight;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pixelX && !spinX) {\n    spinX = pixelX < 1 ? -1 : 1;\n  }\n  if (pixelY && !spinY) {\n    spinY = pixelY < 1 ? -1 : 1;\n  }\n\n  return { spinX, spinY, pixelX, pixelY };\n};\n\nexport type WheelData = {\n  spinX: number;\n  spinY: number;\n  pixelX: number;\n  pixelY: number;\n};\n\n// --------------------\n\ntype LegacyWheelEvent = WheelEvent & {\n  wheelDelta?: number;\n  wheelDeltaX?: number;\n  wheelDeltaY?: number;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureIntent } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport { havingMaxAbs } from \"@lisn/utils/math\";\nimport { normalizeWheel } from \"@lisn/utils/normalize-wheel\";\n\nimport { GestureFragment, addDeltaZ } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"wheel\" events\n * will be considered.\n *\n * If there are no \"wheel\" events in the given list of events, returns `false`.\n *\n * The deltas of all events are summed together before determining final delta\n * and direction.\n *\n * If the events are of conflicting types, i.e. some scroll, some zoom, then\n * the intent will be \"unknown\" and the direction will be \"ambiguous\".\n *\n * If the deltas sum up to 0, the direction will be \"none\".\n *\n * **IMPORTANT NOTES ON THE DELTA VALUES**\n *\n * For wheel gestures the deltas are _highly_ unreliable, especially when\n * zooming (Control + wheel or pinching trackpad). You should not assume they\n * correspond to the would-be scroll or zoom amount that the browser would do.\n * But they can be used to determine relative amounts for animating, etc.\n *\n * If the browser reports the delta values of a WheelEvent to be in mode \"line\",\n * then a configurable fixed value is used\n * ({@link Settings.settings.deltaLineHeight | settings.deltaLineHeight}).\n *\n * If the browser reports the delta values of a WheelEvent to be in mode \"page\",\n * then a configurable fixed value is used\n * ({@link Settings.settings.deltaPageWidth | settings.deltaPageWidth} and\n * ({@link Settings.settings.deltaPageHeight | settings.deltaPageHeight}).\n *\n * For zoom intents `deltaZ` is based on what the browser reports as the\n * `deltaY`, which in most browsers roughly corresponds to a percentage zoom\n * factor.\n *\n * @param [options.angleDiffThreshold] See {@link getVectorDirection}.\n *                                     Default is 5.\n *\n * @returns `false` if there are no \"wheel\" events in the list, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getWheelGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent | null = null;\n  let deltaX = 0,\n    deltaY = 0,\n    deltaZ = 1;\n\n  for (const event of events) {\n    if (!MH.isWheelEvent(event) || event.type !== MC.S_WHEEL) {\n      continue;\n    }\n\n    const data = normalizeWheel(event);\n    let thisIntent: GestureIntent = MC.S_SCROLL;\n    let thisDeltaX = data.pixelX;\n    let thisDeltaY = data.pixelY;\n    let thisDeltaZ = 1;\n    const maxDelta = havingMaxAbs(thisDeltaX, thisDeltaY);\n\n    if (event.ctrlKey && !thisDeltaX) {\n      // Browsers report negative deltaY for zoom in, so swap sign\n      let percentage = -maxDelta;\n      // If it's more than 50, assume it's a mouse wheel => delta is roughly\n      // multiple of 10%. Otherwise a trackpad => delta is roughly multiple of 1%\n      if (MH.abs(percentage) >= 50) {\n        percentage /= 10;\n      }\n\n      thisDeltaZ = 1 + percentage / 100;\n\n      thisDeltaX = thisDeltaY = 0;\n      thisIntent = MC.S_ZOOM;\n    } else if (event.shiftKey && !thisDeltaX) {\n      // Holding Shift while turning wheel or swiping trackpad in vertically\n      // results in sideways scroll.\n      thisDeltaX = thisDeltaY;\n      thisDeltaY = 0;\n    }\n\n    deltaX += thisDeltaX;\n    deltaY += thisDeltaY;\n    deltaZ = addDeltaZ(deltaZ, thisDeltaZ);\n\n    if (!thisIntent) {\n      // not a relevant key\n    } else if (!intent) {\n      intent = thisIntent;\n    } else if (intent !== thisIntent) {\n      // mixture of zoom and scroll\n      intent = MC.S_UNKNOWN;\n    }\n  }\n\n  if (!intent) {\n    return false; // no relevant events\n  } else if (intent === MC.S_UNKNOWN) {\n    direction = MC.S_AMBIGUOUS;\n  } else if (intent === MC.S_ZOOM) {\n    direction = deltaZ > 1 ? MC.S_IN : deltaZ < 1 ? MC.S_OUT : MC.S_NONE;\n  } else {\n    direction = getVectorDirection(\n      [deltaX, deltaY],\n      options?.angleDiffThreshold,\n    );\n  }\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_WHEEL,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n      };\n};\n","/**\n * @module Watchers/GestureWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureIntent,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  addClasses,\n  removeClasses,\n  setNumericStyleJsVars,\n} from \"@lisn/utils/css-alter\";\nimport { isValidDirection } from \"@lisn/utils/directions\";\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { getDebouncedHandler } from \"@lisn/utils/tasks\";\n\nimport { addDeltaZ } from \"@lisn/utils/gesture\";\n\nimport {\n  isValidInputDevice,\n  isValidIntent,\n  GestureFragment,\n  DEVICES,\n  INTENTS,\n} from \"@lisn/utils/gesture\";\nimport { getKeyGestureFragment } from \"@lisn/utils/gesture-key\";\nimport { getPointerGestureFragment } from \"@lisn/utils/gesture-pointer\";\nimport { getTouchGestureFragment } from \"@lisn/utils/gesture-touch\";\nimport { getWheelGestureFragment } from \"@lisn/utils/gesture-wheel\";\nimport { logError } from \"@lisn/utils/log\";\nimport {\n  maxAbs,\n  toNonNegNum,\n  toPosNum,\n  toNumWithBounds,\n} from \"@lisn/utils/math\";\nimport { randId, objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { LoggerInterface } from \"@lisn/debug/types\";\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link GestureWatcher} listens for user gestures resulting from wheel,\n * pointer, touch or key input events.\n *\n * It supports scroll, zoom or drag type gestures.\n *\n * It manages registered callbacks globally and reuses event listeners for more\n * efficient performance.\n */\nexport class GestureWatcher {\n  /**\n   * Call the given handler whenever the user performs a gesture on the target\n   * matching the given options.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same event target, even if the options differ. If the handler has already\n   * been added for this target, either using {@link onGesture} or\n   * {@link trackGesture}, then it will be removed and re-added with the\n   * current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onGesture: (\n    target: EventTarget,\n    handler: OnGestureHandler,\n    options?: OnGestureOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offGesture: (target: EventTarget, handler: OnGestureHandler) => void;\n\n  /**\n   * This is the same as {@link onGesture} except that if `handler` is not\n   * given, then it defaults to an internal handler that updates a set of CSS\n   * variables on the target's style:\n   *\n   *   - `--lisn-js--<Intent>-delta-x`\n   *   - `--lisn-js--<Intent>-delta-y`\n   *   - `--lisn-js--<Intent>-delta-z`\n   *\n   * where and `<Intent>` is one of {@link GestureIntent} and the delta X, Y\n   * and Z are the _total summed up_ `deltaX`, `deltaY` and `deltaZ` since the\n   * callback was added, summed over all devices used (key, touch, etc).\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackGesture} or using\n   * {@link onGesture}, then it will be removed and re-added with the current\n   * options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly trackGesture: (\n    element: Element,\n    handler?: OnGestureHandler | null,\n    options?: OnGestureOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackGesture}.\n   */\n  readonly noTrackGesture: (\n    element: Element,\n    handler?: OnGestureHandler | null,\n  ) => void;\n\n  /**\n   * Creates a new instance of GestureWatcher with the given\n   * {@link GestureWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: GestureWatcherConfig) {\n    return new GestureWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of GestureWatcher with the given\n   * {@link GestureWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: GestureWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new GestureWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: GestureWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"GestureWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"GestureWatcher\", logAtCreation: config })\n      : null;\n\n    const allCallbacks = newXWeakMap<\n      EventTarget,\n      Map<\n        OnGestureHandler,\n        {\n          _callback: OnGestureCallback;\n          _wrapper: OnGestureHandlerWrapper;\n          _options: OnGestureOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    // For each target and event type, add only 1 global listener that will then\n    // manage the event queues and callbacks.\n    const allListeners = newXWeakMap<\n      EventTarget,\n      Map<GestureDevice, DeviceListeners>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const createCallback = (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      options: OnGestureOptionsInternal,\n    ): OnGestureCallback => {\n      MH.remove(allCallbacks.get(target)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler for\", options);\n      const { _callback, _wrapper } = getCallbackAndWrapper(\n        handler,\n        options,\n        logger,\n      );\n\n      _callback.onRemove(() => deleteHandler(target, handler, options));\n\n      allCallbacks.sGet(target).set(handler, {\n        _callback,\n        _wrapper,\n        _options: options,\n      });\n\n      return _callback;\n    };\n\n    // ----------\n\n    // async for consistency with other watchers and future compatibility in\n    // case of change needed\n    const setupOnGesture = async (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      userOptions: OnGestureOptions | undefined,\n    ) => {\n      const options = getOptions(config, userOptions ?? {});\n      createCallback(target, handler, options);\n\n      for (const device of options._devices || DEVICES) {\n        let listeners = allListeners.get(target)?.get(device);\n        if (listeners) {\n          debug: logger?.debug4(\n            `Listeners already added for ${device}`,\n            target,\n            options,\n          );\n        } else {\n          debug: logger?.debug4(\n            `Adding listeners for ${device}`,\n            target,\n            options,\n          );\n\n          listeners = setupListeners(target, device, options);\n          allListeners.sGet(target).set(device, listeners);\n        }\n\n        listeners._nCallbacks++;\n        if (options._preventDefault) {\n          listeners._nPreventDefault++;\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      options: OnGestureOptionsInternal,\n    ) => {\n      MH.deleteKey(allCallbacks.get(target), handler);\n      allCallbacks.prune(target);\n\n      for (const device of options._devices || DEVICES) {\n        const listeners = allListeners.get(target)?.get(device);\n        if (listeners) {\n          listeners._nCallbacks--;\n          if (options._preventDefault) {\n            listeners._nPreventDefault--;\n          }\n\n          if (!listeners._nCallbacks) {\n            debug: logger?.debug4(\n              `No more callbacks for target and device ${device}; removing listeners`,\n              target,\n            );\n\n            MH.deleteKey(allListeners.get(target), device);\n            listeners._remove();\n          }\n        }\n      }\n    };\n\n    // ----------\n\n    const invokeCallbacks = (\n      target: EventTarget,\n      device: GestureDevice,\n      event: Event,\n    ): boolean /* true if terminated */ => {\n      const preventDefault =\n        (allListeners.get(target)?.get(device)?._nPreventDefault || 0) > 0;\n\n      let isTerminated = false;\n      for (const { _wrapper } of allCallbacks.get(target)?.values() || []) {\n        isTerminated =\n          _wrapper(target, device, event, preventDefault) || isTerminated;\n      }\n\n      return isTerminated;\n    };\n\n    // ----------\n\n    const setupListeners = (\n      target: EventTarget,\n      device: GestureDevice,\n      options: OnGestureOptionsInternal,\n    ): DeviceListeners => {\n      const intents = options._intents;\n      let hasAddedTabIndex = false;\n      let hasPreventedSelect = false;\n\n      if (\n        device === MC.S_KEY &&\n        MH.isElement(target) &&\n        !MH.getTabIndex(target)\n      ) {\n        hasAddedTabIndex = true;\n        // enable element to receive keydown events\n        MH.setTabIndex(target);\n      } else if (MH.isElement(target) && device === MC.S_TOUCH) {\n        if (options._preventDefault) {\n          addClasses(target, MC.PREFIX_NO_TOUCH_ACTION);\n        }\n\n        if (!intents || MH.includes(intents, MC.S_DRAG)) {\n          hasPreventedSelect = true;\n          preventSelect(target);\n        }\n      }\n\n      const addOrRemoveListeners = (\n        action: \"add\" | \"remove\",\n        listener: EventListener,\n        eventTypes: readonly (keyof GlobalEventHandlersEventMap)[],\n      ) => {\n        const method =\n          action === \"add\" ? addEventListenerTo : removeEventListenerFrom;\n        for (const eventType of eventTypes) {\n          debug: logger?.debug8(`${action} listener for ${eventType}`, target);\n          method(target, eventType, listener, {\n            passive: false,\n            capture: true,\n          });\n        }\n      };\n\n      const addInitialListener = () =>\n        addOrRemoveListeners(\"add\", initialListener, initiatingEvents[device]);\n\n      const removeInitialListener = () =>\n        addOrRemoveListeners(\n          \"remove\",\n          initialListener,\n          initiatingEvents[device],\n        );\n\n      const addOngoingListener = () =>\n        addOrRemoveListeners(\"add\", processEvent, ongoingEvents[device]);\n\n      const removeOngoingListener = () =>\n        addOrRemoveListeners(\"remove\", processEvent, ongoingEvents[device]);\n\n      const initialListener = (event: Event) => {\n        processEvent(event);\n        removeInitialListener();\n        addOngoingListener();\n      };\n\n      const processEvent = (event: Event) => {\n        const isTerminated = invokeCallbacks(target, device, event);\n        if (isTerminated) {\n          removeOngoingListener();\n          addInitialListener();\n        }\n      };\n\n      addInitialListener();\n\n      return {\n        _nCallbacks: 0,\n        _nPreventDefault: 0,\n        _remove: () => {\n          if (MH.isElement(target)) {\n            if (hasAddedTabIndex) {\n              MH.unsetTabIndex(target);\n            }\n\n            removeClasses(target, MC.PREFIX_NO_TOUCH_ACTION);\n\n            if (hasPreventedSelect) {\n              undoPreventSelect(target);\n            }\n          }\n\n          removeOngoingListener();\n          removeInitialListener();\n        },\n      };\n    };\n\n    // ----------\n\n    this.trackGesture = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setGestureCssProps;\n        // initial values\n        for (const intent of INTENTS) {\n          setGestureCssProps(element, {\n            intent,\n            totalDeltaX: 0,\n            totalDeltaY: 0,\n            totalDeltaZ: 1,\n          });\n        }\n      }\n\n      return setupOnGesture(element, handler, options);\n    };\n\n    // ----------\n\n    this.noTrackGesture = (element, handler?) => {\n      if (!handler) {\n        handler = setGestureCssProps;\n\n        // delete the properties\n        for (const intent of INTENTS) {\n          setGestureCssProps(element, { intent });\n        }\n      }\n\n      this.offGesture(element, handler);\n    };\n\n    // ----------\n\n    this.onGesture = setupOnGesture;\n\n    // ----------\n\n    this.offGesture = (target, handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(target)?.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type GestureWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnGestureOptions.preventDefault | preventDefault} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.debounceWindow | debounceWindow} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 150\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.deltaThreshold | deltaThreshold} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 5\n   */\n  deltaThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.angleDiffThreshold | angleDiffThreshold} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * It does not make much sense to set this to 0.\n   *\n   * The value is in _degrees_, not radians.\n   *\n   * @defaultValue 35\n   */\n  angleDiffThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.naturalTouchScroll | naturalTouchScroll} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue true\n   */\n  naturalTouchScroll?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.touchDragHoldTime | touchDragHoldTime} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 500\n   */\n  touchDragHoldTime?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.touchDragNumFingers | touchDragNumFingers} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 1\n   */\n  touchDragNumFingers?: number;\n};\n\n/**\n * @interface\n */\nexport type OnGestureOptions = {\n  /**\n   * One or more device types to listen for. If not specified, then all devices\n   * are enabled.\n   *\n   * It can be a comma-separated list of {@link GestureDevice}s or an array of\n   * such devices.\n   *\n   * @defaultValue undefined\n   */\n  devices?: CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If given, callback will only be called if the gesture's direction is one\n   * of the given ones.\n   *\n   * It can be a comma-separated list of {@link Direction}s or an array of such\n   * directions.\n   *\n   * @defaultValue undefined\n   */\n  directions?: CommaSeparatedStr<Direction> | Direction[];\n\n  /**\n   * If given, callback will only be called if the gesture's intent is one\n   * of the given ones.\n   *\n   * It can be a comma-separated list of {@link GestureIntent}s or an\n   * array of such intents.\n   *\n   * @defaultValue undefined\n   */\n  intents?: CommaSeparatedStr<GestureIntent> | GestureIntent[];\n\n  /**\n   * Set minimum total delta X. Further reductions in delta X below this value\n   * will be ignored.\n   *\n   * The value is in pixels and can be negative.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaX?: number;\n\n  /**\n   * Set maximum total delta X. Further increase in delta X above this value\n   * will be ignored.\n   *\n   * The value is in pixels.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaX?: number;\n\n  /**\n   * Set minimum total delta Y. Further reductions in delta Y below this value\n   * will be ignored.\n   *\n   * The value is in pixels and can be negative.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaY?: number;\n\n  /**\n   * Set maximum total delta Y. Further increase in delta Y above this value\n   * will be ignored.\n   *\n   * The value is in pixels.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaY?: number;\n\n  /**\n   * Set minimum total delta Z. Further reductions in delta Z below this value\n   * will be ignored.\n   *\n   * The value is in percentage zoom, relative to 1, and can be less than 1 but\n   * must be > 0.1 which is a hard minimum.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaZ?: number;\n\n  /**\n   * Set maximum total delta Z. Further increase in delta Z above this value\n   * will be ignored.\n   *\n   * The value is in percentage zoom, relative to 1, and must be positive.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaZ?: number;\n\n  /**\n   * If true, the events of the gesture, e.g. relevant key presses or touch\n   * moves, etc, will have their default action prevented.\n   *\n   * **IMPORTANT:** For pointer gestures, then pointer/mouse down and click\n   * will be prevented.\n   *\n   * @defaultValue {@link GestureWatcherConfig.preventDefault}\n   */\n  preventDefault?: boolean;\n\n  /**\n   * If given, callback will be called at most once every `debounceWindow`\n   * milliseconds.\n   *\n   * Note that if both `debounceWindow` and `deltaThreshold` are set, _both_\n   * must be exceeded before callback is called.\n   *\n   * @defaultValue {@link GestureWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n\n  /**\n   * Callback will only be called when the gesture's accumulated delta, since\n   * the last time callback was called, exceeds `deltaThreshold`.\n   *\n   * At least one of the three deltas (X, Y or Z) must exceed this number (in\n   * absolute value). Note that when comparing `deltaZ`, it is multiplied by\n   * 100 since it represents fractions of 1 (100%). So supplying\n   * `deltaThreshold` of 10 means is equivalent to the following condition:\n   *\n   * ```\n   * abs(deltaX) >= 10 || abs(deltaY) >= 10 ||  abs(1 - deltaZ) >= 0.1\n   * ```\n   *\n   * Accumulation of the delta ends if the gesture is terminated, for example,\n   * in case of touch gestures, by a \"touchcancel\" event of by the final finger\n   * lifting off..\n   *\n   * Note that if both `debounceWindow` and `deltaThreshold` are set, _both_\n   * must be exceeded before callback is called.\n   *\n   * @defaultValue {@link GestureWatcherConfig.deltaThreshold}\n   */\n  deltaThreshold?: number;\n\n  /**\n   * See {@link Utils.getVectorDirection | getVectorDirection}.\n   *\n   * @defaultValue {@link GestureWatcherConfig.angleDiffThreshold}\n   */\n  angleDiffThreshold?: number;\n\n  /**\n   * Whether touch scroll gestures follow the natural direction: swipe up\n   * with scroll intent results in direction down and swipe down results in\n   * direction up.\n   *\n   * @defaultValue {@link GestureWatcherConfig.naturalTouchScroll}\n   */\n  naturalTouchScroll?: boolean;\n\n  /**\n   * If the user presses and holds on a touchscreen for at least the given\n   * amount of milliseconds before moving the finger(s), touch gestures other\n   * than pinch will be treated as a drag intent instead of scroll as long as\n   * the number of fingers touching the screen is {@link touchDragNumFingers}.\n   *\n   * Set to 0 in order to treat _all_ non-pinch touch gestures as drag.\n   *\n   * Set to a negative number in order to treat _all_ non-pinch touch gestures\n   * as scroll.\n   *\n   * @defaultValue {@link GestureWatcherConfig.touchDragHoldTime}\n   */\n  touchDragHoldTime?: number;\n\n  /**\n   * The number of fingers that could be considered a drag intent for touch\n   * gestures.\n   *\n   * @defaultValue {@link GestureWatcherConfig.touchDragHoldTime}\n   */\n  touchDragNumFingers?: number;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the event target that was passed to the {@link GestureWatcher.onGesture}\n *   call (equivalent to\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget | Event:currentTarget}).\n * - the {@link GestureData} that describes the gesture's progression since the\n *   last time the callback was called and since the callback was added.\n */\nexport type OnGestureHandlerArgs = [EventTarget, GestureData, Event[]];\nexport type OnGestureCallback = Callback<OnGestureHandlerArgs>;\nexport type OnGestureHandler =\n  | CallbackHandler<OnGestureHandlerArgs>\n  | OnGestureCallback;\n\nexport type GestureData = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n\n  /**\n   * Delta in the horizontal direction since the start of the gesture.\n   */\n  deltaX: number;\n\n  /**\n   * Delta in the vertical direction since the start of the gesture.\n   */\n  deltaY: number;\n\n  /**\n   * Relative fractional zoom in or out for zoom intents since the start of\n   * the gesture.\n   *\n   * For zoom in, `deltaZ` is always > 1, and for zoom out it is < 1.\n   *\n   * For non-zoom gestures it is 1.\n   */\n  deltaZ: number;\n\n  /**\n   * The time in milliseconds it took for the gesture. This will be the\n   * difference in timestamps between the first and last event that composed\n   * the gesture. For key and wheel gestures this could be 0, since 1 event is\n   * sufficient for them.\n   */\n  time: number;\n  // TODO totalTime, velocity (bound by max), averageVelocity (bound by max)\n\n  /**\n   * Delta in the horizontal direction since the callback was added.\n   */\n  totalDeltaX: number;\n\n  /**\n   * Delta in the vertical direction since the callback was added.\n   */\n  totalDeltaY: number;\n\n  /**\n   * Percentage (relative) zoom in or out for zoom intents since the callback\n   * was added.\n   */\n  totalDeltaZ: number;\n};\n\n// ----------------------------------------\n\ntype GestureWatcherConfigInternal = {\n  _preventDefault: boolean;\n  _debounceWindow: number;\n  _deltaThreshold: number;\n  _angleDiffThreshold: number;\n  _naturalTouchScroll: boolean;\n  _touchDragHoldTime: number;\n  _touchDragNumFingers: number;\n};\n\ntype OnGestureOptionsInternal = {\n  _devices: GestureDevice[] | null;\n  _directions: Direction[] | null;\n  _intents: GestureIntent[] | null;\n  _minTotalDeltaX: number | null;\n  _maxTotalDeltaX: number | null;\n  _minTotalDeltaY: number | null;\n  _maxTotalDeltaY: number | null;\n  _minTotalDeltaZ: number | null;\n  _maxTotalDeltaZ: number | null;\n  _preventDefault: boolean;\n  _debounceWindow: number;\n  _deltaThreshold: number;\n  _angleDiffThreshold: number;\n  _naturalTouchScroll: boolean;\n  _touchDragHoldTime: number;\n  _touchDragNumFingers: number;\n};\n\ntype OnGestureHandlerWrapper = (\n  _target: EventTarget,\n  _device: GestureDevice,\n  _event: Event,\n  _preventDefault: boolean,\n) => boolean;\n\n// Specific to a combination of target + device\ntype DeviceListeners = {\n  _nCallbacks: number; // total number of callbacks\n  _nPreventDefault: number; // total number wanting to prevent default action\n  _remove: () => void;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, GestureWatcher>();\n\nconst getConfig = (\n  config: GestureWatcherConfig | undefined,\n): GestureWatcherConfigInternal => {\n  config ??= {};\n  return {\n    _preventDefault: config.preventDefault ?? true,\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 150),\n    _deltaThreshold: toNonNegNum(config.deltaThreshold, 5),\n    _angleDiffThreshold: toPosNum(config.angleDiffThreshold, 35),\n    _naturalTouchScroll: config.naturalTouchScroll ?? true,\n    _touchDragHoldTime: config.touchDragHoldTime ?? 500,\n    _touchDragNumFingers: config.touchDragNumFingers ?? 1,\n  };\n};\n\nconst initiatingEvents: {\n  [D in GestureDevice]: readonly (keyof GlobalEventHandlersEventMap)[];\n} = {\n  key: [MC.S_KEYDOWN],\n  // If the browser doesn't support pointer events, then\n  // addEventListenerTo will transform it into mousedown\n  //\n  // We need to listen for click, since that occurs after a pointerup (i.e.\n  // after a gesure is terminated and the ongoing listeners removed), but it\n  // needs to have its default action prevented.\n  pointer: [MC.S_POINTERDOWN, MC.S_CLICK],\n  touch: [MC.S_TOUCHSTART],\n  wheel: [MC.S_WHEEL],\n} as const;\n\nconst ongoingEvents: {\n  [D in GestureDevice]: readonly (keyof GlobalEventHandlersEventMap)[];\n} = {\n  key: [MC.S_KEYDOWN],\n  pointer: [\n    // If the browser doesn't support point events, then\n    // addEventListenerTo will transform them into mouse*\n    MC.S_POINTERDOWN,\n    MC.S_POINTERUP, // would terminate\n    MC.S_POINTERMOVE,\n    MC.S_POINTERCANCEL, // would terminate\n    MC.S_CLICK, // would terminate; can be default-prevented\n  ],\n  touch: [MC.S_TOUCHSTART, MC.S_TOUCHEND, MC.S_TOUCHMOVE, MC.S_TOUCHCANCEL],\n  wheel: [MC.S_WHEEL],\n} as const;\n\nconst fragmentGetters: {\n  [D in GestureDevice]: (\n    events: Event[],\n    options: {\n      deltaThreshold?: number;\n      angleDiffThreshold?: number;\n      reverseScroll?: boolean;\n      dragHoldTime?: number;\n      dragNumFingers?: number;\n    },\n  ) => GestureFragment | null | false;\n} = {\n  [MC.S_KEY]: getKeyGestureFragment,\n  [MC.S_POINTER]: getPointerGestureFragment,\n  [MC.S_TOUCH]: getTouchGestureFragment,\n  [MC.S_WHEEL]: getWheelGestureFragment,\n};\n\nconst getOptions = (\n  config: GestureWatcherConfigInternal,\n  options: OnGestureOptions,\n): OnGestureOptionsInternal => {\n  const debounceWindow = toNonNegNum(\n    options[MC.S_DEBOUNCE_WINDOW],\n    config._debounceWindow, // watcher is never debounced, so apply default here\n  );\n  const deltaThreshold = toNonNegNum(\n    options.deltaThreshold,\n    config._deltaThreshold,\n  );\n\n  return {\n    _devices:\n      validateStrList(\"devices\", options.devices, isValidInputDevice) || null,\n    _directions:\n      validateStrList(\"directions\", options.directions, isValidDirection) ||\n      null,\n    _intents:\n      validateStrList(\"intents\", options.intents, isValidIntent) || null,\n    _minTotalDeltaX: options.minTotalDeltaX ?? null,\n    _maxTotalDeltaX: options.maxTotalDeltaX ?? null,\n    _minTotalDeltaY: options.minTotalDeltaY ?? null,\n    _maxTotalDeltaY: options.maxTotalDeltaY ?? null,\n    _minTotalDeltaZ: options.minTotalDeltaZ ?? null,\n    _maxTotalDeltaZ: options.maxTotalDeltaZ ?? null,\n    _preventDefault: options.preventDefault ?? config._preventDefault,\n    _debounceWindow: debounceWindow,\n    _deltaThreshold: deltaThreshold,\n    _angleDiffThreshold: toNonNegNum(\n      options.angleDiffThreshold,\n      config._angleDiffThreshold,\n    ),\n    _naturalTouchScroll:\n      options.naturalTouchScroll ?? config._naturalTouchScroll,\n    _touchDragHoldTime: options.touchDragHoldTime ?? config._touchDragHoldTime,\n    _touchDragNumFingers:\n      options.touchDragNumFingers ?? config._touchDragNumFingers,\n  };\n};\n\n// Since each callback needs to accumulate events during its debounce window\n// and until its threshold is exceeded, we use a wrapper around the\n// user-supplied handler to do that.\nconst getCallbackAndWrapper = (\n  handler: OnGestureHandler,\n  options: OnGestureOptionsInternal,\n  logger: LoggerInterface | null,\n): { _callback: OnGestureCallback; _wrapper: OnGestureHandlerWrapper } => {\n  let totalDeltaX = 0,\n    totalDeltaY = 0,\n    totalDeltaZ = 1;\n  // When there's a pointer down, drag then pointerup, since we prevent\n  // pointerdown default action, this results in a click event shortly\n  // afterwards even when there's been a movement of the mouse. We detect that\n  // and prevent this click.\n  let preventNextClick = false;\n\n  const directions = options._directions;\n  const intents = options._intents;\n  const minTotalDeltaX = options._minTotalDeltaX;\n  const maxTotalDeltaX = options._maxTotalDeltaX;\n  const minTotalDeltaY = options._minTotalDeltaY;\n  const maxTotalDeltaY = options._maxTotalDeltaY;\n  const minTotalDeltaZ = options._minTotalDeltaZ;\n  const maxTotalDeltaZ = options._maxTotalDeltaZ;\n  const deltaThreshold = options._deltaThreshold;\n  const angleDiffThreshold = options._angleDiffThreshold;\n  const reverseScroll = !options._naturalTouchScroll;\n  const dragHoldTime = options._touchDragHoldTime;\n  const dragNumFingers = options._touchDragNumFingers;\n\n  // The event queue is cleared when the threshold is exceeded AND the debounce\n  // window has passed. It's not necessary for the actual handler to be called\n  // then (e.g. if the direction or intent doesn't match, it won't be).\n  const eventQueue: Event[] = [];\n  const id = randId();\n\n  // Since handler could be a function or a callback (not callable), we wrap it\n  // so that in case it's already a callback, its removal will result in\n  // deleteHandler getting called. It is not debounced itself, instead there's\n  // a debounced wrapper that invokes it.\n  const callback = wrapCallback(handler);\n\n  // The debounced callback wrapper is what is debounced.\n  // It accumulates total deltas and checks if the conditions (of threshold,\n  // direction and intent) are satisfied before calling the real handler.\n  //\n  // Most importantly, since it is only called when the debounce window has\n  // expired it can clear the event queue if the threshold is also exceeded.\n  const debouncedWrapper = getDebouncedHandler(\n    options._debounceWindow,\n    (\n      target: EventTarget,\n      fragment: GestureFragment,\n      eventQueueCopy: Event[],\n    ) => {\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      const deltaX = fragment.deltaX;\n      const deltaY = fragment.deltaY;\n      const deltaZ = fragment.deltaZ;\n      const device = fragment.device;\n\n      if (\n        MH.round(maxAbs(deltaX, deltaY, (1 - deltaZ) * 100)) < deltaThreshold\n      ) {\n        debug: logger?.debug7(\n          `[${id}] Delta threshold not exceeded for callback`,\n        );\n        return;\n      }\n\n      debug: logger?.debug9(`[${id}] Done summing events for ${device}`);\n      clearEventQueue(device, eventQueue);\n\n      const newTotalDeltaX = toNumWithBounds(totalDeltaX + deltaX, {\n        min: minTotalDeltaX,\n        max: maxTotalDeltaX,\n      });\n\n      const newTotalDeltaY = toNumWithBounds(totalDeltaY + deltaY, {\n        min: minTotalDeltaY,\n        max: maxTotalDeltaY,\n      });\n\n      const newTotalDeltaZ = toNumWithBounds(addDeltaZ(totalDeltaZ, deltaZ), {\n        min: minTotalDeltaZ,\n        max: maxTotalDeltaZ,\n      });\n\n      if (\n        newTotalDeltaX === totalDeltaX &&\n        newTotalDeltaY === totalDeltaY &&\n        newTotalDeltaZ === totalDeltaZ\n      ) {\n        return;\n      }\n\n      totalDeltaX = newTotalDeltaX;\n      totalDeltaY = newTotalDeltaY;\n      totalDeltaZ = newTotalDeltaZ;\n\n      const direction = fragment.direction;\n      const intent = fragment.intent;\n      const time =\n        eventQueueCopy[MH.lengthOf(eventQueueCopy) - 1]?.timeStamp -\n          eventQueueCopy[0]?.timeStamp || 0;\n\n      const data = {\n        device,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n        time,\n        totalDeltaX,\n        totalDeltaY,\n        totalDeltaZ,\n      };\n\n      if (\n        direction !== MC.S_NONE &&\n        (!directions || MH.includes(directions, direction)) &&\n        (!intents || MH.includes(intents, intent))\n      ) {\n        callback.invoke(target, data, eventQueueCopy).catch(logError);\n      } else {\n        debug: logger?.debug7(\n          `[${id}] Directions or intents not matching for callback`,\n        );\n      }\n    },\n  );\n\n  // This wrapper is NOT debounced and adds the events to the queue, prevents\n  // default action if needed, and indicates whether the gesture is terminated.\n  const wrapper = (\n    target: EventTarget,\n    device: GestureDevice,\n    event: Event,\n    preventDefault: boolean,\n  ) => {\n    eventQueue.push(event);\n\n    const fragment = fragmentGetters[device](eventQueue, {\n      angleDiffThreshold,\n      deltaThreshold,\n      reverseScroll,\n      dragHoldTime,\n      dragNumFingers,\n    });\n\n    debug: logger?.debug8(\n      `[${id}] Got fragment for ${device} (${event.type})`,\n      fragment,\n      [...eventQueue].map((e) => e.type),\n    );\n\n    if (preventDefault) {\n      preventDefaultActionFor(\n        event,\n        !!fragment || (event.type === MC.S_CLICK && preventNextClick),\n      );\n    }\n\n    if (fragment === false) {\n      // not enough events in the queue, pass\n      debug: logger?.debug9(`[${id}] Not enough events for gesture ${device}`);\n      return false;\n    } else if (fragment === null) {\n      // consider the gesture terminated\n      clearEventQueue(device, eventQueue);\n      debug: logger?.debug9(`[${id}] Gesture for ${device} terminated`);\n      return true;\n    }\n\n    if (device === MC.S_POINTER) {\n      // If we're here, there's been a drag, expect a click immediately\n      // afterwards and prevent default action.\n      preventNextClick = true;\n      MH.setTimer(() => {\n        preventNextClick = false;\n      }, 10);\n    }\n\n    debouncedWrapper(\n      target,\n      fragment,\n      [...eventQueue], // copy\n    );\n\n    return false;\n  };\n\n  return { _callback: callback, _wrapper: wrapper };\n};\n\nconst clearEventQueue = (device: GestureDevice, queue: Event[]) => {\n  const keepLastEvent = device === MC.S_POINTER || device === MC.S_TOUCH;\n  queue.splice(0, MH.lengthOf(queue) - (keepLastEvent ? 1 : 0));\n};\n\nconst preventDefaultActionFor = (event: Event, isActualGesture: boolean) => {\n  const target = event.currentTarget;\n  const eventType = event.type;\n  const isPointerDown =\n    eventType === MC.S_POINTERDOWN || eventType === MC.S_MOUSEDOWN;\n\n  if (\n    eventType === MC.S_TOUCHMOVE ||\n    eventType === MC.S_WHEEL ||\n    ((eventType === MC.S_CLICK || eventType === MC.S_KEYDOWN) &&\n      isActualGesture) ||\n    (isPointerDown && (event as MouseEvent).buttons === 1)\n  ) {\n    MH.preventDefault(event);\n\n    if (isPointerDown && MH.isHTMLElement(target)) {\n      // Otherwise capturing key events won't work\n      target.focus({ preventScroll: true });\n    }\n  }\n};\n\nconst setGestureCssProps = (\n  target: EventTarget,\n  data: Partial<GestureData>,\n) => {\n  const intent = data.intent;\n\n  if (!MH.isElement(target) || !intent || intent === MC.S_UNKNOWN) {\n    return;\n  }\n\n  const prefix = `${intent}-`;\n\n  if (intent === MC.S_ZOOM) {\n    setNumericStyleJsVars(\n      target,\n      {\n        deltaZ: data.totalDeltaZ,\n      },\n      {\n        _prefix: prefix,\n        _numDecimal: 2,\n      },\n    ); // don't await here\n  } else {\n    setNumericStyleJsVars(\n      target,\n      {\n        deltaX: data.totalDeltaX,\n        deltaY: data.totalDeltaY,\n      },\n      {\n        _prefix: prefix,\n      },\n    ); // don't await here\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { sortedKeysByVal } from \"@lisn/utils/math\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  BitSpace,\n  newBitSpaces,\n  createBitSpace,\n} from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid device name.\n *\n * @category Validation\n */\nexport const isValidDevice = (device: string): device is Device =>\n  ORDERED_DEVICES.has(device);\n\n/**\n * Returns true if the given string is a valid aspect ratio name.\n *\n * @category Validation\n */\nexport const isValidAspectRatio = (\n  aspectRatio: string,\n): aspectRatio is AspectRatio => ORDERED_ASPECTR.has(aspectRatio);\n\n/**\n * Returns true if the given string is a valid device specification (including\n * `\"min <Device>\"`, etc).\n *\n * Returns false for \"\", although if you passed \"\" in\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} it would\n * accept it as specifying _all_ devices.\n *\n * @category Validation\n */\nexport const isValidDeviceList = (\n  device: string | string[],\n): device is DeviceSpec | Device[] =>\n  isValidForType(S_DEVICES, device, ORDERED_DEVICES);\n\n/**\n * Returns true if the given string is a valid aspect ratio specification\n * (including `\"min <AspectRatio>\"`, etc).\n *\n * Returns false for \"\", although if you passed \"\" in\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} it would\n * accept it as specifying _all_ aspect ratios.\n *\n * @category Validation\n */\nexport const isValidAspectRatioList = (\n  aspectR: string | string[],\n): aspectR is AspectRatioSpec | AspectRatio[] =>\n  isValidForType(S_ASPECTRS_CAMEL, aspectR, ORDERED_ASPECTR);\n\n/**\n * Returns a list of {@link Device}s that are not covered by the given device\n * specification. See\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for accepted\n * formats.\n *\n * Returns an empty for \"\" or for a specification that includes all devices.\n *\n * @category Layout\n */\nexport const getOtherDevices = (device: DeviceSpec | Device[]): Device[] =>\n  getOtherLayouts(S_DEVICES, device, ORDERED_DEVICES);\n\n/**\n * Returns a list of {@link AspectRatio}s that are not covered by the given\n * aspect ratio specification. See\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for accepted\n * formats.\n *\n * Returns an empty for \"\" or for a specification that includes all aspect\n * ratios.\n *\n * @category Layout\n */\nexport const getOtherAspectRatios = (\n  aspectR: AspectRatioSpec | AspectRatio[],\n): AspectRatio[] => getOtherLayouts(S_ASPECTRS_CAMEL, aspectR, ORDERED_ASPECTR);\n\n/**\n * @ignore\n * @internal\n */\nexport const getLayoutBitmask = (options?: {\n  devices?: DeviceSpec | Device[];\n  aspectRatios?: AspectRatioSpec | AspectRatio[];\n}): number => {\n  let layoutBitmask =\n    getBitmaskFromSpec(S_DEVICES, options?.devices, ORDERED_DEVICES) |\n    getBitmaskFromSpec(\n      S_ASPECTRS_CAMEL,\n      options?.aspectRatios,\n      ORDERED_ASPECTR,\n    );\n\n  if (!layoutBitmask) {\n    layoutBitmask = ORDERED_DEVICES.bitmask | ORDERED_ASPECTR.bitmask; // default: all\n  }\n\n  return layoutBitmask;\n};\n\n// In ascending order by width.\nconst ORDERED_DEVICE_NAMES = sortedKeysByVal(settings.deviceBreakpoints);\nconst ORDERED_ASPECTR_NAMES = sortedKeysByVal(settings.aspectRatioBreakpoints);\n\nconst bitSpaces = newBitSpaces();\n\n/**\n * @ignore\n * @internal\n */\nexport const ORDERED_DEVICES = createBitSpace(\n  bitSpaces,\n  ...ORDERED_DEVICE_NAMES,\n);\n\n/**\n * @ignore\n * @internal\n */\nexport const ORDERED_ASPECTR = createBitSpace(\n  bitSpaces,\n  ...ORDERED_ASPECTR_NAMES,\n);\n\n/**\n * @ignore\n * @internal\n */\nexport const NUM_LAYOUTS =\n  MH.lengthOf(ORDERED_DEVICE_NAMES) + MH.lengthOf(ORDERED_ASPECTR_NAMES);\n\n// --------------------\n\nconst S_DEVICES = \"devices\";\nconst S_ASPECTRS_CAMEL = \"aspectRatios\";\n\n// Don't use capture groups for old browser support\nconst LAYOUT_RANGE_REGEX = RegExp(\n  \"^ *(?:\" +\n    \"([a-z-]+) +to +([a-z-]+)|\" +\n    \"min +([a-z-]+)|\" +\n    \"max +([a-z-]+)\" +\n    \") *$\",\n);\n\nconst getLayoutsFromBitmask = <T extends Device | AspectRatio>(\n  keyName: string,\n  bitmask: number,\n  bitSpace: BitSpace<T>,\n): T[] => {\n  const layouts: T[] = [];\n  for (let bit = bitSpace.start; bit <= bitSpace.end; bit++) {\n    const value = 1 << bit;\n    if (bitmask & value) {\n      const name = bitSpace.nameOf(value);\n      if (name) {\n        layouts.push(name);\n      }\n    }\n  }\n\n  return layouts;\n};\n\nconst getOtherLayouts = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[],\n  bitSpace: BitSpace<T>,\n): T[] => {\n  const bitmask = getBitmaskFromSpec(keyName, spec, bitSpace);\n  if (!bitmask) {\n    return [];\n  }\n\n  const oppositeBitmask = bitSpace.bitmask & ~bitmask;\n  return getLayoutsFromBitmask(keyName, oppositeBitmask, bitSpace);\n};\n\nconst isValidForType = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[],\n  bitSpace: BitSpace<T>,\n): boolean => {\n  try {\n    const bitmask = getBitmaskFromSpec(keyName, spec, bitSpace);\n    return bitmask !== 0;\n  } catch (err) {\n    if (MH.isInstanceOf(err, LisnUsageError)) {\n      return false;\n    }\n    throw err;\n  }\n};\n\nconst getBitmaskFromSpec = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[] | undefined | null,\n  bitSpace: BitSpace<T>,\n): number => {\n  if (MH.isEmpty(spec)) {\n    return 0;\n  }\n  const singleKeyName = keyName.slice(0, -1);\n\n  if (MH.isString(spec)) {\n    const rangeMatch = spec.match(LAYOUT_RANGE_REGEX);\n    if (rangeMatch) {\n      const minLayout = rangeMatch[1] || rangeMatch[3];\n      const maxLayout = rangeMatch[2] || rangeMatch[4];\n\n      if (minLayout !== undefined && !bitSpace.has(minLayout)) {\n        throw MH.usageError(`Unknown ${singleKeyName} '${minLayout}'`);\n      }\n\n      if (maxLayout !== undefined && !bitSpace.has(maxLayout)) {\n        throw MH.usageError(`Unknown ${singleKeyName} '${maxLayout}'`);\n      }\n\n      return bitSpace.bitmaskFor(minLayout, maxLayout);\n    }\n  }\n\n  let bitmask = 0;\n  const layouts = validateStrList(keyName, spec, bitSpace.has);\n  if (layouts) {\n    for (const lt of layouts) {\n      bitmask |= bitSpace.bit[lt];\n    }\n  }\n\n  return bitmask;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  ScrollDirection,\n  ScrollTarget,\n  TargetCoordinates,\n  CoordinateOffset,\n  ScrollPosition,\n  Offset,\n} from \"@lisn/globals/types\";\n\nimport { getComputedStylePropNow } from \"@lisn/utils/css-alter\";\nimport { SCROLL_DIRECTIONS } from \"@lisn/utils/directions\";\nimport {\n  waitForInteractive,\n  waitForElementOrInteractive,\n} from \"@lisn/utils/dom-events\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { maxAbs, easeInOutQuad } from \"@lisn/utils/math\";\nimport { waitForAnimationFrame } from \"@lisn/utils/tasks\";\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Scrolling\n */\nexport type ScrollAction = {\n  cancel: () => boolean;\n\n  /**\n   * Will reject if the scroll is cancelled.\n   */\n  waitFor: () => Promise<ScrollPosition>;\n};\n\n/**\n * @category Scrolling\n * @interface\n */\nexport type ScrollToOptions = {\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue If `document.body` is scrollable, will use that; otherwise `document.scrollingElement`\n   */\n  scrollable?: Element;\n\n  /**\n   * Offset the target coordinates by the given amount(s).\n   *\n   * E.g. if the final target coordinates are computed to be\n   * `{top: 100, left: 0}` and you specify offset as `{top: 10, left: 20}`, it\n   * will scroll to  `{top: 110, left: 20}`.\n   *\n   * @defaultValue undefined\n   */\n  offset?: CoordinateOffset;\n\n  // TODO maybe support fixed velocity as an alternative to fixed duration?\n  /**\n   * The duration of the scroll animation. If not given, it is instant.\n   *\n   * @defaultValue 0\n   */\n  duration?: number;\n\n  /**\n   * Whether another request to us to scroll the same target can interrupt this\n   * scroll before it finishes.\n   *\n   * @defaultValue false\n   */\n  weCanInterrupt?: boolean;\n\n  /**\n   * Whether a user attempt to scroll the target can interrupt this before it\n   * finishes.\n   *\n   * @defaultValue false\n   */\n  userCanInterrupt?: boolean;\n\n  /**\n   * If the scrolling element is already at the given coordinates (or strictly\n   * speaking we allow for 5 pixels difference), then if `altTarget` is given,\n   * this will become the target to scroll to.\n   *\n   * @defaultValue undefined\n   */\n  altTarget?: TargetCoordinates | Element | string;\n\n  /**\n   * Offset the target coordinates by the given amount(s) when `altTarget` is used.\n   *\n   * See {@link ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined\n   */\n  altOffset?: CoordinateOffset;\n};\n\n// ----------\n\n/**\n * Returns true if the given element is scrollable in the given direction, or\n * in either direction (if `axis` is not given).\n *\n * **IMPORTANT:** If you enable `active` then be aware that:\n * 1. It may attempt to scroll the target in order to determine whether it's\n *    scrollable in a more reliable way than the default method of comparing\n *    clientWidth/Height to scrollWidth/Height. If there is currently any\n *    ongoing scroll on the target, this will stop it, so never use that inside\n *    scroll-triggered handlers.\n * 2. If the layout has been invalidated and not yet recalculated,\n *    this will cause a forced layout, so always {@link waitForMeasureTime}\n *    before calling this function when possible.\n *\n * @param [options.axis]    One of \"x\" or \"y\" for horizontal or vertical scroll\n *                          respectively. If not given, it checks both.\n * @param [options.active]  If true, then if the target's current scroll offset\n *                          is 0, it will attempt to scroll it rather than\n *                          looking at the clientWidth/Height to\n *                          scrollWidth/Height. This is more reliable but can\n *                          cause issues, see note above. Note however it will\n *                          fail (return a false positive) on elements that have\n *                          overflowing content but overflow set to hidden, clip\n *                          or visible;\n * @param [options.noCache] By default the result of a check is cached for 1s\n *                          and if there's already a cached result for this\n *                          element, it is returns. Set this to true to disable\n *                          checking the cache and also saving the result into\n *                          the cache.\n *\n * @category Scrolling\n */\nexport const isScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n): boolean => {\n  const { axis, active, noCache } = options ?? {};\n  if (!axis) {\n    return (\n      isScrollable(element, { axis: \"y\", active, noCache }) ||\n      isScrollable(element, { axis: \"x\", active, noCache })\n    );\n  }\n\n  if (!noCache) {\n    const cachedResult = isScrollableCache.get(element)?.get(axis);\n    if (!MH.isNullish(cachedResult)) {\n      return cachedResult;\n    }\n  }\n\n  const offset = axis === \"x\" ? \"Left\" : \"Top\";\n  let result = false;\n  let doCache = !noCache;\n\n  if (element[`scroll${offset}`]) {\n    result = true;\n  } else if (active) {\n    // Use scrollTo with explicit behavior set to instant instead of setting\n    // the scrollTop/Left properties since the latter doesn't work with\n    // scroll-behavior smooth.\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 1 });\n    const canScroll = element[`scroll${offset}`] > 0;\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 0 });\n    result = canScroll;\n  } else {\n    const dimension = axis === \"x\" ? \"Width\" : \"Height\";\n    result = element[`scroll${dimension}`] > element[`client${dimension}`];\n    // No need to cache a passive check.\n    doCache = false;\n  }\n\n  if (doCache) {\n    isScrollableCache.sGet(element).set(axis, result);\n    MH.setTimer(() => {\n      MH.deleteKey(isScrollableCache.get(element), axis);\n      isScrollableCache.prune(element);\n    }, IS_SCROLLABLE_CACHE_TIMEOUT);\n  }\n\n  return result;\n};\n\n/**\n * Returns the closest scrollable ancestor of the given element, _not including\n * it_.\n *\n * @param options See {@link isScrollable}\n *\n * @returns `null` if no scrollable ancestors are found.\n *\n * @category Scrolling\n */\nexport const getClosestScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n) => {\n  // Walk up the tree, starting at the element in question but excluding it.\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = MH.parentOf(ancestor))) {\n    if (isScrollable(ancestor, options)) {\n      return ancestor;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Returns the current {@link ScrollAction} if any.\n *\n * @category Scrolling\n */\nexport const getCurrentScrollAction = (\n  scrollable?: Element,\n): ScrollAction | null => {\n  scrollable = toScrollableOrDefault(scrollable);\n  const action = currentScrollAction.get(scrollable);\n  if (action) {\n    return MH.copyObject(action);\n  }\n  return null;\n};\n\n/**\n * Scrolls the given scrollable element to the given `to` target.\n *\n * Returns `null` if there's an ongoing scroll that is not cancellable.\n *\n * Note that if `to` is an element or a selector, then it _must_ be a\n * descendant of the scrollable element.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *               If the target coordinates are invalid.\n *\n * @param to If this is an element, then its top-left position is used as\n *           the target coordinates. If it is a string, then it is treated\n *           as a selector for an element using `querySelector`.\n *\n * @returns `null` if there's an ongoing scroll that is not cancellable,\n * otherwise a {@link ScrollAction}.\n *\n * @category Scrolling\n */\nexport const scrollTo = (\n  to: TargetCoordinates | Element | string,\n  userOptions?: ScrollToOptions,\n): ScrollAction | null => {\n  const options = getOptions(to, userOptions);\n  const scrollable = options._scrollable;\n\n  // cancel current scroll action if any\n  const currentScroll = currentScrollAction.get(scrollable);\n  if (currentScroll) {\n    if (!currentScroll.cancel()) {\n      // current scroll action is not cancellable by us\n      return null;\n    }\n  }\n\n  let isCancelled = false;\n\n  const cancelFn = options._weCanInterrupt\n    ? () => (isCancelled = true)\n    : () => false;\n\n  const scrollEvents = [\"touchmove\", \"wheel\"]; // don't bother with keyboard\n  let preventScrollHandler: EventListener | null = null;\n\n  if (options._userCanInterrupt) {\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(\n        scrollable,\n        eventType,\n        () => {\n          isCancelled = true;\n        },\n        { once: true },\n      );\n    }\n  } else {\n    preventScrollHandler = MH.preventDefault;\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(scrollable, eventType, preventScrollHandler, {\n        passive: false,\n      });\n    }\n  }\n\n  const promise = initiateScroll(options, () => isCancelled);\n\n  const thisScrollAction: ScrollAction = {\n    waitFor: () => promise,\n    cancel: cancelFn,\n  };\n\n  const cleanup = () => {\n    if (currentScrollAction.get(scrollable) === thisScrollAction) {\n      MH.deleteKey(currentScrollAction, scrollable);\n    }\n\n    if (preventScrollHandler) {\n      for (const eventType of scrollEvents) {\n        removeEventListenerFrom(scrollable, eventType, preventScrollHandler, {\n          passive: false,\n        });\n      }\n    }\n  };\n\n  thisScrollAction.waitFor().then(cleanup).catch(cleanup);\n\n  currentScrollAction.set(scrollable, thisScrollAction);\n  return thisScrollAction;\n};\n\n/**\n * Returns true if the given string is a valid scroll direction.\n *\n * @category Validation\n */\nexport const isValidScrollDirection = (\n  direction: string,\n): direction is ScrollDirection => MH.includes(SCROLL_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid scroll\n * directions.\n *\n * @category Validation\n */\nexport const isValidScrollDirectionList = (directions: string | string[]) =>\n  isValidStrList(directions, isValidScrollDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const mapScrollable = (original: Element, actualScrollable: Element) =>\n  mappedScrollables.set(original, actualScrollable);\n\n/**\n * @ignore\n * @internal\n */\nexport const unmapScrollable = (original: Element) =>\n  MH.deleteKey(mappedScrollables, original);\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientWidthNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetWidth -\n      getBorderWidth(element, MC.S_LEFT) -\n      getBorderWidth(element, MC.S_RIGHT)\n    : element[MC.S_CLIENT_WIDTH];\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientHeightNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetHeight -\n      getBorderWidth(element, MC.S_TOP) -\n      getBorderWidth(element, MC.S_BOTTOM)\n    : element[MC.S_CLIENT_HEIGHT];\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainContentElement = (): HTMLElement | null =>\n  mainContentElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainContentElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainContentElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainScrollableElement = (): HTMLElement | null =>\n  mainScrollableElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainScrollableElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainScrollableElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultScrollingElement = () => {\n  const body = MH.getBody();\n  return isScrollable(body) ? body : MH.getDocScrollingElement() || body;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetScrollableElement = (\n  target: ScrollTarget | null | undefined,\n): Element | null => toScrollableOrMain(target, tryGetMainScrollableElement);\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchScrollableElement = async (\n  target: ScrollTarget | null | undefined,\n): Promise<Element> => toScrollableOrMain(target, fetchMainScrollableElement);\n\n// ----------------------------------------\n\ntype ScrollToOptionsInternal = {\n  _target: TargetCoordinates;\n  _offset: CoordinateOffset | null;\n  _altTarget: TargetCoordinates | null;\n  _altOffset: CoordinateOffset | null;\n  _scrollable: Element;\n  _duration: number;\n  _weCanInterrupt: boolean;\n  _userCanInterrupt: boolean;\n};\n\nconst IS_SCROLLABLE_CACHE_TIMEOUT = 1000;\n\nconst isScrollableCache = newXMap<Element, Map<\"x\" | \"y\", boolean>>(() =>\n  MH.newMap(),\n);\n\nconst mappedScrollables = MH.newMap<Element, Element>();\n\nconst currentScrollAction = MH.newMap<Element, ScrollAction>();\n\nconst DIFF_THRESHOLD = 5;\nconst arePositionsDifferent = (start: ScrollPosition, end: ScrollPosition) =>\n  maxAbs(start.top - end.top, start.left - end.left) >= DIFF_THRESHOLD;\n\nconst toScrollableOrMain = <R>(\n  target: ScrollTarget | null | undefined,\n  getMain: () => R,\n): Element | R => {\n  if (MH.isElement(target)) {\n    return mappedScrollables.get(target) || target;\n  }\n\n  if (!target || target === MH.getWindow() || target === MH.getDoc()) {\n    return getMain();\n  }\n\n  throw MH.usageError(\"Unsupported scroll target\");\n};\n\nconst toScrollableOrDefault = (scrollable: Element | undefined): Element =>\n  scrollable ?? getDefaultScrollingElement();\n\nconst getOptions = (\n  to: TargetCoordinates | Element | string,\n  options: ScrollToOptions | undefined,\n): ScrollToOptionsInternal => {\n  const scrollable = toScrollableOrDefault(options?.scrollable);\n  const target = getTargetCoordinates(scrollable, to);\n  const altTarget = options?.altTarget\n    ? getTargetCoordinates(scrollable, options?.altTarget)\n    : null;\n\n  return {\n    _target: target,\n    _offset: options?.offset || null,\n    _altTarget: altTarget,\n    _altOffset: options?.altOffset || null,\n    _scrollable: scrollable,\n    _duration: options?.duration || 0,\n    _weCanInterrupt: options?.weCanInterrupt ?? false,\n    _userCanInterrupt: options?.userCanInterrupt ?? false,\n  };\n};\n\nconst getTargetCoordinates = (\n  scrollable: Element,\n  target: TargetCoordinates | Element | string,\n): TargetCoordinates => {\n  const docScrollingElement = MH.getDocScrollingElement();\n\n  if (MH.isElement(target)) {\n    if (scrollable === target || !scrollable.contains(target)) {\n      throw MH.usageError(\"Target must be a descendant of the scrollable one\");\n    }\n\n    return {\n      top: () =>\n        scrollable[MC.S_SCROLL_TOP] +\n        MH.getBoundingClientRect(target).top -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).top),\n      left: () =>\n        scrollable[MC.S_SCROLL_LEFT] +\n        MH.getBoundingClientRect(target).left -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).left),\n    };\n  }\n\n  if (MH.isString(target)) {\n    const targetEl = MH.docQuerySelector(target);\n    if (!targetEl) {\n      throw MH.usageError(`No match for '${target}'`);\n    }\n\n    return getTargetCoordinates(scrollable, targetEl);\n  }\n\n  if (!MH.isObject(target) || !(\"top\" in target || \"left\" in target)) {\n    throw MH.usageError(\"Invalid coordinates\");\n  }\n\n  return target;\n};\n\nconst getStartEndPosition = async (\n  options: ScrollToOptionsInternal,\n): Promise<{ start: ScrollPosition; end: ScrollPosition }> => {\n  await waitForMeasureTime();\n\n  const applyOffset = (\n    position: ScrollPosition,\n    offset: CoordinateOffset | null,\n  ) => {\n    position.top += offset?.top || 0;\n    position.left += offset?.left || 0;\n  };\n\n  const scrollable = options._scrollable;\n  const start = {\n    top: scrollable[MC.S_SCROLL_TOP],\n    left: scrollable[MC.S_SCROLL_LEFT],\n  };\n\n  let end = getEndPosition(scrollable, start, options._target);\n  applyOffset(end, options._offset);\n\n  if (!arePositionsDifferent(start, end) && options._altTarget) {\n    end = getEndPosition(scrollable, start, options._altTarget);\n    applyOffset(end, options._altOffset);\n  }\n\n  return { start, end };\n};\n\n// must be called in \"measure time\"\nconst getEndPosition = (\n  scrollable: Element,\n  startPosition: ScrollPosition,\n  targetCoordinates: TargetCoordinates,\n): ScrollPosition => {\n  // by default no change in scroll top or left\n  const endPosition = MH.copyObject(startPosition);\n\n  if (!MH.isNullish(targetCoordinates?.top)) {\n    if (MH.isFunction(targetCoordinates.top)) {\n      endPosition.top = targetCoordinates.top(scrollable);\n    } else {\n      endPosition.top = targetCoordinates.top;\n    }\n  }\n\n  if (!MH.isNullish(targetCoordinates?.left)) {\n    if (MH.isFunction(targetCoordinates.left)) {\n      endPosition.left = targetCoordinates.left(scrollable);\n    } else {\n      endPosition.left = targetCoordinates.left;\n    }\n  }\n\n  // Set boundaries\n  const scrollH = scrollable[MC.S_SCROLL_HEIGHT];\n  const scrollW = scrollable[MC.S_SCROLL_WIDTH];\n  const clientH = getClientHeightNow(scrollable);\n  const clientW = getClientWidthNow(scrollable);\n  endPosition.top = MH.min(scrollH - clientH, endPosition.top);\n  endPosition.top = MH.max(0, endPosition.top);\n\n  endPosition.left = MH.min(scrollW - clientW, endPosition.left);\n  endPosition.left = MH.max(0, endPosition.left);\n\n  return endPosition;\n};\n\nconst initiateScroll = async (\n  options: ScrollToOptionsInternal,\n  isCancelled: () => boolean,\n) => {\n  const position = await getStartEndPosition(options);\n  const duration = options._duration;\n  const scrollable = options._scrollable;\n\n  let startTime: number, previousTimeStamp: number;\n  const currentPosition: ScrollPosition = position.start;\n\n  const step = async () => {\n    const timeStamp = await waitForAnimationFrame();\n    // Element.scrollTo equates to a measurement and needs to run after\n    // painting to avoid forced layout.\n    await waitForMeasureTime();\n\n    if (isCancelled()) {\n      // Reject the promise\n      throw currentPosition;\n    }\n\n    if (!startTime) {\n      // If it's very close to the target, no need to scroll smoothly\n      if (\n        duration === 0 ||\n        !arePositionsDifferent(currentPosition, position.end)\n      ) {\n        MH.elScrollTo(scrollable, position.end);\n        return position.end;\n      }\n\n      startTime = timeStamp;\n    }\n\n    if (startTime !== timeStamp && previousTimeStamp !== timeStamp) {\n      const elapsed = timeStamp - startTime;\n      const progress = easeInOutQuad(MH.min(1, elapsed / duration));\n\n      for (const s of [MC.S_LEFT, MC.S_TOP] as const) {\n        currentPosition[s] =\n          position.start[s] + (position.end[s] - position.start[s]) * progress;\n      }\n\n      MH.elScrollTo(scrollable, currentPosition);\n\n      if (progress === 1) {\n        return currentPosition;\n      }\n    }\n\n    previousTimeStamp = timeStamp;\n    return step();\n  };\n\n  return step();\n};\n\nconst isScrollableBodyInQuirks = (element: Element): element is HTMLElement =>\n  element === MH.getBody() && MH.getDocScrollingElement() === null;\n\n// must be called in \"measure time\"\nconst getBorderWidth = (element: Element, side: Offset) =>\n  MH.ceil(MH.parseFloat(getComputedStylePropNow(element, `border-${side}`)));\n\n// ------------------------------\n\nlet mainContentElement: HTMLElement;\nlet mainScrollableElement: HTMLElement;\n\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      const mainScrollableElementSelector =\n        settings.mainScrollableElementSelector;\n\n      const contentElement = await waitForElementOrInteractive(() => {\n        return mainScrollableElementSelector\n          ? MH.docQuerySelector(mainScrollableElementSelector)\n          : MH.getBody(); // default if no selector\n      });\n\n      // defaults\n      mainScrollableElement = getDefaultScrollingElement();\n      mainContentElement = MH.getBody();\n\n      if (!contentElement) {\n        logError(\n          MH.usageError(\n            `No match for '${mainScrollableElementSelector}'. ` +\n              \"Scroll tracking/capturing may not work as intended.\",\n          ),\n        );\n      } else if (!MH.isHTMLElement(contentElement)) {\n        logWarn(\"mainScrollableElementSelector should point to an HTMLElement\");\n      } else if (contentElement !== mainContentElement) {\n        mainScrollableElement = mainContentElement = contentElement;\n      }\n    })();\n  }\n\n  return initPromise;\n};\n\n// Try to find the main scrollable/content elements asap so that tryGetMain*\n// can return them if called before fetchMain*\nif (MH.hasDOM()) {\n  waitForInteractive().then(init);\n}\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  addClasses,\n  addClassesNow,\n  setDataNow,\n  setStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, tryWrapContent } from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { camelToKebabCase, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  isScrollable,\n  tryGetMainContentElement,\n  fetchMainContentElement,\n} from \"@lisn/utils/scroll\";\n\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Overlays\n * @interface\n */\nexport type OverlayOptions = {\n  /**\n   * The parent element to insert the overlay into.\n   *\n   * If not given, then:\n   * - if the overlay is to have a `position: fixed`, then `document.body` is used\n   * - otherwise,\n   *   {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}\n   *   is used\n   */\n  parent?: HTMLElement;\n\n  /**\n   * If set, then it will be assigned as the DOM element ID for the new\n   * overlay.\n   *\n   * Furthermore, the new overlay will be created and will not be saved for\n   * future reuse.\n   *\n   * By default, if `id` is not given, the overlay will be saved, and if\n   * {@link createOverlay} is called again with the same `style`, `data` and\n   * parent, the previous overlay is returned.\n   */\n  id?: string;\n\n  /**\n   * Every entry in this object will be set on the `style` of the new overlay.\n   *\n   * **IMPORTANT:** By default overlays are positioned absolutely, so if you need\n   * another positioning, override this here by setting a `position` key in\n   * `style`. If position is either \"absolute\" (by default or explicitly set) or\n   * \"fixed\", and none of `top` or `bottom` is given, `top: 0` is set; and\n   * similarly, if none of `left` or `right` is given, `left: 0` is set.\n   */\n  style?: Record<string, string>;\n\n  /**\n   * Every entry in this object will be set as a data attribute on the new\n   * overlay.\n   *\n   * Keys can be either kebab-case or camelCase (they will be converted if\n   * needed). Do _not_ include the \"data-\" prefix which will be added\n   * automatically. E.g. both \"foo-bar\" and \"fooBar\" will result in\n   * \"data-foo-bar\" being set.\n   */\n  data?: Record<string, string>;\n};\n\n/**\n * Returns an existing overlay for this specification. If the overlay was just\n * created it may not yet be attached to the DOM.\n *\n * @category Overlays\n */\nexport const getOverlay = (userOptions?: OverlayOptions) => {\n  const options = tryGetOverlayOptions(userOptions);\n  if (!options) {\n    return null;\n  }\n\n  return overlays.get(options._parent)?.get(options._overlayKey) || null;\n};\n\n/**\n * Creates a new overlay, and inserts it into the DOM as soon as\n * {@link waitForMutateTime} resolves, or returns an already existing matching\n * overlay.\n *\n * **Note** that if {@link OverlayOptions.id} is set, a new overlay will\n * _always_ be created.\n *\n * @category Overlays\n */\nexport const createOverlay = async (userOptions?: OverlayOptions) => {\n  const options = await fetchOverlayOptions(userOptions);\n  const canReuse = !options._id;\n\n  if (canReuse) {\n    const existingOverlay = overlays\n      .get(options._parent)\n      ?.get(options._overlayKey);\n\n    if (existingOverlay) {\n      if (!MH.parentOf(existingOverlay)) {\n        // not yet inserted into the DOM, so wait until it is\n        await waitForMutateTime();\n      }\n      return existingOverlay;\n    }\n  }\n\n  // Create a new one\n  const overlay = createOnlyOverlay(options);\n  if (canReuse) {\n    // Save it now before awating, so that concurrent requests to create the\n    // same one use it\n    overlays.sGet(options._parent).set(options._overlayKey, overlay);\n  } else {\n    overlay.id = options._id;\n  }\n\n  const isPercentageHOffset = MH.includes(\n    (options._style.left || \"\") + (options._style.right || \"\"),\n    \"%\",\n  );\n\n  const isPercentageVOffset = MH.includes(\n    (options._style.top || \"\") + (options._style.bottom || \"\"),\n    \"%\",\n  );\n\n  let needsContentWrapping = false;\n  let parentEl = options._parent;\n  if (isPercentageHOffset || isPercentageVOffset) {\n    needsContentWrapping =\n      (isPercentageHOffset && isScrollable(parentEl, { axis: \"x\" })) ||\n      (isPercentageVOffset && isScrollable(parentEl, { axis: \"y\" }));\n  }\n\n  if (needsContentWrapping) {\n    // TODO Is it possible to unwrap the children when no longer needing this\n    // overlay? Probably not worth the effort. ViewWatcher doesn't remove old\n    // olverlays anyway.\n    parentEl = await tryWrapContent(parentEl, {\n      classNames: [MC.PREFIX_WRAPPER, PREFIX_WRAPPER],\n      required: true,\n      requiredBy: \"percentage offset view trigger with scrolling root\",\n    });\n  }\n\n  if (options._style.position === MC.S_ABSOLUTE) {\n    // Ensure parent has non-static positioning\n    addClasses(parentEl, MH.prefixName(\"overlay-container\"));\n  }\n\n  await moveElement(overlay, { to: parentEl });\n\n  return overlay;\n};\n\n// ----------------------------------------\n\ntype OverlayOptionsInternal = {\n  _parent: HTMLElement;\n  _id: string;\n  _style: Record<string, string>;\n  _data: Record<string, string>;\n  _overlayKey: string;\n};\n\nconst PREFIX_WRAPPER = MH.prefixName(\"overlay-wrapper\");\n\nconst overlays = newXWeakMap<HTMLElement, Map<string, HTMLElement>>(() =>\n  MH.newMap(),\n);\n\nconst tryGetOverlayOptions = (\n  userOptions: OverlayOptions | undefined,\n): OverlayOptionsInternal | null => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = tryGetParent(userOptions?.parent, style.position);\n  if (!parentEl) {\n    return null;\n  }\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst fetchOverlayOptions = async (\n  userOptions: OverlayOptions | undefined,\n): Promise<OverlayOptionsInternal> => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = await fetchParent(userOptions?.parent, style.position);\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst getOverlayKey = (\n  style: Record<string, string>,\n  data: Record<string, string>,\n) => objToStrKey(style) + \"|\" + objToStrKey(data);\n\nconst getCssProperties = (style: Record<string, string> | undefined) => {\n  const finalCssProperties: Record<string, string> = MH.merge(\n    { position: MC.S_ABSOLUTE }, // default\n    style,\n  );\n\n  if (\n    finalCssProperties.position === MC.S_ABSOLUTE ||\n    finalCssProperties.position === MC.S_FIXED\n  ) {\n    if (\n      MH.isEmpty(finalCssProperties.top) &&\n      MH.isEmpty(finalCssProperties.bottom)\n    ) {\n      finalCssProperties.top = \"0px\";\n    }\n\n    if (\n      MH.isEmpty(finalCssProperties.left) &&\n      MH.isEmpty(finalCssProperties.right)\n    ) {\n      finalCssProperties.left = \"0px\";\n    }\n  }\n\n  return finalCssProperties;\n};\n\nconst tryGetParent = (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED ? MH.getBody() : tryGetMainContentElement());\n\nconst fetchParent = async (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED\n    ? await waitForElement(MH.getBody)\n    : await fetchMainContentElement());\n\nconst createOnlyOverlay = (options: OverlayOptionsInternal) => {\n  const overlay = MH.createElement(\"div\");\n\n  addClassesNow(overlay, MH.prefixName(\"overlay\"));\n\n  const data = options._data;\n  for (const attr of MH.keysOf(data)) {\n    setDataNow(overlay, camelToKebabCase(attr), data[attr]);\n  }\n\n  const style = options._style;\n  for (const prop of MH.keysOf(style)) {\n    setStylePropNow(overlay, prop, style[prop]);\n  }\n\n  return overlay;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size } from \"@lisn/globals/types\";\n\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { createOverlay } from \"@lisn/utils/overlays\";\n\n/**\n * Returns the content box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @category Size measurements\n */\nexport const getEntryContentBox = (entry: ResizeObserverEntry): Size => {\n  const size = entry.contentBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  }\n\n  const rect = entry.contentRect;\n  return { [MC.S_WIDTH]: rect[MC.S_WIDTH], [MC.S_HEIGHT]: rect[MC.S_HEIGHT] };\n};\n\n/**\n * Returns the border box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @param fallbackToContent If the entry does not contain border box\n *                          measurements (depending on browser), then fall back\n *                          to using the content box size. Otherwise (by\n *                          default) will return `NaN` values for width and\n *                          height.\n *\n * @category Size measurements\n */\nexport const getEntryBorderBox = (\n  entry: ResizeObserverEntry,\n  fallbackToContent = false,\n): Size => {\n  const size = entry.borderBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  } else if (fallbackToContent) {\n    return getEntryContentBox(entry);\n  }\n\n  return { [MC.S_WIDTH]: NaN, [MC.S_HEIGHT]: NaN };\n};\n\n/**\n * Returns true if the given string is a valid box type.\n *\n * @category Validation\n */\nexport const isValidBox = (box: string): box is Box =>\n  MH.includes(ALL_BOXES, box);\n\n/**\n * Returns true if the given string is a valid dimension.\n *\n * @category Validation\n */\nexport const isValidDimension = (dimension: string): dimension is Dimension =>\n  MH.includes(ALL_DIMENSIONS, dimension);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetViewportOverlay = (): HTMLElement | null =>\n  viewportOverlay ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via SizeWatcher\n */\nexport const fetchViewportOverlay = async (): Promise<HTMLElement> => {\n  await init();\n\n  return viewportOverlay;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchViewportSize = async (realtime = false) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const root = MH.hasDOM()\n    ? (MH.getDocScrollingElement() ?? MH.getBody())\n    : null;\n\n  return {\n    [MC.S_WIDTH]: root?.clientWidth || 0,\n    [MC.S_HEIGHT]: root?.clientHeight || 0,\n  };\n};\n\n// ----------------------------------------\n\nconst S_INLINE_SIZE = \"inlineSize\";\nconst S_BLOCK_SIZE = \"blockSize\";\n\nconst ALL_BOXES: Box[] = [\"content\", \"border\"] as const;\nconst ALL_DIMENSIONS: Dimension[] = [MC.S_WIDTH, MC.S_HEIGHT] as const;\n\nconst getSizeFromInlineBlock = (\n  size: ResizeObserverSize | ReadonlyArray<ResizeObserverSize>,\n): Size => {\n  /* istanbul ignore else */\n  if (MH.isIterableObject(size)) {\n    return {\n      [MC.S_WIDTH]: size[0][S_INLINE_SIZE],\n      [MC.S_HEIGHT]: size[0][S_BLOCK_SIZE],\n    };\n  }\n  return {\n    // in some browsers inlineSize and blockSize are scalars and nor Arrays\n    [MC.S_WIDTH]: (size as { [S_INLINE_SIZE]: number })[S_INLINE_SIZE],\n    [MC.S_HEIGHT]: (size as { [S_BLOCK_SIZE]: number })[S_BLOCK_SIZE],\n  };\n};\n\n// ------------------------------\n\nlet viewportOverlay: HTMLElement;\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      viewportOverlay = await createOverlay({\n        id: MH.prefixName(\"vp-ovrl\"),\n        style: {\n          position: \"fixed\",\n          [MC.S_WIDTH]: \"100vw\",\n          [MC.S_HEIGHT]: \"100vh\",\n        },\n      });\n    })();\n  }\n\n  return initPromise;\n};\n","/**\n * @module Modules/XResizeObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logWarn, logError } from \"@lisn/utils/log\";\n\nimport debug from \"@lisn/debug/debug\";\n\nexport type XResizeObserverCallback = (\n  entries: ResizeObserverEntry[],\n  observer: XResizeObserver,\n) => void;\n\n/**\n * {@link XResizeObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}\n * - observes both border box and content box size changes\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n * - can debounce the callback\n */\nexport class XResizeObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe | ResizeObserver:observe} except it accepts multiple targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent resize.\n   *\n   * If the target is already being observed, nothing is done.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/unobserve | ResizeObserver:unobserve} except it accepts multiple targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/disconnect | ResizeObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * @param debounceWindow Debounce the handler so that it's called at most\n   *                       every `debounceWindow` ms.\n   */\n  constructor(callback: XResizeObserverCallback, debounceWindow?: number) {\n    const logger = debug ? new debug.Logger({ name: \"XResizeObserver\" }) : null;\n\n    // Keep the latest ResizeObserverEntry for each target during the\n    // debounceWindow. Short-lived, so ok to use a Map.\n    const buffer = MH.newMap<Element, ResizeObserverEntry>();\n\n    // Since internally we have two observers, one for border box, one for\n    // content box, we will get called initially twice for a target. So we keep\n    // a counter of 1 or 2 for how many more calls to ignore.\n    const targetsToSkip = MH.newWeakMap<Element, 1 | 2>();\n\n    let observedTargets = MH.newWeakSet<Element>();\n\n    debounceWindow = debounceWindow || 0;\n\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      // Override entries for previous targets, but keep entries whose targets\n      // were not resized in this round\n      for (const entry of entries) {\n        const target = MH.targetOf(entry);\n        const skipNum = targetsToSkip.get(target);\n        if (skipNum !== undefined) {\n          if (skipNum === 2) {\n            // expect one more call\n            targetsToSkip.set(target, 1);\n          } else {\n            // done\n            /* istanbul ignore next */\n            if (skipNum !== 1) {\n              logError(MH.bugError(`# targetsToSkip is ${skipNum}`));\n            }\n            MH.deleteKey(targetsToSkip, target);\n          }\n\n          continue;\n        }\n\n        buffer.set(target, entry);\n      }\n\n      debug: logger?.debug9(\n        `Got ${entries.length} new entries. ` +\n          `Have ${buffer.size} unique-target entries`,\n        entries,\n      );\n\n      if (!timer && MH.sizeOf(buffer)) {\n        timer = MH.setTimer(() => {\n          if (MH.sizeOf(buffer)) {\n            callback(MH.arrayFrom(buffer.values()), this);\n            buffer.clear();\n          }\n\n          timer = null;\n        }, debounceWindow);\n      }\n    };\n\n    const borderObserver = MH.newResizeObserver(resizeHandler);\n    const contentObserver = MH.newResizeObserver(resizeHandler);\n    if (!borderObserver || !contentObserver) {\n      logWarn(\n        \"This browser does not support ResizeObserver. Some features won't work.\",\n      );\n    }\n\n    const observeTarget = (target: Element) => {\n      observedTargets.add(target);\n      borderObserver?.observe(target, { box: \"border-box\" });\n      contentObserver?.observe(target);\n    };\n\n    // --------------------\n\n    this.observe = (...targets) => {\n      debug: logger?.debug10(\"Observing targets\", targets);\n\n      for (const target of targets) {\n        observeTarget(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      debug: logger?.debug10(\"Observing targets (later)\", targets);\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.set(target, 2);\n        observeTarget(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      debug: logger?.debug10(\"Unobserving targets\", targets);\n\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        borderObserver?.unobserve(target);\n        contentObserver?.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      debug: logger?.debug10(\"Disconnecting\");\n      observedTargets = MH.newWeakSet();\n      borderObserver?.disconnect();\n      contentObserver?.disconnect();\n    };\n  }\n}\n","/**\n * @module Watchers/SizeWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size, SizeTarget } from \"@lisn/globals/types\";\n\nimport { setNumericStyleJsVars } from \"@lisn/utils/css-alter\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum } from \"@lisn/utils/math\";\nimport {\n  isValidBox,\n  isValidDimension,\n  getEntryBorderBox,\n  getEntryContentBox,\n  tryGetViewportOverlay,\n  fetchViewportOverlay,\n} from \"@lisn/utils/size\";\nimport { objToStrKey } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XResizeObserver } from \"@lisn/modules/x-resize-observer\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link SizeWatcher} monitors the size of a given target. It's built on top\n * of {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}.\n *\n * It manages registered callbacks globally and reuses ResizeObservers.\n *\n * Each instance of SizeWatcher manages up to two ResizeObservers: one\n * for content-box size changes and one for border-box size changes.\n */\nexport class SizeWatcher {\n  /**\n   * Call the given handler whenever the target's size changes.\n   *\n   * Unless {@link OnResizeOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest size data.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly onResize: (\n    handler: OnResizeHandler,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offResize: (handler: OnResizeHandler, target?: SizeTarget) => void;\n\n  /**\n   * This is the same as {@link onResize} except that if `handler` is not given,\n   * then it defaults to an  handler that updates a set of CSS variables on the\n   * target's style:\n   *\n   * - If {@link OnResizeOptions.target | options.target} is not given, or is\n   *   `window`, the following CSS variables are set on the root (`html`)\n   *   element and represent the viewport size:\n   *   - `--lisn-js--window-border-width`\n   *   - `--lisn-js--window-border-height`\n   *   - `--lisn-js--window-content-width`\n   *   - `--lisn-js--window-content-height`\n   *\n   * - Otherwise, the following variables are set on the target itself and\n   *   represent its visible size:\n   *   - `--lisn-js--border-width`\n   *   - `--lisn-js--border-height`\n   *   - `--lisn-js--content-width`\n   *   - `--lisn-js--content-height`\n   *\n   * If `target` is `document`, then it will use `document.documentElement`.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly trackSize: (\n    handler?: OnResizeHandler | null,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackSize}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackSize: (\n    handler?: OnResizeHandler | null,\n    target?: SizeTarget,\n  ) => void;\n\n  /**\n   * Get the size of the given target. It will get the size from a\n   * ResizeObserverEntry and so it's always delayed by one frame at least.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly fetchCurrentSize: (target?: SizeTarget) => Promise<SizeData>;\n\n  /**\n   * Creates a new instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: SizeWatcherConfig) {\n    return new SizeWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: SizeWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new SizeWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: SizeWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"SizeWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"SizeWatcher\", logAtCreation: config })\n      : null;\n\n    const allSizeData = MH.newWeakMap<Element, SizeData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnResizeHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    // Don't debounce the observer, only callbacks.\n    const xObserver = new XResizeObserver(resizeHandler);\n\n    // ----------\n\n    const fetchCurrentSize = async (\n      target: SizeTarget | undefined,\n    ): Promise<SizeData> => {\n      const element = await fetchElement(target);\n      const sizeData = allSizeData.get(element);\n      if (sizeData) {\n        return MH.copyObject(sizeData);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp ResizeObserver\n        const observer = MH.newResizeObserver((entries) => {\n          const sizeData = getSizeData(entries[0]);\n          observer?.disconnect();\n          resolve(sizeData); // no need to copy or save it\n        });\n\n        if (observer) {\n          observer.observe(element);\n        } else {\n          // Warning would have already been logged by XResizeObserver\n          resolve({\n            border: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n            content: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n          });\n        }\n      });\n    };\n\n    // ----------\n\n    const fetchOptions = async (\n      options: OnResizeOptions,\n    ): Promise<OnResizeOptionsInternal> => {\n      const box = options.box ?? null;\n      if (box && !isValidBox(box)) {\n        throw MH.usageError(`Unknown box type: '${box}'`);\n      }\n\n      const dimension = options.dimension ?? null;\n      if (dimension && !isValidDimension(dimension)) {\n        throw MH.usageError(`Unknown dimension: '${dimension}'`);\n      }\n\n      return {\n        _element: await fetchElement(MH.targetOf(options)),\n        _box: box,\n        _dimension: dimension,\n        // If threshold is 0, internally treat as 1 (pixel)\n        _threshold:\n          toNonNegNum(options.threshold, config._resizeThreshold) || 1,\n        _debounceWindow:\n          options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n      };\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = { _callback: callback, _options: options };\n      allCallbacks.sGet(element).set(handler, entry);\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnResize = async (\n      handler: OnResizeHandler,\n      userOptions: OnResizeOptions | undefined,\n    ) => {\n      const options = await fetchOptions(userOptions ?? {});\n      const element = options._element;\n\n      // Don't await for the size data before creating the callback so that\n      // setupOnResize and removeOnResize have the same \"timing\" and therefore\n      // calling onResize and offResize immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options);\n      const callback = entry._callback;\n      const sizeData = await fetchCurrentSize(element);\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = sizeData;\n      allSizeData.set(element, sizeData);\n\n      // Always use observeLater. This is because the initial call to callback\n      // shouldn't be debounced, and so we call it manually here, regardless if\n      // it's a new target or not. Therefore we don't want the observer to also\n      // call it in case it _is_ a new target.\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, sizeData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, sizeData);\n      }\n    };\n\n    // ----------\n\n    const removeOnResize = async (\n      handler: OnResizeHandler,\n      target: SizeTarget | undefined,\n    ) => {\n      const options = await fetchOptions({ target });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setSizeCssProps) {\n          // delete the properties\n          setSizeCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ) => {\n      const element = options._element;\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n        xObserver.unobserve(element);\n        MH.deleteKey(allSizeData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = (entry: ResizeObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      const latestData = getSizeData(entry);\n      allSizeData.set(element, latestData);\n\n      debug: logger?.debug9(\"New size data\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        const thresholdsExceeded = hasExceededThreshold(\n          entry._options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\"Threshold not exceeded\");\n          continue;\n        }\n\n        entry._data = latestData;\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentSize = fetchCurrentSize;\n\n    // ----------\n\n    this.trackSize = async (handler?, options?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      return setupOnResize(handler, options);\n    };\n\n    // ----------\n\n    this.noTrackSize = (handler?, target?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      removeOnResize(handler, target); // no need to await\n    };\n\n    // ----------\n\n    this.onResize = setupOnResize;\n\n    // ----------\n\n    this.offResize = (handler, target?) => {\n      removeOnResize(handler, target); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type SizeWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnResizeOptions.debounceWindow | debounceWindow} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnResizeOptions.threshold | threshold} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 50\n   */\n  resizeThreshold?: number;\n};\n\n/**\n * @interface\n */\nexport type OnResizeOptions = {\n  /**\n   * If it is not given, or is `null` or `window`, then it will track the size\n   * of the viewport (akin to `clientHeight` on `documentElement`).\n   *\n   * If it is `document`, then it will use `document.documentElement`.\n   *\n   * Other values of target must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  target?: SizeTarget;\n\n  /**\n   * Specifies whether to listen for changes in content box size or border box\n   * size.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  box?: Box;\n\n  /**\n   * Specifies whether to listen for changes in width or height.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  dimension?: Dimension;\n\n  /**\n   * If non-0, the handler will only be called when the target's size in the\n   * observed {@link OnResizeOptions.dimension} and {@link OnResizeOptions.box}\n   * type has changed at least `threshold` pixels since the last time the\n   * handler was called.\n   *\n   * Special case when `threshold` is 0 and at least one of\n   * {@link OnResizeOptions.dimension} or {@link OnResizeOptions.box} is given:\n   * if there's a resize event but the size in the observed dimensions/box\n   * types has not changed, the callback is _not_ called.\n   *\n   * @defaultValue {@link SizeWatcherConfig.resizeThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * @defaultValue {@link SizeWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * The handler is invoked with three arguments:\n *\n * - the element that has been resized: if the target you requested was the\n *   viewport, then this will be a fixed positioned overlay that tracks the\n *   size of the viewport\n * - the {@link SizeData} for the element\n */\nexport type OnResizeHandlerArgs = [Element, SizeData];\nexport type OnResizeCallback = Callback<OnResizeHandlerArgs>;\nexport type OnResizeHandler =\n  | CallbackHandler<OnResizeHandlerArgs>\n  | OnResizeCallback;\n\nexport type SizeData = Record<Box, Size>;\n\n// ----------------------------------------\n\ntype SizeWatcherConfigInternal = {\n  _debounceWindow: number;\n  _resizeThreshold: number;\n};\n\ntype OnResizeOptionsInternal = {\n  _element: Element;\n  _box: Box | null;\n  _dimension: Dimension | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnResizeCallback;\n  _options: OnResizeOptionsInternal;\n  _data?: SizeData;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, SizeWatcher>();\n\nconst getConfig = (\n  config: SizeWatcherConfig | undefined,\n): SizeWatcherConfigInternal => {\n  config ??= {};\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _resizeThreshold: toNonNegNum(config.resizeThreshold, 50) || 1,\n  };\n};\n\n// --------------------\n\nconst hasExceededThreshold = (\n  options: OnResizeOptionsInternal,\n  latestData: SizeData,\n  lastThresholdData: SizeData | undefined,\n): boolean => {\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  let box: Box, dim: Dimension;\n  for (box in latestData) {\n    if (options._box && options._box !== box) {\n      continue;\n    }\n\n    for (dim in latestData[box]) {\n      if (options._dimension && options._dimension !== dim) {\n        continue;\n      }\n\n      const diff = MH.abs(latestData[box][dim] - lastThresholdData[box][dim]);\n      if (diff >= options._threshold) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nconst getSizeData = (entry: ResizeObserverEntry): SizeData => {\n  const borderBox = getEntryBorderBox(entry, true);\n  const contentBox = getEntryContentBox(entry);\n\n  return {\n    border: borderBox,\n    content: contentBox,\n  };\n};\n\nconst setSizeCssProps = (\n  element: Element,\n  sizeData: SizeData | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetViewportOverlay()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"window-\";\n  }\n\n  const props = {\n    borderWidth: sizeData?.border[MC.S_WIDTH],\n    borderHeight: sizeData?.border[MC.S_HEIGHT],\n    contentWidth: sizeData?.content[MC.S_WIDTH],\n    contentHeight: sizeData?.content[MC.S_HEIGHT],\n  };\n  setNumericStyleJsVars(element, props, { _prefix: prefix }); // don't await here\n};\n\nconst fetchElement = async (\n  target: SizeTarget | undefined,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  }\n\n  if (!target || target === MH.getWindow()) {\n    return fetchViewportOverlay();\n  }\n\n  if (target === MH.getDoc()) {\n    return MH.getDocElement();\n  }\n\n  throw MH.usageError(\"Unsupported resize target\");\n};\n\nconst invokeCallback = (\n  callback: OnResizeCallback,\n  element: Element,\n  sizeData: SizeData,\n) => callback.invoke(element, MH.copyObject(sizeData)).catch(logError);\n","/**\n * @module Watchers/LayoutWatcher\n */\n\n// NOTES FOR DEVELOPERS\n//\n// For each layout (device or aspect ratio), we create an overlay that has a\n// a width that corresponds to the layout:\n//  - for device layouts, it's a fixed width in pixels, equal to the minimum\n//    width of the device\n//  - for aspect ratio layouts, the overlay has a width that's relative to\n//    the root's height, equal to the minimum width of the aspect ratio\n//\n// Then we observe each overlay with an IntersectionObserver whose root\n// is this Watcher's root and whose root margin is -100% from the left (i.e.\n// right-most edge of the root).\n//\n// If the root is null, i.e. the viewport, the overlays will have a \"fixed\"\n// position and be inserted in document.body. Otherwise, they'll be inserted\n// in the root element with an \"absolute\" position. The root element, if not\n// body must be positioned. It gets a default position of \"relative\" through\n// the class `.lisn-overlay-container`, which Overlays ensures it gets.\n//\n// If using custom root we track its size through SizeWatcher as the\n// aspectRatio overlays are relative to the height, and we can't rely on CSS\n// alone as the root may not have a fixed height through CSS.\n//\n// Whenever any overlay intersects the root, this means that the viewport\n// width is now equal to or narrower than the overlay.\n//\n// ~~~~ The current device or aspect ratio corresponds to the _widest_\n// ~~~~ overlay that does not intersect.\n//\n// For example:\n//\n// | mobile\n// ========| mobile-wide\n// ======================| tablet\n// =========================================| desktop\n//\n// _________________________________| viewport width\n//\n// Here, mobile, mobile-wide and tablet overlays are _not_ intersecting, only\n// desktop intersects. The device layout is therefore tablet.\n//\n// Therefore:\n// - have the layout bit spaces ordered from narrowest layout at lowest bit\n//   to widest layout at hightest bit\n// - keep a running bitmask of which overlays are not intersecting and update\n//   it each time there is an IntersectionObserverEntry.\n// - get the highest device or aspect ratio bit in that bitmask to find out\n//   the widest non-intersecting overlay\n//\n// For simplicity we create overlays also for layouts that have a 0-width.\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  Layout,\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport {\n  getLayoutBitmask,\n  NUM_LAYOUTS,\n  ORDERED_DEVICES,\n  ORDERED_ASPECTR,\n} from \"@lisn/utils/layout\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { omitKeys, copyExistingKeys } from \"@lisn/utils/misc\";\nimport { createOverlay } from \"@lisn/utils/overlays\";\nimport { objToStrKey } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link LayoutWatcher} listens for changes in either the width or aspect\n * ratio of the viewport or the given {@link LayoutWatcherConfig.root | root}.\n *\n * It does not track resize events; rather it's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class LayoutWatcher {\n  /**\n   * Call the given handler whenever the layout changes.\n   *\n   * Unless {@link OnLayoutOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current layout.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times, even if\n   * the options differ. If the handler has already been added, it is removed\n   * and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onLayout: (\n    handler: OnLayoutHandler,\n    options?: OnLayoutOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offLayout: (handler: OnLayoutHandler) => void;\n\n  /**\n   * Get the current screen layout.\n   */\n  readonly fetchCurrentLayout: () => Promise<LayoutData>;\n\n  /**\n   * Creates a new instance of LayoutWatcher with the given\n   * {@link LayoutWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: LayoutWatcherConfig) {\n    return new LayoutWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of LayoutWatcher with the given\n   * {@link LayoutWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: LayoutWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new LayoutWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: LayoutWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"LayoutWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"LayoutWatcher\", logAtCreation: config })\n      : null;\n    let nonIntersectingBitmask = 0;\n    let currentLayoutData: LayoutData = {\n      device: null,\n      aspectRatio: null,\n    };\n\n    const allCallbacks = MH.newMap<\n      OnLayoutHandler,\n      {\n        _callback: OnLayoutCallback;\n        _layoutBitmask: number;\n      }\n    >();\n\n    // ----------\n\n    const fetchCurrentLayout = async (): Promise<LayoutData> => {\n      await readyPromise;\n\n      return MH.copyObject(currentLayoutData);\n    };\n\n    // ----------\n\n    const setupOverlays = async () => {\n      const { root, overlays } = await createOverlays(\n        config._root,\n        config._deviceBreakpoints,\n        config._aspectRatioBreakpoints,\n      );\n\n      return MH.newPromise<void>((resolve) => {\n        let isReady = false;\n\n        const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n          const numEntries = MH.lengthOf(entries);\n          debug: logger?.debug9(`Got ${numEntries} new entries`, entries);\n\n          if (!isReady) {\n            /* istanbul ignore next */ // shouldn't happen\n            if (numEntries < NUM_LAYOUTS) {\n              logWarn(\n                MH.bugError(\n                  `Got IntersectionObserver ${numEntries}, ` +\n                    `expected >= ${NUM_LAYOUTS}`,\n                ),\n              );\n            }\n          }\n\n          for (const entry of entries) {\n            nonIntersectingBitmask = getNonIntersecting(\n              nonIntersectingBitmask,\n              entry,\n            );\n          }\n\n          // If this is the initial call from IntersectionObserver, skip callbacks.\n          // Those that have skipInitial: false would be called elsewhere, by\n          // setupOnLayout\n          processLayoutChange(!isReady);\n          isReady = true;\n          resolve(); // ready after IntersectionObserver has called us the 1st time\n        };\n\n        // ----------\n\n        const observeOptions = {\n          root,\n          rootMargin: \"5px 0% 5px -100%\",\n        };\n\n        const observer = MH.newIntersectionObserver(\n          intersectionHandler,\n          observeOptions,\n        );\n\n        for (const triggerOverlay of overlays) {\n          observer.observe(triggerOverlay);\n        }\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnLayoutHandler,\n      layoutBitmask: number,\n    ): OnLayoutCallback => {\n      MH.remove(allCallbacks.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", layoutBitmask);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler);\n      });\n\n      allCallbacks.set(handler, {\n        _callback: callback,\n        _layoutBitmask: layoutBitmask,\n      });\n      return callback;\n    };\n\n    const setupOnLayout = async (\n      handler: OnLayoutHandler,\n      options: OnLayoutOptions | undefined,\n    ) => {\n      const layoutBitmask = getLayoutBitmask(options);\n      const callback = createCallback(handler, layoutBitmask);\n\n      if (options?.skipInitial) {\n        return;\n      }\n\n      const layoutData = await fetchCurrentLayout();\n\n      if (\n        !callback.isRemoved() &&\n        changeMatches(layoutBitmask, layoutData, null)\n      ) {\n        debug: logger?.debug5(\"Calling initially with\", layoutData);\n        await invokeCallback(callback, layoutData);\n      }\n    };\n\n    const deleteHandler = (handler: OnLayoutHandler) => {\n      MH.deleteKey(allCallbacks, handler);\n      // no need to unobserve the overlays\n    };\n\n    const processLayoutChange = (skipCallbacks: boolean) => {\n      const deviceBit = MH.floor(\n        MH.log2(nonIntersectingBitmask & ORDERED_DEVICES.bitmask),\n      );\n\n      const aspectRatioBit = MH.floor(\n        MH.log2(nonIntersectingBitmask & ORDERED_ASPECTR.bitmask),\n      );\n\n      const layoutData: LayoutData = { device: null, aspectRatio: null };\n\n      // -Infinity means all of the overlays are intersecting, which would only\n      // happen if the narrowest overlay is not actually 0-width (which is not the\n      // case by default and against the recommended settings).\n      if (deviceBit !== -MC.INFINITY) {\n        layoutData.device = ORDERED_DEVICES.nameOf(1 << deviceBit);\n      }\n      if (aspectRatioBit !== -MC.INFINITY) {\n        layoutData.aspectRatio = ORDERED_ASPECTR.nameOf(1 << aspectRatioBit);\n      }\n\n      debug: logger?.debug8(\"New layout\", layoutData);\n\n      if (!skipCallbacks) {\n        for (const entry of allCallbacks.values()) {\n          const layoutBitmask = entry._layoutBitmask;\n          if (!changeMatches(layoutBitmask, layoutData, currentLayoutData)) {\n            debug: logger?.debug9(\n              `Layout change does not match bitmask ${layoutBitmask}`,\n            );\n            continue;\n          }\n\n          invokeCallback(entry._callback, layoutData);\n        }\n      }\n\n      currentLayoutData = layoutData;\n    };\n\n    const readyPromise = setupOverlays(); // no need to await\n\n    // ----------\n\n    this.fetchCurrentLayout = fetchCurrentLayout;\n\n    // ----------\n\n    this.onLayout = setupOnLayout;\n\n    // ----------\n\n    this.offLayout = (handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type LayoutWatcherConfig = {\n  /**\n   * The root element whose layout to watch. If not given or `null`, then the\n   * viewport layout is watched.\n   *\n   * @defaultValue null\n   */\n  root?: HTMLElement | null;\n\n  /**\n   * Use custom device breakpoints. Only known device names ({@link Device})\n   * are supported. If any are missing from the given dictionary, the value\n   * from {@link settings.deviceBreakpoints} is used.\n   *\n   * @defaultValue {@link settings.deviceBreakpoints}\n   */\n  deviceBreakpoints?: typeof settings.deviceBreakpoints;\n\n  /**\n   * Use custom aspect ratio breakpoints. Only known aspect ratio names\n   * ({@link AspectRatio}) are supported. If any are missing from the given\n   * dictionary, the value from {@link settings.aspectRatioBreakpoints} is\n   * used.\n   *\n   * @defaultValue {@link settings.aspectRatioBreakpoints}\n   */\n  aspectRatioBreakpoints?: typeof settings.aspectRatioBreakpoints;\n};\n\n/**\n * @interface\n */\nexport type OnLayoutOptions = {\n  /**\n   * Specifies a list of {@link Device}s to target for.\n   *\n   * The handler will only be called if there is a change of device to a device\n   * matching the specification.\n   *\n   * It can be:\n   * - \"min <Device>\": devices at least as wide as `<Device>`\n   * - \"max <Device>\": devices at most as wide as `<Device>`\n   * - \"<DeviceMin> to <DeviceMax>\": devices at least as wide as `<DeviceMin>`\n   *                                 and at most as wide as `<DeviceMax>`\n   * - a comma-separated list of device names\n   * - an array of device names\n   *\n   * **NOTE**\n   *\n   * If only one of {@link devices} or {@link aspectRatios} is specified, the\n   * handler will only be called for matching changes of device or aspect ratio\n   * respectively.\n   *\n   * If neither is specified, the handler will be called for any change of layout\n   * (device or aspect ratio).\n   *\n   * Also note that an empty array is treated the same as not given, or `null`.\n   *\n   * @defaultValue undefined\n   */\n  devices?: DeviceSpec | Device[];\n\n  /**\n   * Specifies a list of {@link AspectRatio}s to target for.\n   *\n   * The handler will only be called if there is a change of aspect ratio to\n   * an aspect ratios matching the specification.\n   *\n   * It can be:\n   * - \"min <AspectRatio>\": aspect ratios at least as wide as `<AspectRatio>`\n   * - \"max <AspectRatio>\": aspect ratios at most as wide as `<AspectRatio>`\n   * - \"<AspectRatioMin> to <AspectRatioMax>\": aspect ratios at least as wide\n   *                        as `<AspectRatioMin>` and at most as wide as\n   *                        `<AspectRatioMax>`\n   * - a comma-separated list of aspect ratio names\n   * - an array of aspect ratio names\n   *\n   * **NOTE**\n   *\n   * If only one of {@link devices} or {@link aspectRatios} is specified, the\n   * handler will only be called for matching changes of device or aspect ratio\n   * respectively.\n   *\n   * If neither is specified, the handler will be called for any change of layout\n   * (device or aspect ratio).\n   *\n   * @defaultValue undefined\n   */\n  aspectRatios?: AspectRatioSpec | AspectRatio[];\n\n  /**\n   * Do not call the handler until there's a future change of layout.\n   *\n   * By default, we call the handler (almost) immediately with the current\n   * layout data if it matches the given {@link devices} and {@link aspectRatios}.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with one argument:\n *\n * - the current {@link LayoutData}\n */\nexport type OnLayoutHandlerArgs = [LayoutData];\nexport type OnLayoutCallback = Callback<OnLayoutHandlerArgs>;\nexport type OnLayoutHandler =\n  | CallbackHandler<OnLayoutHandlerArgs>\n  | OnLayoutCallback;\n\n/**\n * Note that {@link device} or {@link aspectRatio} would only be null if the\n * viewport is narrower than the narrowest device/aspect ratio. This would only\n * happen if the narrowest device/aspect ratio is _not_ 0-width (which is not\n * the case with the default breakpoints and is against the recommendation for\n * setting breakpoints.\n */\nexport type LayoutData = {\n  device: Device | null;\n  aspectRatio: AspectRatio | null;\n};\n\n// ----------------------------------------\n\ntype LayoutWatcherConfigInternal = {\n  _root: HTMLElement | null;\n  _deviceBreakpoints: typeof settings.deviceBreakpoints;\n  _aspectRatioBreakpoints: typeof settings.aspectRatioBreakpoints;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<HTMLElement | null, Map<string, LayoutWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst VAR_BORDER_HEIGHT = MH.prefixCssJsVar(\"border-height\");\nconst PREFIX_DEVICE = MH.prefixName(\"device\");\nconst PREFIX_ASPECTR = MH.prefixName(\"aspect-ratio\");\n\nconst getConfig = (\n  config: LayoutWatcherConfig | undefined,\n): LayoutWatcherConfigInternal => {\n  const deviceBreakpoints = MH.copyObject(settings.deviceBreakpoints);\n  if (config?.deviceBreakpoints) {\n    copyExistingKeys(config.deviceBreakpoints, deviceBreakpoints);\n  }\n\n  const aspectRatioBreakpoints = MH.copyObject(settings.aspectRatioBreakpoints);\n\n  if (config?.aspectRatioBreakpoints) {\n    copyExistingKeys(config.aspectRatioBreakpoints, aspectRatioBreakpoints);\n  }\n\n  return {\n    _root: config?.root || null,\n    _deviceBreakpoints: deviceBreakpoints,\n    _aspectRatioBreakpoints: aspectRatioBreakpoints,\n  };\n};\n\n// ----------------------------------------\n\nconst createOverlays = async (\n  root: HTMLElement | null,\n  deviceBreakpoints: typeof settings.deviceBreakpoints,\n  aspectRatioBreakpoints: typeof settings.aspectRatioBreakpoints,\n) => {\n  const overlayPromises = [];\n\n  let overlayParent: HTMLElement;\n  if (root) {\n    overlayParent = root;\n  } else {\n    // Since modals remove the scrollbar on the body when active, the width of\n    // the body changes upon open/close of a modal, which would create\n    // glitching if it happens near a device breakpoint. So if the root is the\n    // viewport, we create a fixed positioned container to hold the overlays\n    // and set its width to be 100vw and use that as the root of\n    overlayParent = await createOverlay({\n      style: {\n        position: \"fixed\",\n        [MC.S_WIDTH]: \"100vw\",\n      },\n    });\n  }\n\n  let device: Device;\n  for (device in deviceBreakpoints) {\n    overlayPromises.push(\n      createOverlay({\n        parent: overlayParent,\n        style: {\n          position: \"absolute\",\n          [MC.S_WIDTH]: deviceBreakpoints[device] + \"px\",\n        },\n        data: {\n          [PREFIX_DEVICE]: device,\n        },\n      }),\n    );\n  }\n\n  const parentHeightCss = root ? `var(${VAR_BORDER_HEIGHT}, 0) * 1px` : \"100vh\";\n  if (root) {\n    SizeWatcher.reuse().trackSize(null, { target: root });\n  }\n\n  let aspectRatio: AspectRatio;\n  for (aspectRatio in aspectRatioBreakpoints) {\n    overlayPromises.push(\n      createOverlay({\n        parent: overlayParent,\n        style: {\n          position: \"absolute\",\n          [MC.S_WIDTH]:\n            `calc(${aspectRatioBreakpoints[aspectRatio]} ` +\n            `* ${parentHeightCss})`,\n        },\n        data: {\n          [PREFIX_ASPECTR]: aspectRatio,\n        },\n      }),\n    );\n  }\n\n  const overlays = await MH.promiseAll(overlayPromises);\n  return { root: overlayParent, overlays };\n};\n\nconst getOverlayLayout = (overlay: HTMLElement): Layout | null => {\n  const layout =\n    getData(overlay, PREFIX_DEVICE) || getData(overlay, PREFIX_ASPECTR);\n  /* istanbul ignore else */\n  if (layout && (ORDERED_DEVICES.has(layout) || ORDERED_ASPECTR.has(layout))) {\n    return layout;\n  } else {\n    // shouldn't happen\n    logError(MH.bugError(\"No device or aspectRatio data attribute\"));\n    return null;\n  }\n};\n\nconst changeMatches = (\n  layoutBitmask: number,\n  thisLayoutData: LayoutData,\n  prevLayoutData: LayoutData | undefined | null,\n): boolean => {\n  // True if the callback is interested in a change of device and there's a\n  // change of device and the new device is one of the ones it's interested in\n  // (or it's null, i.e. device is undefined).\n  // And the same for aspect ratios.\n\n  if (\n    prevLayoutData?.device !== thisLayoutData.device &&\n    (!thisLayoutData.device ||\n      ORDERED_DEVICES.bit[thisLayoutData.device] & layoutBitmask)\n  ) {\n    return true;\n  }\n\n  if (\n    prevLayoutData?.aspectRatio !== thisLayoutData.aspectRatio &&\n    (!thisLayoutData.aspectRatio ||\n      ORDERED_ASPECTR.bit[thisLayoutData.aspectRatio] & layoutBitmask)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nconst getNonIntersecting = (\n  nonIntersectingBitmask: number, // current\n  entry: IntersectionObserverEntry,\n): number => {\n  const target = MH.targetOf(entry);\n  /* istanbul ignore next */ // shouldn't happen\n  if (!MH.isHTMLElement(target)) {\n    logError(\n      MH.bugError(\n        `IntersectionObserver called us with '${MH.typeOrClassOf(target)}'`,\n      ),\n    );\n    return nonIntersectingBitmask;\n  }\n\n  const layout = getOverlayLayout(target);\n  let bit = 0;\n  if (!layout) {\n    // error already logged by getOverlayLayout\n  } else if (ORDERED_DEVICES.has(layout)) {\n    bit = ORDERED_DEVICES.bit[layout];\n  } else if (ORDERED_ASPECTR.has(layout)) {\n    bit = ORDERED_ASPECTR.bit[layout];\n  } else {\n    /* istanbul ignore next */ // shouldn't happen\n    logError(\n      MH.bugError(`Unknown device or aspectRatio data attribute: ${layout}`),\n    );\n  }\n\n  if (entry.isIntersecting) {\n    nonIntersectingBitmask &= ~bit;\n  } else {\n    nonIntersectingBitmask |= bit;\n  }\n\n  return nonIntersectingBitmask;\n};\n\nconst invokeCallback = (callback: OnLayoutCallback, layoutData: LayoutData) =>\n  callback.invoke(MH.copyObject(layoutData)).catch(logError);\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { PointerAction } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * Returns true if the given string is a valid pointer action.\n *\n * @category Validation\n */\nexport const isValidPointerAction = (action: string): action is PointerAction =>\n  MH.includes(POINTER_ACTIONS, action);\n\n/**\n * Returns true if the given string or array is a valid list of pointer\n * actions.\n *\n * @category Validation\n */\nexport const isValidPointerActionList = (actions: string | string[]) =>\n  isValidStrList(actions, isValidPointerAction, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const POINTER_ACTIONS: PointerAction[] = [\n  MC.S_CLICK,\n  MC.S_HOVER,\n  MC.S_PRESS,\n] as const;\n","/**\n * @module Watchers/PointerWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { PointerAction, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { isValidPointerAction, POINTER_ACTIONS } from \"@lisn/utils/pointer\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * {@link PointerWatcher} listens for simple pointer actions like clicks, press\n * and hold or hover.\n */\nexport class PointerWatcher {\n  /**\n   * Call the `startHandler` whenever the pointer action begins.\n   * Call the `endHandler` whenever the pointer action ends. If `endHandler` is\n   * not given, it defaults to `startHandler`.\n   *\n   * For an explanation of what \"begins\" and \"ends\" means for each supported\n   * action, see {@link OnPointerOptions.actions}.\n   *\n   * **IMPORTANT:** The same handlers can _not_ be added multiple times for the\n   * same event target, even if the options differ. If the handler has already\n   * been added for this target, then it will be removed and re-added with the\n   * current options.\n   */\n  readonly onPointer: (\n    target: EventTarget,\n    startHandler: OnPointerHandler,\n    endHandler?: OnPointerHandler,\n    options?: OnPointerOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes previously added handlers.\n   */\n  readonly offPointer: (\n    target: EventTarget,\n    startHandler: OnPointerHandler,\n    endHandler?: OnPointerHandler,\n  ) => void;\n\n  /**\n   * Creates a new instance of PointerWatcher with the given\n   * {@link PointerWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: PointerWatcherConfig) {\n    return new PointerWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of PointerWatcher with the given\n   * {@link PointerWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: PointerWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new PointerWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: PointerWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"PointerWatcher.create\");\n    }\n\n    // Keep this watcher super simple. The events we listen for don't fire at a\n    // high rate and it's unlikely for there to be many many callbacks for each\n    // target and event type, so don't bother with using a delegating listener,\n    // etc.\n\n    // Keep a map of callbacks so we can lookup the callback by the handler\n    // (and also to prevent duplicate handler for each target, for consistency\n    // with other watchers).\n    const allCallbacks = newXWeakMap<\n      EventTarget,\n      Map<OnPointerHandler, OnPointerCallback>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const createCallback = (\n      target: EventTarget,\n      handler: OnPointerHandler,\n    ): OnPointerCallback => {\n      MH.remove(allCallbacks.get(target)?.get(handler));\n\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        MH.deleteKey(allCallbacks.get(target), handler);\n      });\n\n      allCallbacks.sGet(target).set(handler, callback);\n      return callback;\n    };\n\n    // async for consistency with other watchers and future compatibility in\n    // case of change needed\n    const setupOnPointer = async (\n      target: EventTarget,\n      startHandler: OnPointerHandler,\n      endHandler: OnPointerHandler | undefined,\n      userOptions: OnPointerOptions | undefined,\n    ) => {\n      const options = getOptions(config, userOptions);\n      const startCallback = createCallback(target, startHandler);\n      const endCallback =\n        endHandler && endHandler !== startHandler\n          ? createCallback(target, endHandler)\n          : startCallback;\n\n      for (const action of options._actions) {\n        listenerSetupFn[action](target, startCallback, endCallback, options);\n      }\n    };\n\n    // ----------\n\n    this.onPointer = setupOnPointer;\n\n    // ----------\n\n    this.offPointer = (target, startHandler, endHandler?) => {\n      const entry = allCallbacks.get(target);\n      MH.remove(entry?.get(startHandler));\n      if (endHandler) {\n        MH.remove(entry?.get(endHandler));\n      }\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type PointerWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnPointerOptions.preventDefault | preventDefault} in calls to\n   * {@link PointerWatcher.onPointer}.\n   *\n   * @defaultValue false\n   */\n  preventDefault?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnPointerOptions.preventSelect | preventSelect} in calls to\n   * {@link PointerWatcher.onPointer}.\n   *\n   * @defaultValue true\n   */\n  preventSelect?: boolean;\n};\n\n/**\n * @interface\n */\nexport type OnPointerOptions = {\n  /**\n   * One or more of of \"click\", \"hover\" or \"press\". If not specified, then all\n   * actions are enabled.\n   *\n   * It can be a comma-separated list of {@link PointerAction}s or an array of\n   * such actions.\n   *\n   * For click actions, the start handler is called for every odd number of\n   * clicks (1st, 3rd, 5th, etc), and the end handler is called for every other\n   * click. It functions like a toggle.\n   *\n   * For hover and press actions, the start handler is called when the pointer\n   * enters or presses down on the target respectively, and the end handler is\n   * called when the pointer leaves or comes off the target respectively.\n   *\n   * Note that on touch screens, hover and press actions behave identically.\n   *\n   * @defaultValue undefined\n   */\n  actions?: CommaSeparatedStr<PointerAction> | PointerAction[];\n\n  /**\n   * If true, the events of the pointer actions, e.g. click, will have their\n   * default action prevented.\n   *\n   * @defaultValue {@link PointerWatcherConfig.preventDefault}\n   */\n  preventDefault?: boolean;\n\n  /**\n   * If true (default), then for press actions (and hover actions on touch\n   * screens) it will prevent starting a text selection.\n   *\n   * @defaultValue {@link PointerWatcherConfig.preventSelect}\n   */\n  preventSelect?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the event target that was passed to the {@link PointerWatcher.onPointer}\n *   call (equivalent to\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget | Event:currentTarget}).\n * - the {@link PointerActionData} describing the state of the action.\n */\nexport type OnPointerHandlerArgs = [EventTarget, PointerActionData, Event];\nexport type OnPointerCallback = Callback<OnPointerHandlerArgs>;\nexport type OnPointerHandler =\n  | CallbackHandler<OnPointerHandlerArgs>\n  | OnPointerCallback;\n\nexport type PointerActionData = {\n  action: PointerAction;\n  state: \"ON\" | \"OFF\";\n};\n\n// ----------------------------------------\n\ntype PointerWatcherConfigInternal = {\n  _preventDefault: boolean;\n  _preventSelect: boolean;\n};\n\ntype OnPointerOptionsInternal = {\n  _actions: PointerAction[];\n  _preventDefault: boolean;\n  _preventSelect: boolean;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, PointerWatcher>();\n\nconst getConfig = (\n  config: PointerWatcherConfig | undefined,\n): PointerWatcherConfigInternal => {\n  return {\n    _preventDefault: config?.preventDefault ?? false,\n    _preventSelect: config?.preventSelect ?? true,\n  };\n};\n\nconst getOptions = (\n  config: PointerWatcherConfigInternal,\n  options: OnPointerOptions | undefined,\n): OnPointerOptionsInternal => {\n  return {\n    _actions:\n      validateStrList(\"actions\", options?.actions, isValidPointerAction) ||\n      POINTER_ACTIONS,\n    _preventDefault: options?.preventDefault ?? config._preventDefault,\n    _preventSelect: options?.preventSelect ?? config._preventSelect,\n  };\n};\n\nconst setupClickListener = (\n  target: EventTarget,\n  startCallback: OnPointerCallback,\n  endCallback: OnPointerCallback,\n  options: OnPointerOptionsInternal,\n) => {\n  // false if next will start; true if next will end.\n  let toggleState = false;\n\n  const wrapper = (event: Event) => {\n    if (options._preventDefault) {\n      MH.preventDefault(event);\n    }\n\n    toggleState = !toggleState;\n\n    const data: PointerActionData = {\n      action: MC.S_CLICK,\n      state: toggleState ? \"ON\" : \"OFF\",\n    };\n\n    invokeCallback(\n      toggleState ? startCallback : endCallback,\n      target,\n      data,\n      event,\n    );\n  };\n\n  addEventListenerTo(target, MC.S_CLICK, wrapper);\n\n  const remove = () => removeEventListenerFrom(target, MC.S_CLICK, wrapper);\n\n  startCallback.onRemove(remove);\n  endCallback.onRemove(remove);\n};\n\nconst setupPointerListeners = (\n  action: typeof MC.S_HOVER | typeof MC.S_PRESS,\n  target: EventTarget,\n  startCallback: OnPointerCallback,\n  endCallback: OnPointerCallback,\n  options: OnPointerOptionsInternal,\n) => {\n  // If the browser doesn't support pointer events, then\n  // addEventListenerTo will transform these into mouse*\n  const startEventSuff = action === MC.S_HOVER ? \"enter\" : \"down\";\n  const endEventSuff = action === MC.S_HOVER ? \"leave\" : \"up\";\n  const startEvent = MC.S_POINTER + startEventSuff;\n  const endEvent = MC.S_POINTER + endEventSuff;\n\n  const wrapper = (event: Event, callback: OnPointerCallback) => {\n    if (options._preventDefault) {\n      MH.preventDefault(event);\n    }\n\n    const data: PointerActionData = {\n      action,\n      state:\n        MH.strReplace(event.type, /pointer|mouse/, \"\") === startEventSuff\n          ? \"ON\"\n          : \"OFF\",\n    };\n\n    invokeCallback(callback, target, data, event);\n  };\n  const startListener = (event: Event) => wrapper(event, startCallback);\n  const endListener = (event: Event) => wrapper(event, endCallback);\n\n  addEventListenerTo(target, startEvent, startListener);\n  addEventListenerTo(target, endEvent, endListener);\n\n  // On some touch screen devices pressing and holding will initiate select\n  // and result in touchend, so we prevent text select\n  if (options._preventSelect) {\n    preventSelect(target);\n  }\n\n  startCallback.onRemove(() => {\n    undoPreventSelect(target);\n    removeEventListenerFrom(target, startEvent, startListener);\n  });\n\n  endCallback.onRemove(() => {\n    undoPreventSelect(target);\n    removeEventListenerFrom(target, endEvent, endListener);\n  });\n};\n\nconst listenerSetupFn: {\n  [D in PointerAction]: (\n    target: EventTarget,\n    startCallback: OnPointerCallback,\n    endCallback: OnPointerCallback,\n    options: OnPointerOptionsInternal,\n  ) => void;\n} = {\n  click: setupClickListener,\n  hover: (...args) => setupPointerListeners(MC.S_HOVER, ...args),\n  press: (...args) => setupPointerListeners(MC.S_PRESS, ...args),\n} as const;\n\nconst invokeCallback = (\n  callback: OnPointerCallback,\n  target: EventTarget,\n  actionData: PointerActionData,\n  event: Event,\n) => callback.invoke(target, MH.copyObject(actionData), event).catch(logError);\n","/**\n * @module Watchers/ScrollWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { XYDirection, ScrollDirection, SizeTarget } from \"@lisn/globals/types\";\n\nimport {\n  ScrollTarget,\n  TargetCoordinate,\n  TargetCoordinates,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { setNumericStyleJsVars } from \"@lisn/utils/css-alter\";\nimport { getMaxDeltaDirection } from \"@lisn/utils/directions\";\nimport { moveElement, tryWrapContent } from \"@lisn/utils/dom-alter\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum, maxAbs } from \"@lisn/utils/math\";\nimport {\n  scrollTo,\n  getCurrentScrollAction,\n  getClientWidthNow,\n  getClientHeightNow,\n  tryGetMainScrollableElement,\n  fetchMainContentElement,\n  fetchMainScrollableElement,\n  fetchScrollableElement,\n  isValidScrollDirection,\n  ScrollAction,\n  ScrollToOptions,\n} from \"@lisn/utils/scroll\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { MutationOperation, DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n// re-export for convenience\nexport type { ScrollAction, ScrollToOptions } from \"@lisn/utils/scroll\";\n\n/**\n * {@link ScrollWatcher} listens for scroll events in any direction.\n *\n * It manages registered callbacks globally and reuses event listeners for more\n * efficient performance.\n */\nexport class ScrollWatcher {\n  /**\n   * Call the given handler whenever the given scrollable is scrolled.\n   *\n   * Unless {@link OnScrollOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest scroll data. If a scroll has\n   * not yet been observed on the scrollable and its `scrollTop` and\n   * `scrollLeft` are 0, then the direction is {@link Types.NoDirection} and\n   * the handler is only called if {@link Types.NoDirection} is part of the\n   * supplied {@link OnScrollOptions.directions | options.directions} (or\n   * {@link OnScrollOptions.directions | options.directions} is not given).\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking content size changes using\n   * {@link trackScroll}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onScroll: (\n    handler: OnScrollHandler,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly offScroll: (\n    handler: OnScrollHandler,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * This everything that {@link onScroll} does plus more:\n   *\n   * In addition to a scroll event, the handler is also called when either the\n   * offset size or scroll (content) size of the scrollable changes as that\n   * would affect its `scrollTopFraction` and `scrollLeftFraction` and possibly\n   * the `scrollTop` and `scrollLeft` as well.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates a set of CSS variables on the scrollable element's style:\n   *\n   * - If {@link OnScrollOptions.scrollable | options.scrollable} is not given,\n   *   or is `null`, `window` or `document`, the following CSS variables are\n   *   set on the root (`html`) element and represent the scroll of the\n   *   {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}:\n   *   - `--lisn-js--page-scroll-top`\n   *   - `--lisn-js--page-scroll-top-fraction`\n   *   - `--lisn-js--page-scroll-left`\n   *   - `--lisn-js--page-scroll-left-fraction`\n   *   - `--lisn-js--page-scroll-width`\n   *   - `--lisn-js--page-scroll-height`\n   *\n   * - Otherwise, the following variables are set on the scrollable itself,\n   *   and represent its scroll offset:\n   *   - `--lisn-js--scroll-top`\n   *   - `--lisn-js--scroll-top-fraction`\n   *   - `--lisn-js--scroll-left`\n   *   - `--lisn-js--scroll-left-fraction`\n   *   - `--lisn-js--scroll-width`\n   *   - `--lisn-js--scroll-height`\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly trackScroll: (\n    handler?: OnScrollHandler | null,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackScroll}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly noTrackScroll: (\n    handler?: OnScrollHandler | null,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * Get the scroll offset of the given scrollable. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                 this only when doing realtime scroll-based animations\n   *                 as it may cause a forced layout.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScroll: (\n    scrollable?: ScrollTarget,\n    realtime?: boolean,\n  ) => Promise<ScrollData>;\n\n  /**\n   * Scrolls the given scrollable element to in the given direction.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the direction or options are invalid.\n   */\n  readonly scroll: (\n    direction: XYDirection,\n    options?: ScrollOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Scrolls the given scrollable element to the given `to` scrollable.\n   *\n   * Returns `null` if there's an ongoing scroll that is not cancellable.\n   *\n   * Note that if `to` is an element or a selector, then it _must_ be a\n   * descendant of the scrollable element.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the \"to\" coordinates or options are invalid.\n   *\n   * @param to If this is an element, then its top-left position is used as\n   *           the target coordinates. If it is a string, then it is treated\n   *           as a selector for an element using `querySelector`.\n   * @param [options.scrollable]\n   *           If not given, it defaults to\n   *           {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}.\n   *\n   * @returns `null` if there's an ongoing scroll that is not cancellable,\n   * otherwise a {@link ScrollAction}.\n   */\n  readonly scrollTo: (\n    to: TargetCoordinates | Element | string,\n    options?: ScrollToOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Returns the current {@link ScrollAction} if any.\n   *\n   * @param scrollable If not given, it defaults to\n   *                   {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScrollAction: (\n    scrollable?: Element,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Cancels the ongoing scroll that's resulting from smooth scrolling\n   * triggered in the past. Does not interrupt or prevent further scrolling.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   *\n   * @param [options.immediate] If true, then it will not use\n   *                            {@link waitForMeasureTime} or\n   *                            {@link Utils.waitForMutateTime | waitForMutateTime}.\n   *                            Warning: this will likely result in forced layout.\n   */\n  readonly stopUserScrolling: (options?: {\n    scrollable?: ScrollTarget;\n    immediate?: boolean;\n  }) => Promise<void>;\n\n  /**\n   * Returns the element that holds the main page content. By default it's\n   * `document.body` but is overridden by\n   * {@link Settings.settings.mainScrollableElementSelector}.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainContentElement(): Promise<HTMLElement> {\n    return fetchMainContentElement();\n  }\n\n  /**\n   * Returns the scrollable element that holds the wrapper around the main page\n   * content. By default it's `document.scrollable` (unless `document.body` is\n   * actually scrollable, in which case it will be used) but it will be\n   * different if {@link Settings.settings.mainScrollableElementSelector} is set.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainScrollableElement(): Promise<HTMLElement> {\n    return fetchMainScrollableElement();\n  }\n\n  /**\n   * Creates a new instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: ScrollWatcherConfig) {\n    return new ScrollWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: ScrollWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new ScrollWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ScrollWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ScrollWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ScrollWatcher\", logAtCreation: config })\n      : null;\n\n    const allScrollData = MH.newWeakMap<Element, ScrollData>();\n\n    const activeListeners = MH.newWeakMap<\n      ScrollTarget,\n      { _nRealtime: number }\n    >();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnScrollHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const fetchCurrentScroll = async (\n      element: Element,\n      realtime = false,\n      isScrollEvent = false,\n    ): Promise<ScrollData> => {\n      // The scroll data can change event without a scroll event, e.g. by the\n      // element changing size, so always get the latest here.\n      const previousEventData = allScrollData.get(element);\n      const latestData = await fetchScrollData(\n        element,\n        previousEventData,\n        realtime,\n      );\n\n      // If there hasn't been a scroll event, use the old scroll direction\n      if (!isScrollEvent && previousEventData) {\n        latestData.direction = previousEventData.direction;\n      }\n      return latestData;\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n      trackType: TrackType,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      };\n      allCallbacks.sGet(element).set(handler, entry);\n\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnScroll = async (\n      handler: OnScrollHandler,\n      userOptions: OnScrollOptions | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, userOptions ?? {});\n      const element = options._element;\n\n      // Don't await for the scroll data before creating the callback so that\n      // setupOnScroll and removeOnScroll have the same \"timing\" and therefore\n      // calling onScroll and offScroll immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options, trackType);\n      const callback = entry._callback;\n\n      const eventTarget = options._eventTarget;\n      const scrollData = await fetchCurrentScroll(\n        element,\n        options._debounceWindow === 0,\n      );\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = scrollData;\n      allScrollData.set(element, scrollData);\n\n      if (trackType === TRACK_FULL) {\n        await setupSizeTrack(entry);\n      }\n\n      let listenerOptions = activeListeners.get(eventTarget);\n      if (!listenerOptions) {\n        debug: logger?.debug4(\"Adding scroll listener\", eventTarget);\n        listenerOptions = { _nRealtime: 0 };\n        activeListeners.set(eventTarget, listenerOptions);\n        // Don't debounce the scroll handler, only the callbacks.\n        addEventListenerTo(eventTarget, MC.S_SCROLL, scrollHandler);\n      }\n\n      if (options._debounceWindow === 0) {\n        listenerOptions._nRealtime++;\n      }\n\n      const directions = options._directions;\n      if (\n        !callback.isRemoved() &&\n        !userOptions?.skipInitial &&\n        directionMatches(directions, scrollData.direction)\n      ) {\n        debug: logger?.debug5(\"Calling initially with\", element, scrollData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, scrollData);\n      }\n    };\n\n    // ----------\n\n    const removeOnScroll = async (\n      handler: OnScrollHandler,\n      scrollable: ScrollTarget | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, { scrollable });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setScrollCssProps) {\n          // delete the properties\n          setScrollCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n    ) => {\n      const element = options._element;\n      const eventTarget = options._eventTarget;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      const listenerOptions = activeListeners.get(eventTarget);\n      if (listenerOptions && options._debounceWindow === 0) {\n        listenerOptions._nRealtime--;\n      }\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for scrollable; removing listener\",\n          element,\n        );\n\n        MH.deleteKey(allScrollData, element);\n        removeEventListenerFrom(eventTarget, MC.S_SCROLL, scrollHandler);\n        MH.deleteKey(activeListeners, eventTarget);\n        // TODO: Should we unwrap children if previously WE wrapped them?\n      }\n    };\n\n    // ----------\n\n    const setupSizeTrack = async (entry: CallbackEntry) => {\n      const options = entry._options;\n      const element = options._element;\n      const scrollCallback = entry._callback;\n      debug: logger?.debug8(\"Setting up size tracking\", element);\n\n      const doc = MH.getDoc();\n      const docScrollingElement = MH.getDocScrollingElement();\n\n      const resizeCallback = wrapCallback(async () => {\n        // Get the latest scroll data for the scrollable\n        // Currently, the resize callback is already delayed by a frame due to\n        // the SizeWatcher, so we don't need to treat this as realtime.\n        const latestData = await fetchCurrentScroll(element);\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n        } else if (!scrollCallback.isRemoved()) {\n          await invokeCallback(scrollCallback, element, latestData);\n        }\n      });\n\n      scrollCallback.onRemove(resizeCallback.remove);\n\n      // Don't use default instance as it has a high threshold.\n      const sizeWatcher = SizeWatcher.reuse();\n      const setupOnResize = (target?: SizeTarget) =>\n        sizeWatcher.onResize(resizeCallback, {\n          target,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          // TODO maybe accepts resizeThreshold option\n          threshold: options._threshold,\n        });\n\n      if (element === docScrollingElement) {\n        // In case we're tracking the main document scroll, then we only need to\n        // observe the viewport size and the size of the documentElement (which is\n        // the content size).\n\n        setupOnResize(); // viewport size\n        setupOnResize(doc); // content size\n\n        return;\n      }\n\n      // ResizeObserver only detects changes in offset width/height which is\n      // the visible size of the scrolling element, and that is not affected by the\n      // size of its content.\n      // But we also need to detect changes in the scroll width/height which is\n      // the size of the content.\n      // We also need to keep track of elements being added to the scrollable element.\n\n      const observedElements = MH.newSet<Element>([element]);\n\n      // Observe the scrolling element\n      setupOnResize(element);\n\n      // And also its children (if possible, a single wrapper around them\n      const wrapper = await tryWrapContent(element, {\n        classNames: [MC.PREFIX_WRAPPER, PREFIX_WRAPPER],\n      });\n      if (wrapper) {\n        setupOnResize(wrapper);\n        observedElements.add(wrapper);\n\n        //\n      } else {\n        for (const child of MH.childrenOf(element)) {\n          setupOnResize(child);\n          observedElements.add(child);\n        }\n      }\n\n      // Watch for newly added elements\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      const onAddedCallback = wrapCallback((operation: MutationOperation) => {\n        const child = MH.currentTargetOf(operation);\n        // If we've just added the wrapper, it will be in DOMWatcher's queue,\n        // so check.\n        if (child !== wrapper) {\n          if (wrapper) {\n            // Move this child into the wrapper. If this results in change of size\n            // for wrapper, SizeWatcher will call us.\n            moveElement(child, { to: wrapper, ignoreMove: true });\n          } else {\n            // Track the size of this child.\n            // Don't skip initial, call the callback now\n            setupOnResize(child);\n            observedElements.add(child);\n          }\n        }\n      });\n\n      domWatcher.onMutation(onAddedCallback, { categories: [MC.S_ADDED] });\n      resizeCallback.onRemove(onAddedCallback.remove);\n    };\n\n    // ----------\n\n    const scrollHandler = async (event: Event) => {\n      // We cannot use event.currentTarget because scrollHandler is called inside\n      // a setTimeout so by that time, currentTarget is null or something else.\n      //\n      // However, target and currentTarget only differ when the event is in the\n      // bubbling or capturing phase. Because\n      //\n      // - the scroll event only bubbles when fired on document, and (it only\n      //   bubbles up to window)\n      // - and we never attach the listener to the capturing phase\n      // - and we always use document instead of window to listen for scroll on\n      //   document\n      //\n      // then event.target suffices.\n      const scrollable = MH.targetOf(event);\n      /* istanbul ignore next */\n      if (!scrollable || !(MH.isElement(scrollable) || MH.isDoc(scrollable))) {\n        return;\n      }\n\n      const element = await fetchScrollableElement(scrollable);\n      const realtime = (activeListeners.get(scrollable)?._nRealtime || 0) > 0;\n      const latestData = await fetchCurrentScroll(element, realtime, true);\n      allScrollData.set(element, latestData);\n\n      debug: logger?.debug9(\"Scroll event\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        // Consider the direction since the last scroll event and not the\n        // direction based on the largest delta the last time the callback\n        // was called.\n        const options = entry._options;\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n          continue;\n        }\n\n        // If threshold has been exceeded, always update the latest data for\n        // this callback.\n        entry._data = latestData;\n\n        if (!directionMatches(options._directions, latestData.direction)) {\n          debug: logger?.debug9(\n            \"Direction does not match\",\n            options,\n            latestData,\n          );\n          continue;\n        }\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentScroll = (scrollable?, realtime?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        fetchCurrentScroll(element, realtime),\n      );\n\n    // ----------\n\n    this.scroll = (direction, options) => {\n      if (!isValidScrollDirection(direction)) {\n        throw MH.usageError(`Unknown scroll direction: '${direction}'`);\n      }\n\n      const isVertical = direction === MC.S_UP || direction === MC.S_DOWN;\n      const sign = direction === MC.S_UP || direction === MC.S_LEFT ? -1 : 1;\n      let targetCoordinate: TargetCoordinate;\n\n      const amount = options?.amount ?? 100;\n      const asFractionOf = options?.asFractionOf;\n\n      if (asFractionOf === \"visible\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * getClientHeightNow(el)) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * getClientWidthNow(el)) / 100;\n\n        //\n      } else if (asFractionOf === \"content\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * el[MC.S_SCROLL_HEIGHT]) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * el[MC.S_SCROLL_WIDTH]) / 100;\n\n        //\n      } else if (asFractionOf !== undefined && asFractionOf !== \"pixel\") {\n        throw MH.usageError(\n          `Unknown 'asFractionOf' keyword: '${asFractionOf}'`,\n        );\n\n        //\n      } else {\n        targetCoordinate = isVertical\n          ? (el) => el[MC.S_SCROLL_TOP] + sign * amount\n          : (el) => el[MC.S_SCROLL_LEFT] + sign * amount;\n      }\n\n      const target = isVertical\n        ? { top: targetCoordinate }\n        : { left: targetCoordinate };\n\n      return this.scrollTo(target, options);\n    };\n\n    // ----------\n\n    this.scrollTo = async (to, options) =>\n      scrollTo(\n        to,\n        MH.merge(\n          { duration: config._scrollDuration }, // default\n          options,\n          {\n            scrollable: await fetchScrollableElement(options?.scrollable),\n          }, // override\n        ),\n      );\n\n    // ----------\n\n    this.fetchCurrentScrollAction = (scrollable?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        getCurrentScrollAction(element),\n      );\n\n    // ----------\n\n    this.stopUserScrolling = async (options) => {\n      const element = await fetchScrollableElement(options?.scrollable);\n      const stopScroll = () =>\n        MH.elScrollTo(element, {\n          top: element[MC.S_SCROLL_TOP],\n          left: element[MC.S_SCROLL_LEFT],\n        });\n\n      if (options?.immediate) {\n        stopScroll();\n      } else {\n        waitForMeasureTime().then(stopScroll);\n      }\n    };\n\n    // ----------\n\n    this.trackScroll = (handler?, options?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      return setupOnScroll(handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackScroll = (handler?, scrollable?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      removeOnScroll(handler, scrollable, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onScroll = (handler, options?) =>\n      setupOnScroll(handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offScroll = (handler, scrollable?) => {\n      removeOnScroll(handler, scrollable, TRACK_REGULAR); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type ScrollWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnScrollOptions.debounceWindow | debounceWindow} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnScrollOptions.threshold | threshold} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 50\n   */\n  scrollThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link ScrollOptions.duration | duration} in calls to\n   * {@link ScrollWatcher.scroll} and {@link ScrollWatcher.scrollTo}.\n   *\n   * @defaultValue 1000\n   */\n  scrollDuration?: number;\n};\n\n/**\n * @interface\n */\nexport type OnScrollOptions = {\n  /**\n   * If it is not given, or is `null`, `window` or `document`, then it will\n   * track the scroll of the\n   * {@link Settings.settings.mainScrollableElementSelector | the main scrolling element}.\n   *\n   * Other values must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  scrollable?: ScrollTarget;\n\n  /**\n   * If non-0, the scroll handler will only be called when the scrollable's\n   * scroll offset in the observed direction has changed at least\n   * `scrollThreshold` pixels since the last time the handler was called.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.scrollThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Specifies a list of {@link ScrollDirection}s to listen for.\n   *\n   * It can be a comma-separated list of direction names or an array of such\n   * names.\n   *\n   * If not given, then it listens for scrolls in any direction, including\n   * {@link Types.NoDirection} and {@link Types.AmbiguousDirection}.\n   *\n   * The {@link Types.NoDirection} occurs when the callback is called initially\n   * (if `skipInitial` is not `true`) and there hasn't yet been a scroll\n   * observed on the scrollable _and_ it's `scrollTop`/`scrollLeft` are 0.\n   *\n   * The {@link Types.AmbiguousDirection} occurs when the user scrolls\n   * diagonally with close to equal deltas in both horizontal and vertical\n   * direction.\n   *\n   * **IMPORTANT:**\n   *\n   * The direction of a scroll event is always based on comparing `deltaX` and\n   * `deltaY` relative to the _last scroll event_ (within the `debounceWindow`,\n   * and not to the scroll data for the last time the callback was called (in\n   * case it was skipped because `threshold` was not exceeded or in case it was\n   * debounced by a larger window than the watcher).\n   *\n   * I.e. if you have both `threshold` and `directions` restricted, or if the\n   * callback has a larger debounce window than the watcher, it is possible for\n   * there to be a change in the relevant `scrollTop`/`scrollLeft` offset that\n   * exceeds the threshold, and for the callback to _not_ be called.\n   *\n   * For a callback to be called, both of these must be true:\n   * - the change in `scrollTop`/`scrollLeft`, _compared to the last time the\n   *   callback was called_ must exceed the {@link threshold}\n   * - the effective scroll direction, _compared to the last scroll event_\n   *   prior to the _watcher's_ debounce window must be one of the given\n   *   {@link directions}.\n   *\n   * @defaultValue undefined\n   */\n  directions?: CommaSeparatedStr<ScrollDirection> | ScrollDirection[];\n\n  /**\n   * Do not call the handler until there's a future scroll of the element.\n   *\n   * By default we call the handler (almost) immediately if there's been a\n   * scroll in one of the given directions, or if there has not been a scroll\n   * but directions includes {@link Types.NoDirection}, but you can disable\n   * this initial call here.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts, but you probably need this when doing\n   * scroll-based animations.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * @interface\n */\nexport type ScrollOptions = ScrollToOptions & {\n  /**\n   * How much to scroll in the given direction.\n   *\n   * @defaultValue 100\n   */\n  amount?: number;\n\n  /**\n   * If set to \"pixel\" (default), `amount` is taken as absolute pixels.\n   *\n   * If set to \"visible\", `amount` is taken as percent of the element's visible\n   * size in the scrolling direction (100 means full client width for\n   * horizontal or height for vertical scroll).\n   *\n   * If set to \"content\", `amount` is taken as percent of the element's full\n   * content size in the scrolling direction (100 means full scroll width for\n   * horizontal or height for vertical scroll).\n   *\n   * @defaultValue \"pixel\"\n   */\n  asFractionOf?: \"pixel\" | \"visible\" | \"content\";\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the element that has been resized\n * - the {@link ScrollData} for the element\n */\nexport type OnScrollHandlerArgs = [Element, ScrollData];\nexport type OnScrollCallback = Callback<OnScrollHandlerArgs>;\nexport type OnScrollHandler =\n  | CallbackHandler<OnScrollHandlerArgs>\n  | OnScrollCallback;\n\nexport type ScrollData = {\n  clientWidth: number;\n  clientHeight: number;\n\n  scrollTop: number;\n\n  /**\n   * This is the `scrollTop` relative to the full `scrollHeight` minus the\n   * `clientHeight`, ranging from 0 to 1.\n   */\n  scrollTopFraction: number;\n\n  scrollLeft: number;\n\n  /**\n   * This is the `scrollLeft` relative to the full `scrollWidth` minus the\n   * `clientWidth`, ranging from 0 to 1.\n   */\n  scrollLeftFraction: number;\n\n  scrollWidth: number;\n  scrollHeight: number;\n\n  /**\n   * This is the direction of the last scroll action, i.e. _compared to the\n   * last scroll event_, not necessarily based on the deltas compared to the\n   * last time this callback was called.\n   */\n  direction: ScrollDirection;\n};\n\n// ----------------------------------------\n\ntype ScrollWatcherConfigInternal = {\n  _debounceWindow: number;\n  _scrollThreshold: number;\n  _scrollDuration: number;\n};\n\ntype OnScrollOptionsInternal = {\n  _element: Element;\n  _eventTarget: ScrollTarget;\n  _directions: ScrollDirection[] | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnScrollCallback;\n  _trackType: TrackType;\n  _options: OnScrollOptionsInternal;\n  _data?: ScrollData;\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, ScrollWatcher>();\n\nconst PREFIX_WRAPPER = MH.prefixName(\"scroll-watcher-wrapper\");\n\nconst getConfig = (\n  config: ScrollWatcherConfig | undefined,\n): ScrollWatcherConfigInternal => {\n  config ??= {};\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _scrollThreshold: toNonNegNum(config.scrollThreshold, 50) || 1,\n    _scrollDuration: toNonNegNum(config.scrollDuration, 1000),\n  };\n};\n\nconst TRACK_REGULAR = 1; // only scroll events\nconst TRACK_FULL = 2; // scroll + resizing of content and/or wrapper\n\n// --------------------\n\nconst fetchOnScrollOptions = async (\n  config: ScrollWatcherConfigInternal,\n  options: OnScrollOptions,\n): Promise<OnScrollOptionsInternal> => {\n  const directions =\n    validateStrList(\"directions\", options.directions, isValidScrollDirection) ||\n    null;\n\n  const element = await fetchScrollableElement(options.scrollable);\n\n  return {\n    _element: element,\n    _eventTarget: getEventTarget(element),\n    _directions: directions,\n    // If threshold is 0, internally treat as 1 (pixel)\n    _threshold: toNonNegNum(options.threshold, config._scrollThreshold) || 1,\n    _debounceWindow: options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n  };\n};\n\nconst directionMatches = (\n  userDirections: ScrollDirection[] | null,\n  latestDirection: ScrollDirection,\n) => !userDirections || MH.includes(userDirections, latestDirection);\n\nconst hasExceededThreshold = (\n  options: OnScrollOptionsInternal,\n  latestData: ScrollData,\n  lastThresholdData: ScrollData | undefined,\n): boolean => {\n  const directions = options._directions;\n  const threshold = options._threshold;\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  const topDiff = maxAbs(\n    latestData[MC.S_SCROLL_TOP] - lastThresholdData[MC.S_SCROLL_TOP],\n    latestData[MC.S_SCROLL_HEIGHT] - lastThresholdData[MC.S_SCROLL_HEIGHT],\n    latestData[MC.S_CLIENT_HEIGHT] - lastThresholdData[MC.S_CLIENT_HEIGHT],\n  );\n\n  const leftDiff = maxAbs(\n    latestData[MC.S_SCROLL_LEFT] - lastThresholdData[MC.S_SCROLL_LEFT],\n    latestData[MC.S_SCROLL_WIDTH] - lastThresholdData[MC.S_SCROLL_WIDTH],\n    latestData[MC.S_CLIENT_WIDTH] - lastThresholdData[MC.S_CLIENT_WIDTH],\n  );\n\n  // If the callback is only interested in up/down, then only check the\n  // scrollTop delta, and similarly for left/right.\n  let checkTop = false,\n    checkLeft = false;\n  if (\n    !directions ||\n    MH.includes(directions, MC.S_NONE) ||\n    MH.includes(directions, MC.S_AMBIGUOUS)\n  ) {\n    checkTop = checkLeft = true;\n  } else {\n    if (\n      MH.includes(directions, MC.S_UP) ||\n      MH.includes(directions, MC.S_DOWN)\n    ) {\n      checkTop = true;\n    }\n    if (\n      MH.includes(directions, MC.S_LEFT) ||\n      MH.includes(directions, MC.S_RIGHT)\n    ) {\n      checkLeft = true;\n    }\n  }\n\n  return (\n    (checkTop && topDiff >= threshold) || (checkLeft && leftDiff >= threshold)\n  );\n};\n\nconst fetchScrollData = async (\n  element: Element,\n  previousEventData: ScrollData | undefined,\n  realtime: boolean,\n): Promise<ScrollData> => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollTop = MH.ceil(element[MC.S_SCROLL_TOP]);\n  const scrollLeft = MH.ceil(element[MC.S_SCROLL_LEFT]);\n  const scrollWidth = element[MC.S_SCROLL_WIDTH];\n  const scrollHeight = element[MC.S_SCROLL_HEIGHT];\n  const clientWidth = getClientWidthNow(element);\n  const clientHeight = getClientHeightNow(element);\n\n  const scrollTopFraction =\n    MH.round(scrollTop) / (scrollHeight - clientHeight || MC.INFINITY);\n  const scrollLeftFraction =\n    MH.round(scrollLeft) / (scrollWidth - clientWidth || MC.INFINITY);\n\n  const prevScrollTop = previousEventData?.scrollTop || 0;\n  const prevScrollLeft = previousEventData?.scrollLeft || 0;\n\n  const direction = getMaxDeltaDirection(\n    scrollLeft - prevScrollLeft,\n    scrollTop - prevScrollTop,\n  );\n\n  return {\n    direction,\n    [MC.S_SCROLL_TOP]: scrollTop,\n    [MC.S_SCROLL_TOP_FRACTION]: scrollTopFraction,\n    [MC.S_SCROLL_LEFT]: scrollLeft,\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollLeftFraction,\n    [MC.S_SCROLL_WIDTH]: scrollWidth,\n    [MC.S_SCROLL_HEIGHT]: scrollHeight,\n    [MC.S_CLIENT_WIDTH]: clientWidth,\n    [MC.S_CLIENT_HEIGHT]: clientHeight,\n  };\n};\n\nconst setScrollCssProps = (\n  element: Element,\n  scrollData: Partial<ScrollData> | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetMainScrollableElement()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"page-\";\n  }\n\n  scrollData ??= {};\n  const props = {\n    [MC.S_SCROLL_TOP]: scrollData[MC.S_SCROLL_TOP],\n    [MC.S_SCROLL_TOP_FRACTION]: scrollData[MC.S_SCROLL_TOP_FRACTION],\n    [MC.S_SCROLL_LEFT]: scrollData[MC.S_SCROLL_LEFT],\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollData[MC.S_SCROLL_LEFT_FRACTION],\n    [MC.S_SCROLL_WIDTH]: scrollData[MC.S_SCROLL_WIDTH],\n    [MC.S_SCROLL_HEIGHT]: scrollData[MC.S_SCROLL_HEIGHT],\n  };\n  setNumericStyleJsVars(element, props, { _prefix: prefix });\n};\n\nconst getEventTarget = (element: Element): ScrollTarget => {\n  if (element === MH.getDocScrollingElement()) {\n    return MH.getDoc();\n  }\n\n  return element;\n};\n\nconst invokeCallback = (\n  callback: OnScrollCallback,\n  element: Element,\n  scrollData: ScrollData,\n) => callback.invoke(element, MH.copyObject(scrollData)).catch(logError);\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { ScrollOffset, View, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { isValidStrList, validateStrList } from \"@lisn/utils/validation\";\n\nimport { newBitSpaces, createBitSpace } from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid {@link ScrollOffset}.\n *\n * @category Validation\n */\nexport const isValidScrollOffset = (offset: string): offset is ScrollOffset =>\n  offset.match(OFFSET_REGEX) !== null;\n\n/**\n * Returns true if the given string is a valid \"view\".\n *\n * @category Validation\n */\nexport const isValidView = (view: string): view is View =>\n  MH.includes(VIEWS, view);\n\n/**\n * Returns true if the given string or array is a list of valid views.\n *\n * @category Validation\n */\nexport const isValidViewList = (views: string | string[]) =>\n  isValidStrList(views, isValidView, false);\n\n/**\n * Returns the views that are opposite to the given set of views.\n *\n * Above and below are opposites, and so are left and right.\n *\n * \"at\" is a special case. It is considered opposite to any view in the sense\n * that if it is not present in `views` it will always be included in the\n * returned array. However it is not \"strongly\" opposite in the sense that it\n * will not cause other views to be included in the result unless it is the\n * only view in `views`. That is, there are two sets of strongly opposite pairs\n * (\"above\"/\"below\" and \"left\"/\"right\") and at least one of the two opposing\n * views of a pair must be present for the other one to be included, _except in\n * the special case of `views` being \"at\"_. See examples below for\n * clarification.\n *\n * **Note** that the order of the returned array is not defined.\n *\n * @example\n * Returns [\"above\", \"below\", \"left\", \"right\"] (not definite order), since\n * \"at\" is the only view present and is opposite to all:\n *\n * ```javascript\n * getOppositeViews(\"at\"); // -> [\"above\", \"below\", \"left\", \"right\"] (not necessarily in this order)\n * ```\n *\n * @example\n * Returns [\"below\"]. \"left\" and \"right\" are NOT included even though \"at\" is\n * given, because at least one of the two opposing views of a pair must be\n * present for the other one to be included (except in the special case of\n * `views` being \"at\").\n *\n * ```javascript\n * getOppositeViews(\"at,above\"); // -> [\"below\"]\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above\"); // -> [\"at\", \"below\"] (not necessarily in this order)\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above,below\"); // -> [\"at\"]\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"at,above,below\"); // -> []\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above,right\"); // -> [\"at\", \"below\", \"left\"] (not necessarily in this order)\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"at,above,right\"); // -> [\"below\", \"left\"] (not necessarily in this order)\n * ```\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid, including if it's empty \"\".\n *\n * @category Views\n */\nexport const getOppositeViews = (\n  views: CommaSeparatedStr<View> | View[],\n): View[] => {\n  if (!views) {\n    throw MH.usageError(\"'views' cannot be empty\");\n  }\n\n  const bitmask = getViewsBitmask(views);\n  let oppositeBitmask = VIEWS_SPACE.bitmask & ~bitmask; // initial, all not present in bitmask\n\n  // If the given view is \"at\", then include all the other ones.\n  // Otherwise include only the opposite views of those directional\n  // (above/below/left/right) that are present. I.e. if neither left not right\n  // is given, then don't include them\n  if (bitmask !== VIEWS_SPACE.bit.at) {\n    // remove the opposite ones to those not present\n    if (!(bitmask & VIEWS_SPACE.bit.above)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.below;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.below)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.above;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.left)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.right;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.right)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.left;\n    }\n  }\n\n  return getViewsFromBitmask(oppositeBitmask);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getViewsBitmask = (\n  viewsStr: View[] | string | undefined,\n): number => {\n  let viewsBitmask = 0;\n  const views = validateStrList(\"views\", viewsStr, isValidView);\n\n  if (views) {\n    for (const v of views) {\n      if (!isValidView(v)) {\n        throw MH.usageError(`Unknown view '${v}'`);\n      }\n\n      viewsBitmask |= VIEWS_SPACE.bit[v];\n    }\n  } else {\n    viewsBitmask = VIEWS_SPACE.bitmask; // default: all\n  }\n\n  return viewsBitmask;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const parseScrollOffset = (input: string) => {\n  const match = input.match(OFFSET_REGEX);\n  if (!match) {\n    throw MH.usageError(`Invalid offset: '${input}'`);\n  }\n\n  const reference = match[1];\n  const value = match[2];\n  /* istanbul ignore next */ // shouldn't happen\n  if (!reference || !value) {\n    throw MH.bugError(\"Offset regex: blank capture groups\");\n  }\n\n  return { reference, value };\n};\n\nconst VIEWS: View[] = [\n  MC.S_AT,\n  MC.S_ABOVE,\n  MC.S_BELOW,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const VIEWS_SPACE = createBitSpace<View>(newBitSpaces(), ...VIEWS);\n\n// --------------------\n\n// Don't use capture groups for old browser support\nconst OFFSET_REGEX = RegExp(\"(top|bottom|left|right): *([^ ].+)\");\n\nconst getViewsFromBitmask = (bitmask: number): View[] => {\n  const views: View[] = [];\n  for (let bit = VIEWS_SPACE.start; bit <= VIEWS_SPACE.end; bit++) {\n    const value = 1 << bit;\n    if (bitmask & value) {\n      const name = VIEWS_SPACE.nameOf(value);\n      if (name) {\n        views.push(name);\n      }\n    }\n  }\n\n  return views;\n};\n","/**\n * @module Modules/XIntersectionObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nexport type XIntersectionObserverCallback = (\n  entries: IntersectionObserverEntry[],\n  observer: XIntersectionObserver,\n) => void;\n\n/**\n * {@link XIntersectionObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}\n * with added capabilities:\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n */\nexport class XIntersectionObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root | IntersectionObserver:root}.\n   */\n  readonly root!: Element | Document | null;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin | IntersectionObserver:rootMargin}.\n   */\n  readonly rootMargin!: string;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/thresholds | IntersectionObserver:thresholds}.\n   */\n  readonly thresholds!: number[];\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/observe | IntersectionObserver:observe} except it accepts multiple\n   * targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent intersection change.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/unobserve | IntersectionObserver:unobserve} except it accepts multiple\n   * targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/disconnect | IntersectionObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * Like `IntersectionObserver.takeRecords`.\n   */\n  readonly takeRecords: () => void;\n\n  constructor(\n    callback: XIntersectionObserverCallback,\n    observeOptions?: IntersectionObserverInit,\n  ) {\n    let observedTargets = MH.newWeakSet<Element>();\n    const targetsToSkip = MH.newWeakSet<Element>();\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      const selectedEntries = [];\n\n      for (const entry of entries) {\n        if (targetsToSkip.has(MH.targetOf(entry))) {\n          MH.deleteKey(targetsToSkip, MH.targetOf(entry));\n          continue;\n        }\n\n        selectedEntries.push(entry);\n      }\n\n      if (MH.lengthOf(selectedEntries)) {\n        callback(selectedEntries, this);\n      }\n    };\n\n    const observer = MH.newIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    MH.defineProperty(this, \"root\", { get: () => observer.root });\n    MH.defineProperty(this, \"rootMargin\", {\n      get: () => observer.rootMargin,\n    });\n    MH.defineProperty(this, \"thresholds\", {\n      get: () => observer.thresholds,\n    });\n\n    this.observe = (...targets) => {\n      for (const target of targets) {\n        observedTargets.add(target);\n        observer.observe(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.add(target);\n        this.observe(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        observer.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      observedTargets = MH.newWeakSet();\n      observer.disconnect();\n    };\n\n    this.takeRecords = () => observer.takeRecords();\n  }\n}\n","/**\n * @module Watchers/ViewWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  ViewTarget,\n  View,\n  BoundingRect,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { setNumericStyleJsVars } from \"@lisn/utils/css-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForSubsequentMeasureTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys, compareValuesIn } from \"@lisn/utils/misc\";\nimport { createOverlay, OverlayOptions } from \"@lisn/utils/overlays\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport { toMargins, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  VIEWS_SPACE,\n  getViewsBitmask,\n  parseScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap, newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XIntersectionObserver } from \"@lisn/modules/x-intersection-observer\";\n\nimport { DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewWatcher} monitors the position of a given target relative to the\n * given {@link ViewWatcherConfig.root | root} or the viewport.\n *\n * It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class ViewWatcher {\n  /**\n   * Call the given handler whenever the {@link ViewWatcherConfig.root | root}'s\n   * view relative to the target position changes, i.e. when the target enters\n   * or leaves the root.\n   *\n   * Unless {@link OnViewOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current view if it matches this\n   * set of options*.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking position across root\n   * using {@link trackView}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or the options are invalid.\n   */\n  readonly onView: (\n    target: ViewTarget,\n    handler: OnViewHandler,\n    options?: OnViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offView: (target: ViewTarget, handler: OnViewHandler) => void;\n\n  /**\n   * This does more than just {@link onView}. The difference is that in\n   * addition to a change of {@link View}, such as the target entering or\n   * leaving the ViewWatcher's {@link ViewWatcherConfig.root | root} (by\n   * default the viewport), the handler is also called each time the target's\n   * relative view changes _while inside the root_.\n   *\n   * A change of relative position happens when:\n   * - the target is resized\n   * - the root is resized\n   * - the any of the target's scrollable ancestors is scrolled\n   * - the target's attributes changed that resulted in a change of position\n   *\n   * All of the above are accounted for. Internally it uses\n   * {@link ScrollWatcher}, {@link DOMWatcher} and {@link SizeWatcher} to keep\n   * track of all of this.\n   *\n   * If the target is leaves the ViewWatcher's\n   * {@link ViewWatcherConfig.root | root}, the handler will be called with\n   * the {@link ViewData}, and the above events will stop being tracked until\n   * the target enters the watcher's root again.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates the following set of CSS variables on the target's style and\n   * represent its relative position:\n   *\n   * - `--lisn-js--r-top`\n   * - `--lisn-js--r-bottom`\n   * - `--lisn-js--r-left`\n   * - `--lisn-js--r-right`\n   * - `--lisn-js--r-width`\n   * - `--lisn-js--r-height`\n   * - `--lisn-js--r-h-middle`\n   * - `--lisn-js--r-v-middle`\n   *\n   * See {@link ViewData.relative} for an explanation of each.\n   *\n   * Note that only Element targets are supported here and not offsets.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or \"views\" are invalid.\n   */\n  readonly trackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n    options?: TrackViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackView}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n  ) => void;\n\n  /**\n   * Get the current view relative to the target. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                 this only when doing realtime scroll-based animations\n   *                 as it may cause a forced layout.\n   */\n  readonly fetchCurrentView: (\n    target: ViewTarget,\n    realtime?: boolean,\n  ) => Promise<ViewData>;\n\n  /**\n   * Creates a new instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config?: ViewWatcherConfig) {\n    return new ViewWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing  instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config?: ViewWatcherConfig) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new ViewWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ViewWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ViewWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ViewWatcher\", logAtCreation: config })\n      : null;\n\n    const allViewData = MH.newWeakMap<Element, ViewData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<\n        OnViewHandler,\n        {\n          _callback: OnViewCallback;\n          _trackType: TrackType;\n          _options: OnViewOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      debug: logger?.debug9(`Got ${entries.length} new entries`, entries);\n\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    const observeOptions = {\n      root: config._root,\n      threshold: config._threshold,\n      rootMargin: config._rootMargin,\n    };\n\n    const xObserver = new XIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    // ----------\n\n    const fetchCurrentView = (\n      element: Element,\n      realtime = false,\n    ): Promise<ViewData> => {\n      const fetchData = async (\n        entryOrElement: IntersectionObserverEntry | Element,\n      ) => {\n        const intersection = await fetchIntersectionData(\n          config,\n          entryOrElement,\n          realtime,\n        );\n        const data = await fetchViewData(intersection, realtime);\n        return data;\n      };\n\n      if (realtime) {\n        return fetchData(element);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp IntersectionObserver\n        const observer = MH.newIntersectionObserver((entries) => {\n          const promise = fetchData(entries[0]);\n          observer.disconnect();\n          promise.then(resolve);\n        }, observeOptions);\n\n        observer.observe(element);\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n      trackType: TrackType,\n    ): OnViewCallback => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      allCallbacks.sGet(element).set(handler, {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      });\n\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      userOptions: (OnViewOptions & TrackViewOptions) | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOptions(config._root, target, userOptions);\n      const element = options._element;\n\n      const callback = createCallback(handler, options, trackType);\n\n      // View watcher should be used before the DOM is loaded since the initial\n      // size of the root may be 0 or close to 0 and would lead to premature\n      // triggering.\n      await waitForInteractive();\n\n      // Initial call doesn't need to be realtime, and best to use an actual\n      // IntersectionObserverEntry for that one.\n      let viewData = await fetchCurrentView(element);\n\n      if (\n        viewData.rootBounds[MC.S_WIDTH] === 0 &&\n        viewData.rootBounds[MC.S_HEIGHT] === 0\n      ) {\n        // Possibly the root is being setup now, wait for one AF\n        debug: logger?.debug5(\n          \"Got zero root size, deferring for a bit\",\n          config._root,\n        );\n        await waitForSubsequentMeasureTime();\n        viewData = await fetchCurrentView(element);\n      }\n\n      if (trackType === TRACK_FULL) {\n        // Detect resize or scroll\n        await setupInviewTrack(options, callback, viewData);\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      // Always use observeLater to skip the initial call from the\n      // IntersectionObserver, and call callbacks that have skipInitial: false\n      // here. Otherwise, we can't tell from inside the intersectionHandler whether\n      // a callback wants to skip its initial call or not.\n      //\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, viewData);\n        if (viewsToBitmask(viewData.views) & options._viewsBitmask) {\n          await invokeCallback(callback, element, viewData);\n        }\n      }\n    };\n\n    // ----------\n\n    const removeOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      trackType: TrackType,\n    ) => {\n      // For time sync, so that if called immediately after onView without\n      // awaiting, it will remove the callback that is about to be added.\n      // But if no such handler has been added we may unnecessarily\n      // create an overlay... TODO\n      const options = await fetchOptions(config._root, target, {});\n      const element = options._element;\n\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setViewCssProps) {\n          // delete the properties\n          setViewCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n    ) => {\n      const element = options._element;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n\n        xObserver.unobserve(element);\n        MH.deleteKey(allViewData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = async (entry: IntersectionObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      // This doesn't need to be \"realtime\", since IntersectionObserver alone\n      // introduces a delay.\n      const intersection = await fetchIntersectionData(config, entry);\n      const latestData = await fetchViewData(intersection);\n      debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n      const viewsBitmask = viewsToBitmask(latestData.views);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        if (viewsBitmask & entry._options._viewsBitmask) {\n          invokeCallback(entry._callback, element, latestData);\n        }\n      }\n    };\n\n    // ----------\n\n    const setupInviewTrack = async (\n      options: OnViewOptionsInternal,\n      viewCallback: OnViewCallback,\n      viewData: ViewData,\n    ) => {\n      const element = options._element;\n      debug: logger?.debug8(\n        \"Setting up size, scroll and attribute tracking\",\n        element,\n      );\n\n      const sizeWatcher = SizeWatcher.reuse();\n      const scrollWatcher = ScrollWatcher.reuse();\n      const realtime = options._debounceWindow === 0;\n\n      // Detect when target's class or style attribute change\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      // We need to remove the tracking callback when target leaves view and re-add\n      // it when it enters view. But the OnViewCallback that is associated may have\n      // already been added prior, by calling onView with this handler, so we can't\n      // always wrap around it, in order to detect when it's called with a change\n      // of view. So we setup another OnViewCallback tied to the tracking callback.\n      let isInview = false;\n\n      let removeTrackCallback: (() => void) | null = null;\n\n      // Finds any scrollable ancestors of the element and detect scroll on them.\n      const scrollableAncestors = await fetchScrollableAncestors(\n        element,\n        realtime,\n      );\n      if (viewCallback.isRemoved()) {\n        return;\n      }\n\n      const addTrackCallback = () => {\n        const trackCallback = wrapCallback(async () => {\n          const prevData = allViewData.get(element);\n\n          // Get the latest view data for the target\n          const latestData = await fetchCurrentView(element, realtime);\n          debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n          const changed = viewChanged(latestData, prevData);\n          if (changed) {\n            // When comparing for changes, we round the numbers to certain number\n            // of decimal places, and allViewData serves as a \"last threshold\"\n            // state, so only update it if there was a significant change.\n            // Otherwise very quick changes in small increments would get\n            // rejected as \"no change\".\n            allViewData.set(element, latestData);\n\n            if (isInview && !viewCallback.isRemoved()) {\n              // Could have been removed during the debounce window\n              await invokeCallback(viewCallback, element, latestData);\n            }\n          } else {\n            debug: logger?.debug9(\"ViewData same as last\");\n          }\n        });\n\n        // TODO Is there a better way to detect when it's moved?\n        viewCallback.onRemove(trackCallback.remove);\n        removeTrackCallback = trackCallback.remove;\n\n        // Detect when target's class or style attribute change\n        domWatcher.onMutation(trackCallback, {\n          categories: [MC.S_ATTRIBUTE],\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when target is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: element,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the root is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: config._root ?? MH.getWindow(),\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the target's scrollable ancestors are scrolled (this\n        // will almost certainly include the main scrollable element).\n        for (const ancestor of scrollableAncestors) {\n          scrollWatcher.onScroll(trackCallback, {\n            scrollable: ancestor,\n            [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n            threshold: options._scrollThreshold,\n            [MC.S_SKIP_INITIAL]: true,\n          });\n        }\n      };\n\n      const enterOrLeaveCallback = createCallback(\n        (target__ignored, viewData) => {\n          if (viewData.views[0] === MC.S_AT) {\n            if (!isInview) {\n              isInview = true;\n              addTrackCallback();\n            }\n          } else if (removeTrackCallback) {\n            isInview = false;\n            removeTrackCallback();\n            removeTrackCallback = null;\n          }\n        },\n        MH.assign(options, {\n          _viewsBitmask: VIEWS_SPACE.bitmask,\n        }),\n        TRACK_REGULAR,\n      );\n\n      viewCallback.onRemove(enterOrLeaveCallback.remove);\n\n      allViewData.set(element, viewData); // to avoid duplicate initial call\n      // Setup the track and the \"inView\" state\n      if (!enterOrLeaveCallback.isRemoved()) {\n        invokeCallback(enterOrLeaveCallback, element, viewData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentView = (target, realtime = false) =>\n      fetchElement(config._root, target).then((element) =>\n        fetchCurrentView(element, realtime),\n      );\n\n    // ----------\n\n    this.trackView = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      return setupOnView(element, handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackView = (element, handler?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      removeOnView(element, handler, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onView = (target, handler, options?) =>\n      setupOnView(target, handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offView = (target, handler) =>\n      removeOnView(target, handler, TRACK_REGULAR); // no need to await\n  }\n}\n\n/**\n * @interface\n */\nexport type ViewWatcherConfig = {\n  /**\n   * The root element to use for the IntersectionObserver.\n   *\n   * **NOTE:** If the target you want to observe (via\n   * {@link ViewWatcher.onView}) is inside a scrolling element, then you should\n   * probably set the watcher's root to be that scrolling element or a wrapper\n   * around it. However, even if you don't or can't do that, the watcher will\n   * try to be smart about that, and when the target is no longer intercepting\n   * because it's scrolled outside its scrolling container, and yet its\n   * bounding box is still inside the watcher root (e.g. the viewport) the\n   * watcher will determine the relative view based on the scrolling container\n   * and not the actual watcher root.\n   *\n   * @defaultValue null\n   */\n  root?: Element | null;\n\n  /**\n   * The rootMargin to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue \"0px 0px 0px 0px\"\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue 0\n   */\n  threshold?: number | number[];\n};\n\n/**\n * @interface\n */\nexport type OnViewOptions = {\n  /**\n   * Specifies a list of {@link View}s to target for.\n   *\n   * The handler will only be called if there is a change of view relative to\n   * the target that matches the given ones.\n   *\n   * It can be a comma-separated list of \"views\" or an array of such names.\n   *\n   * @defaultValue undefined\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * @interface\n */\nexport type TrackViewOptions = {\n  /**\n   * Use this debounce window for the {@link ScrollWatcher} and\n   * {@link SizeWatcher} involved in the view tracking.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts during scroll, but you probably need this when\n   * doing scroll-based animations.\n   *\n   * @defaultValue undefined // ScrollWatcher and SizeWatcher defaults\n   */\n  debounceWindow?: number;\n\n  /**\n   * Use this resize threshold for the {@link SizeWatcher} involved in the view\n   * tracking.\n   *\n   * @defaultValue undefined // SizeWatcher default\n   */\n  resizeThreshold?: number;\n\n  /**\n   * Use this scroll threshold for the {@link ScrollWatcher} involved in the\n   * view tracking.\n   *\n   * @defaultValue undefined // ScrollWatcher default\n   */\n  scrollThreshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - The element that is the target of the IntersectionObserver. If the call to\n *   {@link ViewWatcher.onView} specified an element as the target, it will be\n *   the same. If it specified an offset, then the element passed to the\n *   callback will be an absolutely positioned trigger overlay that's created\n *   as a result.\n * - the {@link ViewData} for relative to the target\n */\nexport type OnViewHandlerArgs = [Element, ViewData];\nexport type OnViewCallback = Callback<OnViewHandlerArgs>;\nexport type OnViewHandler = CallbackHandler<OnViewHandlerArgs> | OnViewCallback;\n\nexport type ViewData = {\n  isIntersecting: boolean;\n\n  targetBounds: BoundingRect;\n\n  rootBounds: BoundingRect;\n\n  /**\n   * The current view or views of the target. There would be two views given\n   * only if the target is _not_ in view and it's diagonally across from the\n   * root, e.g. both below and to the right.\n   */\n  views: [View, View?];\n\n  /**\n   * This is the target's position relative to the\n   * {@link ViewWatcherConfig.root | root} with values relative to the root\n   * size.\n   *\n   * It is like the {@link targetBounds} except that each quantity is scaled by\n   * the root's width or height, and having two additional computed values.\n   */\n  relative: {\n    x: number;\n    y: number;\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n    width: number;\n    height: number;\n\n    /**\n     * Average of the relative left and right.\n     */\n    hMiddle: number;\n\n    /**\n     * Average of the relative top and bottom.\n     */\n    vMiddle: number;\n  };\n};\n\n// ----------------------------------------\n\ntype ViewWatcherConfigInternal = {\n  _root: Element | null;\n  _rootMargin: string;\n  _threshold: number | number[];\n};\n\ntype OnViewOptionsInternal = {\n  _element: Element;\n  _viewsBitmask: number;\n  _debounceWindow: number | undefined;\n  _resizeThreshold: number | undefined;\n  _scrollThreshold: number | undefined;\n};\n\ntype IntersectionData = {\n  _target: Element;\n  _targetBounds: BoundingRect;\n  _root: Element | null;\n  _rootMargins: [number, number, number, number];\n  _rootBounds: BoundingRect;\n  _isIntersecting: boolean | null; // null means unknown, no IntersectionObserverEntry\n  _isCrossOrigin: boolean | null; // null means unknown, no IntersectionObserverEntry\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, ViewWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (\n  config: ViewWatcherConfig | undefined,\n): ViewWatcherConfigInternal => {\n  return {\n    _root: config?.root || null,\n    _rootMargin: config?.rootMargin ?? \"0px 0px 0px 0px\",\n    _threshold: config?.threshold || 0,\n  };\n};\n\nconst TRACK_REGULAR = 1; // only entering/leaving root\nconst TRACK_FULL = 2; // entering/leaving + moving across (fine-grained)\n\n// --------------------\n\nconst fetchOptions = async (\n  root: Element | null,\n  target: ViewTarget,\n  options: (OnViewOptions & TrackViewOptions) | undefined,\n): Promise<OnViewOptionsInternal> => {\n  return {\n    _element: await fetchElement(root, target),\n    _viewsBitmask: getViewsBitmask(options?.views),\n    _debounceWindow: options?.debounceWindow,\n    _resizeThreshold: options?.resizeThreshold,\n    _scrollThreshold: options?.scrollThreshold,\n  };\n};\n\nconst fetchScrollableAncestors = async (\n  element: Element,\n  realtime: boolean,\n) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollableAncestors = [];\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = getClosestScrollable(ancestor, { active: true }))) {\n    scrollableAncestors.push(ancestor);\n  }\n\n  return scrollableAncestors;\n};\n\nconst viewChanged = (latestData: ViewData, prevData: ViewData | undefined) =>\n  !prevData ||\n  viewsToBitmask(prevData.views) !== viewsToBitmask(latestData.views) ||\n  !compareValuesIn(\n    MH.copyBoundingRectProps(prevData.targetBounds),\n    MH.copyBoundingRectProps(latestData.targetBounds),\n  ) ||\n  !compareValuesIn(prevData.rootBounds, latestData.rootBounds) ||\n  !compareValuesIn(prevData.relative, latestData.relative);\n\nconst viewsToBitmask = (views: [View, View?]) =>\n  VIEWS_SPACE.bit[views[0]] | (views[1] ? VIEWS_SPACE.bit[views[1]] : 0);\n\nconst fetchIntersectionData = async (\n  config: ViewWatcherConfigInternal,\n  entryOrTarget: IntersectionObserverEntry | Element,\n  realtime = false,\n): Promise<IntersectionData> => {\n  const root = config._root;\n  const vpSize = await fetchViewportSize(realtime);\n  const rootMargins = toMargins(config._rootMargin, vpSize);\n\n  let target: Element;\n  let targetBounds: BoundingRect;\n  let rootBounds: BoundingRect | null = null;\n  let isIntersecting: boolean | null = null;\n  let isCrossOrigin: boolean | null = null;\n\n  if (MH.isInstanceOf(entryOrTarget, IntersectionObserverEntry)) {\n    target = entryOrTarget.target;\n    targetBounds = entryOrTarget.boundingClientRect;\n    rootBounds = entryOrTarget.rootBounds;\n    isIntersecting = entryOrTarget.isIntersecting;\n    isCrossOrigin = !entryOrTarget.rootBounds;\n  } else {\n    target = entryOrTarget;\n    targetBounds = await fetchBounds(target, realtime);\n  }\n\n  if (!rootBounds) {\n    rootBounds = await fetchBounds(root, realtime, rootMargins);\n  }\n\n  return {\n    _target: target,\n    _targetBounds: targetBounds,\n    _root: root,\n    _rootMargins: rootMargins,\n    _rootBounds: rootBounds,\n    _isIntersecting: isIntersecting,\n    _isCrossOrigin: isCrossOrigin,\n  };\n};\n\nconst fetchBounds = async (\n  root: Element | null,\n  realtime: boolean,\n  rootMargins?: [number, number, number, number],\n): Promise<BoundingRect> => {\n  let rect: BoundingRect;\n\n  if (root) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    rect = MH.copyBoundingRectProps(MH.getBoundingClientRect(root));\n  } else {\n    const { width, height } = await fetchViewportSize(realtime);\n    rect = {\n      x: 0,\n      left: 0,\n      right: width,\n      width,\n      y: 0,\n      top: 0,\n      bottom: height,\n      height,\n    };\n  }\n\n  if (rootMargins) {\n    rect.x = rect[MC.S_LEFT] -= rootMargins[3];\n    rect[MC.S_RIGHT] += rootMargins[1];\n    rect[MC.S_WIDTH] += rootMargins[1] + rootMargins[3];\n\n    rect.y = rect[MC.S_TOP] -= rootMargins[0];\n    rect[MC.S_BOTTOM] += rootMargins[2];\n    rect[MC.S_HEIGHT] += rootMargins[0] + rootMargins[2];\n  }\n\n  return rect;\n};\n\nconst fetchViewData = async (\n  intersection: IntersectionData,\n  realtime = false,\n): Promise<ViewData> => {\n  const vpSize = await fetchViewportSize(realtime);\n  const vpHeight = vpSize[MC.S_HEIGHT];\n  const vpWidth = vpSize[MC.S_WIDTH];\n\n  const views = await fetchViews(intersection, realtime);\n\n  const relative = MH.merge(\n    { hMiddle: NaN, vMiddle: NaN },\n    MH.copyBoundingRectProps(intersection._targetBounds),\n  );\n\n  relative.y /= vpHeight;\n  relative[MC.S_TOP] /= vpHeight;\n  relative[MC.S_BOTTOM] /= vpHeight;\n  relative[MC.S_HEIGHT] /= vpHeight;\n\n  relative.x /= vpWidth;\n  relative[MC.S_LEFT] /= vpWidth;\n  relative[MC.S_RIGHT] /= vpWidth;\n  relative[MC.S_WIDTH] /= vpWidth;\n\n  relative.hMiddle = (relative[MC.S_LEFT] + relative[MC.S_RIGHT]) / 2;\n  relative.vMiddle = (relative[MC.S_TOP] + relative[MC.S_BOTTOM]) / 2;\n\n  const viewData: ViewData = {\n    isIntersecting: intersection._isIntersecting ?? views[0] === MC.S_AT,\n    targetBounds: intersection._targetBounds,\n    rootBounds: intersection._rootBounds,\n    views,\n    relative,\n  };\n\n  return viewData;\n};\n\nconst fetchViews = async (\n  intersection: IntersectionData,\n  realtime: boolean,\n  useScrollingAncestor?: Element,\n): Promise<[View, View?]> => {\n  if (intersection._isIntersecting) {\n    return [MC.S_AT];\n  }\n\n  let rootBounds: BoundingRect;\n  if (useScrollingAncestor) {\n    rootBounds = await fetchBounds(\n      useScrollingAncestor,\n      realtime,\n      intersection._rootMargins,\n    );\n  } else {\n    rootBounds = intersection._rootBounds;\n  }\n\n  const targetBounds = intersection._targetBounds;\n  const delta = {\n    _left: rootBounds[MC.S_LEFT] - targetBounds[MC.S_LEFT],\n    _right: targetBounds[MC.S_RIGHT] - rootBounds[MC.S_RIGHT],\n    _top: rootBounds[MC.S_TOP] - targetBounds[MC.S_TOP],\n    _bottom: targetBounds[MC.S_BOTTOM] - rootBounds[MC.S_BOTTOM],\n  };\n\n  let xView: View | null = null;\n  let yView: View | null = null;\n  if (delta._left > 0 && delta._right > 0) {\n    // Target is wider than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    xView = delta._left > delta._right ? MC.S_RIGHT : MC.S_LEFT;\n  } else if (delta._left > 0) {\n    // Target is to the left of the root\n    xView = MC.S_RIGHT;\n  } else if (delta._right > 0) {\n    // Target is to the right of the root\n    xView = MC.S_LEFT;\n  } // else target is horizontally contained in root, see below\n\n  if (delta._top > 0 && delta._bottom > 0) {\n    // Target is taller than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    yView = delta._top > delta._bottom ? MC.S_BELOW : MC.S_ABOVE;\n  } else if (delta._top > 0) {\n    // Target is above the root\n    yView = MC.S_BELOW;\n  } else if (delta._bottom > 0) {\n    // Target is below the root\n    yView = MC.S_ABOVE;\n  } // else target is vertically contained in root, see below\n\n  if (xView && yView) {\n    // diagonally out of vide\n    return [xView, yView];\n  } else if (xView) {\n    // horizontally out of vide\n    return [xView];\n  } else if (yView) {\n    // vertically out of vide\n    return [yView];\n  }\n\n  // The target is contained in the root bounds and yet isIntersecting was\n  // not true. This means that either:\n  //\n  // 1. It may be intersecting, but we didn't get an actual\n  //    IntersectionObserverEntry and we don't know if it's intersecting\n  //    or not\n  // 2. The target is inside a scrolling element that is _not_ being used as\n  //    the observer root, and the target has scrolled out of the scrollable\n  //    bounds but still inside the viewport\n  // 3. We're inside a cross-origin iFrame and the iFrame is partially or\n  //    fully not-intersecting\n\n  if (!intersection._isCrossOrigin) {\n    // This is case 1. or 2. => get the views relative to the closest\n    // scrollable ancestor relative to which it is _not_ intersecting, if\n    // any. If it's nested inside several scrolling elements, we'll end up\n    // looping over each one until we find the one for which the target is\n    // outside its box.\n    //\n    // It is too risky to use active isScrollable check here since we could be\n    // inside an onScroll handler, so just use passive.\n    const scrollingAncestor = getClosestScrollable(\n      useScrollingAncestor ?? intersection._target,\n    );\n\n    if (scrollingAncestor) {\n      return fetchViews(intersection, realtime, scrollingAncestor);\n    }\n  }\n\n  // Either case 3. (cross-origin iframe outside the viewport) or case 1. and\n  // the target is actually intersecting the root. Either way, it's to be\n  // considered in-view of its root.\n  return [MC.S_AT];\n};\n\nconst setViewCssProps = (\n  element: Element,\n  viewData: ViewData | undefined | null,\n) => {\n  const relative: Record<string, number> = viewData?.relative ?? {};\n  const props = {\n    top: relative.top,\n    bottom: relative.bottom,\n    left: relative.left,\n    right: relative.right,\n    [MC.S_WIDTH]: relative[MC.S_WIDTH],\n    [MC.S_HEIGHT]: relative[MC.S_HEIGHT],\n    hMiddle: relative.hMiddle,\n    vMiddle: relative.vMiddle,\n  };\n  setNumericStyleJsVars(element, props, { _prefix: \"r-\", _numDecimal: 4 }); // don't await here\n};\n\nconst fetchElement = async (\n  root: Element | null,\n  target: ViewTarget,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  } else if (!MH.isString(target)) {\n    throw MH.usageError(\n      \"'target' must be an offset string or an HTMLElement | SVGElement | MathMLElement\",\n    );\n  }\n\n  const overlayOptions = getOverlayOptions(root, target);\n  return await createOverlay(overlayOptions);\n};\n\nconst getOverlayOptions = (\n  root: Element | null,\n  target: string,\n): OverlayOptions => {\n  const { reference, value } = parseScrollOffset(target);\n\n  let ovrDimension: \"width\" | \"height\";\n  if (reference === MC.S_TOP || reference === MC.S_BOTTOM) {\n    ovrDimension = MC.S_WIDTH;\n  } else if (reference === MC.S_LEFT || reference === MC.S_RIGHT) {\n    ovrDimension = MC.S_HEIGHT;\n  } else {\n    throw MH.usageError(`Invalid offset reference: '${reference}'`);\n  }\n\n  return {\n    parent: MH.isHTMLElement(root) ? root : undefined,\n    style: {\n      [reference]: value,\n      [ovrDimension]: \"100%\",\n    },\n  };\n};\n\nconst invokeCallback = (\n  callback: OnViewCallback,\n  element: Element,\n  viewData: ViewData,\n) => callback.invoke(element, MH.copyObject(viewData)).catch(logError);\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nexport * from \"@lisn/watchers/dom-watcher\";\nexport * from \"@lisn/watchers/gesture-watcher\";\nexport * from \"@lisn/watchers/layout-watcher\";\nexport * from \"@lisn/watchers/pointer-watcher\";\nexport * from \"@lisn/watchers/scroll-watcher\";\nexport * from \"@lisn/watchers/size-watcher\";\nexport * from \"@lisn/watchers/view-watcher\";\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport { settings } from \"@lisn/globals/settings\";\nsettings.autoWidgets = true;\n\nexport { settings } from \"@lisn/globals/settings\";\nexport * as watchers from \"@lisn/watchers/index\";\n"],"names":["PREFIX","LOG_PREFIX","OBJECT","Object","SYMBOL","Symbol","ARRAY","Array","STRING","String","FUNCTION","Function","MATH","Math","NUMBER","Number","PROMISE","Promise","PI","INFINITY","Infinity","S_ABSOLUTE","S_FIXED","S_WIDTH","S_HEIGHT","S_TOP","S_BOTTOM","S_UP","S_DOWN","S_LEFT","S_RIGHT","S_AT","S_ABOVE","S_BELOW","S_IN","S_OUT","S_NONE","S_AMBIGUOUS","S_ADDED","S_REMOVED","S_ATTRIBUTE","S_KEY","S_MOUSE","S_POINTER","S_TOUCH","S_WHEEL","S_CLICK","S_HOVER","S_PRESS","S_SCROLL","S_ZOOM","S_DRAG","S_UNKNOWN","S_SCROLL_TOP","S_SCROLL_LEFT","S_SCROLL_WIDTH","S_SCROLL_HEIGHT","S_CLIENT_WIDTH","S_CLIENT_HEIGHT","S_SCROLL_TOP_FRACTION","S_SCROLL_LEFT_FRACTION","S_SKIP_INITIAL","S_DEBOUNCE_WINDOW","S_CANCEL","S_KEYDOWN","S_MOUSEUP","S_MOUSEDOWN","S_POINTERUP","S_POINTERDOWN","S_POINTERMOVE","S_POINTERCANCEL","S_TOUCHSTART","S_TOUCHEND","S_TOUCHMOVE","S_TOUCHCANCEL","S_SELECTSTART","S_ATTRIBUTES","S_CHILD_LIST","PREFIX_WRAPPER","PREFIX_INLINE_WRAPPER","PREFIX_NO_SELECT","PREFIX_NO_TOUCH_ACTION","PREFIX_NO_WRAP","USER_AGENT","navigator","userAgent","match","LisnError","Error","LisnUsageError","constructor","message","name","LisnBugError","root","self","global","camelToKebabCase","str","replace","m","toLowerCase","prefixName","MC","prefixCssVar","prefixCssJsVar","prefixData","s","Date","now","bind","hasDOM","document","getWindow","window","getDoc","getDocElement","documentElement","getDocScrollingElement","scrollingElement","getBody","body","getReadyState","readyState","getPointerType","event","isPointerEvent","pointerType","isMouseEvent","onAnimationFrame","callback","requestAnimationFrame","createElement","tagName","options","isNullish","v","undefined","isEmpty","isIterableObject","isNonPrimitive","iterator","isArray","isInstanceOf","isObject","typeOf","isNumber","isString","isLiteralString","isFunction","isDoc","target","MouseEvent","PointerEvent","isTouchPointerEvent","isWheelEvent","WheelEvent","isKeyboardEvent","KeyboardEvent","isTouchEvent","TouchEvent","isElement","Element","isHTMLElement","HTMLElement","strReplace","replacement","setTimer","setTimeout","clearTimer","clearTimeout","getBoundingClientRect","element","copyBoundingRectProps","rect","x","left","right","y","top","bottom","querySelector","selector","querySelectorAll","docQuerySelector","getAttr","getAttribute","setAttr","value","setAttribute","delAttr","removeAttribute","includes","arr","startAt","indexOf","some","array","predicate","filter","filterFn","filterBlank","result","lengthOf","sizeOf","obj","_obj$size","size","_obj$length","length","lastOf","a","slice","hasTagName","tag","preventDefault","arrayFrom","from","keysOf","keys","defineProperty","merge","assign","copyObject","resolve","promiseAll","all","freeze","hasOwnProp","o","prop","prototype","hasOwnProperty","call","preventExtensions","stringify","JSON","floor","ceil","log2","sqrt","max","min","abs","round","pow","parseFloat","isNaN","Class","constructorOf","typeOrClassOf","_constructorOf","parentOf","parentElement","childrenOf","children","targetOf","currentTargetOf","currentTarget","classList","S_TABINDEX","getTabIndex","setTabIndex","index","unsetTabIndex","remove","deleteKey","map","key","delete","elScrollTo","coords","behavior","scrollTo","newPromise","executor","newMap","entries","Map","newWeakMap","WeakMap","newSet","values","Set","newWeakSet","WeakSet","newIntersectionObserver","IntersectionObserver","newResizeObserver","ResizeObserver","newMutationObserver","MutationObserver","usageError","msg","bugError","illegalConstructorError","useWhat","CONSOLE","console","debug","log","info","consoleWarn","warn","consoleError","error","settings","MH","mainScrollableElementSelector","contentWrappingAllowed","pageLoadTimeout","autoWidgets","scrollbarHideNative","scrollbarOnMobile","scrollbarPositionH","scrollbarPositionV","scrollbarAutoHide","scrollbarClickScroll","scrollbarDragScroll","scrollbarUseHandle","sameHeightDiffTolerance","sameHeightResizeThreshold","sameHeightDebounceWindow","sameHeightMinGap","sameHeightMaxFreeR","sameHeightMaxWidthR","deviceBreakpoints","mobile","tablet","desktop","aspectRatioBreakpoints","tall","square","wide","lightThemeClassName","darkThemeClassName","deltaLineHeight","deltaPageWidth","deltaPageHeight","verbosityLevel","remoteLoggerURL","remoteLoggerOnMobileOnly","roundNumTo","numDecimal","multiplicationFactor","isValidNum","isFinite","toNum","defaultValue","numValue","toNonNegNum","toPosNum","toNumWithBounds","limits","_limits$min","_limits$max","_ref","maxAbs","havingMaxAbs","sort","b","hAngle","normalizeAngle","atan2","degToRad","areParallel","vA","vB","angleDiffThreshold","angleA","angleB","areAntiParallel","distanceBetween","ptA","ptB","easeInOutQuad","sortedKeysByVal","descending","getBitmask","start","end","copyExistingKeys","fromObj","toObj","omitKeys","keysToRm","res","compareValuesIn","objA","objB","roundTo","valA","valB","formatAsString","maxLen","maybeConvertToString","joinAsString","separator","args","join","splitOn","input","trim","limit","output","addEntry","push","matchIndex","matchLength","_match$index","exec","randId","nChars","segment","random","toString","toMargins","absoluteSize","_parts$","_parts$2","_parts$3","toPxValue","strValue","margin","parts","margins","objToStrKey","flattenForSorting","k","stringifyReplacer","nested","classStr","id","stack","validateStrList","checkFn","_toArray","toArray","_validateString","typeDescription","BitSpaces","counter","newCounter","create","propNames","newBitSpace","get","_nBits","_bitmask","newBitSpaces","createBitSpace","spaces","bitmask","space","bit","has","p","bitmaskFor","pStart","pEnd","thisStart","thisEnd","nameOf","val","_propNames","enumerable","DOM_CATEGORIES_SPACE","scheduleHighPriorityTask","task","scheduler","postTask","priority","channel","MessageChannel","port1","onmessage","close","port2","postMessage","getDebouncedHandler","debounceWindow","handler","timer","lastArgs","waitForAnimationFrame","wrapCallback","handlerOrCallback","isRemoved","callablesMap","invoke","wrapper","Callback","onRemove","rmFn","CallbackScheduler","_clear","fn","add","reject","_push","err","REMOVE","set","_defineProperty","queues","flush","queue","_running","_task","shift","item","_onRemove","logWarn","isMessageSeen","logError","discardMessages","isSeen","waitForMutateTime","scheduleDOMTask","scheduledDOMMutations","waitForMeasureTime","scheduledDOMMeasurements","waitForSubsequentMeasureTime","then","asyncMutatorFor","func","hasScheduledDOMTasks","runAllDOMTasks","runDOMTaskQueue","isInlineTag","inlineTags","isDOMElement","SVGElement","MathMLElement","hasClass","className","contains","hasAnyClass","classNames","addClassesNow","addClasses","removeClassesNow","removeClasses","getData","setDataNow","getComputedStylePropNow","getComputedStyle","getPropertyValue","setStylePropNow","_style2","style","setProperty","delStylePropNow","_style3","removeProperty","setNumericStyleJsVarsNow","props","varPrefix","_prefix","cssPropSuffix","varName","_options$_numDecimal","thisNumDecimal","_numDecimal","_units","setNumericStyleJsVars","wrapElementNow","createWrapperFor","ignoreMove","to","replaceWith","append","wrapChildrenNow","moveChildrenNow","moveElementNow","oldParent","newParent","child","parentEl","position","moveElement","isAllowedToWrap","getWrapper","parent","getContentWrapper","firstChild","tryWrapContentNow","_tryWrapNow","tryWrapContent","recordsToSkipOnce","getIgnoreMove","clearIgnoreMove","wrapContent","required","requiredBy","getWrapperFn","wrapFn","allowedToWrap","waitForElement","timeout","callFn","observer","disconnect","observe","childList","subtree","waitForElementOrInteractive","isInteractive","waitForInteractive","INTERACTIVE","COMPLETE","addEventListener","waitForComplete","waitForPageReady","pageIsReady","dispatchReady","newXMap","getDefaultV","XMap","newXMapGetter","newXWeakMap","XWeakMap","newXWeakMapGetter","XMapBase","sGet","prune","sk","rest","clear","DOMWatcher","config","getConfig","CONSTRUCTOR_KEY","reuse","_instances$get","myConfig","configStrKey","_root","instance","instances","buffer","t","_target","_categoryBitmask","_attributes","_addedTo","_removedFrom","allCallbacks","mutationHandler","records","record","recType","type","addedNodes","operation","ADDED_BIT","removedNodes","REMOVED_BIT","attributeName","ATTRIBUTE_BIT","shouldSkipOperation","processOperation","observers","_observer","_isActive","createCallback","_allCallbacks$get","_callback","deleteHandler","_options","setupOnMutation","userOptions","getOptions","activateObserver","skipInitial","_selector","childQueue","takeRecords","matches","initOperation","bufferedOperation","diffOperation","getDiffOperation","invokeCallback","activeCategories","entry","deactivateObserver","categoryBitmask","currentTargets","mutationType","_subtree","requestToSkip","removedFrom","addedTo","requestFrom","requestTo","onMutation","offMutation","_allCallbacks$get2","_config$subtree","CATEGORIES_BITS","categories","cat","operationA","operationB","attributes","attr","catch","getMaxDeltaDirection","deltaX","deltaY","getVectorDirection","vector","isValidDirection","direction","DIRECTIONS","XY_DIRECTIONS","Z_DIRECTIONS","SCROLL_DIRECTIONS","callEventListener","handleEvent","addEventListenerTo","eventType","transformEventType","getEventHandlerData","thirdArg","wrappedHandler","supports","getBrowserSupport","_optionsArg","_options$capture","capture","once","removeEventListenerFrom","setEventHandlerData","_wrappedHandler","_thirdArg","data","removeEventListener","deleteEventHandlerData","preventSelect","undoPreventSelect","browserEventSupport","_pointer","passive","signal","optTest","opt","thisOpt","AbortController","dummyHandler","dummyElement","e__ignored","registeredEventHandlerData","getEventOptionsStr","finalOptions","_registeredEventHandl","optionsStr","_registeredEventHandl2","startsWith","isValidInputDevice","device","DEVICES","isValidIntent","intent","INTENTS","addDeltaZ","current","increment","MIN_DELTA_Z","getKeyGestureFragment","events","_options$scrollHeight","LINE","PAGE","CONTENT","scrollHeight","deltasUp","amount","deltasDown","deltasLeft","deltasRight","deltasIn","deltasOut","deltaZ","deltasForKey","SK_UP","SK_ARROWUP","SK_PAGEUP","Home","SK_DOWN","SK_ARROWDOWN","SK_PAGEDOWN","End","SK_LEFT","SK_ARROWLEFT","SK_RIGHT","SK_ARROWRIGHT","shiftKey","ctrlKey","theseDeltas","thisDeltaX","thisDeltaY","thisDeltaZ","thisIntent","SK_PAGE","SK_ARROW","getPointerGestureFragment","isCancelled","pointerEventClass","pointerUpType","filteredEvents","eType","buttons","numEvents","firstEvent","lastEvent","clientX","clientY","getTouchGestureFragment","_options$dragHoldTime","_options$dragNumFinge","moves","getTouchDiff","deltaThreshold","numMoves","holdTime","getHoldTime","canBeDrag","dragHoldTime","dragNumFingers","d","isSignificant","vectorA","vectorB","startDistance","startX","startY","endDistance","endX","endY","deltaSign","reverseScroll","isFirst","thisDirection","lastTouchEvent","touches","groupedTouches","touch","identifier","touchList","nTouches","firstTouch","lastTouch","firstStart","findIndex","e","firstMove","timeStamp","normalizeWheel","spinX","spinY","pixelX","pixelY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","deltaMode","getWheelGestureFragment","maxDelta","percentage","GestureWatcher","allListeners","_wrapper","getCallbackAndWrapper","setupOnGesture","_devices","_allListeners$get","listeners","setupListeners","_nCallbacks","_preventDefault","_nPreventDefault","_allListeners$get2","_remove","invokeCallbacks","_allListeners$get3","isTerminated","intents","_intents","hasAddedTabIndex","hasPreventedSelect","addOrRemoveListeners","action","listener","eventTypes","method","addInitialListener","initialListener","initiatingEvents","removeInitialListener","addOngoingListener","processEvent","ongoingEvents","removeOngoingListener","trackGesture","setGestureCssProps","totalDeltaX","totalDeltaY","totalDeltaZ","noTrackGesture","offGesture","onGesture","_allCallbacks$get3","_config$preventDefaul","_config$naturalTouchS","_config$touchDragHold","_config$touchDragNumF","_debounceWindow","_deltaThreshold","_angleDiffThreshold","_naturalTouchScroll","naturalTouchScroll","_touchDragHoldTime","touchDragHoldTime","_touchDragNumFingers","touchDragNumFingers","pointer","wheel","fragmentGetters","_options$minTotalDelt","_options$maxTotalDelt","_options$minTotalDelt2","_options$maxTotalDelt2","_options$minTotalDelt3","_options$maxTotalDelt3","_options$preventDefau","_options$naturalTouch","_options$touchDragHol","_options$touchDragNum","devices","_directions","directions","_minTotalDeltaX","minTotalDeltaX","_maxTotalDeltaX","maxTotalDeltaX","_minTotalDeltaY","minTotalDeltaY","_maxTotalDeltaY","maxTotalDeltaY","_minTotalDeltaZ","minTotalDeltaZ","_maxTotalDeltaZ","maxTotalDeltaZ","logger","preventNextClick","eventQueue","debouncedWrapper","fragment","eventQueueCopy","_eventQueueCopy","_eventQueueCopy$","clearEventQueue","newTotalDeltaX","newTotalDeltaY","newTotalDeltaZ","time","preventDefaultActionFor","keepLastEvent","splice","isActualGesture","isPointerDown","focus","preventScroll","prefix","getLayoutBitmask","layoutBitmask","getBitmaskFromSpec","S_DEVICES","ORDERED_DEVICES","S_ASPECTRS_CAMEL","aspectRatios","ORDERED_ASPECTR","ORDERED_DEVICE_NAMES","ORDERED_ASPECTR_NAMES","bitSpaces","NUM_LAYOUTS","LAYOUT_RANGE_REGEX","RegExp","keyName","spec","bitSpace","singleKeyName","rangeMatch","minLayout","maxLayout","layouts","lt","isScrollable","axis","active","noCache","_isScrollableCache$ge","cachedResult","isScrollableCache","offset","doCache","canScroll","dimension","IS_SCROLLABLE_CACHE_TIMEOUT","getClosestScrollable","ancestor","getCurrentScrollAction","scrollable","toScrollableOrDefault","currentScrollAction","_scrollable","currentScroll","cancel","cancelFn","_weCanInterrupt","scrollEvents","preventScrollHandler","_userCanInterrupt","promise","initiateScroll","thisScrollAction","waitFor","cleanup","isValidScrollDirection","getClientWidthNow","isScrollableBodyInQuirks","offsetWidth","getBorderWidth","getClientHeightNow","offsetHeight","fetchMainContentElement","init","mainContentElement","tryGetMainScrollableElement","mainScrollableElement","fetchMainScrollableElement","getDefaultScrollingElement","fetchScrollableElement","toScrollableOrMain","mappedScrollables","DIFF_THRESHOLD","arePositionsDifferent","getMain","_options$weCanInterru","_options$userCanInter","getTargetCoordinates","altTarget","_offset","_altTarget","_altOffset","altOffset","_duration","duration","weCanInterrupt","userCanInterrupt","docScrollingElement","targetEl","getStartEndPosition","applyOffset","getEndPosition","startPosition","targetCoordinates","endPosition","scrollH","scrollW","clientH","clientW","startTime","previousTimeStamp","currentPosition","step","elapsed","progress","side","initPromise","contentElement","createOverlay","fetchOverlayOptions","canReuse","_id","_overlays$get2","existingOverlay","overlays","_parent","_overlayKey","overlay","createOnlyOverlay","isPercentageHOffset","_style","isPercentageVOffset","needsContentWrapping","_userOptions$data2","_userOptions$id2","getCssProperties","fetchParent","_data","getOverlayKey","finalCssProperties","userSuppliedParent","getEntryContentBox","contentBoxSize","getSizeFromInlineBlock","contentRect","getEntryBorderBox","fallbackToContent","borderBoxSize","NaN","isValidBox","box","ALL_BOXES","isValidDimension","ALL_DIMENSIONS","tryGetViewportOverlay","viewportOverlay","fetchViewportOverlay","fetchViewportSize","realtime","_MH$getDocScrollingEl","clientWidth","clientHeight","S_INLINE_SIZE","S_BLOCK_SIZE","XResizeObserver","targetsToSkip","observedTargets","resizeHandler","skipNum","borderObserver","contentObserver","observeTarget","targets","observeLater","unobserve","SizeWatcher","allSizeData","processEntry","xObserver","fetchCurrentSize","fetchElement","sizeData","getSizeData","border","content","fetchOptions","_options$box","_options$dimension","_options$MC$S_DEBOUNC","_element","_box","_dimension","_threshold","threshold","_resizeThreshold","setupOnResize","removeOnResize","currEntry","setSizeCssProps","latestData","thresholdsExceeded","hasExceededThreshold","trackSize","noTrackSize","onResize","offResize","resizeThreshold","lastThresholdData","dim","diff","borderBox","contentBox","borderWidth","borderHeight","contentWidth","contentHeight","LayoutWatcher","nonIntersectingBitmask","currentLayoutData","aspectRatio","fetchCurrentLayout","readyPromise","setupOverlays","createOverlays","_deviceBreakpoints","_aspectRatioBreakpoints","isReady","intersectionHandler","numEntries","getNonIntersecting","processLayoutChange","observeOptions","rootMargin","triggerOverlay","_layoutBitmask","setupOnLayout","layoutData","changeMatches","skipCallbacks","deviceBit","aspectRatioBit","onLayout","offLayout","VAR_BORDER_HEIGHT","PREFIX_DEVICE","PREFIX_ASPECTR","overlayPromises","overlayParent","parentHeightCss","getOverlayLayout","layout","thisLayoutData","prevLayoutData","isIntersecting","isValidPointerAction","POINTER_ACTIONS","PointerWatcher","setupOnPointer","startHandler","endHandler","startCallback","endCallback","_actions","listenerSetupFn","onPointer","offPointer","_config$preventSelect","_preventSelect","_options$preventSelec","actions","setupClickListener","toggleState","state","setupPointerListeners","startEventSuff","endEventSuff","startEvent","endEvent","startListener","endListener","click","hover","press","actionData","ScrollWatcher","allScrollData","activeListeners","fetchCurrentScroll","isScrollEvent","previousEventData","fetchScrollData","trackType","_trackType","setupOnScroll","fetchOnScrollOptions","eventTarget","_eventTarget","scrollData","TRACK_FULL","setupSizeTrack","listenerOptions","_nRealtime","scrollHandler","directionMatches","removeOnScroll","setScrollCssProps","scrollCallback","doc","resizeCallback","sizeWatcher","observedElements","domWatcher","onAddedCallback","_activeListeners$get","scroll","_options$amount","isVertical","sign","targetCoordinate","asFractionOf","el","_scrollDuration","fetchCurrentScrollAction","stopUserScrolling","stopScroll","immediate","trackScroll","noTrackScroll","onScroll","TRACK_REGULAR","offScroll","_scrollThreshold","scrollThreshold","scrollDuration","getEventTarget","userDirections","latestDirection","topDiff","leftDiff","checkTop","checkLeft","scrollTop","scrollLeft","scrollWidth","scrollTopFraction","scrollLeftFraction","prevScrollTop","prevScrollLeft","isValidView","view","VIEWS","getViewsBitmask","viewsStr","viewsBitmask","views","VIEWS_SPACE","parseScrollOffset","OFFSET_REGEX","reference","XIntersectionObserver","selectedEntries","thresholds","ViewWatcher","allViewData","_rootMargin","fetchCurrentView","fetchData","entryOrElement","intersection","fetchIntersectionData","fetchViewData","setupOnView","viewData","rootBounds","setupInviewTrack","viewsToBitmask","_viewsBitmask","removeOnView","setViewCssProps","viewCallback","scrollWatcher","isInview","removeTrackCallback","scrollableAncestors","fetchScrollableAncestors","addTrackCallback","_config$_root","trackCallback","prevData","changed","viewChanged","enterOrLeaveCallback","target__ignored","trackView","noTrackView","onView","offView","_config$rootMargin","targetBounds","relative","entryOrTarget","vpSize","rootMargins","isCrossOrigin","IntersectionObserverEntry","boundingClientRect","fetchBounds","_targetBounds","_rootMargins","_rootBounds","_isIntersecting","_isCrossOrigin","width","height","_intersection$_isInte","vpHeight","vpWidth","fetchViews","hMiddle","vMiddle","useScrollingAncestor","delta","_left","_right","_top","_bottom","xView","yView","scrollingAncestor","_viewData$relative","overlayOptions","getOverlayOptions","ovrDimension"],"mappings":"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CA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;QACaS,QAAQ,GAAGC,iBAAoB,CAAC;EAC3C;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,6BAA6B,EAAE,IAAqB;EAEpD;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,sBAAsB,EAAE,IAAI;EAC5B;;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,eAAe,EAAE,IAAI;EAErB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,WAAW,EAAE,KAAK;EAElB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,mBAAmB,EAAE,IAAI;EAEzB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,iBAAiB,EAAE,KAAK;EAExB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,kBAAkB,EAAE,QAAQ;EAE5B;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,kBAAkB,EAAE,OAAO;EAE3B;EACF;EACA;EACA;EACA;EACA;EACA;IACEC,iBAAiB,EAAE,EAAE;EAErB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,oBAAoB,EAAE,IAAI;EAE1B;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,mBAAmB,EAAE,IAAI;EAEzB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,kBAAkB,EAAE,KAAK;EAEzB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,uBAAuB,EAAE,EAAE;EAE3B;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,yBAAyB,EAAE,CAAC;EAE5B;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,wBAAwB,EAAE,GAAG;EAE7B;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,gBAAgB,EAAE,EAAE;EAEpB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,kBAAkB,EAAE,GAAG;EAEvB;EACF;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,mBAAmB,EAAE,GAAG;EAExB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,iBAAiB,EAAE;EACjB;EACJ;EACA;EACA;EACA;EACA;EACIC,IAAAA,MAAM,EAAE,CAAC;EAET;EACJ;EACA;EACA;EACA;EACA;EACI,IAAA,aAAa,EAAE,GAAG;EAElB;EACJ;EACA;EACA;EACA;EACA;EACIC,IAAAA,MAAM,EAAE,GAAG;EAAE;;EAEb;EACJ;EACA;EACA;EACA;MACIC,OAAO,EAAE,GAAG;KACb;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,sBAAsB,EAAE;EACtB;EACJ;EACA;EACA;EACA;EACA;EACI,IAAA,WAAW,EAAE,CAAC;EAAE;;EAEhB;EACJ;EACA;EACA;EACA;EACA;MACIC,IAAI,EAAE,CAAC,GAAG,EAAE;EAAE;;EAEd;EACJ;EACA;EACA;EACA;EACA;MACIC,MAAM,EAAE,CAAC,GAAG,CAAC;EAAE;;EAEf;EACJ;EACA;EACA;EACA;EACA;MACIC,IAAI,EAAE,CAAC,GAAG,CAAC;EAAE;;EAEb;EACJ;EACA;EACA;EACA;EACI,IAAA,WAAW,EAAE,EAAE,GAAG,CAAC;KACpB;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,mBAAmB,EAAE,aAAa;EAElC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,kBAAkB,EAAE,YAAY;EAEhC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,eAAe,EAAE,EAAE;EAEnB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,cAAc,EAAE,IAAI;EAEpB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,eAAe,EAAE,GAAG;EAEpB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,cAAc,EAAE,CAAC;EAEjB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,eAAe,EAAE,IAAqB;EAEtC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,wBAAwB,EAAE;EAC5B,CAAC;;EAED;;EC9eA;EACA;EACA;;EAOA;EACA;EACA;EACA;EACA;EACO,MAAMC,UAAU,GAAGA,CAAC1J,KAAa,EAAE2J,UAAU,GAAG,CAAC,KAAK;IAC3D,MAAMC,oBAAoB,GAAGrC,GAAM,CAAC,EAAE,EAAEoC,UAAU,CAAC;IACnD,OAAOpC,KAAQ,CAACvH,KAAK,GAAG4J,oBAAoB,CAAC,GAAGA,oBAAoB;EACtE,CAAC;;EAED;EACA;EACA;EACA;EACA;EACO,MAAMC,UAAU,GAAI7J,KAAc,IACvCuH,QAAW,CAACvH,KAAK,CAAC,IAAIrF,MAAS,CAACmP,QAAQ,CAAC9J,KAAK,CAAC;;EAEjD;EACA;EACA;EACA;EACA;EACA;EACO,MAAM+J,KAAK,GAAGA,CACnB/J,KAAc,EACdgK,YAAmB,GAAG,CAAC,KACR;EACf,EAAA,MAAMC,QAAQ,GAAG1C,eAAkB,CAACvH,KAAK,CAAC,GAAGuH,UAAa,CAACvH,KAAK,CAAC,GAAGA,KAAK;;EAEzE;EACA;EACA;IACA,OAAO6J,UAAU,CAACI,QAAQ,CAAC,IAAIA,QAAQ,IAAIjK,KAAK,GAAGiK,QAAQ,GAAGD,YAAY;EAC5E,CAAC;;EAmBD;EACA;EACA;EACA;EACA;EACA;EACO,MAAME,WAAW,GAAGA,CACzBlK,KAAc,EACdgK,YAAmB,GAAG,CAAC,KACR;EACf,EAAA,MAAMC,QAAQ,GAAGF,KAAK,CAAC/J,KAAK,EAAE,IAAI,CAAC;IACnC,OAAOiK,QAAQ,KAAK,IAAI,IAAIA,QAAQ,IAAI,CAAC,GAAGA,QAAQ,GAAGD,YAAY;EACrE,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACO,MAAMG,QAAQ,GAAGA,CACtBnK,KAAc,EACdgK,YAAmB,GAAG,CAAC,KACR;EACf,EAAA,MAAMC,QAAQ,GAAGF,KAAK,CAAC/J,KAAK,EAAE,IAAI,CAAC;IACnC,OAAOiK,QAAQ,KAAK,IAAI,IAAIA,QAAQ,GAAG,CAAC,GAAGA,QAAQ,GAAGD,YAAY;EACpE,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMI,eAAe,GAAGA,CAC7BpK,KAAc,EACdqK,MAA8D,EAC9DL,YAAgB,KACD;IAAA,IAAAM,WAAA,EAAAC,WAAA;EAEf,EAAA,MAAMN,QAAQ,GAAGF,KAAK,CAAC/J,KAAK,EAAE,IAAI,CAAC;EACnC,EAAA,MAAMsD,GAAG,GAAA,CAAAgH,WAAA,GAAGD,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAE/G,GAAG,MAAA,IAAA,IAAAgH,WAAA,KAAA,MAAA,GAAAA,WAAA,GAAI,IAAI;EAC/B,EAAA,MAAMjH,GAAG,GAAA,CAAAkH,WAAA,GAAGF,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEhH,GAAG,MAAA,IAAA,IAAAkH,WAAA,KAAA,MAAA,GAAAA,WAAA,GAAI,IAAI;EAE/B,EAAA,IAAIzJ,MAAkB;EACtB,EAAA,IAAI,CAAC+I,UAAU,CAACI,QAAQ,CAAC,EAAE;EAAA,IAAA,IAAAO,IAAA;EACzB1J,IAAAA,MAAM,GAAgC,CAAA0J,IAAA,GAAIlH,GAAG,KAAA,IAAA,IAAHA,GAAG,KAAA,MAAA,GAAHA,GAAG,GAAID,GAAG,MAAA,IAAA,IAAAmH,IAAA,KAAA,MAAA,GAAAA,IAAA,GAAI,CAAE;IAC5D,CAAC,MAAM,IAAIlH,GAAG,KAAK,IAAI,IAAI2G,QAAQ,GAAG3G,GAAG,EAAE;EACzCxC,IAAAA,MAAM,GAAmCwC,GAAG;IAC9C,CAAC,MAAM,IAAID,GAAG,KAAK,IAAI,IAAI4G,QAAQ,GAAG5G,GAAG,EAAE;EACzCvC,IAAAA,MAAM,GAAmCuC,GAAG;EAC9C,EAAA,CAAC,MAAM;EACLvC,IAAAA,MAAM,GAAGmJ,QAAQ;EACnB,EAAA;EAEA,EAAA,OAAOnJ,MAAM;EACf,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAM2J,MAAM,GAAGA,CAAC,GAAG3E,MAAgB,KACxCyB,GAAM,CAAC,GAAGzB,MAAM,CAACf,GAAG,CAAEnI,CAAC,IAAK2K,GAAM,CAAC3K,CAAC,CAAC,CAAC,CAAC;;EAYzC;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAM8N,YAAY,GAAGA,CAAC,GAAG5E,MAAgB,KAC9CyB,QAAW,CAACzB,MAAM,CAAC,GACfA,MAAM,CAAC6E,IAAI,CAAC,CAACpJ,CAAC,EAAEqJ,CAAC,KAAKrD,GAAM,CAACqD,CAAC,CAAC,GAAGrD,GAAM,CAAChG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAC/C,CAAC5G,QAAW;;EAclB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMkQ,MAAM,GAAGA,CAAC1L,CAAS,EAAEG,CAAS,KACzCwL,cAAc,CAACnQ,IAAO,CAACoQ,KAAK,CAACzL,CAAC,EAAEH,CAAC,CAAC,CAAC,CAAC;;EAEtC;EACA;EACA;EACA;EACA;EACA;EACO,MAAM2L,cAAc,GAAIvJ,CAAS,IAAK;EAC3C;IACA,OAAOA,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG5G,EAAK,GAAG,CAAC,EAAE;EAC7B4G,IAAAA,CAAC,IAAI,CAACA,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI5G,EAAK,GAAG,CAAC;EACnC,EAAA;;EAEA;EACA,EAAA,OAAO4G,CAAC,GAAG5G,EAAK,GAAG4G,CAAC,GAAG5G,EAAK,GAAG,CAAC,GAAG4G,CAAC;EACtC,CAAC;;EAED;EACA;EACA;EACA;EACA;EACO,MAAMyJ,QAAQ,GAAIzJ,CAAS,IAAMA,CAAC,GAAG5G,EAAK,GAAI,GAAG;;EASxD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMsQ,WAAW,GAAGA,CAACC,EAAU,EAAEC,EAAU,EAAEC,kBAAkB,GAAG,CAAC,KAAK;EAC7E,EAAA,MAAMC,MAAM,GAAGR,MAAM,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEA,EAAE,CAAC,CAAC,CAAC,CAAC;EACnC,EAAA,MAAMI,MAAM,GAAGT,MAAM,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEA,EAAE,CAAC,CAAC,CAAC,CAAC;EACnCC,EAAAA,kBAAkB,GAAG7D,GAAM,CAAC,KAAK,EAAEA,GAAM,CAAC6D,kBAAkB,CAAC,CAAC;EAE9D,EAAA,OACE7D,GAAM,CAACuD,cAAc,CAACO,MAAM,GAAGC,MAAM,CAAC,CAAC,IAAIN,QAAQ,CAACI,kBAAkB,CAAC;EAE3E,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMG,eAAe,GAAGA,CAC7BL,EAAU,EACVC,EAAU,EACVC,kBAAkB,GAAG,CAAC,KACnBH,WAAW,CAACC,EAAE,EAAE,CAAC,CAACC,EAAE,CAAC,CAAC,CAAC,EAAE,CAACA,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEC,kBAAkB,CAAC;;EAE1D;EACA;EACA;EACA;EACA;EACO,MAAMI,eAAe,GAAGA,CAACC,GAAU,EAAEC,GAAU,KACpDnE,IAAO,CAACA,GAAM,CAACkE,GAAG,CAAC,CAAC,CAAC,GAAGC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGnE,GAAM,CAACkE,GAAG,CAAC,CAAC,CAAC,GAAGC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;EAelE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMC,aAAa,GAAIxM,CAAS,IACrCA,CAAC,GAAG,GAAG,GAAG,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,CAAC,GAAGoI,GAAM,CAAC,EAAE,GAAGpI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;;EAErD;EACA;EACA;EACA;EACA;EACO,MAAMyM,eAAe,GAAGA,CAC7B3K,GAAM,EACN4K,UAAU,GAAG,KAAK,KACC;EACnB,EAAA,IAAIA,UAAU,EAAE;MACd,OAAOtE,MAAS,CAACtG,GAAG,CAAC,CAAC0J,IAAI,CAAC,CAACxL,CAAU,EAAEG,CAAU,KAAK2B,GAAG,CAAC3B,CAAC,CAAC,GAAG2B,GAAG,CAAC9B,CAAC,CAAC,CAAC;EACzE,EAAA;IAEA,OAAOoI,MAAS,CAACtG,GAAG,CAAC,CAAC0J,IAAI,CAAC,CAACxL,CAAU,EAAEG,CAAU,KAAK2B,GAAG,CAAC9B,CAAC,CAAC,GAAG8B,GAAG,CAAC3B,CAAC,CAAC,CAAC;EACzE,CAAC;;EA4BD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMwM,UAAU,GAAGA,CAACC,KAAa,EAAEC,GAAW,KACnDD,KAAK,GAAGC,GAAG,GACPF,UAAU,CAACE,GAAG,EAAED,KAAK,CAAC,GACrB,EAAE,KAAM,EAAE,GAAGC,GAAG,GAAG,CAAC,GAAGD,KAAM,IAAKA,KAAK;;EC9V9C;EACA;EACA;EACA;EACA;;EAiBO,MAAME,gBAAgB,GAAGA,CAAmBC,OAAU,EAAEC,KAAQ,KAAK;EAC1E,EAAA,KAAK,MAAMnH,GAAG,IAAImH,KAAK,EAAE;MACvB,IAAI,CAAC5E,UAAa,CAAC4E,KAAK,EAAEnH,GAAG,CAAC,EAAE;EAC9B,MAAA;EACF,IAAA;MAEA,IAAIA,GAAG,IAAIkH,OAAO,EAAE;EAClB,MAAA,IAAI3E,cAAiB,CAAC2E,OAAO,CAAClH,GAAG,CAAC,CAAC,IAAIuC,cAAiB,CAAC4E,KAAK,CAACnH,GAAG,CAAC,CAAC,EAAE;UACpEiH,gBAAgB,CAACC,OAAO,CAAClH,GAAG,CAAC,EAAEmH,KAAK,CAACnH,GAAG,CAAC,CAAC;EAC5C,MAAA,CAAC,MAAM;EACLmH,QAAAA,KAAK,CAACnH,GAAG,CAAC,GAAGkH,OAAO,CAAClH,GAAG,CAAC;EAC3B,MAAA;EACF,IAAA;EACF,EAAA;EACF,CAAC;;EAED;EACA;EACA;EACO,MAAMoH,QAAQ,GAAGA,CAItBnL,GAAM,EACNoL,QAAW,KACU;IACrB,MAAMC,GAAe,GAAG,EAAE;EAC1B,EAAA,IAAItH,GAAY;IAEhB,KAAKA,GAAG,IAAI/D,GAAG,EAAE;EACf,IAAA,IAAI,EAAE+D,GAAG,IAAIqH,QAAQ,CAAC,EAAE;EACtBC,MAAAA,GAAG,CAACtH,GAAG,CAAC,GAAG/D,GAAG,CAAC+D,GAAG,CAAC;EACrB,IAAA;EACF,EAAA;EAEA,EAAA,OAAOsH,GAAG;EACZ,CAAC;;EAED;EACA;EACO,MAAMC,eAAe,GAAGA,CAC7BC,IAAO,EACPC,IAAO,EACPC,OAAO,GAAG,CAAC,KACR;EACH,EAAA,KAAK,MAAM1H,GAAG,IAAIwH,IAAI,EAAE;MACtB,IAAI,CAACjF,UAAa,CAACiF,IAAI,EAAExH,GAAG,CAAC,EAAE;EAC7B,MAAA;EACF,IAAA;EAEA,IAAA,MAAM2H,IAAI,GAAGH,IAAI,CAACxH,GAAG,CAAC;EACtB,IAAA,MAAM4H,IAAI,GAAGH,IAAI,CAACzH,GAAG,CAAC;EAEtB,IAAA,IAAIuC,cAAiB,CAACoF,IAAI,CAAC,IAAIpF,cAAiB,CAACqF,IAAI,CAAC,EAAE;EACtD,MAAA,IAAI,CAACL,eAAe,CAACI,IAAI,EAAEC,IAAI,CAAC,EAAE;EAChC,QAAA,OAAO,KAAK;EACd,MAAA;EACF,IAAA,CAAC,MAAM,IAAIrF,QAAW,CAACoF,IAAI,CAAC,IAAIpF,QAAW,CAACqF,IAAI,CAAC,EAAE;EACjD,MAAA,IAAIlD,UAAU,CAACiD,IAAI,EAAED,OAAO,CAAC,KAAKhD,UAAU,CAACkD,IAAI,EAAEF,OAAO,CAAC,EAAE;EAC3D,QAAA,OAAO,KAAK;EACd,MAAA;EACF,IAAA,CAAC,MAAM,IAAIC,IAAI,KAAKC,IAAI,EAAE;EACxB,MAAA,OAAO,KAAK;EACd,IAAA;EACF,EAAA;EACA,EAAA,OAAO,IAAI;EACb,CAAC;;ECvFD;EACA;EACA;;EAOA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMC,cAAc,GAAGA,CAAC7M,KAAc,EAAE8M,MAAe,KAAK;EACjE,EAAA,MAAMhM,MAAM,GAAGiM,oBAAoB,CAAC/M,KAAK,EAAE,KAAK,CAAC;EAMjD,EAAA,OAAOc,MAAM;EACf,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMkM,YAAY,GAAGA,CAACC,SAAiB,EAAE,GAAGC,IAAe,KAChEA,IAAI,CAACnI,GAAG,CAAExD,CAAC,IAAKsL,cAAc,CAACtL,CAAC,CAAC,CAAC,CAAC4L,IAAI,CAACF,SAAS,CAAC;;EAEpD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMG,OAAO,GAAGA,CACrBC,KAAa,EACbJ,SAA0B,EAC1BK,IAAc,EACdC,KAAc,KACX;EACH,EAAA,IAAI,CAACF,KAAK,CAACC,IAAI,EAAE,EAAE;EACjB,IAAA,OAAO,EAAE;EACX,EAAA;IAEAC,KAAK,KAAA,IAAA,IAALA,KAAK,KAAA,MAAA,GAALA,KAAK,GAALA,KAAK,GAAK,EAAE;IAEZ,MAAMC,MAAgB,GAAG,EAAE;EAC3B,EAAA,MAAMC,QAAQ,GAAI1S,CAAS,IAAKyS,MAAM,CAACE,IAAI,CAACJ,IAAI,GAAGvS,CAAC,CAACuS,IAAI,EAAE,GAAGvS,CAAC,CAAC;IAEhE,OAAOwS,KAAK,EAAE,EAAE;MACd,IAAII,UAAU,GAAG,EAAE;EACjBC,MAAAA,WAAW,GAAG,CAAC;EACjB,IAAA,IAAIrG,eAAkB,CAAC0F,SAAS,CAAC,EAAE;EACjCU,MAAAA,UAAU,GAAGN,KAAK,CAAC9M,OAAO,CAAC0M,SAAS,CAAC;EACrCW,MAAAA,WAAW,GAAGrG,QAAW,CAAC0F,SAAS,CAAC;EACtC,IAAA,CAAC,MAAM;EAAA,MAAA,IAAAY,YAAA;EACL,MAAA,MAAMnU,KAAK,GAAGuT,SAAS,CAACa,IAAI,CAACT,KAAK,CAAC;EACnCM,MAAAA,UAAU,IAAAE,YAAA,GAAGnU,KAAK,KAAA,IAAA,IAALA,KAAK,KAAA,MAAA,GAAA,MAAA,GAALA,KAAK,CAAEiL,KAAK,cAAAkJ,YAAA,KAAA,MAAA,GAAAA,YAAA,GAAI,EAAE;EAC/BD,MAAAA,WAAW,GAAGlU,KAAK,GAAG6N,QAAW,CAAC7N,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EACjD,IAAA;MAEA,IAAIiU,UAAU,GAAG,CAAC,EAAE;EAClB,MAAA;EACF,IAAA;MAEAF,QAAQ,CAACJ,KAAK,CAAC7L,KAAK,CAAC,CAAC,EAAEmM,UAAU,CAAC,CAAC;MACpCN,KAAK,GAAGA,KAAK,CAAC7L,KAAK,CAACmM,UAAU,GAAGC,WAAW,CAAC;EAC/C,EAAA;IAEAH,QAAQ,CAACJ,KAAK,CAAC;EACf,EAAA,OAAOG,MAAM;EACf,CAAC;;EAWD;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMnT,gBAAgB,GAAGkN,kBAAmB;;EAEnD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMwG,MAAM,GAAGA,CAACC,MAAM,GAAG,CAAC,KAAK;IACpC,MAAMC,OAAO,GAAGA,MACd1G,KAAQ,CAAC,MAAM,GAAG5M,IAAO,CAACuT,MAAM,EAAE,GAAG,MAAM,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;IAE3D,IAAIpT,CAAC,GAAG,EAAE;IACV,OAAOwM,QAAW,CAACxM,CAAC,CAAC,GAAGiT,MAAM,EAAE;MAC9BjT,CAAC,IAAIkT,OAAO,EAAE;EAChB,EAAA;EACA,EAAA,OAAOlT,CAAC,CAACyG,KAAK,CAAC,CAAC,EAAEwM,MAAM,CAAC;EAC3B,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMI,SAAS,GAAGA,CAACpO,KAAa,EAAEqO,YAAkB,KAAK;EAAA,EAAA,IAAAC,OAAA,EAAAC,QAAA,EAAA/D,IAAA,EAAAgE,QAAA;EAC9D,EAAA,MAAMC,SAAS,GAAGA,CAACC,QAA4B,EAAE/J,KAAa,KAAK;MACjE,IAAIgK,MAAM,GAAGpH,UAAa,CAACmH,QAAQ,IAAI,EAAE,CAAC,IAAI,CAAC;EAE/C,IAAA,IAAIA,QAAQ,KAAKC,MAAM,GAAG,GAAG,EAAE;EAC7BA,MAAAA,MAAM,IACJhK,KAAK,GAAG,CAAC,GAAG0J,YAAY,CAAC1T,QAAW,CAAC,GAAG0T,YAAY,CAAC1T,OAAU,CAAC;EACpE,IAAA;EAEA,IAAA,OAAOgU,MAAM;IACf,CAAC;IAED,MAAMC,KAAK,GAAGxB,OAAO,CAACpN,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC;EACvC,EAAA,MAAM6O,OAAyC,GAAG;EAChD;EACAJ,EAAAA,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EACtB;EACAH,EAAAA,SAAS,EAAAH,OAAA,GAACM,KAAK,CAAC,CAAC,CAAC,MAAA,IAAA,IAAAN,OAAA,KAAA,MAAA,GAAAA,OAAA,GAAIM,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAClC;EACAH,EAAAA,SAAS,EAAAF,QAAA,GAACK,KAAK,CAAC,CAAC,CAAC,MAAA,IAAA,IAAAL,QAAA,KAAA,MAAA,GAAAA,QAAA,GAAIK,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAClC;EACAH,EAAAA,SAAS,CAAA,CAAAjE,IAAA,GAAA,CAAAgE,QAAA,GAACI,KAAK,CAAC,CAAC,CAAC,MAAA,IAAA,IAAAJ,QAAA,KAAA,MAAA,GAAAA,QAAA,GAAII,KAAK,CAAC,CAAC,CAAC,MAAA,IAAA,IAAApE,IAAA,KAAA,MAAA,GAAAA,IAAA,GAAIoE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAC/C;EAED,EAAA,OAAOC,OAAO;EAChB,CAAC;;EAED;EACA;EACA;EACA;EACO,MAAMC,WAAW,GAAI7N,GAAc,IACxCsG,SAAY,CAACwH,iBAAiB,CAAC9N,GAAG,CAAC,CAAC;;EAEtC;;EAEA,MAAM8N,iBAAiB,GAAI9N,GAAc,IAAgB;EACvD,EAAA,MAAMR,KAAK,GAAG8G,OAAU,CAACtG,GAAG,CAAC,GACzBA,GAAG,GACHsG,MAAS,CAACtG,GAAG,CAAC,CACX0J,IAAI,EAAE,CACN5F,GAAG,CAAEiK,CAAC,IAAK/N,GAAG,CAAC+N,CAAC,CAAC,CAAC;EAEzB,EAAA,OAAOvO,KAAK,CAACsE,GAAG,CAAE/E,KAAK,IAAK;MAC1B,IACEuH,OAAU,CAACvH,KAAK,CAAC,IAChBuH,cAAiB,CAACvH,KAAK,CAAC,IAAIuH,aAAgB,CAACvH,KAAK,CAAC,KAAKrF,MAAU,EACnE;QACA,OAAOoU,iBAAiB,CAAC/O,KAAK,CAAC;EACjC,IAAA;EACA,IAAA,OAAOA,KAAK;EACd,EAAA,CAAC,CAAC;EACJ,CAAC;EAED,MAAMiP,iBAAiB,GAAGA,CAACjK,GAAW,EAAEhF,KAAc,KACpDgF,GAAG,GAAG+H,oBAAoB,CAAC/M,KAAK,EAAE,IAAI,CAAC,GAAGA,KAAK;EAEjD,MAAM+M,oBAAoB,GAAGA,CAC3B/M,KAAQ,EACRkP,MAAS,KACiC;IAC1C,IAAIpO,MAAkB,GAAG,EAAE;EAE3B,EAAA,IAAIyG,SAAY,CAACvH,KAAK,CAAC,EAAE;EACvB,IAAA,MAAMmP,QAAQ,GAAG5H,SAAY,CAACvH,KAAK,CAAC,CAACmO,QAAQ,EAAE,CAACb,IAAI,EAAE;EAEtDxM,IAAAA,MAAM,GAAGd,KAAK,CAACoP,EAAE,GACb,GAAG,GAAGpP,KAAK,CAACoP,EAAE,GACd,CAAA,CAAA,EAAI7H,OAAU,CAACvH,KAAK,CAAC,CAAA,EAAGmP,QAAQ,GAAG,UAAU,GAAGA,QAAQ,GAAG,GAAG,GAAG,EAAE,CAAA,CAAA,CAAG;;EAE1E;IACF,CAAC,MAAM,IAAI5H,YAAe,CAACvH,KAAK,EAAEpG,KAAK,CAAC,EAAE;EACxC;EACA,IAAA,IAAI,OAAO,IAAIoG,KAAK,IAAIuH,QAAW,CAACvH,KAAK,CAACqP,KAAK,CAAC,EAAE;QAChDvO,MAAM,GAAGd,KAAK,CAACqP,KAAK;EACtB,IAAA,CAAC,MAAM;EACLvO,MAAAA,MAAM,GAAG,CAAA,OAAA,EAAUd,KAAK,CAACjG,OAAO,CAAA,CAAE;EACpC,IAAA;;EAEA;IACF,CAAC,MAAM,IAAIwN,OAAU,CAACvH,KAAK,CAAC,EAAE;EAC5Bc,IAAAA,MAAM,GACJ,GAAG,GACHd,KAAK,CACF+E,GAAG,CAAEnI,CAAC,IACL2K,QAAW,CAAC3K,CAAC,CAAC,GAAG2K,SAAY,CAAC3K,CAAC,CAAC,GAAGmQ,oBAAoB,CAACnQ,CAAC,EAAE,KAAK,CAClE,CAAC,CACAuQ,IAAI,CAAC,GAAG,CAAC,GACZ,GAAG;;EAEL;IACF,CAAC,MAAM,IAAI5F,gBAAmB,CAACvH,KAAK,CAAC,EAAE;MACrCc,MAAM,GACJyG,aAAgB,CAACvH,KAAK,CAAC,GACvB,GAAG,GACH+M,oBAAoB,CAACxF,SAAY,CAACvH,KAAK,CAAC,EAAE,KAAK,CAAC,GAChD,GAAG;;EAEL;IACF,CAAC,MAAM,IAAIuH,cAAiB,CAACvH,KAAK,CAAC,EAAE;EACnCc,IAAAA,MAAM,GAAGoO,MAAM,GAAGlP,KAAK,GAAGuH,SAAY,CAACvH,KAAK,EAAEiP,iBAAiB,CAAC;;EAEhE;EACF,EAAA,CAAC,MAAM;EACL;MACAnO,MAAM,GAAGoO,MAAM,GAAGlP,KAAK,GAAGrF,MAAS,CAACqF,KAAK,CAAC;EAC5C,EAAA;EAEA,EAAA,OAAOc,MAAM;EACf,CAAC;;EC1RD;EACA;EACA;;;EAqCA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMwO,eAAe,GAAGA,CAC7BtK,GAAW,EACXhF,KAAc,EACduP,OAAuC,KAAA;EAAA,EAAA,IAAAC,QAAA;EAAA,EAAA,OAEvCjI,WAAc,CAAA,CAAAiI,QAAA,GACZC,OAAO,CAACzP,KAAK,CAAC,MAAA,IAAA,IAAAwP,QAAA,uBAAdA,QAAA,CAAgBzK,GAAG,CAAEnI,CAAC,IACpB8S,eAAe,CAAC1K,GAAG,EAAEpI,CAAC,EAAE2S,OAAO,EAAE,4BAA4B,CAC/D,CACF,CAAC;EAAA,CAAA;;EAmIH;;EAEA,MAAME,OAAO,GAAIzP,KAAc,IAA4B;EACzD,EAAA,IAAIc,MAAwB;EAC5B,EAAA,IAAIyG,OAAU,CAACvH,KAAK,CAAC,EAAE;EACrBc,IAAAA,MAAM,GAAGd,KAAK;IAChB,CAAC,MAAM,IAAIuH,gBAAmB,CAACvH,KAAK,CAAC,EAAE;EACrCc,IAAAA,MAAM,GAAGyG,SAAY,CAACvH,KAAK,CAAC;IAC9B,CAAC,MAAM,IAAIuH,eAAkB,CAACvH,KAAK,CAAC,EAAE;EACpCc,IAAAA,MAAM,GAAGsM,OAAO,CAACpN,KAAK,EAAE,GAAG,CAAC;IAC9B,CAAC,MAAM,IAAI,CAACuH,SAAY,CAACvH,KAAK,CAAC,EAAE;MAC/Bc,MAAM,GAAG,CAACd,KAAK,CAAC;EAClB,EAAA,CAAC,MAAM;EACLc,IAAAA,MAAM,GAAG,IAAI;EACf,EAAA;EAEA,EAAA,OAAOA,MAAM,GACTyG,WAAc,CAACzG,MAAM,CAACiE,GAAG,CAAEnI,CAAC,IAAM2K,eAAkB,CAAC3K,CAAC,CAAC,GAAGA,CAAC,CAAC0Q,IAAI,EAAE,GAAG1Q,CAAE,CAAC,CAAC,GACzEC,SAAS;EACf,CAAC;EAsCD,MAAM6S,eAAe,GAAGA,CACtB1K,GAAW,EACXhF,KAAc,EACduP,OAAuC,EACvCI,eAAwB,KAC+C;EACvE,EAAA,IAAIpI,SAAY,CAACvH,KAAK,CAAC,EAAE;EACvB,IAAA;EACF,EAAA;EAEA,EAAA,IAAI,CAACuH,eAAkB,CAACvH,KAAK,CAAC,EAAE;EAC9B,IAAA,MAAMuH,UAAa,CAAC,IAAIvC,GAAG,CAAA,UAAA,EAAa2K,eAAe,CAAc,EAAE,CAAC;IAC1E,CAAC,MAAM,IAAIJ,OAAO,IAAI,CAACA,OAAO,CAACvP,KAAK,CAAC,EAAE;EACrC,IAAA,MAAMuH,UAAa,CAAC,CAAA,mBAAA,EAAsBvC,GAAG,GAAG,CAAC;EACnD,EAAA;EAEA,EAAA,OAAOhF,KAAK;EACd,CAAC;;EChRD;EACA;EACA;;;EAQA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EA6FA;EACA;EACA;EACA;EACO,MAAM4P,SAAS,CAAC;EACrB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAKE;EACF;EACA;EACA;;EAGE;EACF;EACA;;EAGE9V,EAAAA,WAAWA,GAAG;EACZ,IAAA,MAAM+V,OAAO,GAAGC,UAAU,EAAE;EAE5B,IAAA,IAAI,CAACC,MAAM,GAAG,CAAC,GAAGC,SAAS,KAAKC,WAAW,CAACJ,OAAO,EAAEG,SAAS,CAAC;EAC/DzI,IAAAA,cAAiB,CAAC,IAAI,EAAE,OAAO,EAAE;EAAE2I,MAAAA,GAAG,EAAEA,MAAML,OAAO,CAACM;EAAO,KAAC,CAAC;EAC/D5I,IAAAA,cAAiB,CAAC,IAAI,EAAE,SAAS,EAAE;EAAE2I,MAAAA,GAAG,EAAEA,MAAML,OAAO,CAACO;EAAS,KAAC,CAAC;EACrE,EAAA;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMC,YAAY,GAAGA,MAAM,IAAIT,SAAS,EAAE;;EAEjD;EACA;EACA;EACA;EACA;EACA;EACO,MAAMU,cAAc,GAAGA,CAC5BC,MAAiB,EACjB,GAAGP,SAAuB,KACVO,MAAM,CAACR,MAAM,CAAC,GAAGC,SAAS,CAAC;;EAE7C;;EAOA,MAAMF,UAAU,GAAGA,OAAmB;EACpCK,EAAAA,MAAM,EAAE,CAAC;EACTC,EAAAA,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMH,WAAW,GAAGA,CAClBJ,OAAmB,EACnBG,SAAuB,KACP;EAChB,EAAA,MAAMjE,KAAK,GAAG8D,OAAO,CAACM,MAAM;IAC5B,MAAMnE,GAAG,GAAGD,KAAK,GAAGxE,QAAW,CAACyI,SAAS,CAAC,GAAG,CAAC;IAC9C,IAAIhE,GAAG,IAAI,EAAE,EAAE;EACb,IAAA,MAAMzE,UAAa,CAAC,oBAAoB,CAAC;EAC3C,EAAA;EAEA,EAAA,MAAMiJ,OAAO,GAAG1E,UAAU,CAACC,KAAK,EAAEC,GAAG,CAAC;EACtC,EAAA,MAAMyE,KAAkB,GAAG;MACzBC,GAAG,EAAE,EAAE;MACP3E,KAAK;MACLC,GAAG;MACHwE,OAAO;MAEPG,GAAG,EAAGC,CAAC,IACLrJ,QAAW,CAACqJ,CAAC,CAAC,IACdA,CAAC,IAAIH,KAAK,CAACC,GAAG,IACdnJ,QAAW,CAAEkJ,KAAK,CAACC,GAAG,CAA6BE,CAAC,CAAC,CAAC;EAExDC,IAAAA,UAAU,EAAEA,CAACC,MAAM,EAAEC,IAAI,KAAK;EAC5B,MAAA,IACG,CAACxJ,OAAU,CAACuJ,MAAM,CAAC,IAAI,CAACL,KAAK,CAACE,GAAG,CAACG,MAAM,CAAC,IACzC,CAACvJ,OAAU,CAACwJ,IAAI,CAAC,IAAI,CAACN,KAAK,CAACE,GAAG,CAACI,IAAI,CAAE,EACvC;EACA,QAAA,OAAO,CAAC;EACV,MAAA;QAEA,MAAMC,SAAS,GAAG,CAACzJ,OAAU,CAACuJ,MAAM,CAAC,GACjCvJ,IAAO,CAACkJ,KAAK,CAACC,GAAG,CAACI,MAAM,CAAC,CAAC,GAC1B/E,KAAK;QACT,MAAMkF,OAAO,GAAG,CAAC1J,OAAU,CAACwJ,IAAI,CAAC,GAAGxJ,IAAO,CAACkJ,KAAK,CAACC,GAAG,CAACK,IAAI,CAAC,CAAC,GAAG/E,GAAG;EAElE,MAAA,OAAOF,UAAU,CAACkF,SAAS,EAAEC,OAAO,CAAC;MACvC,CAAC;EAEDC,IAAAA,MAAM,EAAGC,GAAG,IAAA;EAAA,MAAA,IAAAC,UAAA;EAAA,MAAA,OAAA,CAAAA,UAAA,GAAKpB,SAAS,CAACzI,IAAO,CAAC4J,GAAG,CAAC,GAAGpF,KAAK,CAAC,MAAA,IAAA,IAAAqF,UAAA,KAAA,MAAA,GAAAA,UAAA,GAAI,IAAI;EAAA,IAAA;KAC1C;EAEhB,EAAA,KAAK,MAAMpX,IAAI,IAAIgW,SAAS,EAAE;MAC5BzI,cAAiB,CAACkJ,KAAK,CAACC,GAAG,EAAE1W,IAAI,EAAE;EACjCgG,MAAAA,KAAK,EAAE,CAAC,IAAI6P,OAAO,CAACM,MAAM,EAAE;EAC5BkB,MAAAA,UAAU,EAAE;EACd,KAAC,CAAC;EACJ,EAAA;IAEAxB,OAAO,CAACO,QAAQ,IAAII,OAAO;EAE3B,EAAA,OAAOC,KAAK;EACd,CAAC;;EC5RD;EACA;EACA;;;EA2BA;EACA;EACA;EACA;EACO,MAAMa,oBAAoB,GAAGhB,cAAc,CAChDD,YAAY,EAAE,EACd1V,OAAU,EACVA,SAAY,EACZA,WACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ECtCD;EACA;EACA;;;EAIA;EACA;EACA;;EAOA;EACA;EACA;;EASA;EACA;EACA;;EAGA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAM4W,wBAAwB,GAAIC,IAAgB,IAAK;EAC5D,EAAA,IAAI,OAAOC,SAAS,KAAK,WAAW,EAAE;EACpCA,IAAAA,SAAS,CAACC,QAAQ,CAACF,IAAI,EAAE;EACvBG,MAAAA,QAAQ,EAAE;EACZ,KAAC,CAAC;EACJ,EAAA,CAAC,MAAM;EACL;EACA,IAAA,MAAMC,OAAO,GAAG,IAAIC,cAAc,EAAE;EACpCD,IAAAA,OAAO,CAACE,KAAK,CAACC,SAAS,GAAG,MAAM;EAC9BH,MAAAA,OAAO,CAACE,KAAK,CAACE,KAAK,EAAE;EACrBR,MAAAA,IAAI,EAAE;MACR,CAAC;EACDI,IAAAA,OAAO,CAACK,KAAK,CAACC,WAAW,CAAC,EAAE,CAAC;EAC/B,EAAA;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACO,MAAMC,mBAAmB,GAAGA,CACjCC,cAAsB,EACtBC,OAAgC,KAC7B;IACH,IAAI,CAACD,cAAc,EAAE;EACnB,IAAA,OAAOC,OAAO;EAChB,EAAA;IAEA,IAAIC,KAA2C,GAAG,IAAI;EACtD,EAAA,IAAIC,QAAc;IAElB,OAAO,CAAC,GAAGrF,IAAU,KAAK;EACxBqF,IAAAA,QAAQ,GAAGrF,IAAI;MAEf,IAAIoF,KAAK,KAAK,IAAI,EAAE;EAClBA,MAAAA,KAAK,GAAG/K,QAAW,CAAC,YAAY;EAC9B,QAAA,MAAM8K,OAAO,CAAC,GAAGE,QAAQ,CAAC;EAC1BD,QAAAA,KAAK,GAAG,IAAI;QACd,CAAC,EAAEF,cAAc,CAAC;EACpB,IAAA;IACF,CAAC;EACH,CAAC;;EAaD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMI,qBAAqB,GAAG,YACnCjL,UAAa,CAAUnF,OAAO,IAAK;EACjCmF,EAAAA,gBAAmB,CAACnF,OAAO,CAAC;EAC9B,CAAC,CAAC;;ECnGJ;EACA;EACA;;EAUA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMqQ,YAAY,GAAGA,CAC1BC,iBAAyD,EACzDN,cAAc,GAAG,CAAC,KACC;EACnB,EAAA,MAAM3U,YAAU,GAAG8J,UAAa,CAACmL,iBAAiB,CAAC;EACnD,EAAA,IAAIC,SAAS,GAAGA,MAAM,KAAK;EAE3B,EAAA,IAAIlV,YAAU,EAAE;EACd;EACA,IAAA,MAAMnB,QAAQ,GAAGsW,YAAY,CAAC1C,GAAG,CAACwC,iBAAiB,CAAC;EACpD,IAAA,IAAIpW,QAAQ,EAAE;QACZ,OAAOmW,YAAY,CAACnW,QAAQ,CAAC;EAC/B,IAAA;EACF,EAAA,CAAC,MAAM;MACLqW,SAAS,GAAGD,iBAAiB,CAACC,SAAS;EACzC,EAAA;EAEA,EAAA,MAAMN,OAA8B,GAAG5U,YAAU,GAC7CiV,iBAAiB,GACjB,CAAC,GAAGxF,IAAU,KAAKwF,iBAAiB,CAACG,MAAM,CAAC,GAAG3F,IAAI,CAAC;EAExD,EAAA,MAAM4F,OAAO,GAAG,IAAIC,QAAQ,CAC1BZ,mBAAmB,CAACC,cAAc,EAAE,CAAC,GAAGlF,IAAU,KAAK;EACrD,IAAA,IAAI,CAACyF,SAAS,EAAE,EAAE;EAChB,MAAA,OAAON,OAAO,CAAC,GAAGnF,IAAI,CAAC;EACzB,IAAA;EACF,EAAA,CAAC,CACH,CAAC;IAED,IAAI,CAACzP,YAAU,EAAE;EACfiV,IAAAA,iBAAiB,CAACM,QAAQ,CAACF,OAAO,CAACjO,MAAM,CAAC;EAC5C,EAAA;EAEA,EAAA,OAAOiO,OAAO;EAChB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMC,QAAQ,CAA8B;EAiFjD;EACF;EACA;EACA;IACEjZ,WAAWA,CAACuY,OAA8B,EAAE;MAK1C,IAAIM,SAAS,GAAG,KAAK;EACrB,IAAA,MAAMvD,EAAE,GAAGzU,MAAS,EAAE;EAEtB,IAAA,MAAMqY,QAAQ,GAAGzL,MAAS,EAAc;EAExC,IAAA,IAAI,CAACoL,SAAS,GAAG,MAAMA,SAAS;MAEhC,IAAI,CAAC9N,MAAM,GAAG,MAAM;QAClB,IAAI,CAAC8N,SAAS,EAAE;EAEdA,QAAAA,SAAS,GAAG,IAAI;EAEhB,QAAA,KAAK,MAAMM,IAAI,IAAID,QAAQ,EAAE;EAC3BC,UAAAA,IAAI,EAAE;EACR,QAAA;EAEAC,QAAAA,iBAAiB,CAACC,MAAM,CAAC/D,EAAE,CAAC;EAC9B,MAAA;OACD;MAED,IAAI,CAAC4D,QAAQ,GAAII,EAAE,IAAKJ,QAAQ,CAACK,GAAG,CAACD,EAAE,CAAC;EAExC,IAAA,IAAI,CAACP,MAAM,GAAG,CAAC,GAAG3F,IAAI,KACpB3F,UAAa,CAAC,CAACnF,OAAO,EAAEkR,MAAM,KAAK;EAEjC,MAAA,IAAIX,SAAS,EAAE;EACbW,QAAAA,MAAM,CAAC/L,UAAa,CAAC,2BAA2B,CAAC,CAAC;EAClD,QAAA;EACF,MAAA;EAEA2L,MAAAA,iBAAiB,CAACK,KAAK,CACrBnE,EAAE,EACF,YAAY;EACV,QAAA,IAAItO,MAAM;UACV,IAAI;EACFA,UAAAA,MAAM,GAAG,MAAMuR,OAAO,CAAC,GAAGnF,IAAI,CAAC;WAChC,CAAC,OAAOsG,GAAG,EAAE;YACZF,MAAM,CAACE,GAAG,CAAC;EACb,QAAA;EAEA,QAAA,IAAI1S,MAAM,KAAKiS,QAAQ,CAACU,MAAM,EAAE;YAC9B,IAAI,CAAC5O,MAAM,EAAE;EACf,QAAA;EAEAzC,QAAAA,OAAO,EAAE;SACV,EACDkR,MACF,CAAC;EACH,IAAA,CAAC,CAAC;MAEJV,YAAY,CAACc,GAAG,CAAC,IAAI,CAACb,MAAM,EAAE,IAAI,CAAC;EACrC,EAAA;EACF;EA7IE;EACF;EACA;EACA;EACA;EAJEc,eAAA,CADWZ,QAAQ,EAAA,MAAA,EAMmBpY,MAAS,CAC7C,MACF,CAAC,CAAA;EAED;EACF;EACA;EACA;EACA;EAJEgZ,eAAA,CAVWZ,QAAQ,EAAA,QAAA,EAeqBpY,MAAS,CAC/C,QACF,CAAC,CAAA;EA0CD;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAnBEgZ,eAAA,CA3DWZ,QAAQ,EAAA,MAAA,EA+EIN,YAAY,CAAA;EA4ErC,MAAMG,YAAY,GAAGrL,UAAa,EAA8B;EAEhE,MAAM2L,iBAAiB,GAAG,CAAC,MAAM;EAC/B,EAAA,MAAMU,MAAM,GAAGrM,MAAS,EAAwC;EAEhE,EAAA,MAAMsM,KAAK,GAAG,MAAOC,KAAmC,IAAK;EAC3D;EACA;EACA,IAAA,MAAM,IAAI;EACV,IAAA,OAAOvM,QAAW,CAACuM,KAAK,CAAC,EAAE;EACzB;EACAA,MAAAA,KAAK,CAAC,CAAC,CAAC,CAACC,QAAQ,GAAG,IAAI;EACxB,MAAA,MAAMD,KAAK,CAAC,CAAC,CAAC,CAACE,KAAK,EAAE;;EAEtB;QACAF,KAAK,CAACG,KAAK,EAAE;EACf,IAAA;KACD;IAED,OAAO;MACLd,MAAM,EAAG/D,EAAU,IAAK;EACtB,MAAA,MAAM0E,KAAK,GAAGF,MAAM,CAAC1D,GAAG,CAACd,EAAE,CAAC;EAC5B,MAAA,IAAI0E,KAAK,EAAE;EACT,QAAA,IAAII,IAA4C;EAChD,QAAA,OAAQA,IAAI,GAAGJ,KAAK,CAACG,KAAK,EAAE,EAAG;EAC7B,UAAA,IAAI,CAACC,IAAI,CAACH,QAAQ,EAAE;EAClBG,YAAAA,IAAI,CAACC,SAAS,CAACpB,QAAQ,CAACU,MAAM,CAAC;EACjC,UAAA;EACF,QAAA;EAEAlM,QAAAA,SAAY,CAACqM,MAAM,EAAExE,EAAE,CAAC;EAC1B,MAAA;OACD;EAEDmE,IAAAA,KAAK,EAAEA,CAACnE,EAAU,EAAEoC,IAA2B,EAAEwB,QAAoB,KAAK;EACxE,MAAA,IAAIc,KAAK,GAAGF,MAAM,CAAC1D,GAAG,CAACd,EAAE,CAAC;QAC1B,IAAI,CAAC0E,KAAK,EAAE;EACVA,QAAAA,KAAK,GAAG,EAAE;EACVF,QAAAA,MAAM,CAACF,GAAG,CAACtE,EAAE,EAAE0E,KAAK,CAAC;EACvB,MAAA;QAEAA,KAAK,CAACpG,IAAI,CAAC;EAAEsG,QAAAA,KAAK,EAAExC,IAAI;EAAE2C,QAAAA,SAAS,EAAEnB,QAAQ;EAAEe,QAAAA,QAAQ,EAAE;EAAM,OAAC,CAAC;QACjE,IAAIxM,QAAW,CAACuM,KAAK,CAAC,KAAK,CAAC,EAAE;UAC5BD,KAAK,CAACC,KAAK,CAAC;EACd,MAAA;EACF,IAAA;KACD;EACH,CAAC,GAAG;;ECtRJ;EACA;EACA;;;EAuBA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMM,OAAoB,GAAGA,CAAC,GAAGlH,IAAI,KAAK;EAC/C,EAAA,IAAI,CAACmH,aAAa,CAACnH,IAAI,CAAC,EAAE;MACxB3F,WAAc,CAAC5M,UAAa,EAAE,GAAGuS,IAAI,CAAC;EACxC,EAAA;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACO,MAAMoH,QAAqB,GAAGA,CAAC,GAAGpH,IAAI,KAAK;IAChD,IACE,CAAC3F,QAAW,CAAC2F,IAAI,CAAC,GAAG,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK6F,QAAQ,CAACU,MAAM,KACrD,CAACY,aAAa,CAACnH,IAAI,CAAC,EACpB;MACA3F,YAAe,CAAC5M,UAAa,EAAE,GAAGuS,IAAI,CAAC;EACzC,EAAA;EACF,CAAC;EAED,MAAMqH,eAAe,GAAGhN,MAAS,EAAU;EAC3C,MAAM8M,aAAa,GAAInH,IAAe,IAAK;IACzC,MAAMzG,GAAG,GAAGuG,YAAY,CAAC,GAAG,EAAE,GAAGE,IAAI,CAAC;EACtC,EAAA,MAAMsH,MAAM,GAAGD,eAAe,CAAC5D,GAAG,CAAClK,GAAG,CAAC;EACvC8N,EAAAA,eAAe,CAAClB,GAAG,CAAC5M,GAAG,CAAC;EACxB,EAAA,OAAO+N,MAAM;EACf,CAAC;;EC1DD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAOA;EACA;EACA;EACA;EACA;EACO,MAAMC,iBAAiB,GAAGA,MAC/BlN,UAAa,CAAQnF,OAAO,IAAK;EAC/BsS,EAAAA,eAAe,CAACC,qBAAqB,EAAEvS,OAAO,CAAC;EACjD,CAAC,CAAC;;EAEJ;EACA;EACA;EACA;EACA;EACA;EACO,MAAMwS,kBAAkB,GAAGA,MAChCrN,UAAa,CAAQnF,OAAO,IAAK;EAC/BsS,EAAAA,eAAe,CAACG,wBAAwB,EAAEzS,OAAO,CAAC;EACpD,CAAC,CAAC;;EAWJ;EACA;EACA;EACA;EACA;EACA;EACO,MAAM0S,4BAA4B,GAAGA,MAC1CF,kBAAkB,EAAE,CAACG,IAAI,CAACN,iBAAiB,CAAC,CAACM,IAAI,CAACH,kBAAkB,CAAC;;EAEvE;EACA;EACA;EACA;EACO,MAAMI,eAAe,GACIC,IAA4B,IAC1D,OAAO,GAAG/H,IAAU,KAClBuH,iBAAiB,EAAE,CAACM,IAAI,CAAC,MAAME,IAAI,CAAC,GAAG/H,IAAI,CAAC,CAAC;;EAWjD;;EAKA,MAAM2H,wBAAsC,GAAG,EAAE;EACjD,MAAMF,qBAAmC,GAAG,EAAE;EAC9C,IAAIO,oBAAoB,GAAG,KAAK;EAEhC,MAAMR,eAAe,GAAGA,CAACZ,KAAmB,EAAE1R,OAAqB,KAAK;EACtE0R,EAAAA,KAAK,CAACpG,IAAI,CAACtL,OAAO,CAAC;IACnB,IAAI,CAAC8S,oBAAoB,EAAE;EACzBA,IAAAA,oBAAoB,GAAG,IAAI;EAC3B3N,IAAAA,gBAAmB,CAAC4N,cAAc,CAAC;EACrC,EAAA;EACF,CAAC;EAED,MAAMA,cAAc,GAAG,YAAY;EACjC;EACA;EACA;EACA;;EAEA;EACA,EAAA,OAAO5N,QAAW,CAACoN,qBAAqB,CAAC,EAAE;MACzCS,eAAe,CAACT,qBAAqB,CAAC;EACtC;EACA,IAAA,MAAM,IAAI;EACZ,EAAA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACApD,EAAAA,wBAAwB,CAAC,YAAY;EACnC,IAAA,OAAOhK,QAAW,CAACsN,wBAAwB,CAAC,EAAE;QAC5CO,eAAe,CAACP,wBAAwB,CAAC;EACzC;EACA,MAAA,MAAM,IAAI;EACZ,IAAA;EAEA,IAAA,IAAItN,QAAW,CAACoN,qBAAqB,CAAC,EAAE;EACtC;EACApN,MAAAA,gBAAmB,CAAC4N,cAAc,CAAC;EACrC,IAAA,CAAC,MAAM;EACLD,MAAAA,oBAAoB,GAAG,KAAK;EAC9B,IAAA;EACF,EAAA,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,eAAe,GAAItB,KAAmB,IAAK;EAC/C,EAAA,IAAI1R,OAAiC;EACrC,EAAA,OAAQA,OAAO,GAAG0R,KAAK,CAACG,KAAK,EAAE,EAAG;MAChC,IAAI;EACF7R,MAAAA,OAAO,EAAE;EACX,IAAA,CAAC,CAAC,OAAOoR,GAAG,4BAA6B;QACvCc,QAAQ,CAACd,GAAG,CAAC;EACf,IAAA;EACF,EAAA;EACF,CAAC;;ECxJD;EACA;EACA;;;EA0BA;EACA;EACA;EACA;EACA;EACA;EACO,MAAM6B,WAAW,GAAI5Y,OAAe,IACzC6Y,UAAU,CAAC3E,GAAG,CAAClU,OAAO,CAAChC,WAAW,EAAE,CAAC;;EAEvC;EACA;EACA;EACA;EACA;EACO,MAAM8a,YAAY,GAAI5X,MAAe,IAC1C4J,aAAgB,CAAC5J,MAAM,CAAC,IACxB4J,YAAe,CAAC5J,MAAM,EAAE6X,UAAU,CAAC,IAClC,OAAOC,aAAa,KAAK,WAAW,IACnClO,YAAe,CAAC5J,MAAM,EAAE8X,aAAa,CAAE;;EAE3C;;EAEA,MAAMH,UAAU,GAAG/N,MAAS,CAAC,CAC3B,GAAG,EACH,MAAM,EACN,SAAS,EACT,GAAG,EACH,KAAK,EACL,KAAK,EACL,KAAK,EACL,QAAQ,EACR,MAAM,EACN,MAAM,EACN,MAAM,EACN,KAAK,EACL,IAAI,EACJ,GAAG,EACH,KAAK,EACL,OAAO,EACP,KAAK,EACL,OAAO,EACP,MAAM,EACN,KAAK,EACL,QAAQ,EACR,QAAQ,EACR,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,MAAM,EACN,GAAG,EACH,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,MAAM,EACN,QAAQ,EACR,KAAK,EACL,KAAK,EACL,UAAU,EACV,MAAM,EACN,IAAI,EACJ,GAAG,EACH,KAAK,CACN,CAAC;;EC3FF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAmSA;EACA;EACA;EACA;EACA;EACO,MAAMmO,QAAQ,GAAGA,CAAC1W,OAAgB,EAAE2W,SAAiB,KAC1DpO,SAAY,CAACvI,OAAO,CAAC,CAAC4W,QAAQ,CAACD,SAAS,CAAC;;EAU3C;EACA;EACA;EACA;EACA;EACO,MAAME,WAAW,GAAGA,CAAC7W,OAAgB,EAAE8W,UAAoB,KAChEvO,IAAO,CAACuO,UAAU,EAAGH,SAAS,IAAKD,QAAQ,CAAC1W,OAAO,EAAE2W,SAAS,CAAC,CAAC;;EAElE;EACA;EACA;EACA;EACA;EACO,MAAMI,aAAa,GAAGA,CAAC/W,OAAgB,EAAE,GAAG8W,UAAoB,KACrEvO,SAAY,CAACvI,OAAO,CAAC,CAACqU,GAAG,CAAC,GAAGyC,UAAU,CAAC;;EAE1C;EACA;EACA;EACA;EACA;EACO,MAAME,UAAU,GAAGhB,eAAe,CAACe,aAAa,CAAC;;EAExD;EACA;EACA;EACA;EACA;EACO,MAAME,gBAAgB,GAAGA,CAACjX,OAAgB,EAAE,GAAG8W,UAAoB,KACxEvO,SAAY,CAACvI,OAAO,CAAC,CAAC6F,MAAM,CAAC,GAAGiR,UAAU,CAAC;;EAE7C;EACA;EACA;EACA;EACA;EACO,MAAMI,aAAa,GAAGlB,eAAe,CAACiB,gBAAgB,CAAC;;EAsB9D;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAME,OAAO,GAAGA,CAACnX,OAAgB,EAAEhF,IAAY,KACpDuN,OAAU,CAACvI,OAAO,EAAEuI,UAAa,CAACvN,IAAI,CAAC,CAAC;;EAuB1C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMoc,UAAU,GAAGA,CAACpX,OAAgB,EAAEhF,IAAY,EAAEgG,KAAa,KACtEuH,OAAU,CAACvI,OAAO,EAAEuI,UAAa,CAACvN,IAAI,CAAC,EAAEgG,KAAK,CAAC;;EA0FjD;EACA;EACA;EACA;EACA;EACA;EACO,MAAMqW,uBAAuB,GAAGA,CAACrX,OAAgB,EAAE0D,IAAY,KACpE4T,gBAAgB,CAACtX,OAAO,CAAC,CAACuX,gBAAgB,CAAC7T,IAAI,CAAC;;EAyBlD;EACA;EACA;EACA;EACA;EACO,MAAM8T,eAAe,GAAGA,CAC7BxX,OAAgB,EAChB0D,IAAY,EACZ1C,KAAa,KAAA;EAAA,EAAA,IAAAyW,OAAA;EAAA,EAAA,OAAA,CAAAA,OAAA,GACTzX,OAAO,CAAgB0X,KAAK,MAAA,IAAA,IAAAD,OAAA,KAAA,MAAA,GAAA,MAAA,GAA7BA,OAAA,CAA+BE,WAAW,CAACjU,IAAI,EAAE1C,KAAK,CAAC;EAAA,CAAA;;EAS5D;EACA;EACA;EACA;EACA;EACO,MAAM4W,eAAe,GAAGA,CAAC5X,OAAgB,EAAE0D,IAAY,KAAA;EAAA,EAAA,IAAAmU,OAAA;EAAA,EAAA,OAAA,CAAAA,OAAA,GAC3D7X,OAAO,CAAgB0X,KAAK,MAAA,IAAA,IAAAG,OAAA,KAAA,MAAA,GAAA,MAAA,GAA7BA,OAAA,CAA+BC,cAAc,CAACpU,IAAI,CAAC;EAAA,CAAA;;EAwJrD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMqU,wBAAwB,GAAGA,CACtC/X,OAAgB,EAChBgY,KAAsB,EACtBta,OAKC,GAAG,EAAE,KACH;EACH,EAAA,IAAI,CAAC6Y,YAAY,CAACvW,OAAO,CAAC,EAAE;EAC1B,IAAA;EACF,EAAA;;EAEA;;EAEA,EAAA,MAAMiY,SAAS,GAAG1P,cAAiB,CAAC,CAAA7K,OAAO,KAAA,IAAA,IAAPA,OAAO,uBAAPA,OAAO,CAAEwa,OAAO,KAAI,EAAE,CAAC;EAC3D,EAAA,KAAK,MAAMxU,IAAI,IAAIsU,KAAK,EAAE;EACxB,IAAA,MAAMG,aAAa,GAAG9c,gBAAgB,CAACqI,IAAI,CAAC;EAC5C,IAAA,MAAM0U,OAAO,GAAG,CAAA,EAAGH,SAAS,CAAA,EAAGE,aAAa,CAAA,CAAE;EAE9C,IAAA,IAAInX,KAAoB;MAExB,IAAI,CAAC6J,UAAU,CAACmN,KAAK,CAACtU,IAAI,CAAC,CAAC,EAAE;EAC5B1C,MAAAA,KAAK,GAAG,IAAI;EACd,IAAA,CAAC,MAAM;EAAA,MAAA,IAAAqX,oBAAA;EACLrX,MAAAA,KAAK,GAAGgX,KAAK,CAACtU,IAAI,CAAC;QACnB,MAAM4U,cAAc,GAAA,CAAAD,oBAAA,GAClB3a,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,MAAA,GAAA,MAAA,GAAPA,OAAO,CAAE6a,WAAW,MAAA,IAAA,IAAAF,oBAAA,cAAAA,oBAAA,GAAKrX,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE;;EAE1D;EACA;EACA;EACA;EACA;;EAEAA,MAAAA,KAAK,GAAG0J,UAAU,CAAC1J,KAAK,EAAEsX,cAAc,CAAC;EAC3C,IAAA;MAEA,IAAItX,KAAK,KAAK,IAAI,EAAE;EAClB4W,MAAAA,eAAe,CAAC5X,OAAO,EAAEoY,OAAO,CAAC;EACnC,IAAA,CAAC,MAAM;EACLZ,MAAAA,eAAe,CAACxX,OAAO,EAAEoY,OAAO,EAAEpX,KAAK,IAAI,CAAAtD,OAAO,KAAA,IAAA,IAAPA,OAAO,uBAAPA,OAAO,CAAE8a,MAAM,KAAI,EAAE,CAAC,CAAC;EACpE,IAAA;EACF,EAAA;EACF,CAAC;;EAED;EACA;EACA;EACA;EACO,MAAMC,qBAAqB,GAAGzC,eAAe,CAAC+B,wBAAwB,CAAC;AAc9CxP,YAAa;;EC3xB7C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAqBA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMmQ,cAAc,GAAGA,CAC5B1Y,OAAgB,EAChBtC,OAGC,KACE;EACH,EAAA,MAAMoW,OAAO,GAAG6E,gBAAgB,CAAC3Y,OAAO,EAAEtC,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,MAAA,GAAA,MAAA,GAAPA,OAAO,CAAEoW,OAAO,CAAC;IAE3D,IAAI,CAAApW,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,MAAA,GAAA,MAAA,GAAPA,OAAO,CAAEkb,UAAU,MAAK,IAAI,EAAE;MAChCA,UAAU,CAAC5Y,OAAO,EAAE;EAClB6C,MAAAA,IAAI,EAAE0F,QAAW,CAACvI,OAAO,CAAC;EAC1B6Y,MAAAA,EAAE,EAAE/E;EACN,KAAC,CAAC;MAEF8E,UAAU,CAAC9E,OAAO,EAAE;EAClB+E,MAAAA,EAAE,EAAEtQ,QAAW,CAACvI,OAAO;EACzB,KAAC,CAAC;EACJ,EAAA;EAEAA,EAAAA,OAAO,CAAC8Y,WAAW,CAAChF,OAAO,CAAC;EAC5BA,EAAAA,OAAO,CAACiF,MAAM,CAAC/Y,OAAO,CAAC;EAEvB,EAAA,OAAO8T,OAAO;EAChB,CAAC;;EASD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMkF,eAAe,GAAGA,CAC7BhZ,OAAgB,EAChBtC,OAGC,KACE;EACH,EAAA,MAAMoW,OAAO,GAAG6E,gBAAgB,CAAC3Y,OAAO,EAAEtC,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,MAAA,GAAA,MAAA,GAAPA,OAAO,CAAEoW,OAAO,CAAC;EAE3DmF,EAAAA,eAAe,CAACjZ,OAAO,EAAE8T,OAAO,EAAE;EAAE8E,IAAAA,UAAU,EAAE;EAAK,GAAC,CAAC;IACvDM,cAAc,CAACpF,OAAO,EAAE;EACtB+E,IAAAA,EAAE,EAAE7Y,OAAO;EACX4Y,IAAAA,UAAU,EAAE;EACd,GAAC,CAAC;EAEF,EAAA,OAAO9E,OAAO;EAChB,CAAC;;EA8ED;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMmF,eAAe,GAAGA,CAC7BE,SAAkB,EAClBC,SAAkB,EAClB1b,OAEC,KACE;IACH,IAAI,CAAAA,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,MAAA,GAAA,MAAA,GAAPA,OAAO,CAAEkb,UAAU,MAAK,IAAI,EAAE;MAChC,KAAK,MAAMS,KAAK,IAAI9Q,UAAa,CAAC4Q,SAAS,CAAC,EAAE;QAC5CP,UAAU,CAACS,KAAK,EAAE;EAChBxW,QAAAA,IAAI,EAAEsW,SAAS;EACfN,QAAAA,EAAE,EAAEO;EACN,OAAC,CAAC;EACJ,IAAA;EACF,EAAA;IAEAA,SAAS,CAACL,MAAM,CAAC,GAAGxQ,UAAa,CAAC4Q,SAAS,CAAC,CAAC;EAC/C,CAAC;;EASD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMD,cAAc,GAAGA,CAC5BlZ,OAAgB,EAChBtC,OAIC,KACE;IACH,IAAI4b,QAAQ,GAAG,CAAA5b,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,MAAA,GAAA,MAAA,GAAPA,OAAO,CAAEmb,EAAE,KAAI,IAAI;IAClC,MAAMU,QAAQ,GAAG,CAAA7b,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,MAAA,GAAA,MAAA,GAAPA,OAAO,CAAE6b,QAAQ,KAAI,QAAQ;EAC9C,EAAA,IAAIA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,KAAK,OAAO,EAAE;EACjDD,IAAAA,QAAQ,GAAG/Q,QAAW,CAAC7K,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,MAAA,GAAA,MAAA,GAAPA,OAAO,CAAEmb,EAAE,CAAC;EACrC,EAAA;IAEA,IAAI,CAAAnb,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,MAAA,GAAA,MAAA,GAAPA,OAAO,CAAEkb,UAAU,MAAK,IAAI,EAAE;MAChCA,UAAU,CAAC5Y,OAAO,EAAE;EAClB6C,MAAAA,IAAI,EAAE0F,QAAW,CAACvI,OAAO,CAAC;EAC1B6Y,MAAAA,EAAE,EAAES;EACN,KAAC,CAAC;EACJ,EAAA;EAEA,EAAA,IAAI5b,OAAO,KAAA,IAAA,IAAPA,OAAO,eAAPA,OAAO,CAAEmb,EAAE,EAAE;EACfnb,IAAAA,OAAO,CAACmb,EAAE,CAACU,QAAQ,CAAC,CAACvZ,OAAO,CAAC;EAC/B,EAAA,CAAC,MAAM;EACLuI,IAAAA,MAAS,CAACvI,OAAO,CAAC;EACpB,EAAA;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACO,MAAMwZ,WAAW,GAAGxD,eAAe,CAACkD,cAAc,CAAC;;EAoC1D;EACA;EACA;EACA;EACO,MAAMO,eAAe,GAAIzZ,OAAgB,IAC9CsI,QAAQ,CAACG,sBAAsB,KAAK,IAAI,IACxC0O,OAAO,CAACnX,OAAO,EAAErE,cAAiB,CAAC,KAAK,IAAI;;EAE9C;EACA;EACA;EACA;EACA;EACA;EACO,MAAM+d,UAAU,GAAGA,CACxB1Z,OAAgB,EAChBtC,OAGC,KACE;IACH,MAAM;MAAED,OAAO;EAAEqZ,IAAAA,UAAU,GAAG,CAACnb,gBAAiB;KAAG,GAAG+B,OAAO,KAAA,IAAA,IAAPA,OAAO,cAAPA,OAAO,GAAI,EAAE;EACnE,EAAA,MAAMic,MAAM,GAAGpR,QAAW,CAACvI,OAAO,CAAC;IACnC,IACEuI,QAAW,CAACA,UAAa,CAACoR,MAAM,CAAC,CAAC,KAAK,CAAC,IACxCpR,aAAgB,CAACoR,MAAM,CAAC,KACvB,CAAClc,OAAO,IAAI8K,UAAa,CAACoR,MAAM,EAAElc,OAAO,CAAC,CAAC,KAC3C,CAACqZ,UAAU,IAAID,WAAW,CAAC8C,MAAM,EAAE7C,UAAU,CAAC,CAAC,EAChD;EACA;EACA,IAAA,OAAO6C,MAAM;EACf,EAAA;IAEA,OAAO,IAAI,CAAC;EACd,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACO,MAAMC,iBAAiB,GAAGA,CAC/B5Z,OAAgB,EAChBtC,OAGC,KACE;IACH,MAAM;MAAED,OAAO;EAAEqZ,IAAAA,UAAU,GAAG,CAACnb,gBAAiB;KAAG,GAAG+B,OAAO,KAAA,IAAA,IAAPA,OAAO,cAAPA,OAAO,GAAI,EAAE;IACnE,MAAMmc,UAAU,GAAGtR,UAAa,CAACvI,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5C,IACEuI,QAAW,CAACA,UAAa,CAACvI,OAAO,CAAC,CAAC,KAAK,CAAC,IACzCuI,aAAgB,CAACsR,UAAU,CAAC,KAC3B,CAACpc,OAAO,IAAI8K,UAAa,CAACsR,UAAU,EAAEpc,OAAO,CAAC,CAAC,KAC/C,CAACqZ,UAAU,IAAID,WAAW,CAACgD,UAAU,EAAE/C,UAAU,CAAC,CAAC,EACpD;EACA;EACA,IAAA,OAAO+C,UAAU;EACnB,EAAA;EAEA,EAAA,OAAO,IAAI;EACb,CAAC;;EAiBD;EACA;EACA;EACA;EACO,MAAMC,iBAAiB,GAAGA,CAC/B9Z,OAAgB,EAChBtC,OAAW,KACRqc,WAAW,CAAC/Z,OAAO,EAAEtC,OAAO,EAAE,IAAI,CAAC;;EAExC;EACA;EACA;EACA;EACO,MAAMsc,cAAc,GAAGhE,eAAe,CAAC8D,iBAAiB,CAAC;;EAgFhE;EACA;EACA;EACA;EACA;EACA;EACO,MAAMlB,UAAU,GAAGA,CACxBja,MAAe,EACfjB,OAAuD,KAEvDuc,iBAAiB,CAACvF,GAAG,CAAC/V,MAAM,EAAE;EAC5BkE,EAAAA,IAAI,EAAEnF,OAAO,CAACmF,IAAI,IAAI,IAAI;EAC1BgW,EAAAA,EAAE,EAAEnb,OAAO,CAACmb,EAAE,IAAI;EACpB,CAAC,CAAC;;EAEJ;EACA;EACA;EACA;EACO,MAAMqB,aAAa,GACxBvb,MAAe,IAEfsb,iBAAiB,CAAC/I,GAAG,CAACvS,MAAM,CAAC,IAAI,IAAI;;EAEvC;EACA;EACA;EACA;EACO,MAAMwb,eAAe,GAAIxb,MAAe,IAAK;EAClD;EACA;EACA;IACA4J,QAAW,CAAC,MAAM;EAChBA,IAAAA,SAAY,CAAC0R,iBAAiB,EAAEtb,MAAM,CAAC;IACzC,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;;EAmBD;;EAUA,MAAMsb,iBAAiB,GAAG1R,MAAS,EAGhC;EAEH,MAAMoQ,gBAAgB,GAAGA,CACvB3Y,OAAgB,EAChB8T,OAA8D,KAC3D;EACH,EAAA,IAAIvL,SAAY,CAACuL,OAAO,CAAC,EAAE;EACzB,IAAA,OAAOA,OAAO;EAChB,EAAA;IAEA,IAAIpR,GAAG,GAAGoR,OAAO;IACjB,IAAI,CAACpR,GAAG,EAAE;MACR,IAAI2T,WAAW,CAAC9N,OAAU,CAACvI,OAAO,CAAC,CAAC,EAAE;EACpC0C,MAAAA,GAAG,GAAG,MAAM;EACd,IAAA,CAAC,MAAM;EACLA,MAAAA,GAAG,GAAG,KAAK;EACb,IAAA;EACF,EAAA;EAEA,EAAA,OAAO6F,aAAgB,CAAC7F,GAAG,CAAC;EAC9B,CAAC;EAED,MAAMqX,WAAW,GAAGA,CAClB/Z,OAAgB,EAChBtC,OAAsB,EACtB0c,WAAW,GAAG,KAAK;EAAE,KAClB;IACH,MAAM;eACJ3c,SAAO;EACPqZ,IAAAA,UAAU,GAAG,CAACnb,gBAAiB,CAAC;EAChCid,IAAAA,UAAU,GAAG,IAAI;EACjByB,IAAAA,QAAQ,GAAG,KAAK;EAChBC,IAAAA,UAAU,GAAG;KACd,GAAG5c,OAAO,KAAA,IAAA,IAAPA,OAAO,cAAPA,OAAO,GAAI,EAAE;EAEjB,EAAA,MAAM6c,YAAY,GAAGH,WAAW,GAAGR,iBAAiB,GAAGF,UAAU;EACjE,EAAA,MAAMc,MAAM,GAAGJ,WAAW,GAAGpB,eAAe,GAAGN,cAAc;EAC7D,EAAA,MAAM+B,aAAa,GAAGhB,eAAe,CAACzZ,OAAO,CAAC;EAE9C,EAAA,IAAI8T,OAAO,GAAGyG,YAAY,CAACva,OAAO,EAAEtC,OAAO,CAAC;EAC5C,EAAA,IAAI,CAACoW,OAAO,KAAKuG,QAAQ,IAAII,aAAa,CAAC,EAAE;EAC3C3G,IAAAA,OAAO,GAAG0G,MAAM,CAACxa,OAAO,EAAE;EAAE8T,MAAAA,OAAO,EAAErW,SAAO;EAAEmb,MAAAA;EAAW,KAAC,CAAC;EAC3D,IAAA,IAAI9B,UAAU,EAAE;EACdC,MAAAA,aAAa,CAACjD,OAAO,EAAE,GAAGgD,UAAU,CAAC;EACvC,IAAA;MACA,IAAIT,WAAW,CAAC9N,OAAU,CAACuL,OAAO,CAAC,CAAC,EAAE;EACpCiD,MAAAA,aAAa,CAACjD,OAAO,EAAEnY,qBAAwB,CAAC;EAClD,IAAA;EAEA,IAAA,IAAI,CAAC8e,aAAa,IAAIH,UAAU,EAAE;EAChClF,MAAAA,OAAO,CACL,CAAA,qEAAA,EAAwEkF,UAAU,CAAA,CACpF,CAAC;EACH,IAAA;EACF,EAAA;EAEA,EAAA,OAAOxG,OAAO;EAGhB,CAAC;;EC1lBD;EACA;EACA;;EAQA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAM4G,cAAc,GAAGA,CAI5BnK,OAAU,EACVoK,OAAgB,KAEhBpS,UAAa,CAIVnF,OAAO,IAAK;IACb,MAAMwX,MAAM,GAAGA,MAAM;EACnB,IAAA,MAAM9Y,MAAM,GAAGyO,OAAO,EAAE;EACxB,IAAA,IAAI,CAAChI,SAAY,CAACzG,MAAM,CAAC,EAAE;QACzBsB,OAAO,CAACtB,MAAkC,CAAC;QAC3C,OAAO,IAAI,CAAC;EACd,IAAA;EACA,IAAA,OAAO,KAAK;IACd,CAAC;IAED,IAAI8Y,MAAM,EAAE,EAAE;EACZ,IAAA,OAAO;EACT,EAAA;EAEA,EAAA,IAAI,CAACrS,SAAY,CAACoS,OAAO,CAAC,EAAE;MAC1BpS,QAAW,CAAC,MAAM;QAChBnF,OAAO,CACL,IAGF,CAAC;QACDyX,QAAQ,CAACC,UAAU,EAAE;MACvB,CAAC,EAAEH,OAAO,CAAC;EACb,EAAA;EAEA,EAAA,MAAME,QAAQ,GAAGtS,mBAAsB,CAAC,MAAM;MAC5C,IAAIqS,MAAM,EAAE,EAAE;QACZC,QAAQ,CAACC,UAAU,EAAE;EACvB,IAAA;EACF,EAAA,CAAC,CAAC;IAEFD,QAAQ,CAACE,OAAO,CAACxS,aAAgB,EAAE,EAAE;EACnCyS,IAAAA,SAAS,EAAE,IAAI;EACfC,IAAAA,OAAO,EAAE;EACX,GAAC,CAAC;EACJ,CAAC,CAAC;;EAEJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMC,2BAA2B,GACtC3K,OAAU,IAEVhI,UAAa,CAAmCnF,OAAO,IAAK;IAC1D,IAAI+X,aAAa,GAAG,KAAK;EACzB;EACA;EACA;EACAT,EAAAA,cAAc,CAAC,MAAMS,aAAa,IAAI5K,OAAO,EAAE,CAAC,CAACwF,IAAI,CAAEzI,GAAG,IAAK;MAC7D,IAAI,CAAC6N,aAAa,EAAE;QAClB/X,OAAO,CAACkK,GAA+B,CAAC;EAC1C,IAAA,CAAC;EACH,EAAA,CAAC,CAAC;EAEF8N,EAAAA,kBAAkB,EAAE,CAACrF,IAAI,CAAC,MAAM;EAC9BoF,IAAAA,aAAa,GAAG,IAAI;MACpB/X,OAAO,CAAC,IAAI,CAAC;EACf,EAAA,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMgY,kBAAkB,GAAGA,MAChC7S,UAAa,CAAQnF,OAAO,IAAK;EAC/B,EAAA,MAAMrG,UAAU,GAAGwL,aAAgB,EAAE;EACrC,EAAA,IAAIxL,UAAU,KAAKse,WAAW,IAAIte,UAAU,KAAKue,QAAQ,EAAE;EACzDlY,IAAAA,OAAO,EAAE;EACT,IAAA;EACF,EAAA;EAEAmF,EAAAA,MAAS,EAAE,CAACgT,gBAAgB,CAAC,kBAAkB,EAAE,MAAMnY,OAAO,EAAE,CAAC;EACnE,CAAC,CAAC;;EAEJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMoY,eAAe,GAAGA,MAC7BjT,UAAa,CAAQnF,OAAO,IAAK;EAC/B,EAAA,IAAImF,aAAgB,EAAE,KAAK+S,QAAQ,EAAE;EACnClY,IAAAA,OAAO,EAAE;EACT,IAAA;EACF,EAAA;IAEAmF,MAAS,EAAE,CAACgT,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EACrD,IAAA,IAAIhT,aAAgB,EAAE,KAAK+S,QAAQ,EAAE;EACnClY,MAAAA,OAAO,EAAE;EACX,IAAA;EACF,EAAA,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMqY,gBAAgB,GAAGA,MAC9BlT,UAAa,CAAQnF,OAAO,IAAK;EAC/B,EAAA,IAAIsY,WAAW,EAAE;EACftY,IAAAA,OAAO,EAAE;EACT,IAAA;EACF,EAAA;EAEA,EAAA,OAAOgY,kBAAkB,EAAE,CAACrF,IAAI,CAAC,MAAM;EACrC;EACA;MACA,IAAIzC,KAA2C,GAAG,IAAI;MAEtD,MAAMqI,aAAa,GAAGA,MAAM;EAC1BD,MAAAA,WAAW,GAAG,IAAI;EAClB,MAAA,IAAIpI,KAAK,EAAE;EACT/K,QAAAA,UAAa,CAAC+K,KAAK,CAAC;EACpBA,QAAAA,KAAK,GAAG,IAAI;EACd,MAAA;EACAlQ,MAAAA,OAAO,EAAE;MACX,CAAC;EAED,IAAA,IAAIkF,QAAQ,CAACI,eAAe,GAAG,CAAC,EAAE;EAChC4K,MAAAA,KAAK,GAAG/K,QAAW,CAAC,MAAM;EACxBoT,QAAAA,aAAa,EAAE;EACjB,MAAA,CAAC,EAAErT,QAAQ,CAACI,eAAe,CAAC;EAC9B,IAAA;EAEA8S,IAAAA,eAAe,EAAE,CAACzF,IAAI,CAAC4F,aAAa,CAAC;EACvC,EAAA,CAAC,CAAC;EACJ,CAAC,CAAC;;EASJ;;EAEA,MAAML,QAAQ,GAAG,UAAU;EAC3B,MAAMD,WAAW,GAAG,aAAa;EAEjC,IAAIK,WAAW,GAAG,KAAK;EAEvB,IAAI,CAACnT,MAAS,EAAE,EAAE;EAChBmT,EAAAA,WAAW,GAAG,IAAI;EACpB,CAAC,MAAM;IACLD,gBAAgB,EAAE,CAAC;EACrB;;EClMA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMG,OAAO,GAAUC,WAAqC,IACjE,IAAIC,IAAI,CAACD,WAAW,CAAC;;EAEvB;EACA;EACA;EACA;EACA;EACA;EACO,MAAME,aAAa,GACjBF,WAAqC,IAC5C,MACED,OAAO,CAACC,WAAW,CAAC;;EAExB;EACA;EACA;EACA;EACA;EACA;EACO,MAAMG,WAAW,GACtBH,WAAqC,IAClC,IAAII,QAAQ,CAACJ,WAAW,CAAC;;EAE9B;EACA;EACA;EACA;EACA;EACA;EACO,MAAMK,iBAAiB,GACLL,WAAqC,IAC5D,MACEG,WAAW,CAACH,WAAW,CAAC;EAErB,MAAeM,QAAQ,CAAO;EACnC;EACF;EACA;;EAGE;EACF;EACA;EACA;EACA;;EAGE;EACF;EACA;;EAGE;EACF;EACA;;EAGE;EACF;EACA;EACA;EACA;EACA;EACA;;EAGE;EACF;EACA;;EAGYrhB,EAAAA,WAAWA,CACnBI,IAAmB,EACnB2gB,WAAqC,EACrC;MACA,IAAI,CAAC3K,GAAG,GAAIlL,GAAG,IAAK9K,IAAI,CAACgW,GAAG,CAAClL,GAAG,CAAC;EACjC,IAAA,IAAI,CAAC0O,GAAG,GAAG,CAAC1O,GAAG,EAAEhF,KAAK,KAAK9F,IAAI,CAACwZ,GAAG,CAAC1O,GAAG,EAAEhF,KAAK,CAAC;EAC/C,IAAA,IAAI,CAACiF,MAAM,GAAID,GAAG,IAAKuC,SAAY,CAACrN,IAAI,EAAE8K,GAAG,CAAC;MAC9C,IAAI,CAAC2L,GAAG,GAAI3L,GAAG,IAAK9K,IAAI,CAACyW,GAAG,CAAC3L,GAAG,CAAC;EAEjC,IAAA,IAAI,CAACoW,IAAI,GAAIpW,GAAG,IAAK;EACnB,MAAA,IAAIlE,MAAM,GAAG5G,IAAI,CAACgW,GAAG,CAAClL,GAAG,CAAC;QAC1B,IAAIlE,MAAM,KAAKjE,SAAS,EAAE;EACxBiE,QAAAA,MAAM,GAAG+Z,WAAW,CAAC7V,GAAG,CAAC;EACzB9K,QAAAA,IAAI,CAACwZ,GAAG,CAAC1O,GAAG,EAAElE,MAAM,CAAC;EACvB,MAAA;EACA,MAAA,OAAOA,MAAM;MACf,CAAC;MAED,IAAI,CAACua,KAAK,GAAG,CAACC,EAAE,EAAE,GAAGC,IAAI,KAAK;EAC5B,MAAA,MAAMvb,KAAK,GAAG9F,IAAI,CAACgW,GAAG,CAACoL,EAAE,CAAC;QAC1B,IAAItb,KAAK,YAAYmb,QAAQ,IAAI5T,QAAW,CAACgU,IAAI,CAAC,EAAE;EAClDvb,QAAAA,KAAK,CAACqb,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC,EAAE,GAAGA,IAAI,CAAC/Z,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,MAAA;EAEA,MAAA,IACExB,KAAK,KAAKnD,SAAS,IAClB0K,gBAAmB,CAACvH,KAAK,CAAC,IACzB,EACG,MAAM,IAAIA,KAAK,IAAIA,KAAK,CAACmB,IAAI,IAC7B,QAAQ,IAAInB,KAAK,IAAIA,KAAK,CAACqB,MAAO,CACnC,EACJ;EACAkG,QAAAA,SAAY,CAACrN,IAAI,EAAEohB,EAAE,CAAC;EACxB,MAAA;MACF,CAAC;EACH,EAAA;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMR,IAAI,SAAeK,QAAQ,CAAmC;EAoCzE;EACF;EACA;EACA;EACA;IACErhB,WAAWA,CAAC+gB,WAAqC,EAAE;EACjD,IAAA,MAAM3gB,IAAI,GAAGqN,MAAS,EAAQ;EAC9B,IAAA,KAAK,CAACrN,IAAI,EAAE2gB,WAAW,CAAC;EAExBtT,IAAAA,cAAiB,CAAC,IAAI,EAAE,MAAM,EAAE;EAAE2I,MAAAA,GAAG,EAAEA,MAAMhW,IAAI,CAACiH;EAAK,KAAC,CAAC;MACzD,IAAI,CAACqa,KAAK,GAAG,MAAMthB,IAAI,CAACshB,KAAK,EAAE;MAC/B,IAAI,CAAC/V,OAAO,GAAG,MAAMvL,IAAI,CAACuL,OAAO,EAAE;MACnC,IAAI,CAAC1D,IAAI,GAAG,MAAM7H,IAAI,CAAC6H,IAAI,EAAE;MAC7B,IAAI,CAAC+D,MAAM,GAAG,MAAM5L,IAAI,CAAC4L,MAAM,EAAE;EACjC,IAAA,IAAI,CAACnL,MAAS,CAACsC,QAAQ,CAAC,GAAG,MAAM/C,IAAI,CAACS,MAAS,CAACsC,QAAQ,CAAC,EAAE;EAC7D,EAAA;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EA7DE;EACF;EACA;EAGE;EACF;EACA;EAGE;EACF;EACA;EAGE;EACF;EACA;EAGE;EACF;EACA;EAKE;EACF;EACA;EACA;EACA;EACA;EALE0W,eAAA,CA5BWmH,IAAI,EAAA,eAAA,EAkCiBC,aAAa,CAAA;EA6BxC,MAAME,QAAQ,SAA+BE,QAAQ,CAAO;EASjE;EACF;EACA;EACA;EACA;IACErhB,WAAWA,CAAC+gB,WAAqC,EAAE;EACjD,IAAA,MAAM3gB,IAAI,GAAGqN,UAAa,EAAQ;EAClC,IAAA,KAAK,CAACrN,IAAI,EAAE2gB,WAAW,CAAC;EAC1B,EAAA;EACF;EAjBE;EACF;EACA;EACA;EACA;EACA;EALElH,eAAA,CADWsH,QAAQ,EAAA,mBAAA,EAOiBC,iBAAiB,CAAA;;ECnNvD;EACA;EACA;;;EAgCA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMO,UAAU,CAAC;EACtB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAME;EACF;EACA;;EAGE;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGE;EACF;EACA;EACA;IACE,OAAO1L,MAAMA,CAAC2L,MAAyB,EAAE;MACvC,OAAO,IAAID,UAAU,CAACE,WAAS,CAACD,MAAM,CAAC,EAAEE,iBAAe,CAAC;EAC3D,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;IACE,OAAOC,KAAKA,CAACH,MAAyB,EAAE;EAAA,IAAA,IAAAI,cAAA;EACtC,IAAA,MAAMC,QAAQ,GAAGJ,WAAS,CAACD,MAAM,CAAC;EAClC,IAAA,MAAMM,YAAY,GAAGlN,WAAW,CAAC1C,QAAQ,CAAC2P,QAAQ,EAAE;EAAEE,MAAAA,KAAK,EAAE;EAAK,KAAC,CAAC,CAAC;EAErE,IAAA,MAAM/hB,IAAI,GAAG6hB,QAAQ,CAACE,KAAK,KAAK1U,OAAU,EAAE,GAAG,IAAI,GAAGwU,QAAQ,CAACE,KAAK;EACpE,IAAA,IAAIC,QAAQ,GAAA,CAAAJ,cAAA,GAAGK,WAAS,CAACjM,GAAG,CAAChW,IAAI,CAAC,MAAA,IAAA,IAAA4hB,cAAA,KAAA,MAAA,GAAA,MAAA,GAAnBA,cAAA,CAAqB5L,GAAG,CAAC8L,YAAY,CAAC;MACrD,IAAI,CAACE,QAAQ,EAAE;EACbA,MAAAA,QAAQ,GAAG,IAAIT,UAAU,CAACM,QAAQ,EAAEH,iBAAe,CAAC;QACpDO,WAAS,CAACf,IAAI,CAAClhB,IAAI,CAAC,CAACwZ,GAAG,CAACsI,YAAY,EAAEE,QAAQ,CAAC;EAClD,IAAA;EAEA,IAAA,OAAOA,QAAQ;EACjB,EAAA;EAEQpiB,EAAAA,WAAWA,CACjB4hB,MAAgC,EAChC1W,GAA2B,EAC3B;MACA,IAAIA,GAAG,KAAK4W,iBAAe,EAAE;EAC3B,MAAA,MAAMrU,uBAA0B,CAAC,mBAAmB,CAAC;EACvD,IAAA;EAMA,IAAA,MAAM6U,MAAM,GAAGxB,OAAO,CAAsCyB,CAAC,KAAM;EACjEC,MAAAA,OAAO,EAAED,CAAC;EACVE,MAAAA,gBAAgB,EAAE,CAAC;EACnBC,MAAAA,WAAW,EAAEjV,MAAS,EAAE;EACxBkV,MAAAA,QAAQ,EAAE,IAAI;EACdC,MAAAA,YAAY,EAAE;EAChB,KAAC,CAAC,CAAC;EAEH,IAAA,MAAMC,YAAY,GAAGpV,MAAS,EAM3B;;EAEH;;MAEA,IAAI+K,KAA2C,GAAG,IAAI;MACtD,MAAMsK,eAAe,GAAIC,OAAyB,IAAK;EAGrD,MAAA,KAAK,MAAMC,MAAM,IAAID,OAAO,EAAE;EAC5B,QAAA,MAAMlf,MAAM,GAAG4J,QAAW,CAACuV,MAAM,CAAC;EAClC,QAAA,MAAMC,OAAO,GAAGD,MAAM,CAACE,IAAI;;EAE3B;EACA,QAAA,IAAI,CAACzV,SAAY,CAAC5J,MAAM,CAAC,EAAE;EACzB,UAAA;EACF,QAAA;EAEA,QAAA,IAAIof,OAAO,KAAKpiB,YAAe,EAAE;EAC/B,UAAA,KAAK,MAAM0d,KAAK,IAAIyE,MAAM,CAACG,UAAU,EAAE;EACrC,YAAA,IAAI1V,SAAY,CAAC8Q,KAAK,CAAC,EAAE;EACvB,cAAA,MAAM6E,SAAS,GAAGd,MAAM,CAAChB,IAAI,CAAC/C,KAAK,CAAC;gBACpC6E,SAAS,CAACT,QAAQ,GAAG9e,MAAM;gBAC3Buf,SAAS,CAACX,gBAAgB,IAAIY,SAAS;EACzC,YAAA;EACF,UAAA;EAEA,UAAA,KAAK,MAAM9E,KAAK,IAAIyE,MAAM,CAACM,YAAY,EAAE;EACvC,YAAA,IAAI7V,SAAY,CAAC8Q,KAAK,CAAC,EAAE;EACvB,cAAA,MAAM6E,SAAS,GAAGd,MAAM,CAAChB,IAAI,CAAC/C,KAAK,CAAC;gBACpC6E,SAAS,CAACR,YAAY,GAAG/e,MAAM;gBAC/Buf,SAAS,CAACX,gBAAgB,IAAIc,WAAW;EAC3C,YAAA;EACF,UAAA;;EAEA;WACD,MAAM,IAAIN,OAAO,KAAKpiB,YAAe,IAAImiB,MAAM,CAACQ,aAAa,EAAE;EAC9D,UAAA,MAAMJ,SAAS,GAAGd,MAAM,CAAChB,IAAI,CAACzd,MAAM,CAAC;YACrCuf,SAAS,CAACV,WAAW,CAACnJ,GAAG,CAACyJ,MAAM,CAACQ,aAAa,CAAC;YAC/CJ,SAAS,CAACX,gBAAgB,IAAIgB,aAAa;EAC7C,QAAA;EACF,MAAA;;EAEA;EACA;QACA,IAAI,CAACjL,KAAK,IAAI/K,MAAS,CAAC6U,MAAM,CAAC,EAAE;EAC/B9J,QAAAA,KAAK,GAAG/K,QAAW,CAAC,MAAM;YAExB,KAAK,MAAM2V,SAAS,IAAId,MAAM,CAACtW,MAAM,EAAE,EAAE;EACvC,YAAA,IAAI0X,mBAAmB,CAACN,SAAS,CAAC,EAAE,CAEnC,MAAM;gBACLO,gBAAgB,CAACP,SAAS,CAAC;EAC7B,YAAA;EACF,UAAA;YAEAd,MAAM,CAACZ,KAAK,EAAE;EACdlJ,UAAAA,KAAK,GAAG,IAAI;WACb,EAAE,CAAC,CAAC;EACP,MAAA;OACD;EAED,IAAA,MAAMoL,SAA2C,GAAG;QAClD,CAAC/iB,YAAe,GAAG;EACjBgjB,QAAAA,SAAS,EAAEpW,mBAAsB,CAACqV,eAAe,CAAC;EAClDgB,QAAAA,SAAS,EAAE;SACZ;QACD,CAACjjB,YAAe,GAAG;EACjBgjB,QAAAA,SAAS,EAAEpW,mBAAsB,CAACqV,eAAe,CAAC;EAClDgB,QAAAA,SAAS,EAAE;EACb;OACD;;EAED;;EAEA,IAAA,MAAMC,cAAc,GAAGA,CACrBxL,OAA0B,EAC1B3V,OAAkC,KACX;EAAA,MAAA,IAAAohB,iBAAA;EACvBvW,MAAAA,MAAS,CAAA,CAAAuW,iBAAA,GAACnB,YAAY,CAACzM,GAAG,CAACmC,OAAO,CAAC,MAAA,IAAA,IAAAyL,iBAAA,uBAAzBA,iBAAA,CAA2BC,SAAS,CAAC;EAG/C,MAAA,MAAMzhB,QAAQ,GAAGmW,YAAY,CAACJ,OAAO,CAAC;QACtC/V,QAAQ,CAAC0W,QAAQ,CAAC,MAAMgL,aAAa,CAAC3L,OAAO,CAAC,CAAC;EAE/CsK,MAAAA,YAAY,CAACjJ,GAAG,CAACrB,OAAO,EAAE;EAAE0L,QAAAA,SAAS,EAAEzhB,QAAQ;EAAE2hB,QAAAA,QAAQ,EAAEvhB;EAAQ,OAAC,CAAC;EACrE,MAAA,OAAOJ,QAAQ;OAChB;;EAED;;EAEA,IAAA,MAAM4hB,eAAe,GAAG,OACtB7L,OAA0B,EAC1B8L,WAA0C,KACvC;EACH,MAAA,MAAMzhB,OAAO,GAAG0hB,YAAU,CAACD,WAAW,KAAA,IAAA,IAAXA,WAAW,KAAA,MAAA,GAAXA,WAAW,GAAI,EAAE,CAAC;EAC7C,MAAA,MAAM7hB,QAAQ,GAAGuhB,cAAc,CAACxL,OAAO,EAAE3V,OAAO,CAAC;QAEjD,IAAIxC,IAAI,GAAGwhB,MAAM,CAACO,KAAK,IAAI1U,OAAU,EAAE;QACvC,IAAI,CAACrN,IAAI,EAAE;EACTA,QAAAA,IAAI,GAAG,MAAMwf,cAAc,CAACnS,OAAU,CAAC;EACzC,MAAA,CAAC,MAAM;EACL;EACA,QAAA,MAAM,IAAI;EACZ,MAAA;EAEA,MAAA,IAAIjL,QAAQ,CAACqW,SAAS,EAAE,EAAE;EACxB,QAAA;EACF,MAAA;QAEA,IAAIjW,OAAO,CAAC6f,gBAAgB,IAAIY,SAAS,GAAGE,WAAW,CAAC,EAAE;EACxDgB,QAAAA,gBAAgB,CAACnkB,IAAI,EAAES,YAAe,CAAC;EACzC,MAAA;EAEA,MAAA,IAAI+B,OAAO,CAAC6f,gBAAgB,GAAGgB,aAAa,EAAE;EAC5Cc,QAAAA,gBAAgB,CAACnkB,IAAI,EAAES,YAAe,CAAC;EACzC,MAAA;QAEA,IACEwjB,WAAW,aAAXA,WAAW,KAAA,MAAA,IAAXA,WAAW,CAAEG,WAAW,IACxB,CAAC5hB,OAAO,CAAC6hB,SAAS,IAClB,EAAE7hB,OAAO,CAAC6f,gBAAgB,GAAGY,SAAS,CAAC,EACvC;EACA,QAAA;EACF,MAAA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAA,MAAMqB,UAAU,GAAGd,SAAS,CAAC/iB,YAAe,CAAC,CAACgjB,SAAS,CAACc,WAAW,EAAE;QACrE7B,eAAe,CAAC4B,UAAU,CAAC;EAE3B,MAAA,KAAK,MAAMxf,OAAO,IAAI,CACpB,GAAGuI,gBAAmB,CAACrN,IAAI,EAAEwC,OAAO,CAAC6hB,SAAS,CAAC,EAC/C,IAAIrkB,IAAI,CAACwkB,OAAO,CAAChiB,OAAO,CAAC6hB,SAAS,CAAC,GAAG,CAACrkB,IAAI,CAAC,GAAG,EAAE,CAAC,CACnD,EAAE;EACD,QAAA,MAAMykB,aAAwC,GAAG;EAC/CrC,UAAAA,OAAO,EAAEtd,OAAO;EAChBud,UAAAA,gBAAgB,EAAEY,SAAS;EAC3BX,UAAAA,WAAW,EAAEjV,MAAS,EAAE;EACxBkV,UAAAA,QAAQ,EAAElV,QAAW,CAACvI,OAAO,CAAC;EAC9B0d,UAAAA,YAAY,EAAE;WACf;EAED,QAAA,MAAMkC,iBAAiB,GAAGxC,MAAM,CAAClM,GAAG,CAAClR,OAAO,CAAC;EAC7C,QAAA,MAAM6f,aAAa,GAAGC,gBAAgB,CACpCH,aAAa,EACbC,iBACF,CAAC;EAED,QAAA,IAAIC,aAAa,EAAE;EACjB,UAAA,IAAIrB,mBAAmB,CAACqB,aAAa,CAAC,EAAE,CAEvC,MAAM;EAEL,YAAA,MAAME,gBAAc,CAACziB,QAAQ,EAAEuiB,aAAa,CAAC;EAC/C,UAAA;EACF,QAAA;EACF,MAAA;OACD;;EAED;;MAEA,MAAMb,aAAa,GAAI3L,OAA0B,IAAK;EACpD9K,MAAAA,SAAY,CAACoV,YAAY,EAAEtK,OAAO,CAAC;QAEnC,IAAI2M,gBAAgB,GAAG,CAAC;QACxB,KAAK,MAAMC,KAAK,IAAItC,YAAY,CAAC7W,MAAM,EAAE,EAAE;EACzCkZ,QAAAA,gBAAgB,IAAIC,KAAK,CAAChB,QAAQ,CAAC1B,gBAAgB;EACrD,MAAA;QAEA,IAAI,EAAEyC,gBAAgB,IAAI7B,SAAS,GAAGE,WAAW,CAAC,CAAC,EAAE;EACnD6B,QAAAA,kBAAkB,CAACvkB,YAAe,CAAC;EACrC,MAAA;EAEA,MAAA,IAAI,EAAEqkB,gBAAgB,GAAGzB,aAAa,CAAC,EAAE;EACvC2B,QAAAA,kBAAkB,CAACvkB,YAAe,CAAC;EACrC,MAAA;OACD;;EAED;;MAEA,MAAM8iB,gBAAgB,GAAIP,SAAoC,IAAK;QAGjE,KAAK,MAAM+B,KAAK,IAAItC,YAAY,CAAC7W,MAAM,EAAE,EAAE;EACzC,QAAA,MAAMqZ,eAAe,GAAGF,KAAK,CAAChB,QAAQ,CAAC1B,gBAAgB;EACvD,QAAA,MAAM5e,MAAM,GAAGshB,KAAK,CAAChB,QAAQ,CAAC3B,OAAO;EACrC,QAAA,MAAM5c,QAAQ,GAAGuf,KAAK,CAAChB,QAAQ,CAACM,SAAS;EAEzC,QAAA,IAAI,EAAErB,SAAS,CAACX,gBAAgB,GAAG4C,eAAe,CAAC,EAAE;EAEnD,UAAA;EACF,QAAA;UAEA,MAAMC,cAAc,GAAG,EAAE;EACzB,QAAA,IAAIzhB,MAAM,EAAE;YACV,IAAI,CAACuf,SAAS,CAACZ,OAAO,CAAC1G,QAAQ,CAACjY,MAAM,CAAC,EAAE;EAEvC,YAAA;EACF,UAAA;EAEAyhB,UAAAA,cAAc,CAAC1R,IAAI,CAAC/P,MAAM,CAAC;EAC7B,QAAA;EAEA,QAAA,IAAI+B,QAAQ,EAAE;EACZ,UAAA,MAAMgf,OAAO,GAAG,CAAC,GAAGnX,gBAAmB,CAAC2V,SAAS,CAACZ,OAAO,EAAE5c,QAAQ,CAAC,CAAC;YAErE,IAAIwd,SAAS,CAACZ,OAAO,CAACoC,OAAO,CAAChf,QAAQ,CAAC,EAAE;EACvCgf,YAAAA,OAAO,CAAChR,IAAI,CAACwP,SAAS,CAACZ,OAAO,CAAC;EACjC,UAAA;EAEA,UAAA,IAAI,CAAC/U,QAAW,CAACmX,OAAO,CAAC,EAAE;EAEzB,YAAA;EACF,UAAA;EAEAU,UAAAA,cAAc,CAAC1R,IAAI,CAAC,GAAGgR,OAAO,CAAC;EACjC,QAAA;UAEAK,gBAAc,CAACE,KAAK,CAAClB,SAAS,EAAEb,SAAS,EAAEkC,cAAc,CAAC;EAC5D,MAAA;OACD;;EAED;;EAEA,IAAA,MAAMf,gBAAgB,GAAGA,CAACnkB,IAAa,EAAEmlB,YAA0B,KAAK;EACtE,MAAA,IAAI,CAAC3B,SAAS,CAAC2B,YAAY,CAAC,CAACzB,SAAS,EAAE;UAItCF,SAAS,CAAC2B,YAAY,CAAC,CAAC1B,SAAS,CAAC5D,OAAO,CAAC7f,IAAI,EAAE;YAC9C,CAACmlB,YAAY,GAAG,IAAI;YACpBpF,OAAO,EAAEyB,MAAM,CAAC4D;EAClB,SAAC,CAAC;EACF5B,QAAAA,SAAS,CAAC2B,YAAY,CAAC,CAACzB,SAAS,GAAG,IAAI;EAC1C,MAAA;OACD;;EAED;;MAEA,MAAMsB,kBAAkB,GAAIG,YAA0B,IAAK;EACzD,MAAA,IAAI3B,SAAS,CAAC2B,YAAY,CAAC,CAACzB,SAAS,EAAE;UAIrCF,SAAS,CAAC2B,YAAY,CAAC,CAAC1B,SAAS,CAAC7D,UAAU,EAAE;EAC9C4D,QAAAA,SAAS,CAAC2B,YAAY,CAAC,CAACzB,SAAS,GAAG,KAAK;EAC3C,MAAA;OACD;;EAED;;MAEA,MAAMJ,mBAAmB,GACvBN,SAAoC,IACxB;EACZ,MAAA,MAAMvf,MAAM,GAAGuf,SAAS,CAACZ,OAAO;EAChC,MAAA,MAAMiD,aAAa,GAAGrG,aAAa,CAACvb,MAAM,CAAC;QAC3C,IAAI,CAAC4hB,aAAa,EAAE;EAClB,QAAA,OAAO,KAAK;EACd,MAAA;EAEA,MAAA,MAAMC,WAAW,GAAGtC,SAAS,CAACR,YAAY;EAC1C,MAAA,MAAM+C,OAAO,GAAGlY,QAAW,CAAC5J,MAAM,CAAC;EACnC,MAAA,MAAM+hB,WAAW,GAAGH,aAAa,CAAC1d,IAAI;EACtC,MAAA,MAAM8d,SAAS,GAAGJ,aAAa,CAAC1H,EAAE;QAElC,MAAM3d,IAAI,GAAGwhB,MAAM,CAACO,KAAK,IAAI1U,OAAU,EAAE;EACzC;EACA;EACA,MAAA,IACE,CAACiY,WAAW,KAAKE,WAAW,IAAI,CAACxlB,IAAI,CAAC0b,QAAQ,CAAC8J,WAAW,CAAC,KAC3DD,OAAO,KAAKE,SAAS,EACrB;UACAxG,eAAe,CAACxb,MAAM,CAAC;EACvB,QAAA,OAAO,IAAI;EACb,MAAA;EAEA,MAAA,OAAO,KAAK;OACb;;EAED;;MAEA,IAAI,CAACia,UAAU,GAAGA,UAAU;;EAE5B;;MAEA,IAAI,CAACgI,UAAU,GAAG1B,eAAe;;EAEjC;;EAEA,IAAA,IAAI,CAAC2B,WAAW,GAAIxN,OAAO,IAAK;EAAA,MAAA,IAAAyN,kBAAA;EAE9BvY,MAAAA,MAAS,CAAA,CAAAuY,kBAAA,GAACnD,YAAY,CAACzM,GAAG,CAACmC,OAAO,CAAC,MAAA,IAAA,IAAAyN,kBAAA,uBAAzBA,kBAAA,CAA2B/B,SAAS,CAAC;OAChD;EACH,EAAA;EACF;;EAEA;EACA;EACA;;EAqBA;EACA;EACA;;EAqGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAOA;;EA4BA,MAAMnC,iBAA8B,GAAGjhB,MAAS,EAA4B;EAC5E,MAAMwhB,WAAS,GAAGvB,OAAO,CAA0C,MACjErT,MAAS,EACX,CAAC;EAED,MAAMoU,WAAS,GACbD,MAAoC,IACP;EAAA,EAAA,IAAAqE,eAAA;IAC7B,OAAO;MACL9D,KAAK,EAAE,CAAAP,MAAM,KAAA,IAAA,IAANA,MAAM,uBAANA,MAAM,CAAExhB,IAAI,KAAI,IAAI;EAC3BolB,IAAAA,QAAQ,EAAA,CAAAS,eAAA,GAAErE,MAAM,aAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEzB,OAAO,MAAA,IAAA,IAAA8F,eAAA,KAAA,MAAA,GAAAA,eAAA,GAAI;KAC9B;EACH,CAAC;EAED,MAAMC,eAAe,GAAG1O,oBAAoB,CAACZ,GAAG;EAChD,MAAMyM,SAAS,GAAG6C,eAAe,CAACrlB,OAAU,CAAC;EAC7C,MAAM0iB,WAAW,GAAG2C,eAAe,CAACrlB,SAAY,CAAC;EACjD,MAAM4iB,aAAa,GAAGyC,eAAe,CAACrlB,WAAc,CAAC;;EAErD;;EAEA,MAAMyjB,YAAU,GAAI1hB,OAA0B,IAAgC;IAC5E,IAAIyiB,eAAe,GAAG,CAAC;EACvB,EAAA,MAAMc,UAAU,GAAG3Q,eAAe,CAChC,YAAY,EACZ5S,OAAO,CAACujB,UAAU,EAClB3O,oBAAoB,CAACX,GACvB,CAAC;EAED,EAAA,IAAIsP,UAAU,EAAE;EACd,IAAA,KAAK,MAAMC,GAAG,IAAID,UAAU,EAAE;EAC5Bd,MAAAA,eAAe,IAAIa,eAAe,CAACE,GAAG,CAAC;EACzC,IAAA;EACF,EAAA,CAAC,MAAM;EACLf,IAAAA,eAAe,GAAG7N,oBAAoB,CAACd,OAAO,CAAC;EACjD,EAAA;EAEA,EAAA,MAAM9Q,QAAQ,GAAGhD,OAAO,CAACgD,QAAQ,IAAI,EAAE;EACvC,EAAA,IAAI,CAAC6H,QAAW,CAAC7H,QAAQ,CAAC,EAAE;EAC1B,IAAA,MAAM6H,UAAa,CAAC,6BAA6B,CAAC;EACpD,EAAA;IAEA,OAAO;EACLgV,IAAAA,gBAAgB,EAAE4C,eAAe;EACjC7C,IAAAA,OAAO,EAAE5f,OAAO,CAACiB,MAAM,IAAI,IAAI;EAC/B4gB,IAAAA,SAAS,EAAE7hB,OAAO,CAACgD,QAAQ,IAAI;KAChC;EACH,CAAC;EAED,MAAMof,gBAAgB,GAAGA,CACvBqB,UAAqC,EACrCC,UAAiD,KACZ;IACrC,IAAI,CAACA,UAAU,IAAID,UAAU,CAAC7D,OAAO,KAAK8D,UAAU,CAAC9D,OAAO,EAAE;EAC5D,IAAA,OAAO6D,UAAU;EACnB,EAAA;EAEA,EAAA,MAAME,UAAU,GAAG9Y,MAAS,EAAU;EACtC,EAAA,KAAK,MAAM+Y,IAAI,IAAIH,UAAU,CAAC3D,WAAW,EAAE;MACzC,IAAI,CAAC4D,UAAU,CAAC5D,WAAW,CAAC7L,GAAG,CAAC2P,IAAI,CAAC,EAAE;EACrCD,MAAAA,UAAU,CAAChN,GAAG,CAACiN,IAAI,CAAC;EACtB,IAAA;EACF,EAAA;IAEA,MAAMnB,eAAe,GACnBgB,UAAU,CAAC5D,gBAAgB,GAAG6D,UAAU,CAAC7D,gBAAgB;EAE3D,EAAA,MAAMkD,OAAO,GACXU,UAAU,CAAC1D,QAAQ,KAAK2D,UAAU,CAAC3D,QAAQ,GAAG,IAAI,GAAG0D,UAAU,CAAC1D,QAAQ;EAE1E,EAAA,MAAM+C,WAAW,GACfW,UAAU,CAACzD,YAAY,KAAK0D,UAAU,CAAC1D,YAAY,GAC/C,IAAI,GACJyD,UAAU,CAACzD,YAAY;EAE7B,EAAA,IAAI,CAACnV,MAAS,CAAC8Y,UAAU,CAAC,IAAI,CAAClB,eAAe,IAAI,CAACM,OAAO,IAAI,CAACD,WAAW,EAAE;EAC1E,IAAA,OAAO,IAAI;EACb,EAAA;IAEA,OAAO;MACLlD,OAAO,EAAE6D,UAAU,CAAC7D,OAAO;EAC3BC,IAAAA,gBAAgB,EAAE4C,eAAe;EACjC3C,IAAAA,WAAW,EAAE6D,UAAU;EACvB5D,IAAAA,QAAQ,EAAEgD,OAAO;EACjB/C,IAAAA,YAAY,EAAE8C;KACf;EACH,CAAC;EAED,MAAMT,gBAAc,GAAGA,CACrBziB,QAA4B,EAC5B4gB,SAAoC,EACpCkC,cAAyB,GAAG,EAAE,KAC3B;EACH,EAAA,IAAI,CAAC7X,QAAW,CAAC6X,cAAc,CAAC,EAAE;EAChCA,IAAAA,cAAc,GAAG,CAAClC,SAAS,CAACZ,OAAO,CAAC;EACtC,EAAA;EAEA,EAAA,KAAK,MAAMhY,aAAa,IAAI8a,cAAc,EAAE;MAC1C9iB,QAAQ,CACLuW,MAAM,CAAC;QACNlV,MAAM,EAAEuf,SAAS,CAACZ,OAAO;QACzBhY,aAAa;QACb+b,UAAU,EAAEnD,SAAS,CAACV,WAAW;QACjCiD,OAAO,EAAEvC,SAAS,CAACT,QAAQ;QAC3B+C,WAAW,EAAEtC,SAAS,CAACR;EACzB,KAAC,CAAC,CACD6D,KAAK,CAACjM,QAAQ,CAAC;EACpB,EAAA;EACF,CAAC;;ECtuBD;EACA;EACA;;;EAkBA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMkM,oBAAoB,GAAGA,CAClCC,MAAc,EACdC,MAAc,KACqC;EACnD,EAAA,IAAI,CAACnZ,GAAM,CAACkZ,MAAM,CAAC,IAAI,CAAClZ,GAAM,CAACmZ,MAAM,CAAC,EAAE;MACtC,OAAO/lB,MAAS;EAClB,EAAA;EAEA,EAAA,IAAI4M,GAAM,CAACkZ,MAAM,CAAC,KAAKlZ,GAAM,CAACmZ,MAAM,CAAC,EAAE;MACrC,OAAO/lB,WAAc;EACvB,EAAA;EAEA,EAAA,IAAI4M,GAAM,CAACkZ,MAAM,CAAC,GAAGlZ,GAAM,CAACmZ,MAAM,CAAC,EAAE;MACnC,OAAOD,MAAM,GAAG,CAAC,GAAG9lB,MAAS,GAAGA,OAAU;EAC5C,EAAA;IACA,OAAO+lB,MAAM,GAAG,CAAC,GAAG/lB,IAAO,GAAGA,MAAS;EACzC,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMgmB,kBAAkB,GAAGA,CAChCC,MAAc,EACdxV,kBAAkB,GAAG,CAAC,KAC6B;EACnDA,EAAAA,kBAAkB,GAAG7D,GAAM,CAAC,KAAK,EAAEA,GAAM,CAAC6D,kBAAkB,CAAC,CAAC;EAE9D,EAAA,IAAI,CAACX,MAAM,CAAC,GAAGmW,MAAM,CAAC,EAAE;MACtB,OAAOjmB,MAAS;EAClB,EAAA,CAAC,MAAM,IAAIsQ,WAAW,CAAC2V,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAExV,kBAAkB,CAAC,EAAE;MAC1D,OAAOzQ,OAAU;EACnB,EAAA,CAAC,MAAM,IAAIsQ,WAAW,CAAC2V,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAExV,kBAAkB,CAAC,EAAE;MAC1D,OAAOzQ,MAAS;EAClB,EAAA,CAAC,MAAM,IAAIsQ,WAAW,CAAC2V,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAExV,kBAAkB,CAAC,EAAE;MAC3D,OAAOzQ,MAAS;EAClB,EAAA,CAAC,MAAM,IAAIsQ,WAAW,CAAC2V,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAExV,kBAAkB,CAAC,EAAE;MAC3D,OAAOzQ,IAAO;EAChB,EAAA;IAEA,OAAOA,WAAc;EACvB,CAAC;;EA8GD;EACA;EACA;EACA;EACA;EACO,MAAMkmB,gBAAgB,GAAIC,SAAiB,IAChDvZ,QAAW,CAACwZ,UAAU,EAAED,SAAS,CAAC;;EAYpC;EACA;EACA;EACA;EACO,MAAME,aAAa,GAAG,CAC3BrmB,IAAO,EACPA,MAAS,EACTA,MAAS,EACTA,OAAU,CACF;;EAEV;EACA;EACA;EACA;EACO,MAAMsmB,YAAY,GAAG,CAACtmB,IAAO,EAAEA,KAAQ,CAAU;;EAExD;EACA;EACA;EACA;EACO,MAAMumB,iBAAiB,GAAG,CAC/B,GAAGF,aAAa,EAChBrmB,MAAS,EACTA,WAAc,CACN;;EAEV;EACA;EACA;EACA;EACO,MAAMomB,UAAU,GAAG,CACxB,GAAGC,aAAa,EAChB,GAAGC,YAAY,EACftmB,MAAS,EACTA,WAAc,CACN;;ECvPV;EACA;EACA;;;EAUA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMwmB,iBAAiB,GAAGA,CAC/B9O,OAA2C,EAC3CpW,KAAY,KACT;EACH,EAAA,IAAIsL,UAAa,CAAC8K,OAAO,CAAC,EAAE;MAC1BA,OAAO,CAACxP,IAAI,CAAC5G,KAAK,CAACqI,aAAa,IAAInK,IAAI,EAAE8B,KAAK,CAAC;EAClD,EAAA,CAAC,MAAM;EACLoW,IAAAA,OAAO,CAAC+O,WAAW,CAACve,IAAI,CAAC5G,KAAK,CAACqI,aAAa,IAAInK,IAAI,EAAE8B,KAAK,CAAC;EAC9D,EAAA;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMolB,kBAAkB,GAAGA,CAChC1jB,MAAmB,EACnB2jB,SAAiB,EACjBjP,OAA2C,EAC3C3V,OAA2C,KAC/B;EACZA,EAAAA,OAAO,aAAPA,OAAO,KAAA,MAAA,GAAPA,OAAO,GAAPA,OAAO,GAAK,KAAK;EACjB4kB,EAAAA,SAAS,GAAGC,kBAAkB,CAACD,SAAS,CAAC;IACzC,IAAIE,mBAAmB,CAAC7jB,MAAM,EAAE2jB,SAAS,EAAEjP,OAAO,EAAE3V,OAAO,CAAC,EAAE;EAC5D;EACA,IAAA,OAAO,KAAK;EACd,EAAA;IAEA,IAAI+kB,QAAQ,GAAG/kB,OAAO;IACtB,IAAIglB,cAAc,GAAGrP,OAAO;;EAE5B;EACA;EACA,EAAA,MAAMsP,QAAQ,GAAGC,iBAAiB,EAAE;EACpC,EAAA,IAAIra,cAAiB,CAAC7K,OAAO,CAAC,EAAE;EAC9B,IAAA,IAAI,CAACilB,QAAQ,CAACE,WAAW,EAAE;EAAA,MAAA,IAAAC,gBAAA;QACzBL,QAAQ,GAAA,CAAAK,gBAAA,GAAGplB,OAAO,CAACqlB,OAAO,MAAA,IAAA,IAAAD,gBAAA,KAAA,MAAA,GAAAA,gBAAA,GAAI,KAAK;EACrC,IAAA;MAEA,IAAIplB,OAAO,CAACslB,IAAI,IAAI,CAACL,QAAQ,CAAC1D,QAAQ,CAAC+D,IAAI,EAAE;EAC3C;QACAN,cAAc,GAAIzlB,KAAK,IAAK;UAC1BgmB,uBAAuB,CAACtkB,MAAM,EAAE2jB,SAAS,EAAEjP,OAAO,EAAE3V,OAAO,CAAC;EAC5DykB,QAAAA,iBAAiB,CAAC9O,OAAO,EAAEpW,KAAK,CAAC;QACnC,CAAC;EACH,IAAA;EACF,EAAA;IAEAimB,mBAAmB,CAACvkB,MAAM,EAAE2jB,SAAS,EAAEjP,OAAO,EAAE3V,OAAO,EAAE;EACvDylB,IAAAA,eAAe,EAAET,cAAc;EAC/BU,IAAAA,SAAS,EAAEX;EACb,GAAC,CAAC;IAEF9jB,MAAM,CAAC4c,gBAAgB,CAAC+G,SAAS,EAAEI,cAAc,EAAED,QAAQ,CAAC;EAC5D,EAAA,OAAO,IAAI;EACb,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMQ,uBAAuB,GAAGA,CACrCtkB,MAAmB,EACnB2jB,SAAiB,EACjBjP,OAA2C,EAC3C3V,OAA2C,KACxC;EACHA,EAAAA,OAAO,aAAPA,OAAO,KAAA,MAAA,GAAPA,OAAO,GAAPA,OAAO,GAAK,KAAK;EACjB4kB,EAAAA,SAAS,GAAGC,kBAAkB,CAACD,SAAS,CAAC;IACzC,MAAMe,IAAI,GAAGb,mBAAmB,CAAC7jB,MAAM,EAAE2jB,SAAS,EAAEjP,OAAO,EAAE3V,OAAO,CAAC;IAErE,IAAI,CAAC2lB,IAAI,EAAE;EACT,IAAA,OAAO,KAAK;EACd,EAAA;EAEA1kB,EAAAA,MAAM,CAAC2kB,mBAAmB,CAAChB,SAAS,EAAEe,IAAI,CAACF,eAAe,EAAEE,IAAI,CAACD,SAAS,CAAC;IAC3EG,sBAAsB,CAAC5kB,MAAM,EAAE2jB,SAAS,EAAEjP,OAAO,EAAE3V,OAAO,CAAC;EAC3D,EAAA,OAAO,IAAI;EACb,CAAC;;EAED;EACA;EACA;EACA;EACO,MAAM8lB,aAAa,GAAI7kB,MAAmB,IAAK;IACpD0jB,kBAAkB,CAAC1jB,MAAM,EAAEhD,aAAgB,EAAE4M,cAAiB,CAAC;EAC/D,EAAA,IAAIA,SAAY,CAAC5J,MAAM,CAAC,EAAE;EACxBqY,IAAAA,UAAU,CAACrY,MAAM,EAAEhD,gBAAmB,CAAC;EACzC,EAAA;EACF,CAAC;;EAED;EACA;EACA;EACA;EACO,MAAM8nB,iBAAiB,GAAI9kB,MAAmB,IAAK;IACxDskB,uBAAuB,CAACtkB,MAAM,EAAEhD,aAAgB,EAAE4M,cAAiB,CAAC;EACpE,EAAA,IAAIA,SAAY,CAAC5J,MAAM,CAAC,EAAE;EACxBuY,IAAAA,aAAa,CAACvY,MAAM,EAAEhD,gBAAmB,CAAC;EAC5C,EAAA;EACF,CAAC;;EAED;EACA;EACA;EACA;EACO,MAAMinB,iBAAiB,GAAGA,MAA2B;EAC1D,EAAA,IAAIc,mBAAmB,EAAE;EACvB;EACA,IAAA,OAAOA,mBAAmB;EAC5B,EAAA;EAEA,EAAA,MAAMf,QAAQ,GAAG;EACfgB,IAAAA,QAAQ,EAAE,KAAK;EACfd,IAAAA,WAAW,EAAE,KAAK;EAClB5D,IAAAA,QAAQ,EAAE;EACR8D,MAAAA,OAAO,EAAE,KAAK;EACda,MAAAA,OAAO,EAAE,KAAK;EACdZ,MAAAA,IAAI,EAAE,KAAK;EACXa,MAAAA,MAAM,EAAE;EACV;KACD;;EAED;IACA,MAAMC,OAAO,GAAG,EAAE;EAClB,EAAA,IAAIC,GAAmC;EACvC,EAAA,KAAKA,GAAG,IAAIpB,QAAQ,CAAC1D,QAAQ,EAAE;MAC7B,MAAM+E,OAAO,GAAGD,GAAG;EACnBxb,IAAAA,cAAiB,CAACub,OAAO,EAAEE,OAAO,EAAE;QAClC9S,GAAG,EAAEA,MAAM;EACTyR,QAAAA,QAAQ,CAAC1D,QAAQ,CAAC+E,OAAO,CAAC,GAAG,IAAI;UACjC,IAAIA,OAAO,KAAK,QAAQ,EAAE;EACxB,UAAA,OAAO,IAAIC,eAAe,EAAE,CAACJ,MAAM;EACrC,QAAA;EACA,QAAA,OAAO,KAAK;EACd,MAAA;EACF,KAAC,CAAC;EACJ,EAAA;EAEA,EAAA,MAAMK,YAAY,GAAGA,MAAM,CAAC,CAAC,CAAC;EAC9B,EAAA,MAAMC,YAAY,GAAG5b,aAAgB,CAAC,KAAK,CAAC;IAC5C,IAAI;MACF4b,YAAY,CAAC5I,gBAAgB,CAAC,mBAAmB,EAAE2I,YAAY,EAAEJ,OAAO,CAAC;MACzEK,YAAY,CAACb,mBAAmB,CAC9B,mBAAmB,EACnBY,YAAY,EACZJ,OACF,CAAC;MACDnB,QAAQ,CAACE,WAAW,GAAG,IAAI;IAC7B,CAAC,CAAC,OAAOuB,UAAU,EAAE;EACnB;EAAA,EAAA;EAGFzB,EAAAA,QAAQ,CAACgB,QAAQ,GAAG,aAAa,IAAIQ,YAAY;EAEjDT,EAAAA,mBAAmB,GAAGf,QAAQ;EAC9B,EAAA,OAAOA,QAAQ;EACjB,CAAC;;EAED;;EAOA,IAAIe,mBAAwC;EAE5C,MAAMW,0BAA0B,GAAGrI,WAAW,CAY5CD,aAAa,CAACA,aAAa,CAAC,MAAMxT,MAAS,EAAE,CAAC,CAAC,CAAC;;EAElD;;EAYA,MAAM+b,kBAAkB,GACtB5mB,OAA0C,IAC/B;EACX,EAAA,MAAM6mB,YAAqC,GAAG;EAC5CxB,IAAAA,OAAO,EAAE,KAAK;EACda,IAAAA,OAAO,EAAE,KAAK;EACdZ,IAAAA,IAAI,EAAE;KACP;EAED,EAAA,IAAItlB,OAAO,KAAK,KAAK,IAAIA,OAAO,KAAK,IAAI,EAAE;MACzC6mB,YAAY,CAACxB,OAAO,GAAGrlB,OAAO;IAChC,CAAC,MAAM,IAAI6K,QAAW,CAAC7K,OAAO,CAAC,EAAE;EAC/BuP,IAAAA,gBAAgB,CAACvP,OAAO,EAAE6mB,YAAY,CAAC;EACzC,EAAA;EAEA,EAAA,OAAOhc,SAAY,CAACgc,YAAY,CAAC;EACnC,CAAC;EAED,MAAM/B,mBAAmB,GAAGA,CAC1B7jB,MAAmB,EACnB2jB,SAAiB,EACjBjP,OAA2C,EAC3C3V,OAA0C,KACvC;EAAA,EAAA,IAAA8mB,qBAAA;EACH,EAAA,MAAMC,UAAU,GAAGH,kBAAkB,CAAC5mB,OAAO,CAAC;EAC9C,EAAA,OAAA,CAAA8mB,qBAAA,GAAOH,0BAA0B,CAC9BnT,GAAG,CAACvS,MAAM,CAAC,MAAA,IAAA,IAAA6lB,qBAAA,gBAAAA,qBAAA,GADPA,qBAAA,CAEHtT,GAAG,CAACoR,SAAS,CAAC,MAAA,IAAA,IAAAkC,qBAAA,gBAAAA,qBAAA,GAFXA,qBAAA,CAGHtT,GAAG,CAACmC,OAAO,CAAC,MAAA,IAAA,IAAAmR,qBAAA,KAAA,MAAA,GAAA,MAAA,GAHTA,qBAAA,CAIHtT,GAAG,CAACuT,UAAU,CAAC;EACrB,CAAC;EAED,MAAMlB,sBAAsB,GAAGA,CAC7B5kB,MAAmB,EACnB2jB,SAAiB,EACjBjP,OAA2C,EAC3C3V,OAA0C,KACvC;EAAA,EAAA,IAAAgnB,sBAAA;EACH,EAAA,MAAMD,UAAU,GAAGH,kBAAkB,CAAC5mB,OAAO,CAAC;EAC9C6K,EAAAA,SAAY,CAAA,CAAAmc,sBAAA,GACVL,0BAA0B,CAACnT,GAAG,CAACvS,MAAM,CAAC,MAAA,IAAA,IAAA+lB,sBAAA,gBAAAA,sBAAA,GAAtCA,sBAAA,CAAwCxT,GAAG,CAACoR,SAAS,CAAC,cAAAoC,sBAAA,KAAA,MAAA,GAAA,MAAA,GAAtDA,sBAAA,CAAwDxT,GAAG,CAACmC,OAAO,CAAC,EACpEoR,UACF,CAAC;IACDJ,0BAA0B,CAAChI,KAAK,CAAC1d,MAAM,EAAE2jB,SAAS,EAAEjP,OAAO,CAAC;EAC9D,CAAC;EAED,MAAM6P,mBAAmB,GAAGA,CAC1BvkB,MAAmB,EACnB2jB,SAAiB,EACjBjP,OAA2C,EAC3C3V,OAA0C,EAC1C2lB,IAAsB,KACnB;EACH,EAAA,MAAMoB,UAAU,GAAGH,kBAAkB,CAAC5mB,OAAO,CAAC;IAC9C2mB,0BAA0B,CACvBjI,IAAI,CAACzd,MAAM,CAAC,CACZyd,IAAI,CAACkG,SAAS,CAAC,CACflG,IAAI,CAAC/I,OAAO,CAAC,CACbqB,GAAG,CAAC+P,UAAU,EAAEpB,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMd,kBAAkB,GAAID,SAAiB,IAAK;EAChD,EAAA,MAAMK,QAAQ,GAAGC,iBAAiB,EAAE;EACpC,EAAA,IAAIN,SAAS,CAACqC,UAAU,CAAChpB,SAAY,CAAC,IAAI,CAACgnB,QAAQ,CAACgB,QAAQ,EAAE;EAC5D;EACA;EACA,IAAA,OAAOpb,UAAa,CAAC+Z,SAAS,EAAE3mB,SAAY,EAAEA,OAAU,CAAC;EAC3D,EAAA;EAEA,EAAA,OAAO2mB,SAAS;EAClB,CAAC;;EC7SD;EACA;EACA;;;EASA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAUA;EACA;EACA;EACA;EACA;EACO,MAAMsC,kBAAkB,GAAIC,MAAc,IAC/Ctc,QAAW,CAACuc,OAAO,EAAED,MAAM,CAAC;;EAE9B;EACA;EACA;EACA;EACA;EACO,MAAME,aAAa,GAAIC,MAAc,IAC1Czc,QAAW,CAAC0c,OAAO,EAAED,MAAM,CAAC;;EAoB9B;EACA;EACA;EACA;EACO,MAAME,SAAS,GAAGA,CAACC,OAAe,EAAEC,SAAiB,KAC1D7c,GAAM,CAAC8c,WAAW,EAAEF,OAAO,GAAGC,SAAS,CAAC;;EAE1C;EACA;EACA;EACA;EACO,MAAMN,OAAwB,GAAG,CACtCnpB,KAAQ,EACRA,SAAY,EACZA,OAAU,EACVA,OAAU,CACF;;EAEV;EACA;EACA;EACA;EACO,MAAMspB,OAAwB,GAAG,CACtCtpB,QAAW,EACXA,MAAS,EACTA,MAAS,EACTA,SAAY,CACJ;;EAEV;EACA,MAAM0pB,WAAW,GAAG,GAAG;;ECxGvB;EACA;EACA;;;EAaA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMC,qBAAqB,GAAGA,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GtF,MAAM,CAACoF,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAAC5M,IAAI,KAAKriB,WAAc,CAAC;EACpE,EAAA,IAAI+uB,UAAU,GAAG,CAAC,IAAIG,SAAS,GAAG,CAAC,EAAE;EACnC,IAAA,OAAO,CAAC;EACV,EAAA;EAEA,EAAA,OAAOtF,MAAM,CAACsF,SAAS,CAAC,CAACC,SAAS,GAAGvF,MAAM,CAACmF,UAAU,CAAC,CAACI,SAAS;EACnE,CAAC;;EC/RD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMC,cAAc,GAAI9tB,KAAuB,IAAgB;IACpE,IAAI+tB,KAAK,GAAG,CAAC;EACXC,IAAAA,KAAK,GAAG,CAAC;MACTC,MAAM,GAAGjuB,KAAK,CAACwkB,MAAM;MACrB0J,MAAM,GAAGluB,KAAK,CAACykB,MAA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"}