{"version":3,"file":"scroll-trigger.cjs","names":["MC","_interopRequireWildcard","require","MH","_directions","_domSearch","_validation","_scrollWatcher","_trigger","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","o","Symbol","iterator","constructor","prototype","_classCallCheck","TypeError","_defineProperties","length","enumerable","configurable","writable","_toPropertyKey","key","_createClass","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","apply","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","_inherits","create","value","_setPrototypeOf","_defineProperty","_toPrimitive","toPrimitive","String","Number","ScrollTrigger","exports","_Trigger","element","actions","config","_this","directions","once","S_UP","S_DOWN","S_LEFT","S_RIGHT","getConfig","copyObject","lengthOf","watcher","ScrollWatcher","reuse","scrollable","threshold","oppositeDirections","getOppositeXYDirections","onScroll","run","reverse","register","registerTrigger","S_SCROLL","args","assign","validateStrList","isValidXYDirection","newConfigValidator","Trigger","_ref","isLiteralString","waitForReferenceElement","undefined","validateNumber"],"sources":["../../../src/ts/triggers/scroll-trigger.ts"],"sourcesContent":["/**\n * @module Triggers\n *\n * @categoryDescription Scroll\n * {@link ScrollTrigger} allows you to run actions when the user scrolls a\n * target element (or the main scrollable element) in a given direction, and\n * undo those actions when they scroll in the opposite direction.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  XYDirection,\n  CommaSeparatedStr,\n  ScrollTarget,\n} from \"@lisn/globals/types\";\n\nimport {\n  getOppositeXYDirections,\n  isValidXYDirection,\n} from \"@lisn/utils/directions\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { validateStrList, validateNumber } from \"@lisn/utils/validation\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link ScrollTrigger} allows you to run actions when the user scrolls a\n * target element (or the main scrollable element) in a given direction, and\n * undo those actions when they scroll in the opposite direction.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (optional): One or more (comma-separated) scroll directions.\n *   Note that if you do not specify any directions, then the trigger will just\n *   run once, on any scroll.\n * - Additional trigger options:\n *   - `scrollable`: A string element specification.\n *      See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `threshold`: A number.\n *\n * @example\n * Show the element when the user scrolls the page up, hide when scrolling\n * down. User scrolling left or right not trigger the action. See\n * {@link getOppositeXYDirections}:\n *\n * ```html\n * <div data-lisn-on-scroll=\"up @show\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-scroll--up@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the first time the user scrolls the page up:\n *\n * ```html\n * <div data-lisn-on-scroll=\"up @show +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `scrolled` the first time the user scrolls the page in any\n * direction (note that the `once` option is implied here), and show the\n * element 1000ms after each time the user scrolls the page up, hide it as soon\n * as they scroll down:\n *\n * ```html\n * <div data-lisn-on-scroll=\"@add-class=scrolled ;\n *                           up @show +do-delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * When the user scrolls up or down the closest ancestor with class `section`,\n * then add classes `c1` and `c2` and enable trigger `my-trigger` defined on\n * this same element; undo all of that when scrolling right or left:\n *\n * ```html\n * <div class=\"section\">\n *   <div data-lisn-on-scroll=\"up,down @add-class=c1,c2 @enable=my-trigger +scrollable=this.section\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n *   ></div>\n *</div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-ref=\"section\">\n *   <div data-lisn-on-scroll=\"up,down @add-class=c1,c2 @enable=my-trigger +scrollable=this-section\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n *   ></div>\n *</div>\n * ```\n *\n * @category Scroll\n */\nexport class ScrollTrigger extends Trigger {\n  readonly getConfig: () => ScrollTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_SCROLL,\n      (element, args, actions, config) => {\n        return new ScrollTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            directions: validateStrList(\"directions\", args, isValidXYDirection),\n          }),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config?: ScrollTriggerConfig,\n  ) {\n    config = config ?? {};\n\n    let directions = config.directions;\n    if (!directions) {\n      config.once = true;\n      directions = [MC.S_UP, MC.S_DOWN, MC.S_LEFT, MC.S_RIGHT];\n    }\n\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const watcher = ScrollWatcher.reuse();\n    const scrollable = config.scrollable;\n    const threshold = config.threshold;\n\n    const oppositeDirections = directions\n      ? getOppositeXYDirections(directions)\n      : [];\n\n    watcher.onScroll(this.run, {\n      directions,\n      scrollable,\n      threshold,\n    });\n\n    if (MH.lengthOf(oppositeDirections)) {\n      watcher.onScroll(this.reverse, {\n        directions: oppositeDirections,\n        scrollable,\n        threshold,\n      });\n    }\n  }\n}\n\n/**\n * @category Scroll\n * @interface\n */\nexport type ScrollTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link XYDirection}s to use as the trigger.\n   * See also {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * Actions will be \"done\" when the scroll direction is one of the given ones\n   * and \"undone\" when it's the opposite direction. E.g. for \"up\" the opposite\n   * is \"down\".\n   */\n  directions?: CommaSeparatedStr<XYDirection> | XYDirection[];\n\n  /**\n   * The scrolling element target to use for the ScrollWatcher.\n   * See {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * @defaultValue {@link ScrollWatcher} default, the main scrolling element\n   */\n  scrollable?: ScrollTarget;\n\n  /**\n   * The scroll threshold to pass to the {@link ScrollWatcher}.\n   * See also {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  threshold?: number;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<ScrollTriggerConfig, \"directions\">\n> = (element) => {\n  return {\n    scrollable: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    threshold: validateNumber,\n  };\n};\n"],"mappings":"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","ignoreList":[]}