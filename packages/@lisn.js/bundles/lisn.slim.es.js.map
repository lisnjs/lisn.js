{"version":3,"file":"lisn.slim.es.js","sources":["../../lisn.js/src/ts/globals/minification-constants.ts","../../lisn.js/src/ts/globals/errors.ts","../../lisn.js/src/ts/globals/minification-helpers.ts","../../lisn.js/src/ts/globals/settings.ts","../../lisn.js/src/ts/utils/math.ts","../../lisn.js/src/ts/utils/misc.ts","../../lisn.js/src/ts/utils/text.ts","../../lisn.js/src/ts/utils/validation.ts","../../lisn.js/src/ts/modules/bit-spaces.ts","../../lisn.js/src/ts/utils/dom.ts","../../lisn.js/src/ts/utils/tasks.ts","../../lisn.js/src/ts/modules/callback.ts","../../lisn.js/src/ts/utils/log.ts","../../lisn.js/src/ts/utils/dom-optimize.ts","../../lisn.js/src/ts/utils/dom-query.ts","../../lisn.js/src/ts/utils/css-alter.ts","../../lisn.js/src/ts/utils/dom-alter.ts","../../lisn.js/src/ts/utils/dom-events.ts","../../lisn.js/src/ts/modules/x-map.ts","../../lisn.js/src/ts/watchers/dom-watcher.ts","../../lisn.js/src/ts/utils/directions.ts","../../lisn.js/src/ts/utils/event.ts","../../lisn.js/src/ts/utils/gesture.ts","../../lisn.js/src/ts/utils/gesture-key.ts","../../lisn.js/src/ts/utils/gesture-pointer.ts","../../lisn.js/src/ts/utils/gesture-touch.ts","../../lisn.js/src/ts/utils/normalize-wheel.ts","../../lisn.js/src/ts/utils/gesture-wheel.ts","../../lisn.js/src/ts/watchers/gesture-watcher.ts","../../lisn.js/src/ts/utils/layout.ts","../../lisn.js/src/ts/utils/scroll.ts","../../lisn.js/src/ts/utils/overlays.ts","../../lisn.js/src/ts/utils/size.ts","../../lisn.js/src/ts/modules/x-resize-observer.ts","../../lisn.js/src/ts/watchers/size-watcher.ts","../../lisn.js/src/ts/watchers/layout-watcher.ts","../../lisn.js/src/ts/utils/pointer.ts","../../lisn.js/src/ts/watchers/pointer-watcher.ts","../../lisn.js/src/ts/watchers/scroll-watcher.ts","../../lisn.js/src/ts/utils/views.ts","../../lisn.js/src/ts/modules/x-intersection-observer.ts","../../lisn.js/src/ts/watchers/view-watcher.ts","../../lisn.js/src/ts/watchers/index.ts","../../lisn.js/src/ts/bundle-essentials.ts","../../lisn.js/src/ts/widgets/widget.ts","../../lisn.js/src/ts/actions/action.ts","../../lisn.js/src/ts/actions/add-class.ts","../../lisn.js/src/ts/utils/animations.ts","../../lisn.js/src/ts/actions/animate.ts","../../lisn.js/src/ts/actions/animate-play.ts","../../lisn.js/src/ts/actions/display.ts","../../lisn.js/src/ts/utils/dom-search.ts","../../lisn.js/src/ts/triggers/trigger.ts","../../lisn.js/src/ts/actions/trigger.ts","../../lisn.js/src/ts/actions/scroll-to.ts","../../lisn.js/src/ts/actions/set-attribute.ts","../../lisn.js/src/ts/actions/show.ts","../../lisn.js/src/ts/utils/position.ts","../../lisn.js/src/ts/widgets/openable.ts","../../lisn.js/src/ts/actions/open.ts","../../lisn.js/src/ts/widgets/pager.ts","../../lisn.js/src/ts/actions/pager.ts","../../lisn.js/src/ts/actions/index.ts","../../lisn.js/src/ts/triggers/check-trigger.ts","../../lisn.js/src/ts/triggers/pointer-trigger.ts","../../lisn.js/src/ts/triggers/layout-trigger.ts","../../lisn.js/src/ts/triggers/load-trigger.ts","../../lisn.js/src/ts/triggers/scroll-trigger.ts","../../lisn.js/src/ts/triggers/view-trigger.ts","../../lisn.js/src/ts/triggers/index.ts","../../lisn.js/src/ts/bundle-slim.ts"],"sourcesContent":["/**\n * For minification optimization.\n *\n * @module\n * @ignore\n * @internal\n */\n\nexport const PREFIX = \"lisn\";\nexport const LOG_PREFIX = \"[LISN.js]\";\n\nexport const OBJECT = Object;\nexport const SYMBOL = Symbol;\nexport const ARRAY = Array;\nexport const STRING = String;\nexport const FUNCTION = Function;\nexport const MATH = Math;\nexport const NUMBER = Number;\nexport const PROMISE = Promise;\n\nexport const PI = MATH.PI;\nexport const INFINITY = Infinity;\n\nexport const S_ABSOLUTE = \"absolute\";\nexport const S_FIXED = \"fixed\";\nexport const S_STICKY = \"sticky\";\n\nexport const S_WIDTH = \"width\";\nexport const S_HEIGHT = \"height\";\n\nexport const S_TOP = \"top\";\nexport const S_BOTTOM = \"bottom\";\n\nexport const S_UP = \"up\";\nexport const S_DOWN = \"down\";\n\nexport const S_LEFT = \"left\";\nexport const S_RIGHT = \"right\";\n\nexport const S_AT = \"at\";\nexport const S_ABOVE = \"above\";\nexport const S_BELOW = \"below\";\n\nexport const S_IN = \"in\";\nexport const S_OUT = \"out\";\n\nexport const S_NONE = \"none\";\nexport const S_AMBIGUOUS = \"ambiguous\";\n\nexport const S_ADDED = \"added\";\nexport const S_REMOVED = \"removed\";\nexport const S_ATTRIBUTE = \"attribute\";\n\nexport const S_KEY = \"key\";\nexport const S_MOUSE = \"mouse\";\nexport const S_POINTER = \"pointer\";\nexport const S_TOUCH = \"touch\";\nexport const S_WHEEL = \"wheel\";\nexport const S_CLICK = \"click\";\nexport const S_HOVER = \"hover\";\nexport const S_PRESS = \"press\";\n\nexport const S_SCROLL = \"scroll\";\nexport const S_ZOOM = \"zoom\";\nexport const S_DRAG = \"drag\";\nexport const S_UNKNOWN = \"unknown\";\n\nexport const S_SCROLL_TOP = `${S_SCROLL}Top` as `${typeof S_SCROLL}Top`;\nexport const S_SCROLL_LEFT = `${S_SCROLL}Left` as `${typeof S_SCROLL}Left`;\n\nexport const S_SCROLL_WIDTH = `${S_SCROLL}Width` as `${typeof S_SCROLL}Width`;\nexport const S_SCROLL_HEIGHT =\n  `${S_SCROLL}Height` as `${typeof S_SCROLL}Height`;\n\nexport const S_CLIENT_WIDTH = \"clientWidth\";\nexport const S_CLIENT_HEIGHT = \"clientHeight\";\n\nexport const S_SCROLL_TOP_FRACTION =\n  `${S_SCROLL}TopFraction` as `${typeof S_SCROLL}TopFraction`;\nexport const S_SCROLL_LEFT_FRACTION =\n  `${S_SCROLL}LeftFraction` as `${typeof S_SCROLL}LeftFraction`;\n\nexport const S_HORIZONTAL = \"horizontal\";\nexport const S_VERTICAL = \"vertical\";\nexport const S_SKIP_INITIAL = \"skipInitial\";\nexport const S_DEBOUNCE_WINDOW = \"debounceWindow\";\nexport const S_TOGGLE = \"toggle\";\n\nexport const S_CANCEL = \"cancel\";\n\nexport const S_KEYDOWN = (S_KEY + S_DOWN) as `${typeof S_KEY}${typeof S_DOWN}`;\n\nexport const S_MOUSEUP = (S_MOUSE + S_UP) as `${typeof S_MOUSE}${typeof S_UP}`;\nexport const S_MOUSEDOWN = (S_MOUSE +\n  S_DOWN) as `${typeof S_MOUSE}${typeof S_DOWN}`;\nexport const S_MOUSEMOVE = `${S_MOUSE}move` as `${typeof S_MOUSE}move`;\n\nexport const S_POINTERUP = (S_POINTER +\n  S_UP) as `${typeof S_POINTER}${typeof S_UP}`;\nexport const S_POINTERDOWN = (S_POINTER +\n  S_DOWN) as `${typeof S_POINTER}${typeof S_DOWN}`;\nexport const S_POINTERENTER = `${S_POINTER}enter` as `${typeof S_POINTER}enter`;\nexport const S_POINTERLEAVE = `${S_POINTER}leave` as `${typeof S_POINTER}leave`;\nexport const S_POINTERMOVE = `${S_POINTER}move` as `${typeof S_POINTER}move`;\nexport const S_POINTERCANCEL = (S_POINTER +\n  S_CANCEL) as `${typeof S_POINTER}${typeof S_CANCEL}`;\n\nexport const S_TOUCHSTART = `${S_TOUCH}start` as `${typeof S_TOUCH}start`;\nexport const S_TOUCHEND = `${S_TOUCH}end` as `${typeof S_TOUCH}end`;\nexport const S_TOUCHMOVE = `${S_TOUCH}move` as `${typeof S_TOUCH}move`;\nexport const S_TOUCHCANCEL = (S_TOUCH +\n  S_CANCEL) as `${typeof S_TOUCH}${typeof S_CANCEL}`;\n\nexport const S_DRAGSTART = `${S_DRAG}start` as `${typeof S_DRAG}start`;\nexport const S_DRAGEND = `${S_DRAG}end` as `${typeof S_DRAG}end`;\nexport const S_DRAGENTER = `${S_DRAG}enter` as `${typeof S_DRAG}enter`;\nexport const S_DRAGOVER = `${S_DRAG}over` as `${typeof S_DRAG}over`;\nexport const S_DRAGLEAVE = `${S_DRAG}leave` as `${typeof S_DRAG}leave`;\nexport const S_DROP = \"drop\";\n\nexport const S_SELECTSTART = \"selectstart\";\n\nexport const S_ATTRIBUTES = \"attributes\";\nexport const S_CHILD_LIST = \"childList\";\n\nexport const S_REVERSE = \"reverse\";\nexport const S_DRAGGABLE = \"draggable\";\nexport const S_DISABLED = \"disabled\";\n\nexport const S_ARROW = \"arrow\";\n\nexport const S_ROLE = \"role\";\n\nexport const ARIA_PREFIX = \"aria-\";\nexport const S_ARIA_CONTROLS = ARIA_PREFIX + \"controls\";\n\nexport const PREFIX_WRAPPER = `${PREFIX}-wrapper`;\nexport const PREFIX_INLINE_WRAPPER = `${PREFIX_WRAPPER}-inline`;\nexport const PREFIX_TRANSITION = `${PREFIX}-transition`;\nexport const PREFIX_TRANSITION_DISABLE = `${PREFIX_TRANSITION}__disable`;\nexport const PREFIX_HIDE = `${PREFIX}-hide`;\nexport const PREFIX_SHOW = `${PREFIX}-show`;\nexport const PREFIX_DISPLAY = `${PREFIX}-display`;\nexport const PREFIX_UNDISPLAY = `${PREFIX}-undisplay`;\nexport const PREFIX_PLACE = `${PREFIX}-place`;\nexport const PREFIX_ORIENTATION = `${PREFIX}-orientation`;\nexport const PREFIX_POSITION = `${PREFIX}-position`;\nexport const PREFIX_GHOST = `${PREFIX}-ghost`;\nexport const PREFIX_BORDER_SIZE = `${PREFIX}-border-size`;\nexport const PREFIX_NO_SELECT = `${PREFIX}-no-select`;\nexport const PREFIX_NO_TOUCH_ACTION = `${PREFIX}-no-touch-action`;\nexport const PREFIX_NO_WRAP = `${PREFIX}-no-wrap`;\n\nexport const S_ANIMATE = \"animate\";\nexport const ANIMATE_PREFIX = `${PREFIX}-${S_ANIMATE}__`;\nexport const PREFIX_ANIMATE_DISABLE = `${ANIMATE_PREFIX}disable`;\nexport const PREFIX_ANIMATE_PAUSE = `${ANIMATE_PREFIX}pause`;\nexport const PREFIX_ANIMATE_REVERSE = `${ANIMATE_PREFIX}${S_REVERSE}`;\nexport const PREFIX_ANIMATE_INFINITE = `${ANIMATE_PREFIX}infinite`;\n\nexport const USER_AGENT =\n  typeof navigator === \"undefined\" ? \"\" : navigator.userAgent;\n\nexport const IS_MOBILE =\n  USER_AGENT.match(\n    /Mobile|Android|Silk\\/|Kindle|BlackBerry|Opera Mini|Opera Mobi/,\n  ) !== null;\n","/**\n * @module Errors\n */\n\nimport { LOG_PREFIX } from \"@lisn/globals/minification-constants\";\n\n/**\n * Base error type emitted by LISN.\n */\nexport abstract class LisnError extends Error {}\n\n/**\n * Error type emitted for invalid input or incorrect usage of a function.\n */\nexport class LisnUsageError extends LisnError {\n  constructor(message = \"\") {\n    super(`${LOG_PREFIX} Incorrect usage: ${message}`);\n    this.name = \"LisnUsageError\";\n  }\n}\n\n/**\n * Error type emitted if an assertion is wrong => report bug.\n */\nexport class LisnBugError extends LisnError {\n  constructor(message = \"\") {\n    super(`${LOG_PREFIX} Please report a bug: ${message}`);\n    this.name = \"LisnBugError\";\n  }\n}\n","/**\n * For minification optimization\n *\n * @module\n * @ignore\n * @internal\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  BoundingRect,\n  IterableObject,\n  Constructor,\n  InstanceType,\n  MapBase,\n  SetBase,\n  Spread,\n} from \"@lisn/globals/types\";\n\nimport { LisnUsageError, LisnBugError } from \"@lisn/globals/errors\";\n\n// credit: underscore.js\nconst root =\n  (typeof self === \"object\" && self.self === self && self) ||\n  (typeof global == \"object\" && global.global === global && global) ||\n  Function(\"return this\")() ||\n  {};\n\nexport const kebabToCamelCase = (str: string) =>\n  str.replace(/-./g, (m) => toUpperCase(m.charAt(1)));\n\nexport const camelToKebabCase = (str: string) =>\n  str\n    .replace(/[A-Z][a-z]/g, (m) => \"-\" + toLowerCase(m))\n    .replace(/[A-Z]+/, (m) => \"-\" + toLowerCase(m));\n\nexport const prefixName = (name: string) => `${MC.PREFIX}-${name}`;\n\nexport const prefixCssVar = (name: string) => \"--\" + prefixName(name);\n\nexport const prefixCssJsVar = (name: string) => prefixCssVar(\"js--\" + name);\n\nexport const prefixData = (name: string) => `data-${camelToKebabCase(name)}`;\n\nexport const prefixLisnData = (name: string) => prefixData(prefixName(name));\n\nexport const toLowerCase = (s: string) => s.toLowerCase();\n\nexport const toUpperCase = (s: string) => s.toUpperCase();\n\nexport const timeNow = Date.now.bind(Date);\n\nexport const timeSince = (startTime: number) => timeNow() - startTime;\n\nexport const hasDOM = () => typeof document !== \"undefined\";\n\nexport const getWindow = () => window;\n\nexport const getDoc = () => document;\n\nexport const getDocElement = () => getDoc().documentElement;\n\nexport const getDocScrollingElement = () =>\n  getDoc().scrollingElement as HTMLElement | null;\n\nexport const getBody = () => getDoc().body;\n\nexport const getReadyState = () => getDoc().readyState;\n\nexport const getPointerType = (event: Event) =>\n  isPointerEvent(event)\n    ? event.pointerType\n    : isMouseEvent(event)\n      ? \"mouse\"\n      : null;\n\nexport const onAnimationFrame = hasDOM()\n  ? root.requestAnimationFrame.bind(root)\n  : () => {};\n\nexport const createElement = (\n  tagName: string,\n  options?: ElementCreationOptions,\n) => getDoc().createElement(tagName, options);\n\nexport const createButton = (label = \"\", tag = \"button\") => {\n  const btn = createElement(tag);\n  setTabIndex(btn);\n  setAttr(btn, MC.S_ROLE, \"button\");\n  setAttr(btn, MC.ARIA_PREFIX + \"label\", label);\n  return btn;\n};\n\nexport const isNullish = (v: unknown): v is null | undefined =>\n  v === undefined || v === null;\n\nexport const isEmpty = (v: unknown): v is null | undefined | \"\" =>\n  isNullish(v) || v === \"\";\n\nexport const isIterableObject = (v: unknown): v is IterableObject<unknown> =>\n  isNonPrimitive(v) && MC.SYMBOL.iterator in v;\n\nexport const isArray = (v: unknown) => isInstanceOf(v, MC.ARRAY);\n\nexport const isObject = (v: unknown) => isInstanceOf(v, MC.OBJECT);\n\nexport const isNonPrimitive = (v: unknown): v is object =>\n  v !== null && typeOf(v) === \"object\";\n\n// only primitive number\nexport const isNumber = (v: unknown): v is number => typeOf(v) === \"number\";\n\n/* eslint-disable-next-line @typescript-eslint/no-wrapper-object-types */\nexport const isString = (v: unknown): v is string | String =>\n  typeOf(v) === \"string\" || isInstanceOf(v, MC.STRING);\n\nexport const isLiteralString = (v: unknown): v is string =>\n  typeOf(v) === \"string\";\n\nexport const isBoolean = (v: unknown): v is boolean => typeOf(v) === \"boolean\";\n\n/* eslint-disable-next-line @typescript-eslint/no-unsafe-function-type */\nexport const isFunction = (v: unknown): v is Function =>\n  typeOf(v) === \"function\" || isInstanceOf(v, MC.FUNCTION);\n\nexport const isDoc = (target: unknown): target is Document =>\n  target === getDoc();\n\nexport const isMouseEvent = (event: Event): event is MouseEvent =>\n  isInstanceOf(event, MouseEvent);\n\nexport const isPointerEvent = (event: Event): event is PointerEvent =>\n  typeof PointerEvent !== \"undefined\" && isInstanceOf(event, PointerEvent);\n\nexport const isTouchPointerEvent = (event: Event): event is PointerEvent =>\n  isPointerEvent(event) && getPointerType(event) === MC.S_TOUCH;\n\nexport const isWheelEvent = (event: Event): event is WheelEvent =>\n  isInstanceOf(event, WheelEvent);\n\nexport const isKeyboardEvent = (event: Event): event is KeyboardEvent =>\n  isInstanceOf(event, KeyboardEvent);\n\nexport const isTouchEvent = (event: Event): event is TouchEvent =>\n  typeof TouchEvent !== \"undefined\" && isInstanceOf(event, TouchEvent);\n\nexport const isNode = (target: unknown) => isInstanceOf(target, Node);\n\nexport const isElement = (target: unknown) => isInstanceOf(target, Element);\n\nexport const isHTMLElement = (target: unknown) =>\n  isInstanceOf(target, HTMLElement);\n\nexport const isNodeBAfterA = (nodeA: Node, nodeB: Node) =>\n  (nodeA.compareDocumentPosition(nodeB) & Node.DOCUMENT_POSITION_FOLLOWING) !==\n  0;\n\nexport const strReplace = (\n  s: string,\n  match: string | RegExp,\n  replacement: string,\n) => s.replace(match, replacement);\n\nexport const setTimer = root.setTimeout.bind(root);\n\nexport const clearTimer = root.clearTimeout.bind(root);\n\nexport const getBoundingClientRect = (el: Element) =>\n  el.getBoundingClientRect();\n\n// Copy size properties explicitly to another object so they can be used with\n// the spread operator (DOMRect/DOMRectReadOnly's properties are not enumerable)\nexport const copyBoundingRectProps = (rect: BoundingRect): BoundingRect => {\n  return {\n    x: rect.x,\n    left: rect.left,\n    right: rect.right,\n    [MC.S_WIDTH]: rect[MC.S_WIDTH],\n    y: rect.y,\n    top: rect.top,\n    bottom: rect.bottom,\n    [MC.S_HEIGHT]: rect[MC.S_HEIGHT],\n  };\n};\n\nexport const querySelector = (root: Element | Document, selector: string) =>\n  root.querySelector(selector);\n\nexport const querySelectorAll = (root: Element | Document, selector: string) =>\n  root.querySelectorAll(selector);\n\nexport const docQuerySelector = (selector: string) =>\n  querySelector(getDoc(), selector);\n\nexport const docQuerySelectorAll = (selector: string) =>\n  querySelectorAll(getDoc(), selector);\n\nexport const getElementById = (id: string) => getDoc().getElementById(id);\n\nexport const getAttr = (el: Element, name: string) => el.getAttribute(name);\n\nexport const setAttr = (el: Element, name: string, value = \"true\") =>\n  el.setAttribute(name, value);\n\nexport const unsetAttr = (el: Element, name: string) =>\n  el.setAttribute(name, \"false\");\n\nexport const delAttr = (el: Element, name: string) => el.removeAttribute(name);\n\nexport const includes = (\n  arr: readonly unknown[] | string,\n  v: unknown,\n  startAt?: number,\n) => (arr.indexOf as (v: unknown, startAt?: number) => number)(v, startAt) >= 0;\n\nexport const filter = <\n  A extends readonly unknown[],\n  T extends A[number],\n  C extends FilterFn<A[number]> | FilterFnTypeP<A[number], T>,\n>(\n  array: A,\n  filterFn: C,\n) => array.filter(filterFn) as FilteredType<C, A[number], T>[];\n\nexport const filterBlank = <A extends readonly unknown[]>(\n  array: A | null | undefined,\n) => {\n  const result = array\n    ? filter(array, (v): v is NonNullable<A[number]> => !isEmpty(v))\n    : undefined;\n\n  return lengthOf(result) ? result : undefined;\n};\n\nexport const sizeOf = (obj: { size: number } | null | undefined) =>\n  obj?.size ?? 0;\n\nexport const lengthOf = (obj: { length: number } | null | undefined) =>\n  obj?.length ?? 0;\n\nexport const tagName = (el: Element) => el.tagName;\n\nexport const preventDefault = (event: Event) => event.preventDefault();\n\nexport const arrayFrom = MC.ARRAY.from.bind(MC.ARRAY);\n\nexport const keysOf = <T extends Record<string | symbol, unknown>>(\n  obj: T,\n): Array<keyof T & string> => MC.OBJECT.keys(obj);\n\nexport const defineProperty = MC.OBJECT.defineProperty.bind(MC.OBJECT);\n\n// use it in place of object spread\nexport const merge = <A extends readonly (object | null | undefined)[]>(\n  ...a: [...A]\n) => {\n  return MC.OBJECT.assign({}, ...a) as Spread<A>;\n};\n\nexport const copyObject = <T extends object>(obj: T) => merge(obj);\n\nexport const promiseResolve = MC.PROMISE.resolve.bind(MC.PROMISE);\n\nexport const promiseAll = MC.PROMISE.all.bind(MC.PROMISE);\n\nexport const assign = MC.OBJECT.assign.bind(MC.OBJECT);\n\nexport const freezeObj = MC.OBJECT.freeze.bind(MC.OBJECT);\n\nexport const hasOwnProp = (o: object, prop: string | symbol) =>\n  MC.OBJECT.prototype.hasOwnProperty.call(o, prop);\n\nexport const preventExtensions = MC.OBJECT.preventExtensions.bind(MC.OBJECT);\n\nexport const stringify = JSON.stringify.bind(JSON);\n\nexport const floor = MC.MATH.floor.bind(MC.MATH);\n\nexport const ceil = MC.MATH.ceil.bind(MC.MATH);\n\nexport const log2 = MC.MATH.log2.bind(MC.MATH);\n\nexport const sqrt = MC.MATH.sqrt.bind(MC.MATH);\n\nexport const max = MC.MATH.max.bind(MC.MATH);\n\nexport const min = MC.MATH.min.bind(MC.MATH);\n\nexport const abs = MC.MATH.abs.bind(MC.MATH);\n\nexport const round = MC.MATH.round.bind(MC.MATH);\n\nexport const pow = MC.MATH.pow.bind(MC.MATH);\n\nexport const parseFloat = MC.NUMBER.parseFloat.bind(MC.NUMBER);\n\nexport const isNaN = MC.NUMBER.isNaN.bind(MC.NUMBER);\n\nexport const isInstanceOf = <C extends Constructor<unknown>>(\n  value: unknown,\n  Class: C,\n): value is InstanceType<C> => value instanceof Class;\n\nexport const constructorOf = (obj: object) => obj.constructor;\n\nexport const typeOf = (obj: unknown) => typeof obj;\n\nexport const typeOrClassOf = (obj: unknown) =>\n  isObject(obj) ? constructorOf(obj)?.name : typeOf(obj);\n\nexport const parentOf = (element: Element | undefined | null) =>\n  element?.parentElement || null;\n\nexport const childrenOf = (element: Element | undefined | null) =>\n  element?.children || [];\n\nexport const targetOf = <O extends { target?: unknown } | null | undefined>(\n  obj: O,\n) =>\n  obj?.target as O extends { target: infer T }\n    ? T\n    : O extends { target?: infer T }\n      ? T | undefined\n      : undefined;\n\nexport const currentTargetOf = <\n  O extends { currentTarget?: unknown } | null | undefined,\n>(\n  obj: O,\n) =>\n  obj?.currentTarget as O extends { currentTarget: infer T }\n    ? T\n    : O extends { currentTarget?: infer T }\n      ? T | undefined\n      : undefined;\n\nexport const classList = <T extends Element | null | undefined>(el: T) =>\n  el?.classList as T extends Element ? DOMTokenList : undefined;\n\nconst S_TABINDEX = \"tabindex\";\nexport const getTabIndex = (el: Element) => getAttr(el, S_TABINDEX);\n\nexport const setTabIndex = (el: Element, index = \"0\") =>\n  setAttr(el, S_TABINDEX, index);\n\nexport const unsetTabIndex = (el: Element) => delAttr(el, S_TABINDEX);\n\nexport const remove = (obj: { remove: () => void } | null | undefined) =>\n  obj?.remove();\n\nexport const deleteObjKey = <O extends object>(obj: O, key: keyof O) =>\n  delete obj[key];\n\nexport const deleteKey = <K, V>(\n  map: MapBase<K, V> | SetBase<K> | null | undefined,\n  key: K,\n) => map?.delete(key);\n\nexport const elScrollTo = (\n  el: Element,\n  coords: { top?: number; left?: number },\n  behavior: ScrollBehavior = \"instant\",\n) => el.scrollTo(merge({ behavior }, coords));\n\nexport const elScrollBy = (\n  el: Element,\n  coords: { top?: number; left?: number },\n  behavior: ScrollBehavior = \"instant\",\n) => el.scrollBy(merge({ behavior }, coords));\n\nexport const newPromise = <T>(\n  executor: (\n    resolve: (value: T) => void,\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    reject: (reason?: any) => void,\n  ) => void,\n) => new Promise(executor);\n\nexport const newMap = <K, V>(entries?: readonly (readonly [K, V])[] | null) =>\n  new Map(entries);\n\nexport const newWeakMap = <K extends WeakKey, V>(\n  entries?: readonly (readonly [K, V])[] | null,\n) => new WeakMap(entries);\n\nexport const newSet = <T>(values?: readonly T[] | null) => new Set(values);\n\nexport const newWeakSet = <T extends WeakKey>(values?: readonly T[] | null) =>\n  new WeakSet(values);\n\nexport const newIntersectionObserver = (\n  callback: IntersectionObserverCallback,\n  options?: IntersectionObserverInit,\n) => new IntersectionObserver(callback, options);\n\nexport const newResizeObserver = (callback: ResizeObserverCallback) =>\n  typeof ResizeObserver === \"undefined\" ? null : new ResizeObserver(callback);\n\nexport const newMutationObserver = (callback: MutationCallback) =>\n  new MutationObserver(callback);\n\nexport const usageError = (msg: string) => new LisnUsageError(msg);\n\nexport const bugError = (msg: string) => new LisnBugError(msg);\n\nexport const illegalConstructorError = (useWhat: string) =>\n  usageError(`Illegal constructor. Use ${useWhat}.`);\n\nconst CONSOLE = console;\nexport const consoleDebug = CONSOLE.debug.bind(CONSOLE);\n\nexport const consoleLog = CONSOLE.log.bind(CONSOLE);\n\nexport const consoleInfo = CONSOLE.info.bind(CONSOLE);\n\nexport const consoleWarn = CONSOLE.warn.bind(CONSOLE);\n\nexport const consoleError = CONSOLE.error.bind(CONSOLE);\n\n// --------------------\n\ntype FilterFn<V> = (value: V, index: number, array: readonly V[]) => unknown;\ntype FilterFnTypeP<V, T extends V> = (\n  value: V,\n  index: number,\n  array: readonly V[],\n) => value is T;\ntype FilteredType<C extends FilterFn<V> | FilterFnTypeP<V, T>, V, T extends V> =\n  C extends FilterFnTypeP<V, infer T> ? T : V;\n","/**\n * @module Settings\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\n/**\n * LISN's settings.\n * @readonly\n *\n * If you wish to modify them, then you need to do so immediately after loading\n * LISN before you instantiate any watchers, etc. For example:\n *\n * ```html\n * <!doctype html>\n * <html>\n *   <head>\n *     <meta charset=\"UTF-8\" />\n *     <meta name=\"viewport\" content=\"width=device-width\" />\n *     <script src=\"lisn.js\" charset=\"utf-8\"></script>\n *     <script charset=\"utf-8\">\n *       // modify LISN settings, for example:\n *       LISN.settings.deviceBreakpoints.desktop = 1024;\n *     </script>\n *   </head>\n *   <body>\n *   </body>\n * </html>\n * ```\n */\nexport const settings = MH.preventExtensions({\n  /**\n   * A unique selector (preferably `#some-id`) for the element that holds the\n   * main page content, if other than `document.body`.\n   *\n   * E.g. if your main content is inside a custom scrollable container, rather\n   * than directly in `document.body`, then pass a selector for it here.\n   *\n   * The element must be scrollable, i.e. have a fixed size and `overflow: scroll`.\n   *\n   * **IMPORTANT:** You must set this before initializing any watchers, widgets,\n   * etc. If you are using the HTML API, then you must set this before the\n   * document `readyState` becomes interactive.\n   *\n   * @defaultValue null\n   * @category Generic\n   */\n  mainScrollableElementSelector: null as string | null,\n\n  /**\n   * This setting allows us to automatically wrap certain elements or groups of\n   * elements into a single `div` or `span` element to allow for more reliable\n   * or efficient working of certain features. In particular:\n   *\n   * 1. View tracking using relative offsets and a scrolling root **requires wrapping**\n   *\n   * When using view position tracking with a percentage offset specification\n   * (e.g. `top: 50%`) _and_ a custom root element that is scrollable_ (and\n   * obviously has a size smaller than the content), you **MUST** enable\n   * content wrapping, otherwise the trigger offset elements cannot be\n   * positioned relative to the scrolling _content size_.\n   *\n   * 2. Scroll tracking\n   *\n   * When using scroll tracking, including scrollbars, on a scrolling element\n   * (that obviously has a size smaller than the content), it's recommended for\n   * the content of the scrollable element to be wrapped in a single `div`\n   * container, to allow for more efficient and reliable detection of changes\n   * in the _scrollable content_ size.\n   *\n   * If content wrapping is disabled, when scroll tracking is used on a given\n   * element (other than the root of the document), each of the immediate\n   * children of the scrollable element have their sizes tracked, which could\n   * lead to more resource usage.\n   *\n   * 3. Scrollbars on custom elements\n   *\n   * When you setup a {@link Widgets.Scrollbar} widget for a custom\n   * scrollable element that may not be the main scrollable (and therefore\n   * won't take up the full viewport all the time), then to be able to position\n   * to scrollbar relative to the scrollable element, its content needs to be\n   * wrapped.\n   *\n   * If this setting is OFF, then the scrollbars on custom elements have to\n   * rely on position sticky which doesn't have as wide browser support as the\n   * default option.\n   *\n   * 4. Animating on viewport enter/leave\n   *\n   * For elements that have transforms applied as part of an animation or\n   * transition, if you wish to run or reverse the animation when the element\n   * enters or leaves the viewport, then the transform can interfere with the\n   * viewport tracking. For example, if undoing the animation as soon as the\n   * element leaves the viewport makes it enter it again (because it's moved),\n   * then this will result in a glitch.\n   *\n   * If content wrapping is disabled, then to get around such issues, a dummy\n   * element is positioned on top of the actual element and is the one tracked\n   * across the viewport instead. Either approach could cause issues depending\n   * on your CSS, so it's your choice which one is applied.\n   *\n   * ----------\n   *\n   * If you can, it's recommended to leave this setting ON. You can still\n   * disable wrapping on a per-element basis by setting `data-lisn-no-wrap`\n   * attribute on it.\n   *\n   * @defaultValue true\n   * @category Generic\n   */\n  contentWrappingAllowed: true,\n\n  /**\n   * The timeout in milliseconds for waiting for the `document.readyState` to\n   * become `complete`. The timer begins _once the `readyState` becomes\n   * `interactive`_.\n   *\n   * The page will be considered \"ready\" either when the `readyState` becomes\n   * `complete` or this many milliseconds after it becomes `interactive`,\n   * whichever is first.\n   *\n   * Set to 0 or a negative number to disable timeout.\n   *\n   * @defaultValue 2000 // i.e. 2s\n   * @category Generic\n   */\n  pageLoadTimeout: 2000,\n\n  /**\n   * This enables LISN's HTML API. Then the page will be parsed (and watched\n   * for dynamically added elements at any time) for any elements matching a\n   * widget selector. Any element that has a matching CSS class or data\n   * attribute will be setup according to the relevant widget, which may wrap,\n   * clone or add attributes to the element.\n   *\n   * This is enabled by default for bundles, and disabled otherwise.\n   *\n   * **IMPORTANT:** You must set this before the document `readyState` becomes\n   * interactive.\n   *\n   * @defaultValue `false` in general, but `true` in browser bundles\n   * @category Widgets\n   */\n  autoWidgets: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.hideNative | ScrollbarConfig.hideNative}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarHideNative: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.onMobile | ScrollbarConfig.onMobile}.\n   *\n   * @defaultValue false\n   * @category Widgets/Scrollbar\n   */\n  scrollbarOnMobile: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.positionH | ScrollbarConfig.positionH}.\n   *\n   * @defaultValue \"bottom\"\n   * @category Widgets/Scrollbar\n   */\n  scrollbarPositionH: \"bottom\",\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.positionV | ScrollbarConfig.positionV}.\n   *\n   * @defaultValue \"right\"\n   * @category Widgets/Scrollbar\n   */\n  scrollbarPositionV: \"right\",\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.autoHide | ScrollbarConfig.autoHide}.\n   *\n   * @defaultValue -1\n   * @category Widgets/Scrollbar\n   */\n  scrollbarAutoHide: -1,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.clickScroll | ScrollbarConfig.clickScroll}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarClickScroll: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.dragScroll | ScrollbarConfig.dragScroll}.\n   *\n   * @defaultValue true\n   * @category Widgets/Scrollbar\n   */\n  scrollbarDragScroll: true,\n\n  /**\n   * Default setting for\n   * {@link Widgets.ScrollbarConfig.useHandle | ScrollbarConfig.useHandle}.\n   *\n   * @defaultValue false\n   * @category Widgets/Scrollbar\n   */\n  scrollbarUseHandle: false,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.diffTolerance | SameHeightConfig.diffTolerance}.\n   *\n   * @defaultValue 15\n   * @category Widgets/SameHeight\n   */\n  sameHeightDiffTolerance: 15,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.resizeThreshold | SameHeightConfig.resizeThreshold}.\n   *\n   * @defaultValue 5\n   * @category Widgets/SameHeight\n   */\n  sameHeightResizeThreshold: 5,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.debounceWindow | SameHeightConfig.debounceWindow}.\n   *\n   * @defaultValue 100\n   * @category Widgets/SameHeight\n   */\n  sameHeightDebounceWindow: 100,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.minGap | SameHeightConfig.minGap}.\n   *\n   * @defaultValue 30\n   * @category Widgets/SameHeight\n   */\n  sameHeightMinGap: 30,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.maxFreeR | SameHeightConfig.maxFreeR}.\n   *\n   * @defaultValue 0.4\n   * @category Widgets/SameHeight\n   */\n  sameHeightMaxFreeR: 0.4,\n\n  /**\n   * Default setting for\n   * {@link Widgets.SameHeightConfig.maxWidthR | SameHeightConfig.maxWidthR}.\n   *\n   * @defaultValue 1.7\n   * @category Widgets/SameHeight\n   */\n  sameHeightMaxWidthR: 1.7,\n\n  /**\n   * Set custom device breakpoints as width in pixels.\n   *\n   * The value of each sets its lower limit, i.e. it specifies a device whose\n   * width is larger than the given value (and up to the next larger one).\n   *\n   * If you specify only some of the below devices, then the other ones will\n   * keep their default breakpoint values.\n   *\n   * Adding device types, other than the ones listed below is not supported.\n   *\n   * @category Device layouts\n   */\n  deviceBreakpoints: {\n    /**\n     * This should be left as 0 as it's the catch-all for anything narrower\n     * than \"mobile-wide\".\n     *\n     * @defaultValue 0\n     */\n    mobile: 0,\n\n    /**\n     * Anything wider than the given value is \"mobile-wide\", up to the value of\n     * \"tablet\".\n     *\n     * @defaultValue 576\n     */\n    \"mobile-wide\": 576,\n\n    /**\n     * Anything wider than the given value is \"tablet\", up to the value of\n     * \"desktop\".\n     *\n     * @defaultValue 768\n     */\n    tablet: 768, // tablet is anything above this (up to desktop)\n\n    /**\n     * Anything wider than the given value is \"desktop\".\n     *\n     * @defaultValue 992\n     */\n    desktop: 992, // desktop is anything above this\n  },\n\n  /**\n   * Set custom aspect ratio breakpoints (as ratio of width to height).\n   *\n   * The value of each sets its lower limit, i.e. it specifies an aspect ratio\n   * that is wider than the given value (and up to the next wider one).\n   *\n   * If you specify only some of the below aspect ratios, then the other ones\n   * will keep their default breakpoint values.\n   *\n   * Adding aspect ratio types, other than the ones listed below is not\n   * supported.\n   *\n   * @category Device layouts\n   */\n  aspectRatioBreakpoints: {\n    /**\n     * This should be left as 0 as it's the catch-all for anything with\n     * a narrower aspect ratio than \"tall\".\n     *\n     * @defaultValue 0\n     */\n    \"very-tall\": 0, // very tall is up to 9:16\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"tall\", up to\n     * the value of \"square\".\n     *\n     * @defaultValue 9 / 16\n     */\n    tall: 9 / 16, // tall is between 9:16 and 3:4\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"square\", up\n     * to the value of \"wide\".\n     *\n     * @defaultValue 3 / 4\n     */\n    square: 3 / 4, // square is between 3:4 and 4:3\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"wide\", up to\n     * the value of \"very-wide\".\n     *\n     * @defaultValue 4 / 3\n     */\n    wide: 4 / 3, // wide is between 4:3 and 16:9\n\n    /**\n     * Anything with a wider aspect ratio than the given value is \"very-wide\".\n     *\n     * @defaultValue 16 / 9\n     */\n    \"very-wide\": 16 / 9, // very wide is above 16:9\n  },\n\n  /**\n   * The CSS class that enables light theme.\n   *\n   * **IMPORTANT:** If you change this, you should also change the\n   * `$light-theme-cls` variable in the SCSS configuration, or otherwise add the\n   * following to your CSS:\n   *\n   * :root,\n   * .custom-light-theme-cls {\n   *   --lisn-color-fg: some-dark-color;\n   *   --lisn-color-fg-t: some-dark-color-with-transparency;\n   *   --lisn-color-bg: some-light-color;\n   *   --lisn-color-bg-t: some-light-color-with-transparency;\n   * }\n   */\n  lightThemeClassName: \"light-theme\",\n\n  /**\n   * The CSS class that enables dark theme.\n   *\n   * **IMPORTANT:** If you change this, you should also change the\n   * `$dark-theme-cls` variable in the SCSS configuration, or otherwise add the\n   * following to your CSS:\n   *\n   * .custom-dark-theme-cls {\n   *   --lisn-color-fg: some-light-color;\n   *   --lisn-color-fg-t: some-light-color-with-transparency;\n   *   --lisn-color-bg: some-dark-color;\n   *   --lisn-color-bg-t: some-dark-color-with-transparency;\n   * }\n   */\n  darkThemeClassName: \"dark-theme\",\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some key (arrows) and wheel events (where the browser reports the delta\n   * mode to be LINE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 40\n   * @category Gestures\n   */\n  deltaLineHeight: 40,\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some wheel events (where the browser reports the delta mode to be PAGE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 1600\n   * @category Gestures\n   */\n  deltaPageWidth: 1600,\n\n  /**\n   * Used to determine the effective delta in pixels for gestures triggered by\n   * some key (PageUp/PageDown/Space) and wheel events (where the browser\n   * reports the delta mode to be PAGE).\n   *\n   * Value is in pixels.\n   *\n   * @defaultValue 800\n   * @category Gestures\n   */\n  deltaPageHeight: 800,\n\n  /**\n   * Controls the debugging verbosity level. Values from 0 (none) to 10 (insane)\n   * are recognized.\n   *\n   * **Note:** Logging is not available in bundles except in the \"debug\" bundle.\n   *\n   * @defaultValue `0` except in the \"debug\" bundle where it defaults to 10\n   * @category Logging\n   */\n  verbosityLevel: 0,\n\n  /**\n   * The URL of the remote logger to connect to. LISN uses\n   * {@link https://socket.io/docs/v4/client-api/ | socket.io-client}\n   * to talk to the client and emits messages on the following namespaces:\n   *\n   * - `console.debug`\n   * - `console.log`\n   * - `console.info`\n   * - `console.warn`\n   * - `console.error`\n   *\n   * There is a simple logging server that ships with LISN, see the source\n   * code repository.\n   *\n   * You can always explicitly disable remote logging on a given page by\n   * setting `disableRemoteLog=1` query parameter in the URL.\n   *\n   * **Note:** Logging is not available in bundles (except in the `debug` bundle).\n   *\n   * @defaultValue null\n   * @category Logging\n   */\n  remoteLoggerURL: null as string | null,\n\n  /**\n   * Enable remote logging only on mobile devices.\n   *\n   * You can always disable remote logging for any page by setting\n   * `disableRemoteLog=1` URL query parameter.\n   *\n   * **Note:** Logging is not available in bundles (except in the `debug` bundle).\n   *\n   * @defaultValue false\n   * @category Logging\n   */\n  remoteLoggerOnMobileOnly: false,\n});\n\n// --------------------\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Point, Vector, AtLeastOne } from \"@lisn/globals/types\";\n\n/**\n * Round a number to the given decimal precision (default is 0).\n *\n * @param {} [numDecimal = 0]\n *\n * @category Math\n */\nexport const roundNumTo = (value: number, numDecimal = 0) => {\n  const multiplicationFactor = MH.pow(10, numDecimal);\n  return MH.round(value * multiplicationFactor) / multiplicationFactor;\n};\n\n/**\n * Returns true if the given value is a valid _finite_ number.\n *\n * @category Validation\n */\nexport const isValidNum = (value: unknown): value is number =>\n  MH.isNumber(value) && MC.NUMBER.isFinite(value);\n\n/**\n * If the given value is a valid _finite_ number, it is returned, otherwise\n * the default is returned.\n *\n * @category Math\n */\nexport const toNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = MH.isLiteralString(value) ? MH.parseFloat(value) : value;\n\n  // parseFloat will strip trailing non-numeric characters, so we check that\n  // the parsed number is equal to the string, if it was a string, using loose\n  // equality, in order to make sure the entire string was a number.\n  return isValidNum(numValue) && numValue == value ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid _finite integer_ number, it is returned,\n * otherwise the default is returned.\n *\n * @category Math\n */\nexport const toInt = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  let numValue = toNum(value, null);\n  numValue = numValue === null ? numValue : MH.floor(numValue);\n\n  // Ensure that the parsed int equaled the original by loose equality.\n  return isValidNum(numValue) && numValue == value ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid non-negative _finite_ number, it is returned,\n * otherwise the default is returned.\n *\n * @category Math\n */\nexport const toNonNegNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = toNum(value, null);\n  return numValue !== null && numValue >= 0 ? numValue : defaultValue;\n};\n\n/**\n * If the given value is a valid positive number, it is returned, otherwise the\n * default is returned.\n *\n * @category Math\n */\nexport const toPosNum = <D extends number | false | null = 0>(\n  value: unknown,\n  defaultValue: D | 0 = 0,\n): number | D => {\n  const numValue = toNum(value, null);\n  return numValue !== null && numValue > 0 ? numValue : defaultValue;\n};\n\n/**\n * Returns the given number bound by min and/or max value.\n *\n * If the value is not a valid number, then `defaultValue` is returned if given\n * (_including if it is null_), otherwise `limits.min` if given and not null,\n * otherwise `limits.max` if given and not null, or finally 0.\n *\n * If the value is outside the bounds, then:\n * - if `defaultValue` is given, `defaultValue` is returned (_including if it\n *   is null_)\n * - otherwise, the min or the max value (whichever one is violated) is\n *   returned\n *\n * @category Math\n */\nexport const toNumWithBounds = <D extends number | false | null = number>(\n  value: unknown,\n  limits: AtLeastOne<{ min: number | null; max: number | null }>,\n  defaultValue?: D,\n): number | D => {\n  const isDefaultGiven = defaultValue !== undefined;\n  const numValue = toNum(value, null);\n  const min = limits?.min ?? null;\n  const max = limits?.max ?? null;\n\n  let result: number | D;\n  if (!isValidNum(numValue)) {\n    result = isDefaultGiven ? defaultValue : (min ?? max ?? 0);\n  } else if (min !== null && numValue < min) {\n    result = isDefaultGiven ? defaultValue : min;\n  } else if (max !== null && numValue > max) {\n    result = isDefaultGiven ? defaultValue : max;\n  } else {\n    result = numValue;\n  }\n\n  return result;\n};\n\n/**\n * Returns the largest absolute value among the given ones.\n *\n * The result is always positive.\n *\n * @category Math\n */\nexport const maxAbs = (...values: number[]) =>\n  MH.max(...values.map((v) => MH.abs(v)));\n\n/**\n * Returns the smallest absolute value among the given ones.\n *\n * The result is always positive.\n *\n * @category Math\n */\nexport const minAbs = (...values: number[]) =>\n  MH.min(...values.map((v) => MH.abs(v)));\n\n/**\n * Returns the value with the largest absolute value among the given ones.\n *\n * The result can be negative.\n *\n * @category Math\n */\nexport const havingMaxAbs = (...values: number[]): number =>\n  MH.lengthOf(values)\n    ? values.sort((a, b) => MH.abs(b) - MH.abs(a))[0]\n    : -MC.INFINITY;\n\n/**\n * Returns the value with the smallest absolute value among the given ones.\n *\n * The result can be negative.\n *\n * @category Math\n */\nexport const havingMinAbs = (...values: number[]) =>\n  MH.lengthOf(values)\n    ? values.sort((a, b) => MH.abs(a) - MH.abs(b))[0]\n    : MC.INFINITY;\n\n/**\n * Returns the angle (in radians) that the vector defined by the given x, y\n * makes with the positive horizontal axis.\n *\n * The angle returned is in the range -PI to PI, not including -PI.\n *\n * @category Math\n */\nexport const hAngle = (x: number, y: number) =>\n  normalizeAngle(MC.MATH.atan2(y, x)); // ensure that -PI is transformed to +PI\n\n/**\n * Normalizes the given angle (in radians) so that it's in the range -PI to PI,\n * not including -PI.\n *\n * @category Math\n */\nexport const normalizeAngle = (a: number) => {\n  // ensure it's positive in the range 0 to 2 PI\n  while (a < 0 || a > MC.PI * 2) {\n    a += (a < 0 ? 1 : -1) * MC.PI * 2;\n  }\n\n  // then, if > PI, offset by - 2PI\n  return a > MC.PI ? a - MC.PI * 2 : a;\n};\n\n/**\n * Converts the given angle in degrees to radians.\n *\n * @category Math\n */\nexport const degToRad = (a: number) => (a * MC.PI) / 180;\n\n/**\n * Converts the given angle in radians to degrees.\n *\n * @category Math\n */\nexport const radToDeg = (a: number) => (a * 180) / MC.PI;\n\n/**\n * Returns true if the given vectors point in the same direction.\n *\n * @param {} angleDiffThreshold\n *                  Sets the threshold in degrees when comparing the angles of\n *                  two vectors. E.g. for 5 degrees threshold, directions\n *                  whose vectors are within 5 degrees of each other are\n *                  considered parallel.\n *                  It doesn't make sense for this value to be < 0 or >= 90\n *                  degrees. If it is, it's forced to be positive (absolute)\n *                  and <= 89.99.\n *\n * @category Math\n */\nexport const areParallel = (vA: Vector, vB: Vector, angleDiffThreshold = 0) => {\n  const angleA = hAngle(vA[0], vA[1]);\n  const angleB = hAngle(vB[0], vB[1]);\n  angleDiffThreshold = MH.min(89.99, MH.abs(angleDiffThreshold));\n\n  return (\n    MH.abs(normalizeAngle(angleA - angleB)) <= degToRad(angleDiffThreshold)\n  );\n};\n\n/**\n * Returns true if the given vectors point in the opposite direction.\n *\n * @param {} angleDiffThreshold\n *                  Sets the threshold in degrees when comparing the angles of\n *                  two vectors. E.g. for 5 degrees threshold, directions\n *                  whose vectors are within 175-185 degrees of each other are\n *                  considered antiparallel.\n *                  It doesn't make sense for this value to be < 0 or >= 90\n *                  degrees. If it is, it's forced to be positive (absolute)\n *                  and <= 89.99.\n *\n * @category Math\n */\nexport const areAntiParallel = (\n  vA: Vector,\n  vB: Vector,\n  angleDiffThreshold = 0,\n) => areParallel(vA, [-vB[0], -vB[1]], angleDiffThreshold);\n\n/**\n * Returns the distance between two points on the screen.\n *\n * @category Math\n */\nexport const distanceBetween = (ptA: Point, ptB: Point) =>\n  MH.sqrt(MH.pow(ptA[0] - ptB[0], 2) + MH.pow(ptA[1] - ptB[1], 2));\n\n/**\n * Returns the two roots of the quadratic equation with coefficients\n * `a`, `b` & `c`, i.e. `a * x^2 + b * x + c = 0`\n *\n * The roots may be `NaN` if the quadratic has no real solutions.\n *\n * @category Math\n */\nexport const quadraticRoots = (a: number, b: number, c: number) => {\n  const z = MH.sqrt(b * b - 4 * a * c);\n  return [(-b + z) / (2 * a), (-b - z) / (2 * a)];\n};\n\n/**\n * Returns the value that an \"easing\" quadratic function would have at the\n * given x.\n *\n * @see https://easings.net/#easeInOutQuad\n *\n * @category Math\n */\nexport const easeInOutQuad = (x: number) =>\n  x < 0.5 ? 2 * x * x : 1 - MH.pow(-2 * x + 2, 2) / 2;\n\n/**\n * Returns an array of object's keys sorted by the numeric value they hold.\n *\n * @category Math\n */\nexport const sortedKeysByVal = <T extends Record<string, number>>(\n  obj: T,\n  descending = false,\n): Array<keyof T> => {\n  if (descending) {\n    return MH.keysOf(obj).sort((x: keyof T, y: keyof T) => obj[y] - obj[x]);\n  }\n\n  return MH.keysOf(obj).sort((x: keyof T, y: keyof T) => obj[x] - obj[y]);\n};\n\n/**\n * Returns the key in the given object which holds the largest numeric value.\n *\n * If the object is empty, returns `undefined`.\n *\n * @category Math\n */\nexport const keyWithMaxVal = (\n  obj: Record<string, number>,\n): string | undefined => {\n  return sortedKeysByVal(obj).slice(-1)[0];\n};\n\n/**\n * Returns the key in the given object which holds the smallest numeric value.\n *\n * If the object is empty, returns `undefined`.\n *\n * @category Math\n */\nexport const keyWithMinVal = (\n  obj: Record<string, number>,\n): string | undefined => {\n  return sortedKeysByVal(obj).slice(0, 1)[0];\n};\n\n/**\n * Takes two integers and returns a bitmask that covers all values between\n * 1 << start and 1 << end, _including the starting and ending one_.\n *\n * If pStart > pEnd, they are reversed.\n *\n * getBitmask(start, start) always returns 1 << start\n * getBitmask(start, end) always returns same as getBitmask(end, start)\n *\n * @category Math\n */\nexport const getBitmask = (start: number, end: number): number =>\n  start > end\n    ? getBitmask(end, start)\n    : (~0 >>> (32 - end - 1 + start)) << start;\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { roundNumTo } from \"@lisn/utils/math\";\n\nexport const isTouchScreen = () =>\n  MH.hasDOM() ? matchMedia(\"(any-pointer: coarse)\").matches : false;\n\nexport const copyExistingKeys = <T extends object>(fromObj: T, toObj: T) => {\n  for (const key in toObj) {\n    if (!MH.hasOwnProp(toObj, key)) {\n      continue;\n    }\n\n    if (key in fromObj) {\n      if (MH.isNonPrimitive(fromObj[key]) && MH.isNonPrimitive(toObj[key])) {\n        copyExistingKeys(fromObj[key], toObj[key]);\n      } else {\n        toObj[key] = fromObj[key];\n      }\n    }\n  }\n};\n\n// Omits the keys in object keysToRm from obj. This is to avoid hardcording the\n// key names as a string so as to allow minifier to mangle them, and to avoid\n// using object spread.\nexport const omitKeys = <\n  O extends object,\n  R extends { [K in keyof O]?: unknown },\n>(\n  obj: O,\n  keysToRm: R,\n): Omit<O, keyof R> => {\n  const res: Partial<O> = {};\n  let key: keyof O;\n\n  for (key in obj) {\n    if (!(key in keysToRm)) {\n      res[key] = obj[key];\n    }\n  }\n\n  return res as Omit<O, keyof R>;\n};\n\n// Returns true if the two objects are equal. If values are numeric, it will\n// round to the given number of decimal places.\nexport const compareValuesIn = <T extends object>(\n  objA: T,\n  objB: T,\n  roundTo = 3,\n) => {\n  for (const key in objA) {\n    if (!MH.hasOwnProp(objA, key)) {\n      continue;\n    }\n\n    const valA = objA[key];\n    const valB = objB[key];\n\n    if (MH.isNonPrimitive(valA) && MH.isNonPrimitive(valB)) {\n      if (!compareValuesIn(valA, valB)) {\n        return false;\n      }\n    } else if (MH.isNumber(valA) && MH.isNumber(valB)) {\n      if (roundNumTo(valA, roundTo) !== roundNumTo(valB, roundTo)) {\n        return false;\n      }\n    } else if (valA !== valB) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const keyExists = <T extends object>(\n  obj: T,\n  key: string | number | symbol,\n): key is keyof T => MH.isNonPrimitive(obj) && key in obj;\n\nexport const toArrayIfSingle = <T>(value?: T | T[] | null | undefined): T[] =>\n  MH.isArray(value) ? value : !MH.isNullish(value) ? [value] : [];\n\nexport const toBoolean = (value: unknown) =>\n  value === true || value === \"true\" || value === \"\"\n    ? true\n    : MH.isNullish(value) || value === false || value === \"false\"\n      ? false\n      : null;\n\n/**\n * @deprecated\n */\nexport const toBool = toBoolean;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Size, StrRecord } from \"@lisn/globals/types\";\n\n/**\n * Formats an object as a string. It supports more meaningful formatting as\n * string for certain types rather than using the default string\n * representation.\n *\n * **NOTE:** This is not intended for serialization of data that needs to be\n * de-serialized. Only for debugging output.\n *\n * @param {} value     The value to format as string.\n * @param {} [maxLen]  Maximum length of the returned string. If not given or\n *                     is <= 0, the string is not truncated. Otherwise, if the\n *                     result is longer than maxLen, it is truncated to\n *                     `maxLen - 3` and added a suffix of \"...\".\n *                     Note that if `maxLen` is > 0 but <= 3, the result is\n *                     always \"...\"\n *\n * @category Text\n */\nexport const formatAsString = (value: unknown, maxLen?: number) => {\n  const result = maybeConvertToString(value, false);\n\n  if (!MH.isNullish(maxLen) && maxLen > 0 && MH.lengthOf(result) > maxLen) {\n    return result.slice(0, MH.max(0, maxLen - 3)) + \"...\";\n  }\n\n  return result;\n};\n\n/**\n * Join an array of values as string using separator. It uses\n * {@link formatAsString} rather than the default string representation as\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join | Array:join} would.\n *\n * @param {} separator  The separator to use to delimit each argument.\n * @param {} args       Objects or values to convert to string and join.\n *\n * @category Text\n */\nexport const joinAsString = (separator: string, ...args: unknown[]) =>\n  args.map((a) => formatAsString(a)).join(separator);\n\n/**\n * Similar to\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split | String.prototype.split}\n * except that\n * 1. `limit` is interpreted as the maximum number of splits, and the\n *   returned array contains `limit + 1` entries. Also if `limit` is given and\n *   the number of substrings is greater than the limit, all the remaining\n *   substrings are present in the final substring.\n * 2. If input is an empty string (or containing only whitespace), returns an\n *    empty array.\n *\n * @example\n * ```javascript\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 0); // -> ['foo, bar, baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 1); // -> ['foo', 'bar, baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 2); // -> ['foo', 'bar', 'baz']\n * splitOn('foo, bar, baz', RegExp(',\\\\s*'), 3); // -> ['foo', 'bar', 'baz']\n * ```\n *\n * @param {} trim  If true, entries will be trimmed for whitespace after splitting.\n *\n * @param {} limit If not given or < 0, the string will be split on every\n *                 occurrence of `separator`. Otherwise, it will be split on\n *                 the first `limit` number of occurrences of `separator`.\n *\n * @category Text\n */\nexport const splitOn = (\n  input: string,\n  separator: string | RegExp,\n  trim?: boolean,\n  limit?: number,\n) => {\n  if (!input.trim()) {\n    return [];\n  }\n\n  limit = limit ?? -1;\n\n  const output: string[] = [];\n  const addEntry = (s: string) => output.push(trim ? s.trim() : s);\n\n  while (limit--) {\n    let matchIndex = -1,\n      matchLength = 0;\n    if (MH.isLiteralString(separator)) {\n      matchIndex = input.indexOf(separator);\n      matchLength = MH.lengthOf(separator);\n    } else {\n      const match = separator.exec(input);\n      matchIndex = match?.index ?? -1;\n      matchLength = match ? MH.lengthOf(match[0]) : 0;\n    }\n\n    if (matchIndex < 0) {\n      break;\n    }\n\n    addEntry(input.slice(0, matchIndex));\n    input = input.slice(matchIndex + matchLength);\n  }\n\n  addEntry(input);\n  return output;\n};\n\n/**\n * Converts a kebab-cased-string to camelCase.\n * The result is undefined if the input string is not formatted in\n * kebab-case.\n *\n * @category Text\n */\nexport const kebabToCamelCase = MH.kebabToCamelCase;\n\n/**\n * Converts a camelCasedString to kebab-case.\n * The result is undefined if the input string is not formatted in\n * camelCase.\n *\n * @category Text\n */\nexport const camelToKebabCase = MH.camelToKebabCase;\n\n/**\n * Generates a random string of a fixed length.\n *\n * **IMPORTANT:** This is _not_ suitable for cryptographic applications.\n *\n * @param {} [nChars = 8]  The length of the returned stirng.\n *\n * @category Text\n */\nexport const randId = (nChars = 8) => {\n  const segment = () =>\n    MH.floor(100000 + MC.MATH.random() * 900000).toString(36);\n\n  let s = \"\";\n  while (MH.lengthOf(s) < nChars) {\n    s += segment();\n  }\n  return s.slice(0, nChars);\n};\n\n/**\n * Returns an array of numeric margins in pixels from the given margin string.\n * The string should contain margins in either pixels or percentage; other\n * units are not supported.\n *\n * Percentage values are converted to pixels relative to the given\n * `absoluteSize`: left/right margins relative to the width, and top/bottom\n * margins relative to the height.\n *\n * Note that for the margin property, percentages are always relative to the\n * WIDTH of the parent, so you should pass the parent width as both the width\n * and the height keys in `absoluteSize`. But for IntersectionObserver's\n * `rootMargin`, top/bottom margin is relative to the height of the root, so\n * pass the actual root size.\n *\n * @return {} [topMarginInPx, rightMarginInPx, bottomMarginInPx, leftMarginInPx]\n *\n * @category Text\n */\nexport const toMargins = (value: string, absoluteSize: Size) => {\n  const toPxValue = (strValue: string | undefined, index: number) => {\n    let margin = MH.parseFloat(strValue || \"\") || 0;\n\n    if (strValue === margin + \"%\") {\n      margin *=\n        index % 2 ? absoluteSize[MC.S_HEIGHT] : absoluteSize[MC.S_WIDTH];\n    }\n\n    return margin;\n  };\n\n  const parts = splitOn(value, \" \", true);\n  const margins: [number, number, number, number] = [\n    // top\n    toPxValue(parts[0], 0),\n    // right\n    toPxValue(parts[1] ?? parts[0], 1),\n    // bottom\n    toPxValue(parts[2] ?? parts[0], 2),\n    // left\n    toPxValue(parts[3] ?? parts[1] ?? parts[0], 3),\n  ];\n\n  return margins;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const objToStrKey = (obj: StrRecord): string =>\n  MH.stringify(flattenForSorting(obj));\n\n// --------------------\n\nconst flattenForSorting = (obj: StrRecord): unknown[] => {\n  const array = MH.isArray(obj)\n    ? obj\n    : MH.keysOf(obj)\n        .sort()\n        .map((k) => obj[k]);\n\n  return array.map((value) => {\n    if (\n      MH.isArray(value) ||\n      (MH.isNonPrimitive(value) && MH.constructorOf(value) === MC.OBJECT)\n    ) {\n      return flattenForSorting(value);\n    }\n    return value;\n  });\n};\n\nconst stringifyReplacer = (key: string, value: unknown) =>\n  key ? maybeConvertToString(value, true) : value;\n\nconst maybeConvertToString = <B extends boolean, V>(\n  value: V,\n  nested: B,\n): B extends false ? string : string | V => {\n  let result: string | V = \"\";\n\n  if (MH.isElement(value)) {\n    const classStr = MH.classList(value).toString().trim();\n\n    result = value.id\n      ? \"#\" + value.id\n      : `<${MH.tagName(value)}${classStr ? ' class=\"' + classStr + '\"' : \"\"}>`;\n\n    //\n  } else if (MH.isInstanceOf(value, Error)) {\n    /* istanbul ignore else */\n    if (\"stack\" in value && MH.isString(value.stack)) {\n      result = value.stack;\n    } else {\n      result = `Error: ${value.message}`;\n    }\n\n    //\n  } else if (MH.isArray(value)) {\n    result =\n      \"[\" +\n      value\n        .map((v) =>\n          MH.isString(v) ? MH.stringify(v) : maybeConvertToString(v, false),\n        )\n        .join(\",\") +\n      \"]\";\n\n    //\n  } else if (MH.isIterableObject(value)) {\n    result =\n      MH.typeOrClassOf(value) +\n      \"(\" +\n      maybeConvertToString(MH.arrayFrom(value), false) +\n      \")\";\n\n    //\n  } else if (MH.isNonPrimitive(value)) {\n    result = nested ? value : MH.stringify(value, stringifyReplacer);\n\n    //\n  } else {\n    // primitive\n    result = nested ? value : MC.STRING(value);\n  }\n\n  return result as B extends false ? string : string | V;\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\n\nimport { CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { toNum } from \"@lisn/utils/math\";\nimport { toBoolean } from \"@lisn/utils/misc\";\nimport { splitOn } from \"@lisn/utils/text\";\n\n/**\n * Returns true if the input is a string array or comma-separated string, whose\n * elements are valid according to the `validator` function.\n *\n * @param {} allowEmpty If `false`, then input without any entries is\n * considered _invalid_.\n *\n * @category Validation\n */\nexport const isValidStrList = <T extends string = string>(\n  value: unknown,\n  checkFn: (value: string) => value is T,\n  allowEmpty = true,\n): value is CommaSeparatedStr<T> | T[] => {\n  try {\n    const res = validateStrList(\"\", value, checkFn);\n    return allowEmpty || !MH.isNullish(res);\n  } catch (err) {\n    if (MH.isInstanceOf(err, LisnUsageError)) {\n      return false;\n    }\n    throw err;\n  }\n};\n\n/**\n * Returns an array of strings from the given list while validating each one\n * using the `checkFn` function.\n *\n * If it returns without throwing, the input is necessarily valid.\n * If the result is an empty array, it will return `null`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the input is not a string or array of strings, or if any\n *                entries do not pass `checkFn`.\n *\n * @param {} key Used in the error message thrown\n *\n * @return {} `undefined` if the input contains no non-empty values (after\n * trimming whitespace on left/right from each), otherwise a non-empty array of\n * values.\n *\n * @category Validation\n */\nexport const validateStrList = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n): T[] | undefined =>\n  MH.filterBlank(\n    toArray(value)?.map((v) =>\n      _validateString(key, v, checkFn, \"a string or a string array\"),\n    ),\n  );\n\n/**\n * Returns an array of numbers from the given list.\n *\n * If it returns without throwing, the input is necessarily valid.\n * If the result is an empty array, it will return `null`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the input is not a number or array of numbers. Numerical\n *                strings are accepted.\n *\n * @param {} key Used in the error message thrown\n *\n * @return {} `undefined` if the input contains no non-empty values (after\n * trimming whitespace on left/right from each), otherwise a non-empty array of\n * values.\n *\n * @category Validation\n */\nexport const validateNumList = (\n  key: string,\n  value: unknown,\n): number[] | undefined =>\n  MH.filterBlank(\n    toArray(value)?.map((v) =>\n      _validateNumber(key, v, \"a number or a number array\"),\n    ),\n  );\n\n/**\n * Returns a number corresponding to the supplied value, ensuring the supplied\n * value is a valid number or a string containing only a number.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @return {} `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateNumber = (key: string, value: unknown) =>\n  _validateNumber(key, value);\n\n/**\n * Returns a boolean corresponding to the given value as follows:\n *\n * - `null` and `undefined` result in `undefined`\n * - `false` and `\"false\"` result in `false`\n * - `\"\"`, `true` and `\"true\"` result in `true`\n * - other values throw an error error\n *\n * Note that an empty string is treated as `true`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is not a valid boolean or boolean string.\n *\n * @return {} `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateBoolean = (key: string, value: unknown) =>\n  _validateBoolean(key, value);\n\n/**\n * Returns a valid string from the supplied value, ensuring the supplied value\n * is a string that conforms to the given `checkFn`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @param {} checkFn      If given and the supplied value is a string, then it\n *                        is called with the value as a single argument. It\n *                        must return true if the value is valid and false\n *                        otherwise.\n *                        If it is not given, then any literal string is\n *                        accepted.\n *\n * @return {} `undefined` if the input is nullish.\n *\n * @category Validation\n */\nexport const validateString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n) => _validateString(key, value, checkFn);\n\n/**\n * Like {@link validateString} except it requires input to be given and\n * non-empty.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid or empty.\n *\n * @category Validation\n */\nexport const validateStringRequired = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n): T => {\n  const result = _validateString(key, value, checkFn);\n\n  if (MH.isEmpty(result)) {\n    throw MH.usageError(`'${key}' is required`);\n  }\n\n  return result;\n};\n\n/**\n * Returns a valid boolean or a string from the supplied value, ensuring the\n * supplied value is either a boolean or boolean string (see\n * {@link validateBoolean}), or a string that conforms to the given `checkFn`.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the value is invalid.\n *\n * @param {} stringCheckFn If given and the supplied value is a string _other\n *                         than a boolean string_, then it is called with the\n *                         value as a single argument. It must return true if\n *                         the value is valid and false otherwise.\n *                         If it is not given, then any literal string is\n *                         accepted.\n *\n * @category Validation\n */\nexport const validateBooleanOrString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  stringCheckFn?: (value: string) => value is T,\n) => _validateBooleanOrString(key, value, stringCheckFn);\n\n// --------------------\n\nconst toArray = (value: unknown): unknown[] | undefined => {\n  let result: unknown[] | null;\n  if (MH.isArray(value)) {\n    result = value;\n  } else if (MH.isIterableObject(value)) {\n    result = MH.arrayFrom(value);\n  } else if (MH.isLiteralString(value)) {\n    result = splitOn(value, \",\");\n  } else if (!MH.isNullish(value)) {\n    result = [value];\n  } else {\n    result = null;\n  }\n\n  return result\n    ? MH.filterBlank(result.map((v) => (MH.isLiteralString(v) ? v.trim() : v)))\n    : undefined;\n};\n\nconst _validateNumber = (\n  key: string,\n  value: unknown,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const numVal = toNum(value, null);\n  if (numVal === null) {\n    throw MH.usageError(`'${key}' must be ${typeDescription ?? \"a number\"}`);\n  }\n\n  return numVal;\n};\n\nconst _validateBoolean = (\n  key: string,\n  value: unknown,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const boolVal = toBoolean(value);\n  if (boolVal === null) {\n    throw MH.usageError(\n      `'${key}' must be ${typeDescription ?? '\"true\" or \"false\"'}`,\n    );\n  }\n\n  return boolVal;\n};\n\nconst _validateString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  checkFn?: (value: string) => value is T,\n  typeDescription?: string,\n): (typeof checkFn extends null | undefined ? string : T) | undefined => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  if (!MH.isLiteralString(value)) {\n    throw MH.usageError(`'${key}' must be ${typeDescription ?? \"a string\"}`);\n  } else if (checkFn && !checkFn(value)) {\n    throw MH.usageError(`Invalid value for '${key}'`);\n  }\n\n  return value as typeof checkFn extends null | undefined ? string : T;\n};\n\nconst _validateBooleanOrString = <T extends string = string>(\n  key: string,\n  value: unknown,\n  stringCheckFn?: (value: string) => value is T,\n  typeDescription?: string,\n) => {\n  if (MH.isNullish(value)) {\n    return;\n  }\n\n  const boolVal = toBoolean(value);\n  if (boolVal !== null) {\n    return boolVal;\n  }\n\n  if (!MH.isLiteralString(value)) {\n    throw MH.usageError(\n      `'${key}' must be ${typeDescription ?? \"a boolean or string\"}`,\n    );\n  }\n\n  return _validateString(key, value, stringCheckFn);\n};\n","/**\n * @module Modules/BitSpaces\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getBitmask } from \"@lisn/utils/math\";\n\nexport type BitPropName = string;\n\n/**\n * A union of all property names in the space.\n */\nexport type BitSpaceKey<S> = S extends BitSpace<infer T> ? T : never;\n\n/**\n * {@link BitSpace} represents a single set of mutually exclusive (or\n * orthogonal) properties.\n *\n * Each property has a numeric value equal to 1 bit-shifted by a certain number\n * of bits.\n *\n * Created using {@link BitSpaces.create}\n *\n * @interface\n */\nexport type BitSpace<T extends BitPropName> = {\n  /**\n   * The starting bit of the space. It's 0 for the first space created in a\n   * given set of {@link BitSpaces}.\n   */\n  start: number;\n\n  /**\n   * The ending bit of the space. It's always equal to\n   * start + (# of properties in space) - 1\n   */\n  end: number;\n\n  /**\n   * A bitmask of all values in the space.\n   */\n  bitmask: number;\n\n  /**\n   * Returns true if the given name is one of the properties in the space.\n   * It is case-sensitive.\n   */\n  has: (p: string) => p is T;\n\n  /**\n   * Takes the names of two properties within the space and returns a bitmask\n   * that covers all values between them _including the starting and ending\n   * one_.*\n   *\n   * If pStart > pEnd, they are reversed.\n   *\n   * * The numeric values of the properties are guaranteed to be in the same\n   *   order, increasing in value, as the keys passed to the `BitSpaces.create`,\n   *   function.\n   *\n   * @param {} pStart  The name of the property that holds the start value.\n   *                   If null the bitmask will cover from the lowest property.\n   * @param {} pEnd    The name of the property that holds the end cut-off\n   *                   value for the bitmask. The bitmask with _not_ include\n   *                   pEnd's value.\n   *                   If null the bitmask will cover to the highest property,\n   *                   _including_.\n   *\n   * @returns {} Returns a non-0 bitmask containing all values in the space\n   *             between the given ones.\n   *             Returns 0 if one or both of the given properties do not exist\n   *             in the space.\n   */\n  bitmaskFor: (pStart?: T | null, pEnd?: T | null) => number;\n\n  /**\n   * Returns the name of the property with the given value, or null if the\n   * value does not correspond to one of the space properties.\n   */\n  nameOf: (val: number) => T | null;\n\n  /**\n   * Holds properties whose numeric values are non-overlapping binary values,\n   * suitable for bitmasking.\n   *\n   * The given properties are set under the \"bit\" key in the object and hold\n   * the numeric value.\n   *\n   * @example\n   * ```javascript\n   * const space = new BitSpaces().create(\"up\", \"down\", \"left\", \"right\");\n   *\n   * // {\n   * //     bit: {\n   * //         up:    1, // at bit 0, i.e. 1 << 0\n   * //         down:  2, // at bit 1, i.e. 1 << 1\n   * //         left:  4, // at bit 2, i.e. 1 << 2\n   * //         right: 8, // at bit 3, i.e. 1 << 3\n   * //     },\n   * //     start:      0,\n   * //     end:        3,\n   * //     bitmask:    15, // 1 << 0 | 1 << 1 | 1 << 2 | 1 << 3\n   * //     has:        (p) => p === \"up\" || p === \"down\" || p === \"left\" || p === \"right\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 1 ? \"up\" : v === 2 ? \"down\" : v === 4 ...\n   * // }\n   *\n   * space.bitmaskFor(); // => space.bitmask (15)\n   * space.bitmaskFor(\"left\"); // => space.bit.left | space.bit.right (12)\n   * space.bitmaskFor(null, \"down\"); // => space.bit.up | space.bit.down (3)\n   * ```\n   */\n  bit: {\n    [key in T]: number;\n  };\n};\n\n/**\n * {@link BitSpaces} represents one or more related {@link BitSpace}s whose bit\n * values will not overlap.\n */\nexport class BitSpaces {\n  /**\n   * Creates and returns a new BitSpace that is bit shifted to the left as\n   * many bits as the ending bit of the previous space created by this\n   * instances, so that each new space created is non-overlapping with previous\n   * ones.\n   *\n   * The numeric values of the properties are guaranteed to be in the same\n   * order, increasing in value, as the keys passed to the function.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the number of bits in the space will exceed 32.\n   *\n   * @example\n   * ```javascript\n   * const spaces = new BitSpaces();\n   * const spaceA = spaces.create(\"up\", \"down\");\n   *\n   * // spaces.nBits   => 2\n   * // spaces.bitmask => 3\n   * //\n   * // spaceA:\n   * // {\n   * //     bit: {\n   * //         up:     1, // at bit 0, i.e. 1 << 0\n   * //         down:   2, // at bit 1, i.e. 1 << 1\n   * //     },\n   * //     start:      0,\n   * //     end:        1,\n   * //     bitmask:    3, // 1 << 0 | 1 << 1\n   * //     has:        (p) => p === \"up\" || p === \"down\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 1 ? \"up\" : v === 2 ? \"down\" : null\n   * // }\n   *\n   * const spaceB = spaces.create(\"left\", \"right\");\n   *\n   * // spaces.nBits   => 4\n   * // spaces.bitmask => 15\n   * //\n   * // spaceB:\n   * // {\n   * //     bit: {\n   * //         left:   4, // at bit 2, i.e. 1 << 2\n   * //         right:  8, // at bit 3, i.e. 1 << 3\n   * //     },\n   * //     start:      2,\n   * //     end:        3,\n   * //     bitmask:    12, // 1 << 2 | 1 << 3\n   * //     has:        (p) => p === \"left\" || p === \"right\",\n   * //     bitmaskFor: (pStart, pEnd) => ...\n   * //     nameOf:     (v) => v === 4 ? \"left\" : v === 8 ? \"right\" : null\n   * // }\n   *\n   * ```\n   */\n  readonly create: <T extends BitPropName>(\n    ...propNames: readonly T[]\n  ) => BitSpace<T>;\n\n  /**\n   * Returns the number of bits all created spaces span, i.e. the end bit of\n   * the one + 1.\n   */\n  readonly nBits!: number;\n\n  /**\n   * Returns a bitmask containing all values in all created spaces.\n   */\n  readonly bitmask!: number;\n\n  constructor() {\n    const counter = newCounter();\n\n    this.create = (...propNames) => newBitSpace(counter, propNames);\n    MH.defineProperty(this, \"nBits\", { get: () => counter._nBits });\n    MH.defineProperty(this, \"bitmask\", { get: () => counter._bitmask });\n  }\n}\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newBitSpaces = () => new BitSpaces();\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const createBitSpace = <T extends BitPropName>(\n  spaces: BitSpaces,\n  ...propNames: readonly T[]\n): BitSpace<T> => spaces.create(...propNames);\n\n// ----------------------------------------\n\ntype BitCounter = {\n  _nBits: number;\n  _bitmask: number;\n};\n\nconst newCounter = (): BitCounter => ({\n  _nBits: 0,\n  _bitmask: 0,\n});\n\nconst newBitSpace = <T extends BitPropName>(\n  counter: BitCounter,\n  propNames: readonly T[],\n): BitSpace<T> => {\n  const start = counter._nBits;\n  const end = start + MH.lengthOf(propNames) - 1;\n  if (end >= 31) {\n    throw MH.usageError(\"BitSpaces overflow\");\n  }\n\n  const bitmask = getBitmask(start, end);\n  const space: BitSpace<T> = {\n    bit: {},\n    start,\n    end,\n    bitmask,\n\n    has: (p) =>\n      MH.isString(p) &&\n      p in space.bit &&\n      MH.isNumber((space.bit as Record<string, unknown>)[p]),\n\n    bitmaskFor: (pStart, pEnd) => {\n      if (\n        (!MH.isEmpty(pStart) && !space.has(pStart)) ||\n        (!MH.isEmpty(pEnd) && !space.has(pEnd))\n      ) {\n        return 0;\n      }\n\n      const thisStart = !MH.isEmpty(pStart)\n        ? MH.log2(space.bit[pStart])\n        : start;\n      const thisEnd = !MH.isEmpty(pEnd) ? MH.log2(space.bit[pEnd]) : end;\n\n      return getBitmask(thisStart, thisEnd);\n    },\n\n    nameOf: (val) => propNames[MH.log2(val) - start] ?? null,\n  } as BitSpace<T>;\n\n  for (const name of propNames) {\n    MH.defineProperty(space.bit, name, {\n      value: 1 << counter._nBits++,\n      enumerable: true,\n    });\n  }\n\n  counter._bitmask |= bitmask;\n\n  return space;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { MutationCategory } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newBitSpaces, createBitSpace } from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid category.\n *\n * @category Validation\n */\nexport const isValidMutationCategory = (\n  category: string,\n): category is MutationCategory => DOM_CATEGORIES_SPACE.has(category);\n\n/**\n * Returns true if the given string or array is a list of valid categories.\n *\n * @category Validation\n */\nexport const isValidMutationCategoryList = (categories: string | string[]) =>\n  isValidStrList(categories, isValidMutationCategory, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const DOM_CATEGORIES_SPACE = createBitSpace<MutationCategory>(\n  newBitSpaces(),\n  MC.S_ADDED,\n  MC.S_REMOVED,\n  MC.S_ATTRIBUTE,\n);\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\n/**\n * @category Tasks\n */\nexport type SchedulerPostTaskOptions = {\n  delay?: number;\n  priority?: TaskPriority;\n  signal?: AbortSignal;\n};\n\n/**\n * @category Tasks\n */\nexport type Scheduler = {\n  postTask<T, P extends readonly unknown[] | []>(\n    callback: (...params: P) => T,\n    options?: SchedulerPostTaskOptions,\n    ...args: P\n  ): Promise<T>;\n};\n\n/**\n * @category Tasks\n */\nexport type TaskPriority = \"user-blocking\" | \"user-visible\" | \"background\";\n\n/* eslint-disable-next-line no-var */\ndeclare var scheduler: Scheduler;\n\n/**\n * Schedules a task with high priority to be executed as soon as possible.\n *\n * It uses {@link https://developer.mozilla.org/en-US/docs/Web/API/Scheduler/postTask | Scheduler:postTask}\n * if available, otherwise falls back to\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MessageChannel | MessageChannel}.\n *\n * @category Tasks\n */\nexport const scheduleHighPriorityTask = (task: () => void) => {\n  if (typeof scheduler !== \"undefined\") {\n    scheduler.postTask(task, {\n      priority: \"user-blocking\",\n    });\n  } else {\n    // Fallback to MessageChannel\n    const channel = new MessageChannel();\n    channel.port1.onmessage = () => {\n      channel.port1.close();\n      task();\n    };\n    channel.port2.postMessage(\"\");\n  }\n};\n\n/**\n * Returns a wrapper around the given handler that is debounced by the given\n * debounce window.\n *\n * @category Tasks\n */\nexport const getDebouncedHandler = <Args extends unknown[]>(\n  debounceWindow: number,\n  handler: (...args: Args) => void,\n) => {\n  if (!debounceWindow) {\n    return handler;\n  }\n\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  let lastArgs: Args;\n\n  return (...args: Args) => {\n    lastArgs = args;\n\n    if (timer === null) {\n      timer = MH.setTimer(async () => {\n        await handler(...lastArgs);\n        timer = null;\n      }, debounceWindow);\n    }\n  };\n};\n\n/**\n * Returns a promise that resolves at least the given number of delay (in\n * milliseconds) later. Uses `setTimeout`.\n *\n * @category Tasks\n */\nexport const waitForDelay = (delay?: number) =>\n  MH.newPromise<void>((resolve) => {\n    MH.setTimer(resolve, delay);\n  });\n","/**\n * @module Modules/Callback\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getDebouncedHandler } from \"@lisn/utils/tasks\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * @typeParam Args  See {@link Callback}\n */\nexport type CallbackHandler<Args extends unknown[] = []> = (\n  ...args: Args\n) => CallbackReturnType | Promise<CallbackReturnType>;\n\nexport type CallbackReturnType =\n  | typeof Callback.KEEP\n  | typeof Callback.REMOVE\n  | void;\n\n/**\n * For minification optimization. Exposed through Callback.wrap.\n *\n * @ignore\n * @internal\n */\nexport const wrapCallback = <Args extends unknown[] = []>(\n  handlerOrCallback: CallbackHandler<Args> | Callback<Args>,\n  debounceWindow = 0,\n): Callback<Args> => {\n  const isFunction = MH.isFunction(handlerOrCallback);\n  let isRemoved = () => false;\n\n  if (isFunction) {\n    // check if it's an invoke method\n    const callback = callablesMap.get(handlerOrCallback);\n    if (callback) {\n      return wrapCallback(callback);\n    }\n  } else {\n    isRemoved = handlerOrCallback.isRemoved;\n  }\n\n  const handler: CallbackHandler<Args> = isFunction\n    ? handlerOrCallback\n    : (...args: Args) => handlerOrCallback.invoke(...args);\n\n  const wrapper = new Callback<Args>(\n    getDebouncedHandler(debounceWindow, (...args: Args) => {\n      if (!isRemoved()) {\n        return handler(...args);\n      }\n    }),\n  );\n\n  if (!isFunction) {\n    handlerOrCallback.onRemove(wrapper.remove);\n  }\n\n  return wrapper;\n};\n\n/**\n * {@link Callback} wraps user-supplied callbacks. Supports\n * - removing a callback either when calling {@link remove} or if the user\n *   handler returns {@link Callback.REMOVE}\n * - calling custom {@link onRemove} hooks\n * - debouncing (via {@link wrap})\n * - awaiting on an asynchronous handler and ensuring that the handler does not\n *  run concurrently to itself, i.e. subsequent {@link invoke}s will be queued\n *\n * @typeParam Args  The type of arguments that the callback expects.\n */\nexport class Callback<Args extends unknown[] = []> {\n  /**\n   * Possible return value for the handler.\n   *\n   * Do not do anything. Same as not retuning anything from the function.\n   */\n  static readonly KEEP: unique symbol = MC.SYMBOL(\n    \"KEEP\",\n  ) as typeof Callback.KEEP;\n\n  /**\n   * Possible return value for the handler.\n   *\n   * Will remove this callback.\n   */\n  static readonly REMOVE: unique symbol = MC.SYMBOL(\n    \"REMOVE\",\n  ) as typeof Callback.REMOVE;\n\n  /**\n   * Call the handler with the given arguments.\n   *\n   * If the handler is asynchronous, it awaits on it. Furthermore, calls will\n   * always wait for previous calls to this handler to complete first, i.e. it\n   * never runs concurrently to itself. If you need multiple calls to the async\n   * handler to run concurrently, then wrap it in a non-async function that\n   * does not await it.\n   *\n   * The returned promise is rejected in two cases:\n   * - If the callback throws an error or returns a rejected Promise.\n   * - If the callback is removed _after_ you call {@link invoke} but before the\n   *   handler is actually called (while it's waiting in the queue to be called)\n   *   In this case, the rejection reason is {@link Callback.REMOVE}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the callback is already removed.\n   */\n  readonly invoke: (...args: Args) => Promise<void>;\n\n  /**\n   * Mark the callback as removed and call the registered {@link onRemove} hooks.\n   *\n   * Future attempts to call it will result in\n   * {@link Errors.LisnUsageError | LisnUsageError}.\n   */\n  readonly remove: () => void;\n\n  /**\n   * Returns true if the callback has been removed and cannot be called again.\n   */\n  readonly isRemoved: () => boolean;\n\n  /**\n   * Registers the given function to be called when the callback is removed.\n   *\n   * You can call {@link onRemove} multiple times to register multiple hooks.\n   */\n  readonly onRemove: (fn: () => void) => void;\n\n  /**\n   * Wraps the given handler or callback as a callback, optionally debounced by\n   * the given debounce window.\n   *\n   * If the argument is already a callback _or an invoke method of a callback_,\n   * then the wrapper will call that callback and return the same value as it.\n   * It will also set up the returned wrapper callback so that it is removed\n   * when the original (given) callback is removed. However, removing the\n   * returned wrapper callback will _not_ cause the original callback (being\n   * wrapped) to be removed. If you want to do this, then do\n   * `wrapper.onRemove(wrapped.remove)`.\n   *\n   * Note that if the argument is a callback that's already debounced by a\n   * _larger_ window, then `debounceWindow` will have no effect.\n   *\n   * @param {} debounceWindow  If non-0, the callback will be called at most\n   *                           every `debounceWindow` ms. The arguments it will\n   *                           be called with will be the last arguments the\n   *                           wrapper was called with.\n   */\n  static readonly wrap = wrapCallback;\n\n  /**\n   * @param {} handler     The actual function to call. This should return one of\n   *                       the known {@link CallbackReturnType} values.\n   */\n  constructor(handler: CallbackHandler<Args>) {\n    const logger = debug\n      ? new debug.Logger({ name: \"Callback\", logAtCreation: handler })\n      : null;\n\n    let isRemoved = false;\n    const id = MC.SYMBOL();\n\n    const onRemove = MH.newSet<() => void>();\n\n    this.isRemoved = () => isRemoved;\n\n    this.remove = () => {\n      if (!isRemoved) {\n        debug: logger?.debug8(\"Removing\");\n        isRemoved = true;\n\n        for (const rmFn of onRemove) {\n          rmFn();\n        }\n\n        CallbackScheduler._clear(id);\n      }\n    };\n\n    this.onRemove = (fn) => onRemove.add(fn);\n\n    this.invoke = (...args) =>\n      MH.newPromise((resolve, reject) => {\n        debug: logger?.debug8(\"Calling with\", args);\n        if (isRemoved) {\n          reject(MH.usageError(\"Callback has been removed\"));\n          return;\n        }\n\n        CallbackScheduler._push(\n          id,\n          async () => {\n            let result;\n            try {\n              result = await handler(...args);\n            } catch (err) {\n              reject(err);\n            }\n\n            if (result === Callback.REMOVE) {\n              this.remove();\n            }\n\n            resolve();\n          },\n          reject,\n        );\n      });\n\n    callablesMap.set(this.invoke, this);\n  }\n}\n\n// ----------------------------------------\n\ntype CallbackSchedulerTask = () => Promise<void>;\ntype CallbackSchedulerQueueItem = {\n  _task: CallbackSchedulerTask;\n  _running: boolean;\n  _onRemove: (reason: typeof Callback.REMOVE) => void;\n};\n\ntype CallableCallback<Args extends unknown[] = []> = (...args: Args) => void;\n\nconst callablesMap = MH.newWeakMap<CallableCallback, Callback>();\n\nconst CallbackScheduler = (() => {\n  const queues = MH.newMap<symbol, CallbackSchedulerQueueItem[]>();\n\n  const flush = async (queue: CallbackSchedulerQueueItem[]) => {\n    // So that callbacks are always called asynchronously for consistency,\n    // await here before calling 1st\n    await null;\n    while (MH.lengthOf(queue)) {\n      // shouldn't throw anything as Callback must catch errors\n      queue[0]._running = true;\n      await queue[0]._task();\n\n      // only remove when done\n      queue.shift();\n    }\n  };\n\n  return {\n    _clear: (id: symbol) => {\n      const queue = queues.get(id);\n      if (queue) {\n        let item: CallbackSchedulerQueueItem | undefined;\n        while ((item = queue.shift())) {\n          if (!item._running) {\n            item._onRemove(Callback.REMOVE);\n          }\n        }\n\n        MH.deleteKey(queues, id);\n      }\n    },\n\n    _push: (id: symbol, task: CallbackSchedulerTask, onRemove: () => void) => {\n      let queue = queues.get(id);\n      if (!queue) {\n        queue = [];\n        queues.set(id, queue);\n      }\n\n      queue.push({ _task: task, _onRemove: onRemove, _running: false });\n      if (MH.lengthOf(queue) === 1) {\n        flush(queue);\n      }\n    },\n  };\n})();\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LogFunction } from \"@lisn/globals/types\";\n\nimport { joinAsString } from \"@lisn/utils/text\";\n\nimport { Callback } from \"@lisn/modules/callback\";\n\n/**\n * Like `console.info` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logInfo: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleInfo(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.warn` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logWarn: LogFunction = (...args) => {\n  if (!isMessageSeen(args)) {\n    MH.consoleWarn(MC.LOG_PREFIX, ...args);\n  }\n};\n\n/**\n * Like `console.error` except if the string representation of the given\n * arguments has already been logged, it does nothing.\n *\n * @category Logging\n */\nexport const logError: LogFunction = (...args) => {\n  if (\n    (MH.lengthOf(args) > 1 || args[0] !== Callback.REMOVE) &&\n    !isMessageSeen(args)\n  ) {\n    MH.consoleError(MC.LOG_PREFIX, ...args);\n  }\n};\n\nconst discardMessages = MH.newSet<string>();\nconst isMessageSeen = (args: unknown[]) => {\n  const msg = joinAsString(\" \", ...args);\n  const isSeen = discardMessages.has(msg);\n  discardMessages.add(msg);\n  return isSeen;\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Preventing layout trashing\n *\n * {@link waitForMeasureTime} allows you to schedule tasks that read or\n * \"measure\", the DOM, for example getting computed styles, taking the\n * `offsetWidth` or the `scrollTop` of an element, etc... anything that _would_\n * force a layout if it runs after the layout has been invalidated by a\n * \"mutation\".\n *\n * See https://gist.github.com/paulirish/5d52fb081b3570c81e3 for a list of\n * operations that should be run on a valid layout to avoid forced layouts.\n *\n * {@link waitForMutateTime} allows you to schedule tasks that invalidate the\n * DOM layout by making changes to the style, inserting or removing elements,\n * etc.\n *\n * These ensure that:\n * - All mutation tasks that would invalidate the style run together before the\n *   next repaint.\n * - All measurement tasks that need a valid style will run as soon as possible\n *   after the next repaint.\n * - If a mutation task is scheduled by another mutation task, it will run in\n *   the same batch.\n * - If a measurement task is scheduled by either a mutation or another\n *   measurement task, it will run in the same batch.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logError } from \"@lisn/utils/log\";\nimport { scheduleHighPriorityTask } from \"@lisn/utils/tasks\";\n\n/**\n * Returns a Promise that is resolved before the next repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForMutateTime = () =>\n  MH.newPromise<void>((resolve) => {\n    scheduleDOMTask(scheduledDOMMutations, resolve);\n  });\n\n/**\n * Returns a Promise that is resolved as soon as possible after the next\n * repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForMeasureTime = () =>\n  MH.newPromise<void>((resolve) => {\n    scheduleDOMTask(scheduledDOMMeasurements, resolve);\n  });\n\n/**\n * Returns a Promise that is resolved before the repaint that follows the next\n * repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForSubsequentMutateTime = () =>\n  waitForMutateTime().then(waitForMeasureTime).then(waitForMutateTime);\n\n/**\n * Returns a Promise that is resolved as soon as possible after the repaint\n * that follows the next repaint.\n *\n * @category DOM: Preventing layout trashing\n */\nexport const waitForSubsequentMeasureTime = () =>\n  waitForMeasureTime().then(waitForMutateTime).then(waitForMeasureTime);\n\n// ----------------------------------------\n\ntype TaskResolver = () => void;\ntype DOMTaskQueue = TaskResolver[];\n\nconst scheduledDOMMeasurements: DOMTaskQueue = [];\nconst scheduledDOMMutations: DOMTaskQueue = [];\nlet hasScheduledDOMTasks = false;\n\nconst scheduleDOMTask = (queue: DOMTaskQueue, resolve: TaskResolver) => {\n  queue.push(resolve);\n  if (!hasScheduledDOMTasks) {\n    hasScheduledDOMTasks = true;\n    MH.onAnimationFrame(runAllDOMTasks);\n  }\n};\n\nconst runAllDOMTasks = async () => {\n  // We suspend (await null) after each queue to ensure that microtasks that\n  // have been added by await waitFor* or waitFor*().then run before the next\n  // queue, so that if they schedule more measurements and/or mutations, they\n  // can be flushed now, in the same batch.\n\n  // We're inside an animation frame. Run all mutation tasks now.\n  while (MH.lengthOf(scheduledDOMMutations)) {\n    runDOMTaskQueue(scheduledDOMMutations);\n    // wait for tasks awaiting on the resolved promises, then check queue again\n    await null;\n  }\n\n  // The measurement queue is now empty => scheduling measurements after\n  // this point will result in rescheduling both queues again in the next\n  // frame.\n  //\n  // Schedule the measurement tasks as soon as possible, after the upcoming\n  // paint. Use a macro task with as high priority as possible.\n  scheduleHighPriorityTask(async () => {\n    while (MH.lengthOf(scheduledDOMMeasurements)) {\n      runDOMTaskQueue(scheduledDOMMeasurements);\n      // wait for tasks awaiting on the resolved promises, then check queue again\n      await null;\n    }\n\n    if (MH.lengthOf(scheduledDOMMutations)) {\n      // There have been mutations added. Schedule another flush.\n      MH.onAnimationFrame(runAllDOMTasks);\n    } else {\n      hasScheduledDOMTasks = false;\n    }\n  });\n};\n\nconst runDOMTaskQueue = (queue: DOMTaskQueue) => {\n  let resolve: TaskResolver | undefined;\n  while ((resolve = queue.shift())) {\n    try {\n      resolve();\n    } catch (err) /* istanbul ignore next */ {\n      logError(err);\n    }\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement } from \"@lisn/globals/types\";\n\n/**\n * Returns all the child elements of the given element that are not `script` or\n * `style` tags.\n *\n * @category DOM: Querying\n */\nexport const getVisibleContentChildren = (el: Element) =>\n  MH.filter([...MH.childrenOf(el)], (e) => isVisibleContentTag(MH.tagName(e)));\n\n/**\n * Returns whether the given tag is _not_ `script` or `style`. Comparison is\n * case insensitive.\n *\n * @category DOM: Querying\n */\nexport const isVisibleContentTag = (tagName: string) =>\n  !MH.includes([\"script\", \"style\"], MH.toLowerCase(tagName));\n\n/**\n * Returns whether the given tag name has by default an inline display.\n * Comparison is case insensitive.\n *\n * @category DOM: Querying\n */\nexport const isInlineTag = (tagName: string) =>\n  inlineTags.has(tagName.toLowerCase());\n\n/**\n * Returns whether the given element is as {@link DOMElement}.\n *\n * @category DOM: Querying\n */\nexport const isDOMElement = (target: unknown): target is DOMElement =>\n  MH.isHTMLElement(target) ||\n  MH.isInstanceOf(target, SVGElement) ||\n  (typeof MathMLElement !== \"undefined\" &&\n    MH.isInstanceOf(target, MathMLElement));\n\n// --------------------\n\nconst inlineTags = MH.newSet([\n  \"a\",\n  \"abbr\",\n  \"acronym\",\n  \"b\",\n  \"bdi\",\n  \"bdo\",\n  \"big\",\n  \"button\",\n  \"cite\",\n  \"code\",\n  \"data\",\n  \"dfn\",\n  \"em\",\n  \"i\",\n  \"img\",\n  \"input\",\n  \"kbd\",\n  \"label\",\n  \"mark\",\n  \"map\",\n  \"object\",\n  \"output\",\n  \"q\",\n  \"rp\",\n  \"rt\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"select\",\n  \"small\",\n  \"span\",\n  \"strong\",\n  \"sub\",\n  \"sup\",\n  \"textarea\",\n  \"time\",\n  \"tt\",\n  \"u\",\n  \"var\",\n]);\n","/**\n * @module Utils\n *\n * @categoryDescription CSS: Altering\n * These functions transition an element from one CSS class to another, but\n * could lead to forced layout if not scheduled using {@link waitForMutateTime}.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n *\n * @categoryDescription CSS: Altering (optimized)\n * These functions transition an element from one CSS class to another in an\n * optimized way using {@link waitForMutateTime} and so are asynchronous.\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, the original one\n * is cancelled. See {@link transitionElement} for an example.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { DOMElement, FlexDirection } from \"@lisn/globals/types\";\n\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n  waitForSubsequentMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isDOMElement } from \"@lisn/utils/dom-query\";\nimport { isValidNum, roundNumTo } from \"@lisn/utils/math\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { camelToKebabCase, splitOn } from \"@lisn/utils/text\";\n\n/**\n * Removes the given `fromCls` class and adds the given `toCls` class to the\n * element.\n *\n * Unlike {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace | DOMTokenList:replace},\n * this will always add `toCls` even if `fromCls` isn't in the element's class list.\n *\n * @returns {} True if there was a change made (class removed or added),\n *             false otherwise.\n *\n * @category CSS: Altering\n */\nexport const transitionElementNow = (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n) => {\n  cancelCSSTransitions(element, fromCls, toCls);\n\n  // Avoid triggering MutationObserver unnecessarily.\n  let didChange = false;\n  if (hasClass(element, fromCls)) {\n    didChange = true;\n    removeClassesNow(element, fromCls);\n  }\n\n  if (!hasClass(element, toCls)) {\n    addClassesNow(element, toCls);\n    didChange = true;\n  }\n\n  return didChange;\n};\n\n/**\n * Like {@link transitionElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay, and it finally awaits for the effective style's\n * transition-duration.\n *\n * If a delay is supplied, then the transition is \"scheduled\" and if the\n * opposite transition is executed before the scheduled one, this one is\n * cancelled.\n *\n * @example\n *\n * - {@link showElement} with delay of 100 schedules `lisn-hide` -> `lisn-show`\n *   in 100ms\n * - then if {@link hideElementNow} is called, or a scheduled\n *   {@link hideElement} completes  before that timer runs out, this call to\n *   {@link showElement} aborts\n *\n * ```javascript\n * hideElement(someElement, 10);\n * // this will be aborted in 10ms when the scheduled hideElement above\n * // completes\n * showElement(someElement, 100);\n * ```\n *\n * ```javascript\n * // this will be aborted in 10ms when the hideElement that will be scheduled\n * // below completes\n * showElement(someElement, 100);\n * hideElement(someElement, 10);\n * ```\n *\n * ```javascript\n * // this will be aborted immediately by hideElementNow that runs straight\n * // afterwards\n * showElement(someElement, 100);\n * hideElementNow(someElement);\n * ```\n *\n * ```javascript\n * hideElementNow(someElement);\n * // this will NOT be aborted because hideElementNow has completed already\n * showElement(someElement, 100);\n * ```\n *\n * @category CSS: Altering (optimized)\n */\nexport const transitionElement = async (\n  element: Element,\n  fromCls: string,\n  toCls: string,\n  delay = 0,\n) => {\n  const thisTransition = scheduleCSSTransition(element, toCls);\n\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForMutateTime();\n  if (thisTransition._isCancelled()) {\n    // it has been overridden by a later transition\n    return false;\n  }\n\n  const didChange = transitionElementNow(element, fromCls, toCls);\n  thisTransition._finish();\n\n  if (!didChange) {\n    return false;\n  }\n\n  // Await for the transition duration so that caller awaiting on us knows when\n  // it's complete.\n  const transitionDuration = await getMaxTransitionDuration(element);\n  if (transitionDuration) {\n    await waitForDelay(transitionDuration);\n  }\n\n  return true;\n};\n\n/**\n * Transitions an element from class `lisn-undisplay` (which applies `display:\n * none`) to `lisn-display` (no style associated with this).\n *\n * The difference between this and simply removing the `lisn-undisplay` class\n * is that previously scheduled transitions to `lisn-undisplay` will be\n * cancelled.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const displayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY);\n\n/**\n * Like {@link displayElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const displayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_UNDISPLAY, MC.PREFIX_DISPLAY, delay);\n\n/**\n * The opposite of {@link displayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const undisplayElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY);\n\n/**\n * Like {@link undisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const undisplayElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_DISPLAY, MC.PREFIX_UNDISPLAY, delay);\n\n/**\n * Transitions an element from class `lisn-hide` (which makes the element\n * hidden) to `lisn-show` (which shows it). These classes have CSS\n * transitions applied so the element is faded into and out of view.\n *\n * @see {@link transitionElementNow}.\n *\n * @category CSS: Altering\n */\nexport const showElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW);\n\n/**\n * Like {@link showElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const showElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_HIDE, MC.PREFIX_SHOW, delay);\n\n/**\n * The opposite of {@link showElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const hideElementNow = (element: Element) =>\n  transitionElementNow(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE);\n\n/**\n * Like {@link hideElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const hideElement = (element: Element, delay = 0) =>\n  transitionElement(element, MC.PREFIX_SHOW, MC.PREFIX_HIDE, delay);\n\n/**\n * If {@link isElementUndisplayed}, it will {@link displayElementNow},\n * otherwise it will {@link undisplayElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleDisplayElementNow = (element: Element) =>\n  isElementUndisplayed(element)\n    ? displayElementNow(element)\n    : undisplayElementNow(element);\n\n/**\n * Like {@link toggleDisplayElementNow} except it will {@link waitForMutateTime},\n * and optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleDisplayElement = (element: Element, delay = 0) =>\n  isElementUndisplayed(element)\n    ? displayElement(element, delay)\n    : undisplayElement(element, delay);\n\n/**\n * If {@link isElementHidden}, it will {@link showElementNow}, otherwise\n * {@link hideElementNow}.\n *\n * @see {@link transitionElementNow}\n *\n * @category CSS: Altering\n */\nexport const toggleShowElementNow = (element: Element) =>\n  isElementHidden(element) ? showElementNow(element) : hideElementNow(element);\n\n/**\n * Like {@link toggleShowElementNow} except it will {@link waitForMutateTime}, and\n * optionally a delay.\n *\n * @see {@link transitionElement}\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleShowElement = (element: Element, delay = 0) =>\n  isElementHidden(element)\n    ? showElement(element, delay)\n    : hideElement(element, delay);\n\n/**\n * Returns true if the element's class list contains `lisn-hide`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementHidden = (element: Element) =>\n  hasClass(element, MC.PREFIX_HIDE);\n\n/**\n * Returns true if the element's class list contains `lisn-undisplay`.\n *\n * @category CSS: Altering (optimized)\n */\nexport const isElementUndisplayed = (element: Element) =>\n  hasClass(element, MC.PREFIX_UNDISPLAY);\n\n/**\n * Returns true if the element's class list contains the given class.\n *\n * @category CSS: Altering (optimized)\n */\nexport const hasClass = (el: Element, className: string) =>\n  MH.classList(el).contains(className);\n\n/**\n * Adds the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const addClassesNow = (el: Element, ...classNames: string[]) =>\n  MH.classList(el).add(...classNames);\n\n/**\n * Like {@link addClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const addClasses = (el: Element, ...classNames: string[]) =>\n  waitForMutateTime().then(() => addClassesNow(el, ...classNames));\n\n/**\n * Removes the given classes to the element.\n *\n * @category CSS: Altering\n */\nexport const removeClassesNow = (el: Element, ...classNames: string[]) =>\n  MH.classList(el).remove(...classNames);\n\n/**\n * Like {@link removeClassesNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const removeClasses = (el: Element, ...classNames: string[]) =>\n  waitForMutateTime().then(() => removeClassesNow(el, ...classNames));\n\n/**\n * Toggles the given class on the element.\n *\n * @param {} force See {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle | DOMTokenList:toggle}\n *\n * @category CSS: Altering\n */\nexport const toggleClassNow = (\n  el: Element,\n  className: string,\n  force?: boolean,\n) => MH.classList(el).toggle(className, force);\n\n/**\n * Like {@link toggleClassNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const toggleClass = (el: Element, className: string, force?: boolean) =>\n  waitForMutateTime().then(() => toggleClassNow(el, className, force));\n\n// For *Data: to avoid unnecessary type checking that ensures element is\n// HTMLElement or SVGElement, use getAttribute instead of dataset.\n\n/**\n * Returns the value of the given data attribute. The name of the attribute\n * must _not_ start with `data`. It can be in either camelCase or kebab-case,\n * it is converted as needed.\n *\n * @category CSS: Altering (optimized)\n */\nexport const getData = (el: Element, name: string) =>\n  MH.getAttr(el, MH.prefixData(name));\n\n/**\n * Returns the value of the given data attribute as a boolean. Its value is\n * expected to be either blank or \"true\" (which result in `true`), or \"false\"\n * (which results in `false`).\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering (optimized)\n */\nexport const getBooleanData = (el: Element, name: string) => {\n  const value = getData(el, name);\n  return value !== null && value !== \"false\";\n};\n\n/**\n * @ignore\n * @deprecated\n */\nexport const getBoolData = getBooleanData;\n\n/**\n * Sets the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const setDataNow = (el: Element, name: string, value: string) =>\n  MH.setAttr(el, MH.prefixData(name), value);\n\n/**\n * Like {@link setDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const setData = (el: Element, name: string, value: string) =>\n  waitForMutateTime().then(() => setDataNow(el, name, value));\n\n/**\n * Sets the given data attribute with value \"true\" (default) or \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const setBooleanDataNow = (el: Element, name: string, value = true) =>\n  MH.setAttr(el, MH.prefixData(name), value + \"\");\n\n/**\n * @ignore\n * @deprecated\n */\nexport const setBoolDataNow = setBooleanDataNow;\n\n/**\n * Like {@link setBooleanDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const setBooleanData = (el: Element, name: string, value = true) =>\n  waitForMutateTime().then(() => setBooleanDataNow(el, name, value));\n\n/**\n * @ignore\n * @deprecated\n */\nexport const setBoolData = setBooleanData;\n\n/**\n * Sets the given data attribute with value \"false\".\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const unsetBooleanDataNow = (el: Element, name: string) =>\n  MH.unsetAttr(el, MH.prefixData(name));\n\n/**\n * @ignore\n * @deprecated\n */\nexport const unsetBoolDataNow = unsetBooleanDataNow;\n\n/**\n * Like {@link unsetBooleanDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const unsetBooleanData = (el: Element, name: string) =>\n  waitForMutateTime().then(() => unsetBooleanDataNow(el, name));\n\n/**\n * @ignore\n * @deprecated\n */\nexport const unsetBoolData = unsetBooleanData;\n\n/**\n * Deletes the given data attribute.\n *\n * The name of the attribute must _not_ start with `data`. It can be in either\n * camelCase or kebab-case, it is converted as needed.\n *\n * @category CSS: Altering\n */\nexport const delDataNow = (el: Element, name: string) =>\n  MH.delAttr(el, MH.prefixData(name));\n\n/**\n * Like {@link delDataNow} except it will {@link waitForMutateTime}.\n *\n * @category CSS: Altering (optimized)\n */\nexport const delData = (el: Element, name: string) =>\n  waitForMutateTime().then(() => delDataNow(el, name));\n\n/**\n * Returns the value of the given property from the computed style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getComputedStylePropNow = (element: Element, prop: string) =>\n  getComputedStyle(element).getPropertyValue(prop);\n\n/**\n * Like {@link getComputedStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getComputedStyleProp = (element: Element, prop: string) =>\n  waitForMeasureTime().then(() => getComputedStylePropNow(element, prop));\n\n/**\n * Returns the value of the given property from the inline style of the\n * element.\n *\n * @category DOM: Altering\n */\nexport const getStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.getPropertyValue(prop);\n\n/**\n * Like {@link getStylePropNow} except it will {@link waitForMeasureTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const getStyleProp = (element: Element, prop: string) =>\n  waitForMeasureTime().then(() => getStylePropNow(element, prop));\n\n/**\n * Sets the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const setStylePropNow = (\n  element: Element,\n  prop: string,\n  value: string,\n) => (element as DOMElement).style?.setProperty(prop, value);\n\n/**\n * Like {@link setStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const setStyleProp = (element: Element, prop: string, value: string) =>\n  waitForMutateTime().then(() => setStylePropNow(element, prop, value));\n\n/**\n * Deletes the given property on the inline style of the element.\n *\n * @category DOM: Altering\n */\nexport const delStylePropNow = (element: Element, prop: string) =>\n  (element as DOMElement).style?.removeProperty(prop);\n\n/**\n * Like {@link delStylePropNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const delStyleProp = (element: Element, prop: string) =>\n  waitForMutateTime().then(() => delStylePropNow(element, prop));\n\n/**\n * Returns the flex direction of the given element **if it has a flex layout**.\n *\n * @returns {} `null` if the element does not have a flex layout.\n */\nexport const getFlexDirection = async (\n  element: Element,\n): Promise<FlexDirection | null> => {\n  const displayStyle = await getComputedStyleProp(element, \"display\");\n  if (!displayStyle.includes(\"flex\")) {\n    return null;\n  }\n\n  return (await getComputedStyleProp(\n    element,\n    \"flex-direction\",\n  )) as FlexDirection;\n};\n\n/**\n * Returns the flex direction of the given element's parent **if it has a flex\n * layout**.\n *\n * @returns {} `null` if the element's parent does not have a flex layout.\n */\nexport const getParentFlexDirection = async (\n  element: Element,\n): Promise<FlexDirection | null> => {\n  const parent = element.parentElement;\n  return parent ? getFlexDirection(parent) : null;\n};\n\n/**\n * Returns true if the given element has a flex layout. If direction is given,\n * then it also needs to match.\n */\nexport const isFlex = async (element: Element, direction?: FlexDirection) => {\n  const flexDirection = await getFlexDirection(element);\n\n  if (direction) {\n    return direction === flexDirection;\n  }\n\n  return flexDirection !== null;\n};\n\n/**\n * Returns true if the given element's parent has a flex layout. If direction is\n * given, then it also needs to match.\n */\nexport const isFlexChild = async (\n  element: Element,\n  direction?: FlexDirection,\n) => {\n  const parent = element.parentElement;\n  return parent ? isFlex(parent, direction) : false;\n};\n\n/**\n * In milliseconds.\n *\n * @ignore\n * @internal\n */\nexport const getMaxTransitionDuration = async (element: Element) => {\n  const propVal = await getComputedStyleProp(element, \"transition-duration\");\n\n  return MH.max(\n    ...splitOn(propVal, \",\", true).map((strValue) => {\n      let duration = MH.parseFloat(strValue) || 0;\n\n      if (strValue === duration + \"s\") {\n        duration *= 1000;\n      }\n\n      return duration;\n    }),\n  );\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const disableInitialTransition = async (element: Element, delay = 0) => {\n  await addClasses(element, MC.PREFIX_TRANSITION_DISABLE);\n  if (delay) {\n    await waitForDelay(delay);\n  }\n\n  await waitForSubsequentMutateTime();\n  removeClassesNow(element, MC.PREFIX_TRANSITION_DISABLE);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const setHasModal = () => setBooleanData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const delHasModal = () => delData(MH.getBody(), PREFIX_HAS_MODAL);\n\n/**\n * @ignore\n * @internal\n */\nexport const copyStyle = async (\n  fromElement: Element,\n  toElement: Element,\n  includeComputedProps?: string[],\n) => {\n  if (!isDOMElement(fromElement) || !isDOMElement(toElement)) {\n    return;\n  }\n\n  await waitForMeasureTime();\n  const props: Record<string, string> = {};\n\n  if (includeComputedProps) {\n    for (const prop of includeComputedProps) {\n      props[prop] = getComputedStylePropNow(fromElement, prop);\n    }\n  }\n\n  const style = fromElement.style; // only inline styles\n  for (const prop in style) {\n    const value = style.getPropertyValue(prop);\n    if (value) {\n      props[prop] = value;\n    }\n  }\n\n  for (const prop in props) {\n    setStyleProp(toElement, prop, props[prop]);\n  }\n\n  addClasses(toElement, ...MH.classList(fromElement));\n};\n\n/**\n * If the props keys are in camelCase they are converted to kebab-case\n *\n * If a value is null or undefined, the property is deleted.\n *\n * @ignore\n * @internal\n */\nexport const setNumericStyleProps = async (\n  element: Element,\n  props: CssNumericProps,\n  options: {\n    _prefix?: string;\n    _units?: string;\n    _numDecimal?: number;\n    _transformFn?: (prop: string, currVal: number, newVal: number) => number;\n  } = {},\n) => {\n  if (!isDOMElement(element)) {\n    return;\n  }\n\n  const transformFn = options._transformFn;\n\n  const varPrefix = MH.prefixCssJsVar(options?._prefix || \"\");\n  for (const prop in props) {\n    const cssPropSuffix = camelToKebabCase(prop);\n    const varName = `${varPrefix}${cssPropSuffix}`;\n\n    let value: number | null;\n\n    if (!isValidNum(props[prop])) {\n      value = null;\n    } else {\n      value = props[prop];\n      const thisNumDecimal =\n        options?._numDecimal ?? (value > 0 && value < 1 ? 2 : 0);\n\n      if (transformFn) {\n        const currValue = MH.parseFloat(await getStyleProp(element, varName));\n\n        value = transformFn(prop, currValue || 0, value);\n      }\n\n      value = roundNumTo(value, thisNumDecimal);\n    }\n\n    if (value === null) {\n      delStyleProp(element, varName);\n    } else {\n      setStyleProp(element, varName, value + (options?._units || \"\"));\n    }\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\ntype CssNumericProps = Record<string, number | undefined | null>;\n\n// ----------------------------------------\n\ntype CSSTransition = {\n  _cancel: () => undefined;\n  _finish: () => undefined;\n  _isCancelled: () => boolean;\n};\n\nconst PREFIX_HAS_MODAL = MH.prefixName(\"has-modal\");\n\nconst scheduledCSSTransitions = MH.newWeakMap<\n  Element,\n  Record<string, CSSTransition>\n>();\n\nconst cancelCSSTransitions = (element: Element, ...toClasses: string[]) => {\n  const scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    return;\n  }\n\n  for (const toCls of toClasses) {\n    const scheduledTransition = scheduledTransitions[toCls];\n    if (scheduledTransition) {\n      scheduledTransition._cancel();\n    }\n  }\n};\n\nconst scheduleCSSTransition = (element: Element, toCls: string) => {\n  let scheduledTransitions = scheduledCSSTransitions.get(element);\n  if (!scheduledTransitions) {\n    scheduledTransitions = {};\n    scheduledCSSTransitions.set(element, scheduledTransitions);\n  }\n\n  let isCancelled = false;\n  scheduledTransitions[toCls] = {\n    _cancel: () => {\n      isCancelled = true;\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _finish: () => {\n      MH.deleteObjKey(scheduledTransitions, toCls);\n    },\n    _isCancelled: () => {\n      return isCancelled;\n    },\n  };\n\n  return scheduledTransitions[toCls];\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Altering\n * These functions alter the DOM tree, but could lead to forced layout if not\n * scheduled using {@link waitForMutateTime}.\n *\n * @categoryDescription DOM: Altering (optimized)\n * These functions alter the DOM tree in an optimized way using\n * {@link waitForMutateTime} and so are asynchronous.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  hideElement,\n  hasClass,\n  addClassesNow,\n  setDataNow,\n  setBooleanData,\n} from \"@lisn/utils/css-alter\";\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { randId } from \"@lisn/utils/text\";\n\n/**\n * Wraps the element in the given wrapper, or a newly created element if not given.\n *\n * @param {} [options.wrapper]\n *              If it's an element, it is used as the wrapper. If it's a string\n *              tag name, then a new element with this tag is created as the\n *              wrapper. If not given, then `div` is used if the element to be\n *              wrapped has an block-display tag, or otherwise `span` (if the\n *              element to be wrapped has an inline tag name).\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n * @returns {} The wrapper element that was either passed in options or created.\n *\n * @category DOM: Altering\n */\nexport const wrapElementNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: wrapper,\n    });\n\n    ignoreMove(wrapper, {\n      to: MH.parentOf(element),\n    });\n  }\n\n  element.replaceWith(wrapper);\n  wrapper.append(element);\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapElementNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapElement = async (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => waitForMutateTime().then(() => wrapElementNow(element, options));\n\n/**\n * Wraps the element's children in the given wrapper, or a newly created element\n * if not given.\n *\n * @see {@link wrapElementNow}.\n *\n * @category DOM: Altering\n */\nexport const wrapChildrenNow = (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => {\n  const wrapper = createWrapperFor(element, options?.wrapper);\n\n  moveChildrenNow(element, wrapper, { ignoreMove: true });\n  moveElementNow(wrapper, {\n    to: element,\n    ignoreMove: true,\n  });\n\n  return wrapper;\n};\n\n/**\n * Like {@link wrapChildrenNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const wrapChildren = async (\n  element: Element,\n  options?: {\n    wrapper?: HTMLElement | keyof HTMLElementTagNameMap;\n    ignoreMove?: boolean;\n  },\n) => waitForMutateTime().then(() => wrapChildrenNow(element, options));\n\n/**\n * Replace an element with another one.\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const replaceElementNow = (\n  element: Element,\n  newElement: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    ignoreMove(\n      // remove element\n      element,\n      { from: MH.parentOf(element) },\n    );\n\n    ignoreMove(\n      // move newElement to element's current parent\n      newElement,\n      { from: MH.parentOf(newElement), to: MH.parentOf(element) },\n    );\n  }\n\n  element.replaceWith(newElement);\n};\n\n/**\n * Like {@link replaceElementNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const replaceElement = async (\n  element: Element,\n  newElement: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) =>\n  waitForMutateTime().then(() =>\n    replaceElementNow(element, newElement, options),\n  );\n\n/**\n * Replace an element with another one.\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const swapElementsNow = (\n  elementA: Element,\n  elementB: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  const temp = MH.createElement(\"div\");\n  replaceElementNow(elementA, temp, options);\n  replaceElementNow(elementB, elementA, options);\n  replaceElementNow(temp, elementB, options);\n};\n\n/**\n * Like {@link swapElementsNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const swapElements = async (\n  elementA: Element,\n  elementB: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) =>\n  waitForMutateTime().then(() => swapElementsNow(elementA, elementB, options));\n\n/**\n * Move an element's children to a new element\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              moving the children (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveChildrenNow = (\n  oldParent: Element,\n  newParent: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  if (options?.ignoreMove === true) {\n    for (const child of MH.childrenOf(oldParent)) {\n      ignoreMove(child, {\n        from: oldParent,\n        to: newParent,\n      });\n    }\n  }\n\n  newParent.append(...MH.childrenOf(oldParent));\n};\n\n/**\n * Like {@link moveChildrenNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveChildren = async (\n  oldParent: Element,\n  newParent: Element,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) =>\n  waitForMutateTime().then(() =>\n    moveChildrenNow(oldParent, newParent, options),\n  );\n\n/**\n * Moves an element to a new position.\n *\n * @param {} [options.to]         The new parent or sibling (depending on\n *                                `options.position`). If not given, the\n *                                element is removed from the DOM.\n * @param {} [options.position]   - append (default): append to `options.to`\n *                                - prepend: prepend to `options.to`\n *                                - before: insert before `options.to`\n *                                - after: insert after `options.to`\n * @param {} [options.ignoreMove] If true, the DOM watcher instances will\n *                                ignore the operation of moving the element\n *                                (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering\n */\nexport const moveElementNow = (\n  element: Element,\n  options?: {\n    to?: Element;\n    position?: \"append\" | \"prepend\" | \"before\" | \"after\";\n    ignoreMove?: boolean;\n  },\n) => {\n  let parentEl = options?.to || null;\n  const position = options?.position || \"append\";\n  if (position === \"before\" || position === \"after\") {\n    parentEl = MH.parentOf(options?.to);\n  }\n\n  if (options?.ignoreMove === true) {\n    ignoreMove(element, {\n      from: MH.parentOf(element),\n      to: parentEl,\n    });\n  }\n\n  if (options?.to) {\n    options.to[position](element);\n  } else {\n    MH.remove(element);\n  }\n};\n\n/**\n * Like {@link moveElementNow} except it will {@link waitForMutateTime}.\n *\n * @category DOM: Altering (optimized)\n */\nexport const moveElement = async (\n  element: Element,\n  options?: {\n    to?: Element;\n    position?: \"append\" | \"prepend\" | \"before\" | \"after\";\n    ignoreMove?: boolean;\n  },\n) => waitForMutateTime().then(() => moveElementNow(element, options));\n\n/**\n * It will {@link hideElement} and then remove it from the DOM.\n *\n * @param {} [options.ignoreMove]\n *              If true, the DOM watcher instances will ignore the operation of\n *              replacing the element (so as to not trigger relevant callbacks).\n *\n * @category DOM: Altering (optimized)\n */\nexport const hideAndRemoveElement = async (\n  element: Element,\n  delay = 0,\n  options?: {\n    ignoreMove?: boolean;\n  },\n) => {\n  await hideElement(element, delay);\n  moveElementNow(element, options);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getOrAssignID = (element: Element, prefix = \"\") => {\n  let domID = element.id;\n  if (!domID) {\n    domID = `${prefix}-${randId()}`;\n    element.id = domID;\n  }\n\n  return domID;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const wrapScrollingContent = async (element: Element) => {\n  await waitForMutateTime();\n\n  let wrapper: HTMLElement;\n  const firstChild = MH.childrenOf(element)[0];\n  if (\n    MH.lengthOf(MH.childrenOf(element)) === 1 &&\n    MH.isHTMLElement(firstChild) &&\n    hasClass(firstChild, PREFIX_CONTENT_WRAPPER)\n  ) {\n    // Another concurrent call has just wrapped it\n    wrapper = firstChild;\n  } else {\n    wrapper = wrapChildrenNow(element, { ignoreMove: true });\n    addClassesNow(wrapper, PREFIX_CONTENT_WRAPPER);\n  }\n\n  return wrapper;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const cloneElement = <E extends Element>(element: E) => {\n  const clone = element.cloneNode(true) as E;\n  setBooleanData(clone, MH.prefixName(\"clone\"));\n  return clone;\n};\n\n/**\n * Creates a dummy hidden clone that's got animation and transitions disabled\n * and absolute position, wrapped in a wrapper (of size 0) and inserts it just\n * before the `insertBefore` element (or if not given, the original element),\n * so that the hidden clone overlaps the actual element's regular\n * (pre-transformed) position.\n *\n * It clears the ID of the clone.\n *\n * Returns the clone.\n *\n * @ignore\n * @internal\n */\nexport const insertGhostCloneNow = <E extends Element>(\n  element: E,\n  insertBefore: Element | null = null,\n) => {\n  const clone = cloneElement(element);\n  clone.id = \"\";\n\n  addClassesNow(\n    clone,\n    MC.PREFIX_GHOST,\n    MC.PREFIX_TRANSITION_DISABLE,\n    MC.PREFIX_ANIMATE_DISABLE,\n  );\n\n  const wrapper = wrapElementNow(clone);\n  addClassesNow(wrapper, MC.PREFIX_WRAPPER);\n\n  moveElementNow(wrapper, {\n    to: insertBefore || element,\n    position: \"before\",\n    ignoreMove: true,\n  });\n\n  return { _wrapper: wrapper, _clone: clone };\n};\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const insertGhostClone = <E extends Element>(\n  element: E,\n  insertBefore: Element | null = null,\n) => waitForMutateTime().then(() => insertGhostCloneNow(element, insertBefore));\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via DOMWatcher\n */\nexport const ignoreMove = (\n  target: Element,\n  options: { from?: Element | null; to?: Element | null },\n) =>\n  recordsToSkipOnce.set(target, {\n    from: options.from || null,\n    to: options.to || null,\n  });\n\n/**\n * @ignore\n * @internal\n */\nexport const getIgnoreMove = (\n  target: Element,\n): { from: Element | null; to: Element | null } | null =>\n  recordsToSkipOnce.get(target) || null;\n\n/**\n * @ignore\n * @internal\n */\nexport const clearIgnoreMove = (target: Element) => {\n  // We should not clear the entry the first time the operation is observed\n  // (when we return true here), because there may be multiple DOMWatcher\n  // instances that will observe it and need to query it. Instead do it shortly.\n  MH.setTimer(() => {\n    MH.deleteKey(recordsToSkipOnce, target);\n  }, 100);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const insertArrow = (\n  target: Element,\n  direction: \"up\" | \"down\" | \"left\" | \"right\",\n  position: \"prepend\" | \"append\" | \"before\" | \"after\" = \"append\",\n  tag = \"span\",\n) => {\n  const arrow = MH.createElement(tag);\n  addClassesNow(arrow, MH.prefixName(MC.S_ARROW));\n  setDataNow(arrow, MH.prefixName(\"direction\"), direction);\n  moveElement(arrow, { to: target, position, ignoreMove: true });\n  return arrow;\n};\n\n// ----------------------------------------\n\nconst PREFIX_CONTENT_WRAPPER = MH.prefixName(\"content-wrapper\");\n\nconst recordsToSkipOnce = MH.newMap<\n  /* target being moved */ Element,\n  { from: Element | null; to: Element | null }\n>();\n\nconst createWrapperFor = (\n  element: Element,\n  wrapper: HTMLElement | keyof HTMLElementTagNameMap | undefined,\n) => {\n  if (MH.isElement(wrapper)) {\n    return wrapper;\n  }\n\n  let tag = wrapper;\n  if (!tag) {\n    if (isInlineTag(MH.tagName(element))) {\n      tag = \"span\";\n    } else {\n      tag = \"div\";\n    }\n  }\n\n  return MH.createElement(tag);\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { NonNullableReturnType } from \"@lisn/globals/types\";\n\n/**\n * Returns a Promise that is resolved when the given `checkFn` function returns\n * a value other than `null` or `undefined`.\n *\n * The Promise is resolved with `checkFn`'s return value.\n *\n * The function is called initially, and then every time there are changes to\n * the DOM children. Uses\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * @param {} timeout If given, then if no such element is present after this\n *                    many milliseconds, the promise will resolve to `null`.\n *\n * @category DOM: Events\n */\nexport const waitForElement = <\n  F extends () => unknown,\n  T extends number | undefined = undefined,\n>(\n  checkFn: F,\n  timeout?: number,\n) =>\n  MH.newPromise<\n    T extends undefined\n      ? NonNullableReturnType<F>\n      : null | NonNullableReturnType<F>\n  >((resolve) => {\n    const callFn = () => {\n      const result = checkFn();\n      if (!MH.isNullish(result)) {\n        resolve(result as NonNullableReturnType<F>);\n        return true; // done\n      }\n      return false;\n    };\n\n    if (callFn()) {\n      return; // resolved already\n    }\n\n    if (!MH.isNullish(timeout)) {\n      MH.setTimer(() => {\n        resolve(\n          null as T extends undefined\n            ? NonNullableReturnType<F>\n            : null | NonNullableReturnType<F>,\n        );\n        observer.disconnect();\n      }, timeout);\n    }\n\n    const observer = MH.newMutationObserver(() => {\n      if (callFn()) {\n        observer.disconnect();\n      }\n    });\n\n    observer.observe(MH.getDocElement(), {\n      childList: true,\n      subtree: true,\n    });\n  });\n\n/**\n * Returns a Promise that is resolved when the given `checkFn` function returns\n * a value other than `null` or `undefined` or the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * becomes \"interactive\".\n *\n * It always calls the given `checkFn` first before examining the `readyState`.\n *\n * If the `readyState` became interactive before the element was found, the\n * Promise resolves to `null`. Otherwise the Promise is resolved with `checkFn`'s\n * return value.\n *\n * The function is called initially, and then every time there are changes to\n * the DOM children. Uses\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * @category DOM: Events\n */\nexport const waitForElementOrInteractive = <F extends () => unknown>(\n  checkFn: F,\n) =>\n  MH.newPromise<NonNullableReturnType<F> | null>((resolve) => {\n    let isInteractive = false;\n    // Check element first, then readyState. The callback to waitForElement is\n    // run synchronously first time, so isInteractive will be false and checkFn\n    // will run.\n    waitForElement(() => isInteractive || checkFn()).then((res) => {\n      if (!isInteractive) {\n        resolve(res as NonNullableReturnType<F>);\n      } // else already resolved to null\n    });\n\n    waitForInteractive().then(() => {\n      isInteractive = true;\n      resolve(null);\n    });\n  });\n\n/**\n * Returns a Promise that is resolved when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"interactive\" (or if it's already \"interactive\" or \"complete\", the\n * Promise is fulfilled immediately).\n *\n * @category DOM: Events\n */\nexport const waitForInteractive = () =>\n  MH.newPromise<void>((resolve) => {\n    const readyState = MH.getReadyState();\n    if (readyState === INTERACTIVE || readyState === COMPLETE) {\n      resolve();\n      return;\n    }\n\n    MH.getDoc().addEventListener(\"DOMContentLoaded\", () => resolve());\n  });\n\n/**\n * Returns a Promise that is resolved when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"complete\" (or if it's already \"complete\", the Promise is fulfilled\n * immediately).\n *\n * @category DOM: Events\n */\nexport const waitForComplete = () =>\n  MH.newPromise<void>((resolve) => {\n    if (MH.getReadyState() === COMPLETE) {\n      resolve();\n      return;\n    }\n\n    MH.getDoc().addEventListener(\"readystatechange\", () => {\n      if (MH.getReadyState() === COMPLETE) {\n        resolve();\n      }\n    });\n  });\n\n/**\n * Returns a Promise that is resolved either when the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState | Document:readyState}\n * is \"complete\" or the `readyState` is \"interactive\" and at least\n * {@link settings.pageLoadTimeout} milliseconds have passed (if > 0) since it\n * became \"interactive\".\n *\n * @category DOM: Events\n */\nexport const waitForPageReady = () =>\n  MH.newPromise<void>((resolve) => {\n    if (pageIsReady) {\n      resolve();\n      return;\n    }\n\n    return waitForInteractive().then(() => {\n      // Setup a listener for the complete state but wait at most\n      // <pageLoadTimeout> (if specified)\n      let timer: ReturnType<typeof setTimeout> | null = null;\n\n      const dispatchReady = () => {\n        pageIsReady = true;\n        if (timer) {\n          MH.clearTimer(timer);\n          timer = null;\n        }\n        resolve();\n      };\n\n      if (settings.pageLoadTimeout > 0) {\n        timer = MH.setTimer(() => {\n          dispatchReady();\n        }, settings.pageLoadTimeout);\n      }\n\n      waitForComplete().then(dispatchReady);\n    });\n  });\n\n/**\n * Returns true if the page is \"ready\". See {@link waitForPageReady}.\n *\n * @category DOM: Events\n */\nexport const isPageReady = () => pageIsReady;\n\n// --------------------\n\nconst COMPLETE = \"complete\";\nconst INTERACTIVE = \"interactive\";\n\nlet pageIsReady = false;\n\nif (!MH.hasDOM()) {\n  pageIsReady = true;\n} else {\n  waitForPageReady(); // ensure pageIsReady is set even if waitForPageReady is not called\n}\n","/**\n * @module Modules/XMap\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { MapBase } from \"@lisn/globals/types\";\n\nexport type DefaultValueGetter<K, V> = (key: K) => V;\nexport type IteratorCallback<K, V> = (\n  value: V,\n  key: K,\n  map: XMap<K, V>,\n) => void;\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXMap = <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  new XMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXMapGetter =\n  <K, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXMap(getDefaultV);\n\n/**\n * For minification optimization\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMap = <K extends WeakKey, V>(\n  getDefaultV: DefaultValueGetter<K, V>,\n) => new XWeakMap(getDefaultV);\n\n/**\n * For minification optimization. Exposed through {@link XMap.newXWeakMapGetter}.\n *\n * @ignore\n * @internal\n */\nexport const newXWeakMapGetter =\n  <K extends WeakKey, V>(getDefaultV: DefaultValueGetter<K, V>) =>\n  () =>\n    newXWeakMap(getDefaultV);\n\nexport abstract class XMapBase<K, V> {\n  /**\n   * Returns the value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly get: (key: K) => V | undefined;\n\n  /**\n   * Like {@link get} except that if the key is not found in the map, then it\n   * will set and return a default value by calling `getDefaultV` passed to the\n   * constructor.\n   */\n  readonly sGet: (key: K) => V;\n\n  /**\n   * Sets a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly set: (key: K, value: V) => void;\n\n  /**\n   * Deletes a value at the given key in the {@link XMap} or {@link XWeakMap}.\n   */\n  readonly delete: (key: K) => void;\n\n  /**\n   * Deletes empty keys in the {@link XMap} or {@link XWeakMap} starting at the\n   * final nested path and checking the level above after deletion.\n   *\n   * A key is considered empty if it's value is undefined or it's an empty Map,\n   * Set, Array, etc (anything with size or length property equal to 0).\n   */\n  readonly prune: (sk: K, ...rest: unknown[]) => void;\n\n  /**\n   * Returns true if the {@link XMap} or {@link XWeakMap} contains the given key.\n   */\n  readonly has: (key: K) => boolean;\n\n  protected constructor(\n    root: MapBase<K, V>,\n    getDefaultV: DefaultValueGetter<K, V>,\n  ) {\n    this.get = (key) => root.get(key);\n    this.set = (key, value) => root.set(key, value);\n    this.delete = (key) => MH.deleteKey(root, key);\n    this.has = (key) => root.has(key);\n\n    this.sGet = (key) => {\n      let result = root.get(key);\n      if (result === undefined) {\n        result = getDefaultV(key);\n        root.set(key, result);\n      }\n      return result;\n    };\n\n    this.prune = (sk, ...rest) => {\n      const value = root.get(sk);\n      if (value instanceof XMapBase && MH.lengthOf(rest)) {\n        value.prune(rest[0], ...rest.slice(1));\n      }\n\n      if (\n        value === undefined ||\n        (MH.isIterableObject(value) &&\n          !(\n            (\"size\" in value && value.size) ||\n            (\"length\" in value && value.length)\n          ))\n      ) {\n        MH.deleteKey(root, sk);\n      }\n    };\n  }\n}\n\n/**\n * {@link XMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map | Map},\n * except that it supports automatically creating missing entries with\n * {@link sGet} according to a default value getter function.\n *\n * @typeParam K  The type of the keys the map holds.\n * @typeParam V  The type of the values the map holds.\n */\nexport class XMap<K, V> extends XMapBase<K, V> implements Iterable<[K, V]> {\n  /**\n   * Returns the number of entries in the {@link XMap}.\n   */\n  readonly size!: number;\n\n  /**\n   * Deletes all entries in the {@link XMap}.\n   */\n  readonly clear: () => void;\n\n  /**\n   * Returns an iterator over the {@link XMap} entries.\n   */\n  readonly entries: () => MapIterator<[K, V]>;\n\n  /**\n   * Returns an iterator over the {@link XMap} keys.\n   */\n  readonly keys: () => MapIterator<K>;\n\n  /**\n   * Returns an iterator over the {@link XMap} values.\n   */\n  readonly values: () => MapIterator<V>;\n\n  readonly [Symbol.iterator]!: () => IterableIterator<[K, V]>;\n\n  /**\n   * Returns a function that when called returns a new {@link XMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XMap}s.\n   */\n  static readonly newXMapGetter = newXMapGetter;\n\n  /**\n   * @param {} getDefaultV  This function is called each time\n   *                        {@link sGet} is called with a non-existent\n   *                        key and must return a value that is then set for\n   *                        that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newMap<K, V>();\n    super(root, getDefaultV);\n\n    MH.defineProperty(this, \"size\", { get: () => root.size });\n    this.clear = () => root.clear();\n    this.entries = () => root.entries();\n    this.keys = () => root.keys();\n    this.values = () => root.values();\n    this[MC.SYMBOL.iterator] = () => root[MC.SYMBOL.iterator]();\n  }\n}\n\n/**\n * {@link XWeakMap} is like\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap | WeakMap},\n * except that it supports automatically creating missing entries with\n * with {@link sGet} according to a default value getter function.\n *\n * @typeParam K  The type of the keys the map holds.\n * @typeParam V  The type of the values the map holds.\n */\nexport class XWeakMap<K extends WeakKey, V> extends XMapBase<K, V> {\n  /**\n   * Returns a function that when called returns a new {@link XWeakMap}.\n   *\n   * You can pass this to the constructor of an {@link XMap} or an\n   * {@link XWeakMap}, whose values are {@link XWeakMap}s.\n   */\n  static readonly newXWeakMapGetter = newXWeakMapGetter;\n\n  /**\n   * @param {} getDefaultV  This function is called each time\n   *                        {@link sGet} is called with a non-existent\n   *                        key and must return a value that is then set for\n   *                        that key and returned.\n   */\n  constructor(getDefaultV: DefaultValueGetter<K, V>) {\n    const root = MH.newWeakMap<K, V>();\n    super(root, getDefaultV);\n  }\n}\n","/**\n * @module Watchers/DOMWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  MutationCategory,\n  CommaSeparatedStr,\n  AtLeastOne,\n} from \"@lisn/globals/types\";\n\nimport { DOM_CATEGORIES_SPACE } from \"@lisn/utils/dom\";\nimport {\n  getIgnoreMove,\n  clearIgnoreMove,\n  ignoreMove,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link DOMWatcher} listens for changes do the DOM tree. It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver | MutationObserver}.\n *\n * It manages registered callbacks globally and reuses MutationObservers for\n * more efficient performance.\n *\n * Each instance of DOMWatcher manages up to two MutationObservers: one\n * for `childList` changes and one for attribute changes, and it disconnects\n * them when there are no active callbacks for the relevant type.\n *\n * `characterData` and changes to base\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Node | Node}s\n * (non-{@link https://developer.mozilla.org/en-US/docs/Web/API/Element | Element})\n * are not supported.\n */\nexport class DOMWatcher {\n  /**\n   * Call the given handler whenever there's a matching mutation within this\n   * DOMWatcher's {@link DOMWatcherConfig.root | root}.\n   *\n   * If {@link OnMutationOptions.skipInitial | options.skipInitial} is `false`\n   * (default), _and_ {@link OnMutationOptions.selector | options.selector} is\n   * given, _and_ {@link OnMutationOptions.categories | options.categories}\n   * includes \"added\", the handler is also called (almost) immediately with all\n   * existing elements matching the selector under this DOMWatcher's\n   * {@link DOMWatcherConfig.root | root}.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times, even if\n   * the options differ. If the handler has already been added, it is removed\n   * and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are not valid.\n   */\n  readonly onMutation: (\n    handler: OnMutationHandler,\n    options?: OnMutationOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offMutation: (handler: OnMutationHandler) => void;\n\n  /**\n   * Ignore an upcoming moving/adding/removing of an element.\n   *\n   * The operation must complete within the next cycle, by the time\n   * MutationObserver calls us.\n   *\n   * Use this to prevent this instance of DOMWatcher from calling any callbacks\n   * that listen for relevant changes as a result of this operation, to prevent\n   * loops for example.\n   *\n   * **IMPORTANT:**\n   *\n   * Ignoring moving of an element from a parent _inside_ this DOMWatcher's\n   * root to another parent that's _outside_ the root, will work as expected,\n   * even though the \"adding to the new parent\" mutation will not be observed.\n   * This is because the element's current parent at the time of the mutation\n   * callback can be examined.\n   *\n   * However if you want to ignore moving of an element _from a parent outside\n   * this DOMWatcher's root_ you need to specify from: null since the \"removal\n   * from the old parent\" mutation would not be observed and there's no way to\n   * examine it's previous parent at the time the \"adding to the new parent\"\n   * mutation is observed.\n   *\n   * For this reason, setting `options.from` to be an element that's not under\n   * the root is internally treated the same as `options.from: null`.\n   */\n  readonly ignoreMove: (target: Element, options: MoveOptions) => void;\n\n  /**\n   * Creates a new instance of DOMWatcher with the given\n   * {@link DOMWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: DOMWatcherConfig = {}) {\n    return new DOMWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of DOMWatcher with the given\n   * {@link DOMWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: DOMWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    const root = myConfig._root === MH.getBody() ? null : myConfig._root;\n    let instance = instances.get(root)?.get(configStrKey);\n    if (!instance) {\n      instance = new DOMWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: DOMWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"DOMWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"DOMWatcher\", logAtCreation: config })\n      : null;\n\n    const buffer = newXMap<Element, MutationOperationInternal>((t) => ({\n      _target: t,\n      _categoryBitmask: 0,\n      _attributes: MH.newSet(),\n      _addedTo: null,\n      _removedFrom: null,\n    }));\n\n    const allCallbacks = MH.newMap<\n      OnMutationHandler,\n      {\n        _callback: OnMutationCallback;\n        _options: OnMutationOptionsInternal;\n      }\n    >();\n\n    // ----------\n\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const mutationHandler = (records: MutationRecord[]) => {\n      debug: logger?.debug9(`Got ${records.length} new records`, records);\n\n      for (const record of records) {\n        const target = MH.targetOf(record);\n        const recType = record.type;\n\n        /* istanbul ignore next */\n        if (!MH.isElement(target)) {\n          continue;\n        }\n\n        if (recType === MC.S_CHILD_LIST) {\n          for (const child of record.addedNodes) {\n            if (MH.isElement(child)) {\n              const operation = buffer.sGet(child);\n              operation._addedTo = target;\n              operation._categoryBitmask |= ADDED_BIT;\n            }\n          }\n\n          for (const child of record.removedNodes) {\n            if (MH.isElement(child)) {\n              const operation = buffer.sGet(child);\n              operation._removedFrom = target;\n              operation._categoryBitmask |= REMOVED_BIT;\n            }\n          }\n\n          //\n        } else if (recType === MC.S_ATTRIBUTES && record.attributeName) {\n          const operation = buffer.sGet(target);\n          operation._attributes.add(record.attributeName);\n          operation._categoryBitmask |= ATTRIBUTE_BIT;\n        }\n      }\n\n      // Schedule flushing of the buffer asynchronously so that we can combine\n      // the records from the two MutationObservers.\n      if (!timer && MH.sizeOf(buffer)) {\n        timer = MH.setTimer(() => {\n          debug: logger?.debug9(`Processing ${buffer.size} operations`);\n          for (const operation of buffer.values()) {\n            if (shouldSkipOperation(operation)) {\n              debug: logger?.debug10(\"Skipping operation\", operation);\n            } else {\n              processOperation(operation);\n            }\n          }\n\n          buffer.clear();\n          timer = null;\n        }, 0);\n      }\n    };\n\n    const observers: Record<MutationType, MyObserver> = {\n      [MC.S_CHILD_LIST]: {\n        _observer: MH.newMutationObserver(mutationHandler),\n        _isActive: false,\n      },\n      [MC.S_ATTRIBUTES]: {\n        _observer: MH.newMutationObserver(mutationHandler),\n        _isActive: false,\n      },\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnMutationHandler,\n      options: OnMutationOptionsInternal,\n    ): OnMutationCallback => {\n      MH.remove(allCallbacks.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => deleteHandler(handler));\n\n      allCallbacks.set(handler, { _callback: callback, _options: options });\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnMutation = async (\n      handler: OnMutationHandler,\n      userOptions: OnMutationOptions | undefined,\n    ) => {\n      const options = getOptions(userOptions || {});\n      const callback = createCallback(handler, options);\n\n      let root = config._root || MH.getBody();\n      if (!root) {\n        root = await waitForElement(MH.getBody);\n      } else {\n        // So that the call is always async\n        await null;\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      if (options._categoryBitmask & (ADDED_BIT | REMOVED_BIT)) {\n        activateObserver(root, MC.S_CHILD_LIST);\n      }\n\n      if (options._categoryBitmask & ATTRIBUTE_BIT) {\n        activateObserver(root, MC.S_ATTRIBUTES);\n      }\n\n      if (\n        userOptions?.skipInitial ||\n        !options._selector ||\n        !(options._categoryBitmask & ADDED_BIT)\n      ) {\n        return;\n      }\n\n      // As some of the matching elements that currently exist in the root may\n      // have just been added and therefore in the MutationObserver's queue, to\n      // avoid calling the handler with those entries twice, we empty its queue\n      // now and process it (which would also invoke the newly added callback).\n      // Then we skip any elements returned in querySelectorAll that were in\n      // the queue.\n\n      const childQueue = observers[MC.S_CHILD_LIST]._observer.takeRecords();\n      mutationHandler(childQueue);\n\n      for (const element of [\n        ...MH.querySelectorAll(root, options._selector),\n        ...(root.matches(options._selector) ? [root] : []),\n      ]) {\n        const initOperation: MutationOperationInternal = {\n          _target: element,\n          _categoryBitmask: ADDED_BIT,\n          _attributes: MH.newSet(),\n          _addedTo: MH.parentOf(element),\n          _removedFrom: null,\n        };\n\n        const bufferedOperation = buffer.get(element);\n        const diffOperation = getDiffOperation(\n          initOperation,\n          bufferedOperation,\n        );\n\n        if (diffOperation) {\n          if (shouldSkipOperation(diffOperation)) {\n            debug: logger?.debug10(\"Skipping operation\", diffOperation);\n          } else {\n            debug: logger?.debug5(\"Calling initially with\", diffOperation);\n            await invokeCallback(callback, diffOperation);\n          }\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (handler: OnMutationHandler) => {\n      MH.deleteKey(allCallbacks, handler);\n\n      let activeCategories = 0;\n      for (const entry of allCallbacks.values()) {\n        activeCategories |= entry._options._categoryBitmask;\n      }\n\n      if (!(activeCategories & (ADDED_BIT | REMOVED_BIT))) {\n        deactivateObserver(MC.S_CHILD_LIST);\n      }\n\n      if (!(activeCategories & ATTRIBUTE_BIT)) {\n        deactivateObserver(MC.S_ATTRIBUTES);\n      }\n    };\n\n    // ----------\n\n    const processOperation = (operation: MutationOperationInternal) => {\n      debug: logger?.debug10(\"Processing operation\", operation);\n\n      for (const entry of allCallbacks.values()) {\n        const categoryBitmask = entry._options._categoryBitmask;\n        const target = entry._options._target;\n        const selector = entry._options._selector;\n\n        if (!(operation._categoryBitmask & categoryBitmask)) {\n          debug: logger?.debug10(`Category does not match: ${categoryBitmask}`);\n          continue;\n        }\n\n        const currentTargets = [];\n        if (target) {\n          if (!operation._target.contains(target)) {\n            debug: logger?.debug10(\"Target does not match\", target);\n            continue;\n          }\n\n          currentTargets.push(target);\n        }\n\n        if (selector) {\n          const matches = [...MH.querySelectorAll(operation._target, selector)];\n\n          if (operation._target.matches(selector)) {\n            matches.push(operation._target);\n          }\n\n          if (!MH.lengthOf(matches)) {\n            debug: logger?.debug10(`Selector does not match: ${selector}`);\n            continue;\n          }\n\n          currentTargets.push(...matches);\n        }\n\n        invokeCallback(entry._callback, operation, currentTargets);\n      }\n    };\n\n    // ----------\n\n    const activateObserver = (root: Element, mutationType: MutationType) => {\n      if (!observers[mutationType]._isActive) {\n        debug: logger?.debug3(\n          `Activating mutation observer for '${mutationType}'`,\n        );\n        observers[mutationType]._observer.observe(root, {\n          [mutationType]: true,\n          subtree: config._subtree,\n        });\n        observers[mutationType]._isActive = true;\n      }\n    };\n\n    // ----------\n\n    const deactivateObserver = (mutationType: MutationType) => {\n      if (observers[mutationType]._isActive) {\n        debug: logger?.debug3(\n          `Disconnecting mutation observer for '${mutationType}'`,\n        );\n        observers[mutationType]._observer.disconnect();\n        observers[mutationType]._isActive = false;\n      }\n    };\n\n    // ----------\n\n    const shouldSkipOperation = (\n      operation: MutationOperationInternal,\n    ): boolean => {\n      const target = operation._target;\n      const requestToSkip = getIgnoreMove(target);\n      if (!requestToSkip) {\n        return false;\n      }\n\n      const removedFrom = operation._removedFrom;\n      const addedTo = MH.parentOf(target);\n      const requestFrom = requestToSkip.from;\n      const requestTo = requestToSkip.to;\n\n      const root = config._root || MH.getBody();\n      // If \"from\" is currently outside our root, we may not have seen a\n      // removal operation.\n      if (\n        (removedFrom === requestFrom || !root.contains(requestFrom)) &&\n        addedTo === requestTo\n      ) {\n        clearIgnoreMove(target);\n        return true;\n      }\n\n      return false;\n    };\n\n    // ----------\n\n    this.ignoreMove = ignoreMove;\n\n    // ----------\n\n    this.onMutation = setupOnMutation;\n\n    // ----------\n\n    this.offMutation = (handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type DOMWatcherConfig = {\n  /**\n   * The root element to observe for changes.\n   *\n   * It cannot be overridden on a per-callback basis.\n   *\n   * @defaultValue document.body\n   */\n  root?: Element | null;\n\n  /**\n   * Whether to observe root's subtree for changes or just direct descendants.\n   *\n   * It cannot be overridden on a per-callback basis.\n   *\n   * @defaultValue true\n   */\n  subtree?: boolean;\n};\n\n/**\n * @interface\n */\nexport type OnMutationOptions = {\n  /**\n   * If this is given, then the handler would only be called for operations\n   * where the target is _either_ the given element or an ancestor of it, i.e.\n   * it {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/contains | Node:contains} it.\n   *\n   * @defaultValue undefined\n   */\n  target?: Element;\n\n  /**\n   * If this is given, then the handler would only be called for operations\n   * where the target matches the given selector _or contains an element\n   * matching the given selector_.\n   *\n   * @defaultValue undefined\n   */\n  selector?: string;\n\n  /**\n   * Specifies a list of {@link MutationCategory}s to target for.\n   *\n   * If not given, then the handler is called for any of the supported\n   * mutations.\n   *\n   * It can be a comma-separated list of category names or an array of such\n   * names.\n   *\n   * @defaultValue undefined\n   */\n  categories?: CommaSeparatedStr<MutationCategory> | MutationCategory[];\n\n  /**\n   * Do not call the handler until there's a future matching mutation.\n   *\n   * By default, if `selector` is given, and `categories` includes `added`, we\n   * call the handler (almost) immediately with all elements matching selector\n   * relative to this DOMWatcher's root.\n   *\n   * The initial operation will contain just the element and\n   * `addedTo: <current parent>`.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\nexport type MoveOptions = AtLeastOne<{\n  /**\n   * If to is missing or null, it's a removal operation.\n   */\n  to: Element | null;\n\n  /**\n   * If from is missing or null, it's an insertion operation.\n   */\n  from: Element | null;\n}>;\n\nexport type MutationOperation = {\n  /**\n   * The target that was changed.\n   */\n  target: Element;\n\n  /**\n   * The target that the callback was interested in.\n   *\n   * If `selector` is given as part of {@link OnMutationOptions}, then\n   * `currentTarget` will point to the target that matched the selector\n   * starting at the operation's `target` as the root. If the operation's\n   * `target` contains more than one element matching selector, the callback\n   * will be called once for _each_ matching child.\n   *\n   * If `target` is given as part of {@link OnMutationOptions}, then\n   * `currentTarget` will be that element.\n   */\n  currentTarget: Element;\n\n  /**\n   * The list of attributes that were changed in this round.\n   */\n  attributes: Set<string>;\n\n  /**\n   * The element that the target was added to, i.e. it's new parent. It is null\n   * if the target was not moved to a new element _during this round_. It does\n   * not mean that this is its current parent.\n   */\n  addedTo: Element | null;\n\n  /**\n   * The element that the target was removed from, i.e. it's old parent. It is\n   * null if the target was not removed from a previous element _during this\n   * round_. It does not mean it did not previously have a parent, but that its\n   * removal was not observed.\n   */\n  removedFrom: Element | null;\n};\n\n/**\n * The handler is invoked with one argument:\n *\n * - a {@link MutationOperation} for a set of mutations related to a particular\n *   element\n *\n * The handler could be invoked multiple times in each \"round\" (cycle of event\n * loop) if there are mutation operations for more than one element that match\n * the supplied {@link OnMutationOptions}.\n */\nexport type OnMutationHandlerArgs = [MutationOperation];\nexport type OnMutationCallback = Callback<OnMutationHandlerArgs>;\nexport type OnMutationHandler =\n  | CallbackHandler<OnMutationHandlerArgs>\n  | OnMutationCallback;\n\n// ----------------------------------------\n\ntype DOMWatcherConfigInternal = {\n  _root: Element | null;\n  _subtree: boolean;\n};\n\ntype OnMutationOptionsInternal = {\n  _target: Element | null;\n  _selector: string;\n  _categoryBitmask: number;\n};\n\ntype MyObserver = {\n  _observer: MutationObserver;\n  _isActive: boolean;\n};\n\ntype MutationType = \"childList\" | \"attributes\";\n\ntype MutationOperationInternal = {\n  _target: Element;\n  _attributes: Set<string>;\n  _addedTo: Element | null;\n  _removedFrom: Element | null;\n  _categoryBitmask: number;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, DOMWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (config: DOMWatcherConfig): DOMWatcherConfigInternal => {\n  return {\n    _root: config.root || null,\n    _subtree: config.subtree ?? true,\n  };\n};\n\nconst CATEGORIES_BITS = DOM_CATEGORIES_SPACE.bit;\nconst ADDED_BIT = CATEGORIES_BITS[MC.S_ADDED];\nconst REMOVED_BIT = CATEGORIES_BITS[MC.S_REMOVED];\nconst ATTRIBUTE_BIT = CATEGORIES_BITS[MC.S_ATTRIBUTE];\n\n// ----------------------------------------\n\nconst getOptions = (options: OnMutationOptions): OnMutationOptionsInternal => {\n  let categoryBitmask = 0;\n  const categories = validateStrList(\n    \"categories\",\n    options.categories,\n    DOM_CATEGORIES_SPACE.has,\n  );\n\n  if (categories) {\n    for (const cat of categories) {\n      categoryBitmask |= CATEGORIES_BITS[cat];\n    }\n  } else {\n    categoryBitmask = DOM_CATEGORIES_SPACE.bitmask; // default: all\n  }\n\n  const selector = options.selector || \"\";\n  if (!MH.isString(selector)) {\n    throw MH.usageError(\"'selector' must be a string\");\n  }\n\n  return {\n    _categoryBitmask: categoryBitmask,\n    _target: options.target || null,\n    _selector: options.selector || \"\",\n  };\n};\n\nconst getDiffOperation = (\n  operationA: MutationOperationInternal,\n  operationB: MutationOperationInternal | undefined,\n): MutationOperationInternal | null => {\n  if (!operationB || operationA._target !== operationB._target) {\n    return operationA;\n  }\n\n  const attributes = MH.newSet<string>();\n  for (const attr of operationA._attributes) {\n    if (!operationB._attributes.has(attr)) {\n      attributes.add(attr);\n    }\n  }\n\n  const categoryBitmask =\n    operationA._categoryBitmask ^ operationB._categoryBitmask;\n\n  const addedTo =\n    operationA._addedTo === operationB._addedTo ? null : operationA._addedTo;\n\n  const removedFrom =\n    operationA._removedFrom === operationB._removedFrom\n      ? null\n      : operationA._removedFrom;\n\n  if (!MH.sizeOf(attributes) && !categoryBitmask && !addedTo && !removedFrom) {\n    return null;\n  }\n\n  return {\n    _target: operationA._target,\n    _categoryBitmask: categoryBitmask,\n    _attributes: attributes,\n    _addedTo: addedTo,\n    _removedFrom: removedFrom,\n  };\n};\n\nconst invokeCallback = (\n  callback: OnMutationCallback,\n  operation: MutationOperationInternal,\n  currentTargets: Element[] = [],\n) => {\n  if (!MH.lengthOf(currentTargets)) {\n    currentTargets = [operation._target];\n  }\n\n  for (const currentTarget of currentTargets) {\n    callback\n      .invoke({\n        target: operation._target,\n        currentTarget,\n        attributes: operation._attributes,\n        addedTo: operation._addedTo,\n        removedFrom: operation._removedFrom,\n      })\n      .catch(logError);\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  XYDirection,\n  ZDirection,\n  NoDirection,\n  AmbiguousDirection,\n  CommaSeparatedStr,\n  Vector,\n} from \"@lisn/globals/types\";\n\nimport { maxAbs, areParallel } from \"@lisn/utils/math\";\nimport { isValidStrList, validateStrList } from \"@lisn/utils/validation\";\n\n/**\n * Returns the cardinal direction in the XY plane for the larger of the two\n * deltas (horizontal vs vertical).\n *\n * If both deltas are 0, returns \"none\".\n *\n * If both deltas are equal and non-0, returns \"ambiguous\".\n *\n * @category Directions\n */\nexport const getMaxDeltaDirection = (\n  deltaX: number,\n  deltaY: number,\n): XYDirection | NoDirection | AmbiguousDirection => {\n  if (!MH.abs(deltaX) && !MH.abs(deltaY)) {\n    return MC.S_NONE;\n  }\n\n  if (MH.abs(deltaX) === MH.abs(deltaY)) {\n    return MC.S_AMBIGUOUS;\n  }\n\n  if (MH.abs(deltaX) > MH.abs(deltaY)) {\n    return deltaX < 0 ? MC.S_LEFT : MC.S_RIGHT;\n  }\n  return deltaY < 0 ? MC.S_UP : MC.S_DOWN;\n};\n\n/**\n * Returns the approximate direction of the given 2D vector as one of the\n * cardinal (XY plane) ones: \"up\", \"down\", \"left\" or \"right\"; or \"ambiguous\".\n *\n * @param {} angleDiffThreshold  See {@link areParallel} or\n *                               {@link Utils.areAntiParallel | areAntiParallel}.\n *                               This determines whether the inferred direction\n *                               is ambiguous. For it to _not_ be ambiguous it\n *                               must align with one of the four cardinal\n *                               directions to within `angleDiffThreshold`.\n *                               It doesn't make sense for this value to be < 0\n *                               or >= 45 degrees. If it is, it's forced to be\n *                               positive (absolute) and <= 44.99.\n *\n * @category Directions\n */\nexport const getVectorDirection = (\n  vector: Vector,\n  angleDiffThreshold = 0,\n): XYDirection | AmbiguousDirection | NoDirection => {\n  angleDiffThreshold = MH.min(44.99, MH.abs(angleDiffThreshold));\n\n  if (!maxAbs(...vector)) {\n    return MC.S_NONE;\n  } else if (areParallel(vector, [1, 0], angleDiffThreshold)) {\n    return MC.S_RIGHT;\n  } else if (areParallel(vector, [0, 1], angleDiffThreshold)) {\n    return MC.S_DOWN;\n  } else if (areParallel(vector, [-1, 0], angleDiffThreshold)) {\n    return MC.S_LEFT;\n  } else if (areParallel(vector, [0, -1], angleDiffThreshold)) {\n    return MC.S_UP;\n  }\n\n  return MC.S_AMBIGUOUS;\n};\n\n/**\n * Returns the opposite direction to the given direction or null if the given\n * direction has no opposite.\n *\n * @example\n * ```javascript\n * getOppositeDirection(\"up\"); // -> \"down\"\n * getOppositeDirection(\"down\"); // -> \"up\"\n * getOppositeDirection(\"left\"); // -> \"right\"\n * getOppositeDirection(\"right\"); // -> \"left\"\n * getOppositeDirection(\"none\"); // -> null\n * getOppositeDirection(\"ambiguous\"); // -> null\n * ```\n *\n * @category Directions\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid.\n */\nexport const getOppositeDirection = (\n  direction: Direction,\n): Direction | null => {\n  if (!(direction in OPPOSITE_DIRECTIONS)) {\n    throw MH.usageError(\"Invalid 'direction'\");\n  }\n\n  return OPPOSITE_DIRECTIONS[direction];\n};\n\n/**\n * Returns the set of directions which are opposite to the given set of directions.\n *\n * There are two sets of opposite pairs (\"up\"/\"down\" and \"left\"/\"right\") and at\n * least one of the two opposing directions of a pair must be present for the\n * other one to be included. If both directions that constitute a pair of\n * opposites is given, then the other pair is returned instead (minus any that\n * are present in the input). See examples below for clarification.\n *\n * @example\n * ```javascript\n * getOppositeXYDirections(\"up\"); // -> [\"down\"]\n * getOppositeXYDirections(\"left\"); // -> [\"right\"]\n * getOppositeXYDirections(\"up,down\"); // -> [\"left\",\"right\"]\n * getOppositeXYDirections(\"up,left\"); // -> [\"down\",\"right\"]\n * getOppositeXYDirections(\"up,left,right\"); // -> [\"down\"]\n * getOppositeXYDirections(\"none\"); // -> throws\n * getOppositeXYDirections(\"ambiguous\"); // -> throws\n * getOppositeXYDirections(\"in\"); // -> throws\n * ```\n *\n * @category Directions\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid.\n */\nexport const getOppositeXYDirections = (\n  directions: CommaSeparatedStr<XYDirection> | XYDirection[],\n): XYDirection[] => {\n  const directionList = validateStrList(\n    \"directions\",\n    directions,\n    isValidXYDirection,\n  );\n\n  if (!directionList) {\n    throw MH.usageError(\"'directions' is required\");\n  }\n\n  const opposites: XYDirection[] = [];\n  for (const direction of directionList) {\n    const opposite = getOppositeDirection(direction);\n    if (\n      opposite &&\n      isValidXYDirection(opposite) &&\n      !MH.includes(directionList, opposite)\n    ) {\n      opposites.push(opposite);\n    }\n  }\n\n  if (!MH.lengthOf(opposites)) {\n    for (const direction of XY_DIRECTIONS) {\n      if (!MH.includes(directionList, direction)) {\n        opposites.push(direction);\n      }\n    }\n  }\n\n  return opposites;\n};\n\n/**\n * Returns true if the given direction is one of the known XY ones.\n *\n * @category Validation\n */\nexport const isValidXYDirection = (\n  direction: string,\n): direction is XYDirection => MH.includes(XY_DIRECTIONS, direction);\n\n/**\n * Returns true if the given direction is one of the known Z ones.\n *\n * @category Validation\n */\nexport const isValidZDirection = (direction: string): direction is ZDirection =>\n  MH.includes(Z_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string is a valid direction.\n *\n * @category Validation\n */\nexport const isValidDirection = (direction: string): direction is Direction =>\n  MH.includes(DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid directions.\n *\n * @category Validation\n */\nexport const isValidDirectionList = (\n  directions: string | string[],\n): directions is CommaSeparatedStr<Direction> | Direction[] =>\n  isValidStrList(directions, isValidDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const XY_DIRECTIONS = [\n  MC.S_UP,\n  MC.S_DOWN,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const Z_DIRECTIONS = [MC.S_IN, MC.S_OUT] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const SCROLL_DIRECTIONS = [\n  ...XY_DIRECTIONS,\n  MC.S_NONE,\n  MC.S_AMBIGUOUS,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const DIRECTIONS = [\n  ...XY_DIRECTIONS,\n  ...Z_DIRECTIONS,\n  MC.S_NONE,\n  MC.S_AMBIGUOUS,\n] as const;\n\n// --------------------\n\nconst OPPOSITE_DIRECTIONS = {\n  [MC.S_UP]: MC.S_DOWN,\n  [MC.S_DOWN]: MC.S_UP,\n  [MC.S_LEFT]: MC.S_RIGHT,\n  [MC.S_RIGHT]: MC.S_LEFT,\n  [MC.S_IN]: MC.S_OUT,\n  [MC.S_OUT]: MC.S_IN,\n  [MC.S_NONE]: null,\n  [MC.S_AMBIGUOUS]: null,\n} as const;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { addClasses, removeClasses } from \"@lisn/utils/css-alter\";\nimport { copyExistingKeys } from \"@lisn/utils/misc\";\n\nimport { XMap, newXMapGetter, newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * Calls the given event listener, which could be a function that's callable\n * directly, or an object that has a `handleEvent` function property.\n *\n * @category Events: Generic\n */\nexport const callEventListener = (\n  handler: EventListenerOrEventListenerObject,\n  event: Event,\n) => {\n  if (MH.isFunction(handler)) {\n    handler.call(event.currentTarget || self, event);\n  } else {\n    handler.handleEvent.call(event.currentTarget || self, event);\n  }\n};\n\n/**\n * Adds an event listener for the given event name to the given target.\n *\n * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener | EventTarget:addEventListener}\n * but it handles `options` object in case the browser does not support those.\n * Does not support the `signal` option unless browser natively supports that.\n *\n * @return {} `true` if successfully added, or `false` if the same handler has\n * already been added by us, or if the handler is not a valid event listener.\n *\n * @category Events: Generic\n */\nexport const addEventListenerTo = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions = {},\n): boolean => {\n  eventType = transformEventType(eventType);\n  if (getEventHandlerData(target, eventType, handler, options)) {\n    // already added\n    return false;\n  }\n\n  let thirdArg = options;\n  let wrappedHandler = handler;\n\n  // If the user passed an options object but the browser only supports a\n  // boolen for 'useCapture', then handle this.\n  const supports = getBrowserSupport();\n  if (MH.isNonPrimitive(options)) {\n    if (!supports._optionsArg) {\n      thirdArg = options.capture ?? false;\n    }\n\n    if (options.once && !supports._options.once) {\n      // Remove the handler once it's called once\n      wrappedHandler = (event) => {\n        removeEventListenerFrom(target, eventType, handler, options);\n        callEventListener(handler, event);\n      };\n    }\n  }\n\n  setEventHandlerData(target, eventType, handler, options, {\n    _wrappedHandler: wrappedHandler,\n    _thirdArg: thirdArg,\n  });\n\n  target.addEventListener(eventType, wrappedHandler, thirdArg);\n  return true;\n};\n\n/**\n * Removes an event listener that has been added using\n * {@link addEventListenerTo}.\n *\n * **IMPORTANT:** If you have added a listener using the built-in\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener | EventTarget:addEventListener},\n * then you should use\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener | EventTarget:removeEventListener},\n * to remove it, not this function.\n *\n * @return {} `true` if successfully removed, or `false` if the handler has not\n * been added by us.\n *\n * @category Events: Generic\n */\nexport const removeEventListenerFrom = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions = {},\n) => {\n  eventType = transformEventType(eventType);\n  const data = getEventHandlerData(target, eventType, handler, options);\n\n  if (!data) {\n    return false;\n  }\n\n  target.removeEventListener(eventType, data._wrappedHandler, data._thirdArg);\n  deleteEventHandlerData(target, eventType, handler, options);\n  return true;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const preventSelect = (target: EventTarget) => {\n  addEventListenerTo(target, MC.S_SELECTSTART, MH.preventDefault);\n  if (MH.isElement(target)) {\n    addClasses(target, MC.PREFIX_NO_SELECT);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const undoPreventSelect = (target: EventTarget) => {\n  removeEventListenerFrom(target, MC.S_SELECTSTART, MH.preventDefault);\n  if (MH.isElement(target)) {\n    removeClasses(target, MC.PREFIX_NO_SELECT);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getBrowserSupport = (): BrowserEventSupport => {\n  if (browserEventSupport) {\n    // already detected\n    return browserEventSupport;\n  }\n\n  const supports = {\n    _pointer: false,\n    _optionsArg: false,\n    _options: {\n      capture: false,\n      passive: false,\n      once: false,\n      signal: false,\n    },\n  };\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#safely_detecting_option_support\n  const optTest = {};\n  let opt: keyof typeof supports._options;\n  for (opt in supports._options) {\n    const thisOpt = opt;\n    MH.defineProperty(optTest, thisOpt, {\n      get: () => {\n        supports._options[thisOpt] = true;\n        if (thisOpt === \"signal\") {\n          return new AbortController().signal;\n        }\n        return false;\n      },\n    });\n  }\n\n  const dummyHandler = () => {}; // TypeScript does not accept null\n  const dummyElement = MH.createElement(\"div\");\n  try {\n    dummyElement.addEventListener(\"testOptionSupport\", dummyHandler, optTest);\n    dummyElement.removeEventListener(\n      \"testOptionSupport\",\n      dummyHandler,\n      optTest,\n    );\n    supports._optionsArg = true;\n  } catch (e__ignored) {\n    //\n  }\n\n  supports._pointer = \"onpointerup\" in dummyElement;\n\n  browserEventSupport = supports;\n  return supports;\n};\n\n// --------------------\n\ntype EventHandlerData = {\n  _wrappedHandler: EventListenerOrEventListenerObject;\n  _thirdArg: boolean | AddEventListenerOptions;\n};\n\nlet browserEventSupport: BrowserEventSupport;\n\nconst registeredEventHandlerData = newXWeakMap<\n  EventTarget,\n  XMap<\n    string, // event type\n    XMap<\n      EventListenerOrEventListenerObject, // user-supplied handler\n      Map<\n        string, // str repr of options\n        EventHandlerData\n      >\n    >\n  >\n>(newXMapGetter(newXMapGetter(() => MH.newMap())));\n\n// detect browser features, see below\ntype BrowserEventSupport = {\n  _pointer: boolean;\n  _optionsArg: boolean;\n  _options: {\n    capture: boolean;\n    passive: boolean;\n    once: boolean;\n    signal: boolean;\n  };\n};\n\nconst getEventOptionsStr = (\n  options: boolean | AddEventListenerOptions,\n): string => {\n  const finalOptions: AddEventListenerOptions = {\n    capture: false,\n    passive: false,\n    once: false,\n  };\n\n  if (options === false || options === true) {\n    finalOptions.capture = options;\n  } else if (MH.isObject(options)) {\n    copyExistingKeys(options, finalOptions);\n  }\n\n  return MH.stringify(finalOptions);\n};\n\nconst getEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  return registeredEventHandlerData\n    .get(target)\n    ?.get(eventType)\n    ?.get(handler)\n    ?.get(optionsStr);\n};\n\nconst deleteEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  MH.deleteKey(\n    registeredEventHandlerData.get(target)?.get(eventType)?.get(handler),\n    optionsStr,\n  );\n  registeredEventHandlerData.prune(target, eventType, handler);\n};\n\nconst setEventHandlerData = (\n  target: EventTarget,\n  eventType: string,\n  handler: EventListenerOrEventListenerObject,\n  options: boolean | AddEventListenerOptions,\n  data: EventHandlerData,\n) => {\n  const optionsStr = getEventOptionsStr(options);\n  registeredEventHandlerData\n    .sGet(target)\n    .sGet(eventType)\n    .sGet(handler)\n    .set(optionsStr, data);\n};\n\nconst transformEventType = (eventType: string) => {\n  const supports = getBrowserSupport();\n  if (eventType.startsWith(MC.S_POINTER) && !supports._pointer) {\n    // TODO maybe log a warning message is it's not supported, e.g. there's no\n    // mousecancel\n    return MH.strReplace(eventType, MC.S_POINTER, MC.S_MOUSE);\n  }\n\n  return eventType;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureDevice, GestureIntent } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * `deltaX` and `deltaY` together specify the precise direction in the XY plane\n * of the move if relevant (i.e. other than zoom intent). The direction\n * specifies the effective X (\"left\"/\"right\"), Y (\"up\"/\"down\") or Z (\"in\"/\"out\")\n * direction, or \"none\"/\"ambiguous\".\n *\n * `deltaZ` specifies relative zoom in or out for zoom intents.\n * For zoom in, deltaZ is always > 1, and for zoom out it is < 1.\n * For non-zoom events it is 1.\n *\n * For zoom intents, `direction` would be either in, out or none.\n * For other intents, it would be up, down, left, right, none or ambiguous.\n *\n * For important notes on the delta values see\n * - {@link Utils.getKeyGestureFragment | getKeyGestureFragment}\n * - {@link Utils.getTouchGestureFragment | getTouchGestureFragment}\n * - {@link Utils.getWheelGestureFragment | getWheelGestureFragment}\n *\n * @category Gestures\n */\nexport type GestureFragment = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n  deltaX: number;\n  deltaY: number;\n  deltaZ: number;\n};\n\n/**\n * Returns true if the given string is a valid gesture device.\n *\n * @category Validation\n */\nexport const isValidInputDevice = (device: string): device is GestureDevice =>\n  MH.includes(DEVICES, device);\n\n/**\n * Returns true if the given string is a valid gesture intent.\n *\n * @category Validation\n */\nexport const isValidIntent = (intent: string): intent is GestureIntent =>\n  MH.includes(INTENTS, intent);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * devices.\n *\n * @category Validation\n */\nexport const isValidInputDeviceList = (devices: string | string[]) =>\n  isValidStrList(devices, isValidInputDevice, false);\n\n/**\n * Returns true if the given string or array is a list of valid gesture\n * intents.\n *\n * @category Validation\n */\nexport const isValidIntentList = (intents: string | string[]) =>\n  isValidStrList(intents, isValidIntent, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const addDeltaZ = (current: number, increment: number) =>\n  MH.max(MIN_DELTA_Z, current * increment);\n\n/**\n * @ignore\n * @internal\n */\nexport const DEVICES: GestureDevice[] = [\n  MC.S_KEY,\n  MC.S_POINTER,\n  MC.S_TOUCH,\n  MC.S_WHEEL,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const INTENTS: GestureIntent[] = [\n  MC.S_SCROLL,\n  MC.S_ZOOM,\n  MC.S_DRAG,\n  MC.S_UNKNOWN,\n] as const;\n\n// Do not allow zooming out more than this value\nconst MIN_DELTA_Z = 0.1;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { Direction, GestureIntent } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport { GestureFragment, addDeltaZ } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"keydown\"\n * events will be considered.\n *\n * If there are no \"keydown\" events in the given list of events, returns\n * `false`.\n *\n * The deltas of all events are summed together before determining final delta\n * and direction.\n *\n * If the events are of conflicting types, i.e. some scroll, some zoom, then\n * the intent will be \"unknown\" and the direction will be \"ambiguous\".\n *\n * Otherwise, if the deltas sum up to 0, the direction will be \"none\".\n *\n * **IMPORTANT NOTES ON THE DELTA VALUES**\n *\n * For key gestures the deltas are unreliable. You should not assume they\n * correspond to the would-be scroll or zoom amount that the browser would do.\n * But they can be used to determine relative amounts for animating, etc.\n *\n * Key press events can be divided into 3 categories: that scroll by a \"line\"\n * (e.g. arrow keys), by a \"page\" (e.g. PageUp/PageDown) or by the full content\n * height/width (e.g. Home/End). The actual scroll amount that _would_ result\n * from the event is dependent on the browser, the window size or the element's\n * scroll width/height, so ours can only be a best guess.\n *\n * Since the actual pixel equivalent is browser specific, we use reasonable\n * default values of delta for each of these \"line\", \"page\" or \"content\" modes,\n * similar to what\n * {@link Utils.getWheelGestureFragment | getWheelGestureFragment} does:\n * - For \"line\", then a configurable fixed value is used\n *  ({@link settings.deltaLineHeight}).\n * - For \"page\", then a configurable fixed value is used\n *  ({@link settings.deltaPageHeight}).\n * - For \"content\", the element's scroll height is used if given, otherwise\n *   the viewport height (same as \"page\"). We do not try to get the current\n *   scroll height of the target element, (which would be the best guess value\n *   of `deltaY` in case of Home/End key presses), as that would either involve\n *   an asynchronous action or would result in forced layout. If the caller is\n *   already tracking the scroll height of the target, you can pass this as an\n *   argument. Otherwise, we'll default to using the viewport height, same as\n *   for PageUp/Down.\n *\n * If the key gesture fragment is a result of multiple events that were\n * accumulated, the deltas are summed as usual, e.g. if a \"page\" is equal to 20\n * \"lines\", then pressing PageDown and then 10 times Up, would result in a\n * delta equal to 10 \"lines\" down.\n *\n * For zoom intents, `deltaZ` gives a relative change of scale, whereby each\n * press of + or - steps up by 15% or down by ~13% (`1 / 1.15` to be exact)\n * since the previous one.\n *\n * @param {} [options.angleDiffThreshold]\n *                                  See {@link getVectorDirection}\n * @param {} [options.scrollHeight] Use this as deltaY when Home/End is pressed\n *\n * @return {} `false` if there are no \"keydown\" events in the list, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getKeyGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n    scrollHeight?: number;\n  },\n): GestureFragment | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  const LINE = settings.deltaLineHeight;\n  const PAGE = settings.deltaPageHeight;\n  const CONTENT = options?.scrollHeight ?? PAGE;\n\n  const deltasUp = (amount: number): DeltasArr => [0, -amount, 1];\n  const deltasDown = (amount: number): DeltasArr => [0, amount, 1];\n  const deltasLeft = (amount: number): DeltasArr => [-amount, 0, 1];\n  const deltasRight = (amount: number): DeltasArr => [amount, 0, 1];\n  const deltasIn: DeltasArr = [0, 0, 1.15];\n  const deltasOut: DeltasArr = [0, 0, 1 / 1.15];\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent | null = null;\n  let deltaX = 0,\n    deltaY = 0,\n    deltaZ = 1;\n\n  for (const event of events) {\n    if (!MH.isKeyboardEvent(event) || event.type !== MC.S_KEYDOWN) {\n      continue;\n    }\n\n    const deltasForKey: Record<string, DeltasArr | null> = {\n      [SK_UP]: deltasUp(LINE),\n      [SK_ARROWUP]: deltasUp(LINE),\n      [SK_PAGEUP]: deltasUp(PAGE),\n      Home: deltasUp(CONTENT),\n      [SK_DOWN]: deltasDown(LINE),\n      [SK_ARROWDOWN]: deltasDown(LINE),\n      [SK_PAGEDOWN]: deltasDown(PAGE),\n      End: deltasDown(CONTENT),\n      [SK_LEFT]: deltasLeft(LINE),\n      [SK_ARROWLEFT]: deltasLeft(LINE),\n      [SK_RIGHT]: deltasRight(LINE),\n      [SK_ARROWRIGHT]: deltasRight(LINE),\n      \" \": (event.shiftKey ? deltasUp : deltasDown)(PAGE),\n      \"+\": deltasIn,\n      \"=\": event.ctrlKey ? deltasIn : null,\n      \"-\": deltasOut,\n    };\n\n    const theseDeltas = deltasForKey[event.key] || null;\n    if (!theseDeltas) {\n      // not a relevant key\n      continue;\n    }\n\n    const [thisDeltaX, thisDeltaY, thisDeltaZ] = theseDeltas;\n    const thisIntent = thisDeltaZ !== 1 ? MC.S_ZOOM : MC.S_SCROLL;\n\n    deltaX += thisDeltaX;\n    deltaY += thisDeltaY;\n    deltaZ = addDeltaZ(deltaZ, thisDeltaZ);\n\n    if (!intent) {\n      intent = thisIntent;\n    } else if (intent !== thisIntent) {\n      // mixture of zoom and scroll\n      intent = MC.S_UNKNOWN;\n    }\n  }\n\n  if (!intent) {\n    return false; // no relevant events\n  } else if (intent === MC.S_UNKNOWN) {\n    direction = MC.S_AMBIGUOUS;\n  } else if (intent === MC.S_ZOOM) {\n    direction = deltaZ > 1 ? MC.S_IN : deltaZ < 1 ? MC.S_OUT : MC.S_NONE;\n  } else {\n    direction = getVectorDirection(\n      [deltaX, deltaY],\n      options?.angleDiffThreshold,\n    );\n  }\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_KEY,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n      };\n};\n\n// --------------------\n\ntype DeltasArr = [number, number, number];\n\nconst SK_UP = \"Up\";\nconst SK_DOWN = \"Down\";\nconst SK_LEFT = \"Left\";\nconst SK_RIGHT = \"Right\";\nconst SK_PAGE = \"Page\";\nconst SK_ARROW = \"Arrow\";\nconst SK_PAGEUP = (SK_PAGE + SK_UP) as `${typeof SK_PAGE}${typeof SK_UP}`;\nconst SK_PAGEDOWN = (SK_PAGE + SK_DOWN) as `${typeof SK_PAGE}${typeof SK_DOWN}`;\nconst SK_ARROWUP = (SK_ARROW + SK_UP) as `${typeof SK_ARROW}${typeof SK_UP}`;\nconst SK_ARROWDOWN = (SK_ARROW +\n  SK_DOWN) as `${typeof SK_ARROW}${typeof SK_DOWN}`;\nconst SK_ARROWLEFT = (SK_ARROW +\n  SK_LEFT) as `${typeof SK_ARROW}${typeof SK_LEFT}`;\nconst SK_ARROWRIGHT = (SK_ARROW +\n  SK_RIGHT) as `${typeof SK_ARROW}${typeof SK_RIGHT}`;\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\nimport { getBrowserSupport } from \"@lisn/utils/event\";\nimport { GestureFragment } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. If the browser\n * supports Pointer events, then only \"pointermove\" events will be considered.\n * Otherwise, only \"mousemove\" events will be considered.\n *\n * If there are less than 2 such events in the given list of events, returns\n * `false`.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"pointercancel\" in the list or buttons other than the primary are pressed,\n * returns `null`.\n *\n * Pointer gestures always require the primary button to be pressed and the\n * resulting intent is always \"drag\", and `deltaZ` is always 1.\n *\n * @param {} [options.angleDiffThreshold] See {@link getVectorDirection}\n *\n * @return {} `false` if there are less than 2 \"pointermove\"/\"mousemove\" events\n * in the list, `null` if the gesture is terminated, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getPointerGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let isCancelled = false;\n  const supports = getBrowserSupport();\n\n  // If the browser supports pointer events, then only take those; otherwise\n  // take the mouse events\n  const pointerEventClass = supports._pointer ? PointerEvent : MouseEvent;\n  const pointerUpType = supports._pointer ? MC.S_POINTERUP : MC.S_MOUSEUP;\n\n  const filteredEvents: MouseEvent[] = MH.filter(\n    events,\n    (event): event is MouseEvent => {\n      const eType = event.type;\n      isCancelled = isCancelled || eType === MC.S_POINTERCANCEL;\n      if (eType !== MC.S_CLICK && MH.isInstanceOf(event, pointerEventClass)) {\n        // Only events where the primary button is pressed (unless it's a\n        // pointerup event, in which case no buttons should be pressed) are\n        // considered, otherwise consider it terminated\n        isCancelled =\n          isCancelled ||\n          (eType === pointerUpType && event.buttons !== 0) ||\n          (eType !== pointerUpType && event.buttons !== 1);\n        // we don't handle touch pointer events\n        return !MH.isTouchPointerEvent(event);\n      }\n      return false;\n    },\n  );\n\n  const numEvents = MH.lengthOf(filteredEvents);\n  if (numEvents < 2) {\n    return false; // no enough events\n  }\n\n  if (isCancelled) {\n    return null; // terminated\n  }\n\n  const firstEvent = filteredEvents[0];\n  const lastEvent = filteredEvents[numEvents - 1];\n  if (MH.getPointerType(firstEvent) !== MH.getPointerType(lastEvent)) {\n    return null; // different devices, consider it terminated\n  }\n\n  const deltaX = lastEvent.clientX - firstEvent.clientX;\n  const deltaY = lastEvent.clientY - firstEvent.clientY;\n  const direction = getVectorDirection(\n    [deltaX, deltaY],\n    options?.angleDiffThreshold,\n  );\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_POINTER,\n        direction,\n        intent: MC.S_DRAG,\n        deltaX,\n        deltaY,\n        deltaZ: 1,\n      };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureIntent, Vector } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport {\n  maxAbs,\n  havingMaxAbs,\n  distanceBetween,\n  areAntiParallel,\n} from \"@lisn/utils/math\";\nimport { GestureFragment } from \"@lisn/utils/gesture\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Gestures\n */\nexport type TouchDiff = {\n  startX: number;\n  startY: number;\n\n  endX: number;\n  endY: number;\n\n  deltaX: number;\n  deltaY: number;\n\n  isSignificant: boolean;\n};\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"touchmove\" events\n * will be considered.\n *\n * If there are less than 2 such events in the given list of events, returns `false`.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that by default swipe actions follow the natural direction: swipe up\n * with scroll intent results in direction down and swipe down results in\n * direction up. Drag intent always follows the direction of the gesture.\n *\n * For zoom intents, which necessarily involves exactly two fingers `deltaZ`\n * is based on the relative change in distance between the fingers.\n *\n * @param {} [options.deltaThreshold]\n *                          A change of x or y coordinate less than this is\n *                          considered insignificant, for the purposes of\n *                          determining:\n *                          1) whether the inferred direction is in one of the\n *                             four cardinal ones, or otherwise ambiguous; and\n *                          2) whether more than two fingers have moved and\n *                             therefore whether the direction could be zoom or\n *                             not\n * @param {} [options.angleDiffThreshold] See {@link getVectorDirection}\n * @param {} [options.reverseScroll]\n *                          If set to `true`, will disable natural scroll\n *                          direction.\n * @param {} [options.dragHoldTime]\n *                          If the user presses and holds for at least the\n *                          given amount of milliseconds before moving the\n *                          finger(s), gestures other than pinch will be\n *                          treated as a drag instead of scroll as long as the\n *                          number of fingers touching the screen is\n *                          `options.dragNumFingers`. Default is 500ms.\n * @param {} [options.dragNumFingers]\n *                          The number of fingers that could be considered a\n *                          drag intent. Default is 1.\n *\n * @return {} `false` if there are less than 2 \"touchmove\" events in the list,\n * `null` if the gesture is terminated, otherwise a {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getTouchGestureFragment = (\n  events: Event[],\n  options?: {\n    deltaThreshold?: number;\n    angleDiffThreshold?: number;\n    reverseScroll?: boolean;\n    dragHoldTime?: number;\n    dragNumFingers?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let moves = getTouchDiff(events, options?.deltaThreshold);\n\n  if (!moves) {\n    return null; // terminated\n  }\n\n  let numMoves = MH.lengthOf(moves);\n\n  const holdTime = getHoldTime(events);\n  const canBeDrag =\n    holdTime >= (options?.dragHoldTime ?? 500) &&\n    numMoves === (options?.dragNumFingers ?? 1);\n  const angleDiffThreshold = options?.angleDiffThreshold;\n\n  let deltaX = havingMaxAbs(...moves.map((m) => m.deltaX));\n  let deltaY = havingMaxAbs(...moves.map((m) => m.deltaY));\n  let deltaZ = 1;\n\n  if (numMoves > 2) {\n    // Take only the significant ones\n    moves = MH.filter(moves, (d) => d.isSignificant);\n    numMoves = MH.lengthOf(moves);\n  }\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent = MC.S_UNKNOWN;\n  if (numMoves === 2) {\n    // Check if it's a zoom\n    const vectorA: Vector = [moves[0].deltaX, moves[0].deltaY];\n    const vectorB: Vector = [moves[1].deltaX, moves[1].deltaY];\n\n    // If either finger is approx stationary, or if they move in opposite directions,\n    // treat it as zoom.\n    if (\n      !havingMaxAbs(...vectorA) || // finger A still\n      !havingMaxAbs(...vectorB) || // finger B still\n      areAntiParallel(vectorA, vectorB, angleDiffThreshold)\n    ) {\n      // It's a pinch motion => zoom\n      const startDistance = distanceBetween(\n        [moves[0].startX, moves[0].startY],\n        [moves[1].startX, moves[1].startY],\n      );\n\n      const endDistance = distanceBetween(\n        [moves[0].endX, moves[0].endY],\n        [moves[1].endX, moves[1].endY],\n      );\n\n      direction = startDistance < endDistance ? MC.S_IN : MC.S_OUT;\n      deltaZ = endDistance / startDistance;\n      deltaX = deltaY = 0;\n      intent = MC.S_ZOOM;\n    }\n  }\n\n  const deltaSign = canBeDrag || options?.reverseScroll ? 1 : -1;\n  // If scrolling, swap the deltas for natural scroll direction.\n  // Add +0 to force -0 to be +0 since jest doesn't think they're equal\n  deltaX = deltaSign * deltaX + 0;\n  deltaY = deltaSign * deltaY + 0;\n\n  if (direction === MC.S_NONE) {\n    // Wasn't a zoom. Check if all moves are aligned.\n    let isFirst = true;\n\n    for (const m of moves) {\n      // There's at least one significant move, assume scroll or drag intent.\n      intent = canBeDrag ? MC.S_DRAG : MC.S_SCROLL;\n\n      const thisDirection = getVectorDirection(\n        [deltaSign * m.deltaX, deltaSign * m.deltaY],\n        angleDiffThreshold,\n      );\n\n      if (thisDirection === MC.S_NONE) {\n        continue;\n      }\n\n      if (isFirst) {\n        direction = thisDirection;\n      } else if (direction !== thisDirection) {\n        direction = MC.S_AMBIGUOUS;\n        break;\n      }\n\n      isFirst = false;\n    }\n  }\n\n  if (direction === MC.S_NONE) {\n    const lastTouchEvent = events.filter(MH.isTouchEvent).slice(-1)[0];\n    // If all fingers have lifted off, consider it terminated, otherwise wait\n    // for more events.\n    return MH.lengthOf(lastTouchEvent?.touches) ? false : null;\n  }\n\n  return {\n    device: MC.S_TOUCH,\n    direction,\n    intent,\n    deltaX,\n    deltaY,\n    deltaZ,\n  };\n};\n\n/**\n * Returns a description of the changes in each finger between the first and\n * the last relevant TouchEvent in the list.\n *\n * If the gesture is to be considered terminated, e.g. because there is\n * \"touchcancel\" in the list, returns `null`.\n *\n * Note that, `deltaX`/`deltaY` are the end X/Y coordinate minus the start X/Y\n * coordinate. For natural scroll direction you should swap their signs.\n *\n * @param {} deltaThreshold If the change of x and y coordinate are both less\n *                          than this, it is marked as not significant.\n *\n * @category Gestures\n */\nexport const getTouchDiff = (\n  events: Event[],\n  deltaThreshold = 0,\n): TouchDiff[] | null => {\n  // Group each touch point of each event by identifier, so that we can get the\n  // start and end coordinate of each finger\n  const groupedTouches = newXMap<number, Touch[]>((): Touch[] => []);\n\n  for (const event of events) {\n    if (!MH.isTouchEvent(event)) {\n      continue;\n    }\n\n    if (event.type === MC.S_TOUCHCANCEL) {\n      return null; // gesture terminated\n    }\n\n    for (const touch of event.touches) {\n      groupedTouches.sGet(touch.identifier).push(touch);\n    }\n  }\n\n  const moves: TouchDiff[] = [];\n\n  for (const touchList of groupedTouches.values()) {\n    const nTouches = MH.lengthOf(touchList);\n    if (nTouches < 2) {\n      // Only one event had that finger in it, so there's no move for it\n      continue;\n    }\n\n    const firstTouch = touchList[0];\n    const lastTouch = touchList[nTouches - 1];\n    const startX = firstTouch.clientX;\n    const startY = firstTouch.clientY;\n\n    const endX = lastTouch.clientX;\n    const endY = lastTouch.clientY;\n\n    const deltaX = endX - startX;\n    const deltaY = endY - startY;\n\n    const isSignificant = maxAbs(deltaX, deltaY) >= deltaThreshold;\n\n    // Consider it a move in one of the 4 cardinal ones\n    moves.push({\n      startX,\n      startY,\n      endX,\n      endY,\n      deltaX,\n      deltaY,\n      isSignificant,\n    });\n  }\n\n  return moves;\n};\n\n// --------------------\n\nconst getHoldTime = (events: Event[]) => {\n  const firstStart = events.findIndex((e) => e.type === MC.S_TOUCHSTART);\n  const firstMove = events.findIndex((e) => e.type === MC.S_TOUCHMOVE);\n  if (firstStart < 0 || firstMove < 1) {\n    return 0;\n  }\n\n  return events[firstMove].timeStamp - events[firstStart].timeStamp;\n};\n","/**\n * @module\n * @ignore\n * @internal\n *\n * FULL CREDIT FOR THIS GOES TO\n * https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n *\n * ADAPTED FROM THE ABOVE SOURCE\n *\n * ORIGINAL COPYRIGHT IN FILE PRESERVED:\n *\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * ORIGINAL LICENSE\n *\n * BSD License\n *\n * For FixedDataTable software\n *\n * Copyright (c) 2015, Facebook, Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *\n *  * Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n *  * Neither the name Facebook nor the names of its contributors may be used to\n *    endorse or promote products derived from this software without specific\n *    prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { settings } from \"@lisn/globals/settings\";\n\n/**\n * ORIGINAL DEVELOPER COMMENT PRESERVED\n *\n * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n * complicated, thus this doc is long and (hopefully) detailed enough to answer\n * your questions.\n *\n * If you need to react to the mouse wheel in a predictable way, this code is\n * like your bestest friend. * hugs *\n *\n * As of today, there are 4 DOM event types you can listen to:\n *\n *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n *\n * So what to do?  The is the best:\n *\n *   normalizeWheel.getEventType();\n *\n * In your event callback, use this code to get sane interpretation of the\n * deltas.  This code will return an object with properties:\n *\n *   spinX   -- normalized spin speed (use for zoom) - x plane\n *   spinY   -- \" - y plane\n *   pixelX  -- normalized distance (to pixels) - x plane\n *   pixelY  -- \" - y plane\n *\n * Wheel values are provided by the browser assuming you are using the wheel to\n * scroll a web page by a number of lines or pixels (or pages).  Values can vary\n * significantly on different platforms and browsers, forgetting that you can\n * scroll at different speeds.  Some devices (like trackpads) emit more events\n * at smaller increments with fine granularity, and some emit massive jumps with\n * linear speed or acceleration.\n *\n * This code does its best to normalize the deltas for you:\n *\n *   - spin is trying to normalize how far the wheel was spun (or trackpad\n *     dragged).  This is super useful for zoom support where you want to\n *     throw away the chunky scroll steps on the PC and make those equal to\n *     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n *     resolve a single slow step on a wheel to 1.\n *\n *   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n *     get the crazy differences between browsers, but at least it'll be in\n *     pixels!\n *\n *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n *     should translate to positive value zooming IN, negative zooming OUT.\n *     This matches the newer 'wheel' event.\n *\n * Why are there spinX, spinY (or pixels)?\n *\n *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n *     with a mouse.  It results in side-scrolling in the browser by default.\n *\n *   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n *\n *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n *     probably is by browsers in conjunction with fancy 3D controllers .. but\n *     you know.\n *\n * Implementation info:\n *\n * Examples of 'wheel' event if you scroll slowly (down) by one step with an\n * average mouse:\n *\n *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n *\n * On the trackpad:\n *\n *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n *\n * On other/older browsers.. it's more complicated as there can be multiple and\n * also missing delta values.\n *\n * The 'wheel' event is more standard:\n *\n * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n *\n * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n * backward compatibility with older events.  Those other values help us\n * better normalize spin speed.  Example of what the browsers provide:\n *\n *                          | event.wheelDelta | event.detail\n *        ------------------+------------------+--------------\n *          Safari v5/OS X  |       -120       |       0\n *          Safari v5/Win7  |       -120       |       0\n *         Chrome v17/OS X  |       -120       |       0\n *         Chrome v17/Win7  |       -120       |       0\n *                IE9/Win7  |       -120       |   undefined\n *         Firefox v4/OS X  |     undefined    |       1\n *         Firefox v4/Win7  |     undefined    |       3\n */\nexport const normalizeWheel = (event: LegacyWheelEvent): WheelData => {\n  let spinX = 0,\n    spinY = 0,\n    pixelX = event.deltaX,\n    pixelY = event.deltaY;\n\n  const LINE = settings.deltaLineHeight;\n\n  // Legacy\n  if (event.detail !== undefined) {\n    spinY = event.detail;\n  }\n  if (event.wheelDelta !== undefined) {\n    spinY = -event.wheelDelta / 120;\n  }\n  if (event.wheelDeltaY !== undefined) {\n    spinY = -event.wheelDeltaY / 120;\n  }\n  if (event.wheelDeltaX !== undefined) {\n    spinX = -event.wheelDeltaX / 120;\n  }\n\n  if ((pixelX || pixelY) && event.deltaMode) {\n    if (event.deltaMode === 1) {\n      // delta in LINE units\n      pixelX *= LINE;\n      pixelY *= LINE;\n    } else {\n      // delta in PAGE units\n      pixelX *= settings.deltaPageWidth;\n      pixelY *= settings.deltaPageHeight;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pixelX && !spinX) {\n    spinX = pixelX < 1 ? -1 : 1;\n  }\n  if (pixelY && !spinY) {\n    spinY = pixelY < 1 ? -1 : 1;\n  }\n\n  return { spinX, spinY, pixelX, pixelY };\n};\n\nexport type WheelData = {\n  spinX: number;\n  spinY: number;\n  pixelX: number;\n  pixelY: number;\n};\n\n// --------------------\n\ntype LegacyWheelEvent = WheelEvent & {\n  wheelDelta?: number;\n  wheelDeltaX?: number;\n  wheelDeltaY?: number;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Direction, GestureIntent } from \"@lisn/globals/types\";\n\nimport { getVectorDirection } from \"@lisn/utils/directions\";\n\nimport { havingMaxAbs } from \"@lisn/utils/math\";\nimport { normalizeWheel } from \"@lisn/utils/normalize-wheel\";\n\nimport { GestureFragment, addDeltaZ } from \"@lisn/utils/gesture\";\n\n/**\n * Returns a {@link GestureFragment} for the given events. Only \"wheel\" events\n * will be considered.\n *\n * If there are no \"wheel\" events in the given list of events, returns `false`.\n *\n * The deltas of all events are summed together before determining final delta\n * and direction.\n *\n * If the events are of conflicting types, i.e. some scroll, some zoom, then\n * the intent will be \"unknown\" and the direction will be \"ambiguous\".\n *\n * If the deltas sum up to 0, the direction will be \"none\".\n *\n * **IMPORTANT NOTES ON THE DELTA VALUES**\n *\n * For wheel gestures the deltas are _highly_ unreliable, especially when\n * zooming (Control + wheel or pinching trackpad). You should not assume they\n * correspond to the would-be scroll or zoom amount that the browser would do.\n * But they can be used to determine relative amounts for animating, etc.\n *\n * If the browser reports the delta values of a WheelEvent to be in mode \"line\",\n * then a configurable fixed value is used\n * ({@link Settings.settings.deltaLineHeight | settings.deltaLineHeight}).\n *\n * If the browser reports the delta values of a WheelEvent to be in mode \"page\",\n * then a configurable fixed value is used\n * ({@link Settings.settings.deltaPageWidth | settings.deltaPageWidth} and\n * ({@link Settings.settings.deltaPageHeight | settings.deltaPageHeight}).\n *\n * For zoom intents `deltaZ` is based on what the browser reports as the\n * `deltaY`, which in most browsers roughly corresponds to a percentage zoom\n * factor.\n *\n * @param {} [options.angleDiffThreshold] See {@link getVectorDirection}.\n *                                        Default is 5.\n *\n * @return {} `false` if there are no \"wheel\" events in the list, otherwise a\n * {@link GestureFragment}.\n *\n * @category Gestures\n */\nexport const getWheelGestureFragment = (\n  events: Event | readonly Event[],\n  options?: {\n    angleDiffThreshold?: number;\n  },\n): GestureFragment | null | false => {\n  if (!MH.isIterableObject(events)) {\n    events = [events];\n  }\n\n  let direction: Direction = MC.S_NONE;\n  let intent: GestureIntent | null = null;\n  let deltaX = 0,\n    deltaY = 0,\n    deltaZ = 1;\n\n  for (const event of events) {\n    if (!MH.isWheelEvent(event) || event.type !== MC.S_WHEEL) {\n      continue;\n    }\n\n    const data = normalizeWheel(event);\n    let thisIntent: GestureIntent = MC.S_SCROLL;\n    let thisDeltaX = data.pixelX;\n    let thisDeltaY = data.pixelY;\n    let thisDeltaZ = 1;\n    const maxDelta = havingMaxAbs(thisDeltaX, thisDeltaY);\n\n    if (event.ctrlKey && !thisDeltaX) {\n      // Browsers report negative deltaY for zoom in, so swap sign\n      let percentage = -maxDelta;\n      // If it's more than 50, assume it's a mouse wheel => delta is roughly\n      // multiple of 10%. Otherwise a trackpad => delta is roughly multiple of 1%\n      if (MH.abs(percentage) >= 50) {\n        percentage /= 10;\n      }\n\n      thisDeltaZ = 1 + percentage / 100;\n\n      thisDeltaX = thisDeltaY = 0;\n      thisIntent = MC.S_ZOOM;\n    } else if (event.shiftKey && !thisDeltaX) {\n      // Holding Shift while turning wheel or swiping trackpad in vertically\n      // results in sideways scroll.\n      thisDeltaX = thisDeltaY;\n      thisDeltaY = 0;\n    }\n\n    deltaX += thisDeltaX;\n    deltaY += thisDeltaY;\n    deltaZ = addDeltaZ(deltaZ, thisDeltaZ);\n\n    if (!thisIntent) {\n      // not a relevant key\n    } else if (!intent) {\n      intent = thisIntent;\n    } else if (intent !== thisIntent) {\n      // mixture of zoom and scroll\n      intent = MC.S_UNKNOWN;\n    }\n  }\n\n  if (!intent) {\n    return false; // no relevant events\n  } else if (intent === MC.S_UNKNOWN) {\n    direction = MC.S_AMBIGUOUS;\n  } else if (intent === MC.S_ZOOM) {\n    direction = deltaZ > 1 ? MC.S_IN : deltaZ < 1 ? MC.S_OUT : MC.S_NONE;\n  } else {\n    direction = getVectorDirection(\n      [deltaX, deltaY],\n      options?.angleDiffThreshold,\n    );\n  }\n\n  return direction === MC.S_NONE\n    ? false\n    : {\n        device: MC.S_WHEEL,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n      };\n};\n","/**\n * @module Watchers/GestureWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureIntent,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  addClasses,\n  removeClasses,\n  setNumericStyleProps,\n} from \"@lisn/utils/css-alter\";\nimport { isValidDirection } from \"@lisn/utils/directions\";\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { getDebouncedHandler } from \"@lisn/utils/tasks\";\n\nimport { addDeltaZ } from \"@lisn/utils/gesture\";\n\nimport {\n  isValidInputDevice,\n  isValidIntent,\n  GestureFragment,\n  DEVICES,\n  INTENTS,\n} from \"@lisn/utils/gesture\";\nimport { getKeyGestureFragment } from \"@lisn/utils/gesture-key\";\nimport { getPointerGestureFragment } from \"@lisn/utils/gesture-pointer\";\nimport { getTouchGestureFragment } from \"@lisn/utils/gesture-touch\";\nimport { getWheelGestureFragment } from \"@lisn/utils/gesture-wheel\";\nimport { logError } from \"@lisn/utils/log\";\nimport {\n  maxAbs,\n  toNonNegNum,\n  toPosNum,\n  toNumWithBounds,\n} from \"@lisn/utils/math\";\nimport { randId, objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { LoggerInterface } from \"@lisn/debug/types\";\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link GestureWatcher} listens for user gestures resulting from wheel,\n * pointer, touch or key input events.\n *\n * It supports scroll, zoom or drag type gestures.\n *\n * It manages registered callbacks globally and reuses event listeners for more\n * efficient performance.\n */\nexport class GestureWatcher {\n  /**\n   * Call the given handler whenever the user performs a gesture on the target\n   * matching the given options.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same event target, even if the options differ. If the handler has already\n   * been added for this target, either using {@link onGesture} or\n   * {@link trackGesture}, then it will be removed and re-added with the\n   * current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onGesture: (\n    target: EventTarget,\n    handler: OnGestureHandler,\n    options?: OnGestureOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offGesture: (target: EventTarget, handler: OnGestureHandler) => void;\n\n  /**\n   * This is the same as {@link onGesture} except that if `handler` is not\n   * given, then it defaults to an internal handler that updates a set of CSS\n   * variables on the target's style:\n   *\n   *   - `--lisn-js--<Intent>-delta-x`\n   *   - `--lisn-js--<Intent>-delta-y`\n   *   - `--lisn-js--<Intent>-delta-z`\n   *\n   * where and `<Intent>` is one of {@link GestureIntent} and the delta X, Y\n   * and Z are the _total summed up_ `deltaX`, `deltaY` and `deltaZ` since the\n   * callback was added, summed over all devices used (key, touch, etc).\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackGesture} or using\n   * {@link onGesture}, then it will be removed and re-added with the current\n   * options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly trackGesture: (\n    element: Element,\n    handler?: OnGestureHandler | null,\n    options?: OnGestureOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackGesture}.\n   */\n  readonly noTrackGesture: (\n    element: Element,\n    handler?: OnGestureHandler | null,\n  ) => void;\n\n  /**\n   * Creates a new instance of GestureWatcher with the given\n   * {@link GestureWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: GestureWatcherConfig = {}) {\n    return new GestureWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of GestureWatcher with the given\n   * {@link GestureWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: GestureWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new GestureWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: GestureWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"GestureWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"GestureWatcher\", logAtCreation: config })\n      : null;\n\n    const allCallbacks = newXWeakMap<\n      EventTarget,\n      Map<\n        OnGestureHandler,\n        {\n          _callback: OnGestureCallback;\n          _wrapper: OnGestureHandlerWrapper;\n          _options: OnGestureOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    // For each target and event type, add only 1 global listener that will then\n    // manage the event queues and callbacks.\n    const allListeners = newXWeakMap<\n      EventTarget,\n      Map<GestureDevice, DeviceListeners>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const createCallback = (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      options: OnGestureOptionsInternal,\n    ): OnGestureCallback => {\n      MH.remove(allCallbacks.get(target)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler for\", options);\n      const { _callback, _wrapper } = getCallbackAndWrapper(\n        handler,\n        options,\n        logger,\n      );\n\n      _callback.onRemove(() => deleteHandler(target, handler, options));\n\n      allCallbacks.sGet(target).set(handler, {\n        _callback,\n        _wrapper,\n        _options: options,\n      });\n\n      return _callback;\n    };\n\n    // ----------\n\n    // async for consistency with other watchers and future compatibility in\n    // case of change needed\n    const setupOnGesture = async (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      userOptions: OnGestureOptions | undefined,\n    ) => {\n      const options = getOptions(config, userOptions || {});\n      createCallback(target, handler, options);\n\n      for (const device of options._devices || DEVICES) {\n        let listeners = allListeners.get(target)?.get(device);\n        if (listeners) {\n          debug: logger?.debug4(\n            `Listeners already added for ${device}`,\n            target,\n            options,\n          );\n        } else {\n          debug: logger?.debug4(\n            `Adding listeners for ${device}`,\n            target,\n            options,\n          );\n\n          listeners = setupListeners(target, device, options);\n          allListeners.sGet(target).set(device, listeners);\n        }\n\n        listeners._nCallbacks++;\n        if (options._preventDefault) {\n          listeners._nPreventDefault++;\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      target: EventTarget,\n      handler: OnGestureHandler,\n      options: OnGestureOptionsInternal,\n    ) => {\n      MH.deleteKey(allCallbacks.get(target), handler);\n      allCallbacks.prune(target);\n\n      for (const device of options._devices || DEVICES) {\n        const listeners = allListeners.get(target)?.get(device);\n        if (listeners) {\n          listeners._nCallbacks--;\n          if (options._preventDefault) {\n            listeners._nPreventDefault--;\n          }\n\n          if (!listeners._nCallbacks) {\n            debug: logger?.debug4(\n              `No more callbacks for target and device ${device}; removing listeners`,\n              target,\n            );\n\n            MH.deleteKey(allListeners.get(target), device);\n            listeners._remove();\n          }\n        }\n      }\n    };\n\n    // ----------\n\n    const invokeCallbacks = (\n      target: EventTarget,\n      device: GestureDevice,\n      event: Event,\n    ): boolean /* true if terminated */ => {\n      const preventDefault =\n        (allListeners.get(target)?.get(device)?._nPreventDefault || 0) > 0;\n\n      let isTerminated = false;\n      for (const { _wrapper } of allCallbacks.get(target)?.values() || []) {\n        isTerminated =\n          _wrapper(target, device, event, preventDefault) || isTerminated;\n      }\n\n      return isTerminated;\n    };\n\n    // ----------\n\n    const setupListeners = (\n      target: EventTarget,\n      device: GestureDevice,\n      options: OnGestureOptionsInternal,\n    ): DeviceListeners => {\n      const intents = options._intents;\n      let hasAddedTabIndex = false;\n      let hasPreventedSelect = false;\n\n      if (\n        device === MC.S_KEY &&\n        MH.isElement(target) &&\n        !MH.getTabIndex(target)\n      ) {\n        hasAddedTabIndex = true;\n        // enable element to receive keydown events\n        MH.setTabIndex(target);\n      } else if (MH.isElement(target) && device === MC.S_TOUCH) {\n        if (options._preventDefault) {\n          addClasses(target, MC.PREFIX_NO_TOUCH_ACTION);\n        }\n\n        if (!intents || MH.includes(intents, MC.S_DRAG)) {\n          hasPreventedSelect = true;\n          preventSelect(target);\n        }\n      }\n\n      const addOrRemoveListeners = (\n        action: \"add\" | \"remove\",\n        listener: EventListener,\n        eventTypes: readonly (keyof GlobalEventHandlersEventMap)[],\n      ) => {\n        const method =\n          action === \"add\" ? addEventListenerTo : removeEventListenerFrom;\n        for (const eventType of eventTypes) {\n          debug: logger?.debug8(`${action} listener for ${eventType}`, target);\n          method(target, eventType, listener, {\n            passive: false,\n            capture: true,\n          });\n        }\n      };\n\n      const addInitialListener = () =>\n        addOrRemoveListeners(\"add\", initialListener, initiatingEvents[device]);\n\n      const removeInitialListener = () =>\n        addOrRemoveListeners(\n          \"remove\",\n          initialListener,\n          initiatingEvents[device],\n        );\n\n      const addOngoingListener = () =>\n        addOrRemoveListeners(\"add\", processEvent, ongoingEvents[device]);\n\n      const removeOngoingListener = () =>\n        addOrRemoveListeners(\"remove\", processEvent, ongoingEvents[device]);\n\n      const initialListener = (event: Event) => {\n        processEvent(event);\n        removeInitialListener();\n        addOngoingListener();\n      };\n\n      const processEvent = (event: Event) => {\n        const isTerminated = invokeCallbacks(target, device, event);\n        if (isTerminated) {\n          removeOngoingListener();\n          addInitialListener();\n        }\n      };\n\n      addInitialListener();\n\n      return {\n        _nCallbacks: 0,\n        _nPreventDefault: 0,\n        _remove: () => {\n          if (MH.isElement(target)) {\n            if (hasAddedTabIndex) {\n              MH.unsetTabIndex(target);\n            }\n\n            removeClasses(target, MC.PREFIX_NO_TOUCH_ACTION);\n\n            if (hasPreventedSelect) {\n              undoPreventSelect(target);\n            }\n          }\n\n          removeOngoingListener();\n          removeInitialListener();\n        },\n      };\n    };\n\n    // ----------\n\n    this.trackGesture = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setGestureCssProps;\n        // initial values\n        for (const intent of INTENTS) {\n          setGestureCssProps(element, {\n            intent,\n            totalDeltaX: 0,\n            totalDeltaY: 0,\n            totalDeltaZ: 1,\n          });\n        }\n      }\n\n      return setupOnGesture(element, handler, options);\n    };\n\n    // ----------\n\n    this.noTrackGesture = (element, handler?) => {\n      if (!handler) {\n        handler = setGestureCssProps;\n\n        // delete the properties\n        for (const intent of INTENTS) {\n          setGestureCssProps(element, { intent });\n        }\n      }\n\n      this.offGesture(element, handler);\n    };\n\n    // ----------\n\n    this.onGesture = setupOnGesture;\n\n    // ----------\n\n    this.offGesture = (target, handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(target)?.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type GestureWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnGestureOptions.preventDefault | preventDefault} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.debounceWindow | debounceWindow} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 150\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.deltaThreshold | deltaThreshold} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 5\n   */\n  deltaThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.angleDiffThreshold | angleDiffThreshold} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * It does not make much sense to set this to 0.\n   *\n   * The value is in _degrees_, not radians.\n   *\n   * @defaultValue 35\n   */\n  angleDiffThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.naturalTouchScroll | naturalTouchScroll} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue true\n   */\n  naturalTouchScroll?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.touchDragHoldTime | touchDragHoldTime} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 500\n   */\n  touchDragHoldTime?: number;\n\n  /**\n   * The default value for\n   * {@link OnGestureOptions.touchDragNumFingers | touchDragNumFingers} in calls to\n   * {@link GestureWatcher.onGesture}.\n   *\n   * @defaultValue 1\n   */\n  touchDragNumFingers?: number;\n};\n\n/**\n * @interface\n */\nexport type OnGestureOptions = {\n  /**\n   * One or more device types to listen for. If not specified, then all devices\n   * are enabled.\n   *\n   * It can be a comma-separated list of {@link GestureDevice}s or an array of\n   * such devices.\n   *\n   * @defaultValue undefined\n   */\n  devices?: CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If given, callback will only be called if the gesture's direction is one\n   * of the given ones.\n   *\n   * It can be a comma-separated list of {@link Direction}s or an array of such\n   * directions.\n   *\n   * @defaultValue undefined\n   */\n  directions?: CommaSeparatedStr<Direction> | Direction[];\n\n  /**\n   * If given, callback will only be called if the gesture's intent is one\n   * of the given ones.\n   *\n   * It can be a comma-separated list of {@link GestureIntent}s or an\n   * array of such intents.\n   *\n   * @defaultValue undefined\n   */\n  intents?: CommaSeparatedStr<GestureIntent> | GestureIntent[];\n\n  /**\n   * Set minimum total delta X. Further reductions in delta X below this value\n   * will be ignored.\n   *\n   * The value is in pixels and can be negative.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaX?: number;\n\n  /**\n   * Set maximum total delta X. Further increase in delta X above this value\n   * will be ignored.\n   *\n   * The value is in pixels.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaX?: number;\n\n  /**\n   * Set minimum total delta Y. Further reductions in delta Y below this value\n   * will be ignored.\n   *\n   * The value is in pixels and can be negative.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaY?: number;\n\n  /**\n   * Set maximum total delta Y. Further increase in delta Y above this value\n   * will be ignored.\n   *\n   * The value is in pixels.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaY?: number;\n\n  /**\n   * Set minimum total delta Z. Further reductions in delta Z below this value\n   * will be ignored.\n   *\n   * The value is in percentage zoom, relative to 1, and can be less than 1 but\n   * must be > 0.1 which is a hard minimum.\n   *\n   * @defaultValue undefined\n   */\n  minTotalDeltaZ?: number;\n\n  /**\n   * Set maximum total delta Z. Further increase in delta Z above this value\n   * will be ignored.\n   *\n   * The value is in percentage zoom, relative to 1, and must be positive.\n   *\n   * @defaultValue undefined\n   */\n  maxTotalDeltaZ?: number;\n\n  /**\n   * If true, the events of the gesture, e.g. relevant key presses or touch\n   * moves, etc, will have their default action prevented.\n   *\n   * **IMPORTANT:** For pointer gestures, then pointer/mouse down and click\n   * will be prevented.\n   *\n   * @defaultValue {@link GestureWatcherConfig.preventDefault}\n   */\n  preventDefault?: boolean;\n\n  /**\n   * If given, callback will be called at most once every `debounceWindow`\n   * milliseconds.\n   *\n   * Note that if both `debounceWindow` and `deltaThreshold` are set, _both_\n   * must be exceeded before callback is called.\n   *\n   * @defaultValue {@link GestureWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n\n  /**\n   * Callback will only be called when the gesture's accumulated delta, since\n   * the last time callback was called, exceeds `deltaThreshold`.\n   *\n   * At least one of the three deltas (X, Y or Z) must exceed this number (in\n   * absolute value). Note that when comparing `deltaZ`, it is multiplied by\n   * 100 since it represents fractions of 1 (100%). So supplying\n   * `deltaThreshold` of 10 means is equivalent to the following condition:\n   *\n   * ```\n   * abs(deltaX) >= 10 || abs(deltaY) >= 10 ||  abs(1 - deltaZ) >= 0.1\n   * ```\n   *\n   * Accumulation of the delta ends if the gesture is terminated, for example,\n   * in case of touch gestures, by a \"touchcancel\" event of by the final finger\n   * lifting off..\n   *\n   * Note that if both `debounceWindow` and `deltaThreshold` are set, _both_\n   * must be exceeded before callback is called.\n   *\n   * @defaultValue {@link GestureWatcherConfig.deltaThreshold}\n   */\n  deltaThreshold?: number;\n\n  /**\n   * See {@link Utils.getVectorDirection | getVectorDirection}.\n   *\n   * @defaultValue {@link GestureWatcherConfig.angleDiffThreshold}\n   */\n  angleDiffThreshold?: number;\n\n  /**\n   * Whether touch scroll gestures follow the natural direction: swipe up\n   * with scroll intent results in direction down and swipe down results in\n   * direction up.\n   *\n   * @defaultValue {@link GestureWatcherConfig.naturalTouchScroll}\n   */\n  naturalTouchScroll?: boolean;\n\n  /**\n   * If the user presses and holds on a touchscreen for at least the given\n   * amount of milliseconds before moving the finger(s), touch gestures other\n   * than pinch will be treated as a drag intent instead of scroll as long as\n   * the number of fingers touching the screen is {@link touchDragNumFingers}.\n   *\n   * Set to 0 in order to treat _all_ non-pinch touch gestures as drag.\n   *\n   * Set to a negative number in order to treat _all_ non-pinch touch gestures\n   * as scroll.\n   *\n   * @defaultValue {@link GestureWatcherConfig.touchDragHoldTime}\n   */\n  touchDragHoldTime?: number;\n\n  /**\n   * The number of fingers that could be considered a drag intent for touch\n   * gestures.\n   *\n   * @defaultValue {@link GestureWatcherConfig.touchDragHoldTime}\n   */\n  touchDragNumFingers?: number;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the event target that was passed to the {@link GestureWatcher.onGesture}\n *   call (equivalent to\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget | Event:currentTarget}).\n * - the {@link GestureData} that describes the gesture's progression since the\n *   last time the callback was called and since the callback was added.\n */\nexport type OnGestureHandlerArgs = [EventTarget, GestureData, Event[]];\nexport type OnGestureCallback = Callback<OnGestureHandlerArgs>;\nexport type OnGestureHandler =\n  | CallbackHandler<OnGestureHandlerArgs>\n  | OnGestureCallback;\n\nexport type GestureData = {\n  device: GestureDevice;\n  direction: Direction;\n  intent: GestureIntent;\n\n  /**\n   * Delta in the horizontal direction since the start of the gesture.\n   */\n  deltaX: number;\n\n  /**\n   * Delta in the vertical direction since the start of the gesture.\n   */\n  deltaY: number;\n\n  /**\n   * Relative fractional zoom in or out for zoom intents since the start of\n   * the gesture.\n   *\n   * For zoom in, `deltaZ` is always > 1, and for zoom out it is < 1.\n   *\n   * For non-zoom gestures it is 1.\n   */\n  deltaZ: number;\n\n  /**\n   * The time in milliseconds it took for the gesture. This will be the\n   * difference in timestamps between the first and last event that composed\n   * the gesture. For key and wheel gestures this could be 0, since 1 event is\n   * sufficient for them.\n   */\n  time: number;\n  // TODO totalTime, velocity (bound by max), averageVelocity (bound by max)\n\n  /**\n   * Delta in the horizontal direction since the callback was added.\n   */\n  totalDeltaX: number;\n\n  /**\n   * Delta in the vertical direction since the callback was added.\n   */\n  totalDeltaY: number;\n\n  /**\n   * Percentage (relative) zoom in or out for zoom intents since the callback\n   * was added.\n   */\n  totalDeltaZ: number;\n};\n\n// ----------------------------------------\n\ntype GestureWatcherConfigInternal = {\n  _preventDefault: boolean;\n  _debounceWindow: number;\n  _deltaThreshold: number;\n  _angleDiffThreshold: number;\n  _naturalTouchScroll: boolean;\n  _touchDragHoldTime: number;\n  _touchDragNumFingers: number;\n};\n\ntype OnGestureOptionsInternal = {\n  _devices: GestureDevice[] | null;\n  _directions: Direction[] | null;\n  _intents: GestureIntent[] | null;\n  _minTotalDeltaX: number | null;\n  _maxTotalDeltaX: number | null;\n  _minTotalDeltaY: number | null;\n  _maxTotalDeltaY: number | null;\n  _minTotalDeltaZ: number | null;\n  _maxTotalDeltaZ: number | null;\n  _preventDefault: boolean;\n  _debounceWindow: number;\n  _deltaThreshold: number;\n  _angleDiffThreshold: number;\n  _naturalTouchScroll: boolean;\n  _touchDragHoldTime: number;\n  _touchDragNumFingers: number;\n};\n\ntype OnGestureHandlerWrapper = (\n  _target: EventTarget,\n  _device: GestureDevice,\n  _event: Event,\n  _preventDefault: boolean,\n) => boolean;\n\n// Specific to a combination of target + device\ntype DeviceListeners = {\n  _nCallbacks: number; // total number of callbacks\n  _nPreventDefault: number; // total number wanting to prevent default action\n  _remove: () => void;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, GestureWatcher>();\n\nconst getConfig = (\n  config: GestureWatcherConfig,\n): GestureWatcherConfigInternal => {\n  return {\n    _preventDefault: config.preventDefault ?? true,\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 150),\n    _deltaThreshold: toNonNegNum(config.deltaThreshold, 5),\n    _angleDiffThreshold: toPosNum(config.angleDiffThreshold, 35),\n    _naturalTouchScroll: config.naturalTouchScroll ?? true,\n    _touchDragHoldTime: config.touchDragHoldTime ?? 500,\n    _touchDragNumFingers: config.touchDragNumFingers ?? 1,\n  };\n};\n\nconst initiatingEvents: {\n  [D in GestureDevice]: readonly (keyof GlobalEventHandlersEventMap)[];\n} = {\n  key: [MC.S_KEYDOWN],\n  // If the browser doesn't support pointer events, then\n  // addEventListenerTo will transform it into mousedown\n  //\n  // We need to listen for click, since that occurs after a pointerup (i.e.\n  // after a gesure is terminated and the ongoing listeners removed), but it\n  // needs to have its default action prevented.\n  pointer: [MC.S_POINTERDOWN, MC.S_CLICK],\n  touch: [MC.S_TOUCHSTART],\n  wheel: [MC.S_WHEEL],\n} as const;\n\nconst ongoingEvents: {\n  [D in GestureDevice]: readonly (keyof GlobalEventHandlersEventMap)[];\n} = {\n  key: [MC.S_KEYDOWN],\n  pointer: [\n    // If the browser doesn't support point events, then\n    // addEventListenerTo will transform them into mouse*\n    MC.S_POINTERDOWN,\n    MC.S_POINTERUP, // would terminate\n    MC.S_POINTERMOVE,\n    MC.S_POINTERCANCEL, // would terminate\n    MC.S_CLICK, // would terminate; can be default-prevented\n  ],\n  touch: [MC.S_TOUCHSTART, MC.S_TOUCHEND, MC.S_TOUCHMOVE, MC.S_TOUCHCANCEL],\n  wheel: [MC.S_WHEEL],\n} as const;\n\nconst fragmentGetters: {\n  [D in GestureDevice]: (\n    events: Event[],\n    options: {\n      deltaThreshold?: number;\n      angleDiffThreshold?: number;\n      reverseScroll?: boolean;\n      dragHoldTime?: number;\n      dragNumFingers?: number;\n    },\n  ) => GestureFragment | null | false;\n} = {\n  [MC.S_KEY]: getKeyGestureFragment,\n  [MC.S_POINTER]: getPointerGestureFragment,\n  [MC.S_TOUCH]: getTouchGestureFragment,\n  [MC.S_WHEEL]: getWheelGestureFragment,\n};\n\nconst getOptions = (\n  config: GestureWatcherConfigInternal,\n  options: OnGestureOptions,\n): OnGestureOptionsInternal => {\n  const debounceWindow = toNonNegNum(\n    options[MC.S_DEBOUNCE_WINDOW],\n    config._debounceWindow, // watcher is never debounced, so apply default here\n  );\n  const deltaThreshold = toNonNegNum(\n    options.deltaThreshold,\n    config._deltaThreshold,\n  );\n\n  return {\n    _devices:\n      validateStrList(\"devices\", options.devices, isValidInputDevice) || null,\n    _directions:\n      validateStrList(\"directions\", options.directions, isValidDirection) ||\n      null,\n    _intents:\n      validateStrList(\"intents\", options.intents, isValidIntent) || null,\n    _minTotalDeltaX: options.minTotalDeltaX ?? null,\n    _maxTotalDeltaX: options.maxTotalDeltaX ?? null,\n    _minTotalDeltaY: options.minTotalDeltaY ?? null,\n    _maxTotalDeltaY: options.maxTotalDeltaY ?? null,\n    _minTotalDeltaZ: options.minTotalDeltaZ ?? null,\n    _maxTotalDeltaZ: options.maxTotalDeltaZ ?? null,\n    _preventDefault: options.preventDefault ?? config._preventDefault,\n    _debounceWindow: debounceWindow,\n    _deltaThreshold: deltaThreshold,\n    _angleDiffThreshold: toNonNegNum(\n      options.angleDiffThreshold,\n      config._angleDiffThreshold,\n    ),\n    _naturalTouchScroll:\n      options.naturalTouchScroll ?? config._naturalTouchScroll,\n    _touchDragHoldTime: options.touchDragHoldTime ?? config._touchDragHoldTime,\n    _touchDragNumFingers:\n      options.touchDragNumFingers ?? config._touchDragNumFingers,\n  };\n};\n\n// Since each callback needs to accumulate events during its debounce window\n// and until its threshold is exceeded, we use a wrapper around the\n// user-supplied handler to do that.\nconst getCallbackAndWrapper = (\n  handler: OnGestureHandler,\n  options: OnGestureOptionsInternal,\n  logger: LoggerInterface | null,\n): { _callback: OnGestureCallback; _wrapper: OnGestureHandlerWrapper } => {\n  let totalDeltaX = 0,\n    totalDeltaY = 0,\n    totalDeltaZ = 1;\n  // When there's a pointer down, drag then pointerup, since we prevent\n  // pointerdown default action, this results in a click event shortly\n  // afterwards even when there's been a movement of the mouse. We detect that\n  // and prevent this click.\n  let preventNextClick = false;\n\n  const directions = options._directions;\n  const intents = options._intents;\n  const minTotalDeltaX = options._minTotalDeltaX;\n  const maxTotalDeltaX = options._maxTotalDeltaX;\n  const minTotalDeltaY = options._minTotalDeltaY;\n  const maxTotalDeltaY = options._maxTotalDeltaY;\n  const minTotalDeltaZ = options._minTotalDeltaZ;\n  const maxTotalDeltaZ = options._maxTotalDeltaZ;\n  const deltaThreshold = options._deltaThreshold;\n  const angleDiffThreshold = options._angleDiffThreshold;\n  const reverseScroll = !options._naturalTouchScroll;\n  const dragHoldTime = options._touchDragHoldTime;\n  const dragNumFingers = options._touchDragNumFingers;\n\n  // The event queue is cleared when the threshold is exceeded AND the debounce\n  // window has passed. It's not necessary for the actual handler to be called\n  // then (e.g. if the direction or intent doesn't match, it won't be).\n  const eventQueue: Event[] = [];\n  const id = randId();\n\n  // Since handler could be a function or a callback (not callable), we wrap it\n  // so that in case it's already a callback, its removal will result in\n  // deleteHandler getting called. It is not debounced itself, instead there's\n  // a debounced wrapper that invokes it.\n  const callback = wrapCallback(handler);\n\n  // The debounced callback wrapper is what is debounced.\n  // It accumulates total deltas and checks if the conditions (of threshold,\n  // direction and intent) are satisfied before calling the real handler.\n  //\n  // Most importantly, since it is only called when the debounce window has\n  // expired it can clear the event queue if the threshold is also exceeded.\n  const debouncedWrapper = getDebouncedHandler(\n    options._debounceWindow,\n    (\n      target: EventTarget,\n      fragment: GestureFragment,\n      eventQueueCopy: Event[],\n    ) => {\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      const deltaX = fragment.deltaX;\n      const deltaY = fragment.deltaY;\n      const deltaZ = fragment.deltaZ;\n      const device = fragment.device;\n\n      if (\n        MH.round(maxAbs(deltaX, deltaY, (1 - deltaZ) * 100)) < deltaThreshold\n      ) {\n        debug: logger?.debug7(\n          `[${id}] Delta threshold not exceeded for callback`,\n        );\n        return;\n      }\n\n      debug: logger?.debug9(`[${id}] Done summing events for ${device}`);\n      clearEventQueue(device, eventQueue);\n\n      const newTotalDeltaX = toNumWithBounds(totalDeltaX + deltaX, {\n        min: minTotalDeltaX,\n        max: maxTotalDeltaX,\n      });\n\n      const newTotalDeltaY = toNumWithBounds(totalDeltaY + deltaY, {\n        min: minTotalDeltaY,\n        max: maxTotalDeltaY,\n      });\n\n      const newTotalDeltaZ = toNumWithBounds(addDeltaZ(totalDeltaZ, deltaZ), {\n        min: minTotalDeltaZ,\n        max: maxTotalDeltaZ,\n      });\n\n      if (\n        newTotalDeltaX === totalDeltaX &&\n        newTotalDeltaY === totalDeltaY &&\n        newTotalDeltaZ === totalDeltaZ\n      ) {\n        return;\n      }\n\n      totalDeltaX = newTotalDeltaX;\n      totalDeltaY = newTotalDeltaY;\n      totalDeltaZ = newTotalDeltaZ;\n\n      const direction = fragment.direction;\n      const intent = fragment.intent;\n      const time =\n        eventQueueCopy[MH.lengthOf(eventQueueCopy) - 1]?.timeStamp -\n          eventQueueCopy[0]?.timeStamp || 0;\n\n      const data = {\n        device,\n        direction,\n        intent,\n        deltaX,\n        deltaY,\n        deltaZ,\n        time,\n        totalDeltaX,\n        totalDeltaY,\n        totalDeltaZ,\n      };\n\n      if (\n        direction !== MC.S_NONE &&\n        (!directions || MH.includes(directions, direction)) &&\n        (!intents || MH.includes(intents, intent))\n      ) {\n        callback.invoke(target, data, eventQueueCopy).catch(logError);\n      } else {\n        debug: logger?.debug7(\n          `[${id}] Directions or intents not matching for callback`,\n        );\n      }\n    },\n  );\n\n  // This wrapper is NOT debounced and adds the events to the queue, prevents\n  // default action if needed, and indicates whether the gesture is terminated.\n  const wrapper = (\n    target: EventTarget,\n    device: GestureDevice,\n    event: Event,\n    preventDefault: boolean,\n  ) => {\n    eventQueue.push(event);\n\n    const fragment = fragmentGetters[device](eventQueue, {\n      angleDiffThreshold,\n      deltaThreshold,\n      reverseScroll,\n      dragHoldTime,\n      dragNumFingers,\n    });\n\n    debug: logger?.debug8(\n      `[${id}] Got fragment for ${device} (${event.type})`,\n      fragment,\n      [...eventQueue].map((e) => e.type),\n    );\n\n    if (preventDefault) {\n      preventDefaultActionFor(\n        event,\n        !!fragment || (event.type === MC.S_CLICK && preventNextClick),\n      );\n    }\n\n    if (fragment === false) {\n      // not enough events in the queue, pass\n      debug: logger?.debug9(`[${id}] Not enough events for gesture ${device}`);\n      return false;\n    } else if (fragment === null) {\n      // consider the gesture terminated\n      clearEventQueue(device, eventQueue);\n      debug: logger?.debug9(`[${id}] Gesture for ${device} terminated`);\n      return true;\n    }\n\n    if (device === MC.S_POINTER) {\n      // If we're here, there's been a drag, expect a click immediately\n      // afterwards and prevent default action.\n      preventNextClick = true;\n      MH.setTimer(() => {\n        preventNextClick = false;\n      }, 10);\n    }\n\n    debouncedWrapper(\n      target,\n      fragment,\n      [...eventQueue], // copy\n    );\n\n    return false;\n  };\n\n  return { _callback: callback, _wrapper: wrapper };\n};\n\nconst clearEventQueue = (device: GestureDevice, queue: Event[]) => {\n  const keepLastEvent = device === MC.S_POINTER || device === MC.S_TOUCH;\n  queue.splice(0, MH.lengthOf(queue) - (keepLastEvent ? 1 : 0));\n};\n\nconst preventDefaultActionFor = (event: Event, isActualGesture: boolean) => {\n  const target = event.currentTarget;\n  const eventType = event.type;\n  const isPointerDown =\n    eventType === MC.S_POINTERDOWN || eventType === MC.S_MOUSEDOWN;\n\n  if (\n    eventType === MC.S_TOUCHMOVE ||\n    eventType === MC.S_WHEEL ||\n    ((eventType === MC.S_CLICK || eventType === MC.S_KEYDOWN) &&\n      isActualGesture) ||\n    (isPointerDown && (event as MouseEvent).buttons === 1)\n  ) {\n    MH.preventDefault(event);\n\n    if (isPointerDown && MH.isHTMLElement(target)) {\n      // Otherwise capturing key events won't work\n      target.focus({ preventScroll: true });\n    }\n  }\n};\n\nconst setGestureCssProps = (\n  target: EventTarget,\n  data: Partial<GestureData>,\n) => {\n  const intent = data.intent;\n\n  if (!MH.isElement(target) || !intent || intent === MC.S_UNKNOWN) {\n    return;\n  }\n\n  const prefix = `${intent}-`;\n\n  if (intent === MC.S_ZOOM) {\n    setNumericStyleProps(\n      target,\n      {\n        deltaZ: data.totalDeltaZ,\n      },\n      {\n        _prefix: prefix,\n        _numDecimal: 2,\n      },\n    ); // don't await here\n  } else {\n    setNumericStyleProps(\n      target,\n      {\n        deltaX: data.totalDeltaX,\n        deltaY: data.totalDeltaY,\n      },\n      {\n        _prefix: prefix,\n      },\n    ); // don't await here\n  }\n};\n","/**\n * @module Utils\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { sortedKeysByVal } from \"@lisn/utils/math\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  BitSpace,\n  newBitSpaces,\n  createBitSpace,\n} from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid device name.\n *\n * @category Validation\n */\nexport const isValidDevice = (device: string): device is Device =>\n  ORDERED_DEVICES.has(device);\n\n/**\n * Returns true if the given string is a valid aspect ratio name.\n *\n * @category Validation\n */\nexport const isValidAspectRatio = (\n  aspectRatio: string,\n): aspectRatio is AspectRatio => ORDERED_ASPECTR.has(aspectRatio);\n\n/**\n * Returns true if the given string is a valid device specification (including\n * `\"min <Device>\"`, etc).\n *\n * Returns false for \"\", although if you passed \"\" in\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} it would\n * accept it as specifying _all_ devices.\n *\n * @category Validation\n */\nexport const isValidDeviceList = (\n  device: string | string[],\n): device is DeviceSpec | Device[] =>\n  isValidForType(S_DEVICES, device, ORDERED_DEVICES);\n\n/**\n * Returns true if the given string is a valid aspect ratio specification\n * (including `\"min <AspectRatio>\"`, etc).\n *\n * Returns false for \"\", although if you passed \"\" in\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} it would\n * accept it as specifying _all_ aspect ratios.\n *\n * @category Validation\n */\nexport const isValidAspectRatioList = (\n  aspectR: string | string[],\n): aspectR is AspectRatioSpec | AspectRatio[] =>\n  isValidForType(S_ASPECTRS_CAMEL, aspectR, ORDERED_ASPECTR);\n\n/**\n * Returns a list of {@link Device}s that are not covered by the given device\n * specification. See\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for accepted\n * formats.\n *\n * Returns an empty for \"\" or for a specification that includes all devices.\n *\n * @category Layout\n */\nexport const getOtherDevices = (device: DeviceSpec | Device[]): Device[] =>\n  getOtherLayouts(S_DEVICES, device, ORDERED_DEVICES);\n\n/**\n * Returns a list of {@link AspectRatio}s that are not covered by the given\n * aspect ratio specification. See\n * {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for accepted\n * formats.\n *\n * Returns an empty for \"\" or for a specification that includes all aspect\n * ratios.\n *\n * @category Layout\n */\nexport const getOtherAspectRatios = (\n  aspectR: AspectRatioSpec | AspectRatio[],\n): AspectRatio[] => getOtherLayouts(S_ASPECTRS_CAMEL, aspectR, ORDERED_ASPECTR);\n\n/**\n * @ignore\n * @internal\n */\nexport const getLayoutBitmask = (options?: {\n  devices?: DeviceSpec | Device[];\n  aspectRatios?: AspectRatioSpec | AspectRatio[];\n}): number => {\n  let layoutBitmask =\n    getBitmaskFromSpec(S_DEVICES, options?.devices, ORDERED_DEVICES) |\n    getBitmaskFromSpec(\n      S_ASPECTRS_CAMEL,\n      options?.aspectRatios,\n      ORDERED_ASPECTR,\n    );\n\n  if (!layoutBitmask) {\n    layoutBitmask = ORDERED_DEVICES.bitmask | ORDERED_ASPECTR.bitmask; // default: all\n  }\n\n  return layoutBitmask;\n};\n\n// In ascending order by width.\nconst ORDERED_DEVICE_NAMES = sortedKeysByVal(settings.deviceBreakpoints);\nconst ORDERED_ASPECTR_NAMES = sortedKeysByVal(settings.aspectRatioBreakpoints);\n\nconst bitSpaces = newBitSpaces();\n\n/**\n * @ignore\n * @internal\n */\nexport const ORDERED_DEVICES = createBitSpace(\n  bitSpaces,\n  ...ORDERED_DEVICE_NAMES,\n);\n\n/**\n * @ignore\n * @internal\n */\nexport const ORDERED_ASPECTR = createBitSpace(\n  bitSpaces,\n  ...ORDERED_ASPECTR_NAMES,\n);\n\n/**\n * @ignore\n * @internal\n */\nexport const NUM_LAYOUTS =\n  MH.lengthOf(ORDERED_DEVICE_NAMES) + MH.lengthOf(ORDERED_ASPECTR_NAMES);\n\n// --------------------\n\nconst S_DEVICES = \"devices\";\nconst S_ASPECTRS_CAMEL = \"aspectRatios\";\n\n// Don't use capture groups for old browser support\nconst LAYOUT_RANGE_REGEX = RegExp(\n  \"^ *(?:\" +\n    \"([a-z-]+) +to +([a-z-]+)|\" +\n    \"min +([a-z-]+)|\" +\n    \"max +([a-z-]+)\" +\n    \") *$\",\n);\n\nconst getLayoutsFromBitmask = <T extends Device | AspectRatio>(\n  keyName: string,\n  bitmask: number,\n  bitSpace: BitSpace<T>,\n): T[] => {\n  const layouts: T[] = [];\n  for (let bit = bitSpace.start; bit <= bitSpace.end; bit++) {\n    const value = 1 << bit;\n    if (bitmask & value) {\n      const name = bitSpace.nameOf(value);\n      if (name) {\n        layouts.push(name);\n      }\n    }\n  }\n\n  return layouts;\n};\n\nconst getOtherLayouts = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[],\n  bitSpace: BitSpace<T>,\n): T[] => {\n  const bitmask = getBitmaskFromSpec(keyName, spec, bitSpace);\n  if (!bitmask) {\n    return [];\n  }\n\n  const oppositeBitmask = bitSpace.bitmask & ~bitmask;\n  return getLayoutsFromBitmask(keyName, oppositeBitmask, bitSpace);\n};\n\nconst isValidForType = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[],\n  bitSpace: BitSpace<T>,\n): boolean => {\n  try {\n    const bitmask = getBitmaskFromSpec(keyName, spec, bitSpace);\n    return bitmask !== 0;\n  } catch (err) {\n    if (MH.isInstanceOf(err, LisnUsageError)) {\n      return false;\n    }\n    throw err;\n  }\n};\n\nconst getBitmaskFromSpec = <T extends Device | AspectRatio>(\n  keyName: string,\n  spec: string | string[] | undefined | null,\n  bitSpace: BitSpace<T>,\n): number => {\n  if (MH.isEmpty(spec)) {\n    return 0;\n  }\n  const singleKeyName = keyName.slice(0, -1);\n\n  if (MH.isString(spec)) {\n    const rangeMatch = spec.match(LAYOUT_RANGE_REGEX);\n    if (rangeMatch) {\n      const minLayout = rangeMatch[1] || rangeMatch[3];\n      const maxLayout = rangeMatch[2] || rangeMatch[4];\n\n      if (minLayout !== undefined && !bitSpace.has(minLayout)) {\n        throw MH.usageError(`Unknown ${singleKeyName} '${minLayout}'`);\n      }\n\n      if (maxLayout !== undefined && !bitSpace.has(maxLayout)) {\n        throw MH.usageError(`Unknown ${singleKeyName} '${maxLayout}'`);\n      }\n\n      return bitSpace.bitmaskFor(minLayout, maxLayout);\n    }\n  }\n\n  let bitmask = 0;\n  const layouts = validateStrList(keyName, spec, bitSpace.has);\n  if (layouts) {\n    for (const lt of layouts) {\n      bitmask |= bitSpace.bit[lt];\n    }\n  }\n\n  return bitmask;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  ScrollDirection,\n  ScrollTarget,\n  TargetCoordinates,\n  CoordinateOffset,\n  ScrollPosition,\n  Offset,\n} from \"@lisn/globals/types\";\n\nimport { getComputedStylePropNow } from \"@lisn/utils/css-alter\";\nimport { SCROLL_DIRECTIONS } from \"@lisn/utils/directions\";\nimport {\n  waitForInteractive,\n  waitForElementOrInteractive,\n} from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { maxAbs, easeInOutQuad } from \"@lisn/utils/math\";\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\nimport { newXMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Scrolling\n */\nexport type ScrollAction = {\n  cancel: () => boolean;\n\n  /**\n   * Will reject if the scroll is cancelled.\n   */\n  waitFor: () => Promise<ScrollPosition>;\n};\n\n/**\n * @category Scrolling\n * @interface\n */\nexport type ScrollToOptions = {\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue If `document.body` is scrollable, will use that; otherwise `document.scrollingElement`\n   */\n  scrollable?: Element;\n\n  /**\n   * Offset the target coordinates by the given amount(s).\n   *\n   * E.g. if the final target coordinates are computed to be\n   * `{top: 100, left: 0}` and you specify offset as `{top: 10, left: 20}`, it\n   * will scroll to  `{top: 110, left: 20}`.\n   *\n   * @defaultValue undefined\n   */\n  offset?: CoordinateOffset;\n\n  // TODO maybe support fixed velocity as an alternative to fixed duration?\n  /**\n   * The duration of the scroll animation. If not given, it is instant.\n   *\n   * @defaultValue 0\n   */\n  duration?: number;\n\n  /**\n   * Whether another request to us to scroll the same target can interrupt this\n   * scroll before it finishes.\n   *\n   * @defaultValue false\n   */\n  weCanInterrupt?: boolean;\n\n  /**\n   * Whether a user attempt to scroll the target can interrupt this before it\n   * finishes.\n   *\n   * @defaultValue false\n   */\n  userCanInterrupt?: boolean;\n\n  /**\n   * If the scrolling element is already at the given coordinates (or strictly\n   * speaking we allow for 5 pixels difference), then if `altTarget` is given,\n   * this will become the target to scroll to.\n   *\n   * @defaultValue undefined\n   */\n  altTarget?: TargetCoordinates | Element | string;\n\n  /**\n   * Offset the target coordinates by the given amount(s) when `altTarget` is used.\n   *\n   * See {@link ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined\n   */\n  altOffset?: CoordinateOffset;\n};\n\n// ----------\n\n/**\n * Returns true if the given element is scrollable in the given direction, or\n * in either direction (if `axis` is not given).\n *\n * **IMPORTANT:** If you enable `active` then be aware that:\n * 1. It may attempt to scroll the target in order to determine whether it's\n *    scrollable in a more reliable way than the default method of comparing\n *    clientWidth/Height to scrollWidth/Height. If there is currently any\n *    ongoing scroll on the target, this will stop it, so never use that inside\n *    scroll-triggered handlers.\n * 2. If the layout has been invalidated and not yet recalculated,\n *    this will cause a forced layout, so always {@link waitForMeasureTime}\n *    before calling this function when possible.\n *\n * @param {} [options.axis]    One of \"x\" or \"y\" for horizontal or vertical\n *                             scroll respectively. If not given, it checks\n *                             both.\n * @param {} [options.active]  If true, then if the target's current scroll\n *                             offset is 0, it will attempt to scroll it rather\n *                             than looking at the clientWidth/Height to\n *                             scrollWidth/Height. This is more reliable but can\n *                             cause issues, see note above.\n * @param {} [options.noCache] By default the result of a check is cached for\n *                             1s and if there's already a cached result for\n *                             this element, it is returns. Set this to true to\n *                             disable checking the cache and also saving the\n *                             result into the cache.\n *\n * @category Scrolling\n */\nexport const isScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n): boolean => {\n  const { axis, active, noCache } = options || {};\n  if (!axis) {\n    return (\n      isScrollable(element, { axis: \"y\", active, noCache }) ||\n      isScrollable(element, { axis: \"x\", active, noCache })\n    );\n  }\n\n  if (!noCache) {\n    const cachedResult = isScrollableCache.get(element)?.get(axis);\n    if (!MH.isNullish(cachedResult)) {\n      return cachedResult;\n    }\n  }\n\n  const offset = axis === \"x\" ? \"Left\" : \"Top\";\n  let result = false;\n  let doCache = !noCache;\n\n  if (element[`scroll${offset}`]) {\n    result = true;\n  } else if (active) {\n    // Use scrollTo with explicit behavior set to instant instead of setting\n    // the scrollTop/Left properties since the latter doesn't work with\n    // scroll-behavior smooth.\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 1 });\n    const canScroll = element[`scroll${offset}`] > 0;\n    MH.elScrollTo(element, { [MH.toLowerCase(offset)]: 0 });\n    result = canScroll;\n  } else {\n    const dimension = axis === \"x\" ? \"Width\" : \"Height\";\n    result = element[`scroll${dimension}`] > element[`client${dimension}`];\n    // No need to cache a passive check.\n    doCache = false;\n  }\n\n  if (doCache) {\n    isScrollableCache.sGet(element).set(axis, result);\n    MH.setTimer(() => {\n      MH.deleteKey(isScrollableCache.get(element), axis);\n      isScrollableCache.prune(element);\n    }, IS_SCROLLABLE_CACHE_TIMEOUT);\n  }\n\n  return result;\n};\n\n/**\n * Returns the closest scrollable ancestor of the given element, _not including\n * it_.\n *\n * @param {} options See {@link isScrollable}\n *\n * @return {} `null` if no scrollable ancestors are found.\n *\n * @category Scrolling\n */\nexport const getClosestScrollable = (\n  element: Element,\n  options?: {\n    axis?: \"x\" | \"y\";\n    active?: boolean;\n    noCache?: boolean;\n  },\n) => {\n  // Walk up the tree, starting at the element in question but excluding it.\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = MH.parentOf(ancestor))) {\n    if (isScrollable(ancestor, options)) {\n      return ancestor;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Returns the current {@link ScrollAction} if any.\n *\n * @category Scrolling\n */\nexport const getCurrentScrollAction = (\n  scrollable?: Element,\n): ScrollAction | null => {\n  scrollable = toScrollableOrDefault(scrollable);\n  const action = currentScrollAction.get(scrollable);\n  if (action) {\n    return MH.copyObject(action);\n  }\n  return null;\n};\n\n/**\n * Scrolls the given scrollable element to the given `to` target.\n *\n * Returns `null` if there's an ongoing scroll that is not cancellable.\n *\n * Note that if `to` is an element or a selector, then it _must_ be a\n * descendant of the scrollable element.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *               If the target coordinates are invalid.\n *\n * @param {} to  If this is an element, then its top-left position is used as\n *               the target coordinates. If it is a string, then it is treated\n *               as a selector for an element using `querySelector`.\n *\n * @return {} `null` if there's an ongoing scroll that is not cancellable,\n * otherwise a {@link ScrollAction}.\n *\n * @category Scrolling\n */\nexport const scrollTo = (\n  to: TargetCoordinates | Element | string,\n  userOptions?: ScrollToOptions,\n): ScrollAction | null => {\n  const options = getOptions(to, userOptions);\n  const scrollable = options._scrollable;\n\n  // cancel current scroll action if any\n  const currentScroll = currentScrollAction.get(scrollable);\n  if (currentScroll) {\n    if (!currentScroll.cancel()) {\n      // current scroll action is not cancellable by us\n      return null;\n    }\n  }\n\n  let isCancelled = false;\n\n  const cancelFn = options._weCanInterrupt\n    ? () => (isCancelled = true)\n    : () => false;\n\n  const scrollEvents = [\"touchmove\", \"wheel\"]; // don't bother with keyboard\n  let preventScrollHandler: EventListener | null = null;\n\n  if (options._userCanInterrupt) {\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(\n        scrollable,\n        eventType,\n        () => {\n          isCancelled = true;\n        },\n        { once: true },\n      );\n    }\n  } else {\n    preventScrollHandler = MH.preventDefault;\n    for (const eventType of scrollEvents) {\n      addEventListenerTo(scrollable, eventType, preventScrollHandler, {\n        passive: false,\n      });\n    }\n  }\n\n  const promise = initiateScroll(options, () => isCancelled);\n\n  const thisScrollAction: ScrollAction = {\n    waitFor: () => promise,\n    cancel: cancelFn,\n  };\n\n  const cleanup = () => {\n    if (currentScrollAction.get(scrollable) === thisScrollAction) {\n      MH.deleteKey(currentScrollAction, scrollable);\n    }\n\n    if (preventScrollHandler) {\n      for (const eventType of scrollEvents) {\n        removeEventListenerFrom(scrollable, eventType, preventScrollHandler, {\n          passive: false,\n        });\n      }\n    }\n  };\n\n  thisScrollAction.waitFor().then(cleanup).catch(cleanup);\n\n  currentScrollAction.set(scrollable, thisScrollAction);\n  return thisScrollAction;\n};\n\n/**\n * Returns true if the given string is a valid scroll direction.\n *\n * @category Validation\n */\nexport const isValidScrollDirection = (\n  direction: string,\n): direction is ScrollDirection => MH.includes(SCROLL_DIRECTIONS, direction);\n\n/**\n * Returns true if the given string or array is a list of valid scroll\n * directions.\n *\n * @category Validation\n */\nexport const isValidScrollDirectionList = (directions: string | string[]) =>\n  isValidStrList(directions, isValidScrollDirection, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const mapScrollable = (original: Element, actualScrollable: Element) =>\n  mappedScrollables.set(original, actualScrollable);\n\n/**\n * @ignore\n * @internal\n */\nexport const unmapScrollable = (original: Element) =>\n  MH.deleteKey(mappedScrollables, original);\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientWidthNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetWidth -\n      getBorderWidth(element, MC.S_LEFT) -\n      getBorderWidth(element, MC.S_RIGHT)\n    : element[MC.S_CLIENT_WIDTH];\n\n/**\n * @ignore\n * @internal\n */\nexport const getClientHeightNow = (element: Element) =>\n  isScrollableBodyInQuirks(element)\n    ? element.offsetHeight -\n      getBorderWidth(element, MC.S_TOP) -\n      getBorderWidth(element, MC.S_BOTTOM)\n    : element[MC.S_CLIENT_HEIGHT];\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainContentElement = (): HTMLElement | null =>\n  mainContentElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainContentElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainContentElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetMainScrollableElement = (): HTMLElement | null =>\n  mainScrollableElement ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via ScrollWatcher\n */\nexport const fetchMainScrollableElement = async (): Promise<HTMLElement> => {\n  await init();\n\n  return mainScrollableElement;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultScrollingElement = () => {\n  const body = MH.getBody();\n  return isScrollable(body) ? body : MH.getDocScrollingElement() || body;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetScrollableElement = (\n  target: ScrollTarget | null | undefined,\n): Element | null => toScrollableOrMain(target, tryGetMainScrollableElement);\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchScrollableElement = async (\n  target: ScrollTarget | null | undefined,\n): Promise<Element> => toScrollableOrMain(target, fetchMainScrollableElement);\n\n// ----------------------------------------\n\ntype ScrollToOptionsInternal = {\n  _target: TargetCoordinates;\n  _offset: CoordinateOffset | null;\n  _altTarget: TargetCoordinates | null;\n  _altOffset: CoordinateOffset | null;\n  _scrollable: Element;\n  _duration: number;\n  _weCanInterrupt: boolean;\n  _userCanInterrupt: boolean;\n};\n\nconst IS_SCROLLABLE_CACHE_TIMEOUT = 1000;\n\nconst isScrollableCache = newXMap<Element, Map<\"x\" | \"y\", boolean>>(() =>\n  MH.newMap(),\n);\n\nconst mappedScrollables = MH.newMap<Element, Element>();\n\nconst currentScrollAction = MH.newMap<Element, ScrollAction>();\n\nconst DIFF_THRESHOLD = 5;\nconst arePositionsDifferent = (start: ScrollPosition, end: ScrollPosition) =>\n  maxAbs(start.top - end.top, start.left - end.left) >= DIFF_THRESHOLD;\n\nconst toScrollableOrMain = <R>(\n  target: ScrollTarget | null | undefined,\n  getMain: () => R,\n): Element | R => {\n  if (MH.isElement(target)) {\n    return mappedScrollables.get(target) || target;\n  }\n\n  if (!target || target === MH.getWindow() || target === MH.getDoc()) {\n    return getMain();\n  }\n\n  throw MH.usageError(\"Unsupported scroll target\");\n};\n\nconst toScrollableOrDefault = (scrollable: Element | undefined): Element =>\n  scrollable ?? getDefaultScrollingElement();\n\nconst getOptions = (\n  to: TargetCoordinates | Element | string,\n  options: ScrollToOptions | undefined,\n): ScrollToOptionsInternal => {\n  const scrollable = toScrollableOrDefault(options?.scrollable);\n  const target = getTargetCoordinates(scrollable, to);\n  const altTarget = options?.altTarget\n    ? getTargetCoordinates(scrollable, options?.altTarget)\n    : null;\n\n  return {\n    _target: target,\n    _offset: options?.offset || null,\n    _altTarget: altTarget,\n    _altOffset: options?.altOffset || null,\n    _scrollable: scrollable,\n    _duration: options?.duration || 0,\n    _weCanInterrupt: options?.weCanInterrupt ?? false,\n    _userCanInterrupt: options?.userCanInterrupt ?? false,\n  };\n};\n\nconst getTargetCoordinates = (\n  scrollable: Element,\n  target: TargetCoordinates | Element | string,\n): TargetCoordinates => {\n  const docScrollingElement = MH.getDocScrollingElement();\n\n  if (MH.isElement(target)) {\n    if (scrollable === target || !scrollable.contains(target)) {\n      throw MH.usageError(\"Target must be a descendant of the scrollable one\");\n    }\n\n    return {\n      top: () =>\n        scrollable[MC.S_SCROLL_TOP] +\n        MH.getBoundingClientRect(target).top -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).top),\n      left: () =>\n        scrollable[MC.S_SCROLL_LEFT] +\n        MH.getBoundingClientRect(target).left -\n        (scrollable === docScrollingElement\n          ? 0\n          : MH.getBoundingClientRect(scrollable).left),\n    };\n  }\n\n  if (MH.isString(target)) {\n    const targetEl = MH.docQuerySelector(target);\n    if (!targetEl) {\n      throw MH.usageError(`No match for '${target}'`);\n    }\n\n    return getTargetCoordinates(scrollable, targetEl);\n  }\n\n  if (!MH.isObject(target) || !(\"top\" in target || \"left\" in target)) {\n    throw MH.usageError(\"Invalid coordinates\");\n  }\n\n  return target;\n};\n\nconst getStartEndPosition = async (\n  options: ScrollToOptionsInternal,\n): Promise<{ start: ScrollPosition; end: ScrollPosition }> => {\n  await waitForMeasureTime();\n\n  const applyOffset = (\n    position: ScrollPosition,\n    offset: CoordinateOffset | null,\n  ) => {\n    position.top += offset?.top || 0;\n    position.left += offset?.left || 0;\n  };\n\n  const scrollable = options._scrollable;\n  const start = {\n    top: scrollable[MC.S_SCROLL_TOP],\n    left: scrollable[MC.S_SCROLL_LEFT],\n  };\n\n  let end = getEndPosition(scrollable, start, options._target);\n  applyOffset(end, options._offset);\n\n  if (!arePositionsDifferent(start, end) && options._altTarget) {\n    end = getEndPosition(scrollable, start, options._altTarget);\n    applyOffset(end, options._altOffset);\n  }\n\n  return { start, end };\n};\n\n// must be called in \"measure time\"\nconst getEndPosition = (\n  scrollable: Element,\n  startPosition: ScrollPosition,\n  targetCoordinates: TargetCoordinates,\n): ScrollPosition => {\n  // by default no change in scroll top or left\n  const endPosition = MH.copyObject(startPosition);\n\n  if (!MH.isNullish(targetCoordinates?.top)) {\n    if (MH.isFunction(targetCoordinates.top)) {\n      endPosition.top = targetCoordinates.top(scrollable);\n    } else {\n      endPosition.top = targetCoordinates.top;\n    }\n  }\n\n  if (!MH.isNullish(targetCoordinates?.left)) {\n    if (MH.isFunction(targetCoordinates.left)) {\n      endPosition.left = targetCoordinates.left(scrollable);\n    } else {\n      endPosition.left = targetCoordinates.left;\n    }\n  }\n\n  // Set boundaries\n  const scrollH = scrollable[MC.S_SCROLL_HEIGHT];\n  const scrollW = scrollable[MC.S_SCROLL_WIDTH];\n  const clientH = getClientHeightNow(scrollable);\n  const clientW = getClientWidthNow(scrollable);\n  endPosition.top = MH.min(scrollH - clientH, endPosition.top);\n  endPosition.top = MH.max(0, endPosition.top);\n\n  endPosition.left = MH.min(scrollW - clientW, endPosition.left);\n  endPosition.left = MH.max(0, endPosition.left);\n\n  return endPosition;\n};\n\nconst initiateScroll = async (\n  options: ScrollToOptionsInternal,\n  isCancelled: () => boolean,\n) => {\n  const position = await getStartEndPosition(options);\n  const duration = options._duration;\n  const scrollable = options._scrollable;\n\n  let startTime: number, previousTimeStamp: number;\n  let currentPosition: ScrollPosition = position.start;\n\n  const step = async () => {\n    await waitForMutateTime(); // effectively next animation frame\n    // Element.scrollTo equates to a measurement and needs to run after\n    // painting to avoid forced layout.\n    await waitForMeasureTime();\n    const timeStamp = MH.timeNow();\n\n    if (isCancelled()) {\n      // Reject the promise\n      throw currentPosition;\n    }\n\n    if (!startTime) {\n      // If it's very close to the target, no need to scroll smoothly\n      if (\n        duration === 0 ||\n        !arePositionsDifferent(currentPosition, position.end)\n      ) {\n        MH.elScrollTo(scrollable, position.end);\n        return position.end;\n      }\n\n      startTime = timeStamp;\n    }\n\n    if (startTime !== timeStamp && previousTimeStamp !== timeStamp) {\n      const elapsed = timeStamp - startTime;\n      const progress = easeInOutQuad(MH.min(1, elapsed / duration));\n\n      currentPosition = {\n        top:\n          position.start.top +\n          (position.end.top - position.start.top) * progress,\n        left:\n          position.start.left +\n          (position.end.left - position.start.left) * progress,\n      };\n\n      MH.elScrollTo(scrollable, currentPosition);\n\n      if (progress === 1) {\n        return currentPosition;\n      }\n    }\n\n    previousTimeStamp = timeStamp;\n    return step();\n  };\n\n  return step();\n};\n\nconst isScrollableBodyInQuirks = (element: Element): element is HTMLElement =>\n  element === MH.getBody() && MH.getDocScrollingElement() === null;\n\n// must be called in \"measure time\"\nconst getBorderWidth = (element: Element, side: Offset) =>\n  MH.ceil(MH.parseFloat(getComputedStylePropNow(element, `border-${side}`)));\n\n// ------------------------------\n\nlet mainContentElement: HTMLElement;\nlet mainScrollableElement: HTMLElement;\n\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      const mainScrollableElementSelector =\n        settings.mainScrollableElementSelector;\n\n      const contentElement = await waitForElementOrInteractive(() => {\n        return mainScrollableElementSelector\n          ? MH.docQuerySelector(mainScrollableElementSelector)\n          : MH.getBody(); // default if no selector\n      });\n\n      // defaults\n      mainScrollableElement = getDefaultScrollingElement();\n      mainContentElement = MH.getBody();\n\n      if (!contentElement) {\n        logError(\n          MH.usageError(\n            `No match for '${mainScrollableElementSelector}'. ` +\n              \"Scroll tracking/capturing may not work as intended.\",\n          ),\n        );\n      } else if (!MH.isHTMLElement(contentElement)) {\n        logWarn(\"mainScrollableElementSelector should point to an HTMLElement\");\n      } else if (contentElement !== mainContentElement) {\n        mainScrollableElement = mainContentElement = contentElement;\n      }\n    })();\n  }\n\n  return initPromise;\n};\n\n// Try to find the main scrollable/content elements asap so that tryGetMain*\n// can return them if called before fetchMain*\nif (MH.hasDOM()) {\n  waitForInteractive().then(init);\n}\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  addClasses,\n  addClassesNow,\n  setDataNow,\n  setStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, wrapScrollingContent } from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { camelToKebabCase, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  isScrollable,\n  tryGetMainContentElement,\n  fetchMainContentElement,\n} from \"@lisn/utils/scroll\";\n\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Overlays\n * @interface\n */\nexport type OverlayOptions = {\n  /**\n   * The parent element to insert the overlay into.\n   *\n   * If not given, then:\n   * - if the overlay is to have a `position: fixed`, then `document.body` is used\n   * - otherwise,\n   *   {@link Watchers/ScrollWatcher.ScrollWatcher.fetchMainContentElement | ScrollWatcher.fetchMainContentElement} is\n   *   used\n   */\n  parent?: HTMLElement;\n\n  /**\n   * If set, then it will be assigned as the DOM element ID for the new\n   * overlay.\n   *\n   * Furthermore, the new overlay will be created and will not be saved for\n   * future reuse.\n   *\n   * By default, if `id` is not given, the overlay will be saved, and if\n   * {@link createOverlay} is called again with the same `style`, `data` and\n   * parent, the previous overlay is returned.\n   */\n  id?: string;\n\n  /**\n   * Every entry in this object will be set on the `style` of the new overlay.\n   *\n   * **IMPORTANT:** By default overlays are positioned absolutely, so if you need\n   * another positioning, override this here by setting a `position` key in\n   * `style`. If position is either \"absolute\" (by default or explicitly set) or\n   * \"fixed\", and none of `top` or `bottom` is given, `top: 0` is set; and\n   * similarly, if none of `left` or `right` is given, `left: 0` is set.\n   */\n  style?: Record<string, string>;\n\n  /**\n   * Every entry in this object will be set as a data attribute on the new\n   * overlay.\n   *\n   * Keys can be either kebab-case or camelCase (they will be converted if\n   * needed). Do _not_ include the \"data-\" prefix which will be added\n   * automatically. E.g. both \"foo-bar\" and \"fooBar\" will result in\n   * \"data-foo-bar\" being set.\n   */\n  data?: Record<string, string>;\n};\n\n/**\n * Returns an existing overlay for this specification. If the overlay was just\n * created it may not yet be attached to the DOM.\n *\n * @category Overlays\n */\nexport const getOverlay = (userOptions?: OverlayOptions) => {\n  const options = tryGetOverlayOptions(userOptions);\n  if (!options) {\n    return null;\n  }\n\n  return overlays.get(options._parent)?.get(options._overlayKey) || null;\n};\n\n/**\n * Creates a new overlay, and inserts it into the DOM as soon as\n * {@link waitForMutateTime} resolves, or returns an already existing matching\n * overlay.\n *\n * **Note** that if {@link OverlayOptions.id} is set, a new overlay will\n * _always_ be created.\n *\n * @category Overlays\n */\nexport const createOverlay = async (userOptions?: OverlayOptions) => {\n  const options = await fetchOverlayOptions(userOptions);\n  const canReuse = !options._id;\n\n  if (canReuse) {\n    const existingOverlay = overlays\n      .get(options._parent)\n      ?.get(options._overlayKey);\n\n    if (existingOverlay) {\n      if (!MH.parentOf(existingOverlay)) {\n        // not yet inserted into the DOM, so wait until it is\n        await waitForMutateTime();\n      }\n      return existingOverlay;\n    }\n  }\n\n  // Create a new one\n  const overlay = createOnlyOverlay(options);\n  if (canReuse) {\n    // Save it now before awating, so that concurrent requests to create the\n    // same one use it\n    overlays.sGet(options._parent).set(options._overlayKey, overlay);\n  } else {\n    overlay.id = options._id;\n  }\n\n  const isPercentageHOffset = MH.includes(\n    (options._style.left || \"\") + (options._style.right || \"\"),\n    \"%\",\n  );\n\n  const isPercentageVOffset = MH.includes(\n    (options._style.top || \"\") + (options._style.bottom || \"\"),\n    \"%\",\n  );\n\n  let needsContentWrapping = false;\n  let parentEl = options._parent;\n  if (isPercentageHOffset || isPercentageVOffset) {\n    needsContentWrapping =\n      (isPercentageHOffset && isScrollable(parentEl, { axis: \"x\" })) ||\n      (isPercentageVOffset && isScrollable(parentEl, { axis: \"y\" }));\n  }\n\n  if (needsContentWrapping) {\n    if (settings.contentWrappingAllowed) {\n      parentEl = await wrapScrollingContent(parentEl);\n    } else {\n      logWarn(\n        \"Percentage offset view trigger with scrolling root requires contentWrappingAllowed\",\n      );\n    }\n  }\n\n  if (options._style.position === MC.S_ABSOLUTE) {\n    // Ensure parent has non-static positioning\n    addClasses(parentEl, MH.prefixName(\"overlay-container\"));\n  }\n\n  await moveElement(overlay, { to: parentEl });\n\n  return overlay;\n};\n\n// ----------------------------------------\n\ntype OverlayOptionsInternal = {\n  _parent: HTMLElement;\n  _id: string;\n  _style: Record<string, string>;\n  _data: Record<string, string>;\n  _overlayKey: string;\n};\n\nconst overlays = newXWeakMap<HTMLElement, Map<string, HTMLElement>>(() =>\n  MH.newMap(),\n);\n\nconst tryGetOverlayOptions = (\n  userOptions: OverlayOptions | undefined,\n): OverlayOptionsInternal | null => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = tryGetParent(userOptions?.parent, style.position);\n  if (!parentEl) {\n    return null;\n  }\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst fetchOverlayOptions = async (\n  userOptions: OverlayOptions | undefined,\n): Promise<OverlayOptionsInternal> => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = await fetchParent(userOptions?.parent, style.position);\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst getOverlayKey = (\n  style: Record<string, string>,\n  data: Record<string, string>,\n) => objToStrKey(style) + \"|\" + objToStrKey(data);\n\nconst getCssProperties = (style: Record<string, string> | undefined) => {\n  const finalCssProperties: Record<string, string> = MH.merge(\n    { position: MC.S_ABSOLUTE }, // default\n    style,\n  );\n\n  if (\n    finalCssProperties.position === MC.S_ABSOLUTE ||\n    finalCssProperties.position === MC.S_FIXED\n  ) {\n    if (\n      MH.isEmpty(finalCssProperties.top) &&\n      MH.isEmpty(finalCssProperties.bottom)\n    ) {\n      finalCssProperties.top = \"0px\";\n    }\n\n    if (\n      MH.isEmpty(finalCssProperties.left) &&\n      MH.isEmpty(finalCssProperties.right)\n    ) {\n      finalCssProperties.left = \"0px\";\n    }\n  }\n\n  return finalCssProperties;\n};\n\nconst tryGetParent = (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED ? MH.getBody() : tryGetMainContentElement());\n\nconst fetchParent = async (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED\n    ? await waitForElement(MH.getBody)\n    : await fetchMainContentElement());\n\nconst createOnlyOverlay = (options: OverlayOptionsInternal) => {\n  const overlay = MH.createElement(\"div\");\n\n  addClassesNow(overlay, MH.prefixName(\"overlay\"));\n\n  const data = options._data;\n  for (const attr of MH.keysOf(data)) {\n    setDataNow(overlay, camelToKebabCase(attr), data[attr]);\n  }\n\n  const style = options._style;\n  for (const prop of MH.keysOf(style)) {\n    setStylePropNow(overlay, prop, style[prop]);\n  }\n\n  return overlay;\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size } from \"@lisn/globals/types\";\n\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { createOverlay } from \"@lisn/utils/overlays\";\n\n/**\n * Returns the content box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @category Size measurements\n */\nexport const getEntryContentBox = (entry: ResizeObserverEntry): Size => {\n  const size = entry.contentBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  }\n\n  const rect = entry.contentRect;\n  return { [MC.S_WIDTH]: rect[MC.S_WIDTH], [MC.S_HEIGHT]: rect[MC.S_HEIGHT] };\n};\n\n/**\n * Returns the border box size of the given\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry | ResizeObserverEntry}.\n *\n * @param {} fallbackToContent If the entry does not contain border box\n *                             measurements (depending on browser), then fall\n *                             back to using the content box size. Otherwise\n *                             (by default) will return `NaN` values for width\n *                             and height.\n *\n * @category Size measurements\n */\nexport const getEntryBorderBox = (\n  entry: ResizeObserverEntry,\n  fallbackToContent = false,\n): Size => {\n  const size = entry.borderBoxSize;\n\n  if (size) {\n    return getSizeFromInlineBlock(size);\n  } else if (fallbackToContent) {\n    return getEntryContentBox(entry);\n  }\n\n  return { [MC.S_WIDTH]: NaN, [MC.S_HEIGHT]: NaN };\n};\n\n/**\n * Returns true if the given string is a valid box type.\n *\n * @category Validation\n */\nexport const isValidBox = (box: string): box is Box =>\n  MH.includes(ALL_BOXES, box);\n\n/**\n * Returns true if the given string is a valid dimension.\n *\n * @category Validation\n */\nexport const isValidDimension = (dimension: string): dimension is Dimension =>\n  MH.includes(ALL_DIMENSIONS, dimension);\n\n/**\n * @ignore\n * @internal\n */\nexport const tryGetViewportOverlay = (): HTMLElement | null =>\n  viewportOverlay ?? null;\n\n/**\n * @ignore\n * @internal\n *\n * Exposed via SizeWatcher\n */\nexport const fetchViewportOverlay = async (): Promise<HTMLElement> => {\n  await init();\n\n  return viewportOverlay;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchViewportSize = async (realtime = false) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const root = MH.hasDOM()\n    ? (MH.getDocScrollingElement() ?? MH.getBody())\n    : null;\n\n  return {\n    [MC.S_WIDTH]: root?.clientWidth || 0,\n    [MC.S_HEIGHT]: root?.clientHeight || 0,\n  };\n};\n\n// ----------------------------------------\n\nconst S_INLINE_SIZE = \"inlineSize\";\nconst S_BLOCK_SIZE = \"blockSize\";\n\nconst ALL_BOXES: Box[] = [\"content\", \"border\"] as const;\nconst ALL_DIMENSIONS: Dimension[] = [MC.S_WIDTH, MC.S_HEIGHT] as const;\n\nconst getSizeFromInlineBlock = (\n  size: ResizeObserverSize | ReadonlyArray<ResizeObserverSize>,\n): Size => {\n  /* istanbul ignore else */\n  if (MH.isIterableObject(size)) {\n    return {\n      [MC.S_WIDTH]: size[0][S_INLINE_SIZE],\n      [MC.S_HEIGHT]: size[0][S_BLOCK_SIZE],\n    };\n  }\n  return {\n    // in some browsers inlineSize and blockSize are scalars and nor Arrays\n    [MC.S_WIDTH]: (size as { [S_INLINE_SIZE]: number })[S_INLINE_SIZE],\n    [MC.S_HEIGHT]: (size as { [S_BLOCK_SIZE]: number })[S_BLOCK_SIZE],\n  };\n};\n\n// ------------------------------\n\nlet viewportOverlay: HTMLElement;\nlet initPromise: Promise<void> | null = null;\nconst init = (): Promise<void> => {\n  if (!initPromise) {\n    initPromise = (async () => {\n      viewportOverlay = await createOverlay({\n        id: MH.prefixName(\"vp-ovrl\"),\n        style: {\n          position: \"fixed\",\n          [MC.S_WIDTH]: \"100vw\",\n          [MC.S_HEIGHT]: \"100vh\",\n        },\n      });\n    })();\n  }\n\n  return initPromise;\n};\n","/**\n * @module Modules/XResizeObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logWarn, logError } from \"@lisn/utils/log\";\n\nimport debug from \"@lisn/debug/debug\";\n\nexport type XResizeObserverCallback = (\n  entries: ResizeObserverEntry[],\n  observer: XResizeObserver,\n) => void;\n\n/**\n * {@link XResizeObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}\n * - observes both border box and content box size changes\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n * - can debounce the callback\n */\nexport class XResizeObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe | ResizeObserver:observe} except it accepts multiple targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent resize.\n   *\n   * If the target is already being observed, nothing is done.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/unobserve | ResizeObserver:unobserve} except it accepts multiple targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/disconnect | ResizeObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * @param {} debounceWindow Debounce the handler so that it's called at most\n   *                          every `debounceWindow` ms.\n   */\n  constructor(callback: XResizeObserverCallback, debounceWindow?: number) {\n    const logger = debug ? new debug.Logger({ name: \"XResizeObserver\" }) : null;\n\n    // Keep the latest ResizeObserverEntry for each target during the\n    // debounceWindow. Short-lived, so ok to use a Map.\n    const buffer = MH.newMap<Element, ResizeObserverEntry>();\n\n    // Since internally we have two observers, one for border box, one for\n    // content box, we will get called initially twice for a target. So we keep\n    // a counter of 1 or 2 for how many more calls to ignore.\n    const targetsToSkip = MH.newWeakMap<Element, 1 | 2>();\n\n    let observedTargets = MH.newWeakSet<Element>();\n\n    debounceWindow = debounceWindow || 0;\n\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      // Override entries for previous targets, but keep entries whose targets\n      // were not resized in this round\n      for (const entry of entries) {\n        const target = MH.targetOf(entry);\n        const skipNum = targetsToSkip.get(target);\n        if (skipNum !== undefined) {\n          if (skipNum === 2) {\n            // expect one more call\n            targetsToSkip.set(target, 1);\n          } else {\n            // done\n            /* istanbul ignore next */\n            if (skipNum !== 1) {\n              logError(MH.bugError(`# targetsToSkip is ${skipNum}`));\n            }\n            MH.deleteKey(targetsToSkip, target);\n          }\n\n          continue;\n        }\n\n        buffer.set(target, entry);\n      }\n\n      debug: logger?.debug9(\n        `Got ${entries.length} new entries. ` +\n          `Have ${buffer.size} unique-target entries`,\n        entries,\n      );\n\n      if (!timer && MH.sizeOf(buffer)) {\n        timer = MH.setTimer(() => {\n          if (MH.sizeOf(buffer)) {\n            callback(MH.arrayFrom(buffer.values()), this);\n            buffer.clear();\n          }\n\n          timer = null;\n        }, debounceWindow);\n      }\n    };\n\n    const borderObserver = MH.newResizeObserver(resizeHandler);\n    const contentObserver = MH.newResizeObserver(resizeHandler);\n    if (!borderObserver || !contentObserver) {\n      logWarn(\n        \"This browser does not support ResizeObserver. Some features won't work.\",\n      );\n    }\n\n    const observeTarget = (target: Element) => {\n      observedTargets.add(target);\n      borderObserver?.observe(target, { box: \"border-box\" });\n      contentObserver?.observe(target);\n    };\n\n    // --------------------\n\n    this.observe = (...targets) => {\n      debug: logger?.debug10(\"Observing targets\", targets);\n\n      for (const target of targets) {\n        observeTarget(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      debug: logger?.debug10(\"Observing targets (later)\", targets);\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.set(target, 2);\n        observeTarget(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      debug: logger?.debug10(\"Unobserving targets\", targets);\n\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        borderObserver?.unobserve(target);\n        contentObserver?.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      debug: logger?.debug10(\"Disconnecting\");\n      observedTargets = MH.newWeakSet();\n      borderObserver?.disconnect();\n      contentObserver?.disconnect();\n    };\n  }\n}\n","/**\n * @module Watchers/SizeWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Box, Dimension, Size, SizeTarget } from \"@lisn/globals/types\";\n\nimport { setNumericStyleProps } from \"@lisn/utils/css-alter\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum } from \"@lisn/utils/math\";\nimport {\n  isValidBox,\n  isValidDimension,\n  getEntryBorderBox,\n  getEntryContentBox,\n  tryGetViewportOverlay,\n  fetchViewportOverlay,\n} from \"@lisn/utils/size\";\nimport { objToStrKey } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XResizeObserver } from \"@lisn/modules/x-resize-observer\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link SizeWatcher} monitors the size of a given target. It's built on top\n * of {@link https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver | ResizeObserver}.\n *\n * It manages registered callbacks globally and reuses ResizeObservers.\n *\n * Each instance of SizeWatcher manages up to two ResizeObservers: one\n * for content-box size changes and one for border-box size changes.\n */\nexport class SizeWatcher {\n  /**\n   * Call the given handler whenever the target's size changes.\n   *\n   * Unless {@link OnResizeOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest size data.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly onResize: (\n    handler: OnResizeHandler,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offResize: (handler: OnResizeHandler, target?: SizeTarget) => void;\n\n  /**\n   * This is the same as {@link onResize} except that if `handler` is not given,\n   * then it defaults to an  handler that updates a set of CSS variables on the\n   * target's style:\n   *\n   * - If {@link OnResizeOptions.target | options.target} is not given, or is\n   *   `window`, the following CSS variables are set on the root (`html`)\n   *   element and represent the viewport size:\n   *   - `--lisn-js--window-border-width`\n   *   - `--lisn-js--window-border-height`\n   *   - `--lisn-js--window-content-width`\n   *   - `--lisn-js--window-content-height`\n   *\n   * - Otherwise, the following variables are set on the target itself and\n   *   represent its visible size:\n   *   - `--lisn-js--border-width`\n   *   - `--lisn-js--border-height`\n   *   - `--lisn-js--content-width`\n   *   - `--lisn-js--content-height`\n   *\n   * If `target` is `document`, then it will use `document.documentElement`.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link onResize} or {@link trackSize},\n   * then it will be removed and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or options are invalid.\n   */\n  readonly trackSize: (\n    handler?: OnResizeHandler | null,\n    options?: OnResizeOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackSize}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackSize: (\n    handler?: OnResizeHandler | null,\n    target?: SizeTarget,\n  ) => void;\n\n  /**\n   * Get the size of the given target. It will get the size from a\n   * ResizeObserverEntry and so it's always delayed by one frame at least.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly fetchCurrentSize: (target?: SizeTarget) => Promise<SizeData>;\n\n  /**\n   * Creates a new instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: SizeWatcherConfig = {}) {\n    return new SizeWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of SizeWatcher with the given\n   * {@link SizeWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: SizeWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new SizeWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: SizeWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"SizeWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"SizeWatcher\", logAtCreation: config })\n      : null;\n\n    const allSizeData = MH.newWeakMap<Element, SizeData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnResizeHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const resizeHandler = (entries: ResizeObserverEntry[]) => {\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    // Don't debounce the observer, only callbacks.\n    const xObserver = new XResizeObserver(resizeHandler);\n\n    // ----------\n\n    const fetchCurrentSize = async (\n      target: SizeTarget | undefined,\n    ): Promise<SizeData> => {\n      const element = await fetchElement(target);\n      const sizeData = allSizeData.get(element);\n      if (sizeData) {\n        return MH.copyObject(sizeData);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp ResizeObserver\n        const observer = MH.newResizeObserver((entries) => {\n          const sizeData = getSizeData(entries[0]);\n          observer?.disconnect();\n          resolve(sizeData); // no need to copy or save it\n        });\n\n        if (observer) {\n          observer.observe(element);\n        } else {\n          // Warning would have already been logged by XResizeObserver\n          resolve({\n            border: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n            content: { [MC.S_WIDTH]: 0, [MC.S_HEIGHT]: 0 },\n          });\n        }\n      });\n    };\n\n    // ----------\n\n    const fetchOptions = async (\n      options: OnResizeOptions,\n    ): Promise<OnResizeOptionsInternal> => {\n      const box = options.box ?? null;\n      if (box && !isValidBox(box)) {\n        throw MH.usageError(`Unknown box type: '${box}'`);\n      }\n\n      const dimension = options.dimension ?? null;\n      if (dimension && !isValidDimension(dimension)) {\n        throw MH.usageError(`Unknown dimension: '${dimension}'`);\n      }\n\n      return {\n        _element: await fetchElement(MH.targetOf(options)),\n        _box: box,\n        _dimension: dimension,\n        // If threshold is 0, internally treat as 1 (pixel)\n        _threshold:\n          toNonNegNum(options.threshold, config._resizeThreshold) || 1,\n        _debounceWindow:\n          options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n      };\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = { _callback: callback, _options: options };\n      allCallbacks.sGet(element).set(handler, entry);\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnResize = async (\n      handler: OnResizeHandler,\n      userOptions: OnResizeOptions | undefined,\n    ) => {\n      const options = await fetchOptions(userOptions || {});\n      const element = options._element;\n\n      // Don't await for the size data before creating the callback so that\n      // setupOnResize and removeOnResize have the same \"timing\" and therefore\n      // calling onResize and offResize immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options);\n      const callback = entry._callback;\n      const sizeData = await fetchCurrentSize(element);\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = sizeData;\n      allSizeData.set(element, sizeData);\n\n      // Always use observeLater. This is because the initial call to callback\n      // shouldn't be debounced, and so we call it manually here, regardless if\n      // it's a new target or not. Therefore we don't want the observer to also\n      // call it in case it _is_ a new target.\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, sizeData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, sizeData);\n      }\n    };\n\n    // ----------\n\n    const removeOnResize = async (\n      handler: OnResizeHandler,\n      target: SizeTarget | undefined,\n    ) => {\n      const options = await fetchOptions({ target });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setSizeCssProps) {\n          // delete the properties\n          setSizeCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnResizeHandler,\n      options: OnResizeOptionsInternal,\n    ) => {\n      const element = options._element;\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n        xObserver.unobserve(element);\n        MH.deleteKey(allSizeData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = (entry: ResizeObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      const latestData = getSizeData(entry);\n      allSizeData.set(element, latestData);\n\n      debug: logger?.debug9(\"New size data\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        const thresholdsExceeded = hasExceededThreshold(\n          entry._options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\"Threshold not exceeded\");\n          continue;\n        }\n\n        entry._data = latestData;\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentSize = fetchCurrentSize;\n\n    // ----------\n\n    this.trackSize = async (handler?, options?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      return setupOnResize(handler, options);\n    };\n\n    // ----------\n\n    this.noTrackSize = (handler?, target?) => {\n      if (!handler) {\n        handler = setSizeCssProps;\n      }\n\n      removeOnResize(handler, target); // no need to await\n    };\n\n    // ----------\n\n    this.onResize = setupOnResize;\n\n    // ----------\n\n    this.offResize = (handler, target?) => {\n      removeOnResize(handler, target); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type SizeWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnResizeOptions.debounceWindow | debounceWindow} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnResizeOptions.threshold | threshold} in calls to\n   * {@link SizeWatcher.onResize}.\n   *\n   * @defaultValue 50\n   */\n  resizeThreshold?: number;\n};\n\n/**\n * @interface\n */\nexport type OnResizeOptions = {\n  /**\n   * If it is not given, or is `null` or `window`, then it will track the size\n   * of the viewport (akin to `clientHeight` on `documentElement`).\n   *\n   * If it is `document`, then it will use `document.documentElement`.\n   *\n   * Other values of target must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  target?: SizeTarget;\n\n  /**\n   * Specifies whether to listen for changes in content box size or border box\n   * size.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  box?: Box;\n\n  /**\n   * Specifies whether to listen for changes in width or height.\n   *\n   * If not given, then it listens for changes in either.\n   *\n   * @defaultValue undefined\n   */\n  dimension?: Dimension;\n\n  /**\n   * If non-0, the handler will only be called when the target's size in the\n   * observed {@link OnResizeOptions.dimension} and {@link OnResizeOptions.box}\n   * type has changed at least `threshold` pixels since the last time the\n   * handler was called.\n   *\n   * Special case when `threshold` is 0 and at least one of\n   * {@link OnResizeOptions.dimension} or {@link OnResizeOptions.box} is given:\n   * if there's a resize event but the size in the observed dimensions/box\n   * types has not changed, the callback is _not_ called.\n   *\n   * @defaultValue {@link SizeWatcherConfig.resizeThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * @defaultValue {@link SizeWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * The handler is invoked with three arguments:\n *\n * - the element that has been resized: if the target you requested was the\n *   viewport, then this will be a fixed positioned overlay that tracks the\n *   size of the viewport\n * - the {@link SizeData} for the element\n */\nexport type OnResizeHandlerArgs = [Element, SizeData];\nexport type OnResizeCallback = Callback<OnResizeHandlerArgs>;\nexport type OnResizeHandler =\n  | CallbackHandler<OnResizeHandlerArgs>\n  | OnResizeCallback;\n\nexport type SizeData = Record<Box, Size>;\n\n// ----------------------------------------\n\ntype SizeWatcherConfigInternal = {\n  _debounceWindow: number;\n  _resizeThreshold: number;\n};\n\ntype OnResizeOptionsInternal = {\n  _element: Element;\n  _box: Box | null;\n  _dimension: Dimension | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnResizeCallback;\n  _options: OnResizeOptionsInternal;\n  _data?: SizeData;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, SizeWatcher>();\n\nconst getConfig = (config: SizeWatcherConfig): SizeWatcherConfigInternal => {\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _resizeThreshold: toNonNegNum(config.resizeThreshold, 50) || 1,\n  };\n};\n\n// --------------------\n\nconst hasExceededThreshold = (\n  options: OnResizeOptionsInternal,\n  latestData: SizeData,\n  lastThresholdData: SizeData | undefined,\n): boolean => {\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  let box: Box, dim: Dimension;\n  for (box in latestData) {\n    if (options._box && options._box !== box) {\n      continue;\n    }\n\n    for (dim in latestData[box]) {\n      if (options._dimension && options._dimension !== dim) {\n        continue;\n      }\n\n      const diff = MH.abs(latestData[box][dim] - lastThresholdData[box][dim]);\n      if (diff >= options._threshold) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nconst getSizeData = (entry: ResizeObserverEntry): SizeData => {\n  const borderBox = getEntryBorderBox(entry, true);\n  const contentBox = getEntryContentBox(entry);\n\n  return {\n    border: borderBox,\n    content: contentBox,\n  };\n};\n\nconst setSizeCssProps = (\n  element: Element,\n  sizeData: SizeData | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetViewportOverlay()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"window-\";\n  }\n\n  const props = {\n    borderWidth: sizeData?.border[MC.S_WIDTH],\n    borderHeight: sizeData?.border[MC.S_HEIGHT],\n    contentWidth: sizeData?.content[MC.S_WIDTH],\n    contentHeight: sizeData?.content[MC.S_HEIGHT],\n  };\n  setNumericStyleProps(element, props, { _prefix: prefix }); // don't await here\n};\n\nconst fetchElement = async (\n  target: SizeTarget | undefined,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  }\n\n  if (!target || target === MH.getWindow()) {\n    return fetchViewportOverlay();\n  }\n\n  if (target === MH.getDoc()) {\n    return MH.getDocElement();\n  }\n\n  throw MH.usageError(\"Unsupported resize target\");\n};\n\nconst invokeCallback = (\n  callback: OnResizeCallback,\n  element: Element,\n  sizeData: SizeData,\n) => callback.invoke(element, MH.copyObject(sizeData)).catch(logError);\n","/**\n * @module Watchers/LayoutWatcher\n */\n\n// NOTES FOR DEVELOPERS\n//\n// For each layout (device or aspect ratio), we create an overlay that has a\n// a width that corresponds to the layout:\n//  - for device layouts, it's a fixed width in pixels, equal to the minimum\n//    width of the device\n//  - for aspect ratio layouts, the overlay has a width that's relative to\n//    the root's height, equal to the minimum width of the aspect ratio\n//\n// Then we observe each overlay with an IntersectionObserver whose root\n// is this Watcher's root and whose root margin is -100% from the left (i.e.\n// right-most edge of the root).\n//\n// If the root is null, i.e. the viewport, the overlays will have a \"fixed\"\n// position and be inserted in document.body. Otherwise, they'll be inserted\n// in the root element with an \"absolute\" position. The root element, if not\n// body must be positioned. It gets a default position of \"relative\" through\n// the class `.lisn-overlay-container`, which Overlays ensures it gets.\n//\n// If using custom root we track its size through SizeWatcher as the\n// aspectRatio overlays are relative to the height, and we can't rely on CSS\n// alone as the root may not have a fixed height through CSS.\n//\n// Whenever any overlay intersects the root, this means that the viewport\n// width is now equal to or narrower than the overlay.\n//\n// ~~~~ The current device or aspect ratio corresponds to the _widest_\n// ~~~~ overlay that does not intersect.\n//\n// For example:\n//\n// | mobile\n// ========| mobile-wide\n// ======================| tablet\n// =========================================| desktop\n//\n// _________________________________| viewport width\n//\n// Here, mobile, mobile-wide and tablet overlays are _not_ intersecting, only\n// desktop intersects. The device layout is therefore tablet.\n//\n// Therefore:\n// - have the layout bit spaces ordered from narrowest layout at lowest bit\n//   to widest layout at hightest bit\n// - keep a running bitmask of which overlays are not intersecting and update\n//   it each time there is an IntersectionObserverEntry.\n// - get the highest device or aspect ratio bit in that bitmask to find out\n//   the widest non-intersecting overlay\n//\n// For simplicity we create overlays also for layouts that have a 0-width.\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  Layout,\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport {\n  getLayoutBitmask,\n  NUM_LAYOUTS,\n  ORDERED_DEVICES,\n  ORDERED_ASPECTR,\n} from \"@lisn/utils/layout\";\nimport { logError, logWarn } from \"@lisn/utils/log\";\nimport { omitKeys, copyExistingKeys } from \"@lisn/utils/misc\";\nimport { createOverlay } from \"@lisn/utils/overlays\";\nimport { objToStrKey } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap } from \"@lisn/modules/x-map\";\n\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link LayoutWatcher} listens for changes in either the width or aspect\n * ratio of the viewport or the given {@link LayoutWatcherConfig.root | root}.\n *\n * It does not track resize events; rather it's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class LayoutWatcher {\n  /**\n   * Call the given handler whenever the layout changes.\n   *\n   * Unless {@link OnLayoutOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current layout.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times, even if\n   * the options differ. If the handler has already been added, it is removed\n   * and re-added with the current options.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onLayout: (\n    handler: OnLayoutHandler,\n    options?: OnLayoutOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   */\n  readonly offLayout: (handler: OnLayoutHandler) => void;\n\n  /**\n   * Get the current screen layout.\n   */\n  readonly fetchCurrentLayout: () => Promise<LayoutData>;\n\n  /**\n   * Creates a new instance of LayoutWatcher with the given\n   * {@link LayoutWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: LayoutWatcherConfig = {}) {\n    return new LayoutWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of LayoutWatcher with the given\n   * {@link LayoutWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: LayoutWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new LayoutWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: LayoutWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"LayoutWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"LayoutWatcher\", logAtCreation: config })\n      : null;\n    let nonIntersectingBitmask = 0;\n    let currentLayoutData: LayoutData = {\n      device: null,\n      aspectRatio: null,\n    };\n\n    const allCallbacks = MH.newMap<\n      OnLayoutHandler,\n      {\n        _callback: OnLayoutCallback;\n        _layoutBitmask: number;\n      }\n    >();\n\n    // ----------\n\n    const fetchCurrentLayout = async (): Promise<LayoutData> => {\n      await readyPromise;\n\n      return MH.copyObject(currentLayoutData);\n    };\n\n    // ----------\n\n    const setupOverlays = async () => {\n      const { root, overlays } = await createOverlays(\n        config._root,\n        config._deviceBreakpoints,\n        config._aspectRatioBreakpoints,\n      );\n\n      return MH.newPromise<void>((resolve) => {\n        let isReady = false;\n\n        const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n          const numEntries = MH.lengthOf(entries);\n          debug: logger?.debug9(`Got ${numEntries} new entries`, entries);\n\n          if (!isReady) {\n            /* istanbul ignore next */ // shouldn't happen\n            if (numEntries < NUM_LAYOUTS) {\n              logWarn(\n                MH.bugError(\n                  `Got IntersectionObserver ${numEntries}, ` +\n                    `expected >= ${NUM_LAYOUTS}`,\n                ),\n              );\n            }\n          }\n\n          for (const entry of entries) {\n            nonIntersectingBitmask = getNonIntersecting(\n              nonIntersectingBitmask,\n              entry,\n            );\n          }\n\n          // If this is the initial call from IntersectionObserver, skip callbacks.\n          // Those that have skipInitial: false would be called elsewhere, by\n          // setupOnLayout\n          processLayoutChange(!isReady);\n          isReady = true;\n          resolve(); // ready after IntersectionObserver has called us the 1st time\n        };\n\n        // ----------\n\n        const observeOptions = {\n          root,\n          rootMargin: \"5px 0% 5px -100%\",\n        };\n\n        const observer = MH.newIntersectionObserver(\n          intersectionHandler,\n          observeOptions,\n        );\n\n        for (const triggerOverlay of overlays) {\n          observer.observe(triggerOverlay);\n        }\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnLayoutHandler,\n      layoutBitmask: number,\n    ): OnLayoutCallback => {\n      MH.remove(allCallbacks.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", layoutBitmask);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler);\n      });\n\n      allCallbacks.set(handler, {\n        _callback: callback,\n        _layoutBitmask: layoutBitmask,\n      });\n      return callback;\n    };\n\n    const setupOnLayout = async (\n      handler: OnLayoutHandler,\n      options: OnLayoutOptions | undefined,\n    ) => {\n      const layoutBitmask = getLayoutBitmask(options);\n      const callback = createCallback(handler, layoutBitmask);\n\n      if (options?.skipInitial) {\n        return;\n      }\n\n      const layoutData = await fetchCurrentLayout();\n\n      if (\n        !callback.isRemoved() &&\n        changeMatches(layoutBitmask, layoutData, null)\n      ) {\n        debug: logger?.debug5(\"Calling initially with\", layoutData);\n        await invokeCallback(callback, layoutData);\n      }\n    };\n\n    const deleteHandler = (handler: OnLayoutHandler) => {\n      MH.deleteKey(allCallbacks, handler);\n      // no need to unobserve the overlays\n    };\n\n    const processLayoutChange = (skipCallbacks: boolean) => {\n      const deviceBit = MH.floor(\n        MH.log2(nonIntersectingBitmask & ORDERED_DEVICES.bitmask),\n      );\n\n      const aspectRatioBit = MH.floor(\n        MH.log2(nonIntersectingBitmask & ORDERED_ASPECTR.bitmask),\n      );\n\n      const layoutData: LayoutData = { device: null, aspectRatio: null };\n\n      // -Infinity means all of the overlays are intersecting, which would only\n      // happen if the narrowest overlay is not actually 0-width (which is not the\n      // case by default and against the recommended settings).\n      if (deviceBit !== -MC.INFINITY) {\n        layoutData.device = ORDERED_DEVICES.nameOf(1 << deviceBit);\n      }\n      if (aspectRatioBit !== -MC.INFINITY) {\n        layoutData.aspectRatio = ORDERED_ASPECTR.nameOf(1 << aspectRatioBit);\n      }\n\n      debug: logger?.debug8(\"New layout\", layoutData);\n\n      if (!skipCallbacks) {\n        for (const entry of allCallbacks.values()) {\n          const layoutBitmask = entry._layoutBitmask;\n          if (!changeMatches(layoutBitmask, layoutData, currentLayoutData)) {\n            debug: logger?.debug9(\n              `Layout change does not match bitmask ${layoutBitmask}`,\n            );\n            continue;\n          }\n\n          invokeCallback(entry._callback, layoutData);\n        }\n      }\n\n      currentLayoutData = layoutData;\n    };\n\n    const readyPromise = setupOverlays(); // no need to await\n\n    // ----------\n\n    this.fetchCurrentLayout = fetchCurrentLayout;\n\n    // ----------\n\n    this.onLayout = setupOnLayout;\n\n    // ----------\n\n    this.offLayout = (handler) => {\n      debug: logger?.debug5(\"Removing handler\");\n      MH.remove(allCallbacks.get(handler)?._callback);\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type LayoutWatcherConfig = {\n  /**\n   * The root element whose layout to watch. If not given or `null`, then the\n   * viewport layout is watched.\n   *\n   * @defaultValue null\n   */\n  root?: HTMLElement | null;\n\n  /**\n   * Use custom device breakpoints. Only known device names ({@link Device})\n   * are supported. If any are missing from the given dictionary, the value\n   * from {@link settings.deviceBreakpoints} is used.\n   *\n   * @defaultValue {@link settings.deviceBreakpoints}\n   */\n  deviceBreakpoints?: typeof settings.deviceBreakpoints;\n\n  /**\n   * Use custom aspect ratio breakpoints. Only known aspect ratio names\n   * ({@link AspectRatio}) are supported. If any are missing from the given\n   * dictionary, the value from {@link settings.aspectRatioBreakpoints} is\n   * used.\n   *\n   * @defaultValue {@link settings.aspectRatioBreakpoints}\n   */\n  aspectRatioBreakpoints?: typeof settings.aspectRatioBreakpoints;\n};\n\n/**\n * @interface\n */\nexport type OnLayoutOptions = {\n  /**\n   * Specifies a list of {@link Device}s to target for.\n   *\n   * The handler will only be called if there is a change of device to a device\n   * matching the specification.\n   *\n   * It can be:\n   * - \"min <Device>\": devices at least as wide as `<Device>`\n   * - \"max <Device>\": devices at most as wide as `<Device>`\n   * - \"<DeviceMin> to <DeviceMax>\": devices at least as wide as `<DeviceMin>`\n   *                                 and at most as wide as `<DeviceMax>`\n   * - a comma-separated list of device names\n   * - an array of device names\n   *\n   * **NOTE**\n   *\n   * If only one of {@link devices} or {@link aspectRatios} is specified, the\n   * handler will only be called for matching changes of device or aspect ratio\n   * respectively.\n   *\n   * If neither is specified, the handler will be called for any change of layout\n   * (device or aspect ratio).\n   *\n   * Also note that an empty array is treated the same as not given, or `null`.\n   *\n   * @defaultValue undefined\n   */\n  devices?: DeviceSpec | Device[];\n\n  /**\n   * Specifies a list of {@link AspectRatio}s to target for.\n   *\n   * The handler will only be called if there is a change of aspect ratio to\n   * an aspect ratios matching the specification.\n   *\n   * It can be:\n   * - \"min <AspectRatio>\": aspect ratios at least as wide as `<AspectRatio>`\n   * - \"max <AspectRatio>\": aspect ratios at most as wide as `<AspectRatio>`\n   * - \"<AspectRatioMin> to <AspectRatioMax>\": aspect ratios at least as wide\n   *                        as `<AspectRatioMin>` and at most as wide as\n   *                        `<AspectRatioMax>`\n   * - a comma-separated list of aspect ratio names\n   * - an array of aspect ratio names\n   *\n   * **NOTE**\n   *\n   * If only one of {@link devices} or {@link aspectRatios} is specified, the\n   * handler will only be called for matching changes of device or aspect ratio\n   * respectively.\n   *\n   * If neither is specified, the handler will be called for any change of layout\n   * (device or aspect ratio).\n   *\n   * @defaultValue undefined\n   */\n  aspectRatios?: AspectRatioSpec | AspectRatio[];\n\n  /**\n   * Do not call the handler until there's a future change of layout.\n   *\n   * By default, we call the handler (almost) immediately with the current\n   * layout data if it matches the given {@link devices} and {@link aspectRatios}.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with one argument:\n *\n * - the current {@link LayoutData}\n */\nexport type OnLayoutHandlerArgs = [LayoutData];\nexport type OnLayoutCallback = Callback<OnLayoutHandlerArgs>;\nexport type OnLayoutHandler =\n  | CallbackHandler<OnLayoutHandlerArgs>\n  | OnLayoutCallback;\n\n/**\n * Note that {@link device} or {@link aspectRatio} would only be null if the\n * viewport is narrower than the narrowest device/aspect ratio. This would only\n * happen if the narrowest device/aspect ratio is _not_ 0-width (which is not\n * the case with the default breakpoints and is against the recommendation for\n * setting breakpoints.\n */\nexport type LayoutData = {\n  device: Device | null;\n  aspectRatio: AspectRatio | null;\n};\n\n// ----------------------------------------\n\ntype LayoutWatcherConfigInternal = {\n  _root: HTMLElement | null;\n  _deviceBreakpoints: typeof settings.deviceBreakpoints;\n  _aspectRatioBreakpoints: typeof settings.aspectRatioBreakpoints;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<HTMLElement | null, Map<string, LayoutWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst VAR_BORDER_HEIGHT = MH.prefixCssJsVar(\"border-height\");\nconst PREFIX_DEVICE = MH.prefixName(\"device\");\nconst PREFIX_ASPECTR = MH.prefixName(\"aspect-ratio\");\n\nconst getConfig = (\n  config: LayoutWatcherConfig | undefined,\n): LayoutWatcherConfigInternal => {\n  const deviceBreakpoints = MH.copyObject(settings.deviceBreakpoints);\n  if (config?.deviceBreakpoints) {\n    copyExistingKeys(config.deviceBreakpoints, deviceBreakpoints);\n  }\n\n  const aspectRatioBreakpoints = MH.copyObject(settings.aspectRatioBreakpoints);\n\n  if (config?.aspectRatioBreakpoints) {\n    copyExistingKeys(config.aspectRatioBreakpoints, aspectRatioBreakpoints);\n  }\n\n  return {\n    _root: config?.root || null,\n    _deviceBreakpoints: deviceBreakpoints,\n    _aspectRatioBreakpoints: aspectRatioBreakpoints,\n  };\n};\n\n// ----------------------------------------\n\nconst createOverlays = async (\n  root: HTMLElement | null,\n  deviceBreakpoints: typeof settings.deviceBreakpoints,\n  aspectRatioBreakpoints: typeof settings.aspectRatioBreakpoints,\n) => {\n  const overlayPromises = [];\n\n  let overlayParent: HTMLElement;\n  if (root) {\n    overlayParent = root;\n  } else {\n    // Since modals remove the scrollbar on the body when active, the width of\n    // the body changes upon open/close of a modal, which would create\n    // glitching if it happens near a device breakpoint. So if the root is the\n    // viewport, we create a fixed positioned container to hold the overlays\n    // and set its width to be 100vw and use that as the root of\n    overlayParent = await createOverlay({\n      style: {\n        position: \"fixed\",\n        [MC.S_WIDTH]: \"100vw\",\n      },\n    });\n  }\n\n  let device: Device;\n  for (device in deviceBreakpoints) {\n    overlayPromises.push(\n      createOverlay({\n        parent: overlayParent,\n        style: {\n          position: \"absolute\",\n          [MC.S_WIDTH]: deviceBreakpoints[device] + \"px\",\n        },\n        data: {\n          [PREFIX_DEVICE]: device,\n        },\n      }),\n    );\n  }\n\n  const parentHeightCss = root ? `var(${VAR_BORDER_HEIGHT}, 0) * 1px` : \"100vh\";\n  if (root) {\n    SizeWatcher.reuse().trackSize(null, { target: root });\n  }\n\n  let aspectRatio: AspectRatio;\n  for (aspectRatio in aspectRatioBreakpoints) {\n    overlayPromises.push(\n      createOverlay({\n        parent: overlayParent,\n        style: {\n          position: \"absolute\",\n          [MC.S_WIDTH]:\n            `calc(${aspectRatioBreakpoints[aspectRatio]} ` +\n            `* ${parentHeightCss})`,\n        },\n        data: {\n          [PREFIX_ASPECTR]: aspectRatio,\n        },\n      }),\n    );\n  }\n\n  const overlays = await MH.promiseAll(overlayPromises);\n  return { root: overlayParent, overlays };\n};\n\nconst getOverlayLayout = (overlay: HTMLElement): Layout | null => {\n  const layout =\n    getData(overlay, PREFIX_DEVICE) || getData(overlay, PREFIX_ASPECTR);\n  /* istanbul ignore else */\n  if (layout && (ORDERED_DEVICES.has(layout) || ORDERED_ASPECTR.has(layout))) {\n    return layout;\n  } else {\n    // shouldn't happen\n    logError(MH.bugError(\"No device or aspectRatio data attribute\"));\n    return null;\n  }\n};\n\nconst changeMatches = (\n  layoutBitmask: number,\n  thisLayoutData: LayoutData,\n  prevLayoutData: LayoutData | undefined | null,\n): boolean => {\n  // True if the callback is interested in a change of device and there's a\n  // change of device and the new device is one of the ones it's interested in\n  // (or it's null, i.e. device is undefined).\n  // And the same for aspect ratios.\n\n  if (\n    prevLayoutData?.device !== thisLayoutData.device &&\n    (!thisLayoutData.device ||\n      ORDERED_DEVICES.bit[thisLayoutData.device] & layoutBitmask)\n  ) {\n    return true;\n  }\n\n  if (\n    prevLayoutData?.aspectRatio !== thisLayoutData.aspectRatio &&\n    (!thisLayoutData.aspectRatio ||\n      ORDERED_ASPECTR.bit[thisLayoutData.aspectRatio] & layoutBitmask)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nconst getNonIntersecting = (\n  nonIntersectingBitmask: number, // current\n  entry: IntersectionObserverEntry,\n): number => {\n  const target = MH.targetOf(entry);\n  /* istanbul ignore next */ // shouldn't happen\n  if (!MH.isHTMLElement(target)) {\n    logError(\n      MH.bugError(\n        `IntersectionObserver called us with '${MH.typeOrClassOf(target)}'`,\n      ),\n    );\n    return nonIntersectingBitmask;\n  }\n\n  const layout = getOverlayLayout(target);\n  let bit = 0;\n  if (!layout) {\n    // error already logged by getOverlayLayout\n  } else if (ORDERED_DEVICES.has(layout)) {\n    bit = ORDERED_DEVICES.bit[layout];\n  } else if (ORDERED_ASPECTR.has(layout)) {\n    bit = ORDERED_ASPECTR.bit[layout];\n  } else {\n    /* istanbul ignore next */ // shouldn't happen\n    logError(\n      MH.bugError(`Unknown device or aspectRatio data attribute: ${layout}`),\n    );\n  }\n\n  if (entry.isIntersecting) {\n    nonIntersectingBitmask &= ~bit;\n  } else {\n    nonIntersectingBitmask |= bit;\n  }\n\n  return nonIntersectingBitmask;\n};\n\nconst invokeCallback = (callback: OnLayoutCallback, layoutData: LayoutData) =>\n  callback.invoke(MH.copyObject(layoutData)).catch(logError);\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { PointerAction } from \"@lisn/globals/types\";\n\nimport { isValidStrList } from \"@lisn/utils/validation\";\n\n/**\n * Returns true if the given string is a valid pointer action.\n *\n * @category Validation\n */\nexport const isValidPointerAction = (action: string): action is PointerAction =>\n  MH.includes(POINTER_ACTIONS, action);\n\n/**\n * Returns true if the given string or array is a valid list of pointer\n * actions.\n *\n * @category Validation\n */\nexport const isValidPointerActionList = (actions: string | string[]) =>\n  isValidStrList(actions, isValidPointerAction, false);\n\n/**\n * @ignore\n * @internal\n */\nexport const POINTER_ACTIONS: PointerAction[] = [\n  MC.S_CLICK,\n  MC.S_HOVER,\n  MC.S_PRESS,\n] as const;\n","/**\n * @module Watchers/PointerWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { PointerAction, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport {\n  addEventListenerTo,\n  removeEventListenerFrom,\n  preventSelect,\n  undoPreventSelect,\n} from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { isValidPointerAction, POINTER_ACTIONS } from \"@lisn/utils/pointer\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * {@link PointerWatcher} listens for simple pointer actions like clicks, press\n * and hold or hover.\n */\nexport class PointerWatcher {\n  /**\n   * Call the `startHandler` whenever the pointer action begins.\n   * Call the `endHandler` whenever the pointer action ends. If `endHandler` is\n   * not given, it defaults to `startHandler`.\n   *\n   * For an explanation of what \"begins\" and \"ends\" means for each supported\n   * action, see {@link OnPointerOptions.actions}.\n   *\n   * **IMPORTANT:** The same handlers can _not_ be added multiple times for the\n   * same event target, even if the options differ. If the handler has already\n   * been added for this target, then it will be removed and re-added with the\n   * current options.\n   */\n  readonly onPointer: (\n    target: EventTarget,\n    startHandler: OnPointerHandler,\n    endHandler?: OnPointerHandler,\n    options?: OnPointerOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes previously added handlers.\n   */\n  readonly offPointer: (\n    target: EventTarget,\n    startHandler: OnPointerHandler,\n    endHandler?: OnPointerHandler,\n  ) => void;\n\n  /**\n   * Creates a new instance of PointerWatcher with the given\n   * {@link PointerWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: PointerWatcherConfig = {}) {\n    return new PointerWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of PointerWatcher with the given\n   * {@link PointerWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: PointerWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new PointerWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: PointerWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"PointerWatcher.create\");\n    }\n\n    // Keep this watcher super simple. The events we listen for don't fire at a\n    // high rate and it's unlikely for there to be many many callbacks for each\n    // target and event type, so don't bother with using a delegating listener,\n    // etc.\n\n    // Keep a map of callbacks so we can lookup the callback by the handler\n    // (and also to prevent duplicate handler for each target, for consistency\n    // with other watchers).\n    const allCallbacks = newXWeakMap<\n      EventTarget,\n      Map<OnPointerHandler, OnPointerCallback>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const createCallback = (\n      target: EventTarget,\n      handler: OnPointerHandler,\n    ): OnPointerCallback => {\n      MH.remove(allCallbacks.get(target)?.get(handler));\n\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        MH.deleteKey(allCallbacks.get(target), handler);\n      });\n\n      allCallbacks.sGet(target).set(handler, callback);\n      return callback;\n    };\n\n    // async for consistency with other watchers and future compatibility in\n    // case of change needed\n    const setupOnPointer = async (\n      target: EventTarget,\n      startHandler: OnPointerHandler,\n      endHandler: OnPointerHandler | undefined,\n      userOptions: OnPointerOptions | undefined,\n    ) => {\n      const options = getOptions(config, userOptions);\n      const startCallback = createCallback(target, startHandler);\n      const endCallback =\n        endHandler && endHandler !== startHandler\n          ? createCallback(target, endHandler)\n          : startCallback;\n\n      for (const action of options._actions) {\n        listenerSetupFn[action](target, startCallback, endCallback, options);\n      }\n    };\n\n    // ----------\n\n    this.onPointer = setupOnPointer;\n\n    // ----------\n\n    this.offPointer = (target, startHandler, endHandler?) => {\n      const entry = allCallbacks.get(target);\n      MH.remove(entry?.get(startHandler));\n      if (endHandler) {\n        MH.remove(entry?.get(endHandler));\n      }\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type PointerWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnPointerOptions.preventDefault | preventDefault} in calls to\n   * {@link PointerWatcher.onPointer}.\n   *\n   * @defaultValue false\n   */\n  preventDefault?: boolean;\n\n  /**\n   * The default value for\n   * {@link OnPointerOptions.preventSelect | preventSelect} in calls to\n   * {@link PointerWatcher.onPointer}.\n   *\n   * @defaultValue true\n   */\n  preventSelect?: boolean;\n};\n\n/**\n * @interface\n */\nexport type OnPointerOptions = {\n  /**\n   * One or more of of \"click\", \"hover\" or \"press\". If not specified, then all\n   * actions are enabled.\n   *\n   * It can be a comma-separated list of {@link PointerAction}s or an array of\n   * such actions.\n   *\n   * For click actions, the start handler is called for every odd number of\n   * clicks (1st, 3rd, 5th, etc), and the end handler is called for every other\n   * click. It functions like a toggle.\n   *\n   * For hover and press actions, the start handler is called when the pointer\n   * enters or presses down on the target respectively, and the end handler is\n   * called when the pointer leaves or comes off the target respectively.\n   *\n   * Note that on touch screens, hover and press actions behave identically.\n   *\n   * @defaultValue undefined\n   */\n  actions?: CommaSeparatedStr<PointerAction> | PointerAction[];\n\n  /**\n   * If true, the events of the pointer actions, e.g. click, will have their\n   * default action prevented.\n   *\n   * @defaultValue {@link PointerWatcherConfig.preventDefault}\n   */\n  preventDefault?: boolean;\n\n  /**\n   * If true (default), then for press actions (and hover actions on touch\n   * screens) it will prevent starting a text selection.\n   *\n   * @defaultValue {@link PointerWatcherConfig.preventSelect}\n   */\n  preventSelect?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the event target that was passed to the {@link PointerWatcher.onPointer}\n *   call (equivalent to\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget | Event:currentTarget}).\n * - the {@link PointerActionData} describing the state of the action.\n */\nexport type OnPointerHandlerArgs = [EventTarget, PointerActionData, Event];\nexport type OnPointerCallback = Callback<OnPointerHandlerArgs>;\nexport type OnPointerHandler =\n  | CallbackHandler<OnPointerHandlerArgs>\n  | OnPointerCallback;\n\nexport type PointerActionData = {\n  action: PointerAction;\n  state: \"ON\" | \"OFF\";\n};\n\n// ----------------------------------------\n\ntype PointerWatcherConfigInternal = {\n  _preventDefault: boolean;\n  _preventSelect: boolean;\n};\n\ntype OnPointerOptionsInternal = {\n  _actions: PointerAction[];\n  _preventDefault: boolean;\n  _preventSelect: boolean;\n};\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, PointerWatcher>();\n\nconst getConfig = (\n  config: PointerWatcherConfig | undefined,\n): PointerWatcherConfigInternal => {\n  return {\n    _preventDefault: config?.preventDefault ?? false,\n    _preventSelect: config?.preventSelect ?? true,\n  };\n};\n\nconst getOptions = (\n  config: PointerWatcherConfigInternal,\n  options: OnPointerOptions | undefined,\n): OnPointerOptionsInternal => {\n  return {\n    _actions:\n      validateStrList(\"actions\", options?.actions, isValidPointerAction) ||\n      POINTER_ACTIONS,\n    _preventDefault: options?.preventDefault ?? config._preventDefault,\n    _preventSelect: options?.preventSelect ?? config._preventSelect,\n  };\n};\n\nconst setupClickListener = (\n  target: EventTarget,\n  startCallback: OnPointerCallback,\n  endCallback: OnPointerCallback,\n  options: OnPointerOptionsInternal,\n) => {\n  // false if next will start; true if next will end.\n  let toggleState = false;\n\n  const wrapper = (event: Event) => {\n    if (options._preventDefault) {\n      MH.preventDefault(event);\n    }\n\n    toggleState = !toggleState;\n\n    const data: PointerActionData = {\n      action: MC.S_CLICK,\n      state: toggleState ? \"ON\" : \"OFF\",\n    };\n\n    invokeCallback(\n      toggleState ? startCallback : endCallback,\n      target,\n      data,\n      event,\n    );\n  };\n\n  addEventListenerTo(target, MC.S_CLICK, wrapper);\n\n  const remove = () => removeEventListenerFrom(target, MC.S_CLICK, wrapper);\n\n  startCallback.onRemove(remove);\n  endCallback.onRemove(remove);\n};\n\nconst setupPointerListeners = (\n  action: typeof MC.S_HOVER | typeof MC.S_PRESS,\n  target: EventTarget,\n  startCallback: OnPointerCallback,\n  endCallback: OnPointerCallback,\n  options: OnPointerOptionsInternal,\n) => {\n  // If the browser doesn't support pointer events, then\n  // addEventListenerTo will transform these into mouse*\n  const startEventSuff = action === MC.S_HOVER ? \"enter\" : \"down\";\n  const endEventSuff = action === MC.S_HOVER ? \"leave\" : \"up\";\n  const startEvent = MC.S_POINTER + startEventSuff;\n  const endEvent = MC.S_POINTER + endEventSuff;\n\n  const wrapper = (event: Event, callback: OnPointerCallback) => {\n    if (options._preventDefault) {\n      MH.preventDefault(event);\n    }\n\n    const data: PointerActionData = {\n      action,\n      state:\n        MH.strReplace(event.type, /pointer|mouse/, \"\") === startEventSuff\n          ? \"ON\"\n          : \"OFF\",\n    };\n\n    invokeCallback(callback, target, data, event);\n  };\n  const startListener = (event: Event) => wrapper(event, startCallback);\n  const endListener = (event: Event) => wrapper(event, endCallback);\n\n  addEventListenerTo(target, startEvent, startListener);\n  addEventListenerTo(target, endEvent, endListener);\n\n  // On some touch screen devices pressing and holding will initiate select\n  // and result in touchend, so we prevent text select\n  if (options._preventSelect) {\n    preventSelect(target);\n  }\n\n  startCallback.onRemove(() => {\n    undoPreventSelect(target);\n    removeEventListenerFrom(target, startEvent, startListener);\n  });\n\n  endCallback.onRemove(() => {\n    undoPreventSelect(target);\n    removeEventListenerFrom(target, endEvent, endListener);\n  });\n};\n\nconst listenerSetupFn: {\n  [D in PointerAction]: (\n    target: EventTarget,\n    startCallback: OnPointerCallback,\n    endCallback: OnPointerCallback,\n    options: OnPointerOptionsInternal,\n  ) => void;\n} = {\n  click: setupClickListener,\n  hover: (...args) => setupPointerListeners(MC.S_HOVER, ...args),\n  press: (...args) => setupPointerListeners(MC.S_PRESS, ...args),\n} as const;\n\nconst invokeCallback = (\n  callback: OnPointerCallback,\n  target: EventTarget,\n  actionData: PointerActionData,\n  event: Event,\n) => callback.invoke(target, MH.copyObject(actionData), event).catch(logError);\n","/**\n * @module Watchers/ScrollWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { XYDirection, ScrollDirection, SizeTarget } from \"@lisn/globals/types\";\n\nimport {\n  ScrollTarget,\n  TargetCoordinate,\n  TargetCoordinates,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { getData, setNumericStyleProps } from \"@lisn/utils/css-alter\";\nimport { getMaxDeltaDirection } from \"@lisn/utils/directions\";\nimport { moveElement, wrapScrollingContent } from \"@lisn/utils/dom-alter\";\nimport { waitForMeasureTime } from \"@lisn/utils/dom-optimize\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { toNonNegNum, maxAbs } from \"@lisn/utils/math\";\nimport {\n  scrollTo,\n  getCurrentScrollAction,\n  getClientWidthNow,\n  getClientHeightNow,\n  tryGetMainScrollableElement,\n  fetchMainContentElement,\n  fetchMainScrollableElement,\n  fetchScrollableElement,\n  isValidScrollDirection,\n  ScrollAction,\n  ScrollToOptions,\n} from \"@lisn/utils/scroll\";\nimport { objToStrKey } from \"@lisn/utils/text\";\nimport { validateStrList } from \"@lisn/utils/validation\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { MutationOperation, DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n// re-export for convenience\nexport type { ScrollAction, ScrollToOptions } from \"@lisn/utils/scroll\";\n\n/**\n * {@link ScrollWatcher} listens for scroll events in any direction.\n *\n * It manages registered callbacks globally and reuses event listeners for more\n * efficient performance.\n */\nexport class ScrollWatcher {\n  /**\n   * Call the given handler whenever the given scrollable is scrolled.\n   *\n   * Unless {@link OnScrollOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the latest scroll data. If a scroll has\n   * not yet been observed on the scrollable and its `scrollTop` and\n   * `scrollLeft` are 0, then the direction is {@link Types.NoDirection} and\n   * the handler is only called if {@link Types.NoDirection} is part of the\n   * supplied {@link OnScrollOptions.directions | options.directions} (or\n   * {@link OnScrollOptions.directions | options.directions} is not given).\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking content size changes using\n   * {@link trackScroll}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly onScroll: (\n    handler: OnScrollHandler,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly offScroll: (\n    handler: OnScrollHandler,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * This everything that {@link onScroll} does plus more:\n   *\n   * In addition to a scroll event, the handler is also called when either the\n   * offset size or scroll (content) size of the scrollable changes as that\n   * would affect its `scrollTopFraction` and `scrollLeftFraction` and possibly\n   * the `scrollTop` and `scrollLeft` as well.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same scrollable, even if the options differ. If the handler has already\n   * been added for this scrollable, either using {@link trackScroll} or using\n   * {@link onScroll}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates a set of CSS variables on the scrollable element's style:\n   *\n   * - If {@link OnScrollOptions.scrollable | options.scrollable} is not given,\n   *   or is `null`, `window` or `document`, the following CSS variables are\n   *   set on the root (`html`) element and represent the scroll of the\n   *   {@link fetchMainScrollableElement}:\n   *   - `--lisn-js--page-scroll-top`\n   *   - `--lisn-js--page-scroll-top-fraction`\n   *   - `--lisn-js--page-scroll-left`\n   *   - `--lisn-js--page-scroll-left-fraction`\n   *   - `--lisn-js--page-scroll-width`\n   *   - `--lisn-js--page-scroll-height`\n   *\n   * - Otherwise, the following variables are set on the scrollable itself,\n   *   and represent its scroll offset:\n   *   - `--lisn-js--scroll-top`\n   *   - `--lisn-js--scroll-top-fraction`\n   *   - `--lisn-js--scroll-left`\n   *   - `--lisn-js--scroll-left-fraction`\n   *   - `--lisn-js--scroll-width`\n   *   - `--lisn-js--scroll-height`\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the options are invalid.\n   */\n  readonly trackScroll: (\n    handler?: OnScrollHandler | null,\n    options?: OnScrollOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackScroll}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly noTrackScroll: (\n    handler?: OnScrollHandler | null,\n    scrollable?: ScrollTarget,\n  ) => void;\n\n  /**\n   * Get the scroll offset of the given scrollable. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param {} realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                    this only when doing realtime scroll-based animations\n   *                    as it may cause a forced layout.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScroll: (\n    scrollable?: ScrollTarget,\n    realtime?: boolean,\n  ) => Promise<ScrollData>;\n\n  /**\n   * Scrolls the given scrollable element to in the given direction.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the direction or options are invalid.\n   */\n  readonly scroll: (\n    direction: XYDirection,\n    options?: ScrollOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Scrolls the given scrollable element to the given `to` scrollable.\n   *\n   * Returns `null` if there's an ongoing scroll that is not cancellable.\n   *\n   * Note that if `to` is an element or a selector, then it _must_ be a\n   * descendant of the scrollable element.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the \"to\" coordinates or options are invalid.\n   *\n   * @param {} to  If this is an element, then its top-left position is used as\n   *               the target coordinates. If it is a string, then it is treated\n   *               as a selector for an element using `querySelector`.\n   * @param {} [options.scrollable]\n   *               If not given, it defaults to {@link fetchMainScrollableElement}\n   *\n   * @return {} `null` if there's an ongoing scroll that is not cancellable,\n   * otherwise a {@link ScrollAction}.\n   */\n  readonly scrollTo: (\n    to: TargetCoordinates | Element | string,\n    options?: ScrollToOptions,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Returns the current {@link ScrollAction} if any.\n   *\n   * @param {} scrollable\n   *               If not given, it defaults to {@link fetchMainScrollableElement}\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   */\n  readonly fetchCurrentScrollAction: (\n    scrollable?: Element,\n  ) => Promise<ScrollAction | null>;\n\n  /**\n   * Cancels the ongoing scroll that's resulting from smooth scrolling\n   * triggered in the past. Does not interrupt or prevent further scrolling.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the scrollable is invalid.\n   *\n   * @param {} [options.immediate]  If true, then it will not use\n   *                                {@link waitForMeasureTime} or\n   *                                {@link Utils.waitForMutateTime | waitForMutateTime}.\n   *                                Warning: this will likely result in forced layout.\n   */\n  readonly stopUserScrolling: (options?: {\n    scrollable?: ScrollTarget;\n    immediate?: boolean;\n  }) => Promise<void>;\n\n  /**\n   * Returns the element that holds the main page content. By default it's\n   * `document.body` but is overridden by\n   * {@link settings.mainScrollableElementSelector}.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainContentElement(): Promise<HTMLElement> {\n    return fetchMainContentElement();\n  }\n\n  /**\n   * Returns the scrollable element that holds the wrapper around the main page\n   * content. By default it's `document.scrollable` (unless `document.body` is\n   * actually scrollable, in which case it will be used) but it will be\n   * different if {@link settings.mainScrollableElementSelector} is set.\n   *\n   * It will wait for the element to be available if not already.\n   */\n  static fetchMainScrollableElement(): Promise<HTMLElement> {\n    return fetchMainScrollableElement();\n  }\n\n  /**\n   * Creates a new instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: ScrollWatcherConfig = {}) {\n    return new ScrollWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing instance of ScrollWatcher with the given\n   * {@link ScrollWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: ScrollWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(myConfig);\n\n    let instance = instances.get(configStrKey);\n    if (!instance) {\n      instance = new ScrollWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ScrollWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ScrollWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ScrollWatcher\", logAtCreation: config })\n      : null;\n\n    const allScrollData = MH.newWeakMap<Element, ScrollData>();\n\n    const activeListeners = MH.newWeakMap<\n      ScrollTarget,\n      { _nRealtime: number }\n    >();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<OnScrollHandler, CallbackEntry>\n    >(() => MH.newMap());\n\n    // ----------\n\n    const fetchCurrentScroll = async (\n      element: Element,\n      realtime = false,\n      isScrollEvent = false,\n    ): Promise<ScrollData> => {\n      // The scroll data can change event without a scroll event, e.g. by the\n      // element changing size, so always get the latest here.\n      const previousEventData = allScrollData.get(element);\n      const latestData = await fetchScrollData(\n        element,\n        previousEventData,\n        realtime,\n      );\n\n      // If there hasn't been a scroll event, use the old scroll direction\n      if (!isScrollEvent && previousEventData) {\n        latestData.direction = previousEventData.direction;\n      }\n      return latestData;\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n      trackType: TrackType,\n    ): CallbackEntry => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler, options._debounceWindow);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      const entry = {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      };\n      allCallbacks.sGet(element).set(handler, entry);\n\n      return entry;\n    };\n\n    // ----------\n\n    const setupOnScroll = async (\n      handler: OnScrollHandler,\n      userOptions: OnScrollOptions | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, userOptions || {});\n      const element = options._element;\n\n      // Don't await for the scroll data before creating the callback so that\n      // setupOnScroll and removeOnScroll have the same \"timing\" and therefore\n      // calling onScroll and offScroll immediately without awaiting removes the\n      // callback.\n      const entry = createCallback(handler, options, trackType);\n      const callback = entry._callback;\n\n      const eventTarget = options._eventTarget;\n      const scrollData = await fetchCurrentScroll(\n        element,\n        options._debounceWindow === 0,\n      );\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      entry._data = scrollData;\n      allScrollData.set(element, scrollData);\n\n      if (trackType === TRACK_FULL) {\n        await setupSizeTrack(entry);\n      }\n\n      let listenerOptions = activeListeners.get(eventTarget);\n      if (!listenerOptions) {\n        debug: logger?.debug4(\"Adding scroll listener\", eventTarget);\n        listenerOptions = { _nRealtime: 0 };\n        activeListeners.set(eventTarget, listenerOptions);\n        // Don't debounce the scroll handler, only the callbacks.\n        addEventListenerTo(eventTarget, MC.S_SCROLL, scrollHandler);\n      }\n\n      if (options._debounceWindow === 0) {\n        listenerOptions._nRealtime++;\n      }\n\n      const directions = options._directions;\n      if (\n        !callback.isRemoved() &&\n        !userOptions?.skipInitial &&\n        directionMatches(directions, scrollData.direction)\n      ) {\n        debug: logger?.debug5(\"Calling initially with\", element, scrollData);\n        // Use a one-off callback that's not debounced for the initial call.\n        await invokeCallback(wrapCallback(handler), element, scrollData);\n      }\n    };\n\n    // ----------\n\n    const removeOnScroll = async (\n      handler: OnScrollHandler,\n      scrollable: ScrollTarget | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOnScrollOptions(config, { scrollable });\n      const element = options._element;\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setScrollCssProps) {\n          // delete the properties\n          setScrollCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnScrollHandler,\n      options: OnScrollOptionsInternal,\n    ) => {\n      const element = options._element;\n      const eventTarget = options._eventTarget;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      const listenerOptions = activeListeners.get(eventTarget);\n      if (listenerOptions && options._debounceWindow === 0) {\n        listenerOptions._nRealtime--;\n      }\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for scrollable; removing listener\",\n          element,\n        );\n\n        MH.deleteKey(allScrollData, element);\n        removeEventListenerFrom(eventTarget, MC.S_SCROLL, scrollHandler);\n        MH.deleteKey(activeListeners, eventTarget);\n      }\n    };\n\n    // ----------\n\n    const setupSizeTrack = async (entry: CallbackEntry) => {\n      const options = entry._options;\n      const element = options._element;\n      const scrollCallback = entry._callback;\n      debug: logger?.debug8(\"Setting up size tracking\", element);\n\n      const doc = MH.getDoc();\n      const docScrollingElement = MH.getDocScrollingElement();\n\n      const resizeCallback = wrapCallback(async () => {\n        // Get the latest scroll data for the scrollable\n        // Currently, the resize callback is already delayed by a frame due to\n        // the SizeWatcher, so we don't need to treat this as realtime.\n        const latestData = await fetchCurrentScroll(element);\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n        } else if (!scrollCallback.isRemoved()) {\n          await invokeCallback(scrollCallback, element, latestData);\n        }\n      });\n\n      scrollCallback.onRemove(resizeCallback.remove);\n\n      // Don't use default instance as it has a high threshold.\n      const sizeWatcher = SizeWatcher.reuse();\n      const setupOnResize = (target?: SizeTarget) =>\n        sizeWatcher.onResize(resizeCallback, {\n          target,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          // TODO maybe accepts resizeThreshold option\n          threshold: options._threshold,\n        });\n\n      if (element === docScrollingElement) {\n        // In case we're tracking the main document scroll, then we only need to\n        // observe the viewport size and the size of the documentElement (which is\n        // the content size).\n\n        setupOnResize(); // viewport size\n        setupOnResize(doc); // content size\n\n        return;\n      }\n\n      // ResizeObserver only detects changes in offset width/height which is\n      // the visible size of the scrolling element, and that is not affected by the\n      // size of its content.\n      // But we also need to detect changes in the scroll width/height which is\n      // the size of the content.\n      // We also need to keep track of elements being added to the scrollable element.\n\n      const observedElements = MH.newSet<Element>([element]);\n\n      // Observe the scrolling element\n      setupOnResize(element);\n\n      // And also its children (if possible, single wrapper around children\n      const allowedToWrap =\n        settings.contentWrappingAllowed === true &&\n        element !== docScrollingElement &&\n        getData(element, MC.PREFIX_NO_WRAP) === null;\n\n      let wrapper: Element;\n      if (allowedToWrap) {\n        // Wrap the content and observe the wrapper\n        wrapper = await wrapScrollingContent(element);\n        setupOnResize(wrapper);\n        observedElements.add(wrapper);\n\n        //\n      } else {\n        for (const child of MH.childrenOf(element)) {\n          setupOnResize(child);\n          observedElements.add(child);\n        }\n      }\n\n      // Watch for newly added elements\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      const onAddedCallback = wrapCallback((operation: MutationOperation) => {\n        const child = MH.currentTargetOf(operation);\n        // If we've just added the wrapper, it will be in DOMWatcher's queue,\n        // so check.\n        if (child !== wrapper) {\n          if (allowedToWrap) {\n            // Move this child into the wrapper. If this results in change of size\n            // for wrapper, SizeWatcher will call us.\n            moveElement(child, { to: wrapper, ignoreMove: true });\n          } else {\n            // Track the size of this child.\n            // Don't skip initial, call the callback now\n            setupOnResize(child);\n            observedElements.add(child);\n          }\n        }\n      });\n\n      domWatcher.onMutation(onAddedCallback, { categories: [MC.S_ADDED] });\n      resizeCallback.onRemove(onAddedCallback.remove);\n    };\n\n    // ----------\n\n    const scrollHandler = async (event: Event) => {\n      // We cannot use event.currentTarget because scrollHandler is called inside\n      // a setTimeout so by that time, currentTarget is null or something else.\n      //\n      // However, target and currentTarget only differ when the event is in the\n      // bubbling or capturing phase. Because\n      //\n      // - the scroll event only bubbles when fired on document, and (it only\n      //   bubbles up to window)\n      // - and we never attach the listener to the capturing phase\n      // - and we always use document instead of window to listen for scroll on\n      //   document\n      //\n      // then event.target suffices.\n      const scrollable = MH.targetOf(event);\n      /* istanbul ignore next */\n      if (!scrollable || !(MH.isElement(scrollable) || MH.isDoc(scrollable))) {\n        return;\n      }\n\n      const element = await fetchScrollableElement(scrollable);\n      const realtime = (activeListeners.get(scrollable)?._nRealtime || 0) > 0;\n      const latestData = await fetchCurrentScroll(element, realtime, true);\n      allScrollData.set(element, latestData);\n\n      debug: logger?.debug9(\"Scroll event\", element, latestData);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        // Consider the direction since the last scroll event and not the\n        // direction based on the largest delta the last time the callback\n        // was called.\n        const options = entry._options;\n        const thresholdsExceeded = hasExceededThreshold(\n          options,\n          latestData,\n          entry._data,\n        );\n\n        if (!thresholdsExceeded) {\n          debug: logger?.debug9(\n            \"Threshold not exceeded\",\n            options,\n            latestData,\n            entry._data,\n          );\n          continue;\n        }\n\n        // If threshold has been exceeded, always update the latest data for\n        // this callback.\n        entry._data = latestData;\n\n        if (!directionMatches(options._directions, latestData.direction)) {\n          debug: logger?.debug9(\n            \"Direction does not match\",\n            options,\n            latestData,\n          );\n          continue;\n        }\n\n        invokeCallback(entry._callback, element, latestData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentScroll = (scrollable?, realtime?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        fetchCurrentScroll(element, realtime),\n      );\n\n    // ----------\n\n    this.scroll = (direction, options = {}) => {\n      if (!isValidScrollDirection(direction)) {\n        throw MH.usageError(`Unknown scroll direction: '${direction}'`);\n      }\n\n      const isVertical = direction === MC.S_UP || direction === MC.S_DOWN;\n      const sign = direction === MC.S_UP || direction === MC.S_LEFT ? -1 : 1;\n      let targetCoordinate: TargetCoordinate;\n\n      const amount = options.amount ?? 100;\n      const asFractionOf = options.asFractionOf;\n\n      if (asFractionOf === \"visible\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * getClientHeightNow(el)) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * getClientWidthNow(el)) / 100;\n\n        //\n      } else if (asFractionOf === \"content\") {\n        targetCoordinate = isVertical\n          ? (el) =>\n              el[MC.S_SCROLL_TOP] +\n              (sign * amount * el[MC.S_SCROLL_HEIGHT]) / 100\n          : (el) =>\n              el[MC.S_SCROLL_LEFT] +\n              (sign * amount * el[MC.S_SCROLL_WIDTH]) / 100;\n\n        //\n      } else if (asFractionOf !== undefined && asFractionOf !== \"pixel\") {\n        throw MH.usageError(\n          `Unknown 'asFractionOf' keyword: '${asFractionOf}'`,\n        );\n\n        //\n      } else {\n        targetCoordinate = isVertical\n          ? (el) => el[MC.S_SCROLL_TOP] + sign * amount\n          : (el) => el[MC.S_SCROLL_LEFT] + sign * amount;\n      }\n\n      const target = isVertical\n        ? { top: targetCoordinate }\n        : { left: targetCoordinate };\n\n      return this.scrollTo(target, options);\n    };\n\n    // ----------\n\n    this.scrollTo = async (to, options = {}) =>\n      scrollTo(\n        to,\n        MH.merge(\n          { duration: config._scrollDuration }, // default\n          options,\n          {\n            scrollable: await fetchScrollableElement(options.scrollable),\n          }, // override\n        ),\n      );\n\n    // ----------\n\n    this.fetchCurrentScrollAction = (scrollable?) =>\n      fetchScrollableElement(scrollable).then((element) =>\n        getCurrentScrollAction(element),\n      );\n\n    // ----------\n\n    this.stopUserScrolling = async (options = {}) => {\n      const element = await fetchScrollableElement(options.scrollable);\n      const stopScroll = () =>\n        MH.elScrollTo(element, {\n          top: element[MC.S_SCROLL_TOP],\n          left: element[MC.S_SCROLL_LEFT],\n        });\n\n      if (options.immediate) {\n        stopScroll();\n      } else {\n        waitForMeasureTime().then(stopScroll);\n      }\n    };\n\n    // ----------\n\n    this.trackScroll = (handler?, options?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      return setupOnScroll(handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackScroll = (handler?, scrollable?) => {\n      if (!handler) {\n        handler = setScrollCssProps;\n      }\n\n      removeOnScroll(handler, scrollable, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onScroll = (handler, options?) =>\n      setupOnScroll(handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offScroll = (handler, scrollable?) => {\n      removeOnScroll(handler, scrollable, TRACK_REGULAR); // no need to await\n    };\n  }\n}\n\n/**\n * @interface\n */\nexport type ScrollWatcherConfig = {\n  /**\n   * The default value for\n   * {@link OnScrollOptions.debounceWindow | debounceWindow} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 75\n   */\n  debounceWindow?: number;\n\n  /**\n   * The default value for\n   * {@link OnScrollOptions.threshold | threshold} in calls to\n   * {@link ScrollWatcher.onScroll}.\n   *\n   * @defaultValue 50\n   */\n  scrollThreshold?: number;\n\n  /**\n   * The default value for\n   * {@link ScrollOptions.duration | duration} in calls to\n   * {@link ScrollWatcher.scroll} and {@link ScrollWatcher.scrollTo}.\n   *\n   * @defaultValue 1000\n   */\n  scrollDuration?: number;\n};\n\n/**\n * @interface\n */\nexport type OnScrollOptions = {\n  /**\n   * If it is not given, or is `null`, `window` or `document`, then it will\n   * track the scroll of the {@link ScrollWatcher.fetchMainScrollableElement}.\n   *\n   * Other values must be an `Element` and are taken literally.\n   *\n   * @defaultValue undefined\n   */\n  scrollable?: ScrollTarget;\n\n  /**\n   * If non-0, the scroll handler will only be called when the scrollable's\n   * scroll offset in the observed direction has changed at least\n   * `scrollThreshold` pixels since the last time the handler was called.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.scrollThreshold}\n   */\n  threshold?: number;\n\n  /**\n   * Specifies a list of {@link ScrollDirection}s to listen for.\n   *\n   * It can be a comma-separated list of direction names or an array of such\n   * names.\n   *\n   * If not given, then it listens for scrolls in any direction, including\n   * {@link Types.NoDirection} and {@link Types.AmbiguousDirection}.\n   *\n   * The {@link Types.NoDirection} occurs when the callback is called initially\n   * (if `skipInitial` is not `true`) and there hasn't yet been a scroll\n   * observed on the scrollable _and_ it's `scrollTop`/`scrollLeft` are 0.\n   *\n   * The {@link Types.AmbiguousDirection} occurs when the user scrolls\n   * diagonally with close to equal deltas in both horizontal and vertical\n   * direction.\n   *\n   * **IMPORTANT:**\n   *\n   * The direction of a scroll event is always based on comparing `deltaX` and\n   * `deltaY` relative to the _last scroll event_ (within the `debounceWindow`,\n   * and not to the scroll data for the last time the callback was called (in\n   * case it was skipped because `threshold` was not exceeded or in case it was\n   * debounced by a larger window than the watcher).\n   *\n   * I.e. if you have both `threshold` and `directions` restricted, or if the\n   * callback has a larger debounce window than the watcher, it is possible for\n   * there to be a change in the relevant `scrollTop`/`scrollLeft` offset that\n   * exceeds the threshold, and for the callback to _not_ be called.\n   *\n   * For a callback to be called, both of these must be true:\n   * - the change in `scrollTop`/`scrollLeft`, _compared to the last time the\n   *   callback was called_ must exceed the {@link threshold}\n   * - the effective scroll direction, _compared to the last scroll event_\n   *   prior to the _watcher's_ debounce window must be one of the given\n   *   {@link directions}.\n   *\n   * @defaultValue undefined\n   */\n  directions?: CommaSeparatedStr<ScrollDirection> | ScrollDirection[];\n\n  /**\n   * Do not call the handler until there's a future scroll of the element.\n   *\n   * By default we call the handler (almost) immediately if there's been a\n   * scroll in one of the given directions, or if there has not been a scroll\n   * but directions includes {@link Types.NoDirection}, but you can disable\n   * this initial call here.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n\n  /**\n   * If non-0, the handler will be \"debounced\" so it's called at most\n   * `debounceWindow` milliseconds.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts, but you probably need this when doing\n   * scroll-based animations.\n   *\n   * @defaultValue {@link ScrollWatcherConfig.debounceWindow}\n   */\n  debounceWindow?: number;\n};\n\n/**\n * @interface\n */\nexport type ScrollOptions = ScrollToOptions & {\n  /**\n   * How much to scroll in the given direction.\n   *\n   * @defaultValue 100\n   */\n  amount?: number;\n\n  /**\n   * If set to \"pixel\" (default), `amount` is taken as absolute pixels.\n   *\n   * If set to \"visible\", `amount` is taken as percent of the element's visible\n   * size in the scrolling direction (100 means full client width for\n   * horizontal or height for vertical scroll).\n   *\n   * If set to \"content\", `amount` is taken as percent of the element's full\n   * content size in the scrolling direction (100 means full scroll width for\n   * horizontal or height for vertical scroll).\n   *\n   * @defaultValue \"pixel\"\n   */\n  asFractionOf?: \"pixel\" | \"visible\" | \"content\";\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - the element that has been resized\n * - the {@link ScrollData} for the element\n */\nexport type OnScrollHandlerArgs = [Element, ScrollData];\nexport type OnScrollCallback = Callback<OnScrollHandlerArgs>;\nexport type OnScrollHandler =\n  | CallbackHandler<OnScrollHandlerArgs>\n  | OnScrollCallback;\n\nexport type ScrollData = {\n  clientWidth: number;\n  clientHeight: number;\n\n  scrollTop: number;\n\n  /**\n   * This is the `scrollTop` relative to the full `scrollHeight` minus the\n   * `clientHeight`, ranging from 0 to 1.\n   */\n  scrollTopFraction: number;\n\n  scrollLeft: number;\n\n  /**\n   * This is the `scrollLeft` relative to the full `scrollWidth` minus the\n   * `clientWidth`, ranging from 0 to 1.\n   */\n  scrollLeftFraction: number;\n\n  scrollWidth: number;\n  scrollHeight: number;\n\n  /**\n   * This is the direction of the last scroll action, i.e. _compared to the\n   * last scroll event_, not necessarily based on the deltas compared to the\n   * last time this callback was called.\n   */\n  direction: ScrollDirection;\n};\n\n// ----------------------------------------\n\ntype ScrollWatcherConfigInternal = {\n  _debounceWindow: number;\n  _scrollThreshold: number;\n  _scrollDuration: number;\n};\n\ntype OnScrollOptionsInternal = {\n  _element: Element;\n  _eventTarget: ScrollTarget;\n  _directions: ScrollDirection[] | null;\n  _threshold: number;\n  _debounceWindow: number;\n};\n\ntype CallbackEntry = {\n  _callback: OnScrollCallback;\n  _trackType: TrackType;\n  _options: OnScrollOptionsInternal;\n  _data?: ScrollData;\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = MH.newMap<string, ScrollWatcher>();\n\nconst getConfig = (\n  config: ScrollWatcherConfig,\n): ScrollWatcherConfigInternal => {\n  return {\n    _debounceWindow: toNonNegNum(config[MC.S_DEBOUNCE_WINDOW], 75),\n    // If threshold is 0, internally treat as 1 (pixel)\n    _scrollThreshold: toNonNegNum(config.scrollThreshold, 50) || 1,\n    _scrollDuration: toNonNegNum(config.scrollDuration, 1000),\n  };\n};\n\nconst TRACK_REGULAR = 1; // only scroll events\nconst TRACK_FULL = 2; // scroll + resizing of content and/or wrapper\n\n// --------------------\n\nconst fetchOnScrollOptions = async (\n  config: ScrollWatcherConfigInternal,\n  options: OnScrollOptions,\n): Promise<OnScrollOptionsInternal> => {\n  const directions =\n    validateStrList(\"directions\", options.directions, isValidScrollDirection) ||\n    null;\n\n  const element = await fetchScrollableElement(options.scrollable);\n\n  return {\n    _element: element,\n    _eventTarget: getEventTarget(element),\n    _directions: directions,\n    // If threshold is 0, internally treat as 1 (pixel)\n    _threshold: toNonNegNum(options.threshold, config._scrollThreshold) || 1,\n    _debounceWindow: options[MC.S_DEBOUNCE_WINDOW] ?? config._debounceWindow,\n  };\n};\n\nconst directionMatches = (\n  userDirections: ScrollDirection[] | null,\n  latestDirection: ScrollDirection,\n) => !userDirections || MH.includes(userDirections, latestDirection);\n\nconst hasExceededThreshold = (\n  options: OnScrollOptionsInternal,\n  latestData: ScrollData,\n  lastThresholdData: ScrollData | undefined,\n): boolean => {\n  const directions = options._directions;\n  const threshold = options._threshold;\n  if (!lastThresholdData) {\n    /* istanbul ignore */\n    return false;\n  }\n\n  const topDiff = maxAbs(\n    latestData[MC.S_SCROLL_TOP] - lastThresholdData[MC.S_SCROLL_TOP],\n    latestData[MC.S_SCROLL_HEIGHT] - lastThresholdData[MC.S_SCROLL_HEIGHT],\n    latestData[MC.S_CLIENT_HEIGHT] - lastThresholdData[MC.S_CLIENT_HEIGHT],\n  );\n\n  const leftDiff = maxAbs(\n    latestData[MC.S_SCROLL_LEFT] - lastThresholdData[MC.S_SCROLL_LEFT],\n    latestData[MC.S_SCROLL_WIDTH] - lastThresholdData[MC.S_SCROLL_WIDTH],\n    latestData[MC.S_CLIENT_WIDTH] - lastThresholdData[MC.S_CLIENT_WIDTH],\n  );\n\n  // If the callback is only interested in up/down, then only check the\n  // scrollTop delta, and similarly for left/right.\n  let checkTop = false,\n    checkLeft = false;\n  if (\n    !directions ||\n    MH.includes(directions, MC.S_NONE) ||\n    MH.includes(directions, MC.S_AMBIGUOUS)\n  ) {\n    checkTop = checkLeft = true;\n  } else {\n    if (\n      MH.includes(directions, MC.S_UP) ||\n      MH.includes(directions, MC.S_DOWN)\n    ) {\n      checkTop = true;\n    }\n    if (\n      MH.includes(directions, MC.S_LEFT) ||\n      MH.includes(directions, MC.S_RIGHT)\n    ) {\n      checkLeft = true;\n    }\n  }\n\n  return (\n    (checkTop && topDiff >= threshold) || (checkLeft && leftDiff >= threshold)\n  );\n};\n\nconst fetchScrollData = async (\n  element: Element,\n  previousEventData: ScrollData | undefined,\n  realtime: boolean,\n): Promise<ScrollData> => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollTop = MH.ceil(element[MC.S_SCROLL_TOP]);\n  const scrollLeft = MH.ceil(element[MC.S_SCROLL_LEFT]);\n  const scrollWidth = element[MC.S_SCROLL_WIDTH];\n  const scrollHeight = element[MC.S_SCROLL_HEIGHT];\n  const clientWidth = getClientWidthNow(element);\n  const clientHeight = getClientHeightNow(element);\n\n  const scrollTopFraction =\n    MH.round(scrollTop) / (scrollHeight - clientHeight || MC.INFINITY);\n  const scrollLeftFraction =\n    MH.round(scrollLeft) / (scrollWidth - clientWidth || MC.INFINITY);\n\n  const prevScrollTop = previousEventData?.scrollTop || 0;\n  const prevScrollLeft = previousEventData?.scrollLeft || 0;\n\n  const direction = getMaxDeltaDirection(\n    scrollLeft - prevScrollLeft,\n    scrollTop - prevScrollTop,\n  );\n\n  return {\n    direction,\n    [MC.S_SCROLL_TOP]: scrollTop,\n    [MC.S_SCROLL_TOP_FRACTION]: scrollTopFraction,\n    [MC.S_SCROLL_LEFT]: scrollLeft,\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollLeftFraction,\n    [MC.S_SCROLL_WIDTH]: scrollWidth,\n    [MC.S_SCROLL_HEIGHT]: scrollHeight,\n    [MC.S_CLIENT_WIDTH]: clientWidth,\n    [MC.S_CLIENT_HEIGHT]: clientHeight,\n  };\n};\n\nconst setScrollCssProps = (\n  element: Element,\n  scrollData: Partial<ScrollData> | undefined | null,\n) => {\n  let prefix = \"\";\n  if (element === tryGetMainScrollableElement()) {\n    // Set the CSS vars on the root element\n    element = MH.getDocElement();\n    prefix = \"page-\";\n  }\n\n  scrollData = scrollData || {};\n  const props = {\n    [MC.S_SCROLL_TOP]: scrollData[MC.S_SCROLL_TOP],\n    [MC.S_SCROLL_TOP_FRACTION]: scrollData[MC.S_SCROLL_TOP_FRACTION],\n    [MC.S_SCROLL_LEFT]: scrollData[MC.S_SCROLL_LEFT],\n    [MC.S_SCROLL_LEFT_FRACTION]: scrollData[MC.S_SCROLL_LEFT_FRACTION],\n    [MC.S_SCROLL_WIDTH]: scrollData[MC.S_SCROLL_WIDTH],\n    [MC.S_SCROLL_HEIGHT]: scrollData[MC.S_SCROLL_HEIGHT],\n  };\n  setNumericStyleProps(element, props, { _prefix: prefix });\n};\n\nconst getEventTarget = (element: Element): ScrollTarget => {\n  if (element === MH.getDocScrollingElement()) {\n    return MH.getDoc();\n  }\n\n  return element;\n};\n\nconst invokeCallback = (\n  callback: OnScrollCallback,\n  element: Element,\n  scrollData: ScrollData,\n) => callback.invoke(element, MH.copyObject(scrollData)).catch(logError);\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { ScrollOffset, View, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { isValidStrList, validateStrList } from \"@lisn/utils/validation\";\n\nimport { newBitSpaces, createBitSpace } from \"@lisn/modules/bit-spaces\";\n\n/**\n * Returns true if the given string is a valid {@link ScrollOffset}.\n *\n * @category Validation\n */\nexport const isValidScrollOffset = (offset: string): offset is ScrollOffset =>\n  offset.match(OFFSET_REGEX) !== null;\n\n/**\n * Returns true if the given string is a valid \"view\".\n *\n * @category Validation\n */\nexport const isValidView = (view: string): view is View =>\n  MH.includes(VIEWS, view);\n\n/**\n * Returns true if the given string or array is a list of valid views.\n *\n * @category Validation\n */\nexport const isValidViewList = (views: string | string[]) =>\n  isValidStrList(views, isValidView, false);\n\n/**\n * Returns the views that are opposite to the given set of views.\n *\n * Above and below are opposites, and so are left and right.\n *\n * \"at\" is a special case. It is considered opposite to any view in the sense\n * that if it is not present in `views` it will always be included in the\n * returned array. However it is not \"strongly\" opposite in the sense that it\n * will not cause other views to be included in the result unless it is the\n * only view in `views`. That is, there are two sets of strongly opposite pairs\n * (\"above\"/\"below\" and \"left\"/\"right\") and at least one of the two opposing\n * views of a pair must be present for the other one to be included, _except in\n * the special case of `views` being \"at\"_. See examples below for\n * clarification.\n *\n * **Note** that the order of the returned array is not defined.\n *\n * @example\n * Returns [\"above\", \"below\", \"left\", \"right\"] (not definite order), since\n * \"at\" is the only view present and is opposite to all:\n *\n * ```javascript\n * getOppositeViews(\"at\"); // -> [\"above\", \"below\", \"left\", \"right\"] (not necessarily in this order)\n * ```\n *\n * @example\n * Returns [\"below\"]. \"left\" and \"right\" are NOT included even though \"at\" is\n * given, because at least one of the two opposing views of a pair must be\n * present for the other one to be included (except in the special case of\n * `views` being \"at\").\n *\n * ```javascript\n * getOppositeViews(\"at,above\"); // -> [\"below\"]\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above\"); // -> [\"at\", \"below\"] (not necessarily in this order)\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above,below\"); // -> [\"at\"]\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"at,above,below\"); // -> []\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"above,right\"); // -> [\"at\", \"below\", \"left\"] (not necessarily in this order)\n * ```\n *\n * @example\n * ```javascript\n * getOppositeViews(\"at,above,right\"); // -> [\"below\", \"left\"] (not necessarily in this order)\n * ```\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given view is not valid, including if it's empty \"\".\n *\n * @category Views\n */\nexport const getOppositeViews = (\n  views: CommaSeparatedStr<View> | View[],\n): View[] => {\n  if (!views) {\n    throw MH.usageError(\"'views' cannot be empty\");\n  }\n\n  const bitmask = getViewsBitmask(views);\n  let oppositeBitmask = VIEWS_SPACE.bitmask & ~bitmask; // initial, all not present in bitmask\n\n  // If the given view is \"at\", then include all the other ones.\n  // Otherwise include only the opposite views of those directional\n  // (above/below/left/right) that are present. I.e. if neither left not right\n  // is given, then don't include them\n  if (bitmask !== VIEWS_SPACE.bit.at) {\n    // remove the opposite ones to those not present\n    if (!(bitmask & VIEWS_SPACE.bit.above)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.below;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.below)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.above;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.left)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.right;\n    }\n\n    if (!(bitmask & VIEWS_SPACE.bit.right)) {\n      oppositeBitmask &= ~VIEWS_SPACE.bit.left;\n    }\n  }\n\n  return getViewsFromBitmask(oppositeBitmask);\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getViewsBitmask = (\n  viewsStr: View[] | string | undefined,\n): number => {\n  let viewsBitmask = 0;\n  const views = validateStrList(\"views\", viewsStr, isValidView);\n\n  if (views) {\n    for (const v of views) {\n      if (!isValidView(v)) {\n        throw MH.usageError(`Unknown view '${v}'`);\n      }\n\n      viewsBitmask |= VIEWS_SPACE.bit[v];\n    }\n  } else {\n    viewsBitmask = VIEWS_SPACE.bitmask; // default: all\n  }\n\n  return viewsBitmask;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const parseScrollOffset = (input: string) => {\n  const match = input.match(OFFSET_REGEX);\n  if (!match) {\n    throw MH.usageError(`Invalid offset: '${input}'`);\n  }\n\n  const reference = match[1];\n  const value = match[2];\n  /* istanbul ignore next */ // shouldn't happen\n  if (!reference || !value) {\n    throw MH.bugError(\"Offset regex: blank capture groups\");\n  }\n\n  return { reference, value };\n};\n\nconst VIEWS: View[] = [\n  MC.S_AT,\n  MC.S_ABOVE,\n  MC.S_BELOW,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n/**\n * @ignore\n * @internal\n */\nexport const VIEWS_SPACE = createBitSpace<View>(newBitSpaces(), ...VIEWS);\n\n// --------------------\n\n// Don't use capture groups for old browser support\nconst OFFSET_REGEX = RegExp(\"(top|bottom|left|right): *([^ ].+)\");\n\nconst getViewsFromBitmask = (bitmask: number): View[] => {\n  const views: View[] = [];\n  for (let bit = VIEWS_SPACE.start; bit <= VIEWS_SPACE.end; bit++) {\n    const value = 1 << bit;\n    if (bitmask & value) {\n      const name = VIEWS_SPACE.nameOf(value);\n      if (name) {\n        views.push(name);\n      }\n    }\n  }\n\n  return views;\n};\n","/**\n * @module Modules/XIntersectionObserver\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nexport type XIntersectionObserverCallback = (\n  entries: IntersectionObserverEntry[],\n  observer: XIntersectionObserver,\n) => void;\n\n/**\n * {@link XIntersectionObserver} is an extension of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}\n * with added capabilities:\n * - can skip the initial callback that happens shortly after setting up via\n *   {@link observeLater}\n */\nexport class XIntersectionObserver {\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root | IntersectionObserver:root}.\n   */\n  readonly root!: Element | Document | null;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin | IntersectionObserver:rootMargin}.\n   */\n  readonly rootMargin!: string;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/thresholds | IntersectionObserver:thresholds}.\n   */\n  readonly thresholds!: number[];\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/observe | IntersectionObserver:observe} except it accepts multiple\n   * targets.\n   */\n  readonly observe: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link observe} but it ignores the initial almost immediate callback\n   * and only calls the callback on a subsequent intersection change.\n   */\n  readonly observeLater: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/unobserve | IntersectionObserver:unobserve} except it accepts multiple\n   * targets.\n   */\n  readonly unobserve: (...targets: Element[]) => void;\n\n  /**\n   * Like {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/disconnect | IntersectionObserver:disconnect}.\n   */\n  readonly disconnect: () => void;\n\n  /**\n   * Like `IntersectionObserver.takeRecords`.\n   */\n  readonly takeRecords: () => void;\n\n  constructor(\n    callback: XIntersectionObserverCallback,\n    observeOptions?: IntersectionObserverInit,\n  ) {\n    let observedTargets = MH.newWeakSet<Element>();\n    const targetsToSkip = MH.newWeakSet<Element>();\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      const selectedEntries = [];\n\n      for (const entry of entries) {\n        if (targetsToSkip.has(MH.targetOf(entry))) {\n          MH.deleteKey(targetsToSkip, MH.targetOf(entry));\n          continue;\n        }\n\n        selectedEntries.push(entry);\n      }\n\n      if (MH.lengthOf(selectedEntries)) {\n        callback(selectedEntries, this);\n      }\n    };\n\n    const observer = MH.newIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    MH.defineProperty(this, \"root\", { get: () => observer.root });\n    MH.defineProperty(this, \"rootMargin\", {\n      get: () => observer.rootMargin,\n    });\n    MH.defineProperty(this, \"thresholds\", {\n      get: () => observer.thresholds,\n    });\n\n    this.observe = (...targets) => {\n      for (const target of targets) {\n        observedTargets.add(target);\n        observer.observe(target);\n      }\n    };\n\n    this.observeLater = (...targets) => {\n      for (const target of targets) {\n        // Only skip them if not already observed, otherwise the initial\n        // (almost) immediate callback won't happen anyway.\n        if (observedTargets.has(target)) {\n          continue;\n        }\n\n        targetsToSkip.add(target);\n        this.observe(target);\n      }\n    };\n\n    this.unobserve = (...targets) => {\n      for (const target of targets) {\n        MH.deleteKey(observedTargets, target);\n        observer.unobserve(target);\n      }\n    };\n\n    this.disconnect = () => {\n      observedTargets = MH.newWeakSet();\n      observer.disconnect();\n    };\n\n    this.takeRecords = () => observer.takeRecords();\n  }\n}\n","/**\n * @module Watchers/ViewWatcher\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  ViewTarget,\n  View,\n  BoundingRect,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport { setNumericStyleProps } from \"@lisn/utils/css-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForSubsequentMeasureTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { logError } from \"@lisn/utils/log\";\nimport { omitKeys, compareValuesIn } from \"@lisn/utils/misc\";\nimport { createOverlay, OverlayOptions } from \"@lisn/utils/overlays\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport { toMargins, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  VIEWS_SPACE,\n  getViewsBitmask,\n  parseScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXMap, newXWeakMap } from \"@lisn/modules/x-map\";\nimport { XIntersectionObserver } from \"@lisn/modules/x-intersection-observer\";\n\nimport { DOMWatcher } from \"@lisn/watchers/dom-watcher\";\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher } from \"@lisn/watchers/size-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewWatcher} monitors the position of a given target relative to the\n * given {@link ViewWatcherConfig.root | root} or the viewport.\n *\n * It's built on top of\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver | IntersectionObserver}.\n *\n * It manages registered callbacks globally and reuses IntersectionObservers\n * for more efficient performance.\n */\nexport class ViewWatcher {\n  /**\n   * Call the given handler whenever the {@link ViewWatcherConfig.root | root}'s\n   * view relative to the target position changes, i.e. when the target enters\n   * or leaves the root.\n   *\n   * Unless {@link OnViewOptions.skipInitial} is true, the handler is also\n   * called (almost) immediately with the current view if it matches this\n   * set of options*.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options. So if previously it was also tracking position across root\n   * using {@link trackView}, it will no longer do so.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or the options are invalid.\n   */\n  readonly onView: (\n    target: ViewTarget,\n    handler: OnViewHandler,\n    options?: OnViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly offView: (target: ViewTarget, handler: OnViewHandler) => void;\n\n  /**\n   * This does more than just {@link onView}. The difference is that in\n   * addition to a change of {@link View}, such as the target entering or\n   * leaving the ViewWatcher's {@link ViewWatcherConfig.root | root} (by\n   * default the viewport), the handler is also called each time the target's\n   * relative view changes _while inside the root_.\n   *\n   * A change of relative position happens when:\n   * - the target is resized\n   * - the root is resized\n   * - the any of the target's scrollable ancestors is scrolled\n   * - the target's attributes changed that resulted in a change of position\n   *\n   * All of the above are accounted for. Internally it uses\n   * {@link ScrollWatcher}, {@link DOMWatcher} and {@link SizeWatcher} to keep\n   * track of all of this.\n   *\n   * If the target is leaves the ViewWatcher's\n   * {@link ViewWatcherConfig.root | root}, the handler will be called with\n   * the {@link ViewData}, and the above events will stop being tracked until\n   * the target enters the watcher's root again.\n   *\n   * **IMPORTANT:** The same handler can _not_ be added multiple times for the\n   * same target, even if the options differ. If the handler has already been\n   * added for this target, either using {@link trackView} or using\n   * {@link onView}, then it will be removed and re-added with the current\n   * options.\n   *\n   * ------\n   *\n   * If `handler` is not given, then it defaults to an internal handler that\n   * updates the following set of CSS variables on the target's style and\n   * represent its relative position:\n   *\n   * - `--lisn-js--r-top`\n   * - `--lisn-js--r-bottom`\n   * - `--lisn-js--r-left`\n   * - `--lisn-js--r-right`\n   * - `--lisn-js--r-width`\n   * - `--lisn-js--r-height`\n   * - `--lisn-js--r-h-middle`\n   * - `--lisn-js--r-v-middle`\n   *\n   * See {@link ViewData.relative} for an explanation of each.\n   *\n   * Note that only Element targets are supported here and not offsets.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target or \"views\" are invalid.\n   */\n  readonly trackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n    options?: TrackViewOptions,\n  ) => Promise<void>;\n\n  /**\n   * Removes a previously added handler for {@link trackView}.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the target is invalid.\n   */\n  readonly noTrackView: (\n    element: Element,\n    handler?: OnViewHandler | null,\n  ) => void;\n\n  /**\n   * Get the current view relative to the target. By default, it will\n   * {@link waitForMeasureTime} and so will be delayed by one frame.\n   *\n   * @param {} realtime If true, it will not {@link waitForMeasureTime}. Use\n   *                    this only when doing realtime scroll-based animations\n   *                    as it may cause a forced layout.\n   */\n  readonly fetchCurrentView: (\n    target: ViewTarget,\n    realtime?: boolean,\n  ) => Promise<ViewData>;\n\n  /**\n   * Creates a new instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}. It does not save it for future reuse.\n   */\n  static create(config: ViewWatcherConfig = {}) {\n    return new ViewWatcher(getConfig(config), CONSTRUCTOR_KEY);\n  }\n\n  /**\n   * Returns an existing  instance of ViewWatcher with the given\n   * {@link ViewWatcherConfig}, or creates a new one.\n   *\n   * **NOTE:** It saves it for future reuse, so don't use this for temporary\n   * short-lived watchers.\n   */\n  static reuse(config: ViewWatcherConfig = {}) {\n    const myConfig = getConfig(config);\n    const configStrKey = objToStrKey(omitKeys(myConfig, { _root: null }));\n\n    let instance = instances.get(myConfig._root)?.get(configStrKey);\n    if (!instance) {\n      instance = new ViewWatcher(myConfig, CONSTRUCTOR_KEY);\n      instances.sGet(myConfig._root).set(configStrKey, instance);\n    }\n\n    return instance;\n  }\n\n  private constructor(\n    config: ViewWatcherConfigInternal,\n    key: typeof CONSTRUCTOR_KEY,\n  ) {\n    if (key !== CONSTRUCTOR_KEY) {\n      throw MH.illegalConstructorError(\"ViewWatcher.create\");\n    }\n\n    const logger = debug\n      ? new debug.Logger({ name: \"ViewWatcher\", logAtCreation: config })\n      : null;\n\n    const allViewData = MH.newWeakMap<Element, ViewData>();\n\n    const allCallbacks = newXWeakMap<\n      Element,\n      Map<\n        OnViewHandler,\n        {\n          _callback: OnViewCallback;\n          _trackType: TrackType;\n          _options: OnViewOptionsInternal;\n        }\n      >\n    >(() => MH.newMap());\n\n    const intersectionHandler = (entries: IntersectionObserverEntry[]) => {\n      debug: logger?.debug9(`Got ${entries.length} new entries`, entries);\n\n      for (const entry of entries) {\n        processEntry(entry);\n      }\n    };\n\n    const observeOptions = {\n      root: config._root,\n      threshold: config._threshold,\n      rootMargin: config._rootMargin,\n    };\n\n    const xObserver = new XIntersectionObserver(\n      intersectionHandler,\n      observeOptions,\n    );\n\n    // ----------\n\n    const fetchCurrentView = (\n      element: Element,\n      realtime = false,\n    ): Promise<ViewData> => {\n      const fetchData = async (\n        entryOrElement: IntersectionObserverEntry | Element,\n      ) => {\n        const intersection = await fetchIntersectionData(\n          config,\n          entryOrElement,\n          realtime,\n        );\n        const data = await fetchViewData(intersection, realtime);\n        return data;\n      };\n\n      if (realtime) {\n        return fetchData(element);\n      }\n\n      return MH.newPromise((resolve) => {\n        // Use a temp IntersectionObserver\n        const observer = MH.newIntersectionObserver((entries) => {\n          const promise = fetchData(entries[0]);\n          observer.disconnect();\n          promise.then(resolve);\n        }, observeOptions);\n\n        observer.observe(element);\n      });\n    };\n\n    // ----------\n\n    const createCallback = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n      trackType: TrackType,\n    ): OnViewCallback => {\n      const element = options._element;\n      MH.remove(allCallbacks.get(element)?.get(handler)?._callback);\n\n      debug: logger?.debug5(\"Adding/updating handler\", options);\n      const callback = wrapCallback(handler);\n      callback.onRemove(() => {\n        deleteHandler(handler, options);\n      });\n\n      allCallbacks.sGet(element).set(handler, {\n        _callback: callback,\n        _trackType: trackType,\n        _options: options,\n      });\n\n      return callback;\n    };\n\n    // ----------\n\n    const setupOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      userOptions: (OnViewOptions & TrackViewOptions) | undefined,\n      trackType: TrackType,\n    ) => {\n      const options = await fetchOptions(config._root, target, userOptions);\n      const element = options._element;\n\n      const callback = createCallback(handler, options, trackType);\n\n      // View watcher should be used before the DOM is loaded since the initial\n      // size of the root may be 0 or close to 0 and would lead to premature\n      // triggering.\n      await waitForInteractive();\n\n      // Initial call doesn't need to be realtime, and best to use an actual\n      // IntersectionObserverEntry for that one.\n      let viewData = await fetchCurrentView(element);\n\n      if (\n        viewData.rootBounds[MC.S_WIDTH] === 0 &&\n        viewData.rootBounds[MC.S_HEIGHT] === 0\n      ) {\n        // Possibly the root is being setup now, wait for one AF\n        debug: logger?.debug5(\n          \"Got zero root size, deferring for a bit\",\n          config._root,\n        );\n        await waitForSubsequentMeasureTime();\n        viewData = await fetchCurrentView(element);\n      }\n\n      if (trackType === TRACK_FULL) {\n        // Detect resize or scroll\n        await setupInviewTrack(options, callback, viewData);\n      }\n\n      if (callback.isRemoved()) {\n        return;\n      }\n\n      // Always use observeLater to skip the initial call from the\n      // IntersectionObserver, and call callbacks that have skipInitial: false\n      // here. Otherwise, we can't tell from inside the intersectionHandler whether\n      // a callback wants to skip its initial call or not.\n      //\n      // It's ok if already observed, won't do anything.\n      xObserver.observeLater(element);\n\n      if (!userOptions?.skipInitial) {\n        debug: logger?.debug5(\"Calling initially with\", element, viewData);\n        if (viewsToBitmask(viewData.views) & options._viewsBitmask) {\n          await invokeCallback(callback, element, viewData);\n        }\n      }\n    };\n\n    // ----------\n\n    const removeOnView = async (\n      target: ViewTarget,\n      handler: OnViewHandler,\n      trackType: TrackType,\n    ) => {\n      // For time sync, so that if called immediately after onView without\n      // awaiting, it will remove the callback that is about to be added.\n      // But if no such handler has been added we may unnecessarily\n      // create an overlay... TODO\n      const options = await fetchOptions(config._root, target, {});\n      const element = options._element;\n\n      const currEntry = allCallbacks.get(element)?.get(handler);\n      if (currEntry?._trackType === trackType) {\n        MH.remove(currEntry._callback);\n\n        if (handler === setViewCssProps) {\n          // delete the properties\n          setViewCssProps(element, null);\n        }\n      }\n    };\n\n    // ----------\n\n    const deleteHandler = (\n      handler: OnViewHandler,\n      options: OnViewOptionsInternal,\n    ) => {\n      const element = options._element;\n\n      MH.deleteKey(allCallbacks.get(element), handler);\n      allCallbacks.prune(element);\n\n      if (!allCallbacks.has(element)) {\n        debug: logger?.debug4(\n          \"No more callbacks for target; unobserving\",\n          element,\n        );\n\n        xObserver.unobserve(element);\n        MH.deleteKey(allViewData, element);\n      }\n    };\n\n    // ----------\n\n    const processEntry = async (entry: IntersectionObserverEntry) => {\n      // In reality, it can't be just a base Element\n      const element = MH.targetOf(entry);\n\n      // This doesn't need to be \"realtime\", since IntersectionObserver alone\n      // introduces a delay.\n      const intersection = await fetchIntersectionData(config, entry);\n      const latestData = await fetchViewData(intersection);\n      debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n      const viewsBitmask = viewsToBitmask(latestData.views);\n\n      for (const entry of allCallbacks.get(element)?.values() || []) {\n        if (viewsBitmask & entry._options._viewsBitmask) {\n          invokeCallback(entry._callback, element, latestData);\n        }\n      }\n    };\n\n    // ----------\n\n    const setupInviewTrack = async (\n      options: OnViewOptionsInternal,\n      viewCallback: OnViewCallback,\n      viewData: ViewData,\n    ) => {\n      const element = options._element;\n      debug: logger?.debug8(\n        \"Setting up size, scroll and attribute tracking\",\n        element,\n      );\n\n      const sizeWatcher = SizeWatcher.reuse();\n      const scrollWatcher = ScrollWatcher.reuse();\n      const realtime = options._debounceWindow === 0;\n\n      // Detect when target's class or style attribute change\n      const domWatcher = DOMWatcher.create({\n        root: element,\n        // only direct children\n        subtree: false,\n      });\n\n      // We need to remove the tracking callback when target leaves view and re-add\n      // it when it enters view. But the OnViewCallback that is associated may have\n      // already been added prior, by calling onView with this handler, so we can't\n      // always wrap around it, in order to detect when it's called with a change\n      // of view. So we setup another OnViewCallback tied to the tracking callback.\n      let isInview = false;\n\n      let removeTrackCallback: (() => void) | null = null;\n\n      // Finds any scrollable ancestors of the element and detect scroll on them.\n      const scrollableAncestors = await fetchScrollableAncestors(\n        element,\n        realtime,\n      );\n      if (viewCallback.isRemoved()) {\n        return;\n      }\n\n      const addTrackCallback = () => {\n        const trackCallback = wrapCallback(async () => {\n          const prevData = allViewData.get(element);\n\n          // Get the latest view data for the target\n          const latestData = await fetchCurrentView(element, realtime);\n          debug: logger?.debug9(\"Got ViewData\", element, latestData);\n\n          const changed = viewChanged(latestData, prevData);\n          if (changed) {\n            // When comparing for changes, we round the numbers to certain number\n            // of decimal places, and allViewData serves as a \"last threshold\"\n            // state, so only update it if there was a significant change.\n            // Otherwise very quick changes in small increments would get\n            // rejected as \"no change\".\n            allViewData.set(element, latestData);\n\n            if (isInview && !viewCallback.isRemoved()) {\n              // Could have been removed during the debounce window\n              await invokeCallback(viewCallback, element, latestData);\n            }\n          } else {\n            debug: logger?.debug9(\"ViewData same as last\");\n          }\n        });\n\n        // TODO Is there a better way to detect when it's moved?\n        viewCallback.onRemove(trackCallback.remove);\n        removeTrackCallback = trackCallback.remove;\n\n        // Detect when target's class or style attribute change\n        domWatcher.onMutation(trackCallback, {\n          categories: [MC.S_ATTRIBUTE],\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when target is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: element,\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the root is resized\n        sizeWatcher.onResize(trackCallback, {\n          target: config._root ?? MH.getWindow(),\n          [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n          threshold: options._resizeThreshold,\n          [MC.S_SKIP_INITIAL]: true,\n        });\n\n        // Detect when the target's scrollable ancestors are scrolled (this\n        // will almost certainly include the main scrollable element).\n        for (const ancestor of scrollableAncestors) {\n          scrollWatcher.onScroll(trackCallback, {\n            scrollable: ancestor,\n            [MC.S_DEBOUNCE_WINDOW]: options._debounceWindow,\n            threshold: options._scrollThreshold,\n            [MC.S_SKIP_INITIAL]: true,\n          });\n        }\n      };\n\n      const enterOrLeaveCallback = createCallback(\n        (target__ignored, viewData) => {\n          if (viewData.views[0] === MC.S_AT) {\n            if (!isInview) {\n              isInview = true;\n              addTrackCallback();\n            }\n          } else if (removeTrackCallback) {\n            isInview = false;\n            removeTrackCallback();\n            removeTrackCallback = null;\n          }\n        },\n        MH.assign(options, {\n          _viewsBitmask: VIEWS_SPACE.bitmask,\n        }),\n        TRACK_REGULAR,\n      );\n\n      viewCallback.onRemove(enterOrLeaveCallback.remove);\n\n      allViewData.set(element, viewData); // to avoid duplicate initial call\n      // Setup the track and the \"inView\" state\n      if (!enterOrLeaveCallback.isRemoved()) {\n        invokeCallback(enterOrLeaveCallback, element, viewData);\n      }\n    };\n\n    // ----------\n\n    this.fetchCurrentView = (target, realtime = false) =>\n      fetchElement(config._root, target).then((element) =>\n        fetchCurrentView(element, realtime),\n      );\n\n    // ----------\n\n    this.trackView = (element, handler?, options?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      return setupOnView(element, handler, options, TRACK_FULL);\n    };\n\n    // ----------\n\n    this.noTrackView = (element, handler?) => {\n      if (!handler) {\n        handler = setViewCssProps;\n      }\n\n      removeOnView(element, handler, TRACK_FULL); // no need to await\n    };\n\n    // ----------\n\n    this.onView = (target, handler, options?) =>\n      setupOnView(target, handler, options, TRACK_REGULAR);\n\n    // ----------\n\n    this.offView = (target, handler) =>\n      removeOnView(target, handler, TRACK_REGULAR); // no need to await\n  }\n}\n\n/**\n * @interface\n */\nexport type ViewWatcherConfig = {\n  /**\n   * The root element to use for the IntersectionObserver.\n   *\n   * **NOTE:** If the target you want to observe (via\n   * {@link ViewWatcher.onView}) is inside a scrolling element, then you should\n   * probably set the watcher's root to be that scrolling element or a wrapper\n   * around it. However, even if you don't or can't do that, the watcher will\n   * try to be smart about that, and when the target is no longer intercepting\n   * because it's scrolled outside its scrolling container, and yet its\n   * bounding box is still inside the watcher root (e.g. the viewport) the\n   * watcher will determine the relative view based on the scrolling container\n   * and not the actual watcher root.\n   *\n   * @defaultValue null\n   */\n  root?: Element | null;\n\n  /**\n   * The rootMargin to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue \"0px 0px 0px 0px\"\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the IntersectionObserver constructor options.\n   *\n   * @defaultValue 0\n   */\n  threshold?: number | number[];\n};\n\n/**\n * @interface\n */\nexport type OnViewOptions = {\n  /**\n   * Specifies a list of {@link View}s to target for.\n   *\n   * The handler will only be called if there is a change of view relative to\n   * the target that matches the given ones.\n   *\n   * It can be a comma-separated list of \"views\" or an array of such names.\n   *\n   * @defaultValue undefined\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * @interface\n */\nexport type TrackViewOptions = {\n  /**\n   * Use this debounce window for the {@link ScrollWatcher} and\n   * {@link SizeWatcher} involved in the view tracking.\n   *\n   * **IMPORTANT:**\n   * If the debounce window is non-0 (default), then the callback is always\n   * delayed by at least an animation frame following a scroll event to allow\n   * for optimized `scrollTop`/`scrollLeft` measurements via\n   * {@link waitForMeasureTime}.\n   *\n   * If you set this is 0, this indicates that the callback should be\n   * \"realtime\" and will therefore skip {@link waitForMeasureTime}, which could\n   * lead to forced re-layouts during scroll, but you probably need this when\n   * doing scroll-based animations.\n   *\n   * @defaultValue undefined // ScrollWatcher and SizeWatcher defaults\n   */\n  debounceWindow?: number;\n\n  /**\n   * Use this resize threshold for the {@link SizeWatcher} involved in the view\n   * tracking.\n   *\n   * @defaultValue undefined // SizeWatcher default\n   */\n  resizeThreshold?: number;\n\n  /**\n   * Use this scroll threshold for the {@link ScrollWatcher} involved in the\n   * view tracking.\n   *\n   * @defaultValue undefined // ScrollWatcher default\n   */\n  scrollThreshold?: number;\n\n  /**\n   * Do not call the handler until there's a future resize of the element.\n   *\n   * By default we call the handler (almost) immediately with the current size\n   * data for the target.\n   *\n   * @defaultValue false\n   */\n  skipInitial?: boolean;\n};\n\n/**\n * The handler is invoked with two arguments:\n *\n * - The element that is the target of the IntersectionObserver. If the call to\n *   {@link ViewWatcher.onView} specified an element as the target, it will be\n *   the same. If it specified an offset, then the element passed to the\n *   callback will be an absolutely positioned trigger overlay that's created\n *   as a result.\n * - the {@link ViewData} for relative to the target\n */\nexport type OnViewHandlerArgs = [Element, ViewData];\nexport type OnViewCallback = Callback<OnViewHandlerArgs>;\nexport type OnViewHandler = CallbackHandler<OnViewHandlerArgs> | OnViewCallback;\n\nexport type ViewData = {\n  isIntersecting: boolean;\n\n  targetBounds: BoundingRect;\n\n  rootBounds: BoundingRect;\n\n  /**\n   * The current view or views of the target. There would be two views given\n   * only if the target is _not_ in view and it's diagonally across from the\n   * root, e.g. both below and to the right.\n   */\n  views: [View, View?];\n\n  /**\n   * This is the target's position relative to the\n   * {@link ViewWatcherConfig.root | root} with values relative to the root\n   * size.\n   *\n   * It is like the {@link targetBounds} except that each quantity is scaled by\n   * the root's width or height, and having two additional computed values.\n   */\n  relative: {\n    x: number;\n    y: number;\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n    width: number;\n    height: number;\n\n    /**\n     * Average of the relative left and right.\n     */\n    hMiddle: number;\n\n    /**\n     * Average of the relative top and bottom.\n     */\n    vMiddle: number;\n  };\n};\n\n// ----------------------------------------\n\ntype ViewWatcherConfigInternal = {\n  _root: Element | null;\n  _rootMargin: string;\n  _threshold: number | number[];\n};\n\ntype OnViewOptionsInternal = {\n  _element: Element;\n  _viewsBitmask: number;\n  _debounceWindow: number | undefined;\n  _resizeThreshold: number | undefined;\n  _scrollThreshold: number | undefined;\n};\n\ntype IntersectionData = {\n  _target: Element;\n  _targetBounds: BoundingRect;\n  _root: Element | null;\n  _rootMargins: [number, number, number, number];\n  _rootBounds: BoundingRect;\n  _isIntersecting: boolean | null; // null means unknown, no IntersectionObserverEntry\n  _isCrossOrigin: boolean | null; // null means unknown, no IntersectionObserverEntry\n};\n\ntype TrackType = typeof TRACK_REGULAR | typeof TRACK_FULL;\n\nconst CONSTRUCTOR_KEY: unique symbol = MC.SYMBOL() as typeof CONSTRUCTOR_KEY;\nconst instances = newXMap<Element | null, Map<string, ViewWatcher>>(() =>\n  MH.newMap(),\n);\n\nconst getConfig = (\n  config: ViewWatcherConfig | undefined,\n): ViewWatcherConfigInternal => {\n  return {\n    _root: config?.root || null,\n    _rootMargin: config?.rootMargin ?? \"0px 0px 0px 0px\",\n    _threshold: config?.threshold || 0,\n  };\n};\n\nconst TRACK_REGULAR = 1; // only entering/leaving root\nconst TRACK_FULL = 2; // entering/leaving + moving across (fine-grained)\n\n// --------------------\n\nconst fetchOptions = async (\n  root: Element | null,\n  target: ViewTarget,\n  options: (OnViewOptions & TrackViewOptions) | undefined,\n): Promise<OnViewOptionsInternal> => {\n  return {\n    _element: await fetchElement(root, target),\n    _viewsBitmask: getViewsBitmask(options?.views),\n    _debounceWindow: options?.debounceWindow,\n    _resizeThreshold: options?.resizeThreshold,\n    _scrollThreshold: options?.scrollThreshold,\n  };\n};\n\nconst fetchScrollableAncestors = async (\n  element: Element,\n  realtime: boolean,\n) => {\n  if (!realtime) {\n    await waitForMeasureTime();\n  }\n\n  const scrollableAncestors = [];\n  let ancestor: Element | null | undefined = element;\n  while ((ancestor = getClosestScrollable(ancestor, { active: true }))) {\n    scrollableAncestors.push(ancestor);\n  }\n\n  return scrollableAncestors;\n};\n\nconst viewChanged = (latestData: ViewData, prevData: ViewData | undefined) =>\n  !prevData ||\n  viewsToBitmask(prevData.views) !== viewsToBitmask(latestData.views) ||\n  !compareValuesIn(\n    MH.copyBoundingRectProps(prevData.targetBounds),\n    MH.copyBoundingRectProps(latestData.targetBounds),\n  ) ||\n  !compareValuesIn(prevData.rootBounds, latestData.rootBounds) ||\n  !compareValuesIn(prevData.relative, latestData.relative);\n\nconst viewsToBitmask = (views: [View, View?]) =>\n  VIEWS_SPACE.bit[views[0]] | (views[1] ? VIEWS_SPACE.bit[views[1]] : 0);\n\nconst fetchIntersectionData = async (\n  config: ViewWatcherConfigInternal,\n  entryOrTarget: IntersectionObserverEntry | Element,\n  realtime = false,\n): Promise<IntersectionData> => {\n  const root = config._root;\n  const vpSize = await fetchViewportSize(realtime);\n  const rootMargins = toMargins(config._rootMargin, vpSize);\n\n  let target: Element;\n  let targetBounds: BoundingRect;\n  let rootBounds: BoundingRect | null = null;\n  let isIntersecting: boolean | null = null;\n  let isCrossOrigin: boolean | null = null;\n\n  if (MH.isInstanceOf(entryOrTarget, IntersectionObserverEntry)) {\n    target = entryOrTarget.target;\n    targetBounds = entryOrTarget.boundingClientRect;\n    rootBounds = entryOrTarget.rootBounds;\n    isIntersecting = entryOrTarget.isIntersecting;\n    isCrossOrigin = !entryOrTarget.rootBounds;\n  } else {\n    target = entryOrTarget;\n    targetBounds = await fetchBounds(target, realtime);\n  }\n\n  if (!rootBounds) {\n    rootBounds = await fetchBounds(root, realtime, rootMargins);\n  }\n\n  return {\n    _target: target,\n    _targetBounds: targetBounds,\n    _root: root,\n    _rootMargins: rootMargins,\n    _rootBounds: rootBounds,\n    _isIntersecting: isIntersecting,\n    _isCrossOrigin: isCrossOrigin,\n  };\n};\n\nconst fetchBounds = async (\n  root: Element | null,\n  realtime: boolean,\n  rootMargins?: [number, number, number, number],\n): Promise<BoundingRect> => {\n  let rect: BoundingRect;\n\n  if (root) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    rect = MH.copyBoundingRectProps(MH.getBoundingClientRect(root));\n  } else {\n    const { width, height } = await fetchViewportSize(realtime);\n    rect = {\n      x: 0,\n      left: 0,\n      right: width,\n      width,\n      y: 0,\n      top: 0,\n      bottom: height,\n      height,\n    };\n  }\n\n  if (rootMargins) {\n    rect.x = rect[MC.S_LEFT] -= rootMargins[3];\n    rect[MC.S_RIGHT] += rootMargins[1];\n    rect[MC.S_WIDTH] += rootMargins[1] + rootMargins[3];\n\n    rect.y = rect[MC.S_TOP] -= rootMargins[0];\n    rect[MC.S_BOTTOM] += rootMargins[2];\n    rect[MC.S_HEIGHT] += rootMargins[0] + rootMargins[2];\n  }\n\n  return rect;\n};\n\nconst fetchViewData = async (\n  intersection: IntersectionData,\n  realtime = false,\n): Promise<ViewData> => {\n  const vpSize = await fetchViewportSize(realtime);\n  const vpHeight = vpSize[MC.S_HEIGHT];\n  const vpWidth = vpSize[MC.S_WIDTH];\n\n  const views = await fetchViews(intersection, realtime);\n\n  const relative = MH.merge(\n    { hMiddle: NaN, vMiddle: NaN },\n    MH.copyBoundingRectProps(intersection._targetBounds),\n  );\n\n  relative.y /= vpHeight;\n  relative[MC.S_TOP] /= vpHeight;\n  relative[MC.S_BOTTOM] /= vpHeight;\n  relative[MC.S_HEIGHT] /= vpHeight;\n\n  relative.x /= vpWidth;\n  relative[MC.S_LEFT] /= vpWidth;\n  relative[MC.S_RIGHT] /= vpWidth;\n  relative[MC.S_WIDTH] /= vpWidth;\n\n  relative.hMiddle = (relative[MC.S_LEFT] + relative[MC.S_RIGHT]) / 2;\n  relative.vMiddle = (relative[MC.S_TOP] + relative[MC.S_BOTTOM]) / 2;\n\n  const viewData: ViewData = {\n    isIntersecting: intersection._isIntersecting ?? views[0] === MC.S_AT,\n    targetBounds: intersection._targetBounds,\n    rootBounds: intersection._rootBounds,\n    views,\n    relative,\n  };\n\n  return viewData;\n};\n\nconst fetchViews = async (\n  intersection: IntersectionData,\n  realtime: boolean,\n  useScrollingAncestor?: Element,\n): Promise<[View, View?]> => {\n  if (intersection._isIntersecting) {\n    return [MC.S_AT];\n  }\n\n  let rootBounds: BoundingRect;\n  if (useScrollingAncestor) {\n    rootBounds = await fetchBounds(\n      useScrollingAncestor,\n      realtime,\n      intersection._rootMargins,\n    );\n  } else {\n    rootBounds = intersection._rootBounds;\n  }\n\n  const targetBounds = intersection._targetBounds;\n  const delta = {\n    _left: rootBounds[MC.S_LEFT] - targetBounds[MC.S_LEFT],\n    _right: targetBounds[MC.S_RIGHT] - rootBounds[MC.S_RIGHT],\n    _top: rootBounds[MC.S_TOP] - targetBounds[MC.S_TOP],\n    _bottom: targetBounds[MC.S_BOTTOM] - rootBounds[MC.S_BOTTOM],\n  };\n\n  let xView: View | null = null;\n  let yView: View | null = null;\n  if (delta._left > 0 && delta._right > 0) {\n    // Target is wider than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    xView = delta._left > delta._right ? MC.S_RIGHT : MC.S_LEFT;\n  } else if (delta._left > 0) {\n    // Target is to the left of the root\n    xView = MC.S_RIGHT;\n  } else if (delta._right > 0) {\n    // Target is to the right of the root\n    xView = MC.S_LEFT;\n  } // else target is horizontally contained in root, see below\n\n  if (delta._top > 0 && delta._bottom > 0) {\n    // Target is taller than root: use greater delta to determine position.\n    // Remember, the view is the _root_ position relative to target.\n    yView = delta._top > delta._bottom ? MC.S_BELOW : MC.S_ABOVE;\n  } else if (delta._top > 0) {\n    // Target is above the root\n    yView = MC.S_BELOW;\n  } else if (delta._bottom > 0) {\n    // Target is below the root\n    yView = MC.S_ABOVE;\n  } // else target is vertically contained in root, see below\n\n  if (xView && yView) {\n    // diagonally out of vide\n    return [xView, yView];\n  } else if (xView) {\n    // horizontally out of vide\n    return [xView];\n  } else if (yView) {\n    // vertically out of vide\n    return [yView];\n  }\n\n  // The target is contained in the root bounds and yet isIntersecting was\n  // not true. This means that either:\n  //\n  // 1. It may be intersecting, but we didn't get an actual\n  //    IntersectionObserverEntry and we don't know if it's intersecting\n  //    or not\n  // 2. The target is inside a scrolling element that is _not_ being used as\n  //    the observer root, and the target has scrolled out of the scrollable\n  //    bounds but still inside the viewport\n  // 3. We're inside a cross-origin iFrame and the iFrame is partially or\n  //    fully not-intersecting\n\n  if (!intersection._isCrossOrigin) {\n    // This is case 1. or 2. => get the views relative to the closest\n    // scrollable ancestor relative to which it is _not_ intersecting, if\n    // any. If it's nested inside several scrolling elements, we'll end up\n    // looping over each one until we find the one for which the target is\n    // outside its box.\n    //\n    // It is too risky to use active isScrollable check here since we could be\n    // inside an onScroll handler, so just use passive.\n    const scrollingAncestor = getClosestScrollable(\n      useScrollingAncestor ?? intersection._target,\n    );\n\n    if (scrollingAncestor) {\n      return fetchViews(intersection, realtime, scrollingAncestor);\n    }\n  }\n\n  // Either case 3. (cross-origin iframe outside the viewport) or case 1. and\n  // the target is actually intersecting the root. Either way, it's to be\n  // considered in-view of its root.\n  return [MC.S_AT];\n};\n\nconst setViewCssProps = (\n  element: Element,\n  viewData: ViewData | undefined | null,\n) => {\n  const relative: Record<string, number> = viewData?.relative || {};\n  const props = {\n    top: relative.top,\n    bottom: relative.bottom,\n    left: relative.left,\n    right: relative.right,\n    [MC.S_WIDTH]: relative[MC.S_WIDTH],\n    [MC.S_HEIGHT]: relative[MC.S_HEIGHT],\n    hMiddle: relative.hMiddle,\n    vMiddle: relative.vMiddle,\n  };\n  setNumericStyleProps(element, props, { _prefix: \"r-\", _numDecimal: 4 }); // don't await here\n};\n\nconst fetchElement = async (\n  root: Element | null,\n  target: ViewTarget,\n): Promise<Element> => {\n  if (MH.isElement(target)) {\n    return target;\n  } else if (!MH.isString(target)) {\n    throw MH.usageError(\n      \"'target' must be an offset string or an HTMLElement | SVGElement | MathMLElement\",\n    );\n  }\n\n  const overlayOptions = getOverlayOptions(root, target);\n  return await createOverlay(overlayOptions);\n};\n\nconst getOverlayOptions = (\n  root: Element | null,\n  target: string,\n): OverlayOptions => {\n  const { reference, value } = parseScrollOffset(target);\n\n  let ovrDimension: \"width\" | \"height\";\n  if (reference === MC.S_TOP || reference === MC.S_BOTTOM) {\n    ovrDimension = MC.S_WIDTH;\n  } else if (reference === MC.S_LEFT || reference === MC.S_RIGHT) {\n    ovrDimension = MC.S_HEIGHT;\n  } else {\n    throw MH.usageError(`Invalid offset reference: '${reference}'`);\n  }\n\n  return {\n    parent: MH.isHTMLElement(root) ? root : undefined,\n    style: {\n      [reference]: value,\n      [ovrDimension]: \"100%\",\n    },\n  };\n};\n\nconst invokeCallback = (\n  callback: OnViewCallback,\n  element: Element,\n  viewData: ViewData,\n) => callback.invoke(element, MH.copyObject(viewData)).catch(logError);\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nexport * from \"@lisn/watchers/dom-watcher\";\nexport * from \"@lisn/watchers/gesture-watcher\";\nexport * from \"@lisn/watchers/layout-watcher\";\nexport * from \"@lisn/watchers/pointer-watcher\";\nexport * from \"@lisn/watchers/scroll-watcher\";\nexport * from \"@lisn/watchers/size-watcher\";\nexport * from \"@lisn/watchers/view-watcher\";\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport { settings } from \"@lisn/globals/settings\";\nsettings.autoWidgets = true;\n\nexport { settings } from \"@lisn/globals/settings\";\nexport * as watchers from \"@lisn/watchers/index\";\n","/**\n * ## Specification for the HTML API for widgets\n *\n * The following describes the general syntax when using the HTML API for\n * automatic creation of widgets based on data attributes\n * ({@link Settings.settings.autoWidgets | settings.autoWidgets} must be true.\n *\n * A widget specification should be given as a\n * `data-lisn-<WidgetName>=\"<WidgetConfList>\"` attribute.\n *\n * Alternatively, if using all default configurations, you can simply add the\n * `lisn-<WidgetName>` CSS class. Specifying a configuration using CSS classes\n * is not currently possible for widgets, only triggers.\n *\n * The general specification for a widget is of the form:\n *\n * ```\n * <WidgetConfList> ::= <WidgetConf> { \";\" <WidgetConf> }\n *\n * <WidgetConf> ::= [ <WidgetOption> { \"|\" <WidgetOption> } ]\n *\n * <WidgetOption> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n * ```\n *\n * **NOTE:**\n *\n * There can be 0 or more spaces around any of the separator characters.\n *\n * Not all widgets support multiple instances per single element and therefore\n * multiple configurations. Refer to the specific widget.\n *\n * The characters \"|\", \";\", \"=\" are reserved separators and cannot be used\n * literally as part of an option value.\n *\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { hasClass, getData } from \"@lisn/utils/css-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { toArrayIfSingle } from \"@lisn/utils/misc\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString, kebabToCamelCase, splitOn } from \"@lisn/utils/text\";\n\nimport {\n  CallbackHandler,\n  Callback,\n  wrapCallback,\n} from \"@lisn/modules/callback\";\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\nimport { DOMWatcher } from \"@lisn/watchers/dom-watcher\";\n\nimport debug from \"@lisn/debug/debug\";\n\nexport class Widget {\n  /**\n   * Disables the functionality of the widget. What this means is specific to\n   * each widget.\n   */\n  readonly disable: () => Promise<void>;\n\n  /**\n   * Re-enables the functionality of the widget. What this means is specific to\n   * each widget.\n   */\n  readonly enable: () => Promise<void>;\n\n  /**\n   * Re-enables the widget if disabled, otherwise disables it.\n   */\n  readonly toggleEnable: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is disabled.\n   */\n  readonly onDisable: (handler: WidgetHandler) => void;\n\n  /**\n   * The given handler will be called when the widget is enabled.\n   */\n  readonly onEnable: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is currently disabled.\n   */\n  readonly isDisabled: () => boolean;\n\n  /**\n   * Undoes all modifications to the element and returns it to its original state.\n   *\n   * You will need to recreate it if you want to enable its functionality again.\n   */\n  readonly destroy: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is destroyed.\n   */\n  readonly onDestroy: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is destroyed.\n   */\n  readonly isDestroyed: () => boolean;\n\n  /**\n   * Returns the element passed to the widget constructor.\n   */\n  readonly getElement: () => Element;\n\n  /**\n   * Retrieve an existing widget by element and ID.\n   */\n  static get(element: Element, id: string): Widget | null {\n    return instances.get(element)?.get(id) || null;\n  }\n\n  /**\n   * **IMPORTANT:** If ID is given and there's already a widget with this ID on\n   * this element, it will be destroyed!\n   */\n  constructor(element: Element, config?: { id?: string }) {\n    const logger = debug\n      ? new debug.Logger({\n          name: `${this.constructor.name}-${formatAsString(element)}`,\n          logAtCreation: this,\n        })\n      : null;\n\n    const id = config?.id;\n    if (id) {\n      instances.get(element)?.get(id)?.destroy(); // don't await here\n      instances.sGet(element).set(id, this);\n    }\n\n    let isDisabled = false;\n    let isDestroyed = false;\n    let destroyPromise: Promise<void>;\n\n    const enableCallbacks = MH.newSet<WidgetCallback>();\n    const disableCallbacks = MH.newSet<WidgetCallback>();\n    const destroyCallbacks = MH.newSet<WidgetCallback>();\n\n    this.disable = async () => {\n      if (!isDisabled) {\n        debug: logger?.debug8(\"Disabling\");\n        isDisabled = true;\n\n        for (const callback of disableCallbacks) {\n          await callback.invoke(this);\n        }\n      }\n    };\n\n    this.enable = async () => {\n      if (!isDestroyed && isDisabled) {\n        debug: logger?.debug8(\"Enabling\");\n        isDisabled = false;\n\n        for (const callback of enableCallbacks) {\n          await callback.invoke(this);\n        }\n      }\n    };\n\n    this.toggleEnable = async () => {\n      if (!isDestroyed) {\n        await (isDisabled ? this.enable : this.disable)();\n      }\n    };\n\n    this.onDisable = (handler) => disableCallbacks.add(wrapCallback(handler));\n    this.onEnable = (handler) => enableCallbacks.add(wrapCallback(handler));\n\n    this.isDisabled = () => isDisabled;\n\n    this.destroy = () => {\n      if (!destroyPromise) {\n        destroyPromise = (async () => {\n          debug: logger?.debug8(\"Destroying\");\n          isDestroyed = true;\n          await this.disable();\n\n          for (const callback of destroyCallbacks) {\n            await callback.invoke(this);\n          }\n\n          enableCallbacks.clear();\n          disableCallbacks.clear();\n          destroyCallbacks.clear();\n\n          if (id) {\n            const elInstances = instances.get(element);\n            if (elInstances?.get(id) === this) {\n              MH.deleteKey(elInstances, id);\n              instances.prune(element);\n            }\n          }\n        })();\n      }\n\n      return destroyPromise;\n    };\n\n    this.onDestroy = (handler) => destroyCallbacks.add(wrapCallback(handler));\n\n    this.isDestroyed = () => isDestroyed;\n\n    this.getElement = () => element;\n  }\n}\n\nexport type WidgetCallbackArgs = [Widget];\nexport type WidgetCallback = Callback<WidgetCallbackArgs>;\nexport type WidgetHandler =\n  | WidgetCallback\n  | CallbackHandler<WidgetCallbackArgs>;\n\n/**\n * **NOTE:** If the function returns a widget or a list of widgets created for\n * the given element, then each one will be automatically destroyed if the\n * element is removed from the DOM.\n */\nexport type WidgetCreateFn<Config extends Record<string, unknown>> = (\n  element: Element,\n  config?: Config,\n) => Widget | Widget[] | null | Promise<Widget | Widget[] | null>;\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidatorObject<\n  Config extends Record<string, unknown>,\n> = {\n  [K in keyof Config]: (key: K, v: unknown) => Config[K];\n};\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigAsyncValidatorObject<\n  Config extends Record<string, unknown>,\n> = {\n  [K in keyof Config]: (key: K, v: unknown) => Config[K] | Promise<Config[K]>;\n};\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidatorFunc<Config extends Record<string, unknown>> =\n  (\n    element: Element,\n  ) =>\n    | WidgetConfigValidatorObject<Config>\n    | WidgetConfigAsyncValidatorObject<Config>;\n\n/**\n * @see {@link getWidgetConfig}.\n */\nexport type WidgetConfigValidator<Config extends Record<string, unknown>> =\n  | WidgetConfigValidatorObject<Config>\n  | WidgetConfigValidatorFunc<Config>;\n\n/**\n * Enables automatic setting up of a widget from an elements matching the given\n * selector.\n *\n * If {@link settings.autoWidgets} is true, nothing is done. Otherwise,\n * when an element matching the selector is added to the DOM, `newWidget` will\n * be called and it's expected to setup the widget.\n *\n * **IMPORTANT:** The widget that is returned by `newWidget` will be\n * automatically destroyed when the element that created them is removed from\n * the DOM.\n *\n * **IMPORTANT:** If a widget by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param {} name       The name of the widget. Should be in kebab-case.\n * @param {} newWidget  Called for every element matching the widget selector.\n * @param {} configValidator\n *                      A validator object, or a function that returns such an\n *                      object, for all options supported by the widget. If\n *                      given, then the `newWidget` function will also be\n *                      passed a configuration object constructed from the\n *                      element's data attribute.\n * @param {} [options.selector]\n *                      The selector to match elements for. If not given, then\n *                      uses a default value of `[data-lisn-<name>], .lisn-<name>`\n * @param {} [options.supportsMultiple]\n *                      If true, and if `configValidator` is given, then the\n *                      value of the element's widget specific data attribute\n *                      will be split on \";\" and each one parsed individually\n *                      as a configuration. Then the `newWidget` function will\n *                      be called once for each configuration.\n */\nexport const registerWidget = async <Config extends Record<string, unknown>>(\n  name: string,\n  newWidget: WidgetCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n  options?: {\n    selector?: string;\n    supportsMultiple?: boolean;\n  },\n) => {\n  if (registeredWidgets.has(name)) {\n    return;\n  }\n\n  registeredWidgets.add(name);\n\n  // init after DOM loaded so that the settings can be configured by the user\n  // straight after loading LISN.js\n  await waitForInteractive();\n\n  const prefixedName = MH.prefixName(name);\n  const selector = options?.selector ?? getDefaultWidgetSelector(prefixedName);\n\n  if (settings.autoWidgets) {\n    const domWatcher = DOMWatcher.reuse();\n    domWatcher.onMutation(\n      async (operation) => {\n        const element = MH.currentTargetOf(operation);\n        const thisConfigValidator = MH.isFunction(configValidator)\n          ? await configValidator(element)\n          : configValidator;\n\n        const widgets: Widget[] = [];\n        const configSpecs: string[] = [];\n        const dataAttr = getData(element, prefixedName);\n\n        if (options?.supportsMultiple) {\n          if (hasClass(element, prefixedName)) {\n            configSpecs.push(\"\");\n          }\n\n          if (dataAttr !== null) {\n            configSpecs.push(\n              ...(dataAttr ? splitOn(dataAttr, \";\", true) : [\"\"]),\n            );\n          }\n        } else {\n          configSpecs.push(dataAttr ?? \"\");\n        }\n\n        for (const spec of configSpecs) {\n          const config = thisConfigValidator\n            ? await fetchWidgetConfig(spec, thisConfigValidator)\n            : undefined;\n\n          const theseWidgets = await newWidget(element, config);\n          if (theseWidgets) {\n            widgets.push(...toArrayIfSingle(theseWidgets));\n          }\n        }\n\n        // auto-destroy on element remove\n        if (MH.lengthOf(widgets)) {\n          domWatcher.onMutation(\n            () => {\n              for (const w of widgets) {\n                w.destroy();\n              }\n            },\n            {\n              target: element,\n              categories: [MC.S_REMOVED],\n            },\n          );\n        }\n      },\n      {\n        selector,\n        categories: [MC.S_ADDED],\n      },\n    );\n  }\n};\n\n/**\n * Returns a configuration object from the given user input, which can be\n * either an object or a `<separator>` separated string of key=values.\n *\n * If `input` is a string, it must be of the format:\n *\n * ```\n * <UserConfigString> ::= <OptionSpec> { <Separator> <OptionSpec> }\n *\n * <OptionSpec> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n * ```\n *\n * By default, for widgets `<separator>` is \"|\".\n *\n * **NOTE:** If `input` is a string, option names will be converted from\n * kebab-case to camelCase.\n *\n * The given `validator` defines the shape of the returned object. It is called\n * for each entry _in the `validator` object_, with that key and the\n * corresponding value from the input configuration, as the two parameters.\n *\n * If a key is not found in the input, the value passed to the validating\n * function will be `undefined`.\n *\n * If the input is a string and a key has no value, the value passed to the\n * validating function will be an empty string `\"\"`.\n *\n * The final configuration contains all keys from the `validator` object with\n * the value that the validating function for each key returned.\n *\n * There are several built-in validating functions that you can make use of.\n *\n * @see {@link Utils.validateStrList}\n * @see {@link Utils.validateNumber}\n * @see {@link Utils.validateBoolean}\n * @see {@link Utils.validateString}\n * @see {@link Utils.validateBooleanOrString}\n */\nexport const getWidgetConfig = <Config extends Record<string, unknown>>(\n  input: Record<string, unknown> | string | null | undefined,\n  validator: WidgetConfigValidatorObject<Config>,\n  separator = \"|\",\n): Config => {\n  const config = {} as Config;\n  if (!(input instanceof Object)) {\n    input = toOptionsObject(input, separator);\n  }\n\n  for (const key in validator) {\n    config[key] = validator[key](key, input[key]);\n  }\n  return config;\n};\n\n/**\n * Like {@link getWidgetConfig} but it accepts an object whose validator\n * functions may return a promise.\n */\nexport const fetchWidgetConfig = async <Config extends Record<string, unknown>>(\n  input: Record<string, unknown> | string | null | undefined,\n  validator: WidgetConfigAsyncValidatorObject<Config>,\n  separator = \"|\",\n): Promise<Config> => {\n  const config = {} as Config;\n  const configPromises = getWidgetConfig<{\n    [K in keyof Config]: Config[K] | Promise<Config[K]>;\n  }>(input, validator, separator);\n\n  for (const key in configPromises) {\n    config[key] = await configPromises[key];\n  }\n\n  return config;\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const getDefaultWidgetSelector = (prefix: string) =>\n  `.${prefix},[data-${prefix}]`;\n\n/**\n * @ignore\n * @internal\n */\nexport const fetchUniqueWidget = async <W extends Widget>(\n  name: string,\n  element: Element,\n  Type: { get: (element: Element) => W | null },\n): Promise<W | null> => {\n  let widget = Type.get(element);\n  if (!widget) {\n    await waitForDelay(0); // in case it's being processed now\n    widget = Type.get(element);\n\n    if (!widget) {\n      logWarn(`No ${name} widget for element ${formatAsString(element)}`);\n      return null;\n    }\n  }\n\n  return widget;\n};\n\nconst instances = newXWeakMap<Element, Map<string, Widget>>(() => MH.newMap());\nconst registeredWidgets = MH.newSet<string>();\n\n// --------------------\n\nconst toOptionsObject = (\n  input: string | null | undefined,\n  separator: string,\n) => {\n  const options: Record<string, string> = {};\n  for (const entry of MH.filter(\n    splitOn(input ?? \"\", separator, true),\n    (v) => !MH.isEmpty(v),\n  )) {\n    const [key, value] = splitOn(entry, /\\s*=\\s*/, true, 1);\n    options[kebabToCamelCase(key)] = value ?? \"\";\n  }\n  return options;\n};\n","/**\n * @module Actions\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { splitOn } from \"@lisn/utils/text\";\n\nimport { WidgetConfigValidator, fetchWidgetConfig } from \"@lisn/widgets/widget\";\n\n/**\n * @interface\n */\nexport type Action = {\n  do: () => void;\n  undo: () => void;\n  toggle: () => void;\n};\n\nexport type ActionCreateFn<Config extends Record<string, unknown>> = (\n  element: Element,\n  args: string[],\n  config?: Config,\n) => Action | Promise<Action>;\n\n/**\n * Registers the given action so that it can be parsed by\n * {@link Triggers.registerTrigger}.\n *\n * **IMPORTANT:** If an action by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param {} name      The name of the action. Should be in kebab-case.\n * @param {} newAction Called for every action specification for a trigger\n *                     parsed by {@link Triggers.registerTrigger}\n */\nexport const registerAction = <Config extends Record<string, unknown>>(\n  name: string,\n  newAction: ActionCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  if (registeredActions.has(name)) {\n    return;\n  }\n\n  const newActionFromSpec = async (\n    element: Element,\n    argsAndOptions: string,\n  ) => {\n    const thisConfigValidator = MH.isFunction(configValidator)\n      ? await configValidator(element)\n      : configValidator;\n\n    const args: string[] = [];\n    const config = thisConfigValidator\n      ? await fetchWidgetConfig(argsAndOptions, thisConfigValidator, \",\")\n      : undefined;\n\n    for (const entry of splitOn(argsAndOptions, \",\", true)) {\n      if (entry) {\n        if (!MH.includes(entry, \"=\")) {\n          args.push(entry);\n        }\n      }\n    }\n\n    return newAction(element, args, config);\n  };\n\n  registeredActions.set(name, newActionFromSpec);\n};\n\n/**\n * Returns an {@link Action} registered under the given name and instantiated\n * with the given element and arguments and options parsed from the given string.\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                If the given spec is not valid.\n */\nexport const fetchAction = async (\n  element: Element,\n  name: string,\n  argsAndOptions?: string,\n): Promise<Action> => {\n  const newActionFromSpec = registeredActions.get(name);\n  if (!newActionFromSpec) {\n    throw MH.usageError(`Unknown action '${name}'`);\n  }\n\n  return await newActionFromSpec(element, argsAndOptions || \"\");\n};\n\n// --------------------\n\nconst registeredActions = MH.newMap<\n  string,\n  (element: Element, spec: string) => Action | Promise<Action>\n>();\n","/**\n * @module Actions\n *\n * @categoryDescription Adding/removing class\n * {@link AddClass} and {@link RemoveClass} add or remove a list of CSS classes\n * to/from the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { addClasses, removeClasses, toggleClass } from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Adds or removes a list of CSS classes to/from the given element.\n *\n * **IMPORTANT:** When constructed, it removes all given classes from the\n * element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"add-class\".\n * - Accepted string arguments: one or more CSS classes\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@add-class: clsA, clsB\"></div>\n * ```\n *\n * @category Adding/removing class\n */\nexport class AddClass implements Action {\n  /**\n   * Adds the classes given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Removes the classes given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles each class given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"add-class\",\n      (element, classNames) => new AddClass(element, ...classNames),\n    );\n  }\n\n  constructor(element: Element, ...classNames: string[]) {\n    const { _add, _remove, _toggle } = getMethods(element, classNames);\n    _remove(); // initial state\n\n    this.do = _add;\n    this.undo = _remove;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Removes or adds a list of CSS classes to/from the given element.\n *\n * **IMPORTANT:** When constructed, it adds all given classes from the element\n * as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"remove-class\".\n * - Accepted string arguments: one or more CSS classes\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@remove-class: clsA, clsB\"></div>\n * ```\n *\n * @category Adding/removing class\n */\nexport class RemoveClass implements Action {\n  /**\n   * Removes the classes given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Adds the classes given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles each class given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"remove-class\",\n      (element, classNames) => new RemoveClass(element, ...classNames),\n    );\n  }\n\n  constructor(element: Element, ...classNames: string[]) {\n    const { _add, _remove, _toggle } = getMethods(element, classNames);\n    _add(); // initial state\n\n    this.do = _remove;\n    this.undo = _add;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element, classNames: string[]) => {\n  return {\n    _add: () => addClasses(element, ...classNames),\n\n    _remove: () => removeClasses(element, ...classNames),\n\n    _toggle: async () => {\n      for (const cls of classNames) {\n        await toggleClass(element, cls);\n      }\n    },\n  };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  addClassesNow,\n  removeClassesNow,\n  getData,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\n\n/**\n * @param {} webAnimationCallback This function is called for each\n *                                {@link https://developer.mozilla.org/en-US/docs/Web/API/Animation | Animation}\n *                                on the element. It {@link waitForMeasureTime}\n *                                before reading the animations.\n * @param {} legacyCallback       This function is called if the browser does\n *                                not support the Web Animations API. It is\n *                                called after {@link waitForMutateTime} so it\n *                                can safely modify styles.\n * @param {} realtime             If true, then it does not\n *                                {@link waitForMeasureTime} or\n *                                {@link waitForMutateTime} and runs\n *                                synchronously.\n *\n * @category Animations\n */\nexport const iterateAnimations = async (\n  element: Element,\n  webAnimationCallback: (animation: Animation) => void,\n  legacyCallback: (element: Element) => void,\n  realtime = false,\n) => {\n  /* istanbul ignore next */ // jsdom doesn't support Web Animations\n  if (\n    \"getAnimations\" in element &&\n    getData(element, MH.prefixName(\"test-legacy\")) === null\n  ) {\n    if (!realtime) {\n      await waitForMeasureTime();\n    }\n\n    for (const animation of element.getAnimations()) {\n      webAnimationCallback(animation);\n    }\n\n    // Old browsers, no Animation API\n  } else {\n    if (!realtime) {\n      await waitForMutateTime();\n    }\n\n    legacyCallback(element);\n  }\n};\n\n/**\n * @ignore\n * @internal\n */\nexport const resetCssAnimationsNow = (element: Element) => {\n  addClassesNow(element, MC.PREFIX_ANIMATE_DISABLE); // cause it to reset\n  // If we remove the disable class immediately, then it will not have the\n  // effect to reset the animation, since the browser won't see any change in\n  // the classList at the start of the frame. So we ideally need to remove the\n  // disable class after the next paint. However, depending on the animation,\n  // and its state, disabling animation and waiting for the next animation\n  // frame may cause a visible glitch, so we need to force layout now.\n  /* eslint-disable-next-line @typescript-eslint/no-unused-expressions */\n  element[MC.S_CLIENT_WIDTH]; // forces layout\n\n  removeClassesNow(element, MC.PREFIX_ANIMATE_DISABLE);\n};\n","/**\n * @module Actions\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  iterateAnimations,\n  resetCssAnimationsNow,\n} from \"@lisn/utils/animations\";\nimport {\n  hasClass,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n} from \"@lisn/utils/css-alter\";\nimport { isPageReady, waitForPageReady } from \"@lisn/utils/dom-events\";\nimport { formatAsString } from \"@lisn/utils/text\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport debug from \"@lisn/debug/debug\";\nimport { LoggerInterface } from \"@lisn/debug/types\";\n\n/**\n * Plays or reverses all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it resets and pauses the animations as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div data-lisn-on-view=\"@animate\"></div>\n * ```\n *\n * @category Animation\n */\nexport class Animate implements Action {\n  /**\n   * (Re)plays the animations forwards.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * (Re)plays the animations backwards.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Reverses the animations from its current direction.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate\", (element) => new Animate(element));\n  }\n\n  constructor(element: Element) {\n    const logger = debug\n      ? new debug.Logger({\n          name: `Animate-${formatAsString(element)}`,\n        })\n      : null;\n\n    // initial state is 0% and paused\n    animate(element, GO_FORWARD, logger, true);\n    let isFirst = true;\n\n    this.do = () => animate(element, GO_FORWARD, logger);\n    this.undo = () => animate(element, GO_BACKWARD, logger);\n    this[MC.S_TOGGLE] = () => {\n      const res = animate(element, isFirst ? GO_FORWARD : GO_TOGGLE, logger);\n      isFirst = false;\n      return res;\n    };\n  }\n}\n\n// --------------------\n\ntype AnimateDirection =\n  | typeof GO_FORWARD\n  | typeof GO_BACKWARD\n  | typeof GO_TOGGLE;\n\nconst GO_FORWARD = 0;\nconst GO_BACKWARD = 1;\nconst GO_TOGGLE = 2;\n\nconst animate = (\n  element: Element,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial = false,\n) => {\n  debug: logger?.debug8(\"Animating element\");\n  return iterateAnimations(\n    element,\n    /* istanbul ignore next */ // jsdom doesn't support Web Animations\n    (animation) => setupAnimation(animation, direction, logger, isInitial),\n    (element) => setupAnimationLegacy(element, direction, logger, isInitial),\n    isInitial,\n  );\n};\n\n/* istanbul ignore next */ // jsdom doesn't support Web Animations\nconst setupAnimation = (\n  animation: Animation,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  const pauseTillReady = !isPageReady();\n  const isBackward = animation.playbackRate === -1;\n\n  debug: logger?.debug9(\"Setting up animation\", animation, {\n    direction,\n    isBackward,\n  });\n\n  if (\n    direction === GO_TOGGLE ||\n    (direction === GO_FORWARD && isBackward) ||\n    (direction === GO_BACKWARD && !isBackward)\n  ) {\n    debug: logger?.debug9(\"Reversing animation\", animation.playState);\n    animation.reverse();\n  } else if (animation.playState === \"paused\") {\n    debug: logger?.debug9(\"Playing animation\", animation.playState);\n    animation.play();\n  } else {\n    debug: logger?.debug9(\n      \"Animation has played or is playing already\",\n      animation.playState,\n    );\n  }\n\n  if (isInitial || pauseTillReady) {\n    debug: logger?.debug9(\"Pausing animation\", animation.playState);\n    animation.pause();\n\n    if (!isInitial) {\n      // we were only pausing until ready\n      /* istanbul ignore next */\n      waitForPageReady().then(() => {\n        debug: logger?.debug9(\"Restarting animation\", animation.playState);\n        animation.play();\n      });\n    }\n  }\n\n  // If the element is moved (including if wrapped, such as by the ViewTrigger),\n  // this will cancel CSS animations and replace them with new running ones\n  if (MH.isInstanceOf(animation, CSSAnimation)) {\n    const cancelHandler = (event: AnimationPlaybackEvent) =>\n      onAnimationCancel(event, animation, direction, logger, isInitial);\n\n    animation.addEventListener(MC.S_CANCEL, cancelHandler);\n    animation.addEventListener(\"finish\", () =>\n      animation.removeEventListener(MC.S_CANCEL, cancelHandler),\n    );\n  }\n};\n\n/* istanbul ignore next */ // jsdom doesn't support Web Animations\nconst onAnimationCancel = (\n  event: AnimationPlaybackEvent,\n  animation: CSSAnimation,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  // setup again the new animation\n  debug: logger?.debug9(\"Animation cancelled, re-setting up new one\");\n  const target = MH.targetOf(event);\n  if (!MH.isInstanceOf(target, Animation)) {\n    return;\n  }\n\n  const effect = target.effect;\n  if (!MH.isInstanceOf(effect, KeyframeEffect)) {\n    return;\n  }\n\n  for (const newAnimation of MH.targetOf(effect)?.getAnimations() || []) {\n    if (\n      MH.isInstanceOf(newAnimation, CSSAnimation) &&\n      newAnimation.animationName === animation.animationName\n    ) {\n      setupAnimation(newAnimation, direction, logger, isInitial);\n      break;\n    }\n  }\n};\n\nconst setupAnimationLegacy = (\n  element: Element,\n  direction: AnimateDirection,\n  logger: LoggerInterface | null,\n  isInitial: boolean,\n) => {\n  const isBackward = hasClass(element, MC.PREFIX_ANIMATE_REVERSE);\n  const isPaused = hasClass(element, MC.PREFIX_ANIMATE_PAUSE);\n\n  const pauseTillReady = !isPageReady();\n\n  const goBackwards =\n    direction === GO_BACKWARD || (direction === GO_TOGGLE && !isBackward);\n\n  const doPause = isInitial || pauseTillReady;\n\n  debug: logger?.debug9(\"Setting up legacy animations\", element, {\n    direction,\n    isBackward,\n    isPaused,\n    goBackwards,\n    doPause,\n  });\n\n  if (goBackwards === isBackward && doPause === isPaused) {\n    // nothing to do\n    debug: logger?.debug9(\"No need to reset or pause animation\");\n    return;\n  }\n\n  resetCssAnimationsNow(element);\n\n  removeClassesNow(element, MC.PREFIX_ANIMATE_PAUSE, MC.PREFIX_ANIMATE_REVERSE);\n  addClassesNow(\n    element,\n    ...(goBackwards ? [MC.PREFIX_ANIMATE_REVERSE] : []),\n    ...(doPause ? [MC.PREFIX_ANIMATE_PAUSE] : []),\n  );\n\n  if (!isInitial && pauseTillReady) {\n    waitForPageReady().then(() =>\n      removeClasses(element, MC.PREFIX_ANIMATE_PAUSE),\n    );\n  }\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Animation\n * {@link AnimatePlay} and {@link AnimatePause} resume or pause all animations\n * on the given element. They work with CSS or Web Animations.\n *\n * {@link Actions.Animate | Animate} plays or reverses all animations on the\n * given element. It works with CSS or Web Animations.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  iterateAnimations,\n  resetCssAnimationsNow,\n} from \"@lisn/utils/animations\";\nimport {\n  hasClass,\n  addClassesNow,\n  removeClassesNow,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Resumes or pauses all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it resets and pauses the animations as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate-play\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Play/pause</button>\n * <div data-lisn-on-click=\"@animate-play +target=#btn\"></div>\n * ```\n *\n * @category Animation\n */\nexport class AnimatePlay implements Action {\n  /**\n   * Resumes the animations without resetting them.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Pauses the animations without resetting them.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Resumes the animations if paused, otherwise pauses them.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate-play\", (element) => new AnimatePlay(element));\n  }\n\n  constructor(element: Element) {\n    const { _play, _pause, _toggle } = getMethods(element);\n\n    // initial state is 0% and paused\n    animate(element, PAUSE, true);\n\n    this.do = _play;\n    this.undo = _pause;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Pauses or resumes all animations on the given element.\n *\n * It works with CSS or Web Animations.\n *\n * **IMPORTANT:** When constructed, it plays the animations as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"animate-pause\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Play/pause</button>\n * <div data-lisn-on-click=\"@animate-pause +target=#btn\"></div>\n * ```\n *\n * @category Animation\n */\nexport class AnimatePause implements Action {\n  /**\n   * Pauses the animations without resetting them.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Resumes the animations without resetting them.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Resumes the animations if paused, otherwise pauses them.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"animate-pause\", (element) => new AnimatePause(element));\n  }\n\n  constructor(element: Element) {\n    const { _play, _pause, _toggle } = getMethods(element);\n\n    // Initial state is playing\n    _play();\n\n    this.do = _pause;\n    this.undo = _play;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\ntype AnimateAction = typeof PLAY | typeof PAUSE | typeof TOGGLE;\n\nconst PLAY = 0;\nconst PAUSE = 1;\nconst TOGGLE = 2;\n\nconst getMethods = (element: Element) => {\n  return {\n    _play: () => animate(element, PLAY),\n    _pause: () => animate(element, PAUSE),\n    _toggle: () => animate(element, TOGGLE),\n  };\n};\n\nconst animate = (\n  element: Element,\n  action: AnimateAction,\n  isInitial = false,\n) => {\n  return iterateAnimations(\n    element,\n    /* istanbul ignore next */ // jsdom doesn't support Web Animations\n    (animation) => {\n      const isPaused = animation.playState === \"paused\";\n      if (action === PLAY || (isPaused && action === TOGGLE)) {\n        animation.play();\n      } else {\n        animation.pause();\n      }\n    },\n    (element) => {\n      if (isInitial) {\n        resetCssAnimationsNow(element);\n      }\n\n      const isPaused = hasClass(element, MC.PREFIX_ANIMATE_PAUSE);\n      if (action === PLAY || (isPaused && action === TOGGLE)) {\n        removeClassesNow(element, MC.PREFIX_ANIMATE_PAUSE);\n      } else {\n        addClassesNow(element, MC.PREFIX_ANIMATE_PAUSE);\n      }\n    },\n    isInitial,\n  );\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Showing/hiding elements\n * {@link Display} and {@link Undisplay} displays or \"undisplays\" (display:\n * none) the given element.\n *\n * {@link Actions.Show | Show} and {@link Actions.Hide | Hide} show or hide the\n * given element with a smooth fading transition.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  displayElement,\n  displayElementNow,\n  undisplayElement,\n  undisplayElementNow,\n  toggleDisplayElement,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Displays or \"undisplays\" (display: none) the given element.\n *\n * **IMPORTANT:** When constructed, it adds `display: none` to the element as a\n * form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"display\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Display/undisplay</button>\n * <div data-lisn-on-click=\"@display +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Display implements Action {\n  /**\n   * It reverts the element to its original `display` property.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Sets `display: none` on the element.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Displays the element if it's \"undisplayed\", otherwise \"undisplays\" it.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"display\", (element) => new Display(element));\n  }\n\n  constructor(element: Element) {\n    undisplayElementNow(element); // initial state\n\n    const { _display, _undisplay, _toggle } = getMethods(element);\n    this.do = _display;\n    this.undo = _undisplay;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * \"Undisplays\" (display: none) or displays the given element.\n *\n * **IMPORTANT:** When constructed, it removes the `lisn-undisplay` class if\n * present on the element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"undisplay\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Display/undisplay</button>\n * <div data-lisn-on-click=\"@undisplay +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Undisplay implements Action {\n  /**\n   * Sets `display: none` on the element.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * It reverts the element to its original `display` property.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Displays the element if it's \"undisplayed\", otherwise \"undisplays\" it.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"undisplay\", (element) => new Undisplay(element));\n  }\n\n  constructor(element: Element) {\n    displayElementNow(element); // initial state\n\n    const { _display, _undisplay, _toggle } = getMethods(element);\n    this.do = _undisplay;\n    this.undo = _display;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  return {\n    _display: async () => {\n      await displayElement(element); // ignore return val\n    },\n\n    _undisplay: async () => {\n      await undisplayElement(element); // ignore return val\n    },\n\n    _toggle: async () => {\n      await toggleDisplayElement(element); // ignore return val\n    },\n  };\n};\n","/**\n * @module Utils\n *\n * @categoryDescription DOM: Searching for reference elements\n * The functions allow you to find elements that match a given string\n * specification.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { logError } from \"@lisn/utils/log\";\n\n/**\n * Get the element that matches the given reference specification.\n *\n * The specification is of the form:\n *\n * ```\n * <FullSpec> ::=\n *     <Relation> \".\" <ClassName>  |\n *     <Relation> [\"-\" <ReferenceName>] |\n *     #<DOM_ID>\n *\n * <Relation> :==\n *     \"next\"  |\n *     \"prev\"  |\n *     \"this\"  |\n *     \"first\" |\n *     \"last\"\n * ```\n *\n * - `<DOM_ID>` is the unique ID of the element\n * - `<ClassName>` is a CSS class on the element\n * - `<ReferenceName>` is the value of the `data-lisn-ref` attribute on the\n *   element you are targeting. If not given, defaults to the value of the\n *   `data-lisn-ref` attribute on `thisElement`.\n *\n * There now follows an explanation of how \"next\", \"prev\", \"this\", \"first\" and\n * \"last\" search the DOM:\n * - \"next\": the tree is search in document order (depth first, then breadth),\n *   so the returned element could be a descendant of `thisElement`\n * - \"prev\": the tree is search in document order (depth first, then breadth),\n *   but excluding ancestors of `thisElement`, so the returned element is\n *   guaranteed to _not_ be an ancestor or descendant of `thisElement`.\n * - \"this\": if the given element itself matches the specification, it is\n *   returned, otherwise the closest ancestor of the given element that matches\n *   the specification\n * - \"first\": the first element matching; the tree is search in document order\n *   (depth first, then breadth).\n * - \"last\": the last element matching; the tree is search in document order\n *   (depth first, then breadth).\n *\n * @category DOM: Searching for reference elements\n *\n * @param {} thisElement The element to search relative to\n *\n * @throws {@link Errors.LisnUsageError | LisnUsageError}\n *                        If the specification is invalid or if thisElement is\n *                        not given for a specification of \"next\", \"prev\" or \"this\"\n */\nexport const getReferenceElement = (\n  spec: string,\n  thisElement: Element,\n): Element | null => {\n  if (!spec) {\n    return thisElement;\n  }\n\n  if (spec[0] === \"#\") {\n    // element ID\n    const referenceElement = MH.getElementById(spec.slice(1));\n    if (!referenceElement) {\n      return null;\n    }\n    return referenceElement;\n  }\n\n  const relation = [\"next\", \"prev\", \"this\", \"first\", \"last\"].find(\n    (p) => spec.startsWith(`${p}.`) || spec.startsWith(`${p}-`) || spec === p,\n  );\n\n  if (!relation) {\n    throw MH.usageError(`Invalid search specification '${spec}'`);\n  }\n\n  const rest = spec.slice(MH.lengthOf(relation));\n  const matchOp = rest.slice(0, 1);\n  let refOrCls = rest.slice(1);\n\n  let selector: string;\n  if (matchOp === \".\") {\n    selector = matchOp + refOrCls;\n  } else {\n    if (!refOrCls) {\n      refOrCls = getData(thisElement, PREFIX_REF) || \"\";\n    }\n\n    if (!refOrCls) {\n      throw MH.usageError(`No reference name in '${spec}'`);\n    }\n\n    selector = `[${DATA_REF}=\"${refOrCls}\"]`;\n  }\n\n  let referenceElement;\n  if (relation === \"first\") {\n    referenceElement = getFirstReferenceElement(selector);\n  } else if (relation === \"last\") {\n    referenceElement = getLastReferenceElement(selector);\n  } else {\n    if (relation === \"this\") {\n      referenceElement = getThisReferenceElement(selector, thisElement);\n    } else if (relation === \"next\") {\n      referenceElement = getNextReferenceElement(selector, thisElement);\n    } else if (relation === \"prev\") {\n      referenceElement = getPrevReferenceElement(selector, thisElement);\n    } else {\n      /* istanbul ignore next */ {\n        logError(MH.bugError(`Unhandled relation case ${relation}`));\n        return null;\n      }\n    }\n  }\n\n  if (!referenceElement) {\n    return null;\n  }\n\n  return referenceElement;\n};\n\n/**\n * Like {@link getReferenceElement} excepts if no element matches the\n * specification if will wait for at most the given time for such an element.\n *\n * @category DOM: Searching for reference elements\n */\nexport const waitForReferenceElement = (\n  spec: string,\n  thisElement: Element,\n  timeout = 200,\n) => waitForElement(() => getReferenceElement(spec, thisElement), timeout);\n\n// ----------------------------------------\n\nconst PREFIX_REF = MH.prefixName(\"ref\");\nconst DATA_REF = MH.prefixData(PREFIX_REF);\n\nconst getAllReferenceElements = (\n  selector: string,\n): NodeListOf<Element> | null => MH.docQuerySelectorAll(selector);\n\nconst getFirstReferenceElement = (selector: string): Element | null =>\n  MH.docQuerySelector(selector);\n\nconst getLastReferenceElement = (selector: string): Element | null => {\n  const allRefs = getAllReferenceElements(selector);\n  return (allRefs && allRefs[MH.lengthOf(allRefs) - 1]) || null;\n};\n\nconst getThisReferenceElement = (\n  selector: string,\n  thisElement: Element,\n): Element | null => thisElement.closest(selector);\n\nconst getNextReferenceElement = (selector: string, thisElement: Element) =>\n  getNextOrPrevReferenceElement(selector, thisElement, false);\n\nconst getPrevReferenceElement = (selector: string, thisElement: Element) =>\n  getNextOrPrevReferenceElement(selector, thisElement, true);\n\nconst getNextOrPrevReferenceElement = (\n  selector: string,\n  thisElement: Element,\n  goBackward: boolean,\n): Element | null => {\n  thisElement = getThisReferenceElement(selector, thisElement) || thisElement;\n\n  if (!MH.getDoc().contains(thisElement)) {\n    return null;\n  }\n\n  const allRefs = getAllReferenceElements(selector);\n  if (!allRefs) {\n    return null;\n  }\n\n  const numRefs = MH.lengthOf(allRefs);\n  let refIndex = goBackward ? numRefs - 1 : -1;\n  for (let i = 0; i < numRefs; i++) {\n    const currentIsAfter = MH.isNodeBAfterA(thisElement, allRefs[i]);\n\n    // As soon as we find either the starting element or the first element\n    // that follows it, stop iteration.\n    // - If we're looking for the previous reference, then take the previous\n    //   element in the iteration.\n    // - Otherwise, if the current element in the iteration is the same as the\n    //   starting one, then take either the next element in the iteration.\n    //   - Otherwise, (if the current element follows the starting one, as\n    //     would happen if the starting element was not in the list of matched\n    //     elements, take the current element in the iteration.\n    if (allRefs[i] === thisElement || currentIsAfter) {\n      refIndex = i + (goBackward ? -1 : currentIsAfter ? 0 : 1);\n      break;\n    }\n  }\n\n  return allRefs[refIndex] || null;\n};\n","/**\n * ## Specification for the HTML API for triggers\n *\n * The following describes the general syntax when using the HTML API and\n * automatic widgets\n * ({@link Settings.settings.autoWidgets | settings.autoWidgets} is true)\n * specifically for triggers and actions.\n *\n * A trigger specification should be given as a\n * `data-lisn-on-<TriggerName>=\"<TriggerSpecList>\"` attribute.\n * A fallback option of using a CSS class of the form\n * `lisn-on-<TriggerName>--<TriggerSpec>` is also supported but not recommended.\n *\n * The general specification for a trigger is of the form:\n *\n * ```\n * <TriggerSpecList> ::= <TriggerSpec> { \";\" <TriggerSpec> }\n *\n * <TriggerSpec> ::= [ <TriggerArg> { \",\" <TriggerArg> } ]\n *                   \"@\" <ActionSpec> { \"@\" <ActionSpec> }\n *                   { \"+\" <TriggerOption> }\n *\n * <TriggerOption> ::=\n *     <BooleanOptionName> [ \"=\" ( \"false\" | \"true\" ) ] |\n *     <OptionName> \"=\" <OptionValue>\n *\n * <ActionSpec> ::= <ActionName> [ \":\" <ActionArgOrOption> { \",\" <ActionArgOrOption> } ]\n *\n * <ActionArgOrOption> ::= <ActionArg> | <OptionName> \"=\" <OptionValue>\n * ```\n *\n * where `<TriggerArg>` is the particular trigger's main argument, which could\n * be required or optional (and not all triggers accept an argument). See each\n * trigger's specification for their arguments and options.\n *\n * Also refer to each action for their accepted arguments and/or options if any.\n *\n * **NOTE:**\n *\n * There can be 0 or more spaces around any of the separator characters.\n *\n * At least one action (with a preceding \"@\" character) is always required.\n *\n * The characters \";\", \",\", \"=\", \"@\", \"+\" and \":\" are reserved separators and\n * cannot be used literally as part of an argument or option value.\n *\n * @module Triggers\n *\n * @categoryDescription Manual run\n * {@link Trigger} is the base trigger class that you can extend when building\n * custom triggers and it also registers a trigger that needs to be run\n * manually (by e.g. the {@link Actions.Run | Run} action).\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { LisnUsageError } from \"@lisn/globals/errors\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport { getData } from \"@lisn/utils/css-alter\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString, randId, splitOn } from \"@lisn/utils/text\";\nimport {\n  validateString,\n  validateNumber,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { Action, fetchAction } from \"@lisn/actions/action\";\n\nimport {\n  Widget,\n  WidgetConfigValidator,\n  WidgetConfigValidatorFunc,\n  WidgetConfigAsyncValidatorObject,\n  registerWidget,\n  fetchWidgetConfig,\n} from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link Trigger} is the base trigger class that you can extend when building\n * custom triggers and it also registers a trigger that needs to be run\n * manually (by e.g. the {@link Actions.Run | Run} action).\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * @example\n * Show the element 1000ms after the first time the trigger is run.\n *\n * ```html\n * <div data-lisn-on-run=\"@show +once +delay=1000\"></div>\n * ```\n *\n * @category Manual run\n */\nexport class Trigger extends Widget {\n  /**\n   * \"Do\"es all the {@link Action}s linked to the trigger.\n   */\n  readonly run: () => Promise<void>;\n\n  /**\n   * \"Undo\"es all the {@link Action}s linked to the trigger.\n   */\n  readonly reverse: () => Promise<void>;\n\n  /**\n   * \"Toggle\"s all the {@link Action}s linked to the trigger.\n   */\n  readonly toggle: () => Promise<void>;\n\n  /**\n   * Returns the trigger's actions.\n   */\n  readonly getActions: () => Action[];\n\n  /**\n   * Returns the trigger config.\n   */\n  readonly getConfig: () => TriggerConfig;\n\n  static get(element: Element, id: string): Trigger | null {\n    const instance = super.get(element, id);\n    if (MH.isInstanceOf(instance, Trigger)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerTrigger(\n      \"run\",\n      (element, a, actions, config) => new Trigger(element, actions, config),\n      {},\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config?: TriggerConfig) {\n    super(element, config);\n\n    const logger = debug\n      ? new debug.Logger({\n          name: `Trigger-${formatAsString(element)}`,\n          logAtCreation: { actions, config },\n        })\n      : null;\n\n    const once = config?.once ?? false;\n    const oneWay = config?.oneWay ?? false;\n    const delay = config?.delay || 0;\n    const doDelay = config?.doDelay ?? delay;\n    const undoDelay = config?.undoDelay ?? delay;\n\n    let lastCallId: string;\n    // false if next should be do; true if next should be undo.\n    // Used for determining delays only.\n    let toggleState = false;\n\n    const callActions = async (\n      delay: number,\n      callFn: (action: Action) => void,\n      newToggleState: boolean,\n    ) => {\n      if (this.isDisabled()) {\n        return;\n      }\n\n      const myCallId = randId();\n      lastCallId = myCallId;\n      debug: logger?.debug10(\n        `callActions [${myCallId}] (new toggle state ${newToggleState})`,\n        callFn,\n      );\n\n      if (delay) {\n        await waitForDelay(delay);\n        if (lastCallId !== myCallId) {\n          // overriden by subsequent call\n          debug: logger?.debug10(\n            `callActions [${myCallId}]: overriden by ${lastCallId}`,\n          );\n          return;\n        }\n      }\n\n      for (const action of actions) {\n        debug: logger?.debug10(`callActions [${myCallId}]`, action);\n        callFn(action);\n      }\n\n      toggleState = newToggleState;\n\n      if (toggleState && once) {\n        this.destroy();\n      }\n    };\n\n    const run = wrapCallback(() => {\n      callActions(\n        doDelay,\n        (action) => {\n          action.do();\n        },\n        true,\n      ); // don't await\n    });\n\n    const reverse = wrapCallback(() => {\n      if (!oneWay) {\n        callActions(\n          undoDelay,\n          (action) => {\n            action.undo();\n          },\n          false,\n        ); // don't await\n      }\n    });\n\n    const toggle = wrapCallback(() => {\n      callActions(\n        toggleState ? undoDelay : doDelay,\n        (action) => {\n          action[MC.S_TOGGLE]();\n        },\n        !toggleState,\n      ); // don't await\n    });\n\n    // ----------\n\n    this.onDestroy(() => {\n      debug: logger?.debug5(\"Removing callbacks\");\n      MH.remove(run);\n      MH.remove(reverse);\n      MH.remove(toggle);\n    });\n\n    this.run = run.invoke;\n    this.reverse = reverse.invoke;\n    this[MC.S_TOGGLE] = oneWay ? run.invoke : toggle.invoke;\n    this.getActions = () => [...actions]; // copy\n    this.getConfig = () => MH.copyObject(config || {});\n  }\n}\n\n/**\n * @interface\n */\nexport type TriggerConfig = {\n  /**\n   * An ID for the trigger so that it can be looked up by ID. It has to be\n   * unique for each element, but you can use the same ID on different\n   * elements.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * If true, the trigger will run at most once. This will result in the `run`\n   * or `toggle` methods removing all three of `run`, `reverse` and `toggle`\n   * when called, so that the actions are done at most once.\n   *\n   * @defaultValue false\n   */\n  once?: boolean;\n\n  /**\n   * If true, then the `reverse` method of the trigger will do nothing and the\n   * `toggle` method will always do the actions, i.e. will be equivalent to\n   * `run`.\n   *\n   * @defaultValue false\n   */\n  oneWay?: boolean;\n\n  /**\n   * Delay in milliseconds before doing, undoing or toggling actions.\n   *\n   * @defaultValue 0\n   */\n  delay?: number;\n\n  /**\n   * Delay in milliseconds before doing actions.\n   *\n   * @defaultValue {@link TriggerConfig.delay}\n   */\n  doDelay?: number;\n\n  /**\n   * Delay in milliseconds before undoing actions.\n   *\n   * @defaultValue {@link TriggerConfig.delay}\n   */\n  undoDelay?: number;\n\n  /**\n   * The element to instantiate all actions on this trigger for.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  actOn?: Element;\n};\n\nexport type TriggerCreateFn<Config extends TriggerConfig> = (\n  element: Element,\n  args: string[],\n  actions: Action[],\n  config: Config,\n) => Trigger | Promise<Trigger>;\n\n/**\n * Registers the given trigger as a widget to be automatically configured for\n * all elements that have a trigger specification with the given name.\n *\n * A trigger specification can be given as a\n * `data-lisn-on-<TriggerName>=\"<TriggerSpec> { \";\" <TriggerSpec> }\"` attribute\n * or as one or more `lisn-on-<TriggerName>--<TriggerSpec>` classes.\n *\n * See the top of the {@link Triggers} page for an explanation of `<TriggerSpec>`.\n *\n * Using classes instead of attributes is not recommended and only available as\n * a fallback option.\n *\n * **IMPORTANT:** If a trigger by that name is already registered, the current\n * call does nothing, even if the remaining arguments differ.\n *\n * @param {} name       The name of the trigger. Should be in kebab-case.\n * @param {} newTrigger Called for every trigger specification on any element\n *                      that has one or more trigger specifications.\n * @param {} configValidator\n *                      A validator object, or a function that returns such an\n *                      object, for all options that are specific to the\n *                      trigger. Base options (in {@link TriggerConfig}) will\n *                      be parsed automatically and don't need to be handled by\n *                      `configValidator`.\n *                      If the parameter is a function, it will be called with\n *                      the element on which the trigger is being defined.\n *\n * @see {@link registerWidget}\n */\nexport const registerTrigger = <Config extends TriggerConfig = TriggerConfig>(\n  name: string,\n  newTrigger: TriggerCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  const clsPref = MH.prefixName(`on-${name}`);\n\n  const newWidget = async (element: Element) => {\n    const widgets: Widget[] = [];\n    const baseConfigValidator = newBaseConfigValidator(element);\n    const thisConfigValidator = MH.isFunction(configValidator)\n      ? await configValidator(element)\n      : configValidator;\n\n    const allSpecs = splitOn(\n      getData(element, MH.prefixName(`on-${name}`)) ?? \"\",\n      TRIGGER_SEP,\n      true,\n    );\n\n    for (const cls of MH.classList(element)) {\n      if (cls.startsWith(`${clsPref}--`)) {\n        allSpecs.push(cls.slice(MH.lengthOf(clsPref) + 2));\n      }\n    }\n\n    for (const spec of allSpecs) {\n      const [tmp, configSpec] = splitOn(spec, OPTION_PREF_CHAR, true, 1);\n      const [argSpec, allActionSpecs] = splitOn(tmp, ACTION_PREF_CHAR, true, 1);\n\n      const args = MH.filterBlank(splitOn(argSpec, \",\", true)) || [];\n\n      const config = await fetchWidgetConfig(\n        configSpec,\n        MH.assign(\n          baseConfigValidator,\n          thisConfigValidator,\n        ) as WidgetConfigAsyncValidatorObject<Required<TriggerConfig> & Config>,\n        OPTION_PREF_CHAR,\n      );\n\n      const actionTarget = config.actOn ?? element;\n\n      const actions = [];\n      for (const actionSpec of splitOn(\n        allActionSpecs || \"\",\n        ACTION_PREF_CHAR,\n        true,\n      )) {\n        const [name, actionArgsAndOptions] = splitOn(\n          actionSpec,\n          ACTION_ARGS_PREF_CHAR,\n          true,\n          1,\n        );\n\n        try {\n          actions.push(\n            await fetchAction(actionTarget, name, actionArgsAndOptions || \"\"),\n          );\n        } catch (err) {\n          if (MH.isInstanceOf(err, LisnUsageError)) {\n            // fetchAction would have logged an error\n            continue;\n          }\n\n          throw err;\n        }\n      }\n\n      widgets.push(await newTrigger(element, args, actions, config));\n    }\n\n    return widgets;\n  };\n\n  registerWidget(name, newWidget, null, {\n    selector: `[class^=\"${clsPref}--\"],[class*=\" ${clsPref}--\"],[data-${clsPref}]`,\n  });\n};\n\n// --------------------\n\nconst TRIGGER_SEP = \";\";\nconst OPTION_PREF_CHAR = \"+\";\nconst ACTION_PREF_CHAR = \"@\";\nconst ACTION_ARGS_PREF_CHAR = \":\";\n\nconst newBaseConfigValidator: WidgetConfigValidatorFunc<TriggerConfig> = (\n  element,\n) => {\n  return {\n    id: validateString,\n    once: validateBoolean,\n    oneWay: validateBoolean,\n    delay: validateNumber,\n    doDelay: validateNumber,\n    undoDelay: validateNumber,\n    actOn: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling triggers\n * {@link Enable} and {@link Disable} enable or disable a list of triggers\n * defined on the given element.\n *\n * {@link Run} runs or reverses a list of triggers defined on the given\n * element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { logWarn } from \"@lisn/utils/log\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { formatAsString } from \"@lisn/utils/text\";\n\nimport { Trigger } from \"@lisn/triggers/trigger\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Enables or disables a list of triggers defined on the given element.\n *\n * **IMPORTANT:** When constructed, it disables all given triggers as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"enable\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button id=\"btn\">Enable/disable</button>\n * <button data-lisn-on-click=\"\n *         @enable=triggerA,triggerB +target=#btn\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-click=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Enable implements Action {\n  /**\n   * Enables the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Disables the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the enabled state on each trigger given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"enable\", (element, ids) => new Enable(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _enable, _disable, _toggleEnable } = getMethods(element, ids);\n    _disable(); // initial state\n\n    this.do = _enable;\n    this.undo = _disable;\n    this[MC.S_TOGGLE] = _toggleEnable;\n  }\n}\n\n/**\n * Disables or enables a list of triggers defined on the given element.\n *\n * **IMPORTANT:** When constructed, it enables all given triggers as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"disable\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button id=\"btn\">Enable/disable</button>\n * <button data-lisn-on-click=\"\n *         @disable=triggerA,triggerB +target=#btn\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-click=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Disable implements Action {\n  /**\n   * Disables the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Enables the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the enabled state on each trigger given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"disable\", (element, ids) => new Disable(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _enable, _disable, _toggleEnable } = getMethods(element, ids);\n    _enable(); // initial state\n\n    this.do = _disable;\n    this.undo = _enable;\n    this[MC.S_TOGGLE] = _toggleEnable;\n  }\n}\n\n/**\n * Runs or reverses a list of triggers defined on the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n *   - Action name: \"run\".\n *   - Accepted string arguments: one or more unique IDs of triggers defined on\n *     the given element\n *\n * @example\n * ```html\n * <button data-lisn-on-click=\"\n *         @run=triggerA,triggerB\n *         @add-class=clsA +id=triggerA\n *      \"\n *      data-lisn-on-run=\"@add-class=clsB +id=triggerB\"\n * ></button>\n * ```\n *\n * @category Controlling triggers\n */\nexport class Run implements Action {\n  /**\n   * Runs the triggers with IDs given to the constructor.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Reverses the triggers with IDs given to the constructor.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the triggers with IDs given to the constructor.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"run\", (element, ids) => new Run(element, ...ids));\n  }\n\n  constructor(element: Element, ...ids: string[]) {\n    const { _run, _reverse, _toggle } = getMethods(element, ids);\n\n    this.do = _run;\n    this.undo = _reverse;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element, ids: string[]) => {\n  const triggerPromises = getTriggers(element, ids);\n  const call = async (\n    method:\n      | \"enable\"\n      | \"disable\"\n      | \"toggleEnable\"\n      | \"run\"\n      | \"reverse\"\n      | \"toggle\",\n  ) => {\n    const triggers = await triggerPromises;\n    for (const trigger of triggers) {\n      trigger[method]();\n    }\n  };\n\n  return {\n    _enable: () => call(\"enable\"),\n    _disable: () => call(\"disable\"),\n    _toggleEnable: () => call(\"toggleEnable\"),\n    _run: () => call(\"run\"),\n    _reverse: () => call(\"reverse\"),\n    _toggle: () => call(MC.S_TOGGLE),\n  };\n};\n\nconst getTriggers = async (element: Element, ids: string[]) => {\n  const triggers: Trigger[] = [];\n  if (!MH.lengthOf(ids)) {\n    logWarn(\"At least 1 ID is required for enable action\");\n    return triggers;\n  }\n\n  for (const id of ids) {\n    let trigger = Trigger.get(element, id);\n    if (!trigger) {\n      await waitForDelay(0); // in case it's being processed now\n      trigger = Trigger.get(element, id);\n\n      if (!trigger) {\n        logWarn(\n          `No trigger with ID ${id} for element ${formatAsString(element)}`,\n        );\n        continue;\n      }\n    }\n\n    triggers.push(trigger);\n  }\n\n  return triggers;\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Scrolling\n * {@link ScrollTo} scrolls to the given element or to the previous scroll\n * position.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { CoordinateOffset } from \"@lisn/globals/types\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { validateNumber } from \"@lisn/utils/validation\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * Scrolls to the given element or to the previous scroll position.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"scroll-to\".\n * - Accepted string arguments: none\n * - Accepted options:\n *   - `offsetX`: A number.\n *   - `offsetY`: A number.\n *   - `scrollable`: A string element specification for an element (see\n *     {@link Utils.getReferenceElement | getReferenceElement}). Note that,\n *     unless it's a DOM ID, the specification is parsed relative to the\n *     element being acted on and not the element the trigger is defined on (in\n *     case you've used the `act-on` trigger option).\n *\n * **NOTE:** Do not place a + sign in front of the offset values (just omit it\n * if you want a positive offset). Otherwise it will be interpreted as a\n * trigger option.\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position +10px down:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to: offsetY=10 +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the main scrolling element to\n * element's position 10px _down_ and 50px _left_:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-on-click=\"@scroll-to: offsetY=10, offsetX=-50 +target=#btn\"></div>\n * ```\n *\n * @example\n * When the user clicks the button, scroll the closest parent element with\n * class `scrollable` to the element's position:\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div class=\"scrollable\">\n *   <div data-lisn-on-click=\"@scroll-to: scrollable=this.scrollable +target=#btn\"></div>\n * </div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <button id=\"btn\">Scroll to/back</button>\n * <div data-lisn-ref=\"scrollable\">\n *   <div data-lisn-on-click=\"@scroll-to: scrollable=this-scrollable +target=#btn\"></div>\n * </div>\n * ```\n *\n * @category Scrolling\n */\nexport class ScrollTo implements Action {\n  /**\n   * Scrolls the main scrolling element to the element's position.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Scrolls the main scrolling element to the last scroll position before the\n   * action was {@link do}ne. If the action had never been done, does nothing.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Scrolls the main scrolling element to the element's position, if it's not\n   * already there, or otherwise scrolls the main scrolling element to the\n   * previous saved scroll position.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"scroll-to\",\n      (element, args, config) => {\n        const offset = config\n          ? {\n              left: config.offsetX,\n              top: config.offsetY,\n            }\n          : undefined;\n\n        return new ScrollTo(element, {\n          scrollable: config?.scrollable,\n          offset,\n        });\n      },\n      newConfigValidator,\n    );\n  }\n\n  constructor(element: Element, config?: ScrollToConfig) {\n    const offset = config?.offset;\n    const scrollable = config?.scrollable;\n\n    const watcher = ScrollWatcher.reuse();\n    let prevScrollTop = -1,\n      prevScrollLeft = -1;\n\n    this.do = async () => {\n      const current = await watcher.fetchCurrentScroll();\n      prevScrollTop = current[MC.S_SCROLL_TOP];\n      prevScrollLeft = current[MC.S_SCROLL_LEFT];\n\n      const action = await watcher.scrollTo(element, {\n        offset,\n        scrollable,\n      });\n      await action?.waitFor();\n    };\n\n    this.undo = async () => {\n      if (prevScrollTop !== -1) {\n        const action = await watcher.scrollTo({\n          top: prevScrollTop,\n          left: prevScrollLeft,\n        });\n        await action?.waitFor();\n      }\n    };\n\n    this[MC.S_TOGGLE] = async () => {\n      const start = await watcher.fetchCurrentScroll();\n\n      const canReverse = prevScrollTop !== -1;\n      let hasReversed = false;\n\n      // Try to scroll to the element, but if we're already at it, then reverse\n      // to previous position if any.\n      const altTarget = {\n        top: () => {\n          hasReversed = true;\n          return prevScrollTop;\n        },\n        left: prevScrollLeft,\n      };\n\n      const action = await watcher.scrollTo(\n        element,\n        canReverse ? { altTarget, offset } : { offset },\n      );\n      await action?.waitFor();\n\n      if (!hasReversed) {\n        // We've scrolled to the element, so save the starting position as the\n        // previous one.\n        prevScrollTop = start[MC.S_SCROLL_TOP];\n        prevScrollLeft = start[MC.S_SCROLL_LEFT];\n      }\n    };\n  }\n}\n\n/**\n * @interface\n * @category Scrolling\n */\nexport type ScrollToConfig = {\n  /**\n   * See {@link Utils.ScrollToOptions.offset}.\n   *\n   * @defaultValue undefined // none\n   */\n  offset?: CoordinateOffset;\n\n  /**\n   * The element that should be scrolled.\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  scrollable?: Element;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<{\n  offsetX: number;\n  offsetY: number;\n  scrollable?: Element;\n}> = (element) => {\n  return {\n    offsetX: (key, value) => validateNumber(key, value) ?? 0,\n    offsetY: (key, value) => validateNumber(key, value) ?? 0,\n    scrollable: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Setting/deleting attributes\n * {@link SetAttribute} sets or deletes an attribute on the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { camelToKebabCase } from \"@lisn/utils/text\";\nimport { validateString } from \"@lisn/utils/validation\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\nimport { WidgetConfigValidatorObject } from \"@lisn/widgets/widget\";\n\n/**\n * Either sets or deletes an attribute, or toggles between two values of an\n * attribute, on the given element.\n *\n * **IMPORTANT:** When constructed, it sets all given attributes on the\n * element to their _OFF_ (undone) state as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"set-attribute\".\n * - Accepted string arguments: name of attribute\n * - Accepted options:\n *   - `on`: A string value for the attribute. Can be blank. Omit this option\n *     in order to have the attribute deleted when the action is done.\n *   - `off`: A string value for the attribute. Can be blank. Omit this option\n *     in order to have the attribute deleted when the action is undone.\n *\n * Note that with the HTML API you can only specify one attribute per action.\n * But of course you can add the same action multiple times per trigger. See\n * examples below.\n *\n * @example\n * This is an overview of the various combinations that you can use to set an\n * attribute to a non-empty value, a blank value or delete the attribute when\n * the action is either done or undone:\n *\n * | Specification                         | Value when done | Value when undone |\n * | ------------------------------------- | --------------- | ----------------- |\n * | @set-attr: attr, on=onVal, off=offVal | \"onVal\"         | \"offVal\"          |\n * | @set-attr: attr, on=value             | \"value\"         | _deleted_         |\n * | @set-attr: attr, off=value            | _deleted_       | \"value\"           |\n * | @set-attr: attr, on=                  | \"\"              | _deleted_         |\n * | @set-attr: attr, off=                 | _deleted_       | \"\"                |\n * | @set-attr: attr, on=value, off=       | \"value\"         | \"\"                |\n * | @set-attr: attr, on= , off=value      | \"\"              | \"value\"           |\n *\n * @example\n * This will set attribute `attrA` to `valueA-ON` and `attrB` to `valueB-ON`\n * when the element enters the viewport and set `attrA` to `valueA-OFF` and\n * `attrB` to `valueB-OFF` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attrA, on=valueA-ON, off=valueA-OFF\n *                         @set-attribute: attrB, on=valueB-ON, off=valueB-OFF\"\n * ></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to `value` when the element enters the\n * viewport and _delete_ the attribute when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=value\"></div>\n * ```\n *\n * @example\n * This will _delete_ attribute `attr` when the element enters the viewport and\n * set it to `value` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, off=value\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to a blank value when the element enters the\n * viewport and _delete_ the attribute when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=\"></div>\n * ```\n *\n * @example\n * This will _delete_ attribute `attr` when the element enters the viewport and\n * set it to a blank value when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, off=\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to `value` when the element enters the\n * viewport and set it to a blank value when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=value, off=\"></div>\n * ```\n *\n * @example\n * This will set attribute `attr` to a blank value when the element enters the\n * viewport and set it to `value` when it leaves the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@set-attribute: attr, on=, off=value\"></div>\n * ```\n *\n * @category Setting/deleting attributes\n */\nexport class SetAttribute implements Action {\n  /**\n   * Sets the attribute to its \"ON\" value, or deletes it if that value is null.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Sets the attribute to its \"OFF\" value, or deletes it if that value is null.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the attribute from its \"ON\" to \"OFF\" value or vice versa.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"set-attribute\",\n      (element, args, config) => {\n        return new SetAttribute(element, { [args[0]]: config || {} });\n      },\n      configValidator,\n    );\n  }\n\n  constructor(element: Element, attributes: Attributes) {\n    if (!attributes) {\n      throw MH.usageError(\"Attributes are required\");\n    }\n\n    let isOn = false;\n\n    const setAttrs = async (on: boolean) => {\n      isOn = on;\n\n      await waitForMutateTime();\n\n      for (const attr in attributes) {\n        const value = attributes[attr][on ? \"on\" : \"off\"];\n        const attrName = camelToKebabCase(attr);\n\n        if (MH.isNullish(value)) {\n          MH.delAttr(element, attrName);\n        } else {\n          MH.setAttr(element, attrName, value);\n        }\n      }\n    };\n\n    this.do = () => setAttrs(true);\n\n    this.undo = () => setAttrs(false);\n\n    this[MC.S_TOGGLE] = () => setAttrs(!isOn);\n\n    this.undo(); // initial state\n  }\n}\n\n/**\n * Each key in the object is an attribute name. The `on` value is set when the\n * action is done and the `off` value is set when the action is undone. To set\n * the attribute to an empty value, use an empty string. To _delete_ the\n * attribute, use `null` as the value or simply omit the relevant `on` or `off`\n * key.\n *\n * **IMPORTANT:** Attribute names in camelCase are converted to kebab-case.\n * E.g. `dataFooBar` will translate to `data-foo-bar`.\n *\n * @category Setting/deleting attributes\n */\nexport type Attributes = Record<\n  string,\n  { on?: string | null; off?: string | null }\n>;\n\n// --------------------\n\nconst configValidator: WidgetConfigValidatorObject<Attributes[string]> = {\n  on: validateString,\n  off: validateString,\n};\n","/**\n * @module Actions\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport {\n  showElement,\n  hideElement,\n  toggleShowElement,\n  disableInitialTransition,\n} from \"@lisn/utils/css-alter\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Shows or hides the given element with a smooth fading transition.\n *\n * **IMPORTANT:** When constructed, it will hide the element as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"show\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Show/hide</button>\n * <div data-lisn-on-click=\"@show +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Show implements Action {\n  /**\n   * Shows the element with a smooth fade in transition.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Hides the element with a smooth fade out transition.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Shows the element if it is hidden, hides it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"show\", (element) => new Show(element));\n  }\n\n  constructor(element: Element) {\n    disableInitialTransition(element);\n    hideElement(element); // initial state\n\n    const { _show, _hide, _toggle } = getMethods(element);\n    this.do = _show;\n    this.undo = _hide;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n/**\n * Hides or shows the given element with a smooth fading transition.\n *\n * **IMPORTANT:** When constructed, it will remove any `lisn-hide` class from\n * the element as a form of initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"hide\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"btn\">Show/hide</button>\n * <div data-lisn-on-click=\"@hide +target=#btn\"></div>\n * ```\n *\n * @category Showing/hiding elements\n */\nexport class Hide implements Action {\n  /**\n   * Hides the element with a smooth fade out transition.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Shows the element with a smooth fade in transition.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Shows the element if it is hidden, hides it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"hide\", (element) => new Hide(element));\n  }\n\n  constructor(element: Element) {\n    disableInitialTransition(element);\n    showElement(element); // initial state\n\n    const { _show, _hide, _toggle } = getMethods(element);\n    this.do = _hide;\n    this.undo = _show;\n    this[MC.S_TOGGLE] = _toggle;\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  return {\n    _show: async () => {\n      await showElement(element); // ignore return val\n    },\n\n    _hide: async () => {\n      await hideElement(element); // ignore return val\n    },\n\n    _toggle: async () => {\n      await toggleShowElement(element); // ignore return val\n    },\n  };\n};\n","/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { Position } from \"@lisn/globals/types\";\n\n/**\n * @category Validation\n */\nexport const isValidPosition = (position: string): position is Position =>\n  MH.includes(POSITIONS as readonly string[], position);\n\n/**\n * @category Validation\n */\nexport const isValidTwoFoldPosition = (\n  position: string,\n): position is `${Position}-${Position}` =>\n  position.match(TWO_FOLD_POSITION_REGEX) !== null;\n\n/**\n * @ignore\n * @internal\n */\nexport const POSITIONS = [\n  MC.S_TOP,\n  MC.S_BOTTOM,\n  MC.S_LEFT,\n  MC.S_RIGHT,\n] as const;\n\n// --------------------\n\nconst POSITIONS_OPTIONS_STR = \"(\" + POSITIONS.join(\"|\") + \")\";\n\nconst TWO_FOLD_POSITION_REGEX = RegExp(\n  `^${POSITIONS_OPTIONS_STR}-${POSITIONS_OPTIONS_STR}$`,\n);\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { XYDirection, Position } from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  hasClass,\n  addClasses,\n  addClassesNow,\n  removeClasses,\n  removeClassesNow,\n  getData,\n  getBooleanData,\n  setData,\n  setDataNow,\n  setBooleanData,\n  setBooleanDataNow,\n  unsetBooleanData,\n  unsetBooleanDataNow,\n  delData,\n  delDataNow,\n  setHasModal,\n  delHasModal,\n  getStyleProp,\n  setStyleProp,\n  delStyleProp,\n  getComputedStyleProp,\n  getMaxTransitionDuration,\n} from \"@lisn/utils/css-alter\";\nimport {\n  wrapElement,\n  wrapElementNow,\n  moveElement,\n  moveElementNow,\n  replaceElementNow,\n  getOrAssignID,\n} from \"@lisn/utils/dom-alter\";\nimport { waitForInteractive } from \"@lisn/utils/dom-events\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { logError } from \"@lisn/utils/log\";\nimport { keyWithMaxVal } from \"@lisn/utils/math\";\nimport { toBoolean, toArrayIfSingle } from \"@lisn/utils/misc\";\nimport { waitForDelay } from \"@lisn/utils/tasks\";\nimport { isValidPosition, isValidTwoFoldPosition } from \"@lisn/utils/position\";\nimport { fetchViewportSize } from \"@lisn/utils/size\";\nimport {\n  validateStrList,\n  validateBoolean,\n  validateBooleanOrString,\n  validateString,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\nimport { ViewWatcher, ViewData } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetHandler,\n  WidgetCallback,\n  WidgetConfigValidator,\n  WidgetConfigValidatorObject,\n  registerWidget,\n  getWidgetConfig,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\n/* ********************\n * Base Openable\n * ********************/\n\nexport type OpenableCreateFn<Config extends Record<string, unknown>> = (\n  element: HTMLElement,\n  config?: Config,\n) => Openable;\n\n/**\n * Enables automatic setting up of an {@link Openable} widget from an\n * elements matching its content element selector (`[data-lisn-<name>]` or\n * `.lisn-<name>`).\n *\n * The name you specify here should generally be the same name you pass in\n * {@link OpenableProperties.name | options.name} to the\n * {@link Openable.constructor} but it does not need to be the same.\n *\n * @param {} name        The name of the openable. Should be in kebab-case.\n * @param {} newOpenable Called for every element matching the selector.\n * @param {} configValidator\n *                        A validator object, or a function that returns such\n *                        an object, for all options supported by the widget.\n *\n * @see {@link registerWidget}\n */\nexport const registerOpenable = <Config extends Record<string, unknown>>(\n  name: string,\n  newOpenable: OpenableCreateFn<Config>,\n  configValidator?: null | WidgetConfigValidator<Config>,\n) => {\n  registerWidget(\n    name,\n    (element, config) => {\n      if (MH.isHTMLElement(element)) {\n        if (!Openable.get(element)) {\n          return newOpenable(element, config);\n        }\n      } else {\n        logError(MH.usageError(\"Openable widget supports only HTMLElement\"));\n      }\n\n      return null;\n    },\n    configValidator,\n  );\n};\n\n/**\n * {@link Openable} is an abstract base class. You should not directly\n * instantiate it but can inherit it to create your own custom openable widget.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * @see {@link registerOpenable}\n */\nexport abstract class Openable extends Widget {\n  /**\n   * Opens the widget unless it is disabled.\n   */\n  readonly open: () => Promise<void>;\n\n  /**\n   * Closes the widget.\n   */\n  readonly close: () => Promise<void>;\n\n  /**\n   * Closes the widget if it is open, or opens it if it is closed (unless\n   * it is disabled).\n   */\n  readonly toggle: () => Promise<void>;\n\n  /**\n   * The given handler will be called when the widget is open.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onOpen: (handler: WidgetHandler) => void;\n\n  /**\n   * The given handler will be called when the widget is closed.\n   *\n   * If it returns a promise, it will be awaited upon.\n   */\n  readonly onClose: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns true if the widget is currently open.\n   */\n  readonly isOpen: () => boolean;\n\n  /**\n   * Returns the root element created by us that wraps the original content\n   * element passed to the constructor. It is located in the content element's\n   * original place.\n   */\n  readonly getRoot: () => HTMLElement;\n\n  /**\n   * Returns the element that was found to be the container. It is the closest\n   * ancestor that has a `lisn-collapsible-container` class, or if no such\n   * ancestor then the immediate parent of the content element.\n   */\n  readonly getContainer: () => HTMLElement | null;\n\n  /**\n   * Returns the trigger elements, if any. Note that these may be wrappers\n   * around the original triggers passed.\n   */\n  readonly getTriggers: () => Element[];\n\n  /**\n   * Returns the trigger elements along with their configuration.\n   */\n  readonly getTriggerConfigs: () => Map<Element, OpenableTriggerConfig>;\n\n  /**\n   * Retrieve an existing widget by its content element or any of its triggers.\n   *\n   * If the element is already part of a configured {@link Openable} widget,\n   * the widget instance is returned. Otherwise `null`.\n   *\n   * Note that trigger elements are not guaranteed to be unique among openable\n   * widgets as the same element can be a trigger for multiple such widgets. If\n   * the element you pass is a trigger, then the last openable widget that was\n   * created for it will be returned.\n   */\n  static get(element: Element): Openable | null {\n    // We manage the instances here since we also map associated elements and\n    // not just the main content element that created the widget.\n    return instances.get(element) || null;\n  }\n\n  constructor(element: HTMLElement, properties: OpenableProperties) {\n    super(element);\n\n    const { isModal, isOffcanvas } = properties;\n\n    const openCallbacks = MH.newSet<WidgetCallback>();\n    const closeCallbacks = MH.newSet<WidgetCallback>();\n\n    let isOpen = false;\n\n    // ----------\n\n    const open = async () => {\n      if (this.isDisabled() || isOpen) {\n        return;\n      }\n\n      isOpen = true;\n\n      for (const callback of openCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        setHasModal();\n      }\n\n      await setBooleanData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const close = async () => {\n      if (this.isDisabled() || !isOpen) {\n        return;\n      }\n\n      isOpen = false;\n\n      for (const callback of closeCallbacks) {\n        await callback.invoke(this);\n      }\n\n      if (isModal) {\n        delHasModal();\n      }\n\n      if (isOffcanvas) {\n        scrollWrapperToTop(); // no need to await\n      }\n\n      await unsetBooleanData(root, PREFIX_IS_OPEN);\n    };\n\n    // ----------\n\n    const scrollWrapperToTop = async () => {\n      // Wait a bit before scrolling since the hiding of the element is animated.\n      // Assume no more than 1s animation time.\n      await waitForDelay(1000);\n      await waitForMeasureTime();\n      MH.elScrollTo(outerWrapper, {\n        top: 0,\n        left: 0,\n      });\n    };\n\n    // --------------------\n\n    this.open = open;\n    this.close = close;\n    this[MC.S_TOGGLE] = () => (isOpen ? close() : open());\n    this.onOpen = (handler) => openCallbacks.add(wrapCallback(handler));\n    this.onClose = (handler) => closeCallbacks.add(wrapCallback(handler));\n    this.isOpen = () => isOpen;\n    this.getRoot = () => root;\n    this.getContainer = () => container;\n    this.getTriggers = () => [...triggers.keys()];\n    this.getTriggerConfigs = () => MH.newMap([...triggers.entries()]);\n\n    this.onDestroy(() => {\n      openCallbacks.clear();\n      closeCallbacks.clear();\n    });\n\n    const { root, container, triggers, outerWrapper } = setupElements(\n      this,\n      element,\n      properties,\n    );\n  }\n}\n\n/**\n * Per-trigger based configuration. Can either be given as an object as the\n * value of the {@link OpenableProperties.triggers} map, or it can be set as a\n * string configuration in the `data-lisn-<name>-trigger` data attribute. See\n * {@link getWidgetConfig} for the syntax.\n *\n * @example\n * ```html\n * <div data-lisn-collapsible-trigger=\"auto-close\n *                                     | icon=right\n *                                     | icon-closed=arrow-down\n *                                     | icon-open=x\"\n * ></div>\n * ```\n *\n * @interface\n */\nexport type OpenableTriggerConfig = {\n  /**\n   * The DOM ID of the trigger. Will result in the trigger element, which could\n   * be a wrapper around the original element (as in the case of\n   * {@link Collapsible} you passed, getting this ID.\n   *\n   * **IMPORTANT:** If the trigger element already has an ID and is not being\n   * wrapped, then this will override the ID and it _won't_ be restored on destroy.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) for the trigger. Will result in the trigger element, which\n   * could be a wrapper around the original element you passed, getting these\n   * classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Override the widget's {@link OpenableProperties.autoClose} for this trigger.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  autoClose?: boolean;\n\n  /**\n   * Open the openable when this trigger is hovered.\n   *\n   * If the device is touch and {@link OpenableProperties.autoClose} is enabled,\n   * the widget will be closed shortly after the pointer leaves both the\n   * trigger and the root element.\n   *\n   * @defaultValue false\n   */\n  hover?: boolean;\n\n  /**\n   * Whether to prevent default click action.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.icon} for this trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  icon?: false | Position;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconClosed} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Override the widget's {@link CollapsibleConfig.iconOpen} for this\n   * trigger.\n   *\n   * Currently only relevant for {@link Collapsible}s.\n   *\n   * @defaultValue undefined // Widget default\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/**\n * @interface\n */\nexport type OpenableProperties = {\n  /**\n   * The name of the _type_ of the openable. Will set the class prefix to\n   * `lisn-<name>`.\n   */\n  name: string;\n\n  /**\n   * The DOM ID of the openable. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the openable. Will result in the\n   * top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * Whether to auto-close the widget on clicking outside the content element\n   * or on pressing Escape key. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * This is true by default for {@link Popup}, {@link Modal} and {@link Offcanvas}.\n   */\n  autoClose: boolean;\n\n  /**\n   * If true, then while the widget is open, the `document.body` will be set to\n   * `overflow: hidden`.\n   *\n   * This is true for {@link Modal}.\n   */\n  isModal: boolean;\n\n  /**\n   * If true, then the content element is assumed to be possibly scrollable and\n   * will be scrolled back to its top after the widget is closed.\n   *\n   * This is true for {@link Modal} and {@link Offcanvas}.\n   */\n  isOffcanvas: boolean;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * This is true by default for {@link Modal} and {@link Offcanvas}.\n   */\n  closeButton: boolean;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way (`<name>` is what is given as\n   * {@link name}):\n   * 1. If the content element has a `data-lisn-<name>-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-<name>-trigger` class or `data-lisn-<name>-trigger` attribute\n   *    and the same `data-lisn-<name>-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-<name>-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-<name>-trigger`\n   *    class or `data-lisn-<name>-trigger` attribute and that do _not_ have a\n   *    `data-lisn-<name>-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Whether to wrap each trigger in a new element.\n   *\n   * @defaultValue false\n   */\n  wrapTriggers?: boolean;\n\n  /**\n   * Hook to run once the widget is fully setup (which happens asynchronously).\n   *\n   * It is called during \"mutate time\". See {@link waitForMutateTime}.\n   *\n   * @defaultValue undefined\n   */\n  onSetup?: () => void;\n};\n\n/* ********************\n * Collapsible\n * ********************/\n\n/**\n * Configures the given element as a {@link Collapsible} widget.\n *\n * The Collapsible widget sets up the given element to be collapsed and\n * expanded upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link CollapsibleConfig.triggers | triggers}.\n *\n * **NOTE:** The Collapsible widget always wraps each trigger element in\n * another element in order to allow positioning the icon, if any.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-collapsible__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-reverse`: `\"true\"` or `\"false\"`\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-collapsible` class or `data-lisn-collapsible` attribute set on the\n *   element that holds the content of the collapsible\n * - `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     collapsible on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close\"` in order to have this trigger\n *     open the collapsible on hover but and override\n *     {@link CollapsibleConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-collapsible-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and the same `data-lisn-collapsible-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple collapsible with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-collapsible-trigger\">Expand</div>\n *   <div class=\"lisn-collapsible\">\n *     Some long content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a collapsible that is partially visible when collapsed, and\n * where the trigger is in a different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all other possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        data-lisn-collapsible=\"peek=50px\n *                               | horizontal=false\n *                               | reverse=false\n *                               | auto-close\n *                               | icon=right\n *                               | icon-closed=arrow-up\"\n *                               | icon-open=arrow-down\">\n *     <p>\n *       Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis\n *       viverra faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus\n *       aliquet turpis. Diam potenti egestas dolor auctor nostra vestibulum.\n *       Tempus auctor quis turpis; pulvinar ante ultrices. Netus morbi\n *       imperdiet volutpat litora tellus turpis a. Sociosqu interdum sodales\n *       sapien nulla aptent pellentesque praesent. Senectus magnis\n *       pellentesque; dis porta justo habitant.\n *     </p>\n *\n *     <p>\n *       Imperdiet placerat habitant tristique turpis habitasse ligula pretium\n *       vehicula. Mauris molestie lectus leo aliquam condimentum elit fermentum\n *       tempus nisi. Eget mi vestibulum quisque enim himenaeos. Odio nascetur\n *       vel congue vivamus eleifend ut nascetur. Ultrices quisque non dictumst\n *       risus libero varius tincidunt vel. Suscipit netus maecenas imperdiet\n *       elementum donec maximus suspendisse luctus. Eu velit semper urna sem\n *       ullamcorper nisl turpis hendrerit. Gravida commodo nisl malesuada nibh\n *       ultricies scelerisque hendrerit tempus vehicula. Risus eleifend eros\n *       aliquam turpis elit ridiculus est class.\n *     </p>\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-collapsible-content-id=\"readmore\"\n *        class=\"lisn-collapsible-trigger\">\n *     Read more\n *   </div>\n * </div>\n * ```\n */\nexport class Collapsible extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_COLLAPSIBLE,\n      (el, config) => new Collapsible(el, config),\n      collapsibleConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: CollapsibleConfig) {\n    const isHorizontal = config?.horizontal;\n    const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n\n    const onSetup = () => {\n      // The triggers here are wrappers around the original which will be\n      // replaced by the original on destroy, so no need to clean up this.\n      for (const [\n        trigger,\n        triggerConfig,\n      ] of this.getTriggerConfigs().entries()) {\n        insertCollapsibleIcon(trigger, triggerConfig, this, config);\n        setDataNow(trigger, MC.PREFIX_ORIENTATION, orientation);\n      }\n    };\n\n    super(element, {\n      name: WIDGET_NAME_COLLAPSIBLE,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? false,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: false,\n      triggers: config?.triggers,\n      wrapTriggers: true,\n      onSetup,\n    });\n\n    const root = this.getRoot();\n    const wrapper = MH.childrenOf(root)[0];\n\n    setData(root, MC.PREFIX_ORIENTATION, orientation);\n    setBooleanData(root, PREFIX_REVERSE, config?.reverse ?? false);\n\n    // -------------------- Transitions\n    disableInitialTransition(element, 100);\n    disableInitialTransition(root, 100);\n    disableInitialTransition(wrapper, 100);\n\n    let disableTransitionTimer: ReturnType<typeof setTimeout> | null = null;\n    const tempEnableTransition = async () => {\n      await removeClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n      await removeClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n\n      if (disableTransitionTimer) {\n        MH.clearTimer(disableTransitionTimer);\n      }\n\n      const transitionDuration = await getMaxTransitionDuration(root);\n      disableTransitionTimer = MH.setTimer(() => {\n        if (this.isOpen()) {\n          addClasses(root, MC.PREFIX_TRANSITION_DISABLE);\n          addClasses(wrapper, MC.PREFIX_TRANSITION_DISABLE);\n          disableTransitionTimer = null;\n        }\n      }, transitionDuration);\n    };\n\n    // Disable transitions except during open/close, so that resizing the\n    // window for example doesn't result in lagging width/height transition.\n    this.onOpen(tempEnableTransition);\n    this.onClose(tempEnableTransition);\n\n    // -------------------- Peek\n    const peek = config?.peek;\n    if (peek) {\n      (async () => {\n        let peekSize: string | null = null;\n        if (MH.isString(peek)) {\n          peekSize = peek;\n        } else {\n          peekSize = await getStyleProp(element, VAR_PEEK_SIZE);\n        }\n\n        addClasses(root, PREFIX_PEEK);\n        if (peekSize) {\n          setStyleProp(root, VAR_PEEK_SIZE, peekSize);\n        }\n      })();\n    }\n\n    // -------------------- Width in horizontal mode\n    if (isHorizontal) {\n      const updateWidth = async () => {\n        const width = await getComputedStyleProp(root, MC.S_WIDTH);\n        await setStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH, width);\n      };\n\n      MH.setTimer(updateWidth);\n\n      // Save its current width so that if it contains text, it does not\n      // \"collapse\" and end up super tall.\n      this.onClose(updateWidth);\n\n      this.onOpen(async () => {\n        // Update the content width before opening.\n        await updateWidth();\n\n        // Delete the fixed width property soon after opening to allow it to\n        // resize again while it's open.\n        waitForDelay(2000).then(() => {\n          if (this.isOpen()) {\n            delStyleProp(element, VAR_JS_COLLAPSIBLE_WIDTH);\n          }\n        });\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type CollapsibleConfig = {\n  /**\n   * The DOM ID of the collapsible. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the\n   * `data-lisn-collapsible-content-id` attribute used to link triggers to the\n   * collapsible.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the collapsible. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-collapsible-content-id`\n   *    attribute, then it must be a unique (for the current page) ID. In this\n   *    case, the trigger elements will be any element in the document that\n   *    has a `lisn-collapsible-trigger` class or\n   *    `data-lisn-collapsible-trigger` attribute and the same\n   *    `data-lisn-collapsible-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-collapsible-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-collapsible-trigger` class or `data-lisn-collapsible-trigger`\n   *    attribute and that do _not_ have a `data-lisn-collapsible-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Open sideways (to the right) instead of downwards (default).\n   *\n   * **IMPORTANT:** In horizontal mode the width of the content element should\n   * not be set (or be `auto`), but you can use `min-width` or `max-width` in\n   * your CSS if needed.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Open to the left if horizontal or upwards if vertical.\n   *\n   * @defaultValue false\n   */\n  reverse?: boolean;\n\n  /**\n   * If not false, part of the content will be visible when the collapsible is\n   * closed. The value can be any valid CSS width specification.\n   *\n   * If you set this to `true`, then the size of the peek window will be\n   * dictated by CSS. By default the size is 100px, but you can change this by\n   * setting `--lisn-peek-size` CSS property on the content element or any of\n   * its ancestors.\n   *\n   * Otherwise, if the value is a string, it must be a CSS length including units.\n   *\n   * @defaultValue false\n   */\n  peek?: boolean | string;\n\n  /**\n   * Automatically close the collapsible when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue false\n   */\n  autoClose?: boolean;\n\n  /**\n   * Add an icon to each trigger.\n   *\n   * If set to something other than `false`, then by default the icon in the\n   * closed state is a plus (+) and in the open state it's a minus (-), but\n   * this can be configured with {@link iconClosed} and {@link iconOpen}.\n   *\n   * @defaultValue false\n   */\n  icon?: false | Position;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the closed state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"plus\"\n   */\n  iconClosed?: \"plus\" | `arrow-${XYDirection}`;\n\n  /**\n   * Set the type of icon used on the trigger(s) in the open state.\n   *\n   * Note that {@link icon} must be set to something other than `false`.\n   *\n   * @defaultValue \"minus\";\n   */\n  iconOpen?: \"minus\" | \"x\" | `arrow-${XYDirection}`;\n};\n\n/* ********************\n * Popup\n * ********************/\n\n/**\n * Configures the given element as a {@link Popup} widget.\n *\n * The Popup widget sets up the given element to be hidden and open in a\n * floating popup upon activation. Activation can be done manually by calling\n * {@link open} or when clicking on any of the given\n * {@link PopupConfig.triggers | triggers}.\n *\n * **IMPORTANT:** The popup is positioned absolutely in its container and the\n * position is relative to the container. The container gets `width:\n * fit-content` by default but you can override this in your CSS. The popup\n * also gets a configurable `min-width` set.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-popup__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position (top, bottom, left, top-left, etc)\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-popup` class or `data-lisn-popup` attribute set on the element that\n *   holds the content of the popup\n * - `lisn-popup-trigger` class or `data-lisn-popup-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     popup on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the popup on hover but and override\n *     {@link PopupConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-popup-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and the\n *    same `data-lisn-popup-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-popup-trigger` class or\n *    `data-lisn-popup-trigger` attribute and that do _not_ have a\n *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple popup with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-popup-trigger\">Open</div>\n *   <div class=\"lisn-popup\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a popup that has a close button, and where the trigger is in a\n * different parent to the content.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\" class=\"lisn-popup-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-popup-content-id=\"popup\"\n *        data-lisn-popup=\"close-button | position=bottom | auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n * ```\n */\nexport class Popup extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_POPUP,\n      (el, config) => new Popup(el, config),\n      popupConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: PopupConfig) {\n    super(element, {\n      name: WIDGET_NAME_POPUP,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: false,\n      closeButton: config?.closeButton ?? false,\n      triggers: config?.triggers,\n    });\n\n    const root = this.getRoot();\n    const container = this.getContainer();\n\n    const position = config?.position ?? S_AUTO;\n    if (position !== S_AUTO) {\n      setData(root, MC.PREFIX_PLACE, position);\n    }\n\n    if (container && position === S_AUTO) {\n      // Automatic position\n      this.onOpen(async () => {\n        const [contentSize, containerView] = await MH.promiseAll([\n          SizeWatcher.reuse().fetchCurrentSize(element),\n          ViewWatcher.reuse().fetchCurrentView(container),\n        ]);\n\n        const placement = await fetchPopupPlacement(contentSize, containerView);\n        if (placement) {\n          await setData(root, MC.PREFIX_PLACE, placement);\n        }\n      });\n    }\n  }\n}\n\n/**\n * @interface\n */\nexport type PopupConfig = {\n  /**\n   * The DOM ID of the popup. Will result in the top-level root element that's\n   * created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-popup-content-id`\n   * attribute used to link triggers to the popup.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the popup. Will result in the\n   * top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-popup-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-popup-trigger` class or `data-lisn-popup-trigger` attribute and\n   *    the same `data-lisn-popup-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-popup-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-popup-trigger`\n   *    class or `data-lisn-popup-trigger` attribute and that do _not_ have a\n   *    `data-lisn-popup-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue false\n   */\n  closeButton?: boolean;\n\n  /**\n   * Specify the popup position _relative to its container_. Supported\n   * positions include `\"top\"`, `\"bottom\"`, `\"left\"`, `\"right\" `(which result\n   * on the popup being placed on top, bottom, etc, but center-aligned), or\n   * `\"top-left\"`, `\"left-top\"`, etc, as well as `\"auto\"`. If set to `\"auto\"`,\n   * then popup position will be based on the container position within the\n   * viewport at the time it's open.\n   *\n   * @defaultValue \"auto\"\n   */\n  position?: Position | `${Position}-${Position}` | \"auto\";\n\n  /**\n   * Automatically close the popup when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Modal\n * ********************/\n\n/**\n * Configures the given element as a {@link Modal} widget.\n *\n * The Modal widget sets up the given element to be hidden and open in a fixed\n * full-screen modal popup upon activation. Activation can be done manually by\n * calling {@link open} or when clicking on any of the given\n * {@link ModalConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-modal__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-modal` class or `data-lisn-modal` attribute set on the element that\n *   holds the content of the modal\n * - `lisn-modal-trigger` class or `data-lisn-modal-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     modal on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the modal on hover but and override\n *     {@link ModalConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-modal-content-id` attribute, then\n *    it must be a unique (for the current page) ID. In this case, the trigger\n *    elements will be any element in the document that has a\n *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and the\n *    same `data-lisn-modal-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n *    or if no such ancestor then the immediate parent of the content element,\n *    is searched for any elements that have a `lisn-modal-trigger` class or\n *    `data-lisn-modal-trigger` attribute and that do _not_ have a\n *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n *    the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple modal with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-modal-trigger\">Open</div>\n *   <div class=\"lisn-modal\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a modal that doesn't automatically close on click outside or\n * Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\"\n *        data-lisn-modal=\"auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-modal-content-id=\"modal\" class=\"lisn-modal-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Modal extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_MODAL,\n      (el, config) => new Modal(el, config),\n      modalConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: ModalConfig) {\n    super(element, {\n      name: WIDGET_NAME_MODAL,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: true,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n  }\n}\n\n/**\n * @interface\n */\nexport type ModalConfig = {\n  /**\n   * The DOM ID of the modal. Will result in the top-level root element that's\n   * created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-modal-content-id`\n   * attribute used to link triggers to the modal.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the modal. Will result in the\n   * top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-modal-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-modal-trigger` class or `data-lisn-modal-trigger` attribute and\n   *    the same `data-lisn-modal-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-modal-container` class,\n   *    or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a `lisn-modal-trigger`\n   *    class or `data-lisn-modal-trigger` attribute and that do _not_ have a\n   *    `data-lisn-modal-content-id` attribute, and that are _not_ children of\n   *    the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the modal when clicking outside it or pressing Escape.\n   * Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * If you set this to false, then you should ensure {@link closeButton} is\n   * enabled.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n/* ********************\n * Offcanvas\n * ********************/\n\n/**\n * Configures the given element as a {@link Offcanvas} widget.\n *\n * The Offcanvas widget sets up the given element to be hidden and open in a\n * fixed overlay (non full-screen) upon activation. Activation can be done\n * manually by calling {@link open} or when clicking on any of the given\n * {@link OffcanvasConfig.triggers | triggers}.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Openable}\n * widget, regardless of type, on a given element. Use {@link Openable.get} to\n * get an existing instance if any. If there is already an {@link Openable}\n * widget of any type on this element, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the root element that is created\n * by LISN and has a class `lisn-offcanvas__root`:\n * - `data-lisn-is-open`: `\"true\"` or `\"false\"`\n * - `data-lisn-place`: the actual position `\"top\"`, `\"bottom\"`, `\"left\"` or\n *   `\"right\"`\n *\n * The following dynamic attributes are set on each trigger:\n * - `data-lisn-opens-on-hover: `\"true\"` or `\"false\"`\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-offcanvas` class or `data-lisn-offcanvas` attribute set on the\n *   element that holds the content of the offcanvas\n * - `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n *   attribute set on elements that should act as the triggers.\n *   If using a data attribute, you can configure the trigger via the value\n *   with a similar syntax to the configuration of the openable widget. For\n *   example:\n *   - Set the attribute to `\"hover\"` in order to have this trigger open the\n *     offcanvas on hover _in addition to click_.\n *   - Set the attribute to `\"hover|auto-close=false\"` in order to have this\n *     trigger open the offcanvas on hover but and override\n *     {@link OffcanvasConfig.autoClose} with true.\n *\n * When using auto-widgets, the elements that will be used as triggers are\n * discovered in the following way:\n * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n *    then it must be a unique (for the current page) ID. In this case, the\n *    trigger elements will be any element in the document that has a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and the same `data-lisn-offcanvas-content-id` attribute.\n * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n *    class, or if no such ancestor then the immediate parent of the content\n *    element, is searched for any elements that have a\n *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger` attribute\n *    and that do _not_ have a `data-lisn-offcanvas-content-id`\n *    attribute, and that are _not_ children of the content element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple offcanvas with one trigger.\n *\n * ```html\n * <div>\n *   <div class=\"lisn-offcanvas-trigger\">Open</div>\n *   <div class=\"lisn-offcanvas\">\n *     Some content here...\n *   </div>\n * </div>\n * ```\n *\n * @example\n * This defines a offcanvas that doesn't automatically close on click outside\n * or Escape and, and that has several triggers in a different parent to the\n * content.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"auto-close=false\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n *\n * @example\n * As above, but with all possible configuration settings set explicitly.\n *\n * ```html\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\"\n *        data-lisn-offcanvas=\"position=top | auto-close=false | close-button=true\">\n *     Lorem ipsum odor amet, consectetuer adipiscing elit. Etiam duis viverra\n *     faucibus facilisis luctus. Nunc tellus turpis facilisi dapibus aliquet\n *     turpis. Diam potenti egestas dolor auctor nostra vestibulum. Tempus\n *     auctor quis turpis; pulvinar ante ultrices. Netus morbi imperdiet\n *     volutpat litora tellus turpis a. Sociosqu interdum sodales sapien nulla\n *     aptent pellentesque praesent. Senectus magnis pellentesque; dis porta\n *     justo habitant.\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Open\n *   </div>\n * </div>\n *\n * <div>\n *   <div data-lisn-offcanvas-content-id=\"offcanvas\" class=\"lisn-offcanvas-trigger\">\n *     Another trigger\n *   </div>\n * </div>\n * ```\n */\nexport class Offcanvas extends Openable {\n  static register() {\n    registerOpenable(\n      WIDGET_NAME_OFFCANVAS,\n      (el, config) => new Offcanvas(el, config),\n      offcanvasConfigValidator,\n    );\n  }\n\n  constructor(element: HTMLElement, config?: OffcanvasConfig) {\n    super(element, {\n      name: WIDGET_NAME_OFFCANVAS,\n      id: config?.id,\n      className: config?.className,\n      autoClose: config?.autoClose ?? true,\n      isModal: false,\n      isOffcanvas: true,\n      closeButton: config?.closeButton ?? true,\n      triggers: config?.triggers,\n    });\n\n    const position = config?.position || MC.S_RIGHT;\n    setData(this.getRoot(), MC.PREFIX_PLACE, position);\n  }\n}\n\n/**\n * @interface\n */\nexport type OffcanvasConfig = {\n  /**\n   * The DOM ID of the offcanvas. Will result in the top-level root element\n   * that's created by us getting this ID.\n   *\n   * Note, this does not replace or affect the `data-lisn-offcanvas-content-id`\n   * attribute used to link triggers to the offcanvas.\n   *\n   * @defaultValue undefined\n   */\n  id?: string;\n\n  /**\n   * Class name(s) or a list of class names of the offcanvas. Will result in\n   * the top-level root element that's created by us getting these classes.\n   *\n   * @defaultValue undefined\n   */\n  className?: string[] | string;\n\n  /**\n   * The elements that open the widget when clicked on. You can also pass a map\n   * whose keys are the elements and values are {@link OpenableTriggerConfig}\n   * objects.\n   *\n   * If not given, then the elements that will be used as triggers are\n   * discovered in the following way:\n   * 1. If the content element has a `data-lisn-offcanvas-content-id` attribute,\n   *    then it must be a unique (for the current page) ID. In this case, the\n   *    trigger elements will be any element in the document that has a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and the same `data-lisn-offcanvas-content-id` attribute.\n   * 2. Otherwise, the closest ancestor that has a `lisn-offcanvas-container`\n   *    class, or if no such ancestor then the immediate parent of the content\n   *    element, is searched for any elements that have a\n   *    `lisn-offcanvas-trigger` class or `data-lisn-offcanvas-trigger`\n   *    attribute and that do _not_ have a `data-lisn-offcanvas-content-id`\n   *    attribute, and that are _not_ children of the content element.\n   *\n   * @defaultValue undefined\n   */\n  triggers?: Element[] | Map<Element, OpenableTriggerConfig | null>;\n\n  /**\n   * Specify the offcanvas position. Supported positions are top, bottom, left,\n   * right.\n   *\n   * @defaultValue \"right\"\n   */\n  position?: Position;\n\n  /**\n   * Add a close button at the top right.\n   *\n   * @defaultValue true\n   */\n  closeButton?: boolean;\n\n  /**\n   * Automatically close the offcanvas when clicking outside it or pressing\n   * Escape. Furthermore, if any trigger opens the widget on\n   * {@link OpenableTriggerConfig.hover}, the widget will be closed when the\n   * pointer leaves both the trigger and the root.\n   *\n   * @defaultValue true\n   */\n  autoClose?: boolean;\n};\n\n// ------------------------------\n\ntype ElementsCollection = {\n  content: HTMLElement;\n  root: HTMLElement;\n  container: HTMLElement | null;\n  outerWrapper: HTMLElement;\n  triggers: Map<Element, OpenableTriggerConfig>;\n};\n\nconst instances = MH.newWeakMap<Element, Openable>();\n\nconst WIDGET_NAME_COLLAPSIBLE = \"collapsible\";\nconst WIDGET_NAME_POPUP = \"popup\";\nconst WIDGET_NAME_MODAL = \"modal\";\nconst WIDGET_NAME_OFFCANVAS = \"offcanvas\";\n\nconst PREFIX_CLOSE_BTN = MH.prefixName(\"close-button\");\nconst PREFIX_IS_OPEN = MH.prefixName(\"is-open\");\nconst PREFIX_REVERSE = MH.prefixName(MC.S_REVERSE);\nconst PREFIX_PEEK = MH.prefixName(\"peek\");\nconst PREFIX_OPENS_ON_HOVER = MH.prefixName(\"opens-on-hover\");\nconst PREFIX_LINE = MH.prefixName(\"line\");\nconst PREFIX_ICON_POSITION = MH.prefixName(\"icon-position\");\nconst PREFIX_TRIGGER_ICON = MH.prefixName(\"trigger-icon\");\nconst PREFIX_ICON_WRAPPER = MH.prefixName(\"icon-wrapper\");\nconst S_AUTO = \"auto\";\nconst S_ARIA_EXPANDED = MC.ARIA_PREFIX + \"expanded\";\nconst S_ARIA_MODAL = MC.ARIA_PREFIX + \"modal\";\nconst VAR_PEEK_SIZE = MH.prefixCssVar(\"peek-size\");\nconst VAR_JS_COLLAPSIBLE_WIDTH = MH.prefixCssJsVar(\"collapsible-width\");\nconst MIN_CLICK_TIME_AFTER_HOVER_OPEN = 1000;\nconst S_ARROW_UP =\n  `${MC.S_ARROW}-${MC.S_UP}` as `${typeof MC.S_ARROW}-${typeof MC.S_UP}`;\nconst S_ARROW_DOWN =\n  `${MC.S_ARROW}-${MC.S_DOWN}` as `${typeof MC.S_ARROW}-${typeof MC.S_DOWN}`;\nconst S_ARROW_LEFT =\n  `${MC.S_ARROW}-${MC.S_LEFT}` as `${typeof MC.S_ARROW}-${typeof MC.S_LEFT}`;\nconst S_ARROW_RIGHT =\n  `${MC.S_ARROW}-${MC.S_RIGHT}` as `${typeof MC.S_ARROW}-${typeof MC.S_RIGHT}`;\n\nconst ARROW_TYPES = [\n  S_ARROW_UP,\n  S_ARROW_DOWN,\n  S_ARROW_LEFT,\n  S_ARROW_RIGHT,\n] as const;\n\nconst ICON_CLOSED_TYPES = [\"plus\", ...ARROW_TYPES] as const;\nconst ICON_OPEN_TYPES = [\"minus\", \"x\", ...ARROW_TYPES] as const;\ntype IconCloseType = (typeof ICON_CLOSED_TYPES)[number];\ntype IconOpenType = (typeof ICON_OPEN_TYPES)[number];\n\nconst isValidIconClosed = (value: string): value is IconCloseType =>\n  MH.includes(ICON_CLOSED_TYPES, value);\n\nconst isValidIconOpen = (value: string): value is IconOpenType =>\n  MH.includes(ICON_OPEN_TYPES, value);\n\nconst triggerConfigValidator: WidgetConfigValidatorObject<OpenableTriggerConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      value && toBoolean(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n    hover: validateBoolean,\n  };\n\nconst collapsibleConfigValidator: WidgetConfigValidatorObject<CollapsibleConfig> =\n  {\n    id: validateString,\n    className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n    horizontal: validateBoolean,\n    reverse: validateBoolean,\n    peek: validateBooleanOrString,\n    autoClose: validateBoolean,\n    icon: (key, value) =>\n      toBoolean(value) === false\n        ? false\n        : validateString(key, value, isValidPosition),\n    iconClosed: (key, value) => validateString(key, value, isValidIconClosed),\n    iconOpen: (key, value) => validateString(key, value, isValidIconOpen),\n  };\n\nconst popupConfigValidator: WidgetConfigValidatorObject<PopupConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) =>\n    validateString(\n      key,\n      value,\n      (v) => v === S_AUTO || isValidPosition(v) || isValidTwoFoldPosition(v),\n    ),\n  autoClose: validateBoolean,\n};\n\nconst modalConfigValidator: WidgetConfigValidatorObject<ModalConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  autoClose: validateBoolean,\n};\n\nconst offcanvasConfigValidator: WidgetConfigValidatorObject<OffcanvasConfig> = {\n  id: validateString,\n  className: (key, value) => validateStrList(key, toArrayIfSingle(value)),\n  closeButton: validateBoolean,\n  position: (key, value) => validateString(key, value, isValidPosition),\n  autoClose: validateBoolean,\n};\n\nconst getPrefixedNames = (name: string) => {\n  const pref = MH.prefixName(name);\n  return {\n    _root: `${pref}__root`,\n    _overlay: `${pref}__overlay`, // only used for modal/offcanvas\n    _innerWrapper: `${pref}__inner-wrapper`,\n    _outerWrapper: `${pref}__outer-wrapper`,\n    _content: `${pref}__content`,\n    _container: `${pref}__container`,\n    _trigger: `${pref}__trigger`,\n    // Use different classes for styling to the ones used for auto-discovering\n    // elements, so that re-creating existing widgets can correctly find the\n    // elements to be used by the new widget synchronously before the current\n    // one is destroyed.\n    _containerForSelect: `${pref}-container`,\n    _triggerForSelect: `${pref}-trigger`,\n    _contentId: `${pref}-content-id`,\n  };\n};\n\nconst findContainer = (content: Element, cls: string) => {\n  const currWidget = instances.get(content);\n  // If there's an existing widget that we're about to destroy, the content\n  // element will be wrapped in several elements and won't be restored until\n  // the next mutate time. In that case, to correctly determine the container\n  // element, use the current widget's root element, which is located in the\n  // content element's original place.\n  let childRef = currWidget?.getRoot() || content;\n  if (!MH.parentOf(childRef)) {\n    // The current widget is not yet initialized (i.e. we are re-creating it\n    // immediately after it was constructed)\n    childRef = content;\n  }\n\n  // Find the content container\n  let container: HTMLElement | null = childRef.closest(`.${cls}`);\n  if (!container) {\n    container = MH.parentOf(childRef);\n  }\n\n  return container;\n};\n\nconst findTriggers = (\n  content: Element,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const container = findContainer(content, prefixedNames._containerForSelect);\n  // jsdom does not like the below selector when suffixed by [data-*] or :not()...\n  // const triggerSelector = `:is(.${prefixedNames._triggerForSelect},[data-${prefixedNames._triggerForSelect}])`;\n  // So use this:\n  const getTriggerSelector = (suffix: string) =>\n    `.${prefixedNames._triggerForSelect}${suffix},` +\n    `[data-${prefixedNames._triggerForSelect}]${suffix}`;\n\n  const contentId = getData(content, prefixedNames._contentId);\n  let triggers: Element[] = [];\n\n  if (contentId) {\n    triggers = [\n      ...MH.docQuerySelectorAll(\n        getTriggerSelector(`[data-${prefixedNames._contentId}=\"${contentId}\"]`),\n      ),\n    ];\n  } else if (container) {\n    triggers = [\n      ...MH.arrayFrom(\n        MH.querySelectorAll(\n          container,\n          getTriggerSelector(`:not([data-${prefixedNames._contentId}])`),\n        ),\n      ).filter((t) => !content.contains(t)),\n    ];\n  }\n\n  return triggers;\n};\n\nconst getTriggersFrom = (\n  content: Element,\n  inputTriggers:\n    | Element[]\n    | Map<Element, OpenableTriggerConfig | null>\n    | undefined,\n  wrapTriggers: boolean,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const triggerMap = MH.newMap<Element, OpenableTriggerConfig>();\n\n  inputTriggers = inputTriggers || findTriggers(content, prefixedNames);\n\n  const addTrigger = (\n    trigger: Element,\n    triggerConfig: OpenableTriggerConfig,\n  ) => {\n    if (wrapTriggers) {\n      const wrapper = MH.createElement(\n        isInlineTag(MH.tagName(trigger)) ? \"span\" : \"div\",\n      );\n      wrapElement(trigger, { wrapper, ignoreMove: true }); // no need to await\n      trigger = wrapper;\n    }\n\n    triggerMap.set(trigger, triggerConfig);\n  };\n\n  if (MH.isArray(inputTriggers)) {\n    for (const trigger of inputTriggers) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(\n          getData(trigger, prefixedNames._triggerForSelect),\n          triggerConfigValidator,\n        ),\n      );\n    }\n  } else if (MH.isInstanceOf(inputTriggers, Map)) {\n    for (const [trigger, triggerConfig] of inputTriggers.entries()) {\n      addTrigger(\n        trigger,\n        getWidgetConfig(triggerConfig, triggerConfigValidator),\n      );\n    }\n  }\n\n  return triggerMap;\n};\n\nconst setupElements = (\n  widget: Openable,\n  content: HTMLElement,\n  properties: OpenableProperties,\n): ElementsCollection => {\n  const prefixedNames = getPrefixedNames(properties.name);\n  const container = findContainer(content, prefixedNames._containerForSelect);\n\n  const wrapTriggers = properties.wrapTriggers ?? false;\n  const triggers = getTriggersFrom(\n    content,\n    properties.triggers,\n    wrapTriggers,\n    prefixedNames,\n  );\n\n  // Create two wrappers\n  const innerWrapper = MH.createElement(\"div\");\n  addClasses(innerWrapper, prefixedNames._innerWrapper);\n\n  const outerWrapper = wrapElementNow(innerWrapper);\n\n  // Setup the root element.\n  // For off-canvas types we need another wrapper to serve as the root and we\n  // need a placeholder element to save the content's original position so it\n  // can be restored on destroy.\n  // Otherwise use outerWrapper for root and insert the root where the content\n  // was.\n  let root: HTMLElement;\n  let placeholder: HTMLElement;\n  if (properties.isOffcanvas) {\n    addClasses(outerWrapper, prefixedNames._outerWrapper);\n    root = wrapElementNow(outerWrapper);\n    placeholder = MH.createElement(\"div\");\n\n    const overlay = MH.createElement(\"div\");\n    addClasses(overlay, prefixedNames._overlay);\n    moveElement(overlay, { to: root });\n  } else {\n    // Otherwise use the outer wrapper as the root\n    root = placeholder = outerWrapper;\n  }\n\n  if (properties.id) {\n    root.id = properties.id;\n  }\n\n  if (properties.className) {\n    addClassesNow(root, ...toArrayIfSingle(properties.className));\n  }\n\n  unsetBooleanData(root, PREFIX_IS_OPEN);\n  const domID = getOrAssignID(root, properties.name);\n\n  if (properties.isModal) {\n    MH.setAttr(root, MC.S_ROLE, \"dialog\");\n    MH.setAttr(root, S_ARIA_MODAL);\n  }\n\n  addClasses(root, prefixedNames._root);\n  disableInitialTransition(root);\n\n  // Add a close button?\n  if (properties.closeButton) {\n    const closeBtn = MH.createButton(\"Close\");\n    addClasses(closeBtn, PREFIX_CLOSE_BTN);\n\n    // If autoClose is true, it will be closed on click anyway, because the\n    // close button is outside the content.\n    addEventListenerTo(closeBtn, MC.S_CLICK, () => {\n      widget.close();\n    });\n\n    moveElement(closeBtn, { to: properties.isOffcanvas ? root : innerWrapper });\n  }\n\n  // Transfer the relevant classes/data attrs from content to root element, so\n  // that our CSS can work without :has.\n  // This won't cause forced layout since the root is not yet attached to the\n  // DOM.\n  for (const cls of [\n    settings.lightThemeClassName,\n    settings.darkThemeClassName,\n  ]) {\n    if (hasClass(content, cls)) {\n      addClasses(root, cls);\n    }\n  }\n\n  const elements = {\n    content,\n    root,\n    container,\n    outerWrapper,\n    triggers,\n  };\n\n  // -------------------- Close / destroy hooks\n  widget.onClose(async () => {\n    for (const trigger of triggers.keys()) {\n      delData(trigger, PREFIX_OPENS_ON_HOVER);\n      MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n      await unsetBooleanData(trigger, PREFIX_IS_OPEN);\n    }\n  });\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n\n    replaceElementNow(placeholder, content, { ignoreMove: true });\n    moveElementNow(root); // remove\n    removeClassesNow(content, prefixedNames._content);\n\n    if (container) {\n      removeClassesNow(container, prefixedNames._container);\n    }\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      MH.delAttr(trigger, MC.S_ARIA_CONTROLS);\n      MH.delAttr(trigger, S_ARIA_EXPANDED);\n\n      delDataNow(trigger, PREFIX_OPENS_ON_HOVER);\n      delDataNow(trigger, PREFIX_IS_OPEN);\n\n      removeClassesNow(\n        trigger,\n        prefixedNames._trigger,\n        ...(triggerConfig?.className || []),\n      );\n\n      if (trigger.id === triggerConfig?.id) {\n        trigger.id = \"\";\n      }\n\n      if (wrapTriggers) {\n        replaceElementNow(trigger, MH.childrenOf(trigger)[0], {\n          ignoreMove: true,\n        });\n      }\n    }\n\n    triggers.clear();\n\n    for (const el of [content, ...triggers.keys()]) {\n      if (instances.get(el) === widget) {\n        MH.deleteKey(instances, el);\n      }\n    }\n  });\n\n  // -------------------- SETUP\n  // Save the elements so we can lookup the instance\n  const currWidget = instances.get(content);\n  for (const el of [content, ...triggers.keys()]) {\n    instances.set(el, widget);\n  }\n\n  // Wait for the DOMWatcher to be active, which may not be before interactive.\n  waitForInteractive()\n    .then(currWidget?.destroy)\n    .then(waitForMutateTime)\n    .then(() => {\n      if (widget.isDestroyed()) {\n        return;\n      }\n\n      addClassesNow(content, prefixedNames._content);\n\n      if (container) {\n        addClassesNow(container, prefixedNames._container);\n      }\n\n      if (properties.isOffcanvas) {\n        moveElementNow(root, {\n          to: MH.getBody(),\n          ignoreMove: true,\n        });\n      }\n\n      // Move the placeholder element to before the content and then move\n      // content into inner wrapper.\n      moveElementNow(placeholder, {\n        // for not-offcanvas it's also the root\n        to: content,\n        position: \"before\",\n        ignoreMove: true,\n      });\n\n      moveElementNow(content, { to: innerWrapper, ignoreMove: true });\n\n      // Setup the triggers\n      for (const [trigger, triggerConfig] of triggers.entries()) {\n        MH.setAttr(trigger, MC.S_ARIA_CONTROLS, domID);\n        MH.unsetAttr(trigger, S_ARIA_EXPANDED);\n\n        setBooleanDataNow(\n          trigger,\n          PREFIX_OPENS_ON_HOVER,\n          triggerConfig[MC.S_HOVER],\n        );\n        unsetBooleanDataNow(trigger, PREFIX_IS_OPEN);\n\n        addClassesNow(\n          trigger,\n          prefixedNames._trigger,\n          ...(triggerConfig?.className || []),\n        );\n\n        if (triggerConfig?.id) {\n          trigger.id = triggerConfig.id;\n        }\n      }\n\n      setupListeners(widget, elements, properties, prefixedNames);\n\n      if (properties.onSetup) {\n        properties.onSetup();\n      }\n    });\n\n  return elements;\n};\n\nconst setupListeners = (\n  widget: Openable,\n  elements: ElementsCollection,\n  properties: OpenableProperties,\n  prefixedNames: ReturnType<typeof getPrefixedNames>,\n) => {\n  const { content, root, triggers } = elements;\n  const doc = MH.getDoc();\n\n  let hoverTimeOpened = 0;\n  let isPointerOver = false;\n  let activeTrigger: Element | null = null;\n\n  // ----------\n\n  const isTrigger = (element: Element) =>\n    MH.includes(\n      MH.arrayFrom(triggers.keys()),\n      element.closest(getDefaultWidgetSelector(prefixedNames._trigger)),\n    );\n\n  const shouldPreventDefault = (trigger: Element) =>\n    triggers.get(trigger)?.preventDefault ?? true;\n\n  const usesHover = (trigger: Element) => triggers.get(trigger)?.hover;\n\n  const usesAutoClose = (trigger: Element | null) =>\n    (trigger ? triggers.get(trigger)?.autoClose : null) ?? properties.autoClose;\n\n  // ----------\n\n  const toggleTrigger = (event: Event, openIt?: boolean) => {\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger)) {\n      if (shouldPreventDefault(trigger)) {\n        MH.preventDefault(event);\n      }\n\n      // If a click was fired shortly after opening on hover, ignore\n      if (\n        openIt !== false && // not explicitly asked to close\n        widget.isOpen() &&\n        MH.timeSince(hoverTimeOpened) < MIN_CLICK_TIME_AFTER_HOVER_OPEN\n      ) {\n        return;\n      }\n\n      if (openIt ?? !widget.isOpen()) {\n        // open it\n        activeTrigger = trigger;\n        MH.setAttr(trigger, S_ARIA_EXPANDED); // will be unset on close\n        setBooleanData(trigger, PREFIX_IS_OPEN); // will be unset on close\n\n        widget.open(); // no need to await\n\n        if (usesAutoClose(trigger)) {\n          if (usesHover(trigger)) {\n            addEventListenerTo(root, MC.S_POINTERENTER, setIsPointerOver);\n            addEventListenerTo(root, MC.S_POINTERLEAVE, pointerLeft);\n          }\n\n          // auto-close listeners setup by the onOpen handler below\n        }\n      } else {\n        widget.close(); // out onClose handler below will remove listeners\n      }\n    }\n  };\n\n  // ----------\n\n  const setIsPointerOver = () => {\n    isPointerOver = true;\n  };\n\n  // ----------\n\n  const unsetIsPointerOver = (event: Event) => {\n    // Keep it set to true if this is a touch pointer type; otherwise unset\n    isPointerOver = isPointerOver && MH.isTouchPointerEvent(event);\n  };\n\n  // ----------\n\n  const pointerEntered = (event: Event) => {\n    setIsPointerOver();\n    if (!widget.isOpen()) {\n      hoverTimeOpened = MH.timeNow();\n      toggleTrigger(event, true);\n    }\n  };\n\n  // ----------\n\n  const pointerLeft = (event: Event) => {\n    unsetIsPointerOver(event);\n    const trigger = MH.currentTargetOf(event);\n    if (MH.isElement(trigger) && usesAutoClose(trigger)) {\n      MH.setTimer(\n        () => {\n          if (!isPointerOver) {\n            widget.close();\n          }\n        },\n        // use a delay that allows the mouse to move from trigger to content\n        // without closing it\n        // TODO make this user-configurable\n        properties.isOffcanvas ? 300 : 50,\n      );\n    }\n  };\n\n  // ----------\n\n  const closeIfEscape = (event: Event) => {\n    if ((event as KeyboardEvent).key === \"Escape\") {\n      widget.close(); // no need to await\n    }\n  };\n\n  // ----------\n\n  const closeIfClickOutside = (event: Event) => {\n    const target = MH.targetOf(event);\n    if (\n      target === doc ||\n      (MH.isElement(target) &&\n        !content.contains(target) && // outside content\n        !isTrigger(target)) // handled by pointer watcher\n    ) {\n      widget.close();\n    }\n  };\n\n  // ----------\n\n  const maybeSetupAutoCloseListeners = (\n    trigger: Element | null,\n    remove: boolean,\n  ) => {\n    if (usesAutoClose(trigger)) {\n      const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n      addOrRemove(doc, \"keyup\", closeIfEscape);\n\n      // Add a short delay so that we don't catch the bubbling of the click event\n      // that opened the widget.\n      MH.setTimer(() => addOrRemove(doc, MC.S_CLICK, closeIfClickOutside), 100);\n\n      if (trigger && usesHover(trigger)) {\n        addOrRemove(trigger, MC.S_POINTERLEAVE, pointerLeft);\n      }\n    }\n  };\n\n  // ----------\n\n  const setupOrCleanup = (remove: boolean) => {\n    const addOrRemove = remove ? removeEventListenerFrom : addEventListenerTo;\n\n    for (const [trigger, triggerConfig] of triggers.entries()) {\n      // Always setup click listeners\n      addOrRemove(trigger, MC.S_CLICK, toggleTrigger);\n\n      if (triggerConfig[MC.S_HOVER]) {\n        addOrRemove(trigger, MC.S_POINTERENTER, pointerEntered);\n      }\n    }\n  };\n\n  // ----------\n\n  setupOrCleanup(false);\n\n  widget.onOpen(() => {\n    maybeSetupAutoCloseListeners(activeTrigger, false); // setup listeners if relevant\n  });\n\n  widget.onClose(() => {\n    hoverTimeOpened = 0;\n    isPointerOver = false;\n\n    removeEventListenerFrom(root, MC.S_POINTERENTER, setIsPointerOver);\n    removeEventListenerFrom(root, MC.S_POINTERLEAVE, pointerLeft);\n\n    maybeSetupAutoCloseListeners(activeTrigger, true); // remove listeners if any\n    activeTrigger = null;\n  });\n\n  widget.onDestroy(() => {\n    setupOrCleanup(true); // remove\n  });\n};\n\n// COLLAPSIBLE ------------------------------\n\nconst insertCollapsibleIcon = (\n  trigger: Element,\n  triggerConfig: OpenableTriggerConfig,\n  widget: Collapsible,\n  widgetConfig: CollapsibleConfig | undefined,\n) => {\n  const iconPosition = triggerConfig.icon ?? widgetConfig?.icon;\n  const iconClosed =\n    triggerConfig.iconClosed ?? widgetConfig?.iconClosed ?? \"plus\";\n  const iconOpen = triggerConfig.iconOpen ?? widgetConfig?.iconOpen ?? \"minus\";\n\n  if (iconPosition) {\n    addClasses(trigger, PREFIX_ICON_WRAPPER);\n    setData(trigger, PREFIX_ICON_POSITION, iconPosition);\n\n    const icon = MH.createElement(\"span\");\n    setDataNow(icon, PREFIX_TRIGGER_ICON, iconClosed);\n\n    for (let l = 0; l < 2; l++) {\n      const line = MH.createElement(\"span\");\n      addClassesNow(line, PREFIX_LINE);\n      moveElementNow(line, { to: icon });\n    }\n\n    moveElement(icon, { to: trigger, ignoreMove: true });\n\n    widget.onOpen(() => {\n      if (getBooleanData(trigger, PREFIX_IS_OPEN)) {\n        setData(icon, PREFIX_TRIGGER_ICON, iconOpen);\n      }\n    });\n\n    widget.onClose(() => {\n      setData(icon, PREFIX_TRIGGER_ICON, iconClosed);\n    });\n  }\n};\n\n// POPUP ------------------------------\n\nconst fetchPopupPlacement = async (\n  contentSize: SizeData,\n  containerView: ViewData,\n) => {\n  const containerPosition = containerView.relative;\n  const containerTop = containerPosition[MC.S_TOP];\n  const containerBottom = containerPosition[MC.S_BOTTOM];\n  const containerLeft = containerPosition[MC.S_LEFT];\n  const containerRight = containerPosition[MC.S_RIGHT];\n  const containerHMiddle = containerPosition.hMiddle;\n  const containerVMiddle = containerPosition.vMiddle;\n  const vpSize = await fetchViewportSize();\n  const popupWidth = contentSize.border[MC.S_WIDTH] / vpSize[MC.S_WIDTH];\n  const popupHeight = contentSize.border[MC.S_HEIGHT] / vpSize[MC.S_HEIGHT];\n\n  // - Find the maximum of these quantities:\n  //   - containerTop - popupHeight:\n  //     the space on top if placed on top-(left|right|)\n  //   - 1 - (containerBottom + popupHeight):\n  //     the space on bottom be if placed on bottom-(left|right|)\n  //   - containerLeft - popupWidth:\n  //     the space on left if placed on left-(top|bottom|)\n  //   - 1 - (containerRight + popupWidth):\n  //     the space on right if placed on right-(top|bottom|)\n  //\n  // This determines the main placement: top|bottom|left|right\n\n  // Then to determine secondary alignment:\n  // - For top/bottom placement, determine horizontal alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerLeft + popupWidth):\n  //       the space on right if left-aligned\n  //     - containerRight - popupWidth:\n  //       the space on left if right-aligned\n  //     - min(\n  //           containerHMiddle - popupWidth / 2,\n  //           1 - (containerHMiddle + popupWidth / 2),\n  //       ):\n  //       the minimum of the space on either left or right if center-aligned\n  //\n  // - For left/right placement, determine vertical alignment:\n  //   - Find the maximum of these quantities:\n  //     - 1 - (containerTop + popupHeight):\n  //       the space on bottom if top-aligned\n  //     - containerBottom - popupHeight:\n  //       the space on top if bottom-aligned\n  //     - min(\n  //           containerVMiddle - popupHeight / 2,\n  //           1 - (containerVMiddle + popupHeight / 2),\n  //       ):\n  //       the minimum of the space on either top or bottom if center-aligned\n\n  const placementVars = {\n    top: containerTop - popupHeight,\n    bottom: 1 - (containerBottom + popupHeight),\n    left: containerLeft - popupWidth,\n    right: 1 - (containerRight + popupWidth),\n  };\n\n  const placement = keyWithMaxVal(placementVars);\n  if (placement === undefined) {\n    // container must be out-view and so left/right are NaN\n    return;\n  }\n  let finalPlacement = placement;\n\n  let alignmentVars;\n  switch (placement) {\n    case MC.S_TOP:\n    case MC.S_BOTTOM:\n      alignmentVars = {\n        left: 1 - (containerLeft + popupWidth),\n        right: containerRight - popupWidth,\n        middle: MH.min(\n          containerHMiddle - popupWidth / 2,\n          1 - (containerHMiddle + popupWidth / 2),\n        ),\n      };\n      break;\n\n    case MC.S_LEFT:\n    case MC.S_RIGHT:\n      alignmentVars = {\n        top: 1 - (containerTop + popupHeight),\n        bottom: containerBottom - popupHeight,\n        middle: MH.min(\n          containerVMiddle - popupHeight / 2,\n          1 - (containerVMiddle + popupHeight / 2),\n        ),\n      };\n      break;\n\n    default:\n      return;\n  }\n\n  const alignment = keyWithMaxVal(alignmentVars);\n  if (alignment !== \"middle\") {\n    finalPlacement += \"-\" + alignment;\n  }\n\n  return finalPlacement;\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling openables\n * {@link Open} opens or closes the {@link Openable} widget setup for the given\n * element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\n\nimport { Openable } from \"@lisn/widgets/openable\";\nimport { fetchUniqueWidget } from \"@lisn/widgets/widget\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Opens or closes the {@link Openable} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"open\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-modal\" data-lisn-on-view=\"@open +reference=top:50%\"></div>\n * ```\n *\n * @category Controlling openables\n */\nexport class Open implements Action {\n  /**\n   * Opens the Openable widget setup for the element.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Closes the Openable widget setup for the element.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Toggles the Openable widget setup for the element.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"open\", (element) => new Open(element));\n  }\n\n  constructor(element: Element) {\n    const open = (widget: Openable | null) => widget?.open();\n    const close = (widget: Openable | null) => widget?.close();\n    const toggle = (widget: Openable | null) => widget?.toggle();\n\n    const widgetPromise = fetchUniqueWidget(\"openable\", element, Openable);\n\n    this.do = () => widgetPromise.then(open);\n    this.undo = () => widgetPromise.then(close);\n    this[MC.S_TOGGLE] = () => widgetPromise.then(toggle);\n  }\n}\n","/**\n * @module Widgets\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  Direction,\n  GestureDevice,\n  CommaSeparatedStr,\n} from \"@lisn/globals/types\";\n\nimport {\n  disableInitialTransition,\n  addClasses,\n  removeClassesNow,\n  getData,\n  setData,\n  setBooleanData,\n  delDataNow,\n  getComputedStyleProp,\n  setStyleProp,\n  delStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport {\n  waitForMeasureTime,\n  waitForMutateTime,\n} from \"@lisn/utils/dom-optimize\";\nimport { getVisibleContentChildren } from \"@lisn/utils/dom-query\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\nimport { isValidInputDevice } from \"@lisn/utils/gesture\";\nimport { toInt } from \"@lisn/utils/math\";\nimport { toBoolean } from \"@lisn/utils/misc\";\nimport { getClosestScrollable } from \"@lisn/utils/scroll\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateNumber,\n  validateString,\n  validateBoolean,\n} from \"@lisn/utils/validation\";\n\nimport { wrapCallback } from \"@lisn/modules/callback\";\n\nimport {\n  GestureWatcher,\n  OnGestureOptions,\n  GestureData,\n} from \"@lisn/watchers/gesture-watcher\";\nimport { ScrollWatcher, ScrollOptions } from \"@lisn/watchers/scroll-watcher\";\nimport { SizeWatcher, SizeData } from \"@lisn/watchers/size-watcher\";\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  Widget,\n  WidgetConfigValidatorObject,\n  WidgetCallback,\n  WidgetHandler,\n  registerWidget,\n  getDefaultWidgetSelector,\n} from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * Configures the given element as a {@link Pager} widget.\n *\n * The Pager widget sets up the elements that make up its pages to be overlayed\n * on top of each other with only one of them visible at a time. When a user\n * performs a scroll-like gesture (see {@link GestureWatcher}), the pages are\n * flicked through: gestures, whose direction is down (or left) result in the\n * next page being shown, otherwise the previous.\n *\n * The widget should have more than one page.\n *\n * Optionally, the widget can have a set of \"switch\" elements and a set of\n * \"toggle\" elements which correspond one-to-one to each page. Switches go to\n * the given page and toggles toggle the enabled/disabled state of the page.\n *\n * **IMPORTANT:** Unless the {@link PagerConfig.style} is set to \"carousel\", the\n * page elements will be positioned absolutely, and therefore the pager likely\n * needs to have an explicit height. If you enable\n * {@link PagerConfig.fullscreen}, then the element will get `height: 100vh`\n * set. Otherwise, you need to set its height in your CSS.\n *\n * **IMPORTANT:** You should not instantiate more than one {@link Pager}\n * widget on a given element. Use {@link Pager.get} to get an existing\n * instance if any. If there is already a widget instance, it will be destroyed!\n *\n * -----\n *\n * You can use the following dynamic attributes or CSS properties in your\n * stylesheet:\n *\n * The following dynamic attributes are set on the pager element:\n * - `data-lisn-orientation`: `\"horizontal\"` or `\"vertical\"`\n * - `data-lisn-use-parallax`: `\"true\"` or `\"false\"`\n * - `data-lisn-total-pages`: the number of pages\n * - `data-lisn-visible-pages`: **for carousel only** the number of visible pages;\n *   can be fractional if {@link PagerConfig.peek} is enabled\n * - `data-lisn-current-page`: the current page number\n * - `data-lisn-current-page-is-last`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-first-enabled`: `\"true\"` or `\"false\"`\n * - `data-lisn-current-page-is-last-enabled`: `\"true\"` or `\"false\"`\n *\n * The following dynamic CSS properties are also set on the pager element's style:\n * - `--lisn-js--total-pages`: the number of pages\n * - `--lisn-js--visible-pages`: **for carousel only** the number of visible pages\n * - `--lisn-js--current-page`: the current page number\n *\n * The following dynamic attributes are set on each page, toggle or switch element:\n * - `data-lisn-page-state`: `\"current\"`, `\"next\"`, `\"covered\"` or `\"disabled\"`\n * - `data-lisn-page-number`: the corresponding page's number\n *\n * The following analogous dynamic CSS properties are also set on each page,\n * toggle or switch element's style:\n * - `--lisn-js--page-number`: the corresponding page's number\n *\n * -----\n *\n * To use with auto-widgets (HTML API) (see\n * {@link Settings.settings.autoWidgets | settings.autoWidgets}), the following\n * CSS classes or data attributes are recognized:\n * - `lisn-pager` class or `data-lisn-pager` attribute set on the container\n *   element that constitutes the pager\n * - `lisn-pager-page` class or `data-lisn-pager-page` attribute set on\n *   elements that should act as the pages.\n * - `lisn-pager-toggle` class or `data-lisn-pager-toggle` attribute set on\n *   elements that should act as the toggles.\n * - `lisn-pager-switch` class or `data-lisn-pager-switch` attribute set on\n *   elements that should act as the switches.\n *\n * When using auto-widgets, the elements that will be used as pages are\n * discovered in the following way:\n * 1. The top-level element that constitutes the widget is searched for any\n *    elements that contain the `lisn-pager-page` class or\n *    `data-lisn-pager-page` attribute. They do not have to be immediate\n *    children of the root element, but they **should** all be siblings.\n * 2. If there are no such elements, all of the immediate children of the\n *    widget element except any `script` or `style` elements are taken as the\n *    pages.\n *\n * The toggles and switches are descendants of the top-level element that\n * constitutes the widget, that contain the\n * `lisn-pager-toggle`/`lisn-pager-switch` class or `data-lisn-pager-toggle`/\n * `data-lisn-pager-switch` attribute. They do not have to be immediate\n * children of the root element.\n *\n * See below examples for what values you can use set for the data attributes\n * in order to modify the configuration of the automatically created widget.\n *\n * @example\n * This defines a simple pager with default settings.\n *\n * ```html\n * <div class=\"lisn-pager\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * As above but with all settings explicitly set to their default (`false`).\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen=false | parallax=false | horizontal=false\">\n *   <div>Vertical: Page 1</div>\n *   <div>Vertical: Page 2</div>\n *   <div>Vertical: Page 3</div>\n *   <div>Vertical: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>Horizontal: Page 1</div>\n *   <div>Horizontal: Page 2</div>\n *   <div>Horizontal: Page 3</div>\n *   <div>Horizontal: Page 4</div>\n * </div>\n * ```\n *\n * @example\n * This defines a pager with custom settings, as well as toggle and switch buttons.\n *\n * ```html\n * <div data-lisn-pager=\"fullscreen | parallax | horizontal | gestures=false\">\n *   <div>\n *     <div data-lisn-pager-page>Horizontal: Page 1</div>\n *     <div data-lisn-pager-page>Horizontal: Page 2</div>\n *     <div data-lisn-pager-page>Horizontal: Page 3</div>\n *     <div data-lisn-pager-page>Horizontal: Page 4</div>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-toggle>Toggle page 1</button>\n *     <button data-lisn-pager-toggle>Toggle page 2</button>\n *     <button data-lisn-pager-toggle>Toggle page 3</button>\n *     <button data-lisn-pager-toggle>Toggle page 4</button>\n *   </div>\n *\n *   <div>\n *     <button data-lisn-pager-switch>Go to page 1</button>\n *     <button data-lisn-pager-switch>Go to page 2</button>\n *     <button data-lisn-pager-switch>Go to page 3</button>\n *     <button data-lisn-pager-switch>Go to page 4</button>\n *   </div>\n * </div>\n * ```\n */\nexport class Pager extends Widget {\n  /**\n   * Advances the widget's page by 1. If the current page is the last one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled down/right\n   * (depending on the gesture direction).\n   */\n  readonly nextPage: () => Promise<void>;\n\n  /**\n   * Reverses the widget's page by 1. If the current page is the first one,\n   * nothing is done, unless {@link PagerConfig.fullscreen} is true in which\n   * case the pager's scrollable ancestor will be scrolled up/left\n   * (depending on the gesture direction).\n   */\n  readonly prevPage: () => Promise<void>;\n\n  /**\n   * Advances the widget to the given page. Note that page numbers start at 1.\n   *\n   * If this page is disabled, nothing is done.\n   */\n  readonly goToPage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Disables the given page number. Note that page numbers start at 1.\n   *\n   * The page will be skipped during transitioning to previous/next.\n   *\n   * If the page is the current one, then the current page will be switched to\n   * the previous one (that's not disabled), or if this is the first enabled\n   * page, then it will switch to the next one that's not disabled.\n   *\n   * If this is the last enabled page, nothing is done.\n   */\n  readonly disablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page number. Note that page numbers start at 1.\n   */\n  readonly enablePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Re-enables the given page if it is disabled, otherwise disables it. Note\n   * that page numbers start at 1.\n   */\n  readonly togglePage: (pageNum: number) => Promise<void>;\n\n  /**\n   * Returns true if the given page number is disabled. Note that page\n   * numbers start at 1.\n   */\n  readonly isPageDisabled: (pageNum: number) => boolean;\n\n  /**\n   * Returns the current page.\n   */\n  readonly getCurrentPage: () => Element;\n\n  /**\n   * Returns the previous page, before the last transition.\n   *\n   * If there has been no change of page, returns the first page, same as\n   * {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPage: () => Element;\n\n  /**\n   * Returns the number of the current page. Note that numbers start at 1.\n   */\n  readonly getCurrentPageNum: () => number;\n\n  /**\n   * Returns the number of the previous page, before the last transition. Note\n   * that numbers start at 1.\n   *\n   * If there has been no change of page, returns the number of the first page,\n   * same as {@link getCurrentPageNum}.\n   */\n  readonly getPreviousPageNum: () => number;\n\n  /**\n   * The given handler will be called whenever there is a change of page. It\n   * will be called after the current page number is updated internally (so\n   * {@link getPreviousPageNum} and {@link getCurrentPageNum} will return the\n   * updated numbers), but before the page transition styles are updated.\n   *\n   * If the handler returns a promise, it will be awaited upon.\n   */\n  readonly onTransition: (handler: WidgetHandler) => void;\n\n  /**\n   * Returns the page elements.\n   */\n  readonly getPages: () => Element[];\n\n  /**\n   * Returns the toggle elements if any.\n   */\n  readonly getToggles: () => Element[];\n\n  /**\n   * Returns the switch elements if any.\n   */\n  readonly getSwitches: () => Element[];\n\n  static get(element: Element): Pager | null {\n    const instance = super.get(element, DUMMY_ID);\n    if (MH.isInstanceOf(instance, Pager)) {\n      return instance;\n    }\n    return null;\n  }\n\n  static register() {\n    registerWidget(\n      WIDGET_NAME,\n      (element, config) => {\n        if (!Pager.get(element)) {\n          return new Pager(element, config);\n        }\n        return null;\n      },\n      configValidator,\n    );\n  }\n\n  /**\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If there are less than 2 pages given or found, or if any\n   *                page is not a descendant of the main pager element.\n   */\n  constructor(element: Element, config?: PagerConfig) {\n    const destroyPromise = Pager.get(element)?.destroy();\n    super(element, { id: DUMMY_ID });\n\n    const pages = config?.pages || [];\n    const toggles = config?.toggles || [];\n    const switches = config?.switches || [];\n    const nextPrevSwitch = {\n      _next: config?.nextSwitch || null,\n      _prev: config?.prevSwitch || null,\n    };\n\n    const pageSelector = getDefaultWidgetSelector(PREFIX_PAGE__FOR_SELECT);\n    const toggleSelector = getDefaultWidgetSelector(PREFIX_TOGGLE__FOR_SELECT);\n    const switchSelector = getDefaultWidgetSelector(PREFIX_SWITCH__FOR_SELECT);\n    const nextSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_NEXT_SWITCH__FOR_SELECT,\n    );\n    const prevSwitchSelector = getDefaultWidgetSelector(\n      PREFIX_PREV_SWITCH__FOR_SELECT,\n    );\n\n    if (!MH.lengthOf(pages)) {\n      pages.push(...MH.querySelectorAll(element, pageSelector));\n\n      if (!MH.lengthOf(pages)) {\n        pages.push(\n          ...getVisibleContentChildren(element).filter(\n            (e) => !e.matches(switchSelector),\n          ),\n        );\n      }\n    }\n\n    if (!MH.lengthOf(toggles)) {\n      toggles.push(...MH.querySelectorAll(element, toggleSelector));\n    }\n\n    if (!MH.lengthOf(switches)) {\n      switches.push(...MH.querySelectorAll(element, switchSelector));\n    }\n\n    if (!nextPrevSwitch._next) {\n      nextPrevSwitch._next = MH.querySelector(element, nextSwitchSelector);\n    }\n\n    if (!nextPrevSwitch._prev) {\n      nextPrevSwitch._prev = MH.querySelector(element, prevSwitchSelector);\n    }\n\n    const numPages = MH.lengthOf(pages);\n    if (numPages < 2) {\n      throw MH.usageError(\"Pager must have more than 1 page\");\n    }\n\n    for (const page of pages) {\n      if (!element.contains(page) || page === element) {\n        throw MH.usageError(\"Pager's pages must be its descendants\");\n      }\n    }\n\n    const components = {\n      _pages: pages,\n      _toggles: toggles,\n      _switches: switches,\n      _nextPrevSwitch: nextPrevSwitch,\n    };\n\n    const methods = getMethods(this, components, element, config);\n\n    (destroyPromise || MH.promiseResolve()).then(() => {\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      init(this, element, components, config, methods);\n    });\n\n    this.nextPage = () => methods._nextPage();\n    this.prevPage = () => methods._prevPage();\n    this.goToPage = (pageNum) => methods._goToPage(pageNum);\n    this.disablePage = methods._disablePage;\n    this.enablePage = methods._enablePage;\n    this.togglePage = methods._togglePage;\n    this.isPageDisabled = methods._isPageDisabled;\n    this.getCurrentPage = methods._getCurrentPage;\n    this.getPreviousPage = methods._getPreviousPage;\n    this.getCurrentPageNum = methods._getCurrentPageNum;\n    this.getPreviousPageNum = methods._getPreviousPageNum;\n    this.onTransition = methods._onTransition;\n\n    this.getPages = () => [...pages];\n    this.getSwitches = () => [...switches];\n    this.getToggles = () => [...toggles];\n  }\n}\n\n/**\n * @interface\n */\nexport type PagerConfig = {\n  /**\n   * The elements that will make up the pages.\n   *\n   * They do not have to be immediate children of the root element, but they\n   * should all be siblings.\n   *\n   * The widget should have more than one page.\n   *\n   * If this is not specified, then\n   * 1. The top-level element that constitutes the widget is searched for any\n   *    elements that contain the `lisn-pager-page` class or the\n   *    `data-lisn-pager-page` attribute, and these are used as pages.\n   * 2. If there are no such elements, all of the immediate children of the\n   *    widget element (other than `script` and `style` elements) are taken as\n   *    the pages.\n   *\n   * **IMPORTANT:** Unless the {@link style} is set to \"carousel\", the page\n   * elements will be positioned absolutely, and therefore the pager likely\n   * needs to have an explicit height. If you enable {@link fullscreen}, then\n   * the element will get `height: 100vh` set. Otherwise, you need to set its\n   * height in your CSS.\n   *\n   * @defaultValue undefined\n   */\n  pages?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that toggles the\n   * enabled/disabled state of the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-toggle`\n   * class or the `data-lisn-pager-toggle` attribute, and these are used as\n   * toggles.\n   *\n   * @defaultValue undefined\n   */\n  toggles?: Element[];\n\n  /**\n   * If given, these elements should match one-to-one the page elements.\n   *\n   * Each toggle element will be assigned a click listener that switches the\n   * pager to the page.\n   *\n   * If this is not specified, then the top-level element that constitutes the\n   * widget is searched for any elements that contain the `lisn-pager-switch`\n   * class or the `data-lisn-pager-switch` attribute, and these are used as\n   * switches.\n   *\n   * @defaultValue undefined\n   */\n  switches?: Element[];\n\n  /**\n   * This element will be assigned a click listener that goes to the next page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-next-switch` class or the `data-lisn-pager-next-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  nextSwitch?: Element;\n\n  /**\n   * This element will be assigned a click listener that goes to the previous\n   * page.\n   *\n   * If this is not given, then the top-level element that constitutes the\n   * widget is searched for the first element that contains the\n   * `lisn-pager-prev-switch` class or the `data-lisn-pager-prev-switch`\n   * attribute, and this is used.\n   *\n   * @defaultValue undefined\n   */\n  prevSwitch?: Element;\n\n  /**\n   * Set the initial page number.\n   *\n   * @defaultValue 1\n   */\n  initialPage?: number;\n\n  /**\n   * Set the style of the widget. This determines the basic CSS applied.\n   *\n   * When importing the stylesheets in your project, if not using the full\n   * stylesheet (lisn.css) you can import either pager.css which contains all\n   * three pager styles, or only `pager-<style>.css`.\n   *\n   * **NOTE:** The base css only includes the minimum required for positioning\n   * and transitioning pages. The switches and toggles are intentionally not\n   * styled for flexibility. You should style those in your CSS.\n   *\n   * **IMPORTANT:** Unless the {@link style} is set to \"carousel\", the page\n   * elements will be positioned absolutely, and therefore the pager likely\n   * needs to have an explicit height. If you enable {@link fullscreen}, then\n   * the element will get `height: 100vh` set. Otherwise, you need to set its\n   * height in your CSS.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue \"slider\"\n   */\n  style?: \"slider\" | \"carousel\" | \"tabs\";\n\n  /**\n   * Only relevant is {@link style} is \"carousel\".\n   *\n   * The *minimum* page height (or width in {@link horizontal} mode) in pixels.\n   * This will determine the number of visible slides at any one width of the\n   * pager. Pages will still grow to fill the size of the carousel itself.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue 300\n   */\n  pageSize?: number;\n\n  /**\n   * Only relevant is {@link style} is \"carousel\".\n   *\n   * Whether to show a bit of the upcoming and/or previous pages that are\n   * hidden when not all fit.\n   *\n   * @since Introduced in v1.1.0.\n   *\n   * @defaultValue false\n   */\n  peek?: boolean;\n\n  /**\n   * If true, then:\n   * - if the pager {@link style} is \"slider\", the pager's height will be set\n   *   to the viewport height (100vh)\n   * - the pager's scrolling ancestor will be scrolled to the top of the pager\n   *   when 30% of it is in view\n   * - scrolling beyond the first or last page will initiate scroll up/left or\n   *   down/right the pager's scrolling ancestor in order to allow \"leaving\"\n   *   the pager\n   *\n   * Note that except in \"carousel\" {@link style} the pager's pages will be\n   * positioned absolutely, and so if you do _not_ enable this option, you will\n   * need to manually set the height of the page parent element via CSS.\n   *\n   * @defaultValue false\n   */\n  fullscreen?: boolean;\n\n  /**\n   * Only relevant is {@link style} is \"slider\" (default) or \"carousel\".\n   *\n   * Use a parallax effect for switching pages.\n   *\n   * @defaultValue false\n   */\n  parallax?: boolean;\n\n  /**\n   * Only relevant is {@link style} is \"slider\" (default) or \"carousel\".\n   *\n   * Transition pages sideways instead of vertically.\n   *\n   * @defaultValue false\n   */\n  horizontal?: boolean;\n\n  /**\n   * Transition pages upon user scroll-like and drag-like gestures via the\n   * given {@link GestureDevice}s. If set to true, then gestures using all\n   * device types are supported.\n   *\n   * Note that drag gesture is only supported by the \"pointer\" device and also\n   * the \"pointer\" device only supports drag gestures, so if you want to\n   * disable drag gestures, simply pass \"wheel,key,touch\" as this option.\n   *\n   * @defaultValue true\n   */\n  useGestures?: boolean | CommaSeparatedStr<GestureDevice> | GestureDevice[];\n\n  /**\n   * If true, then pages will be advanced backwards/forwards regardless if the\n   * gesture direction is horizontal or vertical.\n   *\n   * If false then, a gesture will go to the next page only if its direction is\n   * down if {@link horizontal} is false/right if {@link horizontal} is true,\n   * and to the previous page only if the gesture direction is up if\n   * {@link horizontal} is false/left if {@link horizontal} is true.\n   *\n   * **IMPORTANT:**\n   * If {@link fullscreen}, {@link preventDefault} and\n   * {@link alignGestureDirection} are all true, then the pager's scrollable\n   * parent must be scrollable in the same direction as the pager orientation,\n   * otherwise automatic scroll beyond the last/first page won't work.\n   *\n   * @defaultValue false\n   */\n  alignGestureDirection?: boolean;\n\n  /**\n   * Whether to prevent the default action for events that would result in\n   * gestures.\n   *\n   * **NOTE:**\n   * If true (default), then all events that originate from a device given in\n   * {@link useGestures} and that could result in a gesture will be prevented\n   * regardless of their direction and whether {@link alignGestureDirection} is\n   * true.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n};\n\n// --------------------\n\ntype Components = {\n  _pages: Element[];\n  _toggles: Element[];\n  _switches: Element[];\n  _nextPrevSwitch: { _next: Element | null; _prev: Element | null };\n};\n\n// Swiping on some trackpads results in \"trailing\" wheel events sent for some\n// while which results in multiple pages being advanced in a short while. So we\n// limit how often pages can be advanced.\nconst MIN_TIME_BETWEEN_WHEEL = 1000;\n\nconst S_CURRENT = \"current\";\nconst S_ARIA_CURRENT = MC.ARIA_PREFIX + S_CURRENT;\nconst S_COVERED = \"covered\";\nconst S_NEXT = \"next\";\nconst S_TOTAL_PAGES = \"total-pages\";\nconst S_VISIBLE_PAGES = \"visible-pages\";\nconst S_CURRENT_PAGE = \"current-page\";\nconst S_PAGE_NUMBER = \"page-number\";\nconst WIDGET_NAME = \"pager\";\nconst PREFIXED_NAME = MH.prefixName(WIDGET_NAME);\nconst PREFIX_ROOT = `${PREFIXED_NAME}__root`;\nconst PREFIX_PAGE_CONTAINER = `${PREFIXED_NAME}__page-container`;\n\n// Use different classes for styling items to the one used for auto-discovering\n// them, so that re-creating existing widgets can correctly find the items to\n// be used by the new widget synchronously before the current one is destroyed.\nconst PREFIX_PAGE = `${PREFIXED_NAME}__page`;\nconst PREFIX_PAGE__FOR_SELECT = `${PREFIXED_NAME}-page`;\nconst PREFIX_TOGGLE__FOR_SELECT = `${PREFIXED_NAME}-toggle`;\nconst PREFIX_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-switch`;\nconst PREFIX_NEXT_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-next-switch`;\nconst PREFIX_PREV_SWITCH__FOR_SELECT = `${PREFIXED_NAME}-prev-switch`;\n\nconst PREFIX_STYLE = `${PREFIXED_NAME}-style`;\nconst PREFIX_IS_FULLSCREEN = MH.prefixName(\"is-fullscreen\");\nconst PREFIX_USE_PARALLAX = MH.prefixName(\"use-parallax\");\nconst PREFIX_TOTAL_PAGES = MH.prefixName(S_TOTAL_PAGES);\nconst PREFIX_VISIBLE_PAGES = MH.prefixName(S_VISIBLE_PAGES);\nconst PREFIX_CURRENT_PAGE = MH.prefixName(S_CURRENT_PAGE);\nconst PREFIX_CURRENT_PAGE_IS_LAST = `${PREFIX_CURRENT_PAGE}-is-last`;\nconst PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED = `${PREFIX_CURRENT_PAGE}-is-first-enabled`;\nconst PREFIX_CURRENT_PAGE_IS_LAST_ENABLED = `${PREFIX_CURRENT_PAGE_IS_LAST}-enabled`;\nconst PREFIX_PAGE_STATE = MH.prefixName(\"page-state\");\nconst PREFIX_PAGE_NUMBER = MH.prefixName(S_PAGE_NUMBER);\nconst VAR_CURRENT_PAGE = MH.prefixCssJsVar(S_CURRENT_PAGE);\nconst VAR_TOTAL_PAGES = MH.prefixCssJsVar(S_TOTAL_PAGES);\nconst VAR_VISIBLE_PAGES = MH.prefixCssJsVar(S_VISIBLE_PAGES);\nconst VAR_VISIBLE_GAPS = MH.prefixCssJsVar(\"visible-gaps\");\nconst VAR_TRANSLATED_PAGES = MH.prefixCssJsVar(\"translated-pages\");\nconst VAR_TRANSLATED_GAPS = MH.prefixCssJsVar(\"translated-gaps\");\nconst VAR_PAGE_NUMBER = MH.prefixCssJsVar(S_PAGE_NUMBER);\n\n// Only one Pager widget per element is allowed, but Widget requires a\n// non-blank ID.\nconst DUMMY_ID = PREFIXED_NAME;\n\nconst SUPPORTED_STYLES = [\"slider\", \"carousel\", \"tabs\"] as const;\ntype PagerStyle = (typeof SUPPORTED_STYLES)[number];\n\nconst isValidStyle = (value: string): value is PagerStyle =>\n  MH.includes(SUPPORTED_STYLES, value);\n\nconst configValidator: WidgetConfigValidatorObject<PagerConfig> = {\n  initialPage: validateNumber,\n  style: (key, value) => validateString(key, value, isValidStyle),\n  pageSize: validateNumber,\n  peek: validateBoolean,\n  fullscreen: validateBoolean,\n  parallax: validateBoolean,\n  horizontal: validateBoolean,\n  useGestures: (key, value) => {\n    if (MH.isNullish(value)) {\n      return undefined;\n    }\n\n    const bool = toBoolean(value);\n    if (bool !== null) {\n      return bool;\n    }\n\n    return (\n      validateStrList(\n        \"useGestures\",\n        validateString(key, value),\n        isValidInputDevice,\n      ) || true\n    );\n  },\n  alignGestureDirection: validateBoolean,\n  preventDefault: validateBoolean,\n};\n\nconst fetchClosestScrollable = (element: Element) =>\n  waitForMeasureTime().then(\n    () => getClosestScrollable(element, { active: true }) ?? undefined,\n  );\n\nconst setPageNumber = (components: Components, pageNum: number) => {\n  let lastPromise: Promise<void> = MH.promiseResolve();\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      setData(el, PREFIX_PAGE_NUMBER, pageNum + \"\");\n      lastPromise = setStyleProp(el, VAR_PAGE_NUMBER, pageNum + \"\");\n    }\n  }\n\n  return lastPromise;\n};\n\nconst setPageState = async (\n  components: Components,\n  pageNum: number,\n  state: string,\n) => {\n  for (const el of [\n    components._pages[pageNum - 1],\n    components._toggles[pageNum - 1],\n    components._switches[pageNum - 1],\n  ] as const) {\n    if (el) {\n      await setData(el, PREFIX_PAGE_STATE, state);\n    }\n  }\n};\n\nconst setCurrentPage = (\n  pagerEl: Element,\n  pageNumbers: {\n    _current: number;\n    _total: number;\n  },\n  isPageDisabled: (pageNum: number) => boolean,\n) => {\n  let isFirstEnabled = true;\n  let isLastEnabled = true;\n  for (let n = 1; n <= pageNumbers._total; n++) {\n    if (!isPageDisabled(n)) {\n      if (n < pageNumbers._current) {\n        isFirstEnabled = false;\n      } else if (n > pageNumbers._current) {\n        isLastEnabled = false;\n      }\n    }\n  }\n\n  setStyleProp(pagerEl, VAR_CURRENT_PAGE, pageNumbers._current + \"\");\n  setData(pagerEl, PREFIX_CURRENT_PAGE, pageNumbers._current + \"\");\n  setBooleanData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST,\n    pageNumbers._current === pageNumbers._total,\n  );\n  setBooleanData(pagerEl, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED, isFirstEnabled);\n  return setBooleanData(\n    pagerEl,\n    PREFIX_CURRENT_PAGE_IS_LAST_ENABLED,\n    isLastEnabled,\n  );\n};\n\nconst init = (\n  widget: Pager,\n  element: Element,\n  components: Components,\n  config: PagerConfig | undefined,\n  methods: ReturnType<typeof getMethods>,\n) => {\n  const logger = debug\n    ? new debug.Logger({\n        name: `Pager-${formatAsString(element)}`,\n        logAtCreation: config,\n      })\n    : null;\n\n  const pages = components._pages;\n  const toggles = components._toggles;\n  const switches = components._switches;\n  const nextSwitch = components._nextPrevSwitch._next;\n  const prevSwitch = components._nextPrevSwitch._prev;\n  const pageContainer = pages[0]?.parentElement;\n\n  let initialPage = toInt(config?.initialPage ?? 1);\n  const pagerStyle = config?.style ?? \"slider\";\n  const isCarousel = pagerStyle === \"carousel\";\n  const minPageSize = config?.pageSize ?? 300;\n  const enablePeek = config?.peek ?? false;\n  const isFullscreen = config?.fullscreen ?? false;\n  const isParallax = config?.parallax ?? false;\n  const isHorizontal = config?.horizontal ?? false;\n  const orientation = isHorizontal ? MC.S_HORIZONTAL : MC.S_VERTICAL;\n  const useGestures = config?.useGestures ?? true;\n  const alignGestureDirection = config?.alignGestureDirection ?? false;\n  const preventDefault = config?.preventDefault ?? true;\n\n  const scrollWatcher = ScrollWatcher.reuse();\n  const sizeWatcher = isCarousel\n    ? SizeWatcher.reuse({ resizeThreshold: 10 })\n    : null;\n  const gestureWatcher = useGestures ? GestureWatcher.reuse() : null;\n  const viewWatcher = isFullscreen\n    ? ViewWatcher.reuse({ rootMargin: \"0px\", threshold: 0.3 })\n    : null;\n\n  const recalculateCarouselProps = async (t?: Element, data?: SizeData) => {\n    if (data) {\n      // there's been a resize\n      const gap =\n        MH.parseFloat(await getComputedStyleProp(element, \"gap\")) || 0;\n      const containerSize =\n        data.content[isHorizontal ? MC.S_WIDTH : MC.S_HEIGHT];\n\n      const getNumVisiblePages = (addPeek = false) =>\n        (numVisiblePages = MH.max(\n          1, // at least 1\n          MH.min(\n            MH.floor(\n              (containerSize + gap - (addPeek ? 0.5 * minPageSize : 0)) /\n                (minPageSize + gap),\n            ),\n            numPages, // and at most total number\n          ),\n        ));\n\n      numVisiblePages = getNumVisiblePages();\n      if (enablePeek && numVisiblePages < numPages) {\n        // Not all pages fit now and we will add a \"peek\" from the pages on the\n        // edge.\n        // Re-calculate with peek added in case the resultant page size when we\n        // add the \"peek\" will make it smaller than the min.\n        numVisiblePages = getNumVisiblePages(true);\n      }\n\n      logger?.debug8(\"Pager resized\", { gap, containerSize, numVisiblePages });\n    } // otherwise just a page transition\n\n    const currPageNum = widget.getCurrentPageNum();\n    const prevPageNum = widget.getPreviousPageNum();\n    const numHidden = numPages - numVisiblePages;\n    const hasPeek = enablePeek && numVisiblePages < numPages;\n\n    // centre the current page as much as possible\n    let visibleStart = currPageNum - (numVisiblePages - 1) / 2;\n    let isAtEdge = false;\n\n    if (visibleStart >= numHidden + 1) {\n      visibleStart = numHidden + 1;\n      isAtEdge = true;\n    } else if (visibleStart <= 1) {\n      visibleStart = 1;\n      isAtEdge = true;\n    }\n\n    let numTranslated = 0;\n    if (hasPeek) {\n      numTranslated = MH.max(0, visibleStart - 1 - (isAtEdge ? 0.5 : 0.25));\n    } else {\n      numTranslated =\n        (prevPageNum > currPageNum ? MH.floor : MH.ceil)(visibleStart) - 1;\n    }\n\n    const numVisibleGaps = !hasPeek\n      ? numVisiblePages - 1\n      : isAtEdge || numVisiblePages % 2 === 0\n        ? numVisiblePages\n        : numVisiblePages + 1;\n\n    const fractionalNumVisiblePages = hasPeek\n      ? numVisiblePages + 0.5\n      : numVisiblePages;\n\n    logger?.debug8(\"Carousel calculations\", {\n      currPageNum,\n      prevPageNum,\n      visibleStart,\n      isAtEdge,\n      numVisiblePages,\n      numVisibleGaps,\n      numTranslated,\n    });\n\n    setData(element, PREFIX_VISIBLE_PAGES, fractionalNumVisiblePages + \"\");\n    setStyleProp(element, VAR_VISIBLE_PAGES, fractionalNumVisiblePages + \"\");\n    setStyleProp(element, VAR_VISIBLE_GAPS, numVisibleGaps + \"\");\n    setStyleProp(element, VAR_TRANSLATED_PAGES, numTranslated + \"\");\n    setStyleProp(element, VAR_TRANSLATED_GAPS, MH.floor(numTranslated) + \"\");\n  };\n\n  const getGestureOptions = (\n    directions: Direction | Direction[] | undefined,\n  ): OnGestureOptions => {\n    return {\n      devices: MH.isBoolean(useGestures) // i.e. true; if it's false, then gestureWatcher is null\n        ? undefined // all devices\n        : useGestures,\n      intents: [MC.S_DRAG, MC.S_SCROLL],\n      directions,\n      deltaThreshold: 25,\n      preventDefault,\n    };\n  };\n\n  const scrollToPager = async () => {\n    scrollWatcher.scrollTo(element, {\n      scrollable: await fetchClosestScrollable(element),\n    });\n  };\n\n  const transitionOnGesture = (target: EventTarget, data: GestureData) => {\n    const swapDirection = data.intent === MC.S_DRAG;\n\n    if (MH.includes([MC.S_LEFT, MC.S_UP], data.direction)) {\n      (swapDirection ? methods._nextPage : methods._prevPage)(data);\n    } else {\n      (swapDirection ? methods._prevPage : methods._nextPage)(data);\n    }\n  };\n\n  const addWatchers = () => {\n    gestureWatcher?.onGesture(\n      element,\n      transitionOnGesture,\n      getGestureOptions(\n        alignGestureDirection\n          ? isHorizontal\n            ? [MC.S_LEFT, MC.S_RIGHT]\n            : [MC.S_UP, MC.S_DOWN]\n          : undefined, // all directions\n      ),\n    );\n\n    sizeWatcher?.onResize(recalculateCarouselProps, { target: element });\n    viewWatcher?.onView(element, scrollToPager, { views: \"at\" });\n  };\n\n  const removeWatchers = () => {\n    gestureWatcher?.offGesture(element, transitionOnGesture);\n    sizeWatcher?.offResize(recalculateCarouselProps, element);\n    viewWatcher?.offView(element, scrollToPager);\n  };\n\n  const getPageNumForEvent = (event: Event) => {\n    const target = MH.currentTargetOf(event);\n    return MH.isElement(target)\n      ? toInt(getData(target, PREFIX_PAGE_NUMBER))\n      : 0;\n  };\n\n  const toggleClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._togglePage(pageNum);\n  };\n\n  const switchClickListener = (event: Event) => {\n    const pageNum = getPageNumForEvent(event);\n    methods._goToPage(pageNum);\n  };\n\n  const nextSwitchClickListener = () => methods._nextPage();\n  const prevSwitchClickListener = () => methods._prevPage();\n\n  // SETUP ------------------------------\n\n  widget.onDisable(removeWatchers);\n  widget.onEnable(addWatchers);\n\n  widget.onDestroy(async () => {\n    await waitForMutateTime();\n    delDataNow(element, MC.PREFIX_ORIENTATION);\n    delDataNow(element, PREFIX_STYLE);\n    delDataNow(element, PREFIX_IS_FULLSCREEN);\n    delDataNow(element, PREFIX_USE_PARALLAX);\n    delDataNow(element, PREFIX_CURRENT_PAGE);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED);\n    delDataNow(element, PREFIX_CURRENT_PAGE_IS_LAST_ENABLED);\n    delDataNow(element, PREFIX_TOTAL_PAGES);\n    delDataNow(element, PREFIX_VISIBLE_PAGES);\n    delStylePropNow(element, VAR_CURRENT_PAGE);\n    delStylePropNow(element, VAR_TOTAL_PAGES);\n    delStylePropNow(element, VAR_VISIBLE_PAGES);\n    delStylePropNow(element, VAR_VISIBLE_GAPS);\n    delStylePropNow(element, VAR_TRANSLATED_PAGES);\n    delStylePropNow(element, VAR_TRANSLATED_GAPS);\n\n    for (let idx = 0; idx < MH.lengthOf(pages); idx++) {\n      removeClassesNow(pages[idx], PREFIX_PAGE);\n\n      for (const [el, listener] of [\n        [pages[idx], null],\n        [toggles[idx], toggleClickListener],\n        [switches[idx], switchClickListener],\n      ] as const) {\n        if (el) {\n          delDataNow(el, PREFIX_PAGE_STATE);\n          delDataNow(el, PREFIX_PAGE_NUMBER);\n          delStylePropNow(el, VAR_PAGE_NUMBER);\n          if (listener) {\n            removeEventListenerFrom(el, MC.S_CLICK, listener);\n          }\n        }\n      }\n\n      MH.delAttr(pages[idx], S_ARIA_CURRENT);\n    }\n\n    if (nextSwitch) {\n      removeEventListenerFrom(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n    }\n\n    if (prevSwitch) {\n      removeEventListenerFrom(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n    }\n\n    removeClassesNow(element, PREFIX_ROOT);\n    if (pageContainer) {\n      removeClassesNow(pageContainer, PREFIX_PAGE_CONTAINER);\n    }\n  });\n\n  if (isCarousel) {\n    widget.onTransition(() => recalculateCarouselProps());\n  }\n\n  addWatchers();\n  addClasses(element, PREFIX_ROOT);\n  if (pageContainer) {\n    addClasses(pageContainer, PREFIX_PAGE_CONTAINER);\n  }\n\n  const numPages = MH.lengthOf(pages);\n  let numVisiblePages = numPages;\n\n  setData(element, MC.PREFIX_ORIENTATION, orientation);\n  setData(element, PREFIX_STYLE, pagerStyle);\n  setBooleanData(element, PREFIX_IS_FULLSCREEN, isFullscreen);\n  setBooleanData(element, PREFIX_USE_PARALLAX, isParallax);\n  setData(element, PREFIX_TOTAL_PAGES, numPages + \"\");\n  setStyleProp(element, VAR_TOTAL_PAGES, (numPages || 1) + \"\");\n\n  for (const page of pages) {\n    disableInitialTransition(page);\n    addClasses(page, PREFIX_PAGE);\n  }\n\n  for (let idx = 0; idx < numPages; idx++) {\n    setPageNumber(components, idx + 1);\n    setPageState(components, idx + 1, S_NEXT);\n\n    for (const [el, listener] of [\n      [toggles[idx], toggleClickListener],\n      [switches[idx], switchClickListener],\n    ] as const) {\n      if (el) {\n        addEventListenerTo(el, MC.S_CLICK, listener);\n      }\n    }\n  }\n\n  if (nextSwitch) {\n    addEventListenerTo(nextSwitch, MC.S_CLICK, nextSwitchClickListener);\n  }\n\n  if (prevSwitch) {\n    addEventListenerTo(prevSwitch, MC.S_CLICK, prevSwitchClickListener);\n  }\n\n  if (initialPage < 1 || initialPage > numPages) {\n    initialPage = 1;\n  }\n  methods._goToPage(initialPage);\n};\n\nconst getMethods = (\n  widget: Pager,\n  components: Components,\n  element: Element,\n  config: PagerConfig | undefined,\n) => {\n  const pages = components._pages;\n  const scrollWatcher = ScrollWatcher.reuse();\n  const isFullscreen = config?.fullscreen;\n  const disabledPages: Record<number, boolean> = {};\n  const callbacks = MH.newSet<WidgetCallback>();\n\n  const fetchScrollOptions = async (): Promise<ScrollOptions> => ({\n    scrollable: await fetchClosestScrollable(element),\n    // default amount is already 100%\n    asFractionOf: \"visible\",\n    weCanInterrupt: true,\n  });\n\n  let currPageNum = -1;\n  let lastPageNum = -1;\n  let lastTransition = 0;\n\n  const canTransition = (gestureData?: GestureData) => {\n    if (widget.isDisabled()) {\n      return false;\n    }\n\n    if (gestureData?.device !== MC.S_WHEEL) {\n      return true;\n    }\n\n    const timeNow = MH.timeNow();\n    if (timeNow - lastTransition > MIN_TIME_BETWEEN_WHEEL) {\n      lastTransition = timeNow;\n      return true;\n    }\n\n    return false;\n  };\n\n  const goToPage = async (pageNum: number, gestureData?: GestureData) => {\n    pageNum = toInt(pageNum, -1);\n    if (pageNum === currPageNum || !canTransition(gestureData)) {\n      return;\n    }\n\n    const numPages = MH.lengthOf(pages);\n\n    if (\n      (currPageNum === 1 && pageNum === 0) ||\n      (currPageNum === numPages && pageNum === numPages + 1)\n    ) {\n      // next/prev page beyond last/first\n      if (isFullscreen) {\n        scrollWatcher.scroll(\n          pageNum\n            ? gestureData?.direction === MC.S_RIGHT\n              ? MC.S_RIGHT\n              : MC.S_DOWN\n            : gestureData?.direction === MC.S_LEFT\n              ? MC.S_LEFT\n              : MC.S_UP,\n          await fetchScrollOptions(),\n        ); // no need to await\n      }\n\n      return;\n    }\n\n    if (isPageDisabled(pageNum) || pageNum < 1 || pageNum > numPages) {\n      // invalid or disabled\n      return;\n    }\n\n    lastPageNum = currPageNum > 0 ? currPageNum : pageNum;\n    currPageNum = pageNum;\n\n    for (const callback of callbacks) {\n      await callback.invoke(widget);\n    }\n\n    MH.delAttr(pages[lastPageNum - 1], S_ARIA_CURRENT);\n    for (\n      let n = lastPageNum;\n      n !== currPageNum;\n      currPageNum < lastPageNum ? n-- : n++\n    ) {\n      if (!isPageDisabled(n)) {\n        setPageState(\n          components,\n          n,\n          currPageNum < lastPageNum ? S_NEXT : S_COVERED,\n        );\n      }\n    }\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: numPages },\n      isPageDisabled,\n    );\n    MH.setAttr(pages[currPageNum - 1], S_ARIA_CURRENT);\n    await setPageState(components, currPageNum, S_CURRENT);\n  };\n\n  const nextPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum + 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage++;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const prevPage = async (gestureData?: GestureData) => {\n    let targetPage = currPageNum - 1;\n    while (isPageDisabled(targetPage)) {\n      targetPage--;\n    }\n\n    return goToPage(targetPage, gestureData);\n  };\n\n  const isPageDisabled = (pageNum: number) => disabledPages[pageNum] === true;\n\n  const disablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || pageNum < 1 || pageNum > MH.lengthOf(pages)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = true;\n\n    if (pageNum === currPageNum) {\n      await prevPage();\n\n      if (pageNum === currPageNum) {\n        // was the first enabled one\n        await nextPage();\n\n        if (pageNum === currPageNum) {\n          // was the only enabled one\n          disabledPages[pageNum] = false;\n          return;\n        }\n      }\n    }\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: MH.lengthOf(pages) },\n      isPageDisabled,\n    );\n    await setPageState(components, pageNum, MC.S_DISABLED);\n  };\n\n  const enablePage = async (pageNum: number) => {\n    pageNum = toInt(pageNum);\n    if (widget.isDisabled() || !isPageDisabled(pageNum)) {\n      return;\n    }\n\n    // set immediately for toggle to work without awaiting on it\n    disabledPages[pageNum] = false;\n\n    setCurrentPage(\n      element,\n      { _current: currPageNum, _total: MH.lengthOf(pages) },\n      isPageDisabled,\n    );\n    await setPageState(\n      components,\n      pageNum,\n      pageNum < currPageNum ? S_COVERED : S_NEXT,\n    );\n  };\n\n  const togglePage = (pageNum: number) =>\n    isPageDisabled(pageNum) ? enablePage(pageNum) : disablePage(pageNum);\n\n  const onTransition = (handler: WidgetHandler) =>\n    callbacks.add(wrapCallback(handler));\n\n  return {\n    _nextPage: nextPage,\n    _prevPage: prevPage,\n    _goToPage: goToPage,\n    _disablePage: disablePage,\n    _enablePage: enablePage,\n    _togglePage: togglePage,\n    _isPageDisabled: isPageDisabled,\n    _getCurrentPage: () => pages[currPageNum - 1],\n    _getPreviousPage: () => pages[lastPageNum - 1],\n    _getCurrentPageNum: () => (MH.lengthOf(pages) > 0 ? currPageNum : 0),\n    _getPreviousPageNum: () => (MH.lengthOf(pages) > 0 ? lastPageNum : 0),\n    _onTransition: onTransition,\n  };\n};\n","/**\n * @module Actions\n *\n * @categoryDescription Controlling pagers\n * {@link NextPage} and {@link PrevPage} advance or reverse the {@link Pager}\n * widget setup for the given element.\n *\n * {@link GoToPage} sets the {@link Pager} to the given page or toggles to the\n * last saved one.\n *\n * {@link EnablePage} and {@link DisablePage} enable or disable the given page\n * of the {@link Pager} widget setup for the given element.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { toInt } from \"@lisn/utils/math\";\n\nimport { Pager } from \"@lisn/widgets/pager\";\nimport { fetchUniqueWidget } from \"@lisn/widgets/widget\";\n\nimport { Action, registerAction } from \"@lisn/actions/action\";\n\n/**\n * Advances or reverses the {@link Pager} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"next-page\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@next-page +target=#myNextButton\"></div>\n * <button id=\"myNextButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class NextPage implements Action {\n  /**\n   * Advances the pager by one page.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Reverses the pager by one page.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Undoes the last action: reverses the pager if {@link do} was last called\n   * or advances it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"next-page\", (element) => new NextPage(element));\n  }\n\n  constructor(element: Element) {\n    let toggleState = false;\n    const { _nextPage, _prevPage } = getMethods(element);\n\n    this.do = () => {\n      toggleState = true;\n      return _nextPage();\n    };\n\n    this.undo = () => {\n      toggleState = false;\n      return _prevPage();\n    };\n\n    this[MC.S_TOGGLE] = () => {\n      const method = toggleState ? _prevPage : _nextPage;\n      toggleState = !toggleState;\n      return method();\n    };\n  }\n}\n\n/**\n * Reverses or advances the {@link Pager} widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"prev-page\".\n * - Accepted string arguments: none\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@prev-page +target=#myPrevButton\"></div>\n * <button id=\"myPrevButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class PrevPage implements Action {\n  /**\n   * Reverses the pager by one page.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Advances the pager by one page.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Undoes the last action: advances the pager if {@link do} was last called\n   * or reverses it otherwise.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\"prev-page\", (element) => new PrevPage(element));\n  }\n\n  constructor(element: Element) {\n    let toggleState = false;\n    const { _nextPage, _prevPage } = getMethods(element);\n\n    this.do = () => {\n      toggleState = true;\n      return _prevPage();\n    };\n\n    this.undo = () => {\n      toggleState = false;\n      return _nextPage();\n    };\n\n    this[MC.S_TOGGLE] = () => {\n      const method = toggleState ? _nextPage : _prevPage;\n      toggleState = !toggleState;\n      return method();\n    };\n  }\n}\n\n/**\n * Goes to a given page, or to the last one beforehand, of the {@link Pager}\n * widget setup for the given element.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"go-to-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@go-to-page:2 +target=#myGoToButton\"></div>\n * <button id=\"myGoToButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class GoToPage implements Action {\n  /**\n   * Goes to the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Goes to the last saved page number before the action was {@link do}ne. If\n   * the action had never been done, does nothing.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Goes to the page number given to the constructor, or if already at this\n   * number, goes to the last saved page if any. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"go-to-page\",\n      (element, args) => new GoToPage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page is required\");\n    }\n\n    const { _goToPage } = getMethods(element);\n\n    this.do = () => _goToPage(pageNum);\n    this.undo = () => _goToPage(-1);\n    this[MC.S_TOGGLE] = () => _goToPage(pageNum, -1);\n  }\n}\n\n/**\n * Enables or disables the given page of the {@link Pager} widget setup for the\n * given element.\n *\n * **IMPORTANT:** When constructed, it disables the given page as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"enable-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@enable-page:2 +target=#myEnableButton\"></div>\n * <button id=\"myEnableButton\"></button>\n * ```\n *\n * @category Controlling pagers\n */\nexport class EnablePage implements Action {\n  /**\n   * Enables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Disables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Enables the page number given to the constructor, if it is disabled,\n   * otherwise disables it. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"enable-page\",\n      (element, args) => new EnablePage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page number is required\");\n    }\n\n    const { _enablePage, _disablePage, _togglePage } = getMethods(element);\n    _disablePage(pageNum); // initial state\n\n    this.do = () => _enablePage(pageNum);\n    this.undo = () => _disablePage(pageNum);\n    this[MC.S_TOGGLE] = () => _togglePage(pageNum);\n  }\n}\n\n/**\n * Disables or enables the given page of the {@link Pager} widget setup for the\n * given element.\n *\n * **IMPORTANT:** When constructed, it enables the given page as a form of\n * initialization.\n *\n * -------\n *\n * To use with auto-widgets (HTML API) as part of a trigger specification:\n * - Action name: \"disable-page\".\n * - Accepted string arguments: the number of the target page\n * - Accepted options: none\n *\n * @example\n * ```html\n * <button id=\"myDisableButton\"></button>\n * <div class=\"lisn-pager\" data-lisn-on-click=\"@disable-page:2 +target=#myDisableButton\"></div>\n * ```\n *\n * @category Controlling pagers\n */\nexport class DisablePage implements Action {\n  /**\n   * Disables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly do: () => Promise<void>;\n\n  /**\n   * Enables the page number given to the constructor. Numbers start at 1.\n   */\n  readonly undo: () => Promise<void>;\n\n  /**\n   * Disables the page number given to the constructor, if it is enabled,\n   * otherwise enables it. Numbers start at 1.\n   */\n  readonly toggle: () => Promise<void>;\n\n  static register() {\n    registerAction(\n      \"disable-page\",\n      (element, args) => new DisablePage(element, toInt(args[0])),\n    );\n  }\n\n  constructor(element: Element, pageNum: number) {\n    if (!pageNum) {\n      throw MH.usageError(\"Target page number is required\");\n    }\n\n    const { _enablePage, _disablePage, _togglePage } = getMethods(element);\n    _enablePage(pageNum); // initial state\n\n    this.do = () => _disablePage(pageNum);\n    this.undo = () => _enablePage(pageNum);\n    this[MC.S_TOGGLE] = () => _togglePage(pageNum);\n  }\n}\n\n// --------------------\n\nconst getMethods = (element: Element) => {\n  let lastPageNum: number | null | undefined = null;\n\n  const nextPage = (widget: Pager | null) => widget?.nextPage();\n  const prevPage = (widget: Pager | null) => widget?.prevPage();\n\n  const goToPage = async (\n    widget: Pager | null,\n    pageNum: number,\n    altPageNum: number | null,\n  ) => {\n    const currentNum = widget?.getCurrentPageNum();\n    let targetNum: number | null | undefined =\n      currentNum === pageNum ? altPageNum : pageNum;\n    if (targetNum === -1) {\n      targetNum = lastPageNum;\n    }\n\n    if (targetNum) {\n      if (pageNum !== -1) {\n        // save the current number unless this is \"undo\"\n        lastPageNum = currentNum;\n      }\n\n      await widget?.goToPage(targetNum);\n    }\n  };\n\n  const enablePage = (widget: Pager | null, pageNum: number) =>\n    widget?.enablePage(pageNum);\n  const disablePage = (widget: Pager | null, pageNum: number) =>\n    widget?.disablePage(pageNum);\n  const togglePage = (widget: Pager | null, pageNum: number) =>\n    widget?.togglePage(pageNum);\n\n  const widgetPromise = fetchUniqueWidget(\"pager\", element, Pager);\n\n  return {\n    _nextPage: () => widgetPromise.then(nextPage),\n    _prevPage: () => widgetPromise.then(prevPage),\n\n    _goToPage: (pageNum: number, altPageNum: number | null = null) =>\n      widgetPromise.then((w) => goToPage(w, pageNum, altPageNum)),\n\n    _enablePage: (pageNum: number) =>\n      widgetPromise.then((w) => enablePage(w, pageNum)),\n    _disablePage: (pageNum: number) =>\n      widgetPromise.then((w) => disablePage(w, pageNum)),\n    _togglePage: (pageNum: number) =>\n      widgetPromise.then((w) => togglePage(w, pageNum)),\n  };\n};\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nexport * from \"@lisn/actions/add-class\";\nexport * from \"@lisn/actions/animate\";\nexport * from \"@lisn/actions/animate-play\";\nexport * from \"@lisn/actions/display\";\nexport * from \"@lisn/actions/trigger\";\nexport * from \"@lisn/actions/scroll-to\";\nexport * from \"@lisn/actions/set-attribute\";\nexport * from \"@lisn/actions/show\";\nexport * from \"@lisn/actions/open\";\nexport * from \"@lisn/actions/pager\";\n\nexport * from \"@lisn/actions/action\";\n","/**\n * @module Triggers\n *\n * @categoryDescription Input\n * {@link CheckTrigger} allows you to run actions when the user checks a target\n * checkbox input element, and undo those actions when they uncheck the checkbox.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { addEventListenerTo, removeEventListenerFrom } from \"@lisn/utils/event\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link CheckTrigger} allows you to run actions when the user checks a target\n * checkbox input element, and undo those actions when they uncheck the checkbox.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *\n * @example\n * Add classes `active` and `checked` when the user checks the checkbox,\n * remove them when unchecked.\n *\n * ```html\n * <input type=\"checkbox\" data-lisn-on-check=\"@add-class=active,checked\"/>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <input type=\"checkbox\" class=\"lisn-on-check--@add-class=active,checked\"/>\n * ```\n *\n * @example\n * Play the animations on the element each time the user checks the next\n * element with class `checkbox` (do nothing when it's unchecked).\n *\n * ```html\n * <div data-lisn-on-check=\"@animate +one-way +target=next.checkbox\"></div>\n * <input type=\"checkbox\" class=\"checkbox\"/>\n * ```\n *\n * @example\n * Add class `used` the first time the user checks the next element with class\n * `checkbox`, and play or reverse the animations 200ms after each time the\n * user toggles the reference checkbox.\n *\n * ```html\n * <div data-lisn-on-check=\"@add-class=used +once ;\n *                          @animate +delay=200 +target=next.checkbox\"\n * ></div>\n * <input type=\"checkbox\" class=\"checkbox\"/>\n * ```\n *\n * @example\n * When the user checks the next element with class `checkbox` then add classes `c1`\n * and `c2` to the element (that the trigger is defined on) and enable trigger\n * `my-trigger` defined on this same element; undo all of that when the user unchecks\n * the reference checkbox.\n *\n * ```html\n * <div data-lisn-on-check=\"@add-class=c1,c2 @enable=my-trigger +target=next.checkbox\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <input type=\"checkbox\" class=\"checkbox\"/>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-check=\"@add-class=c1,c2 @enable=my-trigger +target=next-checkbox\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <input type=\"checkbox\" data-lisn-ref=\"checkbox\"/>\n * ```\n *\n * @category Input\n */\nexport class CheckTrigger extends Trigger {\n  readonly getConfig: () => CheckTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"check\",\n      (element, args, actions, config) =>\n        new CheckTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: CheckTriggerConfig = {},\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const target = MH.targetOf(config) || element;\n\n    if (!MH.isInstanceOf(target, HTMLInputElement)) {\n      return;\n    }\n\n    const onToggle = () => (target.checked ? this.run() : this.reverse());\n\n    addEventListenerTo(target, \"change\", onToggle);\n\n    this.onDestroy(() => {\n      removeEventListenerFrom(target, \"change\", onToggle);\n    });\n  }\n}\n\n/**\n * @category Input\n * @interface\n */\nexport type CheckTriggerConfig = TriggerConfig & {\n  /**\n   * The target to use for the hover action.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  target?: Element;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<CheckTriggerConfig> = (\n  element,\n) => {\n  return {\n    target: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Pointer\n * {@link ClickTrigger} allows you to run actions when a user clicks a target\n * element (first time and every other time, i.e. odd number of click), and undo\n * those actions when a user clicks the target element again (or every even\n * number of clicks). It always acts as a toggle.\n *\n * {@link PressTrigger} allows you to run actions when the user presses and\n * holds a pointing device (or their finger) on a target element, and undo those\n * actions when they release their pointing device or lift their finger off.\n *\n * {@link HoverTrigger} allows you to run actions when the user hovers overs a\n * target element, and undo those actions when their pointing device moves off\n * the target. On touch devices it acts just like {@link PressTrigger}.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport { validateBoolean } from \"@lisn/utils/validation\";\n\nimport {\n  PointerWatcher,\n  OnPointerHandler,\n} from \"@lisn/watchers/pointer-watcher\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link ClickTrigger} allows you to run actions when a user clicks a target\n * element (first time and every other time, i.e. odd number of click), and\n * undo them when a user clicks the target element again (or every even number\n * of clicks). It always acts as a toggle.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: A boolean.\n *   - `prevent-select`: A boolean.\n *\n * @example\n * Add classes `active` and `toggled-on` when the user clicks the element\n * (first time and every other time, i.e. odd number of click), remove them\n * when clicked again (or even number of click);\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=active,toggled-on\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-click--@add-class=active,toggled-on\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * clicks it.\n *\n * ```html\n * <div data-lisn-on-click=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `visited` the first time the user clicks the element, and play or\n * reverse the animations on the element 1000ms after each time the user clicks\n * it.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=visited +once ;\n *                          @animate +delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * When the user clicks the next element with class `box` then add classes `c1`\n * and `c2` to the element (that the trigger is defined on) and enable trigger\n * `my-trigger` defined on this same element; undo all of that on even number\n * of clicks on the reference box element.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class ClickTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_CLICK,\n      (element, args, actions, config) =>\n        new ClickTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: PointerTriggerConfig = {},\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_CLICK);\n  }\n}\n\n/**\n * {@link PressTrigger} allows you to run actions when the user presses and\n * holds a pointing device (or their finger) on a target element, and undo\n * those actions when they release their pointing device or lift their finger\n * off.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: boolean\n *   - `prevent-select`: boolean\n *\n * @example\n * Add classes `active` and `pressed` when the user presses and holds (with\n * mouse, finger or any pointer) the element, remove them when they release\n * the mouse.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=active,pressed\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-press--@add-class=active,pressed\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * presses on the element it.\n *\n * ```html\n * <div data-lisn-on-press=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `pressed` the first time the user presses on the element, and\n * play the animations on the element while the user is pressing on the element\n * with a delay of 100ms, reverse the animations as soon as the user releases\n * the mouse.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=pressed +once ;\n *                          @animate +do-delay=100\"\n * ></div>\n * ```\n *\n * @example\n * When the user presses and holds the next element with class `box` then add\n * classes `c1` and `c2` to the element (that the trigger is defined on) and\n * enable trigger `my-trigger` defined on this same element; undo all of that\n * when they release the mouse (or lift their finger/pointer device) from the\n * reference box element.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-press=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class PressTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_PRESS,\n      (element, args, actions, config) =>\n        new PressTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: PointerTriggerConfig = {},\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_PRESS);\n  }\n}\n\n/**\n * {@link HoverTrigger} allows you to run actions when the user hovers overs\n * a target element, and undo those actions when their pointing device moves\n * off the target. On touch devices it acts just like {@link PressTrigger}.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *   - `target`: A string element specification.\n *     See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `prevent-default`: boolean\n *   - `prevent-select`: boolean\n *\n * @example\n * Add classes `active` and `hovered` when the user hovers over the element,\n * remove them otherwise.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=active,hovered\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-press--@add-class=active,hovered\"></div>\n * ```\n *\n * @example\n * Play the animations on the element 1000ms after the first time the user\n * hovers over the element it.\n *\n * ```html\n * <div data-lisn-on-hover=\"@animate +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `hovered` the first time the user hovers over the element, and\n * play the animations on the element while the user is hovering over the\n * element with a delay of 100ms, reverse the animations as soon as the user\n * mouse leaves the element.\n *\n * ```html\n * <div data-lisn-on-click=\"@add-class=hovered +once ;\n *                          @animate +do-delay=100\"\n * ></div>\n * ```\n *\n * @example\n * When the user hovers over the next element with class `box` then add classes\n * `c1` and `c2` to the element (that the trigger is defined on) and enable\n * trigger `my-trigger` defined on this same element; undo all of that when\n * their pointing device (or finger) moves off the reference element.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=c1,c2 @enable=my-trigger +target=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-hover=\"@add-class=c1,c2 @enable=my-trigger +target=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n * ```\n *\n * @category Pointer\n */\nexport class HoverTrigger extends Trigger {\n  readonly getConfig: () => PointerTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_HOVER,\n      (element, args, actions, config) =>\n        new HoverTrigger(element, actions, config),\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: PointerTriggerConfig = {},\n  ) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    setupWatcher(this, element, actions, config, MC.S_HOVER);\n  }\n}\n\n/**\n * @category Pointer\n * @interface\n */\nexport type PointerTriggerConfig = TriggerConfig & {\n  /**\n   * The target to use for the hover action.\n   *\n   * @defaultValue The element on which the {@link Trigger} is defined\n   */\n  target?: Element;\n\n  /**\n   * See {@link Watchers/PointerWatcher.OnPointerOptions | OnPointerOptions}.\n   *\n   * @defaultValue {@link PointerWatcher} default, false\n   */\n  preventDefault?: boolean;\n\n  /**\n   * See {@link Watchers/PointerWatcher.OnPointerOptions | OnPointerOptions}.\n   *\n   * @defaultValue {@link PointerWatcher} default, true\n   */\n  preventSelect?: boolean;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<PointerTriggerConfig> = (\n  element,\n) => {\n  return {\n    target: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    preventDefault: validateBoolean,\n    preventSelect: validateBoolean,\n  };\n};\n\nconst setupWatcher = (\n  widget: ClickTrigger | HoverTrigger | PressTrigger,\n  element: Element,\n  actions: Action[],\n  config: PointerTriggerConfig,\n  action: \"click\" | \"hover\" | \"press\",\n) => {\n  if (!MH.lengthOf(actions)) {\n    return;\n  }\n\n  const target = MH.targetOf(config) || element;\n\n  // For clicks use the trigger's own toggle function so that it remembers ITS\n  // state rather than the odd/even clicks. Otherwise if the trigger is\n  // disabled, then clicking will \"swap\" the state.\n  let startHandler: OnPointerHandler;\n  let endHandler: OnPointerHandler;\n  if (action === MC.S_CLICK) {\n    startHandler = endHandler = widget[MC.S_TOGGLE];\n  } else {\n    startHandler = widget.run;\n    endHandler = widget.reverse;\n  }\n\n  PointerWatcher.reuse().onPointer(\n    target,\n    startHandler,\n    endHandler,\n    MH.merge(\n      {\n        actions: action,\n      },\n      omitKeys(config, { target: null }),\n    ),\n  );\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Layout\n * {@link LayoutTrigger} allows you to run actions when the viewport or a\n * target element's width or aspect ratio matches a given specification, and\n * undo those actions when the target's width or aspect ratio no longer\n * matches.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  DeviceSpec,\n  Device,\n  AspectRatioSpec,\n  AspectRatio,\n} from \"@lisn/globals/types\";\n\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport {\n  isValidDeviceList,\n  isValidAspectRatioList,\n  getOtherDevices,\n  getOtherAspectRatios,\n} from \"@lisn/utils/layout\";\nimport { validateStringRequired } from \"@lisn/utils/validation\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport { LayoutWatcher } from \"@lisn/watchers/layout-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link LayoutTrigger} allows you to run actions when the viewport or a\n * target element's width or aspect ratio matches a given specification, and\n * undo those actions when the target's width or aspect ratio no longer\n * matches.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (required): A single {@link DeviceSpec} or\n *   {@link AspectRatioSpec}. In this case you can use a dash (\"-\") instead of\n *   space if needed (for example if using CSS classes instead of data\n *   attributes), e.g. \"min-tablet\" instead of \"min tablet\".\n *\n * - Additional trigger options:\n *   - `root`: A string element specification. See\n *     {@link Utils.getReferenceElement | getReferenceElement}.\n *\n * @example\n * Show the element when the window width matches \"tablet\" breakpoint, hide\n * otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"tablet @show\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-layout--tablet@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the window width matches \"tablet\" breakpoint,\n * hide otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"tablet @show +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `tablet` when the window width is at least \"tablet\", hide\n * otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"min tablet @add-class=tablet\"></div>\n * ```\n *\n * @example\n * Add class `mobile` when the window width is \"mobile\" or mobile-wide, add\n * class `tablet`, when it's \"tablet\" and so on; undo that otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"max mobile-wide @add-class=mobile ;\n *                           tablet @add-class=tablet ;\n *                           desktop @add-class=desktop\"\n * ></div>\n * ```\n *\n * @example\n * Show the element when window width is at least \"mobile-wide\" and at most\n * \"tablet\", hide otherwise:\n *\n * ```html\n * <div data-lisn-on-layout=\"mobile-wide to tablet @show\"></div>\n * ```\n *\n * @example\n * When the aspect ratio of the next element with class `box` is square, then\n * add classes `c1` and `c2` to the element (that the trigger is defined on) and\n * enable trigger `my-trigger` defined on this same element; undo all of that\n * otherwise (on other aspect ratios of the reference root):\n *\n * ```html\n * <div data-lisn-on-layout=\"square @add-class=c1,c2 @enable=my-trigger +root=next.box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div class=\"box\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-layout=\"square @add-class=c1,c2 @enable=my-trigger +root=next-box\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n * ></div>\n * <div data-lisn-ref=\"box\"></div>\n *\n * @category Layout\n */\nexport class LayoutTrigger extends Trigger {\n  readonly getConfig: () => LayoutTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"layout\",\n      (element, args, actions, config) => {\n        return new LayoutTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            layout: validateStringRequired(\n              \"layout\",\n              MH.strReplace(\n                MH.strReplace(args[0] || \"\", /(min|max)-/g, \"$1 \"),\n                /-to-/g,\n                \" to \",\n              ),\n              (value) =>\n                isValidDeviceList(value) || isValidAspectRatioList(value),\n            ),\n          }),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config: LayoutTriggerConfig,\n  ) {\n    const layout = config?.layout || \"\";\n    if (!layout) {\n      throw MH.usageError(\"'layout' is required\");\n    }\n\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    let devices: DeviceSpec | Device[] = [];\n    let aspectRatios: AspectRatioSpec | AspectRatio[] = [];\n    let otherDevices: Device[] = [];\n    let otherAspectRatios: AspectRatio[] = [];\n\n    if (isValidDeviceList(layout)) {\n      devices = layout;\n      otherDevices = getOtherDevices(layout);\n    } else {\n      aspectRatios = layout;\n      otherAspectRatios = getOtherAspectRatios(layout);\n    }\n\n    const root = config.root;\n    const watcher = LayoutWatcher.reuse({ root });\n\n    watcher.onLayout(this.run, { devices, aspectRatios });\n\n    if (MH.lengthOf(otherDevices) || MH.lengthOf(otherAspectRatios)) {\n      watcher.onLayout(this.reverse, {\n        devices: otherDevices,\n        aspectRatios: otherAspectRatios,\n      });\n    }\n  }\n}\n\n/**\n * @category Layout\n * @interface\n */\nexport type LayoutTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link DeviceSpec} or {@link AspectRatioSpec} to use. Required.\n   * See {@link Watchers/LayoutWatcher.OnLayoutOptions | OnLayoutOptions} for\n   * accepted formats.\n   *\n   * Actions will be \"done\" when the layout of the root matches the given spec\n   * and \"undone\" otherwise.\n   */\n  layout: DeviceSpec | Device[] | AspectRatioSpec | AspectRatio[];\n\n  /**\n   * The root to use for the {@link LayoutWatcher}.\n   * See {@link Watchers/LayoutWatcher.LayoutWatcherConfig | LayoutWatcherConfig}\n   *\n   * @defaultValue {@link LayoutWatcher} default, the viewport\n   */\n  root?: HTMLElement | null;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<LayoutTriggerConfig, \"layout\">\n> = (element) => {\n  return {\n    root: async (key, value) => {\n      const root = MH.isLiteralString(value)\n        ? await waitForReferenceElement(value, element)\n        : undefined;\n      if (root && !MH.isHTMLElement(root)) {\n        throw MH.usageError(\"root must be HTMLElement\");\n      }\n      return root;\n    },\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription Load\n * {@link LoadTrigger} allows you to run actions once when the page is loaded.\n */\n\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { waitForPageReady } from \"@lisn/utils/dom-events\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\n/**\n * {@link LoadTrigger} allows you to run actions one when the page is loaded.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments: none\n * - Additional trigger options: none\n *\n * @example\n * Scroll to the given element when the page is loaded:\n *\n * ```html\n * <div data-lisn-on-load=\":scroll-to\"></div>\n * ```\n *\n * @example\n * Scroll to 100px above the given element 500ms after the page is loaded:\n *\n * ```html\n * <div data-lisn-on-load=\"@scroll-to=0,-100 +delay=500\"></div>\n * ```\n *\n * @example\n * Scroll to 100px above the given element 500ms after the page is loaded, and\n * play animations defined on it 500ms later (1000ms after it's loaded):\n *\n * ```html\n * <div data-lisn-on-load=\"@scroll-to=0,-100 +delay=500 ;\n *                         @animate +delay=1000\"\n * ></div>\n * ```\n *\n * @category Load\n */\nexport class LoadTrigger extends Trigger {\n  readonly getConfig: () => TriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"load\",\n      (element, args, actions, config) =>\n        new LoadTrigger(element, actions, config),\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config: TriggerConfig) {\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    waitForPageReady().then(this.run);\n  }\n}\n","/**\n * @module Triggers\n *\n * @categoryDescription Scroll\n * {@link ScrollTrigger} allows you to run actions when the user scrolls a\n * target element (or the main scrollable element) in a given direction, and\n * undo those actions when they scroll in the opposite direction.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport {\n  XYDirection,\n  CommaSeparatedStr,\n  ScrollTarget,\n} from \"@lisn/globals/types\";\n\nimport {\n  getOppositeXYDirections,\n  isValidXYDirection,\n} from \"@lisn/utils/directions\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { validateStrList, validateNumber } from \"@lisn/utils/validation\";\n\nimport { Action } from \"@lisn/actions/action\";\n\nimport { ScrollWatcher } from \"@lisn/watchers/scroll-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\n/**\n * {@link ScrollTrigger} allows you to run actions when the user scrolls a\n * target element (or the main scrollable element) in a given direction, and\n * undo those actions when they scroll in the opposite direction.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (optional): One or more (comma-separated) scroll directions.\n *   Note that if you do not specify any directions, then the trigger will just\n *   run once, on any scroll.\n * - Additional trigger options:\n *   - `scrollable`: A string element specification.\n *      See {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `threshold`: A number.\n *\n * @example\n * Show the element when the user scrolls the page up, hide when scrolling\n * down. User scrolling left or right not trigger the action. See\n * {@link getOppositeXYDirections}:\n *\n * ```html\n * <div data-lisn-on-scroll=\"up @show\"></div>\n * ```\n *\n * @example\n * As above, but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-scroll--up@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the first time the user scrolls the page up:\n *\n * ```html\n * <div data-lisn-on-scroll=\"up @show +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `scrolled` the first time the user scrolls the page in any\n * direction (note that the `once` option is implied here), and show the\n * element 1000ms after each time the user scrolls the page up, hide it as soon\n * as they scroll down:\n *\n * ```html\n * <div data-lisn-on-scroll=\"@add-class=scrolled ;\n *                           up @show +do-delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * When the user scrolls up or down the closest ancestor with class `section`,\n * then add classes `c1` and `c2` and enable trigger `my-trigger` defined on\n * this same element; undo all of that when scrolling right or left:\n *\n * ```html\n * <div class=\"section\">\n *   <div data-lisn-on-scroll=\"up,down @add-class=c1,c2 @enable=my-trigger +scrollable=this.section\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n *   ></div>\n *</div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-ref=\"section\">\n *   <div data-lisn-on-scroll=\"up,down @add-class=c1,c2 @enable=my-trigger +scrollable=this-section\"\n *      data-lisn-on-run=\"@show +id=my-trigger\"\n *   ></div>\n *</div>\n * ```\n *\n * @category Scroll\n */\nexport class ScrollTrigger extends Trigger {\n  readonly getConfig: () => ScrollTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      MC.S_SCROLL,\n      (element, args, actions, config) => {\n        return new ScrollTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            directions: validateStrList(\"directions\", args, isValidXYDirection),\n          }),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(\n    element: Element,\n    actions: Action[],\n    config?: ScrollTriggerConfig,\n  ) {\n    config = config ?? {};\n\n    let directions = config.directions;\n    if (!directions) {\n      config.once = true;\n      directions = [MC.S_UP, MC.S_DOWN, MC.S_LEFT, MC.S_RIGHT];\n    }\n\n    super(element, actions, config);\n    this.getConfig = () => MH.copyObject(config);\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const watcher = ScrollWatcher.reuse();\n    const scrollable = config.scrollable;\n    const threshold = config.threshold;\n\n    const oppositeDirections = directions\n      ? getOppositeXYDirections(directions)\n      : [];\n\n    watcher.onScroll(this.run, {\n      directions,\n      scrollable,\n      threshold,\n    });\n\n    if (MH.lengthOf(oppositeDirections)) {\n      watcher.onScroll(this.reverse, {\n        directions: oppositeDirections,\n        scrollable,\n        threshold,\n      });\n    }\n  }\n}\n\n/**\n * @category Scroll\n * @interface\n */\nexport type ScrollTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link XYDirection}s to use as the trigger.\n   * See also {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * Actions will be \"done\" when the scroll direction is one of the given ones\n   * and \"undone\" when it's the opposite direction. E.g. for \"up\" the opposite\n   * is \"down\".\n   */\n  directions?: CommaSeparatedStr<XYDirection> | XYDirection[];\n\n  /**\n   * The scrolling element target to use for the ScrollWatcher.\n   * See {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * @defaultValue {@link ScrollWatcher} default, the main scrolling element\n   */\n  scrollable?: ScrollTarget;\n\n  /**\n   * The scroll threshold to pass to the {@link ScrollWatcher}.\n   * See also {@link Watchers/ScrollWatcher.OnScrollOptions | OnScrollOptions}\n   *\n   * @defaultValue {@link ScrollWatcher} default\n   */\n  threshold?: number;\n};\n\n// --------------------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<ScrollTriggerConfig, \"directions\">\n> = (element) => {\n  return {\n    scrollable: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    threshold: validateNumber,\n  };\n};\n","/**\n * @module Triggers\n *\n * @categoryDescription View\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport { ViewTarget, View, CommaSeparatedStr } from \"@lisn/globals/types\";\n\nimport { hasClass, addClasses, getData } from \"@lisn/utils/css-alter\";\nimport { wrapElement, insertGhostClone } from \"@lisn/utils/dom-alter\";\nimport { isInlineTag } from \"@lisn/utils/dom-query\";\nimport { waitForReferenceElement } from \"@lisn/utils/dom-search\";\nimport { formatAsString } from \"@lisn/utils/text\";\nimport {\n  validateStrList,\n  validateString,\n  validateNumList,\n} from \"@lisn/utils/validation\";\nimport {\n  getOppositeViews,\n  isValidView,\n  isValidScrollOffset,\n} from \"@lisn/utils/views\";\n\nimport { Action } from \"@lisn/actions/action\";\nimport { Animate } from \"@lisn/actions/animate\";\nimport { AnimatePlay } from \"@lisn/actions/animate-play\";\n\nimport { ViewWatcher } from \"@lisn/watchers/view-watcher\";\n\nimport {\n  registerTrigger,\n  Trigger,\n  TriggerConfig,\n} from \"@lisn/triggers/trigger\";\n\nimport { WidgetConfigValidatorFunc } from \"@lisn/widgets/widget\";\n\nimport debug from \"@lisn/debug/debug\";\n\n/**\n * {@link ViewTrigger} allows you to run actions when the viewport's scroll\n * position relative to a given target or offset from top/bottom/left/right is\n * one of the matching \"views\" (at/above/below/left/right), and undo those\n * actions when the viewport's \"view\" is not matching.\n *\n * -------\n *\n * To use with auto-widgets (HTML API), see {@link registerTrigger} for the\n * specification.\n *\n * - Arguments (optional): One or more (comma-separated) {@link View}s.\n *   Default is \"at\".\n * - Additional trigger options:\n *   - `target`: A string element specification for an element (see\n *     {@link Utils.getReferenceElement | getReferenceElement}) or a\n *     {@link Types.ScrollOffset | ScrollOffset}.\n *   - `root`: A string element specification. See\n *     {@link Utils.getReferenceElement | getReferenceElement}.\n *   - `rootMargin`: A string.\n *   - `threshold`: A number or list (comma-separated) of numbers.\n *\n * @example\n * Show the element when it's in the viewport, hide otherwise.\n *\n * ```html\n * <div data-lisn-on-view=\"at @show\"></div>\n * ```\n *\n * @example\n * Same as above. \"views\" is optional and defaults to \"at\".\n *\n * ```html\n * <div data-lisn-on-view=\"@show\"></div>\n * ```\n *\n * @example\n * As above but using a CSS class instead of data attribute:\n *\n * ```html\n * <div class=\"lisn-on-view--@show\"></div>\n * ```\n *\n * @example\n * Show the element 1000ms after the first time it enters the viewport.\n *\n * ```html\n * <div data-lisn-on-view=\"@show +once +delay=1000\"></div>\n * ```\n *\n * @example\n * Add class `seen` the first time the element enters the viewport, and play\n * the animations defined on it 1000ms after each time it enters the viewport,\n * reverse the animations as soon as it goes out of view.\n *\n * ```html\n * <div data-lisn-on-view=\"@add-class=seen +once ;\n *                         @animate +do-delay=1000\"\n * ></div>\n * ```\n *\n * @example\n * Add class `seen` when the viewport is at or below the element (element\n * above viewport), remove it when the viewport is above the element.\n * Element going to the left or right of the viewport will not trigger the\n * action. See {@link getOppositeViews}:\n *\n * ```html\n * <div data-lisn-on-view=\"at,below @add-class=seen\"></div>\n * ```\n *\n * @example\n * Add class `cls` when the viewport is above or to the left the element\n * (element below or to the right of the viewport), remove it when the\n * viewport is either at, below or to the right of the element.\n *\n * ```html\n * <div data-lisn-on-view=\"above,left @add-class=cls\"></div>\n * ```\n *\n * @example\n * Hide the element when the viewport is above the next element with class\n * `section`, show it when the viewport is below or at the target element.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next.section\"></div>\n * <div class=\"section\"></div>\n * ```\n *\n * @example\n * As above, but using `data-lisn-ref` attribute instead of class selector.\n *\n * ```html\n * <div data-lisn-on-view=\"above @hide +target=next-section\"></div>\n * <div data-lisn-ref=\"section\"></div>\n * ```\n *\n * @example\n * Open the {@link Widgets.Openable | Openable} widget configured for this\n * element when the viewport is 75% down from the top of the page.\n *\n * ```html\n * <div data-lisn-on-view=\"@open +target=top:75%\"></div>\n * ```\n *\n * @category View\n */\nexport class ViewTrigger extends Trigger {\n  readonly getConfig: () => ViewTriggerConfig;\n\n  static register() {\n    registerTrigger(\n      \"view\",\n      (element, args, actions, config) => {\n        return new ViewTrigger(\n          element,\n          actions,\n          MH.assign(config, {\n            views: validateStrList(\"views\", args, isValidView),\n          } as const),\n        );\n      },\n      newConfigValidator,\n    );\n  }\n\n  /**\n   * If no actions are supplied, nothing is done.\n   *\n   * @throws {@link Errors.LisnUsageError | LisnUsageError}\n   *                If the config is invalid.\n   */\n  constructor(element: Element, actions: Action[], config?: ViewTriggerConfig) {\n    super(element, actions, config);\n\n    const logger = debug\n      ? new debug.Logger({\n          name: `ViewTrigger-${formatAsString(element)}`,\n        })\n      : null;\n\n    this.getConfig = () => MH.copyObject(config || {});\n\n    if (!MH.lengthOf(actions)) {\n      return;\n    }\n\n    const watcher = ViewWatcher.reuse({\n      root: config?.root,\n      rootMargin: config?.rootMargin?.replace(/,/g, \" \"),\n      threshold: config?.threshold,\n    });\n\n    const target = config?.target || element;\n    const views = config?.views || MC.S_AT;\n    const oppositeViews = getOppositeViews(views);\n\n    const setupWatcher = (target: ViewTarget) => {\n      if (!MH.lengthOf(oppositeViews)) {\n        debug: logger?.debug6(\"Trigger can never be reversed, running now\");\n        // The action is never undone\n        this.run();\n      } else {\n        debug: logger?.debug6(\"Setting up trigger\", views, oppositeViews);\n        watcher.onView(target, this.run, { views });\n        watcher.onView(target, this.reverse, { views: oppositeViews });\n      }\n    };\n\n    // See comment in globals/settings under contentWrappingAllowed\n    let willAnimate = false;\n    for (const action of actions) {\n      if (\n        MH.isInstanceOf(action, Animate) ||\n        MH.isInstanceOf(action, AnimatePlay)\n      ) {\n        willAnimate = true;\n        break;\n      }\n    }\n\n    if (willAnimate) {\n      setupRepresentative(element).then(setupWatcher);\n    } else {\n      setupWatcher(target);\n    }\n  }\n}\n\n/**\n * @category View\n * @interface\n */\nexport type ViewTriggerConfig = TriggerConfig & {\n  /**\n   * The {@link View} to use as the trigger.\n   * See also {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * Actions will be \"done\" when the view matches the given spec and \"undone\"\n   * otherwise. What the opposite views are depends on the given view. E.g. for\n   * \"at\", opposites are all the other ones;  for \"above\", the opposite ones\n   * are \"at\" and \"below\"; for \"at,above\" opposite is \"below\", etc.\n   *\n   * @defaultValue \"at\"\n   */\n  views?: CommaSeparatedStr<View> | View[];\n\n  /**\n   * The target to use for the ViewWatcher. It can be a string offset\n   * specification.\n   * See {@link Watchers/ViewWatcher.OnViewOptions | OnViewOptions}\n   *\n   * @defaultValue The element on which the {@link ViewTrigger} is defined\n   */\n  target?: ViewTarget;\n\n  /**\n   * The root to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  root?: Element | null;\n\n  /**\n   * The root margin to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * It can be either space-separated or comma-separated.\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  rootMargin?: string;\n\n  /**\n   * The threshold to pass to the {@link ViewWatcher}.\n   * See also {@link Watchers/ViewWatcher.ViewWatcherConfig | ViewWatcherConfig}\n   *\n   * @defaultValue {@link ViewWatcher} default\n   */\n  threshold?: number | number[];\n};\n\n// ----------\n\nconst newConfigValidator: WidgetConfigValidatorFunc<\n  Omit<ViewTriggerConfig, \"views\">\n> = (element) => {\n  return {\n    target: (key, value) =>\n      MH.isLiteralString(value) && isValidScrollOffset(value)\n        ? value\n        : ((MH.isLiteralString(value)\n            ? waitForReferenceElement(value, element)\n            : null) ?? undefined),\n    root: (key, value) =>\n      (MH.isLiteralString(value)\n        ? waitForReferenceElement(value, element)\n        : null) ?? undefined,\n    rootMargin: validateString,\n    threshold: (key, value) => validateNumList(key, value),\n  };\n};\n\nconst setupRepresentative = async (element: Element): Promise<Element> => {\n  const allowedToWrap =\n    settings.contentWrappingAllowed === true &&\n    getData(element, MC.PREFIX_NO_WRAP) === null &&\n    // Done by another animate action?\n    !MH.classList(MH.parentOf(element))?.contains(MC.PREFIX_WRAPPER);\n\n  let target: Element;\n  if (allowedToWrap) {\n    target = await wrapElement(element, { ignoreMove: true });\n    addClasses(target, MC.PREFIX_WRAPPER);\n\n    if (isInlineTag(MH.tagName(target))) {\n      addClasses(target, MC.PREFIX_INLINE_WRAPPER);\n    }\n  } else {\n    // Otherwise create a dummy hidden clone that's not animated and position\n    // it absolutely in a wrapper of size 0 that's inserted just before the\n    // actual element, so that the hidden clone overlaps the actual element's\n    // regular (pre-transformed) position.\n\n    const prev = element.previousElementSibling;\n    const prevChild = MH.childrenOf(prev)[0];\n    if (\n      prev &&\n      hasClass(prev, MC.PREFIX_WRAPPER) &&\n      prevChild &&\n      hasClass(prevChild, MC.PREFIX_GHOST)\n    ) {\n      // Done by a previous animate action?\n      target = prevChild;\n    } else {\n      target = (await insertGhostClone(element))._clone;\n    }\n  }\n\n  return target;\n};\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nexport * from \"@lisn/triggers/check-trigger\";\nexport * from \"@lisn/triggers/pointer-trigger\";\nexport * from \"@lisn/triggers/layout-trigger\";\nexport * from \"@lisn/triggers/load-trigger\";\nexport * from \"@lisn/triggers/scroll-trigger\";\nexport * from \"@lisn/triggers/trigger\";\nexport * from \"@lisn/triggers/view-trigger\";\n\nexport * from \"@lisn/triggers/trigger\";\n","/**\n * @module\n * @ignore\n * @internal\n */\n\nimport \"@lisn/bundle-essentials\"; // side effects\n\nimport { omitKeys } from \"@lisn/utils/misc\";\nimport * as _actions from \"@lisn/actions/index\";\nimport * as triggers from \"@lisn/triggers/index\";\n\nexport * from \"@lisn/bundle-essentials\";\n\n// --- remove widget specific actions\nexport const actions = omitKeys(_actions, {\n  Open: true,\n  NextPage: true,\n  PrevPage: true,\n  GoToPage: true,\n  EnablePage: true,\n  DisablePage: true,\n} as const);\n\nexport * as triggers from \"@lisn/triggers/index\";\n\nactions.AddClass.register();\nactions.RemoveClass.register();\nactions.AnimatePlay.register();\nactions.AnimatePause.register();\nactions.Animate.register();\nactions.Display.register();\nactions.Undisplay.register();\nactions.ScrollTo.register();\nactions.SetAttribute.register();\nactions.Show.register();\nactions.Hide.register();\nactions.Enable.register();\nactions.Disable.register();\nactions.Run.register();\n\ntriggers.LayoutTrigger.register();\ntriggers.LoadTrigger.register();\ntriggers.CheckTrigger.register();\ntriggers.ClickTrigger.register();\ntriggers.PressTrigger.register();\ntriggers.HoverTrigger.register();\ntriggers.ScrollTrigger.register();\ntriggers.Trigger.register();\ntriggers.ViewTrigger.register();\n"],"names":["PREFIX","LOG_PREFIX","OBJECT","Object","SYMBOL","Symbol","ARRAY","Array","STRING","String","FUNCTION","Function","MATH","Math","NUMBER","Number","PROMISE","Promise","PI","INFINITY","Infinity","S_ABSOLUTE","S_FIXED","S_WIDTH","S_HEIGHT","S_TOP","S_BOTTOM","S_UP","S_DOWN","S_LEFT","S_RIGHT","S_AT","S_ABOVE","S_BELOW","S_IN","S_OUT","S_NONE","S_AMBIGUOUS","S_ADDED","S_REMOVED","S_ATTRIBUTE","S_KEY","S_MOUSE","S_POINTER","S_TOUCH","S_WHEEL","S_CLICK","S_HOVER","S_PRESS","S_SCROLL","S_ZOOM","S_DRAG","S_UNKNOWN","S_SCROLL_TOP","S_SCROLL_LEFT","S_SCROLL_WIDTH","S_SCROLL_HEIGHT","S_CLIENT_WIDTH","S_CLIENT_HEIGHT","S_SCROLL_TOP_FRACTION","S_SCROLL_LEFT_FRACTION","S_HORIZONTAL","S_VERTICAL","S_SKIP_INITIAL","S_DEBOUNCE_WINDOW","S_TOGGLE","S_CANCEL","S_KEYDOWN","S_MOUSEUP","S_MOUSEDOWN","S_POINTERUP","S_POINTERDOWN","S_POINTERENTER","S_POINTERLEAVE","S_POINTERMOVE","S_POINTERCANCEL","S_TOUCHSTART","S_TOUCHEND","S_TOUCHMOVE","S_TOUCHCANCEL","S_SELECTSTART","S_ATTRIBUTES","S_CHILD_LIST","S_REVERSE","S_DISABLED","S_ARROW","S_ROLE","ARIA_PREFIX","S_ARIA_CONTROLS","PREFIX_WRAPPER","PREFIX_INLINE_WRAPPER","PREFIX_TRANSITION","PREFIX_TRANSITION_DISABLE","PREFIX_HIDE","PREFIX_SHOW","PREFIX_DISPLAY","PREFIX_UNDISPLAY","PREFIX_ORIENTATION","PREFIX_GHOST","PREFIX_NO_SELECT","PREFIX_NO_TOUCH_ACTION","PREFIX_NO_WRAP","S_ANIMATE","ANIMATE_PREFIX","PREFIX_ANIMATE_DISABLE","PREFIX_ANIMATE_PAUSE","PREFIX_ANIMATE_REVERSE","USER_AGENT","navigator","userAgent","match","LisnError","Error","LisnUsageError","constructor","message","name","LisnBugError","root","self","global","kebabToCamelCase","str","replace","m","toUpperCase","charAt","camelToKebabCase","toLowerCase","prefixName","MC","prefixCssVar","prefixCssJsVar","prefixData","s","timeNow","Date","now","bind","timeSince","startTime","hasDOM","document","getWindow","window","getDoc","getDocElement","documentElement","getDocScrollingElement","scrollingElement","getBody","body","getReadyState","readyState","getPointerType","event","isPointerEvent","pointerType","isMouseEvent","onAnimationFrame","requestAnimationFrame","createElement","tagName","options","createButton","label","tag","btn","setTabIndex","setAttr","isNullish","v","undefined","isEmpty","isIterableObject","isNonPrimitive","iterator","isArray","isInstanceOf","isObject","typeOf","isNumber","isString","isLiteralString","isBoolean","isFunction","isDoc","target","MouseEvent","PointerEvent","isTouchPointerEvent","isWheelEvent","WheelEvent","isKeyboardEvent","KeyboardEvent","isTouchEvent","TouchEvent","isElement","Element","isHTMLElement","HTMLElement","isNodeBAfterA","nodeA","nodeB","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","strReplace","replacement","setTimer","setTimeout","clearTimer","clearTimeout","getBoundingClientRect","el","copyBoundingRectProps","rect","x","left","right","y","top","bottom","querySelector","selector","querySelectorAll","docQuerySelector","docQuerySelectorAll","getElementById","id","getAttr","getAttribute","value","setAttribute","unsetAttr","delAttr","removeAttribute","includes","arr","startAt","indexOf","filter","array","filterFn","filterBlank","result","lengthOf","sizeOf","obj","_obj$size","size","_obj$length","length","preventDefault","arrayFrom","from","keysOf","keys","defineProperty","merge","a","assign","copyObject","promiseResolve","resolve","promiseAll","all","freeze","hasOwnProp","o","prop","prototype","hasOwnProperty","call","preventExtensions","stringify","JSON","floor","ceil","log2","sqrt","max","min","abs","round","pow","parseFloat","isNaN","Class","constructorOf","typeOrClassOf","_constructorOf","parentOf","element","parentElement","childrenOf","children","targetOf","currentTargetOf","currentTarget","classList","S_TABINDEX","getTabIndex","index","unsetTabIndex","remove","deleteObjKey","key","deleteKey","map","delete","elScrollTo","coords","behavior","scrollTo","newPromise","executor","newMap","entries","Map","newWeakMap","WeakMap","newSet","values","Set","newWeakSet","WeakSet","newIntersectionObserver","callback","IntersectionObserver","newResizeObserver","ResizeObserver","newMutationObserver","MutationObserver","usageError","msg","bugError","illegalConstructorError","useWhat","CONSOLE","console","debug","log","info","consoleWarn","warn","consoleError","error","settings","MH","mainScrollableElementSelector","contentWrappingAllowed","pageLoadTimeout","autoWidgets","scrollbarHideNative","scrollbarOnMobile","scrollbarPositionH","scrollbarPositionV","scrollbarAutoHide","scrollbarClickScroll","scrollbarDragScroll","scrollbarUseHandle","sameHeightDiffTolerance","sameHeightResizeThreshold","sameHeightDebounceWindow","sameHeightMinGap","sameHeightMaxFreeR","sameHeightMaxWidthR","deviceBreakpoints","mobile","tablet","desktop","aspectRatioBreakpoints","tall","square","wide","lightThemeClassName","darkThemeClassName","deltaLineHeight","deltaPageWidth","deltaPageHeight","verbosityLevel","remoteLoggerURL","remoteLoggerOnMobileOnly","roundNumTo","numDecimal","multiplicationFactor","isValidNum","isFinite","toNum","defaultValue","numValue","toInt","toNonNegNum","toPosNum","toNumWithBounds","limits","_limits$min","_limits$max","_ref","maxAbs","havingMaxAbs","sort","b","hAngle","normalizeAngle","atan2","degToRad","areParallel","vA","vB","angleDiffThreshold","angleA","angleB","areAntiParallel","distanceBetween","ptA","ptB","easeInOutQuad","sortedKeysByVal","descending","getBitmask","start","end","copyExistingKeys","fromObj","toObj","omitKeys","keysToRm","res","compareValuesIn","objA","objB","roundTo","valA","valB","toArrayIfSingle","toBoolean","formatAsString","maxLen","maybeConvertToString","joinAsString","separator","args","join","splitOn","input","trim","limit","output","addEntry","push","matchIndex","matchLength","_match$index","exec","slice","randId","nChars","segment","random","toString","toMargins","absoluteSize","_parts$","_parts$2","_parts$3","toPxValue","strValue","margin","parts","margins","objToStrKey","flattenForSorting","k","stringifyReplacer","nested","classStr","stack","validateStrList","checkFn","_toArray","toArray","_validateString","validateNumList","_toArray2","_validateNumber","validateNumber","validateBoolean","_validateBoolean","validateString","validateStringRequired","typeDescription","numVal","boolVal","BitSpaces","counter","newCounter","create","propNames","newBitSpace","get","_nBits","_bitmask","newBitSpaces","createBitSpace","spaces","bitmask","space","bit","has","p","bitmaskFor","pStart","pEnd","thisStart","thisEnd","nameOf","val","_propNames","enumerable","DOM_CATEGORIES_SPACE","scheduleHighPriorityTask","task","scheduler","postTask","priority","channel","MessageChannel","port1","onmessage","close","port2","postMessage","getDebouncedHandler","debounceWindow","handler","timer","lastArgs","waitForDelay","delay","wrapCallback","handlerOrCallback","isRemoved","callablesMap","invoke","wrapper","Callback","onRemove","rmFn","CallbackScheduler","_clear","fn","add","reject","_push","err","REMOVE","set","_defineProperty","queues","flush","queue","_running","_task","shift","item","_onRemove","logWarn","isMessageSeen","logError","discardMessages","isSeen","waitForMutateTime","scheduleDOMTask","scheduledDOMMutations","waitForMeasureTime","scheduledDOMMeasurements","waitForSubsequentMutateTime","then","waitForSubsequentMeasureTime","hasScheduledDOMTasks","runAllDOMTasks","runDOMTaskQueue","getVisibleContentChildren","e","isVisibleContentTag","isInlineTag","inlineTags","isDOMElement","SVGElement","MathMLElement","transitionElementNow","fromCls","toCls","cancelCSSTransitions","didChange","hasClass","removeClassesNow","addClassesNow","transitionElement","thisTransition","scheduleCSSTransition","_isCancelled","_finish","transitionDuration","getMaxTransitionDuration","displayElementNow","displayElement","undisplayElementNow","undisplayElement","showElement","hideElement","toggleDisplayElement","isElementUndisplayed","toggleShowElement","isElementHidden","className","contains","classNames","addClasses","removeClasses","toggleClassNow","force","toggle","toggleClass","getData","setDataNow","setData","setBooleanDataNow","setBooleanData","unsetBooleanDataNow","unsetBooleanData","delDataNow","delData","getComputedStylePropNow","getComputedStyle","getPropertyValue","getComputedStyleProp","getStylePropNow","_style","style","getStyleProp","setStylePropNow","_style2","setProperty","setStyleProp","delStylePropNow","_style3","removeProperty","delStyleProp","propVal","duration","disableInitialTransition","setHasModal","PREFIX_HAS_MODAL","delHasModal","setNumericStyleProps","props","transformFn","_transformFn","varPrefix","_prefix","cssPropSuffix","varName","_options$_numDecimal","thisNumDecimal","_numDecimal","currValue","_units","scheduledCSSTransitions","toClasses","scheduledTransitions","scheduledTransition","_cancel","isCancelled","wrapElementNow","createWrapperFor","ignoreMove","to","replaceWith","append","wrapElement","wrapChildrenNow","moveChildrenNow","moveElementNow","replaceElementNow","newElement","oldParent","newParent","child","parentEl","position","moveElement","getOrAssignID","prefix","domID","wrapScrollingContent","firstChild","PREFIX_CONTENT_WRAPPER","cloneElement","clone","cloneNode","insertGhostCloneNow","insertBefore","_wrapper","_clone","insertGhostClone","recordsToSkipOnce","getIgnoreMove","clearIgnoreMove","waitForElement","timeout","callFn","observer","disconnect","observe","childList","subtree","waitForElementOrInteractive","isInteractive","waitForInteractive","INTERACTIVE","COMPLETE","addEventListener","waitForComplete","waitForPageReady","pageIsReady","dispatchReady","isPageReady","newXMap","getDefaultV","XMap","newXMapGetter","newXWeakMap","XWeakMap","newXWeakMapGetter","XMapBase","sGet","prune","sk","rest","clear","DOMWatcher","config","getConfig","CONSTRUCTOR_KEY","reuse","_instances$get","myConfig","configStrKey","_root","instance","instances","buffer","t","_target","_categoryBitmask","_attributes","_addedTo","_removedFrom","allCallbacks","mutationHandler","records","record","recType","type","addedNodes","operation","ADDED_BIT","removedNodes","REMOVED_BIT","attributeName","ATTRIBUTE_BIT","shouldSkipOperation","processOperation","observers","_observer","_isActive","createCallback","_allCallbacks$get","_callback","deleteHandler","_options","setupOnMutation","userOptions","getOptions","activateObserver","skipInitial","_selector","childQueue","takeRecords","matches","initOperation","bufferedOperation","diffOperation","getDiffOperation","invokeCallback","activeCategories","entry","deactivateObserver","categoryBitmask","currentTargets","mutationType","_subtree","requestToSkip","removedFrom","addedTo","requestFrom","requestTo","onMutation","offMutation","_allCallbacks$get2","_config$subtree","CATEGORIES_BITS","categories","cat","operationA","operationB","attributes","attr","catch","getMaxDeltaDirection","deltaX","deltaY","getVectorDirection","vector","getOppositeDirection","direction","OPPOSITE_DIRECTIONS","getOppositeXYDirections","directions","directionList","isValidXYDirection","opposites","opposite","XY_DIRECTIONS","isValidDirection","DIRECTIONS","Z_DIRECTIONS","SCROLL_DIRECTIONS","callEventListener","handleEvent","addEventListenerTo","eventType","transformEventType","getEventHandlerData","thirdArg","wrappedHandler","supports","getBrowserSupport","_optionsArg","_options$capture","capture","once","removeEventListenerFrom","setEventHandlerData","_wrappedHandler","_thirdArg","data","removeEventListener","deleteEventHandlerData","preventSelect","undoPreventSelect","browserEventSupport","_pointer","passive","signal","optTest","opt","thisOpt","AbortController","dummyHandler","dummyElement","e__ignored","registeredEventHandlerData","getEventOptionsStr","finalOptions","_registeredEventHandl","optionsStr","_registeredEventHandl2","startsWith","isValidInputDevice","device","DEVICES","isValidIntent","intent","INTENTS","addDeltaZ","current","increment","MIN_DELTA_Z","getKeyGestureFragment","events","_options$scrollHeight","LINE","PAGE","CONTENT","scrollHeight","deltasUp","amount","deltasDown","deltasLeft","deltasRight","deltasIn","deltasOut","deltaZ","deltasForKey","SK_UP","SK_ARROWUP","SK_PAGEUP","Home","SK_DOWN","SK_ARROWDOWN","SK_PAGEDOWN","End","SK_LEFT","SK_ARROWLEFT","SK_RIGHT","SK_ARROWRIGHT","shiftKey","ctrlKey","theseDeltas","thisDeltaX","thisDeltaY","thisDeltaZ","thisIntent","SK_PAGE","SK_ARROW","getPointerGestureFragment","pointerEventClass","pointerUpType","filteredEvents","eType","buttons","numEvents","firstEvent","lastEvent","clientX","clientY","getTouchGestureFragment","_options$dragHoldTime","_options$dragNumFinge","moves","getTouchDiff","deltaThreshold","numMoves","holdTime","getHoldTime","canBeDrag","dragHoldTime","dragNumFingers","d","isSignificant","vectorA","vectorB","startDistance","startX","startY","endDistance","endX","endY","deltaSign","reverseScroll","isFirst","thisDirection","lastTouchEvent","touches","groupedTouches","touch","identifier","touchList","nTouches","firstTouch","lastTouch","firstStart","findIndex","firstMove","timeStamp","normalizeWheel","spinX","spinY","pixelX","pixelY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","deltaMode","getWheelGestureFragment","maxDelta","percentage","GestureWatcher","allListeners","getCallbackAndWrapper","setupOnGesture","_devices","_allListeners$get","listeners","setupListeners","_nCallbacks","_preventDefault","_nPreventDefault","_allListeners$get2","_remove","invokeCallbacks","_allListeners$get3","isTerminated","intents","_intents","hasAddedTabIndex","hasPreventedSelect","addOrRemoveListeners","action","listener","eventTypes","method","addInitialListener","initialListener","initiatingEvents","removeInitialListener","addOngoingListener","processEvent","ongoingEvents","removeOngoingListener","trackGesture","setGestureCssProps","totalDeltaX","totalDeltaY","totalDeltaZ","noTrackGesture","offGesture","onGesture","_allCallbacks$get3","_config$preventDefaul","_config$naturalTouchS","_config$touchDragHold","_config$touchDragNumF","_debounceWindow","_deltaThreshold","_angleDiffThreshold","_naturalTouchScroll","naturalTouchScroll","_touchDragHoldTime","touchDragHoldTime","_touchDragNumFingers","touchDragNumFingers","pointer","wheel","fragmentGetters","_options$minTotalDelt","_options$maxTotalDelt","_options$minTotalDelt2","_options$maxTotalDelt2","_options$minTotalDelt3","_options$maxTotalDelt3","_options$preventDefau","_options$naturalTouch","_options$touchDragHol","_options$touchDragNum","devices","_directions","_minTotalDeltaX","minTotalDeltaX","_maxTotalDeltaX","maxTotalDeltaX","_minTotalDeltaY","minTotalDeltaY","_maxTotalDeltaY","maxTotalDeltaY","_minTotalDeltaZ","minTotalDeltaZ","_maxTotalDeltaZ","maxTotalDeltaZ","logger","preventNextClick","eventQueue","debouncedWrapper","fragment","eventQueueCopy","_eventQueueCopy","_eventQueueCopy$","clearEventQueue","newTotalDeltaX","newTotalDeltaY","newTotalDeltaZ","time","preventDefaultActionFor","keepLastEvent","splice","isActualGesture","isPointerDown","focus","preventScroll","isValidDeviceList","isValidForType","S_DEVICES","ORDERED_DEVICES","isValidAspectRatioList","aspectR","S_ASPECTRS_CAMEL","ORDERED_ASPECTR","getOtherDevices","getOtherLayouts","getOtherAspectRatios","getLayoutBitmask","layoutBitmask","getBitmaskFromSpec","aspectRatios","ORDERED_DEVICE_NAMES","ORDERED_ASPECTR_NAMES","bitSpaces","NUM_LAYOUTS","LAYOUT_RANGE_REGEX","RegExp","getLayoutsFromBitmask","keyName","bitSpace","layouts","spec","oppositeBitmask","singleKeyName","rangeMatch","minLayout","maxLayout","lt","isScrollable","axis","active","noCache","_isScrollableCache$ge","cachedResult","isScrollableCache","offset","doCache","canScroll","dimension","IS_SCROLLABLE_CACHE_TIMEOUT","getClosestScrollable","ancestor","getCurrentScrollAction","scrollable","toScrollableOrDefault","currentScrollAction","_scrollable","currentScroll","cancel","cancelFn","_weCanInterrupt","scrollEvents","preventScrollHandler","_userCanInterrupt","promise","initiateScroll","thisScrollAction","waitFor","cleanup","isValidScrollDirection","getClientWidthNow","isScrollableBodyInQuirks","offsetWidth","getBorderWidth","getClientHeightNow","offsetHeight","fetchMainContentElement","init","mainContentElement","tryGetMainScrollableElement","mainScrollableElement","fetchMainScrollableElement","getDefaultScrollingElement","fetchScrollableElement","toScrollableOrMain","mappedScrollables","DIFF_THRESHOLD","arePositionsDifferent","getMain","_options$weCanInterru","_options$userCanInter","getTargetCoordinates","altTarget","_offset","_altTarget","_altOffset","altOffset","_duration","weCanInterrupt","userCanInterrupt","docScrollingElement","targetEl","getStartEndPosition","applyOffset","getEndPosition","startPosition","targetCoordinates","endPosition","scrollH","scrollW","clientH","clientW","previousTimeStamp","currentPosition","step","elapsed","progress","side","initPromise","contentElement","createOverlay","fetchOverlayOptions","canReuse","_id","_overlays$get2","existingOverlay","overlays","_parent","_overlayKey","overlay","createOnlyOverlay","isPercentageHOffset","isPercentageVOffset","needsContentWrapping","_userOptions$data2","_userOptions$id2","getCssProperties","fetchParent","parent","_data","getOverlayKey","finalCssProperties","userSuppliedParent","getEntryContentBox","contentBoxSize","getSizeFromInlineBlock","contentRect","getEntryBorderBox","fallbackToContent","borderBoxSize","NaN","isValidBox","box","ALL_BOXES","isValidDimension","ALL_DIMENSIONS","tryGetViewportOverlay","viewportOverlay","fetchViewportOverlay","fetchViewportSize","realtime","_MH$getDocScrollingEl","clientWidth","clientHeight","S_INLINE_SIZE","S_BLOCK_SIZE","XResizeObserver","targetsToSkip","observedTargets","resizeHandler","skipNum","borderObserver","contentObserver","observeTarget","targets","observeLater","unobserve","SizeWatcher","allSizeData","processEntry","xObserver","fetchCurrentSize","fetchElement","sizeData","getSizeData","border","content","fetchOptions","_options$box","_options$dimension","_options$MC$S_DEBOUNC","_element","_box","_dimension","_threshold","threshold","_resizeThreshold","setupOnResize","removeOnResize","currEntry","setSizeCssProps","latestData","thresholdsExceeded","hasExceededThreshold","trackSize","noTrackSize","onResize","offResize","resizeThreshold","lastThresholdData","dim","diff","borderBox","contentBox","borderWidth","borderHeight","contentWidth","contentHeight","LayoutWatcher","nonIntersectingBitmask","currentLayoutData","aspectRatio","fetchCurrentLayout","readyPromise","setupOverlays","createOverlays","_deviceBreakpoints","_aspectRatioBreakpoints","isReady","intersectionHandler","numEntries","getNonIntersecting","processLayoutChange","observeOptions","rootMargin","triggerOverlay","_layoutBitmask","setupOnLayout","layoutData","changeMatches","skipCallbacks","deviceBit","aspectRatioBit","onLayout","offLayout","VAR_BORDER_HEIGHT","PREFIX_DEVICE","PREFIX_ASPECTR","overlayPromises","overlayParent","parentHeightCss","getOverlayLayout","layout","thisLayoutData","prevLayoutData","isIntersecting","isValidPointerAction","POINTER_ACTIONS","PointerWatcher","setupOnPointer","startHandler","endHandler","startCallback","endCallback","_actions","listenerSetupFn","onPointer","offPointer","_config$preventSelect","_preventSelect","_options$preventSelec","actions","setupClickListener","toggleState","state","setupPointerListeners","startEventSuff","endEventSuff","startEvent","endEvent","startListener","endListener","click","hover","press","actionData","ScrollWatcher","allScrollData","activeListeners","fetchCurrentScroll","isScrollEvent","previousEventData","fetchScrollData","trackType","_trackType","setupOnScroll","fetchOnScrollOptions","eventTarget","_eventTarget","scrollData","TRACK_FULL","setupSizeTrack","listenerOptions","_nRealtime","scrollHandler","directionMatches","removeOnScroll","setScrollCssProps","scrollCallback","doc","resizeCallback","sizeWatcher","observedElements","allowedToWrap","domWatcher","onAddedCallback","_activeListeners$get","scroll","_options$amount","isVertical","sign","targetCoordinate","asFractionOf","_scrollDuration","fetchCurrentScrollAction","stopUserScrolling","stopScroll","immediate","trackScroll","noTrackScroll","onScroll","TRACK_REGULAR","offScroll","_scrollThreshold","scrollThreshold","scrollDuration","getEventTarget","userDirections","latestDirection","topDiff","leftDiff","checkTop","checkLeft","scrollTop","scrollLeft","scrollWidth","scrollTopFraction","scrollLeftFraction","prevScrollTop","prevScrollLeft","isValidScrollOffset","OFFSET_REGEX","isValidView","view","VIEWS","getOppositeViews","views","getViewsBitmask","VIEWS_SPACE","at","above","below","getViewsFromBitmask","viewsStr","viewsBitmask","parseScrollOffset","reference","XIntersectionObserver","selectedEntries","thresholds","ViewWatcher","allViewData","_rootMargin","fetchCurrentView","fetchData","entryOrElement","intersection","fetchIntersectionData","fetchViewData","setupOnView","viewData","rootBounds","setupInviewTrack","viewsToBitmask","_viewsBitmask","removeOnView","setViewCssProps","viewCallback","scrollWatcher","isInview","removeTrackCallback","scrollableAncestors","fetchScrollableAncestors","addTrackCallback","_config$_root","trackCallback","prevData","changed","viewChanged","enterOrLeaveCallback","target__ignored","trackView","noTrackView","onView","offView","_config$rootMargin","targetBounds","relative","entryOrTarget","vpSize","rootMargins","isCrossOrigin","IntersectionObserverEntry","boundingClientRect","fetchBounds","_targetBounds","_rootMargins","_rootBounds","_isIntersecting","_isCrossOrigin","width","height","_intersection$_isInte","vpHeight","vpWidth","fetchViews","hMiddle","vMiddle","useScrollingAncestor","delta","_left","_right","_top","_bottom","xView","yView","scrollingAncestor","overlayOptions","getOverlayOptions","ovrDimension","Widget","_instances$get2","destroy","isDisabled","isDestroyed","destroyPromise","enableCallbacks","disableCallbacks","destroyCallbacks","disable","enable","toggleEnable","onDisable","onEnable","elInstances","onDestroy","getElement","registerWidget","newWidget","configValidator","_options$selector","registeredWidgets","prefixedName","getDefaultWidgetSelector","thisConfigValidator","widgets","configSpecs","dataAttr","supportsMultiple","fetchWidgetConfig","theseWidgets","w","getWidgetConfig","validator","toOptionsObject","configPromises","fetchUniqueWidget","Type","widget","registerAction","newAction","registeredActions","newActionFromSpec","argsAndOptions","fetchAction","AddClass","register","_add","_toggle","getMethods","do","undo","RemoveClass","cls","iterateAnimations","webAnimationCallback","legacyCallback","animation","getAnimations","resetCssAnimationsNow","Animate","animate","GO_FORWARD","GO_BACKWARD","GO_TOGGLE","isInitial","setupAnimation","setupAnimationLegacy","pauseTillReady","isBackward","playbackRate","reverse","playState","play","pause","CSSAnimation","cancelHandler","onAnimationCancel","Animation","effect","KeyframeEffect","newAnimation","_MH$targetOf","animationName","isPaused","goBackwards","doPause","AnimatePlay","_play","_pause","PAUSE","AnimatePause","PLAY","TOGGLE","Display","_display","_undisplay","Undisplay","getReferenceElement","thisElement","referenceElement","relation","find","matchOp","refOrCls","PREFIX_REF","DATA_REF","getFirstReferenceElement","getLastReferenceElement","getThisReferenceElement","getNextReferenceElement","getPrevReferenceElement","waitForReferenceElement","getAllReferenceElements","allRefs","closest","getNextOrPrevReferenceElement","goBackward","numRefs","refIndex","i","currentIsAfter","Trigger","registerTrigger","_config$once","_config$oneWay","_config$doDelay","_config$undoDelay","oneWay","doDelay","undoDelay","lastCallId","callActions","newToggleState","myCallId","run","getActions","newTrigger","clsPref","_getData","baseConfigValidator","newBaseConfigValidator","allSpecs","TRIGGER_SEP","_config$actOn","tmp","configSpec","OPTION_PREF_CHAR","argSpec","allActionSpecs","ACTION_PREF_CHAR","actionTarget","actOn","actionSpec","actionArgsAndOptions","ACTION_ARGS_PREF_CHAR","Enable","ids","_enable","_disable","_toggleEnable","Disable","Run","_run","_reverse","triggerPromises","getTriggers","triggers","trigger","ScrollTo","offsetX","offsetY","newConfigValidator","watcher","canReverse","hasReversed","_validateNumber2","SetAttribute","isOn","setAttrs","on","attrName","off","Show","_show","_hide","Hide","isValidPosition","POSITIONS","Openable","properties","isModal","isOffcanvas","openCallbacks","closeCallbacks","isOpen","open","PREFIX_IS_OPEN","scrollWrapperToTop","outerWrapper","onOpen","onClose","getRoot","getContainer","container","getTriggerConfigs","setupElements","PREFIX_CLOSE_BTN","PREFIX_OPENS_ON_HOVER","S_ARIA_EXPANDED","S_ARIA_MODAL","MIN_CLICK_TIME_AFTER_HOVER_OPEN","S_ARROW_UP","S_ARROW_DOWN","S_ARROW_LEFT","S_ARROW_RIGHT","ARROW_TYPES","ICON_CLOSED_TYPES","ICON_OPEN_TYPES","isValidIconClosed","isValidIconOpen","triggerConfigValidator","autoClose","icon","iconClosed","iconOpen","getPrefixedNames","pref","_overlay","_innerWrapper","_outerWrapper","_content","_container","_trigger","_containerForSelect","_triggerForSelect","_contentId","findContainer","currWidget","childRef","findTriggers","prefixedNames","getTriggerSelector","suffix","contentId","getTriggersFrom","inputTriggers","wrapTriggers","triggerMap","addTrigger","triggerConfig","_properties$wrapTrigg","innerWrapper","placeholder","closeButton","closeBtn","elements","onSetup","hoverTimeOpened","isPointerOver","activeTrigger","isTrigger","shouldPreventDefault","_triggers$get$prevent","_triggers$get","usesHover","_triggers$get2","usesAutoClose","_triggers$get3","toggleTrigger","openIt","setIsPointerOver","pointerLeft","unsetIsPointerOver","pointerEntered","closeIfEscape","closeIfClickOutside","maybeSetupAutoCloseListeners","addOrRemove","setupOrCleanup","Open","widgetPromise","Pager","DUMMY_ID","WIDGET_NAME","_Pager$get","pages","toggles","switches","nextPrevSwitch","_next","nextSwitch","_prev","prevSwitch","pageSelector","PREFIX_PAGE__FOR_SELECT","toggleSelector","PREFIX_TOGGLE__FOR_SELECT","switchSelector","PREFIX_SWITCH__FOR_SELECT","nextSwitchSelector","PREFIX_NEXT_SWITCH__FOR_SELECT","prevSwitchSelector","PREFIX_PREV_SWITCH__FOR_SELECT","numPages","page","components","_pages","_toggles","_switches","_nextPrevSwitch","methods","nextPage","_nextPage","prevPage","_prevPage","goToPage","pageNum","_goToPage","disablePage","_disablePage","enablePage","_enablePage","togglePage","_togglePage","isPageDisabled","_isPageDisabled","getCurrentPage","_getCurrentPage","getPreviousPage","_getPreviousPage","getCurrentPageNum","_getCurrentPageNum","getPreviousPageNum","_getPreviousPageNum","onTransition","_onTransition","getPages","getSwitches","getToggles","MIN_TIME_BETWEEN_WHEEL","S_CURRENT","S_ARIA_CURRENT","S_COVERED","S_NEXT","S_TOTAL_PAGES","S_VISIBLE_PAGES","S_CURRENT_PAGE","S_PAGE_NUMBER","PREFIXED_NAME","PREFIX_ROOT","PREFIX_PAGE_CONTAINER","PREFIX_PAGE","PREFIX_STYLE","PREFIX_IS_FULLSCREEN","PREFIX_USE_PARALLAX","PREFIX_TOTAL_PAGES","PREFIX_VISIBLE_PAGES","PREFIX_CURRENT_PAGE","PREFIX_CURRENT_PAGE_IS_LAST","PREFIX_CURRENT_PAGE_IS_FIRST_ENABLED","PREFIX_CURRENT_PAGE_IS_LAST_ENABLED","PREFIX_PAGE_STATE","PREFIX_PAGE_NUMBER","VAR_CURRENT_PAGE","VAR_TOTAL_PAGES","VAR_VISIBLE_PAGES","VAR_VISIBLE_GAPS","VAR_TRANSLATED_PAGES","VAR_TRANSLATED_GAPS","VAR_PAGE_NUMBER","SUPPORTED_STYLES","isValidStyle","initialPage","pageSize","peek","fullscreen","parallax","horizontal","useGestures","bool","alignGestureDirection","fetchClosestScrollable","_getClosestScrollable","setPageNumber","lastPromise","setPageState","setCurrentPage","pagerEl","pageNumbers","isFirstEnabled","isLastEnabled","n","_total","_current","_pages$","_config$initialPage","_config$style","_config$pageSize","_config$peek","_config$fullscreen","_config$parallax","_config$horizontal","_config$useGestures","_config$alignGestureD","pageContainer","pagerStyle","isCarousel","minPageSize","enablePeek","isFullscreen","isParallax","isHorizontal","orientation","gestureWatcher","viewWatcher","recalculateCarouselProps","gap","containerSize","getNumVisiblePages","addPeek","numVisiblePages","currPageNum","prevPageNum","numHidden","hasPeek","visibleStart","isAtEdge","numTranslated","numVisibleGaps","fractionalNumVisiblePages","getGestureOptions","scrollToPager","transitionOnGesture","swapDirection","addWatchers","removeWatchers","getPageNumForEvent","toggleClickListener","switchClickListener","nextSwitchClickListener","prevSwitchClickListener","idx","disabledPages","callbacks","fetchScrollOptions","lastPageNum","lastTransition","canTransition","gestureData","targetPage","NextPage","PrevPage","GoToPage","EnablePage","DisablePage","altPageNum","currentNum","targetNum","CheckTrigger","HTMLInputElement","onToggle","checked","ClickTrigger","setupWatcher","PressTrigger","HoverTrigger","LayoutTrigger","otherDevices","otherAspectRatios","LoadTrigger","ScrollTrigger","oppositeDirections","ViewTrigger","oppositeViews","willAnimate","setupRepresentative","_ref2","_MH$classList","prev","previousElementSibling","prevChild"],"mappings":"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QAAQ,CAAC;AAEtE,MAAMI,mBAAmB,GAAIJ,QAA0B,IAC5D,IAAIK,gBAAgB,CAACL,QAAQ,CAAC;AAEzB,MAAMM,UAAU,GAAIC,GAAW,IAAK,IAAI9N,cAAc,CAAC8N,GAAG,CAAC;AAE3D,MAAMC,QAAQ,GAAID,GAAW,IAAK,IAAI1N,YAAY,CAAC0N,GAAG,CAAC;AAEvD,MAAME,uBAAuB,GAAIC,OAAe,IACrDJ,UAAU,CAAC,CAAA,yBAAA,EAA4BI,OAAO,CAAA,CAAA,CAAG,CAAC;AAEpD,MAAMC,OAAO,GAAGC,OAAO;AACKD,OAAO,CAACE,KAAK,CAAC3M,IAAI,CAACyM,OAAO;AAE5BA,OAAO,CAACG,GAAG,CAAC5M,IAAI,CAACyM,OAAO;AAEvBA,OAAO,CAACI,IAAI,CAAC7M,IAAI,CAACyM,OAAO;AAE7C,MAAMK,WAAW,GAAGL,OAAO,CAACM,IAAI,CAAC/M,IAAI,CAACyM,OAAO,CAAC;AAE9C,MAAMO,YAAY,GAAGP,OAAO,CAACQ,KAAK,CAACjN,IAAI,CAACyM,OAAO,CAAC;;AAEvD;;ACpaA;AACA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACaS,QAAQ,GAAGC,iBAAoB,CAAC;AAC3C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,6BAA6B,EAAE,IAAqB;AAEpD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,sBAAsB,EAAE,IAAI;AAE5B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE,IAAI;AAErB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,EAAE,KAAK;AAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,IAAI;AAEzB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,iBAAiB,EAAE,KAAK;AAExB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAE,QAAQ;AAE5B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAE,OAAO;AAE3B;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,iBAAiB,EAAE,EAAE;AAErB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,oBAAoB,EAAE,IAAI;AAE1B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,IAAI;AAEzB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAE,KAAK;AAEzB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,uBAAuB,EAAE,EAAE;AAE3B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,yBAAyB,EAAE,CAAC;AAE5B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,wBAAwB,EAAE,GAAG;AAE7B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,gBAAgB,EAAE,EAAE;AAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAE,GAAG;AAEvB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,GAAG;AAExB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,iBAAiB,EAAE;AACjB;AACJ;AACA;AACA;AACA;AACA;AACIC,IAAAA,MAAM,EAAE,CAAC;AAET;AACJ;AACA;AACA;AACA;AACA;AACI,IAAA,aAAa,EAAE,GAAG;AAElB;AACJ;AACA;AACA;AACA;AACA;AACIC,IAAAA,MAAM,EAAE,GAAG;AAAE;;AAEb;AACJ;AACA;AACA;AACA;IACIC,OAAO,EAAE,GAAG;GACb;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,sBAAsB,EAAE;AACtB;AACJ;AACA;AACA;AACA;AACA;AACI,IAAA,WAAW,EAAE,CAAC;AAAE;;AAEhB;AACJ;AACA;AACA;AACA;AACA;IACIC,IAAI,EAAE,CAAC,GAAG,EAAE;AAAE;;AAEd;AACJ;AACA;AACA;AACA;AACA;IACIC,MAAM,EAAE,CAAC,GAAG,CAAC;AAAE;;AAEf;AACJ;AACA;AACA;AACA;AACA;IACIC,IAAI,EAAE,CAAC,GAAG,CAAC;AAAE;;AAEb;AACJ;AACA;AACA;AACA;AACI,IAAA,WAAW,EAAE,EAAE,GAAG,CAAC;GACpB;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,aAAa;AAElC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,kBAAkB,EAAE,YAAY;AAEhC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE,EAAE;AAEnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,cAAc,EAAE,IAAI;AAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE,GAAG;AAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,cAAc,EAAE,CAAC;AAEjB;AACF;AACA;AACA;AACA;AACA;A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AACA;AACA;AACA;AACA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACO,MAAMsC,kBAAkB,GAAIC,MAAc,IAC/CthB,QAAW,CAACuhB,OAAO,EAAED,MAAM,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACO,MAAME,aAAa,GAAIC,MAAc,IAC1CzhB,QAAW,CAAC0hB,OAAO,EAAED,MAAM,CAAC;;AAoB9B;AACA;AACA;AACA;AACO,MAAME,SAAS,GAAGA,CAACC,OAAe,EAAEC,SAAiB,KAC1D7hB,GAAM,CAAC8hB,WAAW,EAAEF,OAAO,GAAGC,SAAS,CAAC;;AAE1C;AACA;AACA;AACA;AACO,MAAMN,OAAwB,GAAG,CACtClvB,KAAQ,EACRA,SAAY,EACZA,OAAU,EACVA,OAAU,CACF;;AAEV;AACA;AACA;AACA;AACO,MAAMqvB,OAAwB,GAAG,CACtCrvB,QAAW,EACXA,MAAS,EACTA,MAAS,EACTA,SAAY,CACJ;;AAEV;AACA,MAAMyvB,WAAW,GAAG,GAAG;;ACxGvB;AACA;AACA;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,qBAAqB,GAAGA,CACnCC,MAAgC,EAChC1tB,OAGC,KAC2B;AAAA,EAAA,IAAA2tB,qBAAA;AAC5B,EAAA,IAAI,CAACjiB,gBAAmB,CAACgiB,MAAM,CAAC,EAAE;IAChCA,MAAM,GAAG,CAACA,MAAM,CAAC;AACnB,EAAA;AAEA,EAAA,MAAME,IAAI,GAAGniB,QAAQ,CAAC8B,eAAe;AACrC,EAAA,MAAMsgB,IAAI,GAAGpiB,QAAQ,CAACgC,eAAe;AACrC,EAAA,MAAMqgB,OAAO,GA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CC,SAAS,GAAGrF,MAAM,CAACkF,UAAU,CAAC,CAACG,SAAS;AACnE,CAAC;;AC/RD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,cAAc,GAAIxzB,KAAuB,IAAgB;EACpE,IAAIyzB,KAAK,GAAG,CAAC;AACXC,IAAAA,KAAK,GAAG,CAAC;IACTC,MAAM,GAAG3zB,KAAK,CAAC4pB,MAAM;IACrBgK,MAAM,GAAG5zB,KAAK,CAAC6pB,MAAM;AAEvB,EAAA,MAAMuE,IAAI,GAAGniB,QAAQ,CAAC8B,eAAe;;AAErC;AACA,EAAA,IAAI/N,KAAK,CAAC6zB,MAAM,KAAK5yB,SAAS,EAAE;IAC9ByyB,KAAK,GAAG1zB,KAAK,CAAC6zB,MAAM;AACtB,EAAA;AACA,EAAA,IAAI7zB,KAAK,CAAC8zB,UAAU,KAAK7yB,S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A,MAAM,CAAC//B,KAAK,CAACizC,YAAY,CAAC,KAAK,IAAI;;AAErC;AACA;AACA;AACA;AACA;AACO,MAAMC,WAAW,GAAIC,IAAY,IACtCpkC,QAAW,CAACqkC,KAAK,EAAED,IAAI,CAAC;;AAU1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAME,gBAAgB,GAC3BC,KAAuC,IAC5B;AAKX,EAAA,MAAMz6B,OAAO,GAAG06B,eAAe,CAACD,KAAK,CAAC;EACtC,IAAIpU,eAAe,GAAGsU,WAAW,CAAC36B,OAAO,GAAG,CAACA,OAAO,CAAC;;AAErD;AACA;AACA;AACA;AACA,EAAA,IAAIA,OAAO,KAAK26B,WAAW,CAACz6B,GAAG,CAAC06B,EAAE,EAAE;AAClC;IACA,IAAI,EAAE56B,OAAO,GAAG26B,WAAW,CAACz6B,GAAG,CAAC26B,KAAK,CAAC,EAAE;AACtCxU,MAAAA,eAAe,IAAI,CAACsU,WAAW,CAACz6B,GAAG,CAAC46B,KAAK;AAC3C,IAAA;IAEA,IAAI,EAAE96B,OAAO,GAAG26B,WAAW,CAACz6B,GAAG,CAAC46B,KAAK,CAAC,EAAE;AACtCzU,MAAAA,eAAe,IAAI,CAACsU,WAAW,CAACz6B,GAAG,CAAC26B,KAAK;AAC3C,IAAA;IAEA,IAAI,EAAE76B,OAAO,GAAG26B,WAAW,CAACz6B,GAAG,CAACnS,IAAI,CAAC,EAAE;AACrCs4B,MAAAA,eAAe,IAAI,CAACsU,WAAW,CAACz6B,GAAG,CAAClS,KAAK;AAC3C,IAAA;IAEA,IAAI,EAAEgS,OAAO,GAAG26B,WAAW,CAACz6B,GAAG,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S,GAAG,CAAC,GAAGF,OAAO,KAAK;AAC/B,MAAA,KAAK,MAAMnjC,MAAM,IAAImjC,OAAO,EAAE;AAC5Bj5B,QAAAA,SAAY,CAAC24B,eAAe,EAAE7iC,MAAM,CAAC;AACrC+gB,QAAAA,QAAQ,CAACsiB,SAAS,CAACrjC,MAAM,CAAC;AAC5B,MAAA;IACF,CAAC;IAED,IAAI,CAACghB,UAAU,GAAG,MAAM;AACtB6hB,MAAAA,eAAe,GAAG34B,UAAa,EAAE;MACjC6W,QAAQ,CAACC,UAAU,EAAE;IACvB,CAAC;IAED,IAAI,CAAC4E,WAAW,GAAG,MAAM7E,QAAQ,CAAC6E,WAAW,EAAE;AACjD,EAAA;AACF;;ACrIA;AACA;AACA;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM2pB,WAAW,CAAC;AACvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOE;AACF;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOE;AACF;AACA;AACA;AACA;AACA;;AAME;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAME;AACF;AACA;AACA;AACE,EAAA,OAAOh8B,MAAMA,CAACsP,MAAyB,GAAG,EAAE,EAAE;IAC5C,OAAO,IAAI0sB,WAAW,CAACzsB,SAAS,CAACD,MAAM,CAAC,EAAEE,eAAe,CAAC;AAC5D,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACE,EAAA,OAAOC,KAAKA,CAACH,MAAyB,GAAG,EAAE,EAAE;AAAA,IAAA,IAAAI,cAAA;AAC3C,IAAA,MAAMC,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AG9C,OAAO,CAAC7nC,GAAG,CAAChN,OAAO,EAAEhE,EAAE,CAAC;IACtC,IAAI,CAAC27C,OAAO,EAAE;AACZ,MAAA,MAAMroC,YAAY,CAAC,CAAC,CAAC,CAAC;MACtBqoC,OAAO,GAAG9C,OAAO,CAAC7nC,GAAG,CAAChN,OAAO,EAAEhE,EAAE,CAAC;MAElC,IAAI,CAAC27C,OAAO,EAAE;QACZxmC,OAAO,CACL,sBAAsBnV,EAAE,CAAA,aAAA,EAAgBiN,cAAc,CAACjJ,OAAO,CAAC,CAAA,CACjE,CAAC;AACD,QAAA;AACF,MAAA;AACF,IAAA;AAEA03C,IAAAA,QAAQ,CAAC5tC,IAAI,CAAC6tC,OAAO,CAAC;AACxB,EAAA;AAEA,EAAA,OAAOD,QAAQ;AACjB,CAAC;;AC/OD;AACA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAME,QAAQ,CAAmB;AACtC;AACF;AACA;;AAGE;AACF;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;;EAGE,OAAO3H,QAAQA,GAAG;IAChBP,cAAc,CACZ,WAAW,EACX,CAAC1vC,OAAO,EAAEsJ,IAAI,EAAE6S,MAAM,KAAK;MACzB,MAAMqY,MAAM,GAAGrY,MAAM,GACjB;QACE9gB,IAAI,EAAE8gB,MAAM,CAAC07B,OAAO;QACpBr8C,GAAG,EAAE2gB,MAAM,CAAC27B;AACd,OAAC,GACDv/C,SAAS;AAEb,MAAA,OAAO,IAAIq/C,QAAQ,CAAC53C,OAAO,EAAE;AAC3Bg1B,QAAAA,UA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,aAAa,CAAC9sC,IAAI,CAACynC,IAAI,CAAC;IACxC,IAAI,CAACjJ,IAAI,GAAG,MAAMsO,aAAa,CAAC9sC,IAAI,CAAChD,KAAK,CAAC;AAC3C,IAAA,IAAI,CAACjZ,QAAW,CAAC,GAAG,MAAM+oD,aAAa,CAAC9sC,IAAI,CAAC6C,MAAM,CAAC;AACtD,EAAA;AACF;;AC/DA;AACA;AACA;;;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMkqC,KAAK,SAAS1R,MAAM,CAAC;AAChC;AACF;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;AACA;;AAGE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ACnD;AACH,CAAC;;ACxXD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM8I,YAAY,SAASjV,OAAO,CAAC;EAGxC,OAAO5E,QAAQA,GAAG;IAChB6E,eAAe,CACb,OAAO,EACP,CAAC90C,OAAO,EAAEsJ,IAAI,EAAEo5B,OAAO,EAAEvmB,MAAM,KAC7B,IAAI2tC,YAAY,CAAC9pD,OAAO,EAAE0iC,OAAO,EAAEvmB,MAAM,CAAC,EAC5C47B,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACEljD,WAAWA,CACTmL,OAAgB,EAChB0iC,OAAiB,EACjBvmB,MAA0B,GAAG,EAAE,EAC/B;AACA,IAAA,KAAK,CAACnc,OAAO,EAAE0iC,OAAO,EAAEvmB,MAAM,CAAC;IAC/B,IAAI,CAACC,SAAS,GAAG,MAAM5Y,UAAa,CAAC2Y,MAAM,CAAC;AAE5C,IAAA,IAAI,CAAC3Y,QAAW,CAACk/B,OAAO,CAAC,EAAE;AACzB,MAAA;AACF,IAAA;IAEA,MAAMppC,MAAM,GAAGkK,QAAW,CAAC2Y,MAAM,CAAC,IAAInc,OAAO;IAE7C,IAAI,CAACwD,YAAe,CAAClK,MAAM,EAAEywD,gBAAgB,CAAC,EAAE;AAC9C,MAAA;AACF,IAAA;AAEA,IAAA,MAAMC,QAAQ,GAAGA,MAAO1wD,MAAM,CAAC2wD,OAAO,GAAG,IAAI,CAACvU,GAAG,EAAE,GAAG,IAAI,CAAChE,OAAO,EAAG;AAErEpvB,IAAAA,kBAAkB,CAAChpB,MAAM,EAAE,QAAQ,EAAE0wD,QAAQ,CAAC;IAE9C,IAAI,CAAC9b,SAAS,CAAC,MAAM;AACnBhrB,MAAAA,uBAAuB,CAAC5pB,MAAM,EAAE,QAAQ,EAAE0wD,QAAQ,CAAC;AACrD,IAAA,CAAC,CAAC;AACJ,EAAA;AACF;;AAEA;AACA;AACA;AACA;;AAUA;;AAEA,MAAMjS,oBAAiE,GACrE/3C,OAAO,IACJ;EACH,OAAO;AACL1G,IAAAA,MAAM,EAAEA,CAACwH,GAAG,EAAE3E,KAAK,KAAA;AAAA,MAAA,IAAAuK,IAAA;MAAA,OAAA,CAAAA,IAAA,GAChBlD,eAAkB,CAACrH,KAAK,CAAC,GACtBg4C,uBAAuB,CAACh4C,KAAK,EAAE6D,OAAO,CAAC,GACvC,IAAI,cAAA0G,IAAA,KAAA,MAAA,GAAAA,IAAA,GAAKnO,SAAS;AAAA,IAAA;GACzB;AACH,CAAC;;ACxKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM2xD,YAAY,SAASrV,OAAO,CAAC;EAGxC,OAAO5E,QAAQA,GAAG;IAChB6E,eAAe,CACbj/C,OAAU,EACV,CAACmK,OAAO,EAAEsJ,IAAI,EAAEo5B,OAAO,EAAEvmB,MAAM,KAC7B,IAAI+tC,YAAY,CAAClqD,OAAO,EAAE0iC,OAAO,EAAEvmB,MAAM,CAAC,EAC5C47B,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACEljD,WAAWA,CACTmL,OAAgB,EAChB0iC,OAAiB,EACjBvmB,MAA4B,GAAG,EAAE,EACjC;AACA,IAAA,KAAK,CAACnc,OAAO,EAAE0iC,OAAO,EAAEvmB,MAAM,CAAC;IAC/B,IAAI,CAACC,SAAS,GAAG,MAAM5Y,UAAa,CAAC2Y,MAAM,CAAC;AAE5CguC,IAAAA,YAAY,CAAC,IAAI,EAAEnqD,OAAO,EAAE0iC,OAAO,EAAEvmB,MAAM,EAAEtmB,OAAU,CAAC;AAC1D,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMu0D,YAAY,SAASvV,OAAO,CAAC;EAGxC,OAAO5E,QAAQA,GAAG;IAChB6E,eAAe,CACbj/C,OAAU,EACV,CAACmK,OAAO,EAAEsJ,IAAI,EAAEo5B,OAAO,EAAEvmB,MAAM,KAC7B,IAAIiuC,YAAY,CAACpqD,OAAO,EAAE0iC,OAAO,EAAEvmB,MAAM,CAAC,EAC5C47B,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACEljD,WAAWA,CACTmL,OAAgB,EAChB0iC,OAAiB,EACjBvmB,MAA4B,GAAG,EAAE,EACjC;AACA,IAAA,KAAK,CAACnc,OAAO,EAAE0iC,OAAO,EAAEvmB,MAAM,CA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMgxD,aAAa,SAASzV,OAAO,CAAC;EAGzC,OAAO5E,QAAQA,GAAG;IAChB6E,eAAe,CACb,QAAQ,EACR,CAAC90C,OAAO,EAAEsJ,IAAI,EAAEo5B,OAAO,EAAEvmB,MAAM,KAAK;AAClC,MAAA,OAAO,IAAImuC,aAAa,CACtBtqD,OAAO,EACP0iC,OAAO,EACPl/B,MAAS,CAAC2Y,MAAM,EAAE;AAChBolB,QAAAA,MAAM,EAAEj1B,sBAAsB,CAC5B,QAAQ,EACR9I,UAAa,CACXA,UAAa,CAAC8F,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,aAAa,EAAE,KAAK,CAAC,EAClD,OAAO,EACP,MACF,CAAC,EACAnN,KAAK,IACJ81B,iBAAiB,CAAC91B,KAAK,CAAC,IAAIk2B,sBAAsB,CAACl2B,KAAK,CAC5D;AACF,OAAC,CACH,CAAC;IACH,CAAC,EACD47C,oBACF,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEljD,EAAAA,WAAWA,CACTmL,OAAgB,EAChB0iC,OAAiB,EACjBvmB,MAA2B,EAC3B;IACA,MAAMolB,MAAM,GAAG,CAAAplB,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,MAAA,GAAA,MAAA,GAANA,MAAM,CAAEolB,MAAM,KAAI,EAAE;IACnC,IAAI,CAACA,MAAM,EAAE;AACX,MAAA,MAAM/9B,UAAa,CAAC,sBAAsB,CAAC;AAC7C,IAAA;AAEA,IAAA,KAAK,CAACxD,OAAO,EAAE0iC,OAAO,EAAEvmB,MAAM,CAAC;IAC/B,IAAI,CAACC,SAAS,GAAG,MAAM5Y,UAAa,CAAC2Y,MAAM,CAAC;AAE5C,IAAA,IAAI,CAAC3Y,QAAW,CAACk/B,OAAO,CAAC,EAAE;AACzB,MAAA;AACF,IAAA;IAEA,IAAI3S,OAA8B,GAAG,EAAE;IACvC,IAAIgD,YAA6C,GAAG,EAAE;IACtD,IAAIw3B,YAAsB,GAAG,EAAE;IAC/B,IAAIC,iBAAgC,GAAG,EAAE;AAEzC,IAAA,IAAIv4B,iBAAiB,CAACsP,MAAM,CAAC,EAAE;AAC7BxR,MAAAA,OAAO,GAAGwR,MAAM;AAChBgpB,MAAAA,YAAY,GAAG93B,eAAe,CAAC8O,MAAM,CAAC;AACxC,IAAA,CAAC,MAAM;AACLxO,MAAAA,YAAY,GAAGwO,MAAM;AACrBipB,MAAAA,iBAAiB,GAAG73B,oBAAoB,CAAC4O,MAAM,CAAC;AAClD,IAAA;AAEA,IAAA,MAAMtsC,IAAI,GAAGknB,MAAM,CAAClnB,IAAI;AACxB,IAAA,MAAM+iD,OAAO,GAAG3Y,aAAa,CAAC/iB,KAAK,CAAC;AAAErnB,MAAAA;AAAK,KAAC,CAAC;AAE7C+iD,IAAAA,OAAO,CAAClX,QAAQ,CAAC,IAAI,CAAC4U,GAAG,EAAE;MAAE3lB,OAAO;AAAEgD,MAAAA;AAAa,KAAC,CAAC;AAErD,IAAA,IAAIvvB,QAAW,CAAC+mD,YAAY,CAAC,IAAI/mD,QAAW,CAACgnD,iBAAiB,CAAC,EAAE;AAC/DxS,MAAAA,OAAO,CAAClX,QAAQ,CAAC,IAAI,CAAC4Q,OAAO,EAAE;AAC7B3hB,QAAAA,OAAO,EAAEw6B,YAAY;AACrBx3B,QAAAA,YAAY,EAAEy3B;AAChB,OAAC,CAAC;AACJ,IAAA;AACF,EAAA;AACF;;AAEA;AACA;AACA;AACA;;AAqBA;;AAEA,MAAMzS,oBAEL,GAAI/3C,OAAO,IAAK;EACf,OAAO;AACL/K,IAAAA,IAAI,EAAE,OAAO6L,GAAG,EAAE3E,KAAK,KAAK;AAC1B,MAAA,MAAMlH,IAAI,GAAGuO,eAAkB,CAACrH,KAAK,CAAC,GAClC,MAAMg4C,uBAAuB,CAACh4C,KAAK,EAAE6D,OAAO,CAAC,GAC7CzH,SAAS;MACb,IAAItD,IAAI,IAAI,CAACuO,aAAgB,CAACvO,IAAI,CAAC,EAAE;AACnC,QAAA,MAAMuO,UAAa,CAAC,0BAA0B,CAAC;AACjD,MAAA;AACA,MAAA,OAAOvO,IAAI;AACb,IAAA;GACD;AACH,CAAC;;AC5PD;AACA;AACA;AACA;AACA;AACA;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMw1D,WAAW,SAAS5V,OAAO,CAAC;EAGvC,OAAO5E,QAAQA,GAAG;IAChB6E,eAAe,CACb,MAAM,EACN,CAAC90C,OAAO,EAAEsJ,IAAI,EAAEo5B,OAAO,EAAEvmB,MAAM,KAC7B,IAAIsuC,WAAW,CAACzqD,OAAO,EAAE0iC,OAAO,EAAEvmB,MAAM,CAC5C,CAAC;AACH,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEtnB,EAAAA,WAAWA,CAACmL,OAAgB,EAAE0iC,OAAiB,EAAEvmB,MAAqB,EAAE;AACtE,IAAA,KAAK,CAACnc,OAAO,EAAE0iC,OAAO,EAAEvmB,MAAM,CAAC;IAC/B,IAAI,CAACC,SAAS,GAAG,MAAM5Y,UAAa,CAAC2Y,MAAM,CAAC;AAE5C,IAAA,IAAI,CAAC3Y,QAAW,CAACk/B,OAAO,CAAC,EAAE;AACzB,MAAA;AACF,IAAA;IAEAznB,gBAAgB,EAAE,CAACnJ,IAAI,CAAC,IAAI,CAAC4jC,GAAG,CAAC;AACnC,EAAA;AACF;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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"}