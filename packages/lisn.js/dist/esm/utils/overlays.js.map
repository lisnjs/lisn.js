{"version":3,"file":"overlays.js","names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","MC","MH","settings","addClasses","addClassesNow","setDataNow","setStylePropNow","moveElement","wrapScrollingContent","waitForElement","waitForMutateTime","logWarn","camelToKebabCase","objToStrKey","isScrollable","tryGetMainContentElement","fetchMainContentElement","newXWeakMap","getOverlay","userOptions","_overlays$get","options","tryGetOverlayOptions","overlays","get","_parent","_overlayKey","createOverlay","_ref","_callee","canReuse","_overlays$get2","existingOverlay","overlay","isPercentageHOffset","isPercentageVOffset","needsContentWrapping","parentEl","_callee$","_context","fetchOverlayOptions","_id","parentOf","createOnlyOverlay","sGet","set","id","includes","_style","left","right","top","bottom","axis","contentWrappingAllowed","position","S_ABSOLUTE","prefixName","to","_x","newMap","_userOptions$data","_userOptions$id","style","getCssProperties","data","tryGetParent","parent","_data","getOverlayKey","_ref2","_callee2","_userOptions$data2","_userOptions$id2","_callee2$","_context2","fetchParent","_x2","finalCssProperties","merge","S_FIXED","isEmpty","userSuppliedParent","getBody","_ref3","_callee3","_callee3$","_context3","t0","t1","_x3","_x4","createElement","_iterator","_createForOfIteratorHelper","keysOf","_step","attr","err","_iterator2","_step2","prop"],"sources":["../../../src/ts/utils/overlays.ts"],"sourcesContent":["/**\n * @module Utils\n */\n\nimport * as MC from \"@lisn/globals/minification-constants\";\nimport * as MH from \"@lisn/globals/minification-helpers\";\n\nimport { settings } from \"@lisn/globals/settings\";\n\nimport {\n  addClasses,\n  addClassesNow,\n  setDataNow,\n  setStylePropNow,\n} from \"@lisn/utils/css-alter\";\nimport { moveElement, wrapScrollingContent } from \"@lisn/utils/dom-alter\";\nimport { waitForElement } from \"@lisn/utils/dom-events\";\nimport { waitForMutateTime } from \"@lisn/utils/dom-optimize\";\nimport { logWarn } from \"@lisn/utils/log\";\nimport { camelToKebabCase, objToStrKey } from \"@lisn/utils/text\";\nimport {\n  isScrollable,\n  tryGetMainContentElement,\n  fetchMainContentElement,\n} from \"@lisn/utils/scroll\";\n\nimport { newXWeakMap } from \"@lisn/modules/x-map\";\n\n/**\n * @category Overlays\n * @interface\n */\nexport type OverlayOptions = {\n  /**\n   * The parent element to insert the overlay into.\n   *\n   * If not given, then:\n   * - if the overlay is to have a `position: fixed`, then `document.body` is used\n   * - otherwise,\n   *   {@link Watchers/ScrollWatcher.ScrollWatcher.fetchMainContentElement | ScrollWatcher.fetchMainContentElement} is\n   *   used\n   */\n  parent?: HTMLElement;\n\n  /**\n   * If set, then it will be assigned as the DOM element ID for the new\n   * overlay.\n   *\n   * Furthermore, the new overlay will be created and will not be saved for\n   * future reuse.\n   *\n   * By default, if `id` is not given, the overlay will be saved, and if\n   * {@link createOverlay} is called again with the same `style`, `data` and\n   * parent, the previous overlay is returned.\n   */\n  id?: string;\n\n  /**\n   * Every entry in this object will be set on the `style` of the new overlay.\n   *\n   * **IMPORTANT:** By default overlays are positioned absolutely, so if you need\n   * another positioning, override this here by setting a `position` key in\n   * `style`. If position is either \"absolute\" (by default or explicitly set) or\n   * \"fixed\", and none of `top` or `bottom` is given, `top: 0` is set; and\n   * similarly, if none of `left` or `right` is given, `left: 0` is set.\n   */\n  style?: Record<string, string>;\n\n  /**\n   * Every entry in this object will be set as a data attribute on the new\n   * overlay.\n   *\n   * Keys can be either kebab-case or camelCase (they will be converted if\n   * needed). Do _not_ include the \"data-\" prefix which will be added\n   * automatically. E.g. both \"foo-bar\" and \"fooBar\" will result in\n   * \"data-foo-bar\" being set.\n   */\n  data?: Record<string, string>;\n};\n\n/**\n * Returns an existing overlay for this specification. If the overlay was just\n * created it may not yet be attached to the DOM.\n *\n * @category Overlays\n */\nexport const getOverlay = (userOptions?: OverlayOptions) => {\n  const options = tryGetOverlayOptions(userOptions);\n  if (!options) {\n    return null;\n  }\n\n  return overlays.get(options._parent)?.get(options._overlayKey) || null;\n};\n\n/**\n * Creates a new overlay, and inserts it into the DOM as soon as\n * {@link waitForMutateTime} resolves, or returns an already existing matching\n * overlay.\n *\n * **Note** that if {@link OverlayOptions.id} is set, a new overlay will\n * _always_ be created.\n *\n * @category Overlays\n */\nexport const createOverlay = async (userOptions?: OverlayOptions) => {\n  const options = await fetchOverlayOptions(userOptions);\n  const canReuse = !options._id;\n\n  if (canReuse) {\n    const existingOverlay = overlays\n      .get(options._parent)\n      ?.get(options._overlayKey);\n\n    if (existingOverlay) {\n      if (!MH.parentOf(existingOverlay)) {\n        // not yet inserted into the DOM, so wait until it is\n        await waitForMutateTime();\n      }\n      return existingOverlay;\n    }\n  }\n\n  // Create a new one\n  const overlay = createOnlyOverlay(options);\n  if (canReuse) {\n    // Save it now before awating, so that concurrent requests to create the\n    // same one use it\n    overlays.sGet(options._parent).set(options._overlayKey, overlay);\n  } else {\n    overlay.id = options._id;\n  }\n\n  const isPercentageHOffset = MH.includes(\n    (options._style.left || \"\") + (options._style.right || \"\"),\n    \"%\",\n  );\n\n  const isPercentageVOffset = MH.includes(\n    (options._style.top || \"\") + (options._style.bottom || \"\"),\n    \"%\",\n  );\n\n  let needsContentWrapping = false;\n  let parentEl = options._parent;\n  if (isPercentageHOffset || isPercentageVOffset) {\n    needsContentWrapping =\n      (isPercentageHOffset && isScrollable(parentEl, { axis: \"x\" })) ||\n      (isPercentageVOffset && isScrollable(parentEl, { axis: \"y\" }));\n  }\n\n  if (needsContentWrapping) {\n    if (settings.contentWrappingAllowed) {\n      parentEl = await wrapScrollingContent(parentEl);\n    } else {\n      logWarn(\n        \"Percentage offset view trigger with scrolling root requires contentWrappingAllowed\",\n      );\n    }\n  }\n\n  if (options._style.position === MC.S_ABSOLUTE) {\n    // Ensure parent has non-static positioning\n    addClasses(parentEl, MH.prefixName(\"overlay-container\"));\n  }\n\n  await moveElement(overlay, { to: parentEl });\n\n  return overlay;\n};\n\n// ----------------------------------------\n\ntype OverlayOptionsInternal = {\n  _parent: HTMLElement;\n  _id: string;\n  _style: Record<string, string>;\n  _data: Record<string, string>;\n  _overlayKey: string;\n};\n\nconst overlays = newXWeakMap<HTMLElement, Map<string, HTMLElement>>(() =>\n  MH.newMap(),\n);\n\nconst tryGetOverlayOptions = (\n  userOptions: OverlayOptions | undefined,\n): OverlayOptionsInternal | null => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = tryGetParent(userOptions?.parent, style.position);\n  if (!parentEl) {\n    return null;\n  }\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst fetchOverlayOptions = async (\n  userOptions: OverlayOptions | undefined,\n): Promise<OverlayOptionsInternal> => {\n  const style = getCssProperties(userOptions?.style);\n  const data = userOptions?.data ?? {};\n  const parentEl = await fetchParent(userOptions?.parent, style.position);\n\n  return {\n    _parent: parentEl,\n    _id: userOptions?.id ?? \"\",\n    _style: style,\n    _data: data,\n    _overlayKey: getOverlayKey(style, data),\n  };\n};\n\nconst getOverlayKey = (\n  style: Record<string, string>,\n  data: Record<string, string>,\n) => objToStrKey(style) + \"|\" + objToStrKey(data);\n\nconst getCssProperties = (style: Record<string, string> | undefined) => {\n  const finalCssProperties: Record<string, string> = MH.merge(\n    { position: MC.S_ABSOLUTE }, // default\n    style,\n  );\n\n  if (\n    finalCssProperties.position === MC.S_ABSOLUTE ||\n    finalCssProperties.position === MC.S_FIXED\n  ) {\n    if (\n      MH.isEmpty(finalCssProperties.top) &&\n      MH.isEmpty(finalCssProperties.bottom)\n    ) {\n      finalCssProperties.top = \"0px\";\n    }\n\n    if (\n      MH.isEmpty(finalCssProperties.left) &&\n      MH.isEmpty(finalCssProperties.right)\n    ) {\n      finalCssProperties.left = \"0px\";\n    }\n  }\n\n  return finalCssProperties;\n};\n\nconst tryGetParent = (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED ? MH.getBody() : tryGetMainContentElement());\n\nconst fetchParent = async (\n  userSuppliedParent: HTMLElement | undefined | null,\n  position: string,\n) =>\n  userSuppliedParent ??\n  (position === MC.S_FIXED\n    ? await waitForElement(MH.getBody)\n    : await fetchMainContentElement());\n\nconst createOnlyOverlay = (options: OverlayOptionsInternal) => {\n  const overlay = MH.createElement(\"div\");\n\n  addClassesNow(overlay, MH.prefixName(\"overlay\"));\n\n  const data = options._data;\n  for (const attr of MH.keysOf(data)) {\n    setDataNow(overlay, camelToKebabCase(attr), data[attr]);\n  }\n\n  const style = options._style;\n  for (const prop of MH.keysOf(style)) {\n    setStylePropNow(overlay, prop, style[prop]);\n  }\n\n  return overlay;\n};\n"],"mappings":"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","ignoreList":[]}